<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1366" onload="init(evt)" viewBox="0 0 1200 1366" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1366" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1349.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1349.00"> </text><svg id="frames" x="10" width="1180"><g><title>perf (5 samples, 0.03%)</title><rect x="0.0000%" y="1301" width="0.0311%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="1311.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="0.0000%" y="1285" width="0.0311%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="1295.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="0.0000%" y="1269" width="0.0311%" height="15" fill="rgb(221,193,54)"/><text x="0.2500%" y="1279.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="0.0000%" y="1253" width="0.0311%" height="15" fill="rgb(248,212,6)"/><text x="0.2500%" y="1263.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="0.0000%" y="1237" width="0.0311%" height="15" fill="rgb(208,68,35)"/><text x="0.2500%" y="1247.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="0.0000%" y="1221" width="0.0311%" height="15" fill="rgb(232,128,0)"/><text x="0.2500%" y="1231.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="0.0000%" y="1205" width="0.0311%" height="15" fill="rgb(207,160,47)"/><text x="0.2500%" y="1215.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="0.0000%" y="1189" width="0.0311%" height="15" fill="rgb(228,23,34)"/><text x="0.2500%" y="1199.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="0.0000%" y="1173" width="0.0311%" height="15" fill="rgb(218,30,26)"/><text x="0.2500%" y="1183.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="0.0000%" y="1157" width="0.0311%" height="15" fill="rgb(220,122,19)"/><text x="0.2500%" y="1167.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="0.0000%" y="1141" width="0.0311%" height="15" fill="rgb(250,228,42)"/><text x="0.2500%" y="1151.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="0.0000%" y="1125" width="0.0311%" height="15" fill="rgb(240,193,28)"/><text x="0.2500%" y="1135.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="0.0000%" y="1109" width="0.0311%" height="15" fill="rgb(216,20,37)"/><text x="0.2500%" y="1119.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="0.0000%" y="1093" width="0.0311%" height="15" fill="rgb(206,188,39)"/><text x="0.2500%" y="1103.50"></text></g><g><title>&lt;tokio::loom::std::atomic_usize::AtomicUsize as core::ops::deref::Deref&gt;::deref (2 samples, 0.01%)</title><rect x="0.0373%" y="1269" width="0.0124%" height="15" fill="rgb(217,207,13)"/><text x="0.2873%" y="1279.50"></text></g><g><title>&lt;tokio::sync::notify::Notified as core::future::future::Future&gt;::poll (3 samples, 0.02%)</title><rect x="0.0497%" y="1269" width="0.0186%" height="15" fill="rgb(231,73,38)"/><text x="0.2997%" y="1279.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="0.0746%" y="1269" width="0.0124%" height="15" fill="rgb(225,20,46)"/><text x="0.3246%" y="1279.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (3 samples, 0.02%)</title><rect x="0.0932%" y="1269" width="0.0186%" height="15" fill="rgb(210,31,41)"/><text x="0.3432%" y="1279.50"></text></g><g><title>syscall (4 samples, 0.02%)</title><rect x="0.1181%" y="1269" width="0.0249%" height="15" fill="rgb(221,200,47)"/><text x="0.3681%" y="1279.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="0.1243%" y="1253" width="0.0186%" height="15" fill="rgb(226,26,5)"/><text x="0.3743%" y="1263.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (2 samples, 0.01%)</title><rect x="0.1429%" y="1269" width="0.0124%" height="15" fill="rgb(249,33,26)"/><text x="0.3929%" y="1279.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (2 samples, 0.01%)</title><rect x="0.1429%" y="1253" width="0.0124%" height="15" fill="rgb(235,183,28)"/><text x="0.3929%" y="1263.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (2 samples, 0.01%)</title><rect x="0.1429%" y="1237" width="0.0124%" height="15" fill="rgb(221,5,38)"/><text x="0.3929%" y="1247.50"></text></g><g><title>tokio::park::thread::CachedParkThread::block_on (3 samples, 0.02%)</title><rect x="0.1554%" y="1269" width="0.0186%" height="15" fill="rgb(247,18,42)"/><text x="0.4054%" y="1279.50"></text></g><g><title>tokio::coop::budget (3 samples, 0.02%)</title><rect x="0.1554%" y="1253" width="0.0186%" height="15" fill="rgb(241,131,45)"/><text x="0.4054%" y="1263.50"></text></g><g><title>tokio::park::thread::Inner::park (4 samples, 0.02%)</title><rect x="0.1740%" y="1269" width="0.0249%" height="15" fill="rgb(249,31,29)"/><text x="0.4240%" y="1279.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (4 samples, 0.02%)</title><rect x="0.1740%" y="1253" width="0.0249%" height="15" fill="rgb(225,111,53)"/><text x="0.4240%" y="1263.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (4 samples, 0.02%)</title><rect x="0.1740%" y="1237" width="0.0249%" height="15" fill="rgb(238,160,17)"/><text x="0.4240%" y="1247.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (4 samples, 0.02%)</title><rect x="0.1740%" y="1221" width="0.0249%" height="15" fill="rgb(214,148,48)"/><text x="0.4240%" y="1231.50"></text></g><g><title>parking_lot_core::parking_lot::park (4 samples, 0.02%)</title><rect x="0.1740%" y="1205" width="0.0249%" height="15" fill="rgb(232,36,49)"/><text x="0.4240%" y="1215.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (4 samples, 0.02%)</title><rect x="0.1740%" y="1189" width="0.0249%" height="15" fill="rgb(209,103,24)"/><text x="0.4240%" y="1199.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (4 samples, 0.02%)</title><rect x="0.1740%" y="1173" width="0.0249%" height="15" fill="rgb(229,88,8)"/><text x="0.4240%" y="1183.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (4 samples, 0.02%)</title><rect x="0.1740%" y="1157" width="0.0249%" height="15" fill="rgb(213,181,19)"/><text x="0.4240%" y="1167.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (4 samples, 0.02%)</title><rect x="0.1740%" y="1141" width="0.0249%" height="15" fill="rgb(254,191,54)"/><text x="0.4240%" y="1151.50"></text></g><g><title>syscall (4 samples, 0.02%)</title><rect x="0.1740%" y="1125" width="0.0249%" height="15" fill="rgb(241,83,37)"/><text x="0.4240%" y="1135.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="0.1740%" y="1109" width="0.0249%" height="15" fill="rgb(233,36,39)"/><text x="0.4240%" y="1119.50"></text></g><g><title>[[stack]] (30 samples, 0.19%)</title><rect x="0.0311%" y="1285" width="0.1864%" height="15" fill="rgb(226,3,54)"/><text x="0.2811%" y="1295.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::__getit (2 samples, 0.01%)</title><rect x="0.2237%" y="1269" width="0.0124%" height="15" fill="rgb(245,192,40)"/><text x="0.4737%" y="1279.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (2 samples, 0.01%)</title><rect x="0.2672%" y="1269" width="0.0124%" height="15" fill="rgb(238,167,29)"/><text x="0.5172%" y="1279.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (2 samples, 0.01%)</title><rect x="0.2672%" y="1253" width="0.0124%" height="15" fill="rgb(232,182,51)"/><text x="0.5172%" y="1263.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::schedule (2 samples, 0.01%)</title><rect x="0.2796%" y="1269" width="0.0124%" height="15" fill="rgb(231,60,39)"/><text x="0.5296%" y="1279.50"></text></g><g><title>[anon] (14 samples, 0.09%)</title><rect x="0.2175%" y="1285" width="0.0870%" height="15" fill="rgb(208,69,12)"/><text x="0.4675%" y="1295.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (2 samples, 0.01%)</title><rect x="0.2921%" y="1269" width="0.0124%" height="15" fill="rgb(235,93,37)"/><text x="0.5421%" y="1279.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="0.4350%" y="1269" width="0.0124%" height="15" fill="rgb(213,116,39)"/><text x="0.6850%" y="1279.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="0.4599%" y="1269" width="0.0124%" height="15" fill="rgb(222,207,29)"/><text x="0.7099%" y="1279.50"></text></g><g><title>[unknown] (20 samples, 0.12%)</title><rect x="0.4785%" y="1269" width="0.1243%" height="15" fill="rgb(206,96,30)"/><text x="0.7285%" y="1279.50"></text></g><g><title>[unknown] (20 samples, 0.12%)</title><rect x="0.4785%" y="1253" width="0.1243%" height="15" fill="rgb(218,138,4)"/><text x="0.7285%" y="1263.50"></text></g><g><title>[unknown] (20 samples, 0.12%)</title><rect x="0.4785%" y="1237" width="0.1243%" height="15" fill="rgb(250,191,14)"/><text x="0.7285%" y="1247.50"></text></g><g><title>[unknown] (20 samples, 0.12%)</title><rect x="0.4785%" y="1221" width="0.1243%" height="15" fill="rgb(239,60,40)"/><text x="0.7285%" y="1231.50"></text></g><g><title>[unknown] (20 samples, 0.12%)</title><rect x="0.4785%" y="1205" width="0.1243%" height="15" fill="rgb(206,27,48)"/><text x="0.7285%" y="1215.50"></text></g><g><title>[unknown] (20 samples, 0.12%)</title><rect x="0.4785%" y="1189" width="0.1243%" height="15" fill="rgb(225,35,8)"/><text x="0.7285%" y="1199.50"></text></g><g><title>[unknown] (20 samples, 0.12%)</title><rect x="0.4785%" y="1173" width="0.1243%" height="15" fill="rgb(250,213,24)"/><text x="0.7285%" y="1183.50"></text></g><g><title>[unknown] (20 samples, 0.12%)</title><rect x="0.4785%" y="1157" width="0.1243%" height="15" fill="rgb(247,123,22)"/><text x="0.7285%" y="1167.50"></text></g><g><title>[unknown] (19 samples, 0.12%)</title><rect x="0.4847%" y="1141" width="0.1181%" height="15" fill="rgb(231,138,38)"/><text x="0.7347%" y="1151.50"></text></g><g><title>[unknown] (19 samples, 0.12%)</title><rect x="0.4847%" y="1125" width="0.1181%" height="15" fill="rgb(231,145,46)"/><text x="0.7347%" y="1135.50"></text></g><g><title>[unknown] (16 samples, 0.10%)</title><rect x="0.5034%" y="1109" width="0.0994%" height="15" fill="rgb(251,118,11)"/><text x="0.7534%" y="1119.50"></text></g><g><title>[unknown] (14 samples, 0.09%)</title><rect x="0.5158%" y="1093" width="0.0870%" height="15" fill="rgb(217,147,25)"/><text x="0.7658%" y="1103.50"></text></g><g><title>[unknown] (11 samples, 0.07%)</title><rect x="0.5344%" y="1077" width="0.0684%" height="15" fill="rgb(247,81,37)"/><text x="0.7844%" y="1087.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="0.5593%" y="1061" width="0.0435%" height="15" fill="rgb(209,12,38)"/><text x="0.8093%" y="1071.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="0.5717%" y="1045" width="0.0311%" height="15" fill="rgb(227,1,9)"/><text x="0.8217%" y="1055.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="0.5779%" y="1029" width="0.0249%" height="15" fill="rgb(248,47,43)"/><text x="0.8279%" y="1039.50"></text></g><g><title>__rust_probestack (22 samples, 0.14%)</title><rect x="0.6028%" y="1269" width="0.1367%" height="15" fill="rgb(221,10,30)"/><text x="0.8528%" y="1279.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::pop (2 samples, 0.01%)</title><rect x="0.7395%" y="1269" width="0.0124%" height="15" fill="rgb(210,229,1)"/><text x="0.9895%" y="1279.50"></text></g><g><title>core::mem::drop (11 samples, 0.07%)</title><rect x="1.0440%" y="1013" width="0.0684%" height="15" fill="rgb(222,148,37)"/><text x="1.2940%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::util::linked_list::LinkedList&lt;tokio::sync::notify::Waiter,tokio::sync::notify::Waiter&gt;&gt;&gt; (11 samples, 0.07%)</title><rect x="1.0440%" y="997" width="0.0684%" height="15" fill="rgb(234,67,33)"/><text x="1.2940%" y="1007.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.07%)</title><rect x="1.0440%" y="981" width="0.0684%" height="15" fill="rgb(247,98,35)"/><text x="1.2940%" y="991.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (11 samples, 0.07%)</title><rect x="1.0440%" y="965" width="0.0684%" height="15" fill="rgb(247,138,52)"/><text x="1.2940%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (11 samples, 0.07%)</title><rect x="1.0440%" y="949" width="0.0684%" height="15" fill="rgb(213,79,30)"/><text x="1.2940%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (11 samples, 0.07%)</title><rect x="1.0440%" y="933" width="0.0684%" height="15" fill="rgb(246,177,23)"/><text x="1.2940%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::util::linked_list::LinkedList&lt;tokio::sync::notify::Waiter,tokio::sync::notify::Waiter&gt;&gt;&gt; (7 samples, 0.04%)</title><rect x="1.1186%" y="1013" width="0.0435%" height="15" fill="rgb(230,62,27)"/><text x="1.3686%" y="1023.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.04%)</title><rect x="1.1186%" y="997" width="0.0435%" height="15" fill="rgb(216,154,8)"/><text x="1.3686%" y="1007.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (6 samples, 0.04%)</title><rect x="1.1248%" y="981" width="0.0373%" height="15" fill="rgb(244,35,45)"/><text x="1.3748%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (5 samples, 0.03%)</title><rect x="1.1310%" y="965" width="0.0311%" height="15" fill="rgb(251,115,12)"/><text x="1.3810%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (5 samples, 0.03%)</title><rect x="1.1310%" y="949" width="0.0311%" height="15" fill="rgb(240,54,50)"/><text x="1.3810%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (8 samples, 0.05%)</title><rect x="1.1621%" y="1013" width="0.0497%" height="15" fill="rgb(233,84,52)"/><text x="1.4121%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (8 samples, 0.05%)</title><rect x="1.1621%" y="997" width="0.0497%" height="15" fill="rgb(207,117,47)"/><text x="1.4121%" y="1007.50"></text></g><g><title>&lt;tokio::sync::notify::Notified as core::future::future::Future&gt;::poll (51 samples, 0.32%)</title><rect x="1.0191%" y="1029" width="0.3169%" height="15" fill="rgb(249,43,39)"/><text x="1.2691%" y="1039.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (20 samples, 0.12%)</title><rect x="1.2118%" y="1013" width="0.1243%" height="15" fill="rgb(209,38,44)"/><text x="1.4618%" y="1023.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (20 samples, 0.12%)</title><rect x="1.2118%" y="997" width="0.1243%" height="15" fill="rgb(236,212,23)"/><text x="1.4618%" y="1007.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (20 samples, 0.12%)</title><rect x="1.2118%" y="981" width="0.1243%" height="15" fill="rgb(242,79,21)"/><text x="1.4618%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (20 samples, 0.12%)</title><rect x="1.2118%" y="965" width="0.1243%" height="15" fill="rgb(211,96,35)"/><text x="1.4618%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (20 samples, 0.12%)</title><rect x="1.2118%" y="949" width="0.1243%" height="15" fill="rgb(253,215,40)"/><text x="1.4618%" y="959.50"></text></g><g><title>[libc-2.31.so] (25 samples, 0.16%)</title><rect x="1.3361%" y="1029" width="0.1554%" height="15" fill="rgb(211,81,21)"/><text x="1.5861%" y="1039.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.05%)</title><rect x="1.4976%" y="1013" width="0.0497%" height="15" fill="rgb(208,190,38)"/><text x="1.7476%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (39 samples, 0.24%)</title><rect x="1.5474%" y="1013" width="0.2424%" height="15" fill="rgb(235,213,38)"/><text x="1.7974%" y="1023.50"></text></g><g><title>core::ptr::read (39 samples, 0.24%)</title><rect x="1.5474%" y="997" width="0.2424%" height="15" fill="rgb(237,122,38)"/><text x="1.7974%" y="1007.50"></text></g><g><title>[libc-2.31.so] (39 samples, 0.24%)</title><rect x="1.5474%" y="981" width="0.2424%" height="15" fill="rgb(244,218,35)"/><text x="1.7974%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (5 samples, 0.03%)</title><rect x="1.7897%" y="1013" width="0.0311%" height="15" fill="rgb(240,68,47)"/><text x="2.0397%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (5 samples, 0.03%)</title><rect x="1.7897%" y="997" width="0.0311%" height="15" fill="rgb(210,16,53)"/><text x="2.0397%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (32 samples, 0.20%)</title><rect x="1.8208%" y="1013" width="0.1989%" height="15" fill="rgb(235,124,12)"/><text x="2.0708%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_load (32 samples, 0.20%)</title><rect x="1.8208%" y="997" width="0.1989%" height="15" fill="rgb(224,169,11)"/><text x="2.0708%" y="1007.50"></text></g><g><title>core::sync::atomic::fence (8 samples, 0.05%)</title><rect x="2.0196%" y="1013" width="0.0497%" height="15" fill="rgb(250,166,2)"/><text x="2.2696%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (190 samples, 1.18%)</title><rect x="0.8949%" y="1061" width="1.1807%" height="15" fill="rgb(242,216,29)"/><text x="1.1449%" y="1071.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::run::{{closure}} (190 samples, 1.18%)</title><rect x="0.8949%" y="1045" width="1.1807%" height="15" fill="rgb(230,116,27)"/><text x="1.1449%" y="1055.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::pop (94 samples, 0.58%)</title><rect x="1.4914%" y="1029" width="0.5841%" height="15" fill="rgb(228,99,48)"/><text x="1.7414%" y="1039.50"></text></g><g><title>rho_runtime::main (284 samples, 1.76%)</title><rect x="0.7644%" y="1269" width="1.7649%" height="15" fill="rgb(253,11,6)"/><text x="1.0144%" y="1279.50"></text></g><g><title>tokio::runtime::Runtime::block_on (284 samples, 1.76%)</title><rect x="0.7644%" y="1253" width="1.7649%" height="15" fill="rgb(247,143,39)"/><text x="1.0144%" y="1263.50"></text></g><g><title>tokio::runtime::thread_pool::ThreadPool::block_on (284 samples, 1.76%)</title><rect x="0.7644%" y="1237" width="1.7649%" height="15" fill="rgb(236,97,10)"/><text x="1.0144%" y="1247.50"></text></g><g><title>tokio::runtime::enter::Enter::block_on (284 samples, 1.76%)</title><rect x="0.7644%" y="1221" width="1.7649%" height="15" fill="rgb(233,208,19)"/><text x="1.0144%" y="1231.50"></text></g><g><title>tokio::park::thread::CachedParkThread::block_on (284 samples, 1.76%)</title><rect x="0.7644%" y="1205" width="1.7649%" height="15" fill="rgb(216,164,2)"/><text x="1.0144%" y="1215.50"></text></g><g><title>tokio::coop::budget (284 samples, 1.76%)</title><rect x="0.7644%" y="1189" width="1.7649%" height="15" fill="rgb(220,129,5)"/><text x="1.0144%" y="1199.50"></text></g><g><title>tokio::coop::with_budget (284 samples, 1.76%)</title><rect x="0.7644%" y="1173" width="1.7649%" height="15" fill="rgb(242,17,10)"/><text x="1.0144%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (284 samples, 1.76%)</title><rect x="0.7644%" y="1157" width="1.7649%" height="15" fill="rgb(242,107,0)"/><text x="1.0144%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (284 samples, 1.76%)</title><rect x="0.7644%" y="1141" width="1.7649%" height="15" fill="rgb(251,28,31)"/><text x="1.0144%" y="1151.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (284 samples, 1.76%)</title><rect x="0.7644%" y="1125" width="1.7649%" height="15" fill="rgb(233,223,10)"/><text x="1.0144%" y="1135.50"></text></g><g><title>tokio::park::thread::CachedParkThread::block_on::{{closure}} (284 samples, 1.76%)</title><rect x="0.7644%" y="1109" width="1.7649%" height="15" fill="rgb(215,21,27)"/><text x="1.0144%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (284 samples, 1.76%)</title><rect x="0.7644%" y="1093" width="1.7649%" height="15" fill="rgb(232,23,21)"/><text x="1.0144%" y="1103.50"></text></g><g><title>rho_runtime::run::{{closure}} (284 samples, 1.76%)</title><rect x="0.7644%" y="1077" width="1.7649%" height="15" fill="rgb(244,5,23)"/><text x="1.0144%" y="1087.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::create (73 samples, 0.45%)</title><rect x="2.0756%" y="1061" width="0.4536%" height="15" fill="rgb(226,81,46)"/><text x="2.3256%" y="1071.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::new (73 samples, 0.45%)</title><rect x="2.0756%" y="1045" width="0.4536%" height="15" fill="rgb(247,70,30)"/><text x="2.3256%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (73 samples, 0.45%)</title><rect x="2.0756%" y="1029" width="0.4536%" height="15" fill="rgb(212,68,19)"/><text x="2.3256%" y="1039.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[I]&gt; as core::iter::traits::collect::FromIterator&lt;I&gt;&gt;::from_iter (73 samples, 0.45%)</title><rect x="2.0756%" y="1013" width="0.4536%" height="15" fill="rgb(240,187,13)"/><text x="2.3256%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (73 samples, 0.45%)</title><rect x="2.0756%" y="997" width="0.4536%" height="15" fill="rgb(223,113,26)"/><text x="2.3256%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (73 samples, 0.45%)</title><rect x="2.0756%" y="981" width="0.4536%" height="15" fill="rgb(206,192,2)"/><text x="2.3256%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (73 samples, 0.45%)</title><rect x="2.0756%" y="965" width="0.4536%" height="15" fill="rgb(241,108,4)"/><text x="2.3256%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (73 samples, 0.45%)</title><rect x="2.0756%" y="949" width="0.4536%" height="15" fill="rgb(247,173,49)"/><text x="2.3256%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (73 samples, 0.45%)</title><rect x="2.0756%" y="933" width="0.4536%" height="15" fill="rgb(224,114,35)"/><text x="2.3256%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (73 samples, 0.45%)</title><rect x="2.0756%" y="917" width="0.4536%" height="15" fill="rgb(245,159,27)"/><text x="2.3256%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (73 samples, 0.45%)</title><rect x="2.0756%" y="901" width="0.4536%" height="15" fill="rgb(245,172,44)"/><text x="2.3256%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (73 samples, 0.45%)</title><rect x="2.0756%" y="885" width="0.4536%" height="15" fill="rgb(236,23,11)"/><text x="2.3256%" y="895.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (73 samples, 0.45%)</title><rect x="2.0756%" y="869" width="0.4536%" height="15" fill="rgb(205,117,38)"/><text x="2.3256%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (73 samples, 0.45%)</title><rect x="2.0756%" y="853" width="0.4536%" height="15" fill="rgb(237,72,25)"/><text x="2.3256%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (73 samples, 0.45%)</title><rect x="2.0756%" y="837" width="0.4536%" height="15" fill="rgb(244,70,9)"/><text x="2.3256%" y="847.50"></text></g><g><title>core::ptr::write (73 samples, 0.45%)</title><rect x="2.0756%" y="821" width="0.4536%" height="15" fill="rgb(217,125,39)"/><text x="2.3256%" y="831.50"></text></g><g><title>[unknown] (61 samples, 0.38%)</title><rect x="2.1501%" y="805" width="0.3791%" height="15" fill="rgb(235,36,10)"/><text x="2.4001%" y="815.50"></text></g><g><title>[unknown] (54 samples, 0.34%)</title><rect x="2.1936%" y="789" width="0.3356%" height="15" fill="rgb(251,123,47)"/><text x="2.4436%" y="799.50"></text></g><g><title>[unknown] (53 samples, 0.33%)</title><rect x="2.1999%" y="773" width="0.3294%" height="15" fill="rgb(221,13,13)"/><text x="2.4499%" y="783.50"></text></g><g><title>[unknown] (49 samples, 0.30%)</title><rect x="2.2247%" y="757" width="0.3045%" height="15" fill="rgb(238,131,9)"/><text x="2.4747%" y="767.50"></text></g><g><title>[unknown] (46 samples, 0.29%)</title><rect x="2.2434%" y="741" width="0.2859%" height="15" fill="rgb(211,50,8)"/><text x="2.4934%" y="751.50"></text></g><g><title>[unknown] (43 samples, 0.27%)</title><rect x="2.2620%" y="725" width="0.2672%" height="15" fill="rgb(245,182,24)"/><text x="2.5120%" y="735.50"></text></g><g><title>[unknown] (35 samples, 0.22%)</title><rect x="2.3117%" y="709" width="0.2175%" height="15" fill="rgb(242,14,37)"/><text x="2.5617%" y="719.50"></text></g><g><title>[unknown] (28 samples, 0.17%)</title><rect x="2.3552%" y="693" width="0.1740%" height="15" fill="rgb(246,228,12)"/><text x="2.6052%" y="703.50"></text></g><g><title>[unknown] (18 samples, 0.11%)</title><rect x="2.4174%" y="677" width="0.1119%" height="15" fill="rgb(213,55,15)"/><text x="2.6674%" y="687.50"></text></g><g><title>[unknown] (16 samples, 0.10%)</title><rect x="2.4298%" y="661" width="0.0994%" height="15" fill="rgb(209,9,3)"/><text x="2.6798%" y="671.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="2.5106%" y="645" width="0.0186%" height="15" fill="rgb(230,59,30)"/><text x="2.7606%" y="655.50"></text></g><g><title>[libc-2.31.so] (36 samples, 0.22%)</title><rect x="2.6100%" y="1253" width="0.2237%" height="15" fill="rgb(209,121,21)"/><text x="2.8600%" y="1263.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.02%)</title><rect x="2.8523%" y="1205" width="0.0249%" height="15" fill="rgb(220,109,13)"/><text x="3.1023%" y="1215.50"></text></g><g><title>&lt;blake3::Hash as core::hash::Hash&gt;::hash (4 samples, 0.02%)</title><rect x="2.8523%" y="1189" width="0.0249%" height="15" fill="rgb(232,18,1)"/><text x="3.1023%" y="1199.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (4 samples, 0.02%)</title><rect x="2.8523%" y="1173" width="0.0249%" height="15" fill="rgb(215,41,42)"/><text x="3.1023%" y="1183.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (4 samples, 0.02%)</title><rect x="2.8523%" y="1157" width="0.0249%" height="15" fill="rgb(224,123,36)"/><text x="3.1023%" y="1167.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (4 samples, 0.02%)</title><rect x="2.8523%" y="1141" width="0.0249%" height="15" fill="rgb(240,125,3)"/><text x="3.1023%" y="1151.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="2.8586%" y="1125" width="0.0186%" height="15" fill="rgb(205,98,50)"/><text x="3.1086%" y="1135.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (2 samples, 0.01%)</title><rect x="2.8648%" y="1109" width="0.0124%" height="15" fill="rgb(205,185,37)"/><text x="3.1148%" y="1119.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (3 samples, 0.02%)</title><rect x="2.8958%" y="1157" width="0.0186%" height="15" fill="rgb(238,207,15)"/><text x="3.1458%" y="1167.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (3 samples, 0.02%)</title><rect x="2.8958%" y="1141" width="0.0186%" height="15" fill="rgb(213,199,42)"/><text x="3.1458%" y="1151.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="2.8958%" y="1125" width="0.0186%" height="15" fill="rgb(235,201,11)"/><text x="3.1458%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::iter_hash (4 samples, 0.02%)</title><rect x="2.8958%" y="1189" width="0.0249%" height="15" fill="rgb(207,46,11)"/><text x="3.1458%" y="1199.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T&gt;::new (4 samples, 0.02%)</title><rect x="2.8958%" y="1173" width="0.0249%" height="15" fill="rgb(241,35,35)"/><text x="3.1458%" y="1183.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry (18 samples, 0.11%)</title><rect x="2.8523%" y="1221" width="0.1119%" height="15" fill="rgb(243,32,47)"/><text x="3.1023%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (14 samples, 0.09%)</title><rect x="2.8772%" y="1205" width="0.0870%" height="15" fill="rgb(247,202,23)"/><text x="3.1272%" y="1215.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry::{{closure}} (7 samples, 0.04%)</title><rect x="2.9207%" y="1189" width="0.0435%" height="15" fill="rgb(219,102,11)"/><text x="3.1707%" y="1199.50"></text></g><g><title>&lt;blake3::Hash as core::cmp::PartialEq&gt;::eq (7 samples, 0.04%)</title><rect x="2.9207%" y="1173" width="0.0435%" height="15" fill="rgb(243,110,44)"/><text x="3.1707%" y="1183.50"></text></g><g><title>constant_time_eq::constant_time_eq_32 (7 samples, 0.04%)</title><rect x="2.9207%" y="1157" width="0.0435%" height="15" fill="rgb(222,74,54)"/><text x="3.1707%" y="1167.50"></text></g><g><title>constant_time_eq::constant_time_ne_32 (7 samples, 0.04%)</title><rect x="2.9207%" y="1141" width="0.0435%" height="15" fill="rgb(216,99,12)"/><text x="3.1707%" y="1151.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::get_or_create_cell_slot (25 samples, 0.16%)</title><rect x="2.8399%" y="1253" width="0.1554%" height="15" fill="rgb(226,22,26)"/><text x="3.0899%" y="1263.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (24 samples, 0.15%)</title><rect x="2.8461%" y="1237" width="0.1491%" height="15" fill="rgb(217,163,10)"/><text x="3.0961%" y="1247.50"></text></g><g><title>std::collections::hash::map::map_entry (5 samples, 0.03%)</title><rect x="2.9642%" y="1221" width="0.0311%" height="15" fill="rgb(213,25,53)"/><text x="3.2142%" y="1231.50"></text></g><g><title>rho_runtime::storage::runner::JoinGroup::new_multiple (115 samples, 0.71%)</title><rect x="3.0015%" y="1253" width="0.7146%" height="15" fill="rgb(252,105,26)"/><text x="3.2515%" y="1263.50"></text></g><g><title>[libc-2.31.so] (113 samples, 0.70%)</title><rect x="3.0139%" y="1237" width="0.7022%" height="15" fill="rgb(220,39,43)"/><text x="3.2639%" y="1247.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::push (3 samples, 0.02%)</title><rect x="3.7161%" y="1253" width="0.0186%" height="15" fill="rgb(229,68,48)"/><text x="3.9661%" y="1263.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::len (4 samples, 0.02%)</title><rect x="3.7410%" y="1253" width="0.0249%" height="15" fill="rgb(252,8,32)"/><text x="3.9910%" y="1263.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::len (4 samples, 0.02%)</title><rect x="3.7410%" y="1237" width="0.0249%" height="15" fill="rgb(223,20,43)"/><text x="3.9910%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::len (4 samples, 0.02%)</title><rect x="3.7410%" y="1221" width="0.0249%" height="15" fill="rgb(229,81,49)"/><text x="3.9910%" y="1231.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (115 samples, 0.71%)</title><rect x="3.7721%" y="1237" width="0.7146%" height="15" fill="rgb(236,28,36)"/><text x="4.0221%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (113 samples, 0.70%)</title><rect x="3.7845%" y="1221" width="0.7022%" height="15" fill="rgb(249,185,26)"/><text x="4.0345%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_add (113 samples, 0.70%)</title><rect x="3.7845%" y="1205" width="0.7022%" height="15" fill="rgb(249,174,33)"/><text x="4.0345%" y="1215.50"></text></g><g><title>[libc-2.31.so] (50 samples, 0.31%)</title><rect x="4.4867%" y="1221" width="0.3107%" height="15" fill="rgb(233,201,37)"/><text x="4.7367%" y="1231.50"></text></g><g><title>arena_bin_slabs_nonfull_tryget (17 samples, 0.11%)</title><rect x="4.8347%" y="981" width="0.1056%" height="15" fill="rgb(221,78,26)"/><text x="5.0847%" y="991.50"></text></g><g><title>_rjem_je_extent_heap_remove_first (17 samples, 0.11%)</title><rect x="4.8347%" y="965" width="0.1056%" height="15" fill="rgb(250,127,30)"/><text x="5.0847%" y="975.50"></text></g><g><title>extent_snad_comp (3 samples, 0.02%)</title><rect x="4.9217%" y="949" width="0.0186%" height="15" fill="rgb(230,49,44)"/><text x="5.1717%" y="959.50"></text></g><g><title>extent_snad_comp (2 samples, 0.01%)</title><rect x="4.9279%" y="933" width="0.0124%" height="15" fill="rgb(229,67,23)"/><text x="5.1779%" y="943.50"></text></g><g><title>extent_ad_comp (2 samples, 0.01%)</title><rect x="4.9279%" y="917" width="0.0124%" height="15" fill="rgb(249,83,47)"/><text x="5.1779%" y="927.50"></text></g><g><title>arena_slab_alloc (2 samples, 0.01%)</title><rect x="4.9403%" y="981" width="0.0124%" height="15" fill="rgb(215,43,3)"/><text x="5.1903%" y="991.50"></text></g><g><title>_rjem_je_extents_alloc (2 samples, 0.01%)</title><rect x="4.9403%" y="965" width="0.0124%" height="15" fill="rgb(238,154,13)"/><text x="5.1903%" y="975.50"></text></g><g><title>extent_recycle (2 samples, 0.01%)</title><rect x="4.9403%" y="949" width="0.0124%" height="15" fill="rgb(219,56,2)"/><text x="5.1903%" y="959.50"></text></g><g><title>extent_recycle_split (2 samples, 0.01%)</title><rect x="4.9403%" y="933" width="0.0124%" height="15" fill="rgb(233,0,4)"/><text x="5.1903%" y="943.50"></text></g><g><title>extent_split_interior (2 samples, 0.01%)</title><rect x="4.9403%" y="917" width="0.0124%" height="15" fill="rgb(235,30,7)"/><text x="5.1903%" y="927.50"></text></g><g><title>extent_split_impl (2 samples, 0.01%)</title><rect x="4.9403%" y="901" width="0.0124%" height="15" fill="rgb(250,79,13)"/><text x="5.1903%" y="911.50"></text></g><g><title>_rjem_je_extent_alloc (2 samples, 0.01%)</title><rect x="4.9403%" y="885" width="0.0124%" height="15" fill="rgb(211,146,34)"/><text x="5.1903%" y="895.50"></text></g><g><title>arena_bin_malloc_hard (20 samples, 0.12%)</title><rect x="4.8347%" y="1013" width="0.1243%" height="15" fill="rgb(228,22,38)"/><text x="5.0847%" y="1023.50"></text></g><g><title>arena_bin_nonfull_slab_get (20 samples, 0.12%)</title><rect x="4.8347%" y="997" width="0.1243%" height="15" fill="rgb(235,168,5)"/><text x="5.0847%" y="1007.50"></text></g><g><title>bitmap_set (4 samples, 0.02%)</title><rect x="4.9714%" y="981" width="0.0249%" height="15" fill="rgb(221,155,16)"/><text x="5.2214%" y="991.50"></text></g><g><title>arena_slab_reg_alloc (7 samples, 0.04%)</title><rect x="4.9590%" y="1013" width="0.0435%" height="15" fill="rgb(215,215,53)"/><text x="5.2090%" y="1023.50"></text></g><g><title>bitmap_sfu (6 samples, 0.04%)</title><rect x="4.9652%" y="997" width="0.0373%" height="15" fill="rgb(223,4,10)"/><text x="5.2152%" y="1007.50"></text></g><g><title>malloc_mutex_lock (9 samples, 0.06%)</title><rect x="5.0087%" y="1013" width="0.0559%" height="15" fill="rgb(234,103,6)"/><text x="5.2587%" y="1023.50"></text></g><g><title>malloc_mutex_trylock_final (9 samples, 0.06%)</title><rect x="5.0087%" y="997" width="0.0559%" height="15" fill="rgb(227,97,0)"/><text x="5.2587%" y="1007.50"></text></g><g><title>__GI___pthread_mutex_trylock (9 samples, 0.06%)</title><rect x="5.0087%" y="981" width="0.0559%" height="15" fill="rgb(234,150,53)"/><text x="5.2587%" y="991.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (42 samples, 0.26%)</title><rect x="4.8098%" y="1045" width="0.2610%" height="15" fill="rgb(228,201,54)"/><text x="5.0598%" y="1055.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (42 samples, 0.26%)</title><rect x="4.8098%" y="1029" width="0.2610%" height="15" fill="rgb(222,22,37)"/><text x="5.0598%" y="1039.50"></text></g><g><title>imalloc_no_sample (44 samples, 0.27%)</title><rect x="4.8098%" y="1109" width="0.2734%" height="15" fill="rgb(237,53,32)"/><text x="5.0598%" y="1119.50"></text></g><g><title>iallocztm (44 samples, 0.27%)</title><rect x="4.8098%" y="1093" width="0.2734%" height="15" fill="rgb(233,25,53)"/><text x="5.0598%" y="1103.50"></text></g><g><title>arena_malloc (44 samples, 0.27%)</title><rect x="4.8098%" y="1077" width="0.2734%" height="15" fill="rgb(210,40,34)"/><text x="5.0598%" y="1087.50"></text></g><g><title>tcache_alloc_small (44 samples, 0.27%)</title><rect x="4.8098%" y="1061" width="0.2734%" height="15" fill="rgb(241,220,44)"/><text x="5.0598%" y="1071.50"></text></g><g><title>cache_bin_alloc_easy (2 samples, 0.01%)</title><rect x="5.0708%" y="1045" width="0.0124%" height="15" fill="rgb(235,28,35)"/><text x="5.3208%" y="1055.50"></text></g><g><title>imalloc_body (47 samples, 0.29%)</title><rect x="4.8098%" y="1125" width="0.2921%" height="15" fill="rgb(210,56,17)"/><text x="5.0598%" y="1135.50"></text></g><g><title>sz_index2size (3 samples, 0.02%)</title><rect x="5.0833%" y="1109" width="0.0186%" height="15" fill="rgb(224,130,29)"/><text x="5.3333%" y="1119.50"></text></g><g><title>sz_index2size_lookup (3 samples, 0.02%)</title><rect x="5.0833%" y="1093" width="0.0186%" height="15" fill="rgb(235,212,8)"/><text x="5.3333%" y="1103.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (100 samples, 0.62%)</title><rect x="4.4867%" y="1237" width="0.6214%" height="15" fill="rgb(223,33,50)"/><text x="4.7367%" y="1247.50"></text></g><g><title>alloc::alloc::exchange_malloc (50 samples, 0.31%)</title><rect x="4.7974%" y="1221" width="0.3107%" height="15" fill="rgb(219,149,13)"/><text x="5.0474%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (50 samples, 0.31%)</title><rect x="4.7974%" y="1205" width="0.3107%" height="15" fill="rgb(250,156,29)"/><text x="5.0474%" y="1215.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (50 samples, 0.31%)</title><rect x="4.7974%" y="1189" width="0.3107%" height="15" fill="rgb(216,193,19)"/><text x="5.0474%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (50 samples, 0.31%)</title><rect x="4.7974%" y="1173" width="0.3107%" height="15" fill="rgb(216,135,14)"/><text x="5.0474%" y="1183.50"></text></g><g><title>_rjem_mallocx (49 samples, 0.30%)</title><rect x="4.8036%" y="1157" width="0.3045%" height="15" fill="rgb(241,47,5)"/><text x="5.0536%" y="1167.50"></text></g><g><title>imalloc (48 samples, 0.30%)</title><rect x="4.8098%" y="1141" width="0.2983%" height="15" fill="rgb(233,42,35)"/><text x="5.0598%" y="1151.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::handle_join (416 samples, 2.59%)</title><rect x="2.5292%" y="1269" width="2.5851%" height="15" fill="rgb(231,13,6)"/><text x="2.7792%" y="1279.50">rh..</text></g><g><title>tokio::sync::oneshot::channel (217 samples, 1.35%)</title><rect x="3.7658%" y="1253" width="1.3485%" height="15" fill="rgb(207,181,40)"/><text x="4.0158%" y="1263.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="5.1641%" y="1253" width="0.0124%" height="15" fill="rgb(254,173,49)"/><text x="5.4141%" y="1263.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (2 samples, 0.01%)</title><rect x="5.1765%" y="1253" width="0.0124%" height="15" fill="rgb(221,1,38)"/><text x="5.4265%" y="1263.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (2 samples, 0.01%)</title><rect x="5.1765%" y="1237" width="0.0124%" height="15" fill="rgb(206,124,46)"/><text x="5.4265%" y="1247.50"></text></g><g><title>core::cell::BorrowRefMut::new (2 samples, 0.01%)</title><rect x="5.1765%" y="1221" width="0.0124%" height="15" fill="rgb(249,21,11)"/><text x="5.4265%" y="1231.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.01%)</title><rect x="5.1765%" y="1205" width="0.0124%" height="15" fill="rgb(222,201,40)"/><text x="5.4265%" y="1215.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.01%)</title><rect x="5.1765%" y="1189" width="0.0124%" height="15" fill="rgb(235,61,29)"/><text x="5.4265%" y="1199.50"></text></g><g><title>core::mem::replace (2 samples, 0.01%)</title><rect x="5.1765%" y="1173" width="0.0124%" height="15" fill="rgb(219,207,3)"/><text x="5.4265%" y="1183.50"></text></g><g><title>core::mem::swap (2 samples, 0.01%)</title><rect x="5.1765%" y="1157" width="0.0124%" height="15" fill="rgb(222,56,46)"/><text x="5.4265%" y="1167.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.01%)</title><rect x="5.1765%" y="1141" width="0.0124%" height="15" fill="rgb(239,76,54)"/><text x="5.4265%" y="1151.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="5.1765%" y="1125" width="0.0124%" height="15" fill="rgb(231,124,27)"/><text x="5.4265%" y="1135.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.02%)</title><rect x="5.2013%" y="1205" width="0.0186%" height="15" fill="rgb(249,195,6)"/><text x="5.4513%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::iter_hash (3 samples, 0.02%)</title><rect x="5.2324%" y="1189" width="0.0186%" height="15" fill="rgb(237,174,47)"/><text x="5.4824%" y="1199.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="5.2324%" y="1173" width="0.0186%" height="15" fill="rgb(206,201,31)"/><text x="5.4824%" y="1183.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (3 samples, 0.02%)</title><rect x="5.2324%" y="1157" width="0.0186%" height="15" fill="rgb(231,57,52)"/><text x="5.4824%" y="1167.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (3 samples, 0.02%)</title><rect x="5.2324%" y="1141" width="0.0186%" height="15" fill="rgb(248,177,22)"/><text x="5.4824%" y="1151.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="5.2324%" y="1125" width="0.0186%" height="15" fill="rgb(215,211,37)"/><text x="5.4824%" y="1135.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry (14 samples, 0.09%)</title><rect x="5.2013%" y="1221" width="0.0870%" height="15" fill="rgb(241,128,51)"/><text x="5.4513%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (11 samples, 0.07%)</title><rect x="5.2200%" y="1205" width="0.0684%" height="15" fill="rgb(227,165,31)"/><text x="5.4700%" y="1215.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry::{{closure}} (6 samples, 0.04%)</title><rect x="5.2511%" y="1189" width="0.0373%" height="15" fill="rgb(228,167,24)"/><text x="5.5011%" y="1199.50"></text></g><g><title>&lt;blake3::Hash as core::cmp::PartialEq&gt;::eq (6 samples, 0.04%)</title><rect x="5.2511%" y="1173" width="0.0373%" height="15" fill="rgb(228,143,12)"/><text x="5.5011%" y="1183.50"></text></g><g><title>constant_time_eq::constant_time_eq_32 (6 samples, 0.04%)</title><rect x="5.2511%" y="1157" width="0.0373%" height="15" fill="rgb(249,149,8)"/><text x="5.5011%" y="1167.50"></text></g><g><title>constant_time_eq::constant_time_ne_32 (6 samples, 0.04%)</title><rect x="5.2511%" y="1141" width="0.0373%" height="15" fill="rgb(243,35,44)"/><text x="5.5011%" y="1151.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::get_or_create_cell_slot (19 samples, 0.12%)</title><rect x="5.1889%" y="1253" width="0.1181%" height="15" fill="rgb(246,89,9)"/><text x="5.4389%" y="1263.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (17 samples, 0.11%)</title><rect x="5.2013%" y="1237" width="0.1056%" height="15" fill="rgb(233,213,13)"/><text x="5.4513%" y="1247.50"></text></g><g><title>std::collections::hash::map::map_entry (3 samples, 0.02%)</title><rect x="5.2883%" y="1221" width="0.0186%" height="15" fill="rgb(233,141,41)"/><text x="5.5383%" y="1231.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (48 samples, 0.30%)</title><rect x="5.3070%" y="1237" width="0.2983%" height="15" fill="rgb(239,167,4)"/><text x="5.5570%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (48 samples, 0.30%)</title><rect x="5.3070%" y="1221" width="0.2983%" height="15" fill="rgb(209,217,16)"/><text x="5.5570%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_add (48 samples, 0.30%)</title><rect x="5.3070%" y="1205" width="0.2983%" height="15" fill="rgb(219,88,35)"/><text x="5.5570%" y="1215.50"></text></g><g><title>[libc-2.31.so] (17 samples, 0.11%)</title><rect x="5.6115%" y="1221" width="0.1056%" height="15" fill="rgb(220,193,23)"/><text x="5.8615%" y="1231.50"></text></g><g><title>arena_bin_slabs_nonfull_tryget (7 samples, 0.04%)</title><rect x="5.7544%" y="981" width="0.0435%" height="15" fill="rgb(230,90,52)"/><text x="6.0044%" y="991.50"></text></g><g><title>_rjem_je_extent_heap_remove_first (7 samples, 0.04%)</title><rect x="5.7544%" y="965" width="0.0435%" height="15" fill="rgb(252,106,19)"/><text x="6.0044%" y="975.50"></text></g><g><title>extent_snad_comp (2 samples, 0.01%)</title><rect x="5.7855%" y="949" width="0.0124%" height="15" fill="rgb(206,74,20)"/><text x="6.0355%" y="959.50"></text></g><g><title>extent_sn_comp (2 samples, 0.01%)</title><rect x="5.7855%" y="933" width="0.0124%" height="15" fill="rgb(230,138,44)"/><text x="6.0355%" y="943.50"></text></g><g><title>arena_bin_nonfull_slab_get (9 samples, 0.06%)</title><rect x="5.7544%" y="997" width="0.0559%" height="15" fill="rgb(235,182,43)"/><text x="6.0044%" y="1007.50"></text></g><g><title>arena_slab_alloc (2 samples, 0.01%)</title><rect x="5.7979%" y="981" width="0.0124%" height="15" fill="rgb(242,16,51)"/><text x="6.0479%" y="991.50"></text></g><g><title>arena_slab_reg_alloc (2 samples, 0.01%)</title><rect x="5.8103%" y="997" width="0.0124%" height="15" fill="rgb(248,9,4)"/><text x="6.0603%" y="1007.50"></text></g><g><title>bitmap_sfu (2 samples, 0.01%)</title><rect x="5.8103%" y="981" width="0.0124%" height="15" fill="rgb(210,31,22)"/><text x="6.0603%" y="991.50"></text></g><g><title>arena_bin_malloc_hard (12 samples, 0.07%)</title><rect x="5.7544%" y="1013" width="0.0746%" height="15" fill="rgb(239,54,39)"/><text x="6.0044%" y="1023.50"></text></g><g><title>arena_slab_reg_alloc (2 samples, 0.01%)</title><rect x="5.8352%" y="1013" width="0.0124%" height="15" fill="rgb(230,99,41)"/><text x="6.0852%" y="1023.50"></text></g><g><title>imalloc_no_sample (23 samples, 0.14%)</title><rect x="5.7358%" y="1109" width="0.1429%" height="15" fill="rgb(253,106,12)"/><text x="5.9858%" y="1119.50"></text></g><g><title>iallocztm (22 samples, 0.14%)</title><rect x="5.7420%" y="1093" width="0.1367%" height="15" fill="rgb(213,46,41)"/><text x="5.9920%" y="1103.50"></text></g><g><title>arena_malloc (22 samples, 0.14%)</title><rect x="5.7420%" y="1077" width="0.1367%" height="15" fill="rgb(215,133,35)"/><text x="5.9920%" y="1087.50"></text></g><g><title>tcache_alloc_small (22 samples, 0.14%)</title><rect x="5.7420%" y="1061" width="0.1367%" height="15" fill="rgb(213,28,5)"/><text x="5.9920%" y="1071.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (21 samples, 0.13%)</title><rect x="5.7482%" y="1045" width="0.1305%" height="15" fill="rgb(215,77,49)"/><text x="5.9982%" y="1055.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (21 samples, 0.13%)</title><rect x="5.7482%" y="1029" width="0.1305%" height="15" fill="rgb(248,100,22)"/><text x="5.9982%" y="1039.50"></text></g><g><title>malloc_mutex_lock (4 samples, 0.02%)</title><rect x="5.8538%" y="1013" width="0.0249%" height="15" fill="rgb(208,67,9)"/><text x="6.1038%" y="1023.50"></text></g><g><title>malloc_mutex_trylock_final (4 samples, 0.02%)</title><rect x="5.8538%" y="997" width="0.0249%" height="15" fill="rgb(219,133,21)"/><text x="6.1038%" y="1007.50"></text></g><g><title>__GI___pthread_mutex_trylock (4 samples, 0.02%)</title><rect x="5.8538%" y="981" width="0.0249%" height="15" fill="rgb(246,46,29)"/><text x="6.1038%" y="991.50"></text></g><g><title>imalloc_body (24 samples, 0.15%)</title><rect x="5.7358%" y="1125" width="0.1491%" height="15" fill="rgb(246,185,52)"/><text x="5.9858%" y="1135.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::handle_produce (125 samples, 0.78%)</title><rect x="5.1143%" y="1269" width="0.7768%" height="15" fill="rgb(252,136,11)"/><text x="5.3643%" y="1279.50"></text></g><g><title>tokio::sync::oneshot::channel (94 samples, 0.58%)</title><rect x="5.3070%" y="1253" width="0.5841%" height="15" fill="rgb(219,138,53)"/><text x="5.5570%" y="1263.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (46 samples, 0.29%)</title><rect x="5.6053%" y="1237" width="0.2859%" height="15" fill="rgb(211,51,23)"/><text x="5.8553%" y="1247.50"></text></g><g><title>alloc::alloc::exchange_malloc (28 samples, 0.17%)</title><rect x="5.7171%" y="1221" width="0.1740%" height="15" fill="rgb(247,221,28)"/><text x="5.9671%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (28 samples, 0.17%)</title><rect x="5.7171%" y="1205" width="0.1740%" height="15" fill="rgb(251,222,45)"/><text x="5.9671%" y="1215.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (28 samples, 0.17%)</title><rect x="5.7171%" y="1189" width="0.1740%" height="15" fill="rgb(217,162,53)"/><text x="5.9671%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 0.17%)</title><rect x="5.7171%" y="1173" width="0.1740%" height="15" fill="rgb(229,93,14)"/><text x="5.9671%" y="1183.50"></text></g><g><title>_rjem_mallocx (25 samples, 0.16%)</title><rect x="5.7358%" y="1157" width="0.1554%" height="15" fill="rgb(209,67,49)"/><text x="5.9858%" y="1167.50"></text></g><g><title>imalloc (25 samples, 0.16%)</title><rect x="5.7358%" y="1141" width="0.1554%" height="15" fill="rgb(213,87,29)"/><text x="5.9858%" y="1151.50"></text></g><g><title>[libc-2.31.so] (72 samples, 0.45%)</title><rect x="5.9036%" y="1253" width="0.4474%" height="15" fill="rgb(205,151,52)"/><text x="6.1536%" y="1263.50"></text></g><g><title>[libc-2.31.so] (51 samples, 0.32%)</title><rect x="6.3696%" y="1205" width="0.3169%" height="15" fill="rgb(253,215,39)"/><text x="6.6196%" y="1215.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (7 samples, 0.04%)</title><rect x="6.6866%" y="1173" width="0.0435%" height="15" fill="rgb(221,220,41)"/><text x="6.9366%" y="1183.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (7 samples, 0.04%)</title><rect x="6.6866%" y="1157" width="0.0435%" height="15" fill="rgb(218,133,21)"/><text x="6.9366%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (6 samples, 0.04%)</title><rect x="6.6928%" y="1141" width="0.0373%" height="15" fill="rgb(221,193,43)"/><text x="6.9428%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_sub (6 samples, 0.04%)</title><rect x="6.6928%" y="1125" width="0.0373%" height="15" fill="rgb(240,128,52)"/><text x="6.9428%" y="1135.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (29 samples, 0.18%)</title><rect x="6.7425%" y="1077" width="0.1802%" height="15" fill="rgb(253,114,12)"/><text x="6.9925%" y="1087.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (27 samples, 0.17%)</title><rect x="6.7549%" y="1061" width="0.1678%" height="15" fill="rgb(215,223,47)"/><text x="7.0049%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (21 samples, 0.13%)</title><rect x="6.7922%" y="1045" width="0.1305%" height="15" fill="rgb(248,225,23)"/><text x="7.0422%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_swap (21 samples, 0.13%)</title><rect x="6.7922%" y="1029" width="0.1305%" height="15" fill="rgb(250,108,0)"/><text x="7.0422%" y="1039.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (428 samples, 2.66%)</title><rect x="6.9351%" y="1045" width="2.6597%" height="15" fill="rgb(228,208,7)"/><text x="7.1851%" y="1055.50">&lt;p..</text></g><g><title>syscall (428 samples, 2.66%)</title><rect x="6.9351%" y="1029" width="2.6597%" height="15" fill="rgb(244,45,10)"/><text x="7.1851%" y="1039.50">sy..</text></g><g><title>[unknown] (426 samples, 2.65%)</title><rect x="6.9476%" y="1013" width="2.6473%" height="15" fill="rgb(207,125,25)"/><text x="7.1976%" y="1023.50">[u..</text></g><g><title>[unknown] (417 samples, 2.59%)</title><rect x="7.0035%" y="997" width="2.5913%" height="15" fill="rgb(210,195,18)"/><text x="7.2535%" y="1007.50">[u..</text></g><g><title>[unknown] (408 samples, 2.54%)</title><rect x="7.0594%" y="981" width="2.5354%" height="15" fill="rgb(249,80,12)"/><text x="7.3094%" y="991.50">[u..</text></g><g><title>[unknown] (404 samples, 2.51%)</title><rect x="7.0843%" y="965" width="2.5106%" height="15" fill="rgb(221,65,9)"/><text x="7.3343%" y="975.50">[u..</text></g><g><title>[unknown] (402 samples, 2.50%)</title><rect x="7.0967%" y="949" width="2.4981%" height="15" fill="rgb(235,49,36)"/><text x="7.3467%" y="959.50">[u..</text></g><g><title>[unknown] (352 samples, 2.19%)</title><rect x="7.4074%" y="933" width="2.1874%" height="15" fill="rgb(225,32,20)"/><text x="7.6574%" y="943.50">[..</text></g><g><title>[unknown] (322 samples, 2.00%)</title><rect x="7.5938%" y="917" width="2.0010%" height="15" fill="rgb(215,141,46)"/><text x="7.8438%" y="927.50">[..</text></g><g><title>[unknown] (273 samples, 1.70%)</title><rect x="7.8983%" y="901" width="1.6965%" height="15" fill="rgb(250,160,47)"/><text x="8.1483%" y="911.50"></text></g><g><title>[unknown] (198 samples, 1.23%)</title><rect x="8.3644%" y="885" width="1.2304%" height="15" fill="rgb(216,222,40)"/><text x="8.6144%" y="895.50"></text></g><g><title>[unknown] (150 samples, 0.93%)</title><rect x="8.6627%" y="869" width="0.9321%" height="15" fill="rgb(234,217,39)"/><text x="8.9127%" y="879.50"></text></g><g><title>[unknown] (64 samples, 0.40%)</title><rect x="9.1971%" y="853" width="0.3977%" height="15" fill="rgb(207,178,40)"/><text x="9.4471%" y="863.50"></text></g><g><title>[unknown] (24 samples, 0.15%)</title><rect x="9.4457%" y="837" width="0.1491%" height="15" fill="rgb(221,136,13)"/><text x="9.6957%" y="847.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="9.5451%" y="821" width="0.0497%" height="15" fill="rgb(249,199,10)"/><text x="9.7951%" y="831.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.01%)</title><rect x="9.5948%" y="1045" width="0.0124%" height="15" fill="rgb(249,222,13)"/><text x="9.8448%" y="1055.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.01%)</title><rect x="9.5948%" y="1029" width="0.0124%" height="15" fill="rgb(244,185,38)"/><text x="9.8448%" y="1039.50"></text></g><g><title>core::mem::replace (2 samples, 0.01%)</title><rect x="9.5948%" y="1013" width="0.0124%" height="15" fill="rgb(236,202,9)"/><text x="9.8448%" y="1023.50"></text></g><g><title>core::mem::swap (2 samples, 0.01%)</title><rect x="9.5948%" y="997" width="0.0124%" height="15" fill="rgb(250,229,37)"/><text x="9.8448%" y="1007.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.01%)</title><rect x="9.5948%" y="981" width="0.0124%" height="15" fill="rgb(206,174,23)"/><text x="9.8448%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="9.5948%" y="965" width="0.0124%" height="15" fill="rgb(211,33,43)"/><text x="9.8448%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (12 samples, 0.07%)</title><rect x="9.6135%" y="1045" width="0.0746%" height="15" fill="rgb(245,58,50)"/><text x="9.8635%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_load (12 samples, 0.07%)</title><rect x="9.6135%" y="1029" width="0.0746%" height="15" fill="rgb(244,68,36)"/><text x="9.8635%" y="1039.50"></text></g><g><title>&lt;std::time::Instant as core::cmp::PartialOrd&gt;::gt (3 samples, 0.02%)</title><rect x="9.6880%" y="1029" width="0.0186%" height="15" fill="rgb(232,229,15)"/><text x="9.9380%" y="1039.50"></text></g><g><title>&lt;std::sys::unix::time::inner::Instant as core::cmp::PartialOrd&gt;::partial_cmp (3 samples, 0.02%)</title><rect x="9.6880%" y="1013" width="0.0186%" height="15" fill="rgb(254,30,23)"/><text x="9.9380%" y="1023.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (3 samples, 0.02%)</title><rect x="9.6880%" y="997" width="0.0186%" height="15" fill="rgb(235,160,14)"/><text x="9.9380%" y="1007.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (3 samples, 0.02%)</title><rect x="9.6880%" y="981" width="0.0186%" height="15" fill="rgb(212,155,44)"/><text x="9.9380%" y="991.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (2 samples, 0.01%)</title><rect x="9.6943%" y="965" width="0.0124%" height="15" fill="rgb(226,2,50)"/><text x="9.9443%" y="975.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (9 samples, 0.06%)</title><rect x="9.6880%" y="1045" width="0.0559%" height="15" fill="rgb(234,177,6)"/><text x="9.9380%" y="1055.50"></text></g><g><title>std::time::Instant::now (6 samples, 0.04%)</title><rect x="9.7067%" y="1029" width="0.0373%" height="15" fill="rgb(217,24,9)"/><text x="9.9567%" y="1039.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (6 samples, 0.04%)</title><rect x="9.7067%" y="1013" width="0.0373%" height="15" fill="rgb(220,13,46)"/><text x="9.9567%" y="1023.50"></text></g><g><title>std::sys::unix::time::inner::now (6 samples, 0.04%)</title><rect x="9.7067%" y="997" width="0.0373%" height="15" fill="rgb(239,221,27)"/><text x="9.9567%" y="1007.50"></text></g><g><title>__clock_gettime (5 samples, 0.03%)</title><rect x="9.7129%" y="981" width="0.0311%" height="15" fill="rgb(222,198,25)"/><text x="9.9629%" y="991.50"></text></g><g><title>__vdso_clock_gettime (5 samples, 0.03%)</title><rect x="9.7129%" y="965" width="0.0311%" height="15" fill="rgb(211,99,13)"/><text x="9.9629%" y="975.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (9 samples, 0.06%)</title><rect x="9.7440%" y="1045" width="0.0559%" height="15" fill="rgb(232,111,31)"/><text x="9.9940%" y="1055.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (8 samples, 0.05%)</title><rect x="9.7502%" y="1029" width="0.0497%" height="15" fill="rgb(245,82,37)"/><text x="10.0002%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (8 samples, 0.05%)</title><rect x="9.7502%" y="1013" width="0.0497%" height="15" fill="rgb(227,149,46)"/><text x="10.0002%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (8 samples, 0.05%)</title><rect x="9.7502%" y="997" width="0.0497%" height="15" fill="rgb(218,36,50)"/><text x="10.0002%" y="1007.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (482 samples, 3.00%)</title><rect x="6.9227%" y="1077" width="2.9953%" height="15" fill="rgb(226,80,48)"/><text x="7.1727%" y="1087.50">par..</text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (482 samples, 3.00%)</title><rect x="6.9227%" y="1061" width="2.9953%" height="15" fill="rgb(238,224,15)"/><text x="7.1727%" y="1071.50">par..</text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (19 samples, 0.12%)</title><rect x="9.7999%" y="1045" width="0.1181%" height="15" fill="rgb(241,136,10)"/><text x="10.0499%" y="1055.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (19 samples, 0.12%)</title><rect x="9.7999%" y="1029" width="0.1181%" height="15" fill="rgb(208,32,45)"/><text x="10.0499%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (19 samples, 0.12%)</title><rect x="9.7999%" y="1013" width="0.1181%" height="15" fill="rgb(207,135,9)"/><text x="10.0499%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_sub (19 samples, 0.12%)</title><rect x="9.7999%" y="997" width="0.1181%" height="15" fill="rgb(206,86,44)"/><text x="10.0499%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::queue::Pointers&gt;&gt; (4 samples, 0.02%)</title><rect x="9.9180%" y="1029" width="0.0249%" height="15" fill="rgb(245,177,15)"/><text x="10.1680%" y="1039.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="9.9180%" y="1013" width="0.0249%" height="15" fill="rgb(206,64,50)"/><text x="10.1680%" y="1023.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (4 samples, 0.02%)</title><rect x="9.9180%" y="997" width="0.0249%" height="15" fill="rgb(234,36,40)"/><text x="10.1680%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (4 samples, 0.02%)</title><rect x="9.9180%" y="981" width="0.0249%" height="15" fill="rgb(213,64,8)"/><text x="10.1680%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.02%)</title><rect x="9.9180%" y="965" width="0.0249%" height="15" fill="rgb(210,75,36)"/><text x="10.1680%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (13 samples, 0.08%)</title><rect x="9.9428%" y="981" width="0.0808%" height="15" fill="rgb(229,88,21)"/><text x="10.1928%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (13 samples, 0.08%)</title><rect x="9.9428%" y="965" width="0.0808%" height="15" fill="rgb(252,204,47)"/><text x="10.1928%" y="975.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::push (19 samples, 0.12%)</title><rect x="9.9180%" y="1045" width="0.1181%" height="15" fill="rgb(208,77,27)"/><text x="10.1680%" y="1055.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (15 samples, 0.09%)</title><rect x="9.9428%" y="1029" width="0.0932%" height="15" fill="rgb(221,76,26)"/><text x="10.1928%" y="1039.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (15 samples, 0.09%)</title><rect x="9.9428%" y="1013" width="0.0932%" height="15" fill="rgb(225,139,18)"/><text x="10.1928%" y="1023.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (15 samples, 0.09%)</title><rect x="9.9428%" y="997" width="0.0932%" height="15" fill="rgb(230,137,11)"/><text x="10.1928%" y="1007.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (2 samples, 0.01%)</title><rect x="10.0236%" y="981" width="0.0124%" height="15" fill="rgb(212,28,1)"/><text x="10.2736%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (17 samples, 0.11%)</title><rect x="10.0485%" y="1013" width="0.1056%" height="15" fill="rgb(248,164,17)"/><text x="10.2985%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;usize&gt;&gt;&gt; (6 samples, 0.04%)</title><rect x="10.1541%" y="1013" width="0.0373%" height="15" fill="rgb(222,171,42)"/><text x="10.4041%" y="1023.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.04%)</title><rect x="10.1541%" y="997" width="0.0373%" height="15" fill="rgb(243,84,45)"/><text x="10.4041%" y="1007.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (6 samples, 0.04%)</title><rect x="10.1541%" y="981" width="0.0373%" height="15" fill="rgb(252,49,23)"/><text x="10.4041%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (6 samples, 0.04%)</title><rect x="10.1541%" y="965" width="0.0373%" height="15" fill="rgb(215,19,7)"/><text x="10.4041%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.04%)</title><rect x="10.1541%" y="949" width="0.0373%" height="15" fill="rgb(238,81,41)"/><text x="10.4041%" y="959.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (2 samples, 0.01%)</title><rect x="10.1914%" y="1013" width="0.0124%" height="15" fill="rgb(210,199,37)"/><text x="10.4414%" y="1023.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.01%)</title><rect x="10.1914%" y="997" width="0.0124%" height="15" fill="rgb(244,192,49)"/><text x="10.4414%" y="1007.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.01%)</title><rect x="10.1914%" y="981" width="0.0124%" height="15" fill="rgb(226,211,11)"/><text x="10.4414%" y="991.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::notify_should_wakeup (20 samples, 0.12%)</title><rect x="10.2038%" y="1013" width="0.1243%" height="15" fill="rgb(236,162,54)"/><text x="10.4538%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (12 samples, 0.07%)</title><rect x="10.2535%" y="997" width="0.0746%" height="15" fill="rgb(220,229,9)"/><text x="10.5035%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_add (12 samples, 0.07%)</title><rect x="10.2535%" y="981" width="0.0746%" height="15" fill="rgb(250,87,22)"/><text x="10.5035%" y="991.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::schedule (580 samples, 3.60%)</title><rect x="6.7301%" y="1157" width="3.6043%" height="15" fill="rgb(239,43,17)"/><text x="6.9801%" y="1167.50">toki..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (580 samples, 3.60%)</title><rect x="6.7301%" y="1141" width="3.6043%" height="15" fill="rgb(231,177,25)"/><text x="6.9801%" y="1151.50">toki..</text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::schedule::{{closure}} (580 samples, 3.60%)</title><rect x="6.7301%" y="1125" width="3.6043%" height="15" fill="rgb(219,179,1)"/><text x="6.9801%" y="1135.50">toki..</text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::schedule (580 samples, 3.60%)</title><rect x="6.7301%" y="1109" width="3.6043%" height="15" fill="rgb(238,219,53)"/><text x="6.9801%" y="1119.50">toki..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (578 samples, 3.59%)</title><rect x="6.7425%" y="1093" width="3.5918%" height="15" fill="rgb(232,167,36)"/><text x="6.9925%" y="1103.50">toki..</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (67 samples, 0.42%)</title><rect x="9.9180%" y="1077" width="0.4164%" height="15" fill="rgb(244,19,51)"/><text x="10.1680%" y="1087.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (67 samples, 0.42%)</title><rect x="9.9180%" y="1061" width="0.4164%" height="15" fill="rgb(224,6,22)"/><text x="10.1680%" y="1071.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (48 samples, 0.30%)</title><rect x="10.0360%" y="1045" width="0.2983%" height="15" fill="rgb(224,145,5)"/><text x="10.2860%" y="1055.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::worker_to_notify (47 samples, 0.29%)</title><rect x="10.0423%" y="1029" width="0.2921%" height="15" fill="rgb(234,130,49)"/><text x="10.2923%" y="1039.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (594 samples, 3.69%)</title><rect x="6.6866%" y="1205" width="3.6913%" height="15" fill="rgb(254,6,2)"/><text x="6.9366%" y="1215.50">toki..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (594 samples, 3.69%)</title><rect x="6.6866%" y="1189" width="3.6913%" height="15" fill="rgb(208,96,46)"/><text x="6.9366%" y="1199.50">toki..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_ref (587 samples, 3.65%)</title><rect x="6.7301%" y="1173" width="3.6478%" height="15" fill="rgb(239,3,39)"/><text x="6.9801%" y="1183.50">toki..</text></g><g><title>tokio::runtime::task::state::State::transition_to_notified (7 samples, 0.04%)</title><rect x="10.3343%" y="1157" width="0.0435%" height="15" fill="rgb(233,210,1)"/><text x="10.5843%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (7 samples, 0.04%)</title><rect x="10.3343%" y="1141" width="0.0435%" height="15" fill="rgb(244,137,37)"/><text x="10.5843%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_or (7 samples, 0.04%)</title><rect x="10.3343%" y="1125" width="0.0435%" height="15" fill="rgb(240,136,2)"/><text x="10.5843%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (29 samples, 0.18%)</title><rect x="10.3840%" y="1189" width="0.1802%" height="15" fill="rgb(239,18,37)"/><text x="10.6340%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_add (29 samples, 0.18%)</title><rect x="10.3840%" y="1173" width="0.1802%" height="15" fill="rgb(218,185,22)"/><text x="10.6340%" y="1183.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (260 samples, 1.62%)</title><rect x="10.5643%" y="1173" width="1.6157%" height="15" fill="rgb(225,218,4)"/><text x="10.8143%" y="1183.50"></text></g><g><title>[libc-2.31.so] (260 samples, 1.62%)</title><rect x="10.5643%" y="1157" width="1.6157%" height="15" fill="rgb(230,182,32)"/><text x="10.8143%" y="1167.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="12.1613%" y="1141" width="0.0186%" height="15" fill="rgb(242,56,43)"/><text x="12.4113%" y="1151.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="12.1613%" y="1125" width="0.0186%" height="15" fill="rgb(233,99,24)"/><text x="12.4113%" y="1135.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="12.1613%" y="1109" width="0.0186%" height="15" fill="rgb(234,209,42)"/><text x="12.4113%" y="1119.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="12.1613%" y="1093" width="0.0186%" height="15" fill="rgb(227,7,12)"/><text x="12.4113%" y="1103.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="12.1613%" y="1077" width="0.0186%" height="15" fill="rgb(245,203,43)"/><text x="12.4113%" y="1087.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="12.1613%" y="1061" width="0.0186%" height="15" fill="rgb(238,205,33)"/><text x="12.4113%" y="1071.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="12.1613%" y="1045" width="0.0186%" height="15" fill="rgb(231,56,7)"/><text x="12.4113%" y="1055.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="12.1613%" y="1029" width="0.0186%" height="15" fill="rgb(244,186,29)"/><text x="12.4113%" y="1039.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="12.1675%" y="1013" width="0.0124%" height="15" fill="rgb(234,111,31)"/><text x="12.4175%" y="1023.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (411 samples, 2.55%)</title><rect x="10.3778%" y="1205" width="2.5541%" height="15" fill="rgb(241,149,10)"/><text x="10.6278%" y="1215.50">to..</text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::write (381 samples, 2.37%)</title><rect x="10.5643%" y="1189" width="2.3676%" height="15" fill="rgb(249,206,44)"/><text x="10.8143%" y="1199.50">to..</text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::set_ready (121 samples, 0.75%)</title><rect x="12.1800%" y="1173" width="0.7519%" height="15" fill="rgb(251,153,30)"/><text x="12.4300%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (121 samples, 0.75%)</title><rect x="12.1800%" y="1157" width="0.7519%" height="15" fill="rgb(239,152,38)"/><text x="12.4300%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_or (121 samples, 0.75%)</title><rect x="12.1800%" y="1141" width="0.7519%" height="15" fill="rgb(249,139,47)"/><text x="12.4300%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_and (4 samples, 0.02%)</title><rect x="12.9381%" y="1173" width="0.0249%" height="15" fill="rgb(244,64,35)"/><text x="13.1881%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_and (4 samples, 0.02%)</title><rect x="12.9381%" y="1157" width="0.0249%" height="15" fill="rgb(216,46,15)"/><text x="13.1881%" y="1167.50"></text></g><g><title>tokio::sync::mpsc::chan::Tx&lt;T,S&gt;::send (1,075 samples, 6.68%)</title><rect x="6.3510%" y="1237" width="6.6803%" height="15" fill="rgb(250,74,19)"/><text x="6.6010%" y="1247.50">tokio::sy..</text></g><g><title>tokio::sync::mpsc::chan::Chan&lt;T,S&gt;::send (1,075 samples, 6.68%)</title><rect x="6.3510%" y="1221" width="6.6803%" height="15" fill="rgb(249,42,33)"/><text x="6.6010%" y="1231.50">tokio::sy..</text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::wake (16 samples, 0.10%)</title><rect x="12.9319%" y="1205" width="0.0994%" height="15" fill="rgb(242,149,17)"/><text x="13.1819%" y="1215.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::take_waker (15 samples, 0.09%)</title><rect x="12.9381%" y="1189" width="0.0932%" height="15" fill="rgb(244,29,21)"/><text x="13.1881%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (11 samples, 0.07%)</title><rect x="12.9630%" y="1173" width="0.0684%" height="15" fill="rgb(220,130,37)"/><text x="13.2130%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_or (11 samples, 0.07%)</title><rect x="12.9630%" y="1157" width="0.0684%" height="15" fill="rgb(211,67,2)"/><text x="13.2130%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (20 samples, 0.12%)</title><rect x="13.0437%" y="1221" width="0.1243%" height="15" fill="rgb(235,68,52)"/><text x="13.2937%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (20 samples, 0.12%)</title><rect x="13.0437%" y="1205" width="0.1243%" height="15" fill="rgb(246,142,3)"/><text x="13.2937%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (14 samples, 0.09%)</title><rect x="13.1680%" y="1221" width="0.0870%" height="15" fill="rgb(241,25,7)"/><text x="13.4180%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.09%)</title><rect x="13.1680%" y="1205" width="0.0870%" height="15" fill="rgb(242,119,39)"/><text x="13.4180%" y="1215.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::send_to_runner (1,198 samples, 7.44%)</title><rect x="5.8911%" y="1269" width="7.4447%" height="15" fill="rgb(241,98,45)"/><text x="6.1411%" y="1279.50">rho_runtim..</text></g><g><title>tokio::sync::mpsc::unbounded::UnboundedSender&lt;T&gt;::send (1,124 samples, 6.98%)</title><rect x="6.3510%" y="1253" width="6.9848%" height="15" fill="rgb(254,28,30)"/><text x="6.6010%" y="1263.50">tokio::sy..</text></g><g><title>tokio::sync::mpsc::unbounded::UnboundedSender&lt;T&gt;::inc_num_messages (49 samples, 0.30%)</title><rect x="13.0313%" y="1237" width="0.3045%" height="15" fill="rgb(241,142,54)"/><text x="13.2813%" y="1247.50"></text></g><g><title>tokio::sync::mpsc::chan::Tx&lt;T,S&gt;::semaphore (13 samples, 0.08%)</title><rect x="13.2550%" y="1221" width="0.0808%" height="15" fill="rgb(222,85,15)"/><text x="13.5050%" y="1231.50"></text></g><g><title>tokio::park::thread::CachedParkThread::block_on (4 samples, 0.02%)</title><rect x="13.3358%" y="1269" width="0.0249%" height="15" fill="rgb(210,85,47)"/><text x="13.5858%" y="1279.50"></text></g><g><title>tokio::coop::budget (4 samples, 0.02%)</title><rect x="13.3358%" y="1253" width="0.0249%" height="15" fill="rgb(224,206,25)"/><text x="13.5858%" y="1263.50"></text></g><g><title>tokio::coop::with_budget (4 samples, 0.02%)</title><rect x="13.3358%" y="1237" width="0.0249%" height="15" fill="rgb(243,201,19)"/><text x="13.5858%" y="1247.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.02%)</title><rect x="13.3358%" y="1221" width="0.0249%" height="15" fill="rgb(236,59,4)"/><text x="13.5858%" y="1231.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.02%)</title><rect x="13.3358%" y="1205" width="0.0249%" height="15" fill="rgb(254,179,45)"/><text x="13.5858%" y="1215.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (4 samples, 0.02%)</title><rect x="13.3358%" y="1189" width="0.0249%" height="15" fill="rgb(226,14,10)"/><text x="13.5858%" y="1199.50"></text></g><g><title>tokio::park::thread::CachedParkThread::block_on::{{closure}} (4 samples, 0.02%)</title><rect x="13.3358%" y="1173" width="0.0249%" height="15" fill="rgb(244,27,41)"/><text x="13.5858%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.02%)</title><rect x="13.3358%" y="1157" width="0.0249%" height="15" fill="rgb(235,35,32)"/><text x="13.5858%" y="1167.50"></text></g><g><title>rho_runtime::run::{{closure}} (4 samples, 0.02%)</title><rect x="13.3358%" y="1141" width="0.0249%" height="15" fill="rgb(218,68,31)"/><text x="13.5858%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.02%)</title><rect x="13.3358%" y="1125" width="0.0249%" height="15" fill="rgb(207,120,37)"/><text x="13.5858%" y="1135.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::run::{{closure}} (4 samples, 0.02%)</title><rect x="13.3358%" y="1109" width="0.0249%" height="15" fill="rgb(227,98,0)"/><text x="13.5858%" y="1119.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::handle_produce (3 samples, 0.02%)</title><rect x="13.3420%" y="1093" width="0.0186%" height="15" fill="rgb(207,7,3)"/><text x="13.5920%" y="1103.50"></text></g><g><title>__rust_probestack (3 samples, 0.02%)</title><rect x="13.3420%" y="1077" width="0.0186%" height="15" fill="rgb(206,98,19)"/><text x="13.5920%" y="1087.50"></text></g><g><title>__sched_yield (13 samples, 0.08%)</title><rect x="13.4104%" y="1253" width="0.0808%" height="15" fill="rgb(217,5,26)"/><text x="13.6604%" y="1263.50"></text></g><g><title>[unknown] (13 samples, 0.08%)</title><rect x="13.4104%" y="1237" width="0.0808%" height="15" fill="rgb(235,190,38)"/><text x="13.6604%" y="1247.50"></text></g><g><title>[unknown] (10 samples, 0.06%)</title><rect x="13.4290%" y="1221" width="0.0621%" height="15" fill="rgb(247,86,24)"/><text x="13.6790%" y="1231.50"></text></g><g><title>[unknown] (10 samples, 0.06%)</title><rect x="13.4290%" y="1205" width="0.0621%" height="15" fill="rgb(205,101,16)"/><text x="13.6790%" y="1215.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="13.4415%" y="1189" width="0.0497%" height="15" fill="rgb(246,168,33)"/><text x="13.6915%" y="1199.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="13.4415%" y="1173" width="0.0497%" height="15" fill="rgb(231,114,1)"/><text x="13.6915%" y="1183.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="13.4477%" y="1157" width="0.0435%" height="15" fill="rgb(207,184,53)"/><text x="13.6977%" y="1167.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="13.4663%" y="1141" width="0.0249%" height="15" fill="rgb(224,95,51)"/><text x="13.7163%" y="1151.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="13.4663%" y="1125" width="0.0249%" height="15" fill="rgb(212,188,45)"/><text x="13.7163%" y="1135.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="13.4787%" y="1109" width="0.0124%" height="15" fill="rgb(223,154,38)"/><text x="13.7287%" y="1119.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::find_block (23 samples, 0.14%)</title><rect x="13.3669%" y="1269" width="0.1429%" height="15" fill="rgb(251,22,52)"/><text x="13.6169%" y="1279.50"></text></g><g><title>[unknown] (2,124 samples, 13.20%)</title><rect x="0.3169%" y="1285" width="13.1991%" height="15" fill="rgb(229,209,22)"/><text x="0.5669%" y="1295.50">[unknown]</text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,()&gt;&gt; (2 samples, 0.01%)</title><rect x="13.6155%" y="933" width="0.0124%" height="15" fill="rgb(234,138,34)"/><text x="13.8655%" y="943.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="13.6155%" y="917" width="0.0124%" height="15" fill="rgb(212,95,11)"/><text x="13.8655%" y="927.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (2 samples, 0.01%)</title><rect x="13.6155%" y="901" width="0.0124%" height="15" fill="rgb(240,179,47)"/><text x="13.8655%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (2 samples, 0.01%)</title><rect x="13.6155%" y="885" width="0.0124%" height="15" fill="rgb(240,163,11)"/><text x="13.8655%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.01%)</title><rect x="13.6155%" y="869" width="0.0124%" height="15" fill="rgb(236,37,12)"/><text x="13.8655%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (13 samples, 0.08%)</title><rect x="13.6279%" y="933" width="0.0808%" height="15" fill="rgb(232,164,16)"/><text x="13.8779%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (13 samples, 0.08%)</title><rect x="13.6279%" y="917" width="0.0808%" height="15" fill="rgb(244,205,15)"/><text x="13.8779%" y="927.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (7 samples, 0.04%)</title><rect x="13.7211%" y="885" width="0.0435%" height="15" fill="rgb(223,117,47)"/><text x="13.9711%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (7 samples, 0.04%)</title><rect x="13.7211%" y="869" width="0.0435%" height="15" fill="rgb(244,107,35)"/><text x="13.9711%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (7 samples, 0.04%)</title><rect x="13.7211%" y="853" width="0.0435%" height="15" fill="rgb(205,140,8)"/><text x="13.9711%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (20 samples, 0.12%)</title><rect x="13.7895%" y="821" width="0.1243%" height="15" fill="rgb(228,84,46)"/><text x="14.0395%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_load (20 samples, 0.12%)</title><rect x="13.7895%" y="805" width="0.1243%" height="15" fill="rgb(254,188,9)"/><text x="14.0395%" y="815.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (488 samples, 3.03%)</title><rect x="13.7895%" y="837" width="3.0326%" height="15" fill="rgb(206,112,54)"/><text x="14.0395%" y="847.50">&lt;pa..</text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (468 samples, 2.91%)</title><rect x="13.9137%" y="821" width="2.9083%" height="15" fill="rgb(216,84,49)"/><text x="14.1637%" y="831.50">pa..</text></g><g><title>syscall (468 samples, 2.91%)</title><rect x="13.9137%" y="805" width="2.9083%" height="15" fill="rgb(214,194,35)"/><text x="14.1637%" y="815.50">sy..</text></g><g><title>[unknown] (460 samples, 2.86%)</title><rect x="13.9635%" y="789" width="2.8586%" height="15" fill="rgb(249,28,3)"/><text x="14.2135%" y="799.50">[u..</text></g><g><title>[unknown] (443 samples, 2.75%)</title><rect x="14.0691%" y="773" width="2.7529%" height="15" fill="rgb(222,56,52)"/><text x="14.3191%" y="783.50">[u..</text></g><g><title>[unknown] (438 samples, 2.72%)</title><rect x="14.1002%" y="757" width="2.7218%" height="15" fill="rgb(245,217,50)"/><text x="14.3502%" y="767.50">[u..</text></g><g><title>[unknown] (430 samples, 2.67%)</title><rect x="14.1499%" y="741" width="2.6721%" height="15" fill="rgb(213,201,24)"/><text x="14.3999%" y="751.50">[u..</text></g><g><title>[unknown] (423 samples, 2.63%)</title><rect x="14.1934%" y="725" width="2.6286%" height="15" fill="rgb(248,116,28)"/><text x="14.4434%" y="735.50">[u..</text></g><g><title>[unknown] (393 samples, 2.44%)</title><rect x="14.3798%" y="709" width="2.4422%" height="15" fill="rgb(219,72,43)"/><text x="14.6298%" y="719.50">[u..</text></g><g><title>[unknown] (355 samples, 2.21%)</title><rect x="14.6160%" y="693" width="2.2061%" height="15" fill="rgb(209,138,14)"/><text x="14.8660%" y="703.50">[..</text></g><g><title>[unknown] (339 samples, 2.11%)</title><rect x="14.7154%" y="677" width="2.1066%" height="15" fill="rgb(222,18,33)"/><text x="14.9654%" y="687.50">[..</text></g><g><title>[unknown] (312 samples, 1.94%)</title><rect x="14.8832%" y="661" width="1.9389%" height="15" fill="rgb(213,199,7)"/><text x="15.1332%" y="671.50">[..</text></g><g><title>[unknown] (231 samples, 1.44%)</title><rect x="15.3865%" y="645" width="1.4355%" height="15" fill="rgb(250,110,10)"/><text x="15.6365%" y="655.50"></text></g><g><title>[unknown] (171 samples, 1.06%)</title><rect x="15.7594%" y="629" width="1.0626%" height="15" fill="rgb(248,123,6)"/><text x="16.0094%" y="639.50"></text></g><g><title>[unknown] (117 samples, 0.73%)</title><rect x="16.0950%" y="613" width="0.7271%" height="15" fill="rgb(206,91,31)"/><text x="16.3450%" y="623.50"></text></g><g><title>[unknown] (83 samples, 0.52%)</title><rect x="16.3062%" y="597" width="0.5158%" height="15" fill="rgb(211,154,13)"/><text x="16.5562%" y="607.50"></text></g><g><title>[unknown] (73 samples, 0.45%)</title><rect x="16.3684%" y="581" width="0.4536%" height="15" fill="rgb(225,148,7)"/><text x="16.6184%" y="591.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.01%)</title><rect x="16.8220%" y="837" width="0.0124%" height="15" fill="rgb(220,160,43)"/><text x="17.0720%" y="847.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal::{{closure}} (2 samples, 0.01%)</title><rect x="16.8220%" y="821" width="0.0124%" height="15" fill="rgb(213,52,39)"/><text x="17.0720%" y="831.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (2 samples, 0.01%)</title><rect x="16.8220%" y="805" width="0.0124%" height="15" fill="rgb(243,137,7)"/><text x="17.0720%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (2 samples, 0.01%)</title><rect x="16.8220%" y="789" width="0.0124%" height="15" fill="rgb(230,79,13)"/><text x="17.0720%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.01%)</title><rect x="16.8220%" y="773" width="0.0124%" height="15" fill="rgb(247,105,23)"/><text x="17.0720%" y="783.50"></text></g><g><title>parking_lot_core::parking_lot::get_hashtable (2 samples, 0.01%)</title><rect x="16.8407%" y="821" width="0.0124%" height="15" fill="rgb(223,179,41)"/><text x="17.0907%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (2 samples, 0.01%)</title><rect x="16.8407%" y="805" width="0.0124%" height="15" fill="rgb(218,9,34)"/><text x="17.0907%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.01%)</title><rect x="16.8407%" y="789" width="0.0124%" height="15" fill="rgb(222,106,8)"/><text x="17.0907%" y="799.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (16 samples, 0.10%)</title><rect x="16.8407%" y="837" width="0.0994%" height="15" fill="rgb(211,220,0)"/><text x="17.0907%" y="847.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (14 samples, 0.09%)</title><rect x="16.8531%" y="821" width="0.0870%" height="15" fill="rgb(229,52,16)"/><text x="17.1031%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (14 samples, 0.09%)</title><rect x="16.8531%" y="805" width="0.0870%" height="15" fill="rgb(212,155,18)"/><text x="17.1031%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (14 samples, 0.09%)</title><rect x="16.8531%" y="789" width="0.0870%" height="15" fill="rgb(242,21,14)"/><text x="17.1031%" y="799.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (529 samples, 3.29%)</title><rect x="13.7087%" y="933" width="3.2873%" height="15" fill="rgb(222,19,48)"/><text x="13.9587%" y="943.50">tok..</text></g><g><title>parking_lot::condvar::Condvar::wait (529 samples, 3.29%)</title><rect x="13.7087%" y="917" width="3.2873%" height="15" fill="rgb(232,45,27)"/><text x="13.9587%" y="927.50">par..</text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (529 samples, 3.29%)</title><rect x="13.7087%" y="901" width="3.2873%" height="15" fill="rgb(249,103,42)"/><text x="13.9587%" y="911.50">par..</text></g><g><title>parking_lot_core::parking_lot::park (520 samples, 3.23%)</title><rect x="13.7646%" y="885" width="3.2314%" height="15" fill="rgb(246,81,33)"/><text x="14.0146%" y="895.50">par..</text></g><g><title>parking_lot_core::parking_lot::with_thread_data (520 samples, 3.23%)</title><rect x="13.7646%" y="869" width="3.2314%" height="15" fill="rgb(252,33,42)"/><text x="14.0146%" y="879.50">par..</text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (519 samples, 3.23%)</title><rect x="13.7708%" y="853" width="3.2252%" height="15" fill="rgb(209,212,41)"/><text x="14.0208%" y="863.50">par..</text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (9 samples, 0.06%)</title><rect x="16.9401%" y="837" width="0.0559%" height="15" fill="rgb(207,154,6)"/><text x="17.1901%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (9 samples, 0.06%)</title><rect x="16.9401%" y="821" width="0.0559%" height="15" fill="rgb(223,64,47)"/><text x="17.1901%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_sub (9 samples, 0.06%)</title><rect x="16.9401%" y="805" width="0.0559%" height="15" fill="rgb(211,161,38)"/><text x="17.1901%" y="815.50"></text></g><g><title>&lt;tokio::park::thread::CachedParkThread as tokio::park::Park&gt;::park (551 samples, 3.42%)</title><rect x="13.5906%" y="1029" width="3.4241%" height="15" fill="rgb(219,138,40)"/><text x="13.8406%" y="1039.50">&lt;to..</text></g><g><title>tokio::park::thread::CachedParkThread::with_current (551 samples, 3.42%)</title><rect x="13.5906%" y="1013" width="3.4241%" height="15" fill="rgb(241,228,46)"/><text x="13.8406%" y="1023.50">tok..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (551 samples, 3.42%)</title><rect x="13.5906%" y="997" width="3.4241%" height="15" fill="rgb(223,209,38)"/><text x="13.8406%" y="1007.50">std..</text></g><g><title>tokio::park::thread::CachedParkThread::with_current::{{closure}} (550 samples, 3.42%)</title><rect x="13.5968%" y="981" width="3.4178%" height="15" fill="rgb(236,164,45)"/><text x="13.8468%" y="991.50">tok..</text></g><g><title>&lt;tokio::park::thread::CachedParkThread as tokio::park::Park&gt;::park::{{closure}} (550 samples, 3.42%)</title><rect x="13.5968%" y="965" width="3.4178%" height="15" fill="rgb(231,15,5)"/><text x="13.8468%" y="975.50">&lt;to..</text></g><g><title>tokio::park::thread::Inner::park (548 samples, 3.41%)</title><rect x="13.6092%" y="949" width="3.4054%" height="15" fill="rgb(252,35,15)"/><text x="13.8592%" y="959.50">tok..</text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (3 samples, 0.02%)</title><rect x="16.9960%" y="933" width="0.0186%" height="15" fill="rgb(248,181,18)"/><text x="17.2460%" y="943.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (3 samples, 0.02%)</title><rect x="16.9960%" y="917" width="0.0186%" height="15" fill="rgb(233,39,42)"/><text x="17.2460%" y="927.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (3 samples, 0.02%)</title><rect x="16.9960%" y="901" width="0.0186%" height="15" fill="rgb(238,110,33)"/><text x="17.2460%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (3 samples, 0.02%)</title><rect x="16.9960%" y="885" width="0.0186%" height="15" fill="rgb(233,195,10)"/><text x="17.2460%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.02%)</title><rect x="16.9960%" y="869" width="0.0186%" height="15" fill="rgb(254,105,3)"/><text x="17.2460%" y="879.50"></text></g><g><title>tokio::coop::CURRENT::__getit (2 samples, 0.01%)</title><rect x="17.0147%" y="965" width="0.0124%" height="15" fill="rgb(221,225,9)"/><text x="17.2647%" y="975.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (2 samples, 0.01%)</title><rect x="17.0147%" y="949" width="0.0124%" height="15" fill="rgb(224,227,45)"/><text x="17.2647%" y="959.50"></text></g><g><title>_start (568 samples, 3.53%)</title><rect x="13.5160%" y="1285" width="3.5297%" height="15" fill="rgb(229,198,43)"/><text x="13.7660%" y="1295.50">_st..</text></g><g><title>__libc_start_main (568 samples, 3.53%)</title><rect x="13.5160%" y="1269" width="3.5297%" height="15" fill="rgb(206,209,35)"/><text x="13.7660%" y="1279.50">__l..</text></g><g><title>main (568 samples, 3.53%)</title><rect x="13.5160%" y="1253" width="3.5297%" height="15" fill="rgb(245,195,53)"/><text x="13.7660%" y="1263.50">main</text></g><g><title>std::rt::lang_start_internal (568 samples, 3.53%)</title><rect x="13.5160%" y="1237" width="3.5297%" height="15" fill="rgb(240,92,26)"/><text x="13.7660%" y="1247.50">std..</text></g><g><title>std::panic::catch_unwind (568 samples, 3.53%)</title><rect x="13.5160%" y="1221" width="3.5297%" height="15" fill="rgb(207,40,23)"/><text x="13.7660%" y="1231.50">std..</text></g><g><title>std::panicking::try (568 samples, 3.53%)</title><rect x="13.5160%" y="1205" width="3.5297%" height="15" fill="rgb(223,111,35)"/><text x="13.7660%" y="1215.50">std..</text></g><g><title>std::panicking::try::do_call (568 samples, 3.53%)</title><rect x="13.5160%" y="1189" width="3.5297%" height="15" fill="rgb(229,147,28)"/><text x="13.7660%" y="1199.50">std..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (568 samples, 3.53%)</title><rect x="13.5160%" y="1173" width="3.5297%" height="15" fill="rgb(211,29,28)"/><text x="13.7660%" y="1183.50">cor..</text></g><g><title>std::rt::lang_start::{{closure}} (568 samples, 3.53%)</title><rect x="13.5160%" y="1157" width="3.5297%" height="15" fill="rgb(228,72,33)"/><text x="13.7660%" y="1167.50">std..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (568 samples, 3.53%)</title><rect x="13.5160%" y="1141" width="3.5297%" height="15" fill="rgb(205,214,31)"/><text x="13.7660%" y="1151.50">std..</text></g><g><title>core::ops::function::FnOnce::call_once (568 samples, 3.53%)</title><rect x="13.5160%" y="1125" width="3.5297%" height="15" fill="rgb(224,111,15)"/><text x="13.7660%" y="1135.50">cor..</text></g><g><title>rho_runtime::main (568 samples, 3.53%)</title><rect x="13.5160%" y="1109" width="3.5297%" height="15" fill="rgb(253,21,26)"/><text x="13.7660%" y="1119.50">rho..</text></g><g><title>tokio::runtime::Runtime::block_on (568 samples, 3.53%)</title><rect x="13.5160%" y="1093" width="3.5297%" height="15" fill="rgb(245,139,43)"/><text x="13.7660%" y="1103.50">tok..</text></g><g><title>tokio::runtime::thread_pool::ThreadPool::block_on (568 samples, 3.53%)</title><rect x="13.5160%" y="1077" width="3.5297%" height="15" fill="rgb(252,170,7)"/><text x="13.7660%" y="1087.50">tok..</text></g><g><title>tokio::runtime::enter::Enter::block_on (568 samples, 3.53%)</title><rect x="13.5160%" y="1061" width="3.5297%" height="15" fill="rgb(231,118,14)"/><text x="13.7660%" y="1071.50">tok..</text></g><g><title>tokio::park::thread::CachedParkThread::block_on (568 samples, 3.53%)</title><rect x="13.5160%" y="1045" width="3.5297%" height="15" fill="rgb(238,83,0)"/><text x="13.7660%" y="1055.50">tok..</text></g><g><title>tokio::coop::budget (5 samples, 0.03%)</title><rect x="17.0147%" y="1029" width="0.0311%" height="15" fill="rgb(221,39,39)"/><text x="17.2647%" y="1039.50"></text></g><g><title>tokio::coop::with_budget (5 samples, 0.03%)</title><rect x="17.0147%" y="1013" width="0.0311%" height="15" fill="rgb(222,119,46)"/><text x="17.2647%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.03%)</title><rect x="17.0147%" y="997" width="0.0311%" height="15" fill="rgb(222,165,49)"/><text x="17.2647%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.03%)</title><rect x="17.0147%" y="981" width="0.0311%" height="15" fill="rgb(219,113,52)"/><text x="17.2647%" y="991.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (3 samples, 0.02%)</title><rect x="17.0271%" y="965" width="0.0186%" height="15" fill="rgb(214,7,15)"/><text x="17.2771%" y="975.50"></text></g><g><title>[unknown] (44 samples, 0.27%)</title><rect x="17.0457%" y="1269" width="0.2734%" height="15" fill="rgb(235,32,4)"/><text x="17.2957%" y="1279.50"></text></g><g><title>[unknown] (44 samples, 0.27%)</title><rect x="17.0457%" y="1253" width="0.2734%" height="15" fill="rgb(238,90,54)"/><text x="17.2957%" y="1263.50"></text></g><g><title>[unknown] (44 samples, 0.27%)</title><rect x="17.0457%" y="1237" width="0.2734%" height="15" fill="rgb(213,208,19)"/><text x="17.2957%" y="1247.50"></text></g><g><title>[unknown] (42 samples, 0.26%)</title><rect x="17.0582%" y="1221" width="0.2610%" height="15" fill="rgb(233,156,4)"/><text x="17.3082%" y="1231.50"></text></g><g><title>[unknown] (40 samples, 0.25%)</title><rect x="17.0706%" y="1205" width="0.2486%" height="15" fill="rgb(207,194,5)"/><text x="17.3206%" y="1215.50"></text></g><g><title>[unknown] (39 samples, 0.24%)</title><rect x="17.0768%" y="1189" width="0.2424%" height="15" fill="rgb(206,111,30)"/><text x="17.3268%" y="1199.50"></text></g><g><title>[unknown] (38 samples, 0.24%)</title><rect x="17.0830%" y="1173" width="0.2361%" height="15" fill="rgb(243,70,54)"/><text x="17.3330%" y="1183.50"></text></g><g><title>[unknown] (38 samples, 0.24%)</title><rect x="17.0830%" y="1157" width="0.2361%" height="15" fill="rgb(242,28,8)"/><text x="17.3330%" y="1167.50"></text></g><g><title>clone (45 samples, 0.28%)</title><rect x="17.0457%" y="1285" width="0.2796%" height="15" fill="rgb(219,106,18)"/><text x="17.2957%" y="1295.50"></text></g><g><title>rho_runtime (2,785 samples, 17.31%)</title><rect x="0.0311%" y="1301" width="17.3067%" height="15" fill="rgb(244,222,10)"/><text x="0.2811%" y="1311.50">rho_runtime</text></g><g><title>rho_runtime::storage::coordinator::Coordinator::handle_join (2 samples, 0.01%)</title><rect x="17.3254%" y="1285" width="0.0124%" height="15" fill="rgb(236,179,52)"/><text x="17.5754%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="17.3875%" y="1269" width="0.0186%" height="15" fill="rgb(213,23,39)"/><text x="17.6375%" y="1279.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.02%)</title><rect x="17.3875%" y="1253" width="0.0186%" height="15" fill="rgb(238,48,10)"/><text x="17.6375%" y="1263.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.02%)</title><rect x="17.3875%" y="1237" width="0.0186%" height="15" fill="rgb(251,196,23)"/><text x="17.6375%" y="1247.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (10 samples, 0.06%)</title><rect x="17.3565%" y="1285" width="0.0621%" height="15" fill="rgb(250,152,24)"/><text x="17.6065%" y="1295.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="17.4062%" y="1269" width="0.0124%" height="15" fill="rgb(209,150,17)"/><text x="17.6562%" y="1279.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="17.4062%" y="1253" width="0.0124%" height="15" fill="rgb(234,202,34)"/><text x="17.6562%" y="1263.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="17.4062%" y="1237" width="0.0124%" height="15" fill="rgb(253,148,53)"/><text x="17.6562%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="17.4062%" y="1221" width="0.0124%" height="15" fill="rgb(218,129,16)"/><text x="17.6562%" y="1231.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.01%)</title><rect x="17.4062%" y="1205" width="0.0124%" height="15" fill="rgb(216,85,19)"/><text x="17.6562%" y="1215.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.01%)</title><rect x="17.4062%" y="1189" width="0.0124%" height="15" fill="rgb(235,228,7)"/><text x="17.6562%" y="1199.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.01%)</title><rect x="17.4062%" y="1173" width="0.0124%" height="15" fill="rgb(245,175,0)"/><text x="17.6562%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="17.4062%" y="1157" width="0.0124%" height="15" fill="rgb(208,168,36)"/><text x="17.6562%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="17.4062%" y="1141" width="0.0124%" height="15" fill="rgb(246,171,24)"/><text x="17.6562%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.01%)</title><rect x="17.4062%" y="1125" width="0.0124%" height="15" fill="rgb(215,142,24)"/><text x="17.6562%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="17.4062%" y="1109" width="0.0124%" height="15" fill="rgb(250,187,7)"/><text x="17.6562%" y="1119.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="17.4062%" y="1093" width="0.0124%" height="15" fill="rgb(228,66,33)"/><text x="17.6562%" y="1103.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="17.4062%" y="1077" width="0.0124%" height="15" fill="rgb(234,215,21)"/><text x="17.6562%" y="1087.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (2 samples, 0.01%)</title><rect x="17.4186%" y="1285" width="0.0124%" height="15" fill="rgb(222,191,20)"/><text x="17.6686%" y="1295.50"></text></g><g><title>&lt;rho_runtime::storage::TaggedContinuation as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="17.4310%" y="1285" width="0.0249%" height="15" fill="rgb(245,79,54)"/><text x="17.6810%" y="1295.50"></text></g><g><title>&lt;model::rho_types::ParWithRandom as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="17.4310%" y="1269" width="0.0249%" height="15" fill="rgb(240,10,37)"/><text x="17.6810%" y="1279.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="17.4372%" y="1253" width="0.0186%" height="15" fill="rgb(214,192,32)"/><text x="17.6872%" y="1263.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="17.4372%" y="1237" width="0.0186%" height="15" fill="rgb(209,36,54)"/><text x="17.6872%" y="1247.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.02%)</title><rect x="17.4807%" y="1269" width="0.0186%" height="15" fill="rgb(220,10,11)"/><text x="17.7307%" y="1279.50"></text></g><g><title>alloc::slice::merge_sort (2 samples, 0.01%)</title><rect x="17.5056%" y="1269" width="0.0124%" height="15" fill="rgb(221,106,17)"/><text x="17.7556%" y="1279.50"></text></g><g><title>syscall (3 samples, 0.02%)</title><rect x="17.5180%" y="1269" width="0.0186%" height="15" fill="rgb(251,142,44)"/><text x="17.7680%" y="1279.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="17.5180%" y="1253" width="0.0186%" height="15" fill="rgb(238,13,15)"/><text x="17.7680%" y="1263.50"></text></g><g><title>[[stack]] (15 samples, 0.09%)</title><rect x="17.4621%" y="1285" width="0.0932%" height="15" fill="rgb(208,107,27)"/><text x="17.7121%" y="1295.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (5 samples, 0.03%)</title><rect x="17.6734%" y="1253" width="0.0311%" height="15" fill="rgb(205,136,37)"/><text x="17.9234%" y="1263.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="17.6920%" y="1237" width="0.0124%" height="15" fill="rgb(250,205,27)"/><text x="17.9420%" y="1247.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (25 samples, 0.16%)</title><rect x="17.5553%" y="1269" width="0.1554%" height="15" fill="rgb(210,80,43)"/><text x="17.8053%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.02%)</title><rect x="17.7479%" y="1253" width="0.0186%" height="15" fill="rgb(247,160,36)"/><text x="17.9979%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.06%)</title><rect x="17.7107%" y="1269" width="0.0621%" height="15" fill="rgb(234,13,49)"/><text x="17.9607%" y="1279.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::produce::{{closure}} (4 samples, 0.02%)</title><rect x="17.7914%" y="1253" width="0.0249%" height="15" fill="rgb(234,122,0)"/><text x="18.0414%" y="1263.50"></text></g><g><title>&lt;rho_runtime::storage::store::AsyncStore as rho_runtime::storage::Storage&gt;::produce (4 samples, 0.02%)</title><rect x="17.7914%" y="1237" width="0.0249%" height="15" fill="rgb(207,146,38)"/><text x="18.0414%" y="1247.50"></text></g><g><title>tokio::sync::oneshot::channel (2 samples, 0.01%)</title><rect x="17.8039%" y="1221" width="0.0124%" height="15" fill="rgb(207,177,25)"/><text x="18.0539%" y="1231.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.05%)</title><rect x="17.7728%" y="1269" width="0.0497%" height="15" fill="rgb(211,178,42)"/><text x="18.0228%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="17.8660%" y="1253" width="0.0186%" height="15" fill="rgb(230,69,54)"/><text x="18.1160%" y="1263.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.02%)</title><rect x="17.8660%" y="1237" width="0.0186%" height="15" fill="rgb(214,135,41)"/><text x="18.1160%" y="1247.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.02%)</title><rect x="17.8660%" y="1221" width="0.0186%" height="15" fill="rgb(237,67,25)"/><text x="18.1160%" y="1231.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (8 samples, 0.05%)</title><rect x="17.8412%" y="1269" width="0.0497%" height="15" fill="rgb(222,189,50)"/><text x="18.0912%" y="1279.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash::traverse (2 samples, 0.01%)</title><rect x="17.8971%" y="1269" width="0.0124%" height="15" fill="rgb(245,148,34)"/><text x="18.1471%" y="1279.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (5 samples, 0.03%)</title><rect x="17.9157%" y="1269" width="0.0311%" height="15" fill="rgb(222,29,6)"/><text x="18.1657%" y="1279.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (5 samples, 0.03%)</title><rect x="17.9468%" y="1269" width="0.0311%" height="15" fill="rgb(221,189,43)"/><text x="18.1968%" y="1279.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="17.9779%" y="1269" width="0.0186%" height="15" fill="rgb(207,36,27)"/><text x="18.2279%" y="1279.50"></text></g><g><title>&lt;tokio::loom::std::atomic_usize::AtomicUsize as core::ops::deref::Deref&gt;::deref (2 samples, 0.01%)</title><rect x="18.0089%" y="1269" width="0.0124%" height="15" fill="rgb(217,90,24)"/><text x="18.2589%" y="1279.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (4 samples, 0.02%)</title><rect x="18.0276%" y="1269" width="0.0249%" height="15" fill="rgb(224,66,35)"/><text x="18.2776%" y="1279.50"></text></g><g><title>tokio::runtime::park::Inner::park (3 samples, 0.02%)</title><rect x="18.0338%" y="1253" width="0.0186%" height="15" fill="rgb(221,13,50)"/><text x="18.2838%" y="1263.50"></text></g><g><title>tokio::runtime::park::Inner::park_condvar (2 samples, 0.01%)</title><rect x="18.0400%" y="1237" width="0.0124%" height="15" fill="rgb(236,68,49)"/><text x="18.2900%" y="1247.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (2 samples, 0.01%)</title><rect x="18.0400%" y="1221" width="0.0124%" height="15" fill="rgb(229,146,28)"/><text x="18.2900%" y="1231.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (2 samples, 0.01%)</title><rect x="18.0400%" y="1205" width="0.0124%" height="15" fill="rgb(225,31,38)"/><text x="18.2900%" y="1215.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.04%)</title><rect x="18.0587%" y="1269" width="0.0373%" height="15" fill="rgb(250,208,3)"/><text x="18.3087%" y="1279.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (5 samples, 0.03%)</title><rect x="18.0649%" y="1253" width="0.0311%" height="15" fill="rgb(246,54,23)"/><text x="18.3149%" y="1263.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.05%)</title><rect x="18.0959%" y="1269" width="0.0497%" height="15" fill="rgb(243,76,11)"/><text x="18.3459%" y="1279.50"></text></g><g><title>__rg_alloc (7 samples, 0.04%)</title><rect x="18.1519%" y="1269" width="0.0435%" height="15" fill="rgb(245,21,50)"/><text x="18.4019%" y="1279.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (6 samples, 0.04%)</title><rect x="18.1581%" y="1253" width="0.0373%" height="15" fill="rgb(228,9,43)"/><text x="18.4081%" y="1263.50"></text></g><g><title>__rg_dealloc (11 samples, 0.07%)</title><rect x="18.1954%" y="1269" width="0.0684%" height="15" fill="rgb(208,100,47)"/><text x="18.4454%" y="1279.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (11 samples, 0.07%)</title><rect x="18.1954%" y="1253" width="0.0684%" height="15" fill="rgb(232,26,8)"/><text x="18.4454%" y="1263.50"></text></g><g><title>__rust_probestack (7 samples, 0.04%)</title><rect x="18.2637%" y="1269" width="0.0435%" height="15" fill="rgb(216,166,38)"/><text x="18.5137%" y="1279.50"></text></g><g><title>_rjem_mallocx (5 samples, 0.03%)</title><rect x="18.3259%" y="1269" width="0.0311%" height="15" fill="rgb(251,202,51)"/><text x="18.5759%" y="1279.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.01%)</title><rect x="18.3569%" y="1269" width="0.0124%" height="15" fill="rgb(254,216,34)"/><text x="18.6069%" y="1279.50"></text></g><g><title>alloc::slice::merge_sort (8 samples, 0.05%)</title><rect x="18.3880%" y="1269" width="0.0497%" height="15" fill="rgb(251,32,27)"/><text x="18.6380%" y="1279.50"></text></g><g><title>core::mem::drop (2 samples, 0.01%)</title><rect x="18.4377%" y="1253" width="0.0124%" height="15" fill="rgb(208,127,28)"/><text x="18.6877%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;futures_util::stream::futures_unordered::task::Task&lt;rho_runtime::storage::runner::JoinGroup&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="18.4377%" y="1237" width="0.0124%" height="15" fill="rgb(224,137,22)"/><text x="18.6877%" y="1247.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="18.4377%" y="1221" width="0.0124%" height="15" fill="rgb(254,70,32)"/><text x="18.6877%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.01%)</title><rect x="18.4377%" y="1205" width="0.0124%" height="15" fill="rgb(229,75,37)"/><text x="18.6877%" y="1215.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.01%)</title><rect x="18.4377%" y="1189" width="0.0124%" height="15" fill="rgb(252,64,23)"/><text x="18.6877%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::oneshot::Inner&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="18.4502%" y="1253" width="0.0124%" height="15" fill="rgb(232,162,48)"/><text x="18.7002%" y="1263.50"></text></g><g><title>&lt;tokio::sync::oneshot::Inner&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="18.4502%" y="1237" width="0.0124%" height="15" fill="rgb(246,160,12)"/><text x="18.7002%" y="1247.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (9 samples, 0.06%)</title><rect x="18.4377%" y="1269" width="0.0559%" height="15" fill="rgb(247,166,0)"/><text x="18.6877%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::oneshot::Inner&lt;rho_runtime::storage::tuplecell::TupleCell&gt;&gt; (5 samples, 0.03%)</title><rect x="18.4626%" y="1253" width="0.0311%" height="15" fill="rgb(249,219,21)"/><text x="18.7126%" y="1263.50"></text></g><g><title>&lt;tokio::sync::oneshot::Inner&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="18.4688%" y="1237" width="0.0249%" height="15" fill="rgb(205,209,3)"/><text x="18.7188%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (3 samples, 0.02%)</title><rect x="18.5496%" y="1269" width="0.0186%" height="15" fill="rgb(243,44,1)"/><text x="18.7996%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::GUnforgeable&gt;&gt; (2 samples, 0.01%)</title><rect x="18.5558%" y="1253" width="0.0124%" height="15" fill="rgb(206,159,16)"/><text x="18.8058%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="18.5558%" y="1237" width="0.0124%" height="15" fill="rgb(244,77,30)"/><text x="18.8058%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::GUnforgeable]&gt; (2 samples, 0.01%)</title><rect x="18.5558%" y="1221" width="0.0124%" height="15" fill="rgb(218,69,12)"/><text x="18.8058%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::GUnforgeable&gt; (2 samples, 0.01%)</title><rect x="18.5558%" y="1205" width="0.0124%" height="15" fill="rgb(212,87,7)"/><text x="18.8058%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::g_unforgeable::UnfInstance&gt;&gt; (2 samples, 0.01%)</title><rect x="18.5558%" y="1189" width="0.0124%" height="15" fill="rgb(245,114,25)"/><text x="18.8058%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::g_unforgeable::UnfInstance&gt; (2 samples, 0.01%)</title><rect x="18.5558%" y="1173" width="0.0124%" height="15" fill="rgb(210,61,42)"/><text x="18.8058%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::GPrivate&gt; (2 samples, 0.01%)</title><rect x="18.5558%" y="1157" width="0.0124%" height="15" fill="rgb(211,52,33)"/><text x="18.8058%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (2 samples, 0.01%)</title><rect x="18.5558%" y="1141" width="0.0124%" height="15" fill="rgb(234,58,33)"/><text x="18.8058%" y="1151.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="18.5558%" y="1125" width="0.0124%" height="15" fill="rgb(220,115,36)"/><text x="18.8058%" y="1135.50"></text></g><g><title>jemallocator::layout_to_flags (4 samples, 0.02%)</title><rect x="18.5993%" y="1269" width="0.0249%" height="15" fill="rgb(243,153,54)"/><text x="18.8493%" y="1279.50"></text></g><g><title>model::rho_types::Par::append_expr (3 samples, 0.02%)</title><rect x="18.6304%" y="1269" width="0.0186%" height="15" fill="rgb(251,47,18)"/><text x="18.8804%" y="1279.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (10 samples, 0.06%)</title><rect x="18.6490%" y="1269" width="0.0621%" height="15" fill="rgb(242,102,42)"/><text x="18.8990%" y="1279.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (2 samples, 0.01%)</title><rect x="18.6987%" y="1253" width="0.0124%" height="15" fill="rgb(234,31,38)"/><text x="18.9487%" y="1263.50"></text></g><g><title>prost::encoding::message::merge_repeated (3 samples, 0.02%)</title><rect x="18.7174%" y="1269" width="0.0186%" height="15" fill="rgb(221,117,51)"/><text x="18.9674%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.02%)</title><rect x="18.7174%" y="1253" width="0.0186%" height="15" fill="rgb(212,20,18)"/><text x="18.9674%" y="1263.50"></text></g><g><title>core::ptr::write (3 samples, 0.02%)</title><rect x="18.7174%" y="1237" width="0.0186%" height="15" fill="rgb(245,133,36)"/><text x="18.9674%" y="1247.50"></text></g><g><title>blake3_compress_in_place_avx512 (3 samples, 0.02%)</title><rect x="18.7174%" y="1221" width="0.0186%" height="15" fill="rgb(212,6,19)"/><text x="18.9674%" y="1231.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (4 samples, 0.02%)</title><rect x="18.7422%" y="1269" width="0.0249%" height="15" fill="rgb(218,1,36)"/><text x="18.9922%" y="1279.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (2 samples, 0.01%)</title><rect x="18.7733%" y="1269" width="0.0124%" height="15" fill="rgb(246,84,54)"/><text x="19.0233%" y="1279.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_send::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Send&gt;::evaluate (5 samples, 0.03%)</title><rect x="18.7857%" y="1269" width="0.0311%" height="15" fill="rgb(242,110,6)"/><text x="19.0357%" y="1279.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::substitute_expressions_in_par (3 samples, 0.02%)</title><rect x="18.8292%" y="1269" width="0.0186%" height="15" fill="rgb(214,47,5)"/><text x="19.0792%" y="1279.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (16 samples, 0.10%)</title><rect x="18.8479%" y="1269" width="0.0994%" height="15" fill="rgb(218,159,25)"/><text x="19.0979%" y="1279.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (16 samples, 0.10%)</title><rect x="18.8479%" y="1253" width="0.0994%" height="15" fill="rgb(215,211,28)"/><text x="19.0979%" y="1263.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (13 samples, 0.08%)</title><rect x="18.8665%" y="1237" width="0.0808%" height="15" fill="rgb(238,59,32)"/><text x="19.1165%" y="1247.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (13 samples, 0.08%)</title><rect x="18.8665%" y="1221" width="0.0808%" height="15" fill="rgb(226,82,3)"/><text x="19.1165%" y="1231.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (13 samples, 0.08%)</title><rect x="18.8665%" y="1205" width="0.0808%" height="15" fill="rgb(240,164,32)"/><text x="19.1165%" y="1215.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (13 samples, 0.08%)</title><rect x="18.8665%" y="1189" width="0.0808%" height="15" fill="rgb(232,46,7)"/><text x="19.1165%" y="1199.50"></text></g><g><title>std::time::Instant::now (2 samples, 0.01%)</title><rect x="18.9473%" y="1269" width="0.0124%" height="15" fill="rgb(229,129,53)"/><text x="19.1973%" y="1279.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (2 samples, 0.01%)</title><rect x="18.9473%" y="1253" width="0.0124%" height="15" fill="rgb(234,188,29)"/><text x="19.1973%" y="1263.50"></text></g><g><title>std::sys::unix::time::inner::now (2 samples, 0.01%)</title><rect x="18.9473%" y="1237" width="0.0124%" height="15" fill="rgb(246,141,4)"/><text x="19.1973%" y="1247.50"></text></g><g><title>syscall (13 samples, 0.08%)</title><rect x="18.9597%" y="1269" width="0.0808%" height="15" fill="rgb(229,23,39)"/><text x="19.2097%" y="1279.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="19.0032%" y="1253" width="0.0373%" height="15" fill="rgb(206,12,3)"/><text x="19.2532%" y="1263.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (6 samples, 0.04%)</title><rect x="19.0529%" y="1269" width="0.0373%" height="15" fill="rgb(252,226,20)"/><text x="19.3029%" y="1279.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send::{{closure}} (3 samples, 0.02%)</title><rect x="19.0716%" y="1253" width="0.0186%" height="15" fill="rgb(216,123,35)"/><text x="19.3216%" y="1263.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (6 samples, 0.04%)</title><rect x="19.0902%" y="1269" width="0.0373%" height="15" fill="rgb(212,68,40)"/><text x="19.3402%" y="1279.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.01%)</title><rect x="19.1151%" y="1253" width="0.0124%" height="15" fill="rgb(254,125,32)"/><text x="19.3651%" y="1263.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.01%)</title><rect x="19.1151%" y="1237" width="0.0124%" height="15" fill="rgb(253,97,22)"/><text x="19.3651%" y="1247.50"></text></g><g><title>tokio::runtime::queue::Local&lt;T&gt;::pop (2 samples, 0.01%)</title><rect x="19.1275%" y="1269" width="0.0124%" height="15" fill="rgb(241,101,14)"/><text x="19.3775%" y="1279.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (12 samples, 0.07%)</title><rect x="19.1462%" y="1269" width="0.0746%" height="15" fill="rgb(238,103,29)"/><text x="19.3962%" y="1279.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (6 samples, 0.04%)</title><rect x="19.1834%" y="1253" width="0.0373%" height="15" fill="rgb(233,195,47)"/><text x="19.4334%" y="1263.50"></text></g><g><title>tokio::runtime::task::harness::SchedulerView&lt;S&gt;::transition_to_running (5 samples, 0.03%)</title><rect x="19.1897%" y="1237" width="0.0311%" height="15" fill="rgb(246,218,30)"/><text x="19.4397%" y="1247.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (3 samples, 0.02%)</title><rect x="19.2207%" y="1269" width="0.0186%" height="15" fill="rgb(219,145,47)"/><text x="19.4707%" y="1279.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (3 samples, 0.02%)</title><rect x="19.2456%" y="1269" width="0.0186%" height="15" fill="rgb(243,12,26)"/><text x="19.4956%" y="1279.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (5 samples, 0.03%)</title><rect x="19.2642%" y="1269" width="0.0311%" height="15" fill="rgb(214,87,16)"/><text x="19.5142%" y="1279.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (3 samples, 0.02%)</title><rect x="19.2953%" y="1269" width="0.0186%" height="15" fill="rgb(208,99,42)"/><text x="19.5453%" y="1279.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (3 samples, 0.02%)</title><rect x="19.3139%" y="1269" width="0.0186%" height="15" fill="rgb(253,99,2)"/><text x="19.5639%" y="1279.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_ref (2 samples, 0.01%)</title><rect x="19.3202%" y="1253" width="0.0124%" height="15" fill="rgb(220,168,23)"/><text x="19.5702%" y="1263.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (9 samples, 0.06%)</title><rect x="19.3450%" y="1269" width="0.0559%" height="15" fill="rgb(242,38,24)"/><text x="19.5950%" y="1279.50"></text></g><g><title>tokio::sync::notify::Notify::notify_one (2 samples, 0.01%)</title><rect x="19.4134%" y="1269" width="0.0124%" height="15" fill="rgb(225,182,9)"/><text x="19.6634%" y="1279.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (19 samples, 0.12%)</title><rect x="19.4258%" y="1269" width="0.1181%" height="15" fill="rgb(243,178,37)"/><text x="19.6758%" y="1279.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::complete (18 samples, 0.11%)</title><rect x="19.4320%" y="1253" width="0.1119%" height="15" fill="rgb(232,139,19)"/><text x="19.6820%" y="1263.50"></text></g><g><title>[anon] (321 samples, 1.99%)</title><rect x="17.5553%" y="1285" width="1.9948%" height="15" fill="rgb(225,201,24)"/><text x="17.8053%" y="1295.50">[..</text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="19.5501%" y="1285" width="0.0124%" height="15" fill="rgb(221,47,46)"/><text x="19.8001%" y="1295.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (3 samples, 0.02%)</title><rect x="19.5687%" y="1269" width="0.0186%" height="15" fill="rgb(249,23,13)"/><text x="19.8187%" y="1279.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="19.5749%" y="1253" width="0.0124%" height="15" fill="rgb(219,9,5)"/><text x="19.8249%" y="1263.50"></text></g><g><title>[rho_runtime] (5 samples, 0.03%)</title><rect x="19.5625%" y="1285" width="0.0311%" height="15" fill="rgb(254,171,16)"/><text x="19.8125%" y="1295.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="19.9043%" y="581" width="0.0186%" height="15" fill="rgb(230,171,20)"/><text x="20.1543%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="19.9789%" y="533" width="0.0124%" height="15" fill="rgb(210,71,41)"/><text x="20.2289%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="19.9789%" y="517" width="0.0124%" height="15" fill="rgb(206,173,20)"/><text x="20.2289%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (20 samples, 0.12%)</title><rect x="19.8732%" y="645" width="0.1243%" height="15" fill="rgb(233,88,34)"/><text x="20.1232%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19 samples, 0.12%)</title><rect x="19.8794%" y="629" width="0.1181%" height="15" fill="rgb(223,209,46)"/><text x="20.1294%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (19 samples, 0.12%)</title><rect x="19.8794%" y="613" width="0.1181%" height="15" fill="rgb(250,43,18)"/><text x="20.1294%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19 samples, 0.12%)</title><rect x="19.8794%" y="597" width="0.1181%" height="15" fill="rgb(208,13,10)"/><text x="20.1294%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.07%)</title><rect x="19.9229%" y="581" width="0.0746%" height="15" fill="rgb(212,200,36)"/><text x="20.1729%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.02%)</title><rect x="19.9727%" y="565" width="0.0249%" height="15" fill="rgb(225,90,30)"/><text x="20.2227%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.02%)</title><rect x="19.9727%" y="549" width="0.0249%" height="15" fill="rgb(236,182,39)"/><text x="20.2227%" y="559.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (22 samples, 0.14%)</title><rect x="19.8732%" y="741" width="0.1367%" height="15" fill="rgb(212,144,35)"/><text x="20.1232%" y="751.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (22 samples, 0.14%)</title><rect x="19.8732%" y="725" width="0.1367%" height="15" fill="rgb(228,63,44)"/><text x="20.1232%" y="735.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (22 samples, 0.14%)</title><rect x="19.8732%" y="709" width="0.1367%" height="15" fill="rgb(228,109,6)"/><text x="20.1232%" y="719.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (22 samples, 0.14%)</title><rect x="19.8732%" y="693" width="0.1367%" height="15" fill="rgb(238,117,24)"/><text x="20.1232%" y="703.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (22 samples, 0.14%)</title><rect x="19.8732%" y="677" width="0.1367%" height="15" fill="rgb(242,26,26)"/><text x="20.1232%" y="687.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (22 samples, 0.14%)</title><rect x="19.8732%" y="661" width="0.1367%" height="15" fill="rgb(221,92,48)"/><text x="20.1232%" y="671.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="19.9975%" y="645" width="0.0124%" height="15" fill="rgb(209,209,32)"/><text x="20.2475%" y="655.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="19.9975%" y="629" width="0.0124%" height="15" fill="rgb(221,70,22)"/><text x="20.2475%" y="639.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="19.9975%" y="613" width="0.0124%" height="15" fill="rgb(248,145,5)"/><text x="20.2475%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="19.9975%" y="597" width="0.0124%" height="15" fill="rgb(226,116,26)"/><text x="20.2475%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.01%)</title><rect x="19.9975%" y="581" width="0.0124%" height="15" fill="rgb(244,5,17)"/><text x="20.2475%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.01%)</title><rect x="19.9975%" y="565" width="0.0124%" height="15" fill="rgb(252,159,33)"/><text x="20.2475%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.01%)</title><rect x="19.9975%" y="549" width="0.0124%" height="15" fill="rgb(206,71,0)"/><text x="20.2475%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="19.9975%" y="533" width="0.0124%" height="15" fill="rgb(233,118,54)"/><text x="20.2475%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="19.9975%" y="517" width="0.0124%" height="15" fill="rgb(234,83,48)"/><text x="20.2475%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.01%)</title><rect x="19.9975%" y="501" width="0.0124%" height="15" fill="rgb(228,3,54)"/><text x="20.2475%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="19.9975%" y="485" width="0.0124%" height="15" fill="rgb(226,155,13)"/><text x="20.2475%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="19.9975%" y="469" width="0.0124%" height="15" fill="rgb(241,28,37)"/><text x="20.2475%" y="479.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="19.9975%" y="453" width="0.0124%" height="15" fill="rgb(233,93,10)"/><text x="20.2475%" y="463.50"></text></g><g><title>_rjem_mallocx (2 samples, 0.01%)</title><rect x="19.9975%" y="437" width="0.0124%" height="15" fill="rgb(225,113,19)"/><text x="20.2475%" y="447.50"></text></g><g><title>imalloc (2 samples, 0.01%)</title><rect x="19.9975%" y="421" width="0.0124%" height="15" fill="rgb(241,2,18)"/><text x="20.2475%" y="431.50"></text></g><g><title>imalloc_body (2 samples, 0.01%)</title><rect x="19.9975%" y="405" width="0.0124%" height="15" fill="rgb(228,207,21)"/><text x="20.2475%" y="415.50"></text></g><g><title>imalloc_no_sample (2 samples, 0.01%)</title><rect x="19.9975%" y="389" width="0.0124%" height="15" fill="rgb(213,211,35)"/><text x="20.2475%" y="399.50"></text></g><g><title>iallocztm (2 samples, 0.01%)</title><rect x="19.9975%" y="373" width="0.0124%" height="15" fill="rgb(209,83,10)"/><text x="20.2475%" y="383.50"></text></g><g><title>arena_malloc (2 samples, 0.01%)</title><rect x="19.9975%" y="357" width="0.0124%" height="15" fill="rgb(209,164,1)"/><text x="20.2475%" y="367.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.01%)</title><rect x="19.9975%" y="341" width="0.0124%" height="15" fill="rgb(213,184,43)"/><text x="20.2475%" y="351.50"></text></g><g><title>extent_activate_locked (2 samples, 0.01%)</title><rect x="20.0224%" y="405" width="0.0124%" height="15" fill="rgb(231,61,34)"/><text x="20.2724%" y="415.50"></text></g><g><title>extents_remove_locked (2 samples, 0.01%)</title><rect x="20.0224%" y="389" width="0.0124%" height="15" fill="rgb(235,75,3)"/><text x="20.2724%" y="399.50"></text></g><g><title>arena_slab_alloc (4 samples, 0.02%)</title><rect x="20.0162%" y="469" width="0.0249%" height="15" fill="rgb(220,106,47)"/><text x="20.2662%" y="479.50"></text></g><g><title>_rjem_je_extents_alloc (4 samples, 0.02%)</title><rect x="20.0162%" y="453" width="0.0249%" height="15" fill="rgb(210,196,33)"/><text x="20.2662%" y="463.50"></text></g><g><title>extent_recycle (4 samples, 0.02%)</title><rect x="20.0162%" y="437" width="0.0249%" height="15" fill="rgb(229,154,42)"/><text x="20.2662%" y="447.50"></text></g><g><title>extent_recycle_extract (3 samples, 0.02%)</title><rect x="20.0224%" y="421" width="0.0186%" height="15" fill="rgb(228,114,26)"/><text x="20.2724%" y="431.50"></text></g><g><title>arena_bin_malloc_hard (6 samples, 0.04%)</title><rect x="20.0099%" y="501" width="0.0373%" height="15" fill="rgb(208,144,1)"/><text x="20.2599%" y="511.50"></text></g><g><title>arena_bin_nonfull_slab_get (6 samples, 0.04%)</title><rect x="20.0099%" y="485" width="0.0373%" height="15" fill="rgb(239,112,37)"/><text x="20.2599%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (52 samples, 0.32%)</title><rect x="19.7489%" y="1269" width="0.3231%" height="15" fill="rgb(210,96,50)"/><text x="19.9989%" y="1279.50"></text></g><g><title>&lt;model::rho_types::Match as core::clone::Clone&gt;::clone (32 samples, 0.20%)</title><rect x="19.8732%" y="1253" width="0.1989%" height="15" fill="rgb(222,178,2)"/><text x="20.1232%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (32 samples, 0.20%)</title><rect x="19.8732%" y="1237" width="0.1989%" height="15" fill="rgb(226,74,18)"/><text x="20.1232%" y="1247.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (32 samples, 0.20%)</title><rect x="19.8732%" y="1221" width="0.1989%" height="15" fill="rgb(225,67,54)"/><text x="20.1232%" y="1231.50"></text></g><g><title>alloc::slice::hack::to_vec (32 samples, 0.20%)</title><rect x="19.8732%" y="1205" width="0.1989%" height="15" fill="rgb(251,92,32)"/><text x="20.1232%" y="1215.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (32 samples, 0.20%)</title><rect x="19.8732%" y="1189" width="0.1989%" height="15" fill="rgb(228,149,22)"/><text x="20.1232%" y="1199.50"></text></g><g><title>&lt;model::rho_types::MatchCase as core::clone::Clone&gt;::clone (32 samples, 0.20%)</title><rect x="19.8732%" y="1173" width="0.1989%" height="15" fill="rgb(243,54,13)"/><text x="20.1232%" y="1183.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (32 samples, 0.20%)</title><rect x="19.8732%" y="1157" width="0.1989%" height="15" fill="rgb(243,180,28)"/><text x="20.1232%" y="1167.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (32 samples, 0.20%)</title><rect x="19.8732%" y="1141" width="0.1989%" height="15" fill="rgb(208,167,24)"/><text x="20.1232%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (32 samples, 0.20%)</title><rect x="19.8732%" y="1125" width="0.1989%" height="15" fill="rgb(245,73,45)"/><text x="20.1232%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (32 samples, 0.20%)</title><rect x="19.8732%" y="1109" width="0.1989%" height="15" fill="rgb(237,203,48)"/><text x="20.1232%" y="1119.50"></text></g><g><title>alloc::slice::hack::to_vec (32 samples, 0.20%)</title><rect x="19.8732%" y="1093" width="0.1989%" height="15" fill="rgb(211,197,16)"/><text x="20.1232%" y="1103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (32 samples, 0.20%)</title><rect x="19.8732%" y="1077" width="0.1989%" height="15" fill="rgb(243,99,51)"/><text x="20.1232%" y="1087.50"></text></g><g><title>&lt;model::rho_types::Send as core::clone::Clone&gt;::clone (32 samples, 0.20%)</title><rect x="19.8732%" y="1061" width="0.1989%" height="15" fill="rgb(215,123,29)"/><text x="20.1232%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (32 samples, 0.20%)</title><rect x="19.8732%" y="1045" width="0.1989%" height="15" fill="rgb(239,186,37)"/><text x="20.1232%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (32 samples, 0.20%)</title><rect x="19.8732%" y="1029" width="0.1989%" height="15" fill="rgb(252,136,39)"/><text x="20.1232%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (32 samples, 0.20%)</title><rect x="19.8732%" y="1013" width="0.1989%" height="15" fill="rgb(223,213,32)"/><text x="20.1232%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (32 samples, 0.20%)</title><rect x="19.8732%" y="997" width="0.1989%" height="15" fill="rgb(233,115,5)"/><text x="20.1232%" y="1007.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (32 samples, 0.20%)</title><rect x="19.8732%" y="981" width="0.1989%" height="15" fill="rgb(207,226,44)"/><text x="20.1232%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (32 samples, 0.20%)</title><rect x="19.8732%" y="965" width="0.1989%" height="15" fill="rgb(208,126,0)"/><text x="20.1232%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (32 samples, 0.20%)</title><rect x="19.8732%" y="949" width="0.1989%" height="15" fill="rgb(244,66,21)"/><text x="20.1232%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (32 samples, 0.20%)</title><rect x="19.8732%" y="933" width="0.1989%" height="15" fill="rgb(222,97,12)"/><text x="20.1232%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (32 samples, 0.20%)</title><rect x="19.8732%" y="917" width="0.1989%" height="15" fill="rgb(219,213,19)"/><text x="20.1232%" y="927.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (32 samples, 0.20%)</title><rect x="19.8732%" y="901" width="0.1989%" height="15" fill="rgb(252,169,30)"/><text x="20.1232%" y="911.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (32 samples, 0.20%)</title><rect x="19.8732%" y="885" width="0.1989%" height="15" fill="rgb(206,32,51)"/><text x="20.1232%" y="895.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (32 samples, 0.20%)</title><rect x="19.8732%" y="869" width="0.1989%" height="15" fill="rgb(250,172,42)"/><text x="20.1232%" y="879.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (32 samples, 0.20%)</title><rect x="19.8732%" y="853" width="0.1989%" height="15" fill="rgb(209,34,43)"/><text x="20.1232%" y="863.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (32 samples, 0.20%)</title><rect x="19.8732%" y="837" width="0.1989%" height="15" fill="rgb(223,11,35)"/><text x="20.1232%" y="847.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (32 samples, 0.20%)</title><rect x="19.8732%" y="821" width="0.1989%" height="15" fill="rgb(251,219,26)"/><text x="20.1232%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (32 samples, 0.20%)</title><rect x="19.8732%" y="805" width="0.1989%" height="15" fill="rgb(231,119,3)"/><text x="20.1232%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (32 samples, 0.20%)</title><rect x="19.8732%" y="789" width="0.1989%" height="15" fill="rgb(216,97,11)"/><text x="20.1232%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (32 samples, 0.20%)</title><rect x="19.8732%" y="773" width="0.1989%" height="15" fill="rgb(223,59,9)"/><text x="20.1232%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (32 samples, 0.20%)</title><rect x="19.8732%" y="757" width="0.1989%" height="15" fill="rgb(233,93,31)"/><text x="20.1232%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 0.06%)</title><rect x="20.0099%" y="741" width="0.0621%" height="15" fill="rgb(239,81,33)"/><text x="20.2599%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.06%)</title><rect x="20.0099%" y="725" width="0.0621%" height="15" fill="rgb(213,120,34)"/><text x="20.2599%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.06%)</title><rect x="20.0099%" y="709" width="0.0621%" height="15" fill="rgb(243,49,53)"/><text x="20.2599%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.06%)</title><rect x="20.0099%" y="693" width="0.0621%" height="15" fill="rgb(247,216,33)"/><text x="20.2599%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.06%)</title><rect x="20.0099%" y="677" width="0.0621%" height="15" fill="rgb(226,26,14)"/><text x="20.2599%" y="687.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.06%)</title><rect x="20.0099%" y="661" width="0.0621%" height="15" fill="rgb(215,49,53)"/><text x="20.2599%" y="671.50"></text></g><g><title>_rjem_mallocx (10 samples, 0.06%)</title><rect x="20.0099%" y="645" width="0.0621%" height="15" fill="rgb(245,162,40)"/><text x="20.2599%" y="655.50"></text></g><g><title>imalloc (10 samples, 0.06%)</title><rect x="20.0099%" y="629" width="0.0621%" height="15" fill="rgb(229,68,17)"/><text x="20.2599%" y="639.50"></text></g><g><title>imalloc_body (10 samples, 0.06%)</title><rect x="20.0099%" y="613" width="0.0621%" height="15" fill="rgb(213,182,10)"/><text x="20.2599%" y="623.50"></text></g><g><title>imalloc_no_sample (10 samples, 0.06%)</title><rect x="20.0099%" y="597" width="0.0621%" height="15" fill="rgb(245,125,30)"/><text x="20.2599%" y="607.50"></text></g><g><title>iallocztm (10 samples, 0.06%)</title><rect x="20.0099%" y="581" width="0.0621%" height="15" fill="rgb(232,202,2)"/><text x="20.2599%" y="591.50"></text></g><g><title>arena_malloc (10 samples, 0.06%)</title><rect x="20.0099%" y="565" width="0.0621%" height="15" fill="rgb(237,140,51)"/><text x="20.2599%" y="575.50"></text></g><g><title>tcache_alloc_small (10 samples, 0.06%)</title><rect x="20.0099%" y="549" width="0.0621%" height="15" fill="rgb(236,157,25)"/><text x="20.2599%" y="559.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (10 samples, 0.06%)</title><rect x="20.0099%" y="533" width="0.0621%" height="15" fill="rgb(219,209,0)"/><text x="20.2599%" y="543.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (10 samples, 0.06%)</title><rect x="20.0099%" y="517" width="0.0621%" height="15" fill="rgb(240,116,54)"/><text x="20.2599%" y="527.50"></text></g><g><title>malloc_mutex_lock (4 samples, 0.02%)</title><rect x="20.0472%" y="501" width="0.0249%" height="15" fill="rgb(216,10,36)"/><text x="20.2972%" y="511.50"></text></g><g><title>malloc_mutex_trylock_final (4 samples, 0.02%)</title><rect x="20.0472%" y="485" width="0.0249%" height="15" fill="rgb(222,72,44)"/><text x="20.2972%" y="495.50"></text></g><g><title>__GI___pthread_mutex_trylock (4 samples, 0.02%)</title><rect x="20.0472%" y="469" width="0.0249%" height="15" fill="rgb(232,159,9)"/><text x="20.2972%" y="479.50"></text></g><g><title>arena_bin_slabs_nonfull_tryget (2 samples, 0.01%)</title><rect x="20.1218%" y="453" width="0.0124%" height="15" fill="rgb(210,39,32)"/><text x="20.3718%" y="463.50"></text></g><g><title>_rjem_je_extent_heap_remove_first (2 samples, 0.01%)</title><rect x="20.1218%" y="437" width="0.0124%" height="15" fill="rgb(216,194,45)"/><text x="20.3718%" y="447.50"></text></g><g><title>arena_bin_malloc_hard (3 samples, 0.02%)</title><rect x="20.1218%" y="485" width="0.0186%" height="15" fill="rgb(218,18,35)"/><text x="20.3718%" y="495.50"></text></g><g><title>arena_bin_nonfull_slab_get (3 samples, 0.02%)</title><rect x="20.1218%" y="469" width="0.0186%" height="15" fill="rgb(207,83,51)"/><text x="20.3718%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.07%)</title><rect x="20.0721%" y="1269" width="0.0746%" height="15" fill="rgb(225,63,43)"/><text x="20.3221%" y="1279.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.02%)</title><rect x="20.1218%" y="1253" width="0.0249%" height="15" fill="rgb(207,57,36)"/><text x="20.3718%" y="1263.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.02%)</title><rect x="20.1218%" y="1237" width="0.0249%" height="15" fill="rgb(216,99,33)"/><text x="20.3718%" y="1247.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.02%)</title><rect x="20.1218%" y="1221" width="0.0249%" height="15" fill="rgb(225,42,16)"/><text x="20.3718%" y="1231.50"></text></g><g><title>&lt;model::rho_types::Send as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="20.1218%" y="1205" width="0.0249%" height="15" fill="rgb(220,201,45)"/><text x="20.3718%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="20.1218%" y="1189" width="0.0249%" height="15" fill="rgb(225,33,4)"/><text x="20.3718%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.02%)</title><rect x="20.1218%" y="1173" width="0.0249%" height="15" fill="rgb(224,33,50)"/><text x="20.3718%" y="1183.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.02%)</title><rect x="20.1218%" y="1157" width="0.0249%" height="15" fill="rgb(246,198,51)"/><text x="20.3718%" y="1167.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.02%)</title><rect x="20.1218%" y="1141" width="0.0249%" height="15" fill="rgb(205,22,4)"/><text x="20.3718%" y="1151.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="20.1218%" y="1125" width="0.0249%" height="15" fill="rgb(206,3,8)"/><text x="20.3718%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="20.1218%" y="1109" width="0.0249%" height="15" fill="rgb(251,23,15)"/><text x="20.3718%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.02%)</title><rect x="20.1218%" y="1093" width="0.0249%" height="15" fill="rgb(252,88,28)"/><text x="20.3718%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.02%)</title><rect x="20.1218%" y="1077" width="0.0249%" height="15" fill="rgb(212,127,14)"/><text x="20.3718%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.02%)</title><rect x="20.1218%" y="1061" width="0.0249%" height="15" fill="rgb(247,145,37)"/><text x="20.3718%" y="1071.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="20.1218%" y="1045" width="0.0249%" height="15" fill="rgb(209,117,53)"/><text x="20.3718%" y="1055.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="20.1218%" y="1029" width="0.0249%" height="15" fill="rgb(212,90,42)"/><text x="20.3718%" y="1039.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="20.1218%" y="1013" width="0.0249%" height="15" fill="rgb(218,164,37)"/><text x="20.3718%" y="1023.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="20.1218%" y="997" width="0.0249%" height="15" fill="rgb(246,65,34)"/><text x="20.3718%" y="1007.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="20.1218%" y="981" width="0.0249%" height="15" fill="rgb(231,100,33)"/><text x="20.3718%" y="991.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="20.1218%" y="965" width="0.0249%" height="15" fill="rgb(228,126,14)"/><text x="20.3718%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="20.1218%" y="949" width="0.0249%" height="15" fill="rgb(215,173,21)"/><text x="20.3718%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.02%)</title><rect x="20.1218%" y="933" width="0.0249%" height="15" fill="rgb(210,6,40)"/><text x="20.3718%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.02%)</title><rect x="20.1218%" y="917" width="0.0249%" height="15" fill="rgb(212,48,18)"/><text x="20.3718%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.02%)</title><rect x="20.1218%" y="901" width="0.0249%" height="15" fill="rgb(230,214,11)"/><text x="20.3718%" y="911.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="20.1218%" y="885" width="0.0249%" height="15" fill="rgb(254,105,39)"/><text x="20.3718%" y="895.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="20.1218%" y="869" width="0.0249%" height="15" fill="rgb(245,158,5)"/><text x="20.3718%" y="879.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="20.1218%" y="853" width="0.0249%" height="15" fill="rgb(249,208,11)"/><text x="20.3718%" y="863.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="20.1218%" y="837" width="0.0249%" height="15" fill="rgb(210,39,28)"/><text x="20.3718%" y="847.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="20.1218%" y="821" width="0.0249%" height="15" fill="rgb(211,56,53)"/><text x="20.3718%" y="831.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="20.1218%" y="805" width="0.0249%" height="15" fill="rgb(226,201,30)"/><text x="20.3718%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="20.1218%" y="789" width="0.0249%" height="15" fill="rgb(239,101,34)"/><text x="20.3718%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.02%)</title><rect x="20.1218%" y="773" width="0.0249%" height="15" fill="rgb(226,209,5)"/><text x="20.3718%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.02%)</title><rect x="20.1218%" y="757" width="0.0249%" height="15" fill="rgb(250,105,47)"/><text x="20.3718%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.02%)</title><rect x="20.1218%" y="741" width="0.0249%" height="15" fill="rgb(230,72,3)"/><text x="20.3718%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.02%)</title><rect x="20.1218%" y="725" width="0.0249%" height="15" fill="rgb(232,218,39)"/><text x="20.3718%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.02%)</title><rect x="20.1218%" y="709" width="0.0249%" height="15" fill="rgb(248,166,6)"/><text x="20.3718%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.02%)</title><rect x="20.1218%" y="693" width="0.0249%" height="15" fill="rgb(247,89,20)"/><text x="20.3718%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.02%)</title><rect x="20.1218%" y="677" width="0.0249%" height="15" fill="rgb(248,130,54)"/><text x="20.3718%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.02%)</title><rect x="20.1218%" y="661" width="0.0249%" height="15" fill="rgb(234,196,4)"/><text x="20.3718%" y="671.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.02%)</title><rect x="20.1218%" y="645" width="0.0249%" height="15" fill="rgb(250,143,31)"/><text x="20.3718%" y="655.50"></text></g><g><title>_rjem_mallocx (4 samples, 0.02%)</title><rect x="20.1218%" y="629" width="0.0249%" height="15" fill="rgb(211,110,34)"/><text x="20.3718%" y="639.50"></text></g><g><title>imalloc (4 samples, 0.02%)</title><rect x="20.1218%" y="613" width="0.0249%" height="15" fill="rgb(215,124,48)"/><text x="20.3718%" y="623.50"></text></g><g><title>imalloc_body (4 samples, 0.02%)</title><rect x="20.1218%" y="597" width="0.0249%" height="15" fill="rgb(216,46,13)"/><text x="20.3718%" y="607.50"></text></g><g><title>imalloc_no_sample (4 samples, 0.02%)</title><rect x="20.1218%" y="581" width="0.0249%" height="15" fill="rgb(205,184,25)"/><text x="20.3718%" y="591.50"></text></g><g><title>iallocztm (4 samples, 0.02%)</title><rect x="20.1218%" y="565" width="0.0249%" height="15" fill="rgb(228,1,10)"/><text x="20.3718%" y="575.50"></text></g><g><title>arena_malloc (4 samples, 0.02%)</title><rect x="20.1218%" y="549" width="0.0249%" height="15" fill="rgb(213,116,27)"/><text x="20.3718%" y="559.50"></text></g><g><title>tcache_alloc_small (4 samples, 0.02%)</title><rect x="20.1218%" y="533" width="0.0249%" height="15" fill="rgb(241,95,50)"/><text x="20.3718%" y="543.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (4 samples, 0.02%)</title><rect x="20.1218%" y="517" width="0.0249%" height="15" fill="rgb(238,48,32)"/><text x="20.3718%" y="527.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (4 samples, 0.02%)</title><rect x="20.1218%" y="501" width="0.0249%" height="15" fill="rgb(235,113,49)"/><text x="20.3718%" y="511.50"></text></g><g><title>[libc-2.31.so] (69 samples, 0.43%)</title><rect x="20.1653%" y="1253" width="0.4288%" height="15" fill="rgb(205,127,43)"/><text x="20.4153%" y="1263.50"></text></g><g><title>&lt;model::ordering::ScoreTreeIter as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="20.5941%" y="1173" width="0.0249%" height="15" fill="rgb(250,162,2)"/><text x="20.8441%" y="1183.50"></text></g><g><title>&lt;model::ordering::sort_unforgeable::UnforgeableScoreTreeIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="20.6065%" y="1157" width="0.0124%" height="15" fill="rgb(220,13,41)"/><text x="20.8565%" y="1167.50"></text></g><g><title>model::ordering::sort_unforgeable::UnforgeableScoreTreeIter::private_body_next (2 samples, 0.01%)</title><rect x="20.6065%" y="1141" width="0.0124%" height="15" fill="rgb(249,221,25)"/><text x="20.8565%" y="1151.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash::traverse (22 samples, 0.14%)</title><rect x="20.5941%" y="1189" width="0.1367%" height="15" fill="rgb(215,208,19)"/><text x="20.8441%" y="1199.50"></text></g><g><title>blake3::Hasher::update (18 samples, 0.11%)</title><rect x="20.6189%" y="1173" width="0.1119%" height="15" fill="rgb(236,175,2)"/><text x="20.8689%" y="1183.50"></text></g><g><title>blake3::Hasher::update_with_join (18 samples, 0.11%)</title><rect x="20.6189%" y="1157" width="0.1119%" height="15" fill="rgb(241,52,2)"/><text x="20.8689%" y="1167.50"></text></g><g><title>blake3::ChunkState::update (17 samples, 0.11%)</title><rect x="20.6252%" y="1141" width="0.1056%" height="15" fill="rgb(248,140,14)"/><text x="20.8752%" y="1151.50"></text></g><g><title>blake3::ChunkState::fill_buf (15 samples, 0.09%)</title><rect x="20.6376%" y="1125" width="0.0932%" height="15" fill="rgb(253,22,42)"/><text x="20.8876%" y="1135.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (12 samples, 0.07%)</title><rect x="20.6562%" y="1109" width="0.0746%" height="15" fill="rgb(234,61,47)"/><text x="20.9062%" y="1119.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.07%)</title><rect x="20.6562%" y="1093" width="0.0746%" height="15" fill="rgb(208,226,15)"/><text x="20.9062%" y="1103.50"></text></g><g><title>[libc-2.31.so] (12 samples, 0.07%)</title><rect x="20.6562%" y="1077" width="0.0746%" height="15" fill="rgb(217,221,4)"/><text x="20.9062%" y="1087.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (4 samples, 0.02%)</title><rect x="20.7432%" y="1125" width="0.0249%" height="15" fill="rgb(212,174,34)"/><text x="20.9932%" y="1135.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.02%)</title><rect x="20.7432%" y="1109" width="0.0249%" height="15" fill="rgb(253,83,4)"/><text x="20.9932%" y="1119.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.02%)</title><rect x="20.7432%" y="1093" width="0.0249%" height="15" fill="rgb(250,195,49)"/><text x="20.9932%" y="1103.50"></text></g><g><title>blake3::ChunkState::fill_buf (8 samples, 0.05%)</title><rect x="20.7308%" y="1141" width="0.0497%" height="15" fill="rgb(241,192,25)"/><text x="20.9808%" y="1151.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.01%)</title><rect x="20.7681%" y="1125" width="0.0124%" height="15" fill="rgb(208,124,10)"/><text x="21.0181%" y="1135.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.01%)</title><rect x="20.7681%" y="1109" width="0.0124%" height="15" fill="rgb(222,33,0)"/><text x="21.0181%" y="1119.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.01%)</title><rect x="20.7681%" y="1093" width="0.0124%" height="15" fill="rgb(234,209,28)"/><text x="21.0181%" y="1103.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.01%)</title><rect x="20.7681%" y="1077" width="0.0124%" height="15" fill="rgb(224,11,23)"/><text x="21.0181%" y="1087.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.01%)</title><rect x="20.7681%" y="1061" width="0.0124%" height="15" fill="rgb(232,99,1)"/><text x="21.0181%" y="1071.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (2 samples, 0.01%)</title><rect x="20.7681%" y="1045" width="0.0124%" height="15" fill="rgb(237,95,45)"/><text x="21.0181%" y="1055.50"></text></g><g><title>blake3::ChunkState::update (9 samples, 0.06%)</title><rect x="20.7308%" y="1157" width="0.0559%" height="15" fill="rgb(208,109,11)"/><text x="20.9808%" y="1167.50"></text></g><g><title>&lt;rho_runtime::storage::store::AsyncStore as rho_runtime::storage::Storage&gt;::produce (33 samples, 0.21%)</title><rect x="20.5941%" y="1237" width="0.2051%" height="15" fill="rgb(216,190,48)"/><text x="20.8441%" y="1247.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash (33 samples, 0.21%)</title><rect x="20.5941%" y="1221" width="0.2051%" height="15" fill="rgb(251,171,36)"/><text x="20.8441%" y="1231.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash::traverse (33 samples, 0.21%)</title><rect x="20.5941%" y="1205" width="0.2051%" height="15" fill="rgb(230,62,22)"/><text x="20.8441%" y="1215.50"></text></g><g><title>blake3::Hasher::update (11 samples, 0.07%)</title><rect x="20.7308%" y="1189" width="0.0684%" height="15" fill="rgb(225,114,35)"/><text x="20.9808%" y="1199.50"></text></g><g><title>blake3::Hasher::update_with_join (11 samples, 0.07%)</title><rect x="20.7308%" y="1173" width="0.0684%" height="15" fill="rgb(215,118,42)"/><text x="20.9808%" y="1183.50"></text></g><g><title>blake3::Hasher::merge_cv_stack (2 samples, 0.01%)</title><rect x="20.7867%" y="1157" width="0.0124%" height="15" fill="rgb(243,119,21)"/><text x="21.0367%" y="1167.50"></text></g><g><title>[libc-2.31.so] (21 samples, 0.13%)</title><rect x="20.8054%" y="1221" width="0.1305%" height="15" fill="rgb(252,177,53)"/><text x="21.0554%" y="1231.50"></text></g><g><title>_rjem_sdallocx (5 samples, 0.03%)</title><rect x="20.9421%" y="1173" width="0.0311%" height="15" fill="rgb(237,209,29)"/><text x="21.1921%" y="1183.50"></text></g><g><title>isfree (4 samples, 0.02%)</title><rect x="20.9483%" y="1157" width="0.0249%" height="15" fill="rgb(212,65,23)"/><text x="21.1983%" y="1167.50"></text></g><g><title>isdalloct (4 samples, 0.02%)</title><rect x="20.9483%" y="1141" width="0.0249%" height="15" fill="rgb(230,222,46)"/><text x="21.1983%" y="1151.50"></text></g><g><title>arena_sdalloc (4 samples, 0.02%)</title><rect x="20.9483%" y="1125" width="0.0249%" height="15" fill="rgb(215,135,32)"/><text x="21.1983%" y="1135.50"></text></g><g><title>tcache_dalloc_small (3 samples, 0.02%)</title><rect x="20.9545%" y="1109" width="0.0186%" height="15" fill="rgb(246,101,22)"/><text x="21.2045%" y="1119.50"></text></g><g><title>core::mem::drop (2 samples, 0.01%)</title><rect x="20.9732%" y="1157" width="0.0124%" height="15" fill="rgb(206,107,13)"/><text x="21.2232%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;tokio::sync::oneshot::Inner&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="20.9732%" y="1141" width="0.0124%" height="15" fill="rgb(250,100,44)"/><text x="21.2232%" y="1151.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="20.9732%" y="1125" width="0.0124%" height="15" fill="rgb(231,147,38)"/><text x="21.2232%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.01%)</title><rect x="20.9732%" y="1109" width="0.0124%" height="15" fill="rgb(229,8,40)"/><text x="21.2232%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.01%)</title><rect x="20.9732%" y="1093" width="0.0124%" height="15" fill="rgb(221,135,30)"/><text x="21.2232%" y="1103.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.02%)</title><rect x="20.9732%" y="1173" width="0.0186%" height="15" fill="rgb(249,193,18)"/><text x="21.2232%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt;&gt;&gt; (13 samples, 0.08%)</title><rect x="20.9359%" y="1221" width="0.0808%" height="15" fill="rgb(209,133,39)"/><text x="21.1859%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt;&gt; (12 samples, 0.07%)</title><rect x="20.9421%" y="1205" width="0.0746%" height="15" fill="rgb(232,100,14)"/><text x="21.1921%" y="1215.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.07%)</title><rect x="20.9421%" y="1189" width="0.0746%" height="15" fill="rgb(224,185,1)"/><text x="21.1921%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4 samples, 0.02%)</title><rect x="20.9918%" y="1173" width="0.0249%" height="15" fill="rgb(223,139,8)"/><text x="21.2418%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_sub (4 samples, 0.02%)</title><rect x="20.9918%" y="1157" width="0.0249%" height="15" fill="rgb(232,213,38)"/><text x="21.2418%" y="1167.50"></text></g><g><title>[libc-2.31.so] (22 samples, 0.14%)</title><rect x="21.0415%" y="1205" width="0.1367%" height="15" fill="rgb(207,94,22)"/><text x="21.2915%" y="1215.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.01%)</title><rect x="21.1844%" y="1141" width="0.0124%" height="15" fill="rgb(219,183,54)"/><text x="21.4344%" y="1151.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.01%)</title><rect x="21.1844%" y="1125" width="0.0124%" height="15" fill="rgb(216,185,54)"/><text x="21.4344%" y="1135.50"></text></g><g><title>core::mem::replace (2 samples, 0.01%)</title><rect x="21.1844%" y="1109" width="0.0124%" height="15" fill="rgb(254,217,39)"/><text x="21.4344%" y="1119.50"></text></g><g><title>core::mem::swap (2 samples, 0.01%)</title><rect x="21.1844%" y="1093" width="0.0124%" height="15" fill="rgb(240,178,23)"/><text x="21.4344%" y="1103.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.01%)</title><rect x="21.1844%" y="1077" width="0.0124%" height="15" fill="rgb(218,11,47)"/><text x="21.4344%" y="1087.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="21.1844%" y="1061" width="0.0124%" height="15" fill="rgb(218,51,51)"/><text x="21.4344%" y="1071.50"></text></g><g><title>tokio::coop::poll_proceed (4 samples, 0.02%)</title><rect x="21.1782%" y="1205" width="0.0249%" height="15" fill="rgb(238,126,27)"/><text x="21.4282%" y="1215.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.02%)</title><rect x="21.1782%" y="1189" width="0.0249%" height="15" fill="rgb(249,202,22)"/><text x="21.4282%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.02%)</title><rect x="21.1782%" y="1173" width="0.0249%" height="15" fill="rgb(254,195,49)"/><text x="21.4282%" y="1183.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (3 samples, 0.02%)</title><rect x="21.1844%" y="1157" width="0.0186%" height="15" fill="rgb(208,123,14)"/><text x="21.4344%" y="1167.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::consume_value (46 samples, 0.29%)</title><rect x="21.2031%" y="1205" width="0.2859%" height="15" fill="rgb(224,200,8)"/><text x="21.4531%" y="1215.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (46 samples, 0.29%)</title><rect x="21.2031%" y="1189" width="0.2859%" height="15" fill="rgb(217,61,36)"/><text x="21.4531%" y="1199.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::consume_value::{{closure}} (46 samples, 0.29%)</title><rect x="21.2031%" y="1173" width="0.2859%" height="15" fill="rgb(206,35,45)"/><text x="21.4531%" y="1183.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (46 samples, 0.29%)</title><rect x="21.2031%" y="1157" width="0.2859%" height="15" fill="rgb(217,65,33)"/><text x="21.4531%" y="1167.50"></text></g><g><title>core::mem::take (46 samples, 0.29%)</title><rect x="21.2031%" y="1141" width="0.2859%" height="15" fill="rgb(222,158,48)"/><text x="21.4531%" y="1151.50"></text></g><g><title>core::mem::replace (46 samples, 0.29%)</title><rect x="21.2031%" y="1125" width="0.2859%" height="15" fill="rgb(254,2,54)"/><text x="21.4531%" y="1135.50"></text></g><g><title>core::mem::swap (46 samples, 0.29%)</title><rect x="21.2031%" y="1109" width="0.2859%" height="15" fill="rgb(250,143,38)"/><text x="21.4531%" y="1119.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (46 samples, 0.29%)</title><rect x="21.2031%" y="1093" width="0.2859%" height="15" fill="rgb(248,25,0)"/><text x="21.4531%" y="1103.50"></text></g><g><title>core::ptr::swap_nonoverlapping (46 samples, 0.29%)</title><rect x="21.2031%" y="1077" width="0.2859%" height="15" fill="rgb(206,152,27)"/><text x="21.4531%" y="1087.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (46 samples, 0.29%)</title><rect x="21.2031%" y="1061" width="0.2859%" height="15" fill="rgb(240,77,30)"/><text x="21.4531%" y="1071.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (43 samples, 0.27%)</title><rect x="21.2217%" y="1045" width="0.2672%" height="15" fill="rgb(231,5,3)"/><text x="21.4717%" y="1055.50"></text></g><g><title>tokio::sync::oneshot::State::set_rx_task (4 samples, 0.02%)</title><rect x="21.4952%" y="1205" width="0.0249%" height="15" fill="rgb(207,226,32)"/><text x="21.7452%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (4 samples, 0.02%)</title><rect x="21.4952%" y="1189" width="0.0249%" height="15" fill="rgb(222,207,47)"/><text x="21.7452%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_or (4 samples, 0.02%)</title><rect x="21.4952%" y="1173" width="0.0249%" height="15" fill="rgb(229,115,45)"/><text x="21.7452%" y="1183.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::produce::{{closure}} (152 samples, 0.94%)</title><rect x="20.5941%" y="1253" width="0.9446%" height="15" fill="rgb(224,191,6)"/><text x="20.8441%" y="1263.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (119 samples, 0.74%)</title><rect x="20.7992%" y="1237" width="0.7395%" height="15" fill="rgb(230,227,24)"/><text x="21.0492%" y="1247.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::poll_recv (84 samples, 0.52%)</title><rect x="21.0167%" y="1221" width="0.5220%" height="15" fill="rgb(228,80,19)"/><text x="21.2667%" y="1231.50"></text></g><g><title>tokio::sync::oneshot::Task::set_task (3 samples, 0.02%)</title><rect x="21.5200%" y="1205" width="0.0186%" height="15" fill="rgb(247,229,0)"/><text x="21.7700%" y="1215.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3 samples, 0.02%)</title><rect x="21.5200%" y="1189" width="0.0186%" height="15" fill="rgb(237,194,15)"/><text x="21.7700%" y="1199.50"></text></g><g><title>tokio::sync::oneshot::Task::set_task::{{closure}} (3 samples, 0.02%)</title><rect x="21.5200%" y="1173" width="0.0186%" height="15" fill="rgb(219,203,20)"/><text x="21.7700%" y="1183.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="21.5200%" y="1157" width="0.0186%" height="15" fill="rgb(234,128,8)"/><text x="21.7700%" y="1167.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (3 samples, 0.02%)</title><rect x="21.5200%" y="1141" width="0.0186%" height="15" fill="rgb(248,202,8)"/><text x="21.7700%" y="1151.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (3 samples, 0.02%)</title><rect x="21.5200%" y="1125" width="0.0186%" height="15" fill="rgb(206,104,37)"/><text x="21.7700%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.01%)</title><rect x="21.5262%" y="1109" width="0.0124%" height="15" fill="rgb(223,8,27)"/><text x="21.7762%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.01%)</title><rect x="21.5262%" y="1093" width="0.0124%" height="15" fill="rgb(216,217,28)"/><text x="21.7762%" y="1103.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="21.7189%" y="1205" width="0.0124%" height="15" fill="rgb(249,199,1)"/><text x="21.9689%" y="1215.50"></text></g><g><title>__rust_probestack (2 samples, 0.01%)</title><rect x="21.7189%" y="1189" width="0.0124%" height="15" fill="rgb(240,85,17)"/><text x="21.9689%" y="1199.50"></text></g><g><title>[libc-2.31.so] (434 samples, 2.70%)</title><rect x="21.7313%" y="1205" width="2.6970%" height="15" fill="rgb(206,108,45)"/><text x="21.9813%" y="1215.50">[l..</text></g><g><title>[libc-2.31.so] (18 samples, 0.11%)</title><rect x="24.5091%" y="1189" width="0.1119%" height="15" fill="rgb(245,210,41)"/><text x="24.7591%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (3 samples, 0.02%)</title><rect x="24.6209%" y="1189" width="0.0186%" height="15" fill="rgb(206,13,37)"/><text x="24.8709%" y="1199.50"></text></g><g><title>core::mem::take (3 samples, 0.02%)</title><rect x="24.6209%" y="1173" width="0.0186%" height="15" fill="rgb(250,61,18)"/><text x="24.8709%" y="1183.50"></text></g><g><title>core::mem::replace (3 samples, 0.02%)</title><rect x="24.6209%" y="1157" width="0.0186%" height="15" fill="rgb(235,172,48)"/><text x="24.8709%" y="1167.50"></text></g><g><title>core::mem::swap (3 samples, 0.02%)</title><rect x="24.6209%" y="1141" width="0.0186%" height="15" fill="rgb(249,201,17)"/><text x="24.8709%" y="1151.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (3 samples, 0.02%)</title><rect x="24.6209%" y="1125" width="0.0186%" height="15" fill="rgb(219,208,6)"/><text x="24.8709%" y="1135.50"></text></g><g><title>core::ptr::swap_nonoverlapping (3 samples, 0.02%)</title><rect x="24.6209%" y="1109" width="0.0186%" height="15" fill="rgb(248,31,23)"/><text x="24.8709%" y="1119.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (3 samples, 0.02%)</title><rect x="24.6209%" y="1093" width="0.0186%" height="15" fill="rgb(245,15,42)"/><text x="24.8709%" y="1103.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="24.6209%" y="1077" width="0.0186%" height="15" fill="rgb(222,217,39)"/><text x="24.8709%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (22 samples, 0.14%)</title><rect x="24.6396%" y="1189" width="0.1367%" height="15" fill="rgb(210,219,27)"/><text x="24.8896%" y="1199.50"></text></g><g><title>[libc-2.31.so] (21 samples, 0.13%)</title><rect x="24.6458%" y="1173" width="0.1305%" height="15" fill="rgb(252,166,36)"/><text x="24.8958%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;rho_runtime::storage::runner::JoinedGroup&gt; (2 samples, 0.01%)</title><rect x="24.7763%" y="1189" width="0.0124%" height="15" fill="rgb(245,132,34)"/><text x="25.0263%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;(),rho_runtime::storage::coordinator::PendingTask&gt;&gt; (2 samples, 0.01%)</title><rect x="24.7763%" y="1173" width="0.0124%" height="15" fill="rgb(236,54,3)"/><text x="25.0263%" y="1183.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (4 samples, 0.02%)</title><rect x="24.8074%" y="1157" width="0.0249%" height="15" fill="rgb(241,173,43)"/><text x="25.0574%" y="1167.50"></text></g><g><title>core::ptr::write (4 samples, 0.02%)</title><rect x="24.8074%" y="1141" width="0.0249%" height="15" fill="rgb(215,190,9)"/><text x="25.0574%" y="1151.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.02%)</title><rect x="24.8074%" y="1125" width="0.0249%" height="15" fill="rgb(242,101,16)"/><text x="25.0574%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (9 samples, 0.06%)</title><rect x="24.8322%" y="1157" width="0.0559%" height="15" fill="rgb(223,190,21)"/><text x="25.0822%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (9 samples, 0.06%)</title><rect x="24.8322%" y="1141" width="0.0559%" height="15" fill="rgb(215,228,25)"/><text x="25.0822%" y="1151.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::push (24 samples, 0.15%)</title><rect x="24.8011%" y="1173" width="0.1491%" height="15" fill="rgb(225,36,22)"/><text x="25.0511%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (10 samples, 0.06%)</title><rect x="24.8881%" y="1157" width="0.0621%" height="15" fill="rgb(251,106,46)"/><text x="25.1381%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_load (10 samples, 0.06%)</title><rect x="24.8881%" y="1141" width="0.0621%" height="15" fill="rgb(208,90,1)"/><text x="25.1381%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (14 samples, 0.09%)</title><rect x="24.9565%" y="1157" width="0.0870%" height="15" fill="rgb(243,10,4)"/><text x="25.2065%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (14 samples, 0.09%)</title><rect x="24.9565%" y="1141" width="0.0870%" height="15" fill="rgb(212,137,27)"/><text x="25.2065%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.02%)</title><rect x="25.0435%" y="1157" width="0.0186%" height="15" fill="rgb(231,220,49)"/><text x="25.2935%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.02%)</title><rect x="25.0435%" y="1141" width="0.0186%" height="15" fill="rgb(237,96,20)"/><text x="25.2935%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::park::thread::Inner&gt;&gt; (3 samples, 0.02%)</title><rect x="25.0621%" y="1125" width="0.0186%" height="15" fill="rgb(239,229,30)"/><text x="25.3121%" y="1135.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="25.0621%" y="1109" width="0.0186%" height="15" fill="rgb(219,65,33)"/><text x="25.3121%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (8 samples, 0.05%)</title><rect x="25.0808%" y="1109" width="0.0497%" height="15" fill="rgb(243,134,7)"/><text x="25.3308%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_swap (8 samples, 0.05%)</title><rect x="25.0808%" y="1093" width="0.0497%" height="15" fill="rgb(216,177,54)"/><text x="25.3308%" y="1103.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (358 samples, 2.22%)</title><rect x="25.1305%" y="1045" width="2.2247%" height="15" fill="rgb(211,160,20)"/><text x="25.3805%" y="1055.50">&lt;..</text></g><g><title>syscall (358 samples, 2.22%)</title><rect x="25.1305%" y="1029" width="2.2247%" height="15" fill="rgb(239,85,39)"/><text x="25.3805%" y="1039.50">s..</text></g><g><title>[unknown] (356 samples, 2.21%)</title><rect x="25.1429%" y="1013" width="2.2123%" height="15" fill="rgb(232,125,22)"/><text x="25.3929%" y="1023.50">[..</text></g><g><title>[unknown] (355 samples, 2.21%)</title><rect x="25.1491%" y="997" width="2.2061%" height="15" fill="rgb(244,57,34)"/><text x="25.3991%" y="1007.50">[..</text></g><g><title>[unknown] (350 samples, 2.17%)</title><rect x="25.1802%" y="981" width="2.1750%" height="15" fill="rgb(214,203,32)"/><text x="25.4302%" y="991.50">[..</text></g><g><title>[unknown] (349 samples, 2.17%)</title><rect x="25.1864%" y="965" width="2.1688%" height="15" fill="rgb(207,58,43)"/><text x="25.4364%" y="975.50">[..</text></g><g><title>[unknown] (347 samples, 2.16%)</title><rect x="25.1989%" y="949" width="2.1564%" height="15" fill="rgb(215,193,15)"/><text x="25.4489%" y="959.50">[..</text></g><g><title>[unknown] (319 samples, 1.98%)</title><rect x="25.3729%" y="933" width="1.9824%" height="15" fill="rgb(232,15,44)"/><text x="25.6229%" y="943.50">[..</text></g><g><title>[unknown] (290 samples, 1.80%)</title><rect x="25.5531%" y="917" width="1.8021%" height="15" fill="rgb(212,3,48)"/><text x="25.8031%" y="927.50">[..</text></g><g><title>[unknown] (266 samples, 1.65%)</title><rect x="25.7022%" y="901" width="1.6530%" height="15" fill="rgb(218,128,7)"/><text x="25.9522%" y="911.50"></text></g><g><title>[unknown] (203 samples, 1.26%)</title><rect x="26.0937%" y="885" width="1.2615%" height="15" fill="rgb(226,216,39)"/><text x="26.3437%" y="895.50"></text></g><g><title>[unknown] (156 samples, 0.97%)</title><rect x="26.3858%" y="869" width="0.9694%" height="15" fill="rgb(243,47,51)"/><text x="26.6358%" y="879.50"></text></g><g><title>[unknown] (79 samples, 0.49%)</title><rect x="26.8643%" y="853" width="0.4909%" height="15" fill="rgb(241,183,40)"/><text x="27.1143%" y="863.50"></text></g><g><title>[unknown] (29 samples, 0.18%)</title><rect x="27.1750%" y="837" width="0.1802%" height="15" fill="rgb(231,217,32)"/><text x="27.4250%" y="847.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="27.3366%" y="821" width="0.0186%" height="15" fill="rgb(229,61,38)"/><text x="27.5866%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.02%)</title><rect x="27.3614%" y="1045" width="0.0186%" height="15" fill="rgb(225,210,5)"/><text x="27.6114%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.02%)</title><rect x="27.3614%" y="1029" width="0.0186%" height="15" fill="rgb(231,79,45)"/><text x="27.6114%" y="1039.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (3 samples, 0.02%)</title><rect x="27.3801%" y="1045" width="0.0186%" height="15" fill="rgb(224,100,7)"/><text x="27.6301%" y="1055.50"></text></g><g><title>std::time::Instant::now (3 samples, 0.02%)</title><rect x="27.3801%" y="1029" width="0.0186%" height="15" fill="rgb(241,198,18)"/><text x="27.6301%" y="1039.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (3 samples, 0.02%)</title><rect x="27.3801%" y="1013" width="0.0186%" height="15" fill="rgb(252,97,53)"/><text x="27.6301%" y="1023.50"></text></g><g><title>std::sys::unix::time::inner::now (3 samples, 0.02%)</title><rect x="27.3801%" y="997" width="0.0186%" height="15" fill="rgb(220,88,7)"/><text x="27.6301%" y="1007.50"></text></g><g><title>__clock_gettime (3 samples, 0.02%)</title><rect x="27.3801%" y="981" width="0.0186%" height="15" fill="rgb(213,176,14)"/><text x="27.6301%" y="991.50"></text></g><g><title>__vdso_clock_gettime (3 samples, 0.02%)</title><rect x="27.3801%" y="965" width="0.0186%" height="15" fill="rgb(246,73,7)"/><text x="27.6301%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (2 samples, 0.01%)</title><rect x="27.3987%" y="1013" width="0.0124%" height="15" fill="rgb(245,64,36)"/><text x="27.6487%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.01%)</title><rect x="27.3987%" y="997" width="0.0124%" height="15" fill="rgb(245,80,10)"/><text x="27.6487%" y="1007.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (3 samples, 0.02%)</title><rect x="27.3987%" y="1045" width="0.0186%" height="15" fill="rgb(232,107,50)"/><text x="27.6487%" y="1055.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (3 samples, 0.02%)</title><rect x="27.3987%" y="1029" width="0.0186%" height="15" fill="rgb(253,3,0)"/><text x="27.6487%" y="1039.50"></text></g><g><title>core::task::wake::Waker::wake (385 samples, 2.39%)</title><rect x="25.0621%" y="1157" width="2.3925%" height="15" fill="rgb(212,99,53)"/><text x="25.3121%" y="1167.50">co..</text></g><g><title>tokio::park::thread::wake (385 samples, 2.39%)</title><rect x="25.0621%" y="1141" width="2.3925%" height="15" fill="rgb(249,111,54)"/><text x="25.3121%" y="1151.50">to..</text></g><g><title>tokio::park::thread::Inner::unpark (382 samples, 2.37%)</title><rect x="25.0808%" y="1125" width="2.3739%" height="15" fill="rgb(249,55,30)"/><text x="25.3308%" y="1135.50">to..</text></g><g><title>tokio::loom::std::parking_lot::Condvar::notify_one (374 samples, 2.32%)</title><rect x="25.1305%" y="1109" width="2.3241%" height="15" fill="rgb(237,47,42)"/><text x="25.3805%" y="1119.50">t..</text></g><g><title>parking_lot::condvar::Condvar::notify_one (374 samples, 2.32%)</title><rect x="25.1305%" y="1093" width="2.3241%" height="15" fill="rgb(211,20,18)"/><text x="25.3805%" y="1103.50">p..</text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (374 samples, 2.32%)</title><rect x="25.1305%" y="1077" width="2.3241%" height="15" fill="rgb(231,203,46)"/><text x="25.3805%" y="1087.50">p..</text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (374 samples, 2.32%)</title><rect x="25.1305%" y="1061" width="2.3241%" height="15" fill="rgb(237,142,3)"/><text x="25.3805%" y="1071.50">p..</text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (6 samples, 0.04%)</title><rect x="27.4174%" y="1045" width="0.0373%" height="15" fill="rgb(241,107,1)"/><text x="27.6674%" y="1055.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (6 samples, 0.04%)</title><rect x="27.4174%" y="1029" width="0.0373%" height="15" fill="rgb(229,83,13)"/><text x="27.6674%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (6 samples, 0.04%)</title><rect x="27.4174%" y="1013" width="0.0373%" height="15" fill="rgb(241,91,40)"/><text x="27.6674%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_sub (6 samples, 0.04%)</title><rect x="27.4174%" y="997" width="0.0373%" height="15" fill="rgb(225,3,45)"/><text x="27.6674%" y="1007.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (26 samples, 0.16%)</title><rect x="27.4546%" y="1157" width="0.1616%" height="15" fill="rgb(244,223,14)"/><text x="27.7046%" y="1167.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (26 samples, 0.16%)</title><rect x="27.4546%" y="1141" width="0.1616%" height="15" fill="rgb(224,124,37)"/><text x="27.7046%" y="1151.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (26 samples, 0.16%)</title><rect x="27.4546%" y="1125" width="0.1616%" height="15" fill="rgb(251,171,30)"/><text x="27.7046%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (26 samples, 0.16%)</title><rect x="27.4546%" y="1109" width="0.1616%" height="15" fill="rgb(236,46,54)"/><text x="27.7046%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (26 samples, 0.16%)</title><rect x="27.4546%" y="1093" width="0.1616%" height="15" fill="rgb(245,213,5)"/><text x="27.7046%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (2 samples, 0.01%)</title><rect x="27.6224%" y="1141" width="0.0124%" height="15" fill="rgb(230,144,27)"/><text x="27.8724%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (2 samples, 0.01%)</title><rect x="27.6224%" y="1125" width="0.0124%" height="15" fill="rgb(220,86,6)"/><text x="27.8724%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (3 samples, 0.02%)</title><rect x="27.6348%" y="1141" width="0.0186%" height="15" fill="rgb(240,20,13)"/><text x="27.8848%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_store (3 samples, 0.02%)</title><rect x="27.6348%" y="1125" width="0.0186%" height="15" fill="rgb(217,89,34)"/><text x="27.8848%" y="1135.50"></text></g><g><title>rho_runtime::storage::coordinator::ThreadSafeQueue::push (464 samples, 2.88%)</title><rect x="24.7949%" y="1189" width="2.8834%" height="15" fill="rgb(229,13,5)"/><text x="25.0449%" y="1199.50">rh..</text></g><g><title>tokio::sync::notify::Notify::notify_one (439 samples, 2.73%)</title><rect x="24.9503%" y="1173" width="2.7281%" height="15" fill="rgb(244,67,35)"/><text x="25.2003%" y="1183.50">to..</text></g><g><title>tokio::sync::notify::notify_locked (10 samples, 0.06%)</title><rect x="27.6162%" y="1157" width="0.0621%" height="15" fill="rgb(221,40,2)"/><text x="27.8662%" y="1167.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::pop_back (4 samples, 0.02%)</title><rect x="27.6535%" y="1141" width="0.0249%" height="15" fill="rgb(237,157,21)"/><text x="27.9035%" y="1151.50"></text></g><g><title>[libc-2.31.so] (26 samples, 0.16%)</title><rect x="27.7032%" y="1173" width="0.1616%" height="15" fill="rgb(222,94,11)"/><text x="27.9532%" y="1183.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::pop (32 samples, 0.20%)</title><rect x="27.6783%" y="1189" width="0.1989%" height="15" fill="rgb(249,113,6)"/><text x="27.9283%" y="1199.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (2 samples, 0.01%)</title><rect x="27.8648%" y="1173" width="0.0124%" height="15" fill="rgb(238,137,36)"/><text x="28.1148%" y="1183.50"></text></g><g><title>rho_runtime::storage::runner::Runner::start::{{closure}} (1,021 samples, 6.34%)</title><rect x="21.5387%" y="1253" width="6.3448%" height="15" fill="rgb(210,102,26)"/><text x="21.7887%" y="1263.50">rho_runt..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,003 samples, 6.23%)</title><rect x="21.6505%" y="1237" width="6.2329%" height="15" fill="rgb(218,30,30)"/><text x="21.9005%" y="1247.50">&lt;core::f..</text></g><g><title>rho_runtime::storage::runner::Runner::run::{{closure}} (1,003 samples, 6.23%)</title><rect x="21.6505%" y="1221" width="6.2329%" height="15" fill="rgb(214,67,26)"/><text x="21.9005%" y="1231.50">rho_runt..</text></g><g><title>rho_runtime::storage::runner::Runner::handle (556 samples, 3.46%)</title><rect x="24.4283%" y="1205" width="3.4551%" height="15" fill="rgb(251,9,53)"/><text x="24.6783%" y="1215.50">rho..</text></g><g><title>core::ptr::drop_in_place&lt;tokio::coop::RestoreOnPending&gt; (6 samples, 0.04%)</title><rect x="27.9828%" y="1173" width="0.0373%" height="15" fill="rgb(228,204,25)"/><text x="28.2328%" y="1183.50"></text></g><g><title>tokio::coop::CURRENT::__getit (2 samples, 0.01%)</title><rect x="28.0201%" y="1125" width="0.0124%" height="15" fill="rgb(207,153,8)"/><text x="28.2701%" y="1135.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (2 samples, 0.01%)</title><rect x="28.0201%" y="1109" width="0.0124%" height="15" fill="rgb(242,9,16)"/><text x="28.2701%" y="1119.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (2 samples, 0.01%)</title><rect x="28.0201%" y="1093" width="0.0124%" height="15" fill="rgb(217,211,10)"/><text x="28.2701%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.01%)</title><rect x="28.0201%" y="1077" width="0.0124%" height="15" fill="rgb(219,228,52)"/><text x="28.2701%" y="1087.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (10 samples, 0.06%)</title><rect x="28.0326%" y="1109" width="0.0621%" height="15" fill="rgb(231,92,29)"/><text x="28.2826%" y="1119.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (10 samples, 0.06%)</title><rect x="28.0326%" y="1093" width="0.0621%" height="15" fill="rgb(232,8,23)"/><text x="28.2826%" y="1103.50"></text></g><g><title>core::mem::replace (10 samples, 0.06%)</title><rect x="28.0326%" y="1077" width="0.0621%" height="15" fill="rgb(216,211,34)"/><text x="28.2826%" y="1087.50"></text></g><g><title>core::mem::swap (10 samples, 0.06%)</title><rect x="28.0326%" y="1061" width="0.0621%" height="15" fill="rgb(236,151,0)"/><text x="28.2826%" y="1071.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (10 samples, 0.06%)</title><rect x="28.0326%" y="1045" width="0.0621%" height="15" fill="rgb(209,168,3)"/><text x="28.2826%" y="1055.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.06%)</title><rect x="28.0326%" y="1029" width="0.0621%" height="15" fill="rgb(208,129,28)"/><text x="28.2826%" y="1039.50"></text></g><g><title>tokio::coop::poll_proceed (13 samples, 0.08%)</title><rect x="28.0201%" y="1173" width="0.0808%" height="15" fill="rgb(229,78,22)"/><text x="28.2701%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (13 samples, 0.08%)</title><rect x="28.0201%" y="1157" width="0.0808%" height="15" fill="rgb(228,187,13)"/><text x="28.2701%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13 samples, 0.08%)</title><rect x="28.0201%" y="1141" width="0.0808%" height="15" fill="rgb(240,119,24)"/><text x="28.2701%" y="1151.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (11 samples, 0.07%)</title><rect x="28.0326%" y="1125" width="0.0684%" height="15" fill="rgb(209,194,42)"/><text x="28.2826%" y="1135.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (31 samples, 0.19%)</title><rect x="27.9269%" y="1237" width="0.1926%" height="15" fill="rgb(247,200,46)"/><text x="28.1769%" y="1247.50"></text></g><g><title>tokio::sync::mpsc::unbounded::UnboundedReceiver&lt;T&gt;::recv::{{closure}}::{{closure}} (31 samples, 0.19%)</title><rect x="27.9269%" y="1221" width="0.1926%" height="15" fill="rgb(218,76,16)"/><text x="28.1769%" y="1231.50"></text></g><g><title>tokio::sync::mpsc::unbounded::UnboundedReceiver&lt;T&gt;::poll_recv (28 samples, 0.17%)</title><rect x="27.9456%" y="1205" width="0.1740%" height="15" fill="rgb(225,21,48)"/><text x="28.1956%" y="1215.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (28 samples, 0.17%)</title><rect x="27.9456%" y="1189" width="0.1740%" height="15" fill="rgb(239,223,50)"/><text x="28.1956%" y="1199.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3 samples, 0.02%)</title><rect x="28.1009%" y="1173" width="0.0186%" height="15" fill="rgb(244,45,21)"/><text x="28.3509%" y="1183.50"></text></g><g><title>__rust_probestack (3 samples, 0.02%)</title><rect x="28.1009%" y="1157" width="0.0186%" height="15" fill="rgb(232,33,43)"/><text x="28.3509%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,369 samples, 8.51%)</title><rect x="20.1529%" y="1269" width="8.5073%" height="15" fill="rgb(209,8,3)"/><text x="20.4029%" y="1279.50">&lt;core::futur..</text></g><g><title>tokio::sync::mpsc::unbounded::UnboundedReceiver&lt;T&gt;::recv::{{closure}} (125 samples, 0.78%)</title><rect x="27.8834%" y="1253" width="0.7768%" height="15" fill="rgb(214,25,53)"/><text x="28.1334%" y="1263.50"></text></g><g><title>[libc-2.31.so] (87 samples, 0.54%)</title><rect x="28.1196%" y="1237" width="0.5406%" height="15" fill="rgb(254,186,54)"/><text x="28.3696%" y="1247.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="28.7286%" y="677" width="0.0186%" height="15" fill="rgb(208,174,49)"/><text x="28.9786%" y="687.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.03%)</title><rect x="28.7223%" y="693" width="0.0311%" height="15" fill="rgb(233,191,51)"/><text x="28.9723%" y="703.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (6 samples, 0.04%)</title><rect x="28.7223%" y="709" width="0.0373%" height="15" fill="rgb(222,134,10)"/><text x="28.9723%" y="719.50"></text></g><g><title>__rg_alloc (2 samples, 0.01%)</title><rect x="28.7596%" y="613" width="0.0124%" height="15" fill="rgb(230,226,20)"/><text x="29.0096%" y="623.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (2 samples, 0.01%)</title><rect x="28.7596%" y="597" width="0.0124%" height="15" fill="rgb(251,111,25)"/><text x="29.0096%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.02%)</title><rect x="28.7596%" y="661" width="0.0249%" height="15" fill="rgb(224,40,46)"/><text x="29.0096%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.02%)</title><rect x="28.7596%" y="645" width="0.0249%" height="15" fill="rgb(236,108,47)"/><text x="29.0096%" y="655.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.02%)</title><rect x="28.7596%" y="629" width="0.0249%" height="15" fill="rgb(234,93,0)"/><text x="29.0096%" y="639.50"></text></g><g><title>_rjem_mallocx (2 samples, 0.01%)</title><rect x="28.7721%" y="613" width="0.0124%" height="15" fill="rgb(224,213,32)"/><text x="29.0221%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.03%)</title><rect x="28.7596%" y="709" width="0.0311%" height="15" fill="rgb(251,11,48)"/><text x="29.0096%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.03%)</title><rect x="28.7596%" y="693" width="0.0311%" height="15" fill="rgb(236,173,5)"/><text x="29.0096%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.03%)</title><rect x="28.7596%" y="677" width="0.0311%" height="15" fill="rgb(230,95,12)"/><text x="29.0096%" y="687.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (24 samples, 0.15%)</title><rect x="28.6788%" y="1269" width="0.1491%" height="15" fill="rgb(232,209,1)"/><text x="28.9288%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (21 samples, 0.13%)</title><rect x="28.6975%" y="1253" width="0.1305%" height="15" fill="rgb(232,6,1)"/><text x="28.9475%" y="1263.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (21 samples, 0.13%)</title><rect x="28.6975%" y="1237" width="0.1305%" height="15" fill="rgb(210,224,50)"/><text x="28.9475%" y="1247.50"></text></g><g><title>alloc::slice::hack::to_vec (21 samples, 0.13%)</title><rect x="28.6975%" y="1221" width="0.1305%" height="15" fill="rgb(228,127,35)"/><text x="28.9475%" y="1231.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18 samples, 0.11%)</title><rect x="28.7161%" y="1205" width="0.1119%" height="15" fill="rgb(245,102,45)"/><text x="28.9661%" y="1215.50"></text></g><g><title>&lt;model::rho_types::Send as core::clone::Clone&gt;::clone (18 samples, 0.11%)</title><rect x="28.7161%" y="1189" width="0.1119%" height="15" fill="rgb(214,1,49)"/><text x="28.9661%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 0.11%)</title><rect x="28.7161%" y="1173" width="0.1119%" height="15" fill="rgb(226,163,40)"/><text x="28.9661%" y="1183.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18 samples, 0.11%)</title><rect x="28.7161%" y="1157" width="0.1119%" height="15" fill="rgb(239,212,28)"/><text x="28.9661%" y="1167.50"></text></g><g><title>alloc::slice::hack::to_vec (18 samples, 0.11%)</title><rect x="28.7161%" y="1141" width="0.1119%" height="15" fill="rgb(220,20,13)"/><text x="28.9661%" y="1151.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18 samples, 0.11%)</title><rect x="28.7161%" y="1125" width="0.1119%" height="15" fill="rgb(210,164,35)"/><text x="28.9661%" y="1135.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (18 samples, 0.11%)</title><rect x="28.7161%" y="1109" width="0.1119%" height="15" fill="rgb(248,109,41)"/><text x="28.9661%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 0.11%)</title><rect x="28.7161%" y="1093" width="0.1119%" height="15" fill="rgb(238,23,50)"/><text x="28.9661%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18 samples, 0.11%)</title><rect x="28.7161%" y="1077" width="0.1119%" height="15" fill="rgb(211,48,49)"/><text x="28.9661%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (18 samples, 0.11%)</title><rect x="28.7161%" y="1061" width="0.1119%" height="15" fill="rgb(223,36,21)"/><text x="28.9661%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18 samples, 0.11%)</title><rect x="28.7161%" y="1045" width="0.1119%" height="15" fill="rgb(207,123,46)"/><text x="28.9661%" y="1055.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (18 samples, 0.11%)</title><rect x="28.7161%" y="1029" width="0.1119%" height="15" fill="rgb(240,218,32)"/><text x="28.9661%" y="1039.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (18 samples, 0.11%)</title><rect x="28.7161%" y="1013" width="0.1119%" height="15" fill="rgb(252,5,43)"/><text x="28.9661%" y="1023.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (18 samples, 0.11%)</title><rect x="28.7161%" y="997" width="0.1119%" height="15" fill="rgb(252,84,19)"/><text x="28.9661%" y="1007.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (18 samples, 0.11%)</title><rect x="28.7161%" y="981" width="0.1119%" height="15" fill="rgb(243,152,39)"/><text x="28.9661%" y="991.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (18 samples, 0.11%)</title><rect x="28.7161%" y="965" width="0.1119%" height="15" fill="rgb(234,160,15)"/><text x="28.9661%" y="975.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (18 samples, 0.11%)</title><rect x="28.7161%" y="949" width="0.1119%" height="15" fill="rgb(237,34,20)"/><text x="28.9661%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 0.11%)</title><rect x="28.7161%" y="933" width="0.1119%" height="15" fill="rgb(229,97,13)"/><text x="28.9661%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18 samples, 0.11%)</title><rect x="28.7161%" y="917" width="0.1119%" height="15" fill="rgb(234,71,50)"/><text x="28.9661%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (18 samples, 0.11%)</title><rect x="28.7161%" y="901" width="0.1119%" height="15" fill="rgb(253,155,4)"/><text x="28.9661%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18 samples, 0.11%)</title><rect x="28.7161%" y="885" width="0.1119%" height="15" fill="rgb(222,185,37)"/><text x="28.9661%" y="895.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (18 samples, 0.11%)</title><rect x="28.7161%" y="869" width="0.1119%" height="15" fill="rgb(251,177,13)"/><text x="28.9661%" y="879.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (18 samples, 0.11%)</title><rect x="28.7161%" y="853" width="0.1119%" height="15" fill="rgb(250,179,40)"/><text x="28.9661%" y="863.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (18 samples, 0.11%)</title><rect x="28.7161%" y="837" width="0.1119%" height="15" fill="rgb(242,44,2)"/><text x="28.9661%" y="847.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (18 samples, 0.11%)</title><rect x="28.7161%" y="821" width="0.1119%" height="15" fill="rgb(216,177,13)"/><text x="28.9661%" y="831.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (18 samples, 0.11%)</title><rect x="28.7161%" y="805" width="0.1119%" height="15" fill="rgb(216,106,43)"/><text x="28.9661%" y="815.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (18 samples, 0.11%)</title><rect x="28.7161%" y="789" width="0.1119%" height="15" fill="rgb(216,183,2)"/><text x="28.9661%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 0.11%)</title><rect x="28.7161%" y="773" width="0.1119%" height="15" fill="rgb(249,75,3)"/><text x="28.9661%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18 samples, 0.11%)</title><rect x="28.7161%" y="757" width="0.1119%" height="15" fill="rgb(219,67,39)"/><text x="28.9661%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (18 samples, 0.11%)</title><rect x="28.7161%" y="741" width="0.1119%" height="15" fill="rgb(253,228,2)"/><text x="28.9661%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18 samples, 0.11%)</title><rect x="28.7161%" y="725" width="0.1119%" height="15" fill="rgb(235,138,27)"/><text x="28.9661%" y="735.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (6 samples, 0.04%)</title><rect x="28.7907%" y="709" width="0.0373%" height="15" fill="rgb(236,97,51)"/><text x="29.0407%" y="719.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.02%)</title><rect x="28.8031%" y="693" width="0.0249%" height="15" fill="rgb(240,80,30)"/><text x="29.0531%" y="703.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (2 samples, 0.01%)</title><rect x="28.9212%" y="1253" width="0.0124%" height="15" fill="rgb(230,178,19)"/><text x="29.1712%" y="1263.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.05%)</title><rect x="28.9336%" y="1253" width="0.0497%" height="15" fill="rgb(210,190,27)"/><text x="29.1836%" y="1263.50"></text></g><g><title>core::ptr::read (8 samples, 0.05%)</title><rect x="28.9336%" y="1237" width="0.0497%" height="15" fill="rgb(222,107,31)"/><text x="29.1836%" y="1247.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.05%)</title><rect x="28.9336%" y="1221" width="0.0497%" height="15" fill="rgb(216,127,34)"/><text x="29.1836%" y="1231.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.14%)</title><rect x="29.0579%" y="1237" width="0.1367%" height="15" fill="rgb(234,116,52)"/><text x="29.3079%" y="1247.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (21 samples, 0.13%)</title><rect x="29.0641%" y="1221" width="0.1305%" height="15" fill="rgb(222,124,15)"/><text x="29.3141%" y="1231.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (21 samples, 0.13%)</title><rect x="29.0641%" y="1205" width="0.1305%" height="15" fill="rgb(231,179,28)"/><text x="29.3141%" y="1215.50"></text></g><g><title>core::ptr::read (21 samples, 0.13%)</title><rect x="29.0641%" y="1189" width="0.1305%" height="15" fill="rgb(226,93,45)"/><text x="29.3141%" y="1199.50"></text></g><g><title>[libc-2.31.so] (12 samples, 0.07%)</title><rect x="29.1201%" y="1173" width="0.0746%" height="15" fill="rgb(215,8,51)"/><text x="29.3701%" y="1183.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (42 samples, 0.26%)</title><rect x="28.9833%" y="1253" width="0.2610%" height="15" fill="rgb(223,106,5)"/><text x="29.2333%" y="1263.50"></text></g><g><title>core::ptr::write (8 samples, 0.05%)</title><rect x="29.1946%" y="1237" width="0.0497%" height="15" fill="rgb(250,191,5)"/><text x="29.4446%" y="1247.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.05%)</title><rect x="29.1946%" y="1221" width="0.0497%" height="15" fill="rgb(242,132,44)"/><text x="29.4446%" y="1231.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (33 samples, 0.21%)</title><rect x="29.2443%" y="1253" width="0.2051%" height="15" fill="rgb(251,152,29)"/><text x="29.4943%" y="1263.50"></text></g><g><title>[libc-2.31.so] (31 samples, 0.19%)</title><rect x="29.2568%" y="1237" width="0.1926%" height="15" fill="rgb(218,179,5)"/><text x="29.5068%" y="1247.50"></text></g><g><title>[libc-2.31.so] (66 samples, 0.41%)</title><rect x="29.4494%" y="1253" width="0.4101%" height="15" fill="rgb(227,67,19)"/><text x="29.6994%" y="1263.50"></text></g><g><title>&lt;model::locally_free::ExprInstanceLocallyFree as model::locally_free::HasLocallyFree&lt;model::rho_types::expr::ExprInstance&gt;&gt;::locally_free (3 samples, 0.02%)</title><rect x="29.8844%" y="1237" width="0.0186%" height="15" fill="rgb(233,119,31)"/><text x="30.1344%" y="1247.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.02%)</title><rect x="29.9031%" y="1237" width="0.0186%" height="15" fill="rgb(241,120,22)"/><text x="30.1531%" y="1247.50"></text></g><g><title>model::rho_types::Par::append_expr (14 samples, 0.09%)</title><rect x="29.8720%" y="1253" width="0.0870%" height="15" fill="rgb(224,102,30)"/><text x="30.1220%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.04%)</title><rect x="29.9217%" y="1237" width="0.0373%" height="15" fill="rgb(210,164,37)"/><text x="30.1717%" y="1247.50"></text></g><g><title>core::ptr::write (4 samples, 0.02%)</title><rect x="29.9341%" y="1221" width="0.0249%" height="15" fill="rgb(226,191,16)"/><text x="30.1841%" y="1231.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.02%)</title><rect x="29.9341%" y="1205" width="0.0249%" height="15" fill="rgb(214,40,45)"/><text x="30.1841%" y="1215.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (5 samples, 0.03%)</title><rect x="29.9652%" y="1237" width="0.0311%" height="15" fill="rgb(244,29,26)"/><text x="30.2152%" y="1247.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.03%)</title><rect x="29.9652%" y="1221" width="0.0311%" height="15" fill="rgb(216,16,5)"/><text x="30.2152%" y="1231.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.04%)</title><rect x="29.9963%" y="1221" width="0.0373%" height="15" fill="rgb(249,76,35)"/><text x="30.2463%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (2 samples, 0.01%)</title><rect x="30.0336%" y="1221" width="0.0124%" height="15" fill="rgb(207,11,44)"/><text x="30.2836%" y="1231.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (16 samples, 0.10%)</title><rect x="29.9963%" y="1237" width="0.0994%" height="15" fill="rgb(228,190,49)"/><text x="30.2463%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (8 samples, 0.05%)</title><rect x="30.0460%" y="1221" width="0.0497%" height="15" fill="rgb(214,173,12)"/><text x="30.2960%" y="1231.50"></text></g><g><title>core::ptr::read (8 samples, 0.05%)</title><rect x="30.0460%" y="1205" width="0.0497%" height="15" fill="rgb(218,26,35)"/><text x="30.2960%" y="1215.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.05%)</title><rect x="30.0460%" y="1189" width="0.0497%" height="15" fill="rgb(220,200,19)"/><text x="30.2960%" y="1199.50"></text></g><g><title>[libc-2.31.so] (18 samples, 0.11%)</title><rect x="30.0957%" y="1237" width="0.1119%" height="15" fill="rgb(239,95,49)"/><text x="30.3457%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Bundle&gt;&gt; (2 samples, 0.01%)</title><rect x="30.2138%" y="1205" width="0.0124%" height="15" fill="rgb(235,85,53)"/><text x="30.4638%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="30.2138%" y="1189" width="0.0124%" height="15" fill="rgb(233,133,31)"/><text x="30.4638%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Bundle]&gt; (2 samples, 0.01%)</title><rect x="30.2138%" y="1173" width="0.0124%" height="15" fill="rgb(218,25,20)"/><text x="30.4638%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (8 samples, 0.05%)</title><rect x="30.2324%" y="1205" width="0.0497%" height="15" fill="rgb(252,210,38)"/><text x="30.4824%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (7 samples, 0.04%)</title><rect x="30.2386%" y="1189" width="0.0435%" height="15" fill="rgb(242,134,21)"/><text x="30.4886%" y="1199.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.04%)</title><rect x="30.2386%" y="1173" width="0.0435%" height="15" fill="rgb(213,28,48)"/><text x="30.4886%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.04%)</title><rect x="30.2386%" y="1157" width="0.0435%" height="15" fill="rgb(250,196,2)"/><text x="30.4886%" y="1167.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.04%)</title><rect x="30.2386%" y="1141" width="0.0435%" height="15" fill="rgb(227,5,17)"/><text x="30.4886%" y="1151.50"></text></g><g><title>_rjem_sdallocx (7 samples, 0.04%)</title><rect x="30.2386%" y="1125" width="0.0435%" height="15" fill="rgb(221,226,24)"/><text x="30.4886%" y="1135.50"></text></g><g><title>isfree (4 samples, 0.02%)</title><rect x="30.2573%" y="1109" width="0.0249%" height="15" fill="rgb(211,5,48)"/><text x="30.5073%" y="1119.50"></text></g><g><title>isdalloct (4 samples, 0.02%)</title><rect x="30.2573%" y="1093" width="0.0249%" height="15" fill="rgb(219,150,6)"/><text x="30.5073%" y="1103.50"></text></g><g><title>arena_sdalloc (4 samples, 0.02%)</title><rect x="30.2573%" y="1077" width="0.0249%" height="15" fill="rgb(251,46,16)"/><text x="30.5073%" y="1087.50"></text></g><g><title>tcache_dalloc_small (3 samples, 0.02%)</title><rect x="30.2635%" y="1061" width="0.0186%" height="15" fill="rgb(220,204,40)"/><text x="30.5135%" y="1071.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (2 samples, 0.01%)</title><rect x="30.2697%" y="1045" width="0.0124%" height="15" fill="rgb(211,85,2)"/><text x="30.5197%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (14 samples, 0.09%)</title><rect x="30.2076%" y="1221" width="0.0870%" height="15" fill="rgb(229,17,7)"/><text x="30.4576%" y="1231.50"></text></g><g><title>isfree (2 samples, 0.01%)</title><rect x="30.3132%" y="1157" width="0.0124%" height="15" fill="rgb(239,72,28)"/><text x="30.5632%" y="1167.50"></text></g><g><title>isdalloct (2 samples, 0.01%)</title><rect x="30.3132%" y="1141" width="0.0124%" height="15" fill="rgb(230,47,54)"/><text x="30.5632%" y="1151.50"></text></g><g><title>arena_sdalloc (2 samples, 0.01%)</title><rect x="30.3132%" y="1125" width="0.0124%" height="15" fill="rgb(214,50,8)"/><text x="30.5632%" y="1135.50"></text></g><g><title>_rjem_sdallocx (4 samples, 0.02%)</title><rect x="30.3070%" y="1173" width="0.0249%" height="15" fill="rgb(216,198,43)"/><text x="30.5570%" y="1183.50"></text></g><g><title>arena_dalloc_bin_slab (2 samples, 0.01%)</title><rect x="30.3505%" y="949" width="0.0124%" height="15" fill="rgb(234,20,35)"/><text x="30.6005%" y="959.50"></text></g><g><title>arena_slab_dalloc (2 samples, 0.01%)</title><rect x="30.3505%" y="933" width="0.0124%" height="15" fill="rgb(254,45,19)"/><text x="30.6005%" y="943.50"></text></g><g><title>_rjem_je_arena_extents_dirty_dalloc (2 samples, 0.01%)</title><rect x="30.3505%" y="917" width="0.0124%" height="15" fill="rgb(219,14,44)"/><text x="30.6005%" y="927.50"></text></g><g><title>extent_record (2 samples, 0.01%)</title><rect x="30.3505%" y="901" width="0.0124%" height="15" fill="rgb(217,220,26)"/><text x="30.6005%" y="911.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (5 samples, 0.03%)</title><rect x="30.3443%" y="981" width="0.0311%" height="15" fill="rgb(213,158,28)"/><text x="30.5943%" y="991.50"></text></g><g><title>arena_dalloc_bin_locked_impl (5 samples, 0.03%)</title><rect x="30.3443%" y="965" width="0.0311%" height="15" fill="rgb(252,51,52)"/><text x="30.5943%" y="975.50"></text></g><g><title>arena_slab_reg_dalloc (2 samples, 0.01%)</title><rect x="30.3629%" y="949" width="0.0124%" height="15" fill="rgb(246,89,16)"/><text x="30.6129%" y="959.50"></text></g><g><title>extent_arena_get (2 samples, 0.01%)</title><rect x="30.3753%" y="981" width="0.0124%" height="15" fill="rgb(216,158,49)"/><text x="30.6253%" y="991.50"></text></g><g><title>malloc_mutex_lock (2 samples, 0.01%)</title><rect x="30.3940%" y="981" width="0.0124%" height="15" fill="rgb(236,107,19)"/><text x="30.6440%" y="991.50"></text></g><g><title>malloc_mutex_trylock_final (2 samples, 0.01%)</title><rect x="30.3940%" y="965" width="0.0124%" height="15" fill="rgb(228,185,30)"/><text x="30.6440%" y="975.50"></text></g><g><title>__GI___pthread_mutex_trylock (2 samples, 0.01%)</title><rect x="30.3940%" y="949" width="0.0124%" height="15" fill="rgb(246,134,8)"/><text x="30.6440%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::ELt&gt; (18 samples, 0.11%)</title><rect x="30.3008%" y="1205" width="0.1119%" height="15" fill="rgb(214,143,50)"/><text x="30.5508%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::Par&gt;&gt; (18 samples, 0.11%)</title><rect x="30.3008%" y="1189" width="0.1119%" height="15" fill="rgb(228,75,8)"/><text x="30.5508%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (13 samples, 0.08%)</title><rect x="30.3318%" y="1173" width="0.0808%" height="15" fill="rgb(207,175,4)"/><text x="30.5818%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (13 samples, 0.08%)</title><rect x="30.3318%" y="1157" width="0.0808%" height="15" fill="rgb(205,108,24)"/><text x="30.5818%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (13 samples, 0.08%)</title><rect x="30.3318%" y="1141" width="0.0808%" height="15" fill="rgb(244,120,49)"/><text x="30.5818%" y="1151.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.08%)</title><rect x="30.3318%" y="1125" width="0.0808%" height="15" fill="rgb(223,47,38)"/><text x="30.5818%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.08%)</title><rect x="30.3318%" y="1109" width="0.0808%" height="15" fill="rgb(229,179,11)"/><text x="30.5818%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.08%)</title><rect x="30.3318%" y="1093" width="0.0808%" height="15" fill="rgb(231,122,1)"/><text x="30.5818%" y="1103.50"></text></g><g><title>_rjem_sdallocx (13 samples, 0.08%)</title><rect x="30.3318%" y="1077" width="0.0808%" height="15" fill="rgb(245,119,9)"/><text x="30.5818%" y="1087.50"></text></g><g><title>isfree (12 samples, 0.07%)</title><rect x="30.3381%" y="1061" width="0.0746%" height="15" fill="rgb(241,163,25)"/><text x="30.5881%" y="1071.50"></text></g><g><title>isdalloct (12 samples, 0.07%)</title><rect x="30.3381%" y="1045" width="0.0746%" height="15" fill="rgb(217,214,3)"/><text x="30.5881%" y="1055.50"></text></g><g><title>arena_sdalloc (12 samples, 0.07%)</title><rect x="30.3381%" y="1029" width="0.0746%" height="15" fill="rgb(240,86,28)"/><text x="30.5881%" y="1039.50"></text></g><g><title>tcache_dalloc_small (12 samples, 0.07%)</title><rect x="30.3381%" y="1013" width="0.0746%" height="15" fill="rgb(215,47,9)"/><text x="30.5881%" y="1023.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (11 samples, 0.07%)</title><rect x="30.3443%" y="997" width="0.0684%" height="15" fill="rgb(252,25,45)"/><text x="30.5943%" y="1007.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.01%)</title><rect x="30.4188%" y="1173" width="0.0124%" height="15" fill="rgb(251,164,9)"/><text x="30.6688%" y="1183.50"></text></g><g><title>isfree (2 samples, 0.01%)</title><rect x="30.4188%" y="1157" width="0.0124%" height="15" fill="rgb(233,194,0)"/><text x="30.6688%" y="1167.50"></text></g><g><title>isdalloct (2 samples, 0.01%)</title><rect x="30.4188%" y="1141" width="0.0124%" height="15" fill="rgb(249,111,24)"/><text x="30.6688%" y="1151.50"></text></g><g><title>arena_sdalloc (2 samples, 0.01%)</title><rect x="30.4188%" y="1125" width="0.0124%" height="15" fill="rgb(250,223,3)"/><text x="30.6688%" y="1135.50"></text></g><g><title>tcache_dalloc_small (2 samples, 0.01%)</title><rect x="30.4188%" y="1109" width="0.0124%" height="15" fill="rgb(236,178,37)"/><text x="30.6688%" y="1119.50"></text></g><g><title>arena_bin_lower_slab (3 samples, 0.02%)</title><rect x="30.4561%" y="949" width="0.0186%" height="15" fill="rgb(241,158,50)"/><text x="30.7061%" y="959.50"></text></g><g><title>extent_snad_comp (2 samples, 0.01%)</title><rect x="30.4623%" y="933" width="0.0124%" height="15" fill="rgb(213,121,41)"/><text x="30.7123%" y="943.50"></text></g><g><title>extent_sn_comp (2 samples, 0.01%)</title><rect x="30.4623%" y="917" width="0.0124%" height="15" fill="rgb(240,92,3)"/><text x="30.7123%" y="927.50"></text></g><g><title>bitmap_unset (2 samples, 0.01%)</title><rect x="30.4934%" y="933" width="0.0124%" height="15" fill="rgb(205,123,3)"/><text x="30.7434%" y="943.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (10 samples, 0.06%)</title><rect x="30.4499%" y="981" width="0.0621%" height="15" fill="rgb(205,97,47)"/><text x="30.6999%" y="991.50"></text></g><g><title>arena_dalloc_bin_locked_impl (9 samples, 0.06%)</title><rect x="30.4561%" y="965" width="0.0559%" height="15" fill="rgb(247,152,14)"/><text x="30.7061%" y="975.50"></text></g><g><title>arena_slab_reg_dalloc (4 samples, 0.02%)</title><rect x="30.4872%" y="949" width="0.0249%" height="15" fill="rgb(248,195,53)"/><text x="30.7372%" y="959.50"></text></g><g><title>extent_arena_get (2 samples, 0.01%)</title><rect x="30.5121%" y="981" width="0.0124%" height="15" fill="rgb(226,201,16)"/><text x="30.7621%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (18 samples, 0.11%)</title><rect x="30.4313%" y="1157" width="0.1119%" height="15" fill="rgb(205,98,0)"/><text x="30.6813%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (18 samples, 0.11%)</title><rect x="30.4313%" y="1141" width="0.1119%" height="15" fill="rgb(214,191,48)"/><text x="30.6813%" y="1151.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.11%)</title><rect x="30.4313%" y="1125" width="0.1119%" height="15" fill="rgb(237,112,39)"/><text x="30.6813%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (18 samples, 0.11%)</title><rect x="30.4313%" y="1109" width="0.1119%" height="15" fill="rgb(247,203,27)"/><text x="30.6813%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (18 samples, 0.11%)</title><rect x="30.4313%" y="1093" width="0.1119%" height="15" fill="rgb(235,124,28)"/><text x="30.6813%" y="1103.50"></text></g><g><title>_rjem_sdallocx (18 samples, 0.11%)</title><rect x="30.4313%" y="1077" width="0.1119%" height="15" fill="rgb(208,207,46)"/><text x="30.6813%" y="1087.50"></text></g><g><title>isfree (17 samples, 0.11%)</title><rect x="30.4375%" y="1061" width="0.1056%" height="15" fill="rgb(234,176,4)"/><text x="30.6875%" y="1071.50"></text></g><g><title>isdalloct (17 samples, 0.11%)</title><rect x="30.4375%" y="1045" width="0.1056%" height="15" fill="rgb(230,133,28)"/><text x="30.6875%" y="1055.50"></text></g><g><title>arena_sdalloc (17 samples, 0.11%)</title><rect x="30.4375%" y="1029" width="0.1056%" height="15" fill="rgb(211,137,40)"/><text x="30.6875%" y="1039.50"></text></g><g><title>tcache_dalloc_small (17 samples, 0.11%)</title><rect x="30.4375%" y="1013" width="0.1056%" height="15" fill="rgb(254,35,13)"/><text x="30.6875%" y="1023.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (17 samples, 0.11%)</title><rect x="30.4375%" y="997" width="0.1056%" height="15" fill="rgb(225,49,51)"/><text x="30.6875%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::expr::ExprInstance&gt;&gt; (55 samples, 0.34%)</title><rect x="30.2076%" y="1237" width="0.3418%" height="15" fill="rgb(251,10,15)"/><text x="30.4576%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::expr::ExprInstance&gt; (41 samples, 0.25%)</title><rect x="30.2946%" y="1221" width="0.2548%" height="15" fill="rgb(228,207,15)"/><text x="30.5446%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::EPlus&gt; (22 samples, 0.14%)</title><rect x="30.4126%" y="1205" width="0.1367%" height="15" fill="rgb(241,99,19)"/><text x="30.6626%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::Par&gt;&gt; (22 samples, 0.14%)</title><rect x="30.4126%" y="1189" width="0.1367%" height="15" fill="rgb(207,104,49)"/><text x="30.6626%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (19 samples, 0.12%)</title><rect x="30.4313%" y="1173" width="0.1181%" height="15" fill="rgb(234,99,18)"/><text x="30.6813%" y="1183.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (10 samples, 0.06%)</title><rect x="30.5680%" y="1221" width="0.0621%" height="15" fill="rgb(213,191,49)"/><text x="30.8180%" y="1231.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.06%)</title><rect x="30.5680%" y="1205" width="0.0621%" height="15" fill="rgb(210,226,19)"/><text x="30.8180%" y="1215.50"></text></g><g><title>[libc-2.31.so] (12 samples, 0.07%)</title><rect x="30.6363%" y="1205" width="0.0746%" height="15" fill="rgb(229,97,18)"/><text x="30.8863%" y="1215.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (26 samples, 0.16%)</title><rect x="30.6301%" y="1221" width="0.1616%" height="15" fill="rgb(211,167,15)"/><text x="30.8801%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (12 samples, 0.07%)</title><rect x="30.7171%" y="1205" width="0.0746%" height="15" fill="rgb(210,169,34)"/><text x="30.9671%" y="1215.50"></text></g><g><title>core::ptr::read (12 samples, 0.07%)</title><rect x="30.7171%" y="1189" width="0.0746%" height="15" fill="rgb(241,121,31)"/><text x="30.9671%" y="1199.50"></text></g><g><title>[libc-2.31.so] (12 samples, 0.07%)</title><rect x="30.7171%" y="1173" width="0.0746%" height="15" fill="rgb(232,40,11)"/><text x="30.9671%" y="1183.50"></text></g><g><title>[libc-2.31.so] (15 samples, 0.09%)</title><rect x="30.7917%" y="1221" width="0.0932%" height="15" fill="rgb(205,86,26)"/><text x="31.0417%" y="1231.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_nested_expressions (330 samples, 2.05%)</title><rect x="28.8404%" y="1269" width="2.0507%" height="15" fill="rgb(231,126,28)"/><text x="29.0904%" y="1279.50">&lt;..</text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (150 samples, 0.93%)</title><rect x="29.9590%" y="1253" width="0.9321%" height="15" fill="rgb(219,221,18)"/><text x="30.2090%" y="1263.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::eval_eplus::&lt;impl rho_runtime::interpreter::reduce::eval_expression::ExprInstanceEvaluator&lt;S&gt; for model::rho_types::EPlus&gt;::evaluate (55 samples, 0.34%)</title><rect x="30.5493%" y="1237" width="0.3418%" height="15" fill="rgb(211,40,0)"/><text x="30.7993%" y="1247.50"></text></g><g><title>arena_slab_alloc (3 samples, 0.02%)</title><rect x="30.8973%" y="869" width="0.0186%" height="15" fill="rgb(239,85,43)"/><text x="31.1473%" y="879.50"></text></g><g><title>_rjem_je_extents_alloc (3 samples, 0.02%)</title><rect x="30.8973%" y="853" width="0.0186%" height="15" fill="rgb(231,55,21)"/><text x="31.1473%" y="863.50"></text></g><g><title>extent_recycle (3 samples, 0.02%)</title><rect x="30.8973%" y="837" width="0.0186%" height="15" fill="rgb(225,184,43)"/><text x="31.1473%" y="847.50"></text></g><g><title>extent_recycle_extract (3 samples, 0.02%)</title><rect x="30.8973%" y="821" width="0.0186%" height="15" fill="rgb(251,158,41)"/><text x="31.1473%" y="831.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (5 samples, 0.03%)</title><rect x="30.8911%" y="1269" width="0.0311%" height="15" fill="rgb(234,159,37)"/><text x="31.1411%" y="1279.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (5 samples, 0.03%)</title><rect x="30.8911%" y="1253" width="0.0311%" height="15" fill="rgb(216,204,22)"/><text x="31.1411%" y="1263.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_var::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S,model::rho_types::Par&gt; for model::rho_types::Var&gt;::evaluate (5 samples, 0.03%)</title><rect x="30.8911%" y="1237" width="0.0311%" height="15" fill="rgb(214,17,3)"/><text x="31.1411%" y="1247.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (5 samples, 0.03%)</title><rect x="30.8911%" y="1221" width="0.0311%" height="15" fill="rgb(212,111,17)"/><text x="31.1411%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.03%)</title><rect x="30.8911%" y="1205" width="0.0311%" height="15" fill="rgb(221,157,24)"/><text x="31.1411%" y="1215.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.03%)</title><rect x="30.8911%" y="1189" width="0.0311%" height="15" fill="rgb(252,16,13)"/><text x="31.1411%" y="1199.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.03%)</title><rect x="30.8911%" y="1173" width="0.0311%" height="15" fill="rgb(221,62,2)"/><text x="31.1411%" y="1183.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.03%)</title><rect x="30.8911%" y="1157" width="0.0311%" height="15" fill="rgb(247,87,22)"/><text x="31.1411%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.03%)</title><rect x="30.8911%" y="1141" width="0.0311%" height="15" fill="rgb(215,73,9)"/><text x="31.1411%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.03%)</title><rect x="30.8911%" y="1125" width="0.0311%" height="15" fill="rgb(207,175,33)"/><text x="31.1411%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.03%)</title><rect x="30.8911%" y="1109" width="0.0311%" height="15" fill="rgb(243,129,54)"/><text x="31.1411%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.03%)</title><rect x="30.8911%" y="1093" width="0.0311%" height="15" fill="rgb(227,119,45)"/><text x="31.1411%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.03%)</title><rect x="30.8911%" y="1077" width="0.0311%" height="15" fill="rgb(205,109,36)"/><text x="31.1411%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.03%)</title><rect x="30.8911%" y="1061" width="0.0311%" height="15" fill="rgb(205,6,39)"/><text x="31.1411%" y="1071.50"></text></g><g><title>_rjem_mallocx (5 samples, 0.03%)</title><rect x="30.8911%" y="1045" width="0.0311%" height="15" fill="rgb(221,32,16)"/><text x="31.1411%" y="1055.50"></text></g><g><title>imalloc (5 samples, 0.03%)</title><rect x="30.8911%" y="1029" width="0.0311%" height="15" fill="rgb(228,144,50)"/><text x="31.1411%" y="1039.50"></text></g><g><title>imalloc_body (5 samples, 0.03%)</title><rect x="30.8911%" y="1013" width="0.0311%" height="15" fill="rgb(229,201,53)"/><text x="31.1411%" y="1023.50"></text></g><g><title>imalloc_no_sample (5 samples, 0.03%)</title><rect x="30.8911%" y="997" width="0.0311%" height="15" fill="rgb(249,153,27)"/><text x="31.1411%" y="1007.50"></text></g><g><title>iallocztm (5 samples, 0.03%)</title><rect x="30.8911%" y="981" width="0.0311%" height="15" fill="rgb(227,106,25)"/><text x="31.1411%" y="991.50"></text></g><g><title>arena_malloc (5 samples, 0.03%)</title><rect x="30.8911%" y="965" width="0.0311%" height="15" fill="rgb(230,65,29)"/><text x="31.1411%" y="975.50"></text></g><g><title>tcache_alloc_small (5 samples, 0.03%)</title><rect x="30.8911%" y="949" width="0.0311%" height="15" fill="rgb(221,57,46)"/><text x="31.1411%" y="959.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (5 samples, 0.03%)</title><rect x="30.8911%" y="933" width="0.0311%" height="15" fill="rgb(229,161,17)"/><text x="31.1411%" y="943.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (5 samples, 0.03%)</title><rect x="30.8911%" y="917" width="0.0311%" height="15" fill="rgb(222,213,11)"/><text x="31.1411%" y="927.50"></text></g><g><title>arena_bin_malloc_hard (5 samples, 0.03%)</title><rect x="30.8911%" y="901" width="0.0311%" height="15" fill="rgb(235,35,13)"/><text x="31.1411%" y="911.50"></text></g><g><title>arena_bin_nonfull_slab_get (5 samples, 0.03%)</title><rect x="30.8911%" y="885" width="0.0311%" height="15" fill="rgb(233,158,34)"/><text x="31.1411%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="30.9284%" y="629" width="0.0186%" height="15" fill="rgb(215,151,48)"/><text x="31.1784%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="31.0154%" y="533" width="0.0249%" height="15" fill="rgb(229,84,14)"/><text x="31.2654%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.02%)</title><rect x="31.0154%" y="517" width="0.0249%" height="15" fill="rgb(229,68,14)"/><text x="31.2654%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (2 samples, 0.01%)</title><rect x="31.0278%" y="501" width="0.0124%" height="15" fill="rgb(243,106,26)"/><text x="31.2778%" y="511.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (7 samples, 0.04%)</title><rect x="31.0154%" y="549" width="0.0435%" height="15" fill="rgb(206,45,38)"/><text x="31.2654%" y="559.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="31.0403%" y="533" width="0.0186%" height="15" fill="rgb(226,6,15)"/><text x="31.2903%" y="543.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (13 samples, 0.08%)</title><rect x="30.9843%" y="597" width="0.0808%" height="15" fill="rgb(232,22,54)"/><text x="31.2343%" y="607.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (13 samples, 0.08%)</title><rect x="30.9843%" y="581" width="0.0808%" height="15" fill="rgb(229,222,32)"/><text x="31.2343%" y="591.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 0.07%)</title><rect x="30.9906%" y="565" width="0.0746%" height="15" fill="rgb(228,62,29)"/><text x="31.2406%" y="575.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (19 samples, 0.12%)</title><rect x="30.9657%" y="613" width="0.1181%" height="15" fill="rgb(251,103,34)"/><text x="31.2157%" y="623.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.02%)</title><rect x="31.0651%" y="597" width="0.0186%" height="15" fill="rgb(233,12,30)"/><text x="31.3151%" y="607.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (23 samples, 0.14%)</title><rect x="30.9471%" y="629" width="0.1429%" height="15" fill="rgb(238,52,0)"/><text x="31.1971%" y="639.50"></text></g><g><title>imalloc_no_sample (4 samples, 0.02%)</title><rect x="31.1335%" y="485" width="0.0249%" height="15" fill="rgb(223,98,5)"/><text x="31.3835%" y="495.50"></text></g><g><title>iallocztm (2 samples, 0.01%)</title><rect x="31.1459%" y="469" width="0.0124%" height="15" fill="rgb(228,75,37)"/><text x="31.3959%" y="479.50"></text></g><g><title>arena_malloc (2 samples, 0.01%)</title><rect x="31.1459%" y="453" width="0.0124%" height="15" fill="rgb(205,115,49)"/><text x="31.3959%" y="463.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.01%)</title><rect x="31.1459%" y="437" width="0.0124%" height="15" fill="rgb(250,154,43)"/><text x="31.3959%" y="447.50"></text></g><g><title>imalloc_body (5 samples, 0.03%)</title><rect x="31.1335%" y="501" width="0.0311%" height="15" fill="rgb(226,43,29)"/><text x="31.3835%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13 samples, 0.08%)</title><rect x="31.0900%" y="629" width="0.0808%" height="15" fill="rgb(249,228,39)"/><text x="31.3400%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.07%)</title><rect x="31.1024%" y="613" width="0.0684%" height="15" fill="rgb(216,79,43)"/><text x="31.3524%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.07%)</title><rect x="31.1024%" y="597" width="0.0684%" height="15" fill="rgb(228,95,12)"/><text x="31.3524%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.06%)</title><rect x="31.1148%" y="581" width="0.0559%" height="15" fill="rgb(249,221,15)"/><text x="31.3648%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.06%)</title><rect x="31.1148%" y="565" width="0.0559%" height="15" fill="rgb(233,34,13)"/><text x="31.3648%" y="575.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.06%)</title><rect x="31.1148%" y="549" width="0.0559%" height="15" fill="rgb(214,103,39)"/><text x="31.3648%" y="559.50"></text></g><g><title>_rjem_mallocx (7 samples, 0.04%)</title><rect x="31.1273%" y="533" width="0.0435%" height="15" fill="rgb(251,126,39)"/><text x="31.3773%" y="543.50"></text></g><g><title>imalloc (6 samples, 0.04%)</title><rect x="31.1335%" y="517" width="0.0373%" height="15" fill="rgb(214,216,36)"/><text x="31.3835%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (50 samples, 0.31%)</title><rect x="30.9222%" y="1125" width="0.3107%" height="15" fill="rgb(220,221,8)"/><text x="31.1722%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (50 samples, 0.31%)</title><rect x="30.9222%" y="1109" width="0.3107%" height="15" fill="rgb(240,216,3)"/><text x="31.1722%" y="1119.50"></text></g><g><title>alloc::slice::hack::to_vec (50 samples, 0.31%)</title><rect x="30.9222%" y="1093" width="0.3107%" height="15" fill="rgb(232,218,17)"/><text x="31.1722%" y="1103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (50 samples, 0.31%)</title><rect x="30.9222%" y="1077" width="0.3107%" height="15" fill="rgb(229,163,45)"/><text x="31.1722%" y="1087.50"></text></g><g><title>&lt;model::rho_types::MatchCase as core::clone::Clone&gt;::clone (50 samples, 0.31%)</title><rect x="30.9222%" y="1061" width="0.3107%" height="15" fill="rgb(231,110,42)"/><text x="31.1722%" y="1071.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (50 samples, 0.31%)</title><rect x="30.9222%" y="1045" width="0.3107%" height="15" fill="rgb(208,170,48)"/><text x="31.1722%" y="1055.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (50 samples, 0.31%)</title><rect x="30.9222%" y="1029" width="0.3107%" height="15" fill="rgb(239,116,25)"/><text x="31.1722%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (50 samples, 0.31%)</title><rect x="30.9222%" y="1013" width="0.3107%" height="15" fill="rgb(219,200,50)"/><text x="31.1722%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (50 samples, 0.31%)</title><rect x="30.9222%" y="997" width="0.3107%" height="15" fill="rgb(245,200,0)"/><text x="31.1722%" y="1007.50"></text></g><g><title>alloc::slice::hack::to_vec (50 samples, 0.31%)</title><rect x="30.9222%" y="981" width="0.3107%" height="15" fill="rgb(245,119,33)"/><text x="31.1722%" y="991.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (50 samples, 0.31%)</title><rect x="30.9222%" y="965" width="0.3107%" height="15" fill="rgb(231,125,12)"/><text x="31.1722%" y="975.50"></text></g><g><title>&lt;model::rho_types::Send as core::clone::Clone&gt;::clone (50 samples, 0.31%)</title><rect x="30.9222%" y="949" width="0.3107%" height="15" fill="rgb(216,96,41)"/><text x="31.1722%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (50 samples, 0.31%)</title><rect x="30.9222%" y="933" width="0.3107%" height="15" fill="rgb(248,43,45)"/><text x="31.1722%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (50 samples, 0.31%)</title><rect x="30.9222%" y="917" width="0.3107%" height="15" fill="rgb(217,222,7)"/><text x="31.1722%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (50 samples, 0.31%)</title><rect x="30.9222%" y="901" width="0.3107%" height="15" fill="rgb(233,28,6)"/><text x="31.1722%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (50 samples, 0.31%)</title><rect x="30.9222%" y="885" width="0.3107%" height="15" fill="rgb(231,218,15)"/><text x="31.1722%" y="895.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (50 samples, 0.31%)</title><rect x="30.9222%" y="869" width="0.3107%" height="15" fill="rgb(226,171,48)"/><text x="31.1722%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (50 samples, 0.31%)</title><rect x="30.9222%" y="853" width="0.3107%" height="15" fill="rgb(235,201,9)"/><text x="31.1722%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (50 samples, 0.31%)</title><rect x="30.9222%" y="837" width="0.3107%" height="15" fill="rgb(217,80,15)"/><text x="31.1722%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (50 samples, 0.31%)</title><rect x="30.9222%" y="821" width="0.3107%" height="15" fill="rgb(219,152,8)"/><text x="31.1722%" y="831.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (50 samples, 0.31%)</title><rect x="30.9222%" y="805" width="0.3107%" height="15" fill="rgb(243,107,38)"/><text x="31.1722%" y="815.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (50 samples, 0.31%)</title><rect x="30.9222%" y="789" width="0.3107%" height="15" fill="rgb(231,17,5)"/><text x="31.1722%" y="799.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (50 samples, 0.31%)</title><rect x="30.9222%" y="773" width="0.3107%" height="15" fill="rgb(209,25,54)"/><text x="31.1722%" y="783.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (50 samples, 0.31%)</title><rect x="30.9222%" y="757" width="0.3107%" height="15" fill="rgb(219,0,2)"/><text x="31.1722%" y="767.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (50 samples, 0.31%)</title><rect x="30.9222%" y="741" width="0.3107%" height="15" fill="rgb(246,9,5)"/><text x="31.1722%" y="751.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (50 samples, 0.31%)</title><rect x="30.9222%" y="725" width="0.3107%" height="15" fill="rgb(226,159,4)"/><text x="31.1722%" y="735.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (50 samples, 0.31%)</title><rect x="30.9222%" y="709" width="0.3107%" height="15" fill="rgb(219,175,34)"/><text x="31.1722%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (50 samples, 0.31%)</title><rect x="30.9222%" y="693" width="0.3107%" height="15" fill="rgb(236,10,46)"/><text x="31.1722%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (50 samples, 0.31%)</title><rect x="30.9222%" y="677" width="0.3107%" height="15" fill="rgb(240,211,16)"/><text x="31.1722%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (50 samples, 0.31%)</title><rect x="30.9222%" y="661" width="0.3107%" height="15" fill="rgb(205,3,43)"/><text x="31.1722%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (50 samples, 0.31%)</title><rect x="30.9222%" y="645" width="0.3107%" height="15" fill="rgb(245,7,22)"/><text x="31.1722%" y="655.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (10 samples, 0.06%)</title><rect x="31.1708%" y="629" width="0.0621%" height="15" fill="rgb(239,132,32)"/><text x="31.4208%" y="639.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.03%)</title><rect x="31.2018%" y="613" width="0.0311%" height="15" fill="rgb(228,202,34)"/><text x="31.4518%" y="623.50"></text></g><g><title>&lt;rho_runtime::storage::TaggedContinuation as core::clone::Clone&gt;::clone (51 samples, 0.32%)</title><rect x="30.9222%" y="1269" width="0.3169%" height="15" fill="rgb(254,200,22)"/><text x="31.1722%" y="1279.50"></text></g><g><title>&lt;model::rho_types::ParWithRandom as core::clone::Clone&gt;::clone (51 samples, 0.32%)</title><rect x="30.9222%" y="1253" width="0.3169%" height="15" fill="rgb(219,10,39)"/><text x="31.1722%" y="1263.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (51 samples, 0.32%)</title><rect x="30.9222%" y="1237" width="0.3169%" height="15" fill="rgb(226,210,39)"/><text x="31.1722%" y="1247.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (51 samples, 0.32%)</title><rect x="30.9222%" y="1221" width="0.3169%" height="15" fill="rgb(208,219,16)"/><text x="31.1722%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (51 samples, 0.32%)</title><rect x="30.9222%" y="1205" width="0.3169%" height="15" fill="rgb(216,158,51)"/><text x="31.1722%" y="1215.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (51 samples, 0.32%)</title><rect x="30.9222%" y="1189" width="0.3169%" height="15" fill="rgb(233,14,44)"/><text x="31.1722%" y="1199.50"></text></g><g><title>alloc::slice::hack::to_vec (51 samples, 0.32%)</title><rect x="30.9222%" y="1173" width="0.3169%" height="15" fill="rgb(237,97,39)"/><text x="31.1722%" y="1183.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (51 samples, 0.32%)</title><rect x="30.9222%" y="1157" width="0.3169%" height="15" fill="rgb(218,198,43)"/><text x="31.1722%" y="1167.50"></text></g><g><title>&lt;model::rho_types::Match as core::clone::Clone&gt;::clone (51 samples, 0.32%)</title><rect x="30.9222%" y="1141" width="0.3169%" height="15" fill="rgb(231,104,20)"/><text x="31.1722%" y="1151.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2 samples, 0.01%)</title><rect x="31.2702%" y="1253" width="0.0124%" height="15" fill="rgb(254,36,13)"/><text x="31.5202%" y="1263.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (2 samples, 0.01%)</title><rect x="31.2702%" y="1237" width="0.0124%" height="15" fill="rgb(248,14,50)"/><text x="31.5202%" y="1247.50"></text></g><g><title>[libc-2.31.so] (178 samples, 1.11%)</title><rect x="31.2826%" y="1253" width="1.1061%" height="15" fill="rgb(217,107,29)"/><text x="31.5326%" y="1263.50"></text></g><g><title>[libc-2.31.so] (39 samples, 0.24%)</title><rect x="32.3888%" y="1205" width="0.2424%" height="15" fill="rgb(251,169,33)"/><text x="32.6388%" y="1215.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (277 samples, 1.72%)</title><rect x="32.3888%" y="1253" width="1.7214%" height="15" fill="rgb(217,108,32)"/><text x="32.6388%" y="1263.50"></text></g><g><title>core::mem::take (277 samples, 1.72%)</title><rect x="32.3888%" y="1237" width="1.7214%" height="15" fill="rgb(219,66,42)"/><text x="32.6388%" y="1247.50"></text></g><g><title>core::mem::replace (277 samples, 1.72%)</title><rect x="32.3888%" y="1221" width="1.7214%" height="15" fill="rgb(206,180,7)"/><text x="32.6388%" y="1231.50"></text></g><g><title>core::mem::swap (238 samples, 1.48%)</title><rect x="32.6311%" y="1205" width="1.4790%" height="15" fill="rgb(208,226,31)"/><text x="32.8811%" y="1215.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (238 samples, 1.48%)</title><rect x="32.6311%" y="1189" width="1.4790%" height="15" fill="rgb(218,26,49)"/><text x="32.8811%" y="1199.50"></text></g><g><title>core::ptr::swap_nonoverlapping (238 samples, 1.48%)</title><rect x="32.6311%" y="1173" width="1.4790%" height="15" fill="rgb(233,197,48)"/><text x="32.8811%" y="1183.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (238 samples, 1.48%)</title><rect x="32.6311%" y="1157" width="1.4790%" height="15" fill="rgb(252,181,51)"/><text x="32.8811%" y="1167.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (221 samples, 1.37%)</title><rect x="32.7368%" y="1141" width="1.3734%" height="15" fill="rgb(253,90,19)"/><text x="32.9868%" y="1151.50"></text></g><g><title>core::intrinsics::copy (4 samples, 0.02%)</title><rect x="34.1101%" y="1221" width="0.0249%" height="15" fill="rgb(215,171,30)"/><text x="34.3601%" y="1231.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.02%)</title><rect x="34.1101%" y="1205" width="0.0249%" height="15" fill="rgb(214,222,9)"/><text x="34.3601%" y="1215.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::reverse (17 samples, 0.11%)</title><rect x="34.1101%" y="1253" width="0.1056%" height="15" fill="rgb(223,3,22)"/><text x="34.3601%" y="1263.50"></text></g><g><title>core::ptr::swap (17 samples, 0.11%)</title><rect x="34.1101%" y="1237" width="0.1056%" height="15" fill="rgb(225,196,46)"/><text x="34.3601%" y="1247.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.08%)</title><rect x="34.1350%" y="1221" width="0.0808%" height="15" fill="rgb(209,110,37)"/><text x="34.3850%" y="1231.50"></text></g><g><title>[libc-2.31.so] (13 samples, 0.08%)</title><rect x="34.1350%" y="1205" width="0.0808%" height="15" fill="rgb(249,89,12)"/><text x="34.3850%" y="1215.50"></text></g><g><title>&lt;rho_runtime::storage::runner::JoinGroup as core::future::future::Future&gt;::poll (523 samples, 3.25%)</title><rect x="31.2391%" y="1269" width="3.2501%" height="15" fill="rgb(226,27,33)"/><text x="31.4891%" y="1279.50">&lt;rh..</text></g><g><title>smallvec::SmallVec&lt;A&gt;::push (43 samples, 0.27%)</title><rect x="34.2220%" y="1253" width="0.2672%" height="15" fill="rgb(213,82,22)"/><text x="34.4720%" y="1263.50"></text></g><g><title>core::ptr::write (38 samples, 0.24%)</title><rect x="34.2530%" y="1237" width="0.2361%" height="15" fill="rgb(248,140,0)"/><text x="34.5030%" y="1247.50"></text></g><g><title>[libc-2.31.so] (37 samples, 0.23%)</title><rect x="34.2593%" y="1221" width="0.2299%" height="15" fill="rgb(228,106,3)"/><text x="34.5093%" y="1231.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (2 samples, 0.01%)</title><rect x="34.4954%" y="1269" width="0.0124%" height="15" fill="rgb(209,23,37)"/><text x="34.7454%" y="1279.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="34.5078%" y="1269" width="0.0186%" height="15" fill="rgb(241,93,50)"/><text x="34.7578%" y="1279.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.01%)</title><rect x="34.5265%" y="1269" width="0.0124%" height="15" fill="rgb(253,46,43)"/><text x="34.7765%" y="1279.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (2 samples, 0.01%)</title><rect x="34.5265%" y="1253" width="0.0124%" height="15" fill="rgb(226,206,43)"/><text x="34.7765%" y="1263.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (2 samples, 0.01%)</title><rect x="34.5265%" y="1237" width="0.0124%" height="15" fill="rgb(217,54,7)"/><text x="34.7765%" y="1247.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2 samples, 0.01%)</title><rect x="34.5265%" y="1221" width="0.0124%" height="15" fill="rgb(223,5,52)"/><text x="34.7765%" y="1231.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (2 samples, 0.01%)</title><rect x="34.5265%" y="1205" width="0.0124%" height="15" fill="rgb(206,52,46)"/><text x="34.7765%" y="1215.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="34.5265%" y="1189" width="0.0124%" height="15" fill="rgb(253,136,11)"/><text x="34.7765%" y="1199.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (2 samples, 0.01%)</title><rect x="34.5265%" y="1173" width="0.0124%" height="15" fill="rgb(208,106,33)"/><text x="34.7765%" y="1183.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (2 samples, 0.01%)</title><rect x="34.5265%" y="1157" width="0.0124%" height="15" fill="rgb(206,54,4)"/><text x="34.7765%" y="1167.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (2 samples, 0.01%)</title><rect x="34.5265%" y="1141" width="0.0124%" height="15" fill="rgb(213,3,15)"/><text x="34.7765%" y="1151.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (2 samples, 0.01%)</title><rect x="34.5265%" y="1125" width="0.0124%" height="15" fill="rgb(252,211,39)"/><text x="34.7765%" y="1135.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (2 samples, 0.01%)</title><rect x="34.5265%" y="1109" width="0.0124%" height="15" fill="rgb(223,6,36)"/><text x="34.7765%" y="1119.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (2 samples, 0.01%)</title><rect x="34.5265%" y="1093" width="0.0124%" height="15" fill="rgb(252,169,45)"/><text x="34.7765%" y="1103.50"></text></g><g><title>tokio::coop::budget (2 samples, 0.01%)</title><rect x="34.5265%" y="1077" width="0.0124%" height="15" fill="rgb(212,48,26)"/><text x="34.7765%" y="1087.50"></text></g><g><title>tokio::coop::with_budget (2 samples, 0.01%)</title><rect x="34.5265%" y="1061" width="0.0124%" height="15" fill="rgb(251,102,48)"/><text x="34.7765%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.01%)</title><rect x="34.5265%" y="1045" width="0.0124%" height="15" fill="rgb(243,208,16)"/><text x="34.7765%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.01%)</title><rect x="34.5265%" y="1029" width="0.0124%" height="15" fill="rgb(219,96,24)"/><text x="34.7765%" y="1039.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (2 samples, 0.01%)</title><rect x="34.5265%" y="1013" width="0.0124%" height="15" fill="rgb(219,33,29)"/><text x="34.7765%" y="1023.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (2 samples, 0.01%)</title><rect x="34.5265%" y="997" width="0.0124%" height="15" fill="rgb(223,176,5)"/><text x="34.7765%" y="1007.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (2 samples, 0.01%)</title><rect x="34.5265%" y="981" width="0.0124%" height="15" fill="rgb(228,140,14)"/><text x="34.7765%" y="991.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (2 samples, 0.01%)</title><rect x="34.5265%" y="965" width="0.0124%" height="15" fill="rgb(217,179,31)"/><text x="34.7765%" y="975.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2 samples, 0.01%)</title><rect x="34.5265%" y="949" width="0.0124%" height="15" fill="rgb(230,9,30)"/><text x="34.7765%" y="959.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (2 samples, 0.01%)</title><rect x="34.5265%" y="933" width="0.0124%" height="15" fill="rgb(230,136,20)"/><text x="34.7765%" y="943.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (2 samples, 0.01%)</title><rect x="34.5265%" y="917" width="0.0124%" height="15" fill="rgb(215,210,22)"/><text x="34.7765%" y="927.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.01%)</title><rect x="34.5265%" y="901" width="0.0124%" height="15" fill="rgb(218,43,5)"/><text x="34.7765%" y="911.50"></text></g><g><title>std::panicking::try (2 samples, 0.01%)</title><rect x="34.5265%" y="885" width="0.0124%" height="15" fill="rgb(216,11,5)"/><text x="34.7765%" y="895.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.01%)</title><rect x="34.5265%" y="869" width="0.0124%" height="15" fill="rgb(209,82,29)"/><text x="34.7765%" y="879.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.01%)</title><rect x="34.5265%" y="853" width="0.0124%" height="15" fill="rgb(244,115,12)"/><text x="34.7765%" y="863.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (2 samples, 0.01%)</title><rect x="34.5265%" y="837" width="0.0124%" height="15" fill="rgb(222,82,18)"/><text x="34.7765%" y="847.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (2 samples, 0.01%)</title><rect x="34.5265%" y="821" width="0.0124%" height="15" fill="rgb(249,227,8)"/><text x="34.7765%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="34.5265%" y="805" width="0.0124%" height="15" fill="rgb(253,141,45)"/><text x="34.7765%" y="815.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation::{{closure}} (2 samples, 0.01%)</title><rect x="34.5265%" y="789" width="0.0124%" height="15" fill="rgb(234,184,4)"/><text x="34.7765%" y="799.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_send::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Send&gt;::evaluate (2 samples, 0.01%)</title><rect x="34.5265%" y="773" width="0.0124%" height="15" fill="rgb(218,194,23)"/><text x="34.7765%" y="783.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute (2 samples, 0.01%)</title><rect x="34.5265%" y="757" width="0.0124%" height="15" fill="rgb(235,66,41)"/><text x="34.7765%" y="767.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute_no_sort (2 samples, 0.01%)</title><rect x="34.5265%" y="741" width="0.0124%" height="15" fill="rgb(245,217,1)"/><text x="34.7765%" y="751.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::substitute_expressions_in_par (2 samples, 0.01%)</title><rect x="34.5265%" y="725" width="0.0124%" height="15" fill="rgb(229,91,1)"/><text x="34.7765%" y="735.50"></text></g><g><title>model::rho_types::Par::append_expr (2 samples, 0.01%)</title><rect x="34.5265%" y="709" width="0.0124%" height="15" fill="rgb(207,101,30)"/><text x="34.7765%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.02%)</title><rect x="34.7191%" y="1237" width="0.0186%" height="15" fill="rgb(223,82,49)"/><text x="34.9691%" y="1247.50"></text></g><g><title>__rust_probestack (3 samples, 0.02%)</title><rect x="34.7191%" y="1221" width="0.0186%" height="15" fill="rgb(218,167,17)"/><text x="34.9691%" y="1231.50"></text></g><g><title>[libc-2.31.so] (59 samples, 0.37%)</title><rect x="34.7875%" y="1189" width="0.3666%" height="15" fill="rgb(208,103,14)"/><text x="35.0375%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (8 samples, 0.05%)</title><rect x="35.1603%" y="1189" width="0.0497%" height="15" fill="rgb(238,20,8)"/><text x="35.4103%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_swap (7 samples, 0.04%)</title><rect x="35.1665%" y="1173" width="0.0435%" height="15" fill="rgb(218,80,54)"/><text x="35.4165%" y="1183.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (12 samples, 0.07%)</title><rect x="35.2163%" y="1173" width="0.0746%" height="15" fill="rgb(240,144,17)"/><text x="35.4663%" y="1183.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (12 samples, 0.07%)</title><rect x="35.2163%" y="1157" width="0.0746%" height="15" fill="rgb(245,27,50)"/><text x="35.4663%" y="1167.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (12 samples, 0.07%)</title><rect x="35.2163%" y="1141" width="0.0746%" height="15" fill="rgb(251,51,7)"/><text x="35.4663%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (12 samples, 0.07%)</title><rect x="35.2163%" y="1125" width="0.0746%" height="15" fill="rgb(245,217,29)"/><text x="35.4663%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_add (12 samples, 0.07%)</title><rect x="35.2163%" y="1109" width="0.0746%" height="15" fill="rgb(221,176,29)"/><text x="35.4663%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (10 samples, 0.06%)</title><rect x="35.2970%" y="1173" width="0.0621%" height="15" fill="rgb(212,180,24)"/><text x="35.5470%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (10 samples, 0.06%)</title><rect x="35.2970%" y="1157" width="0.0621%" height="15" fill="rgb(254,24,2)"/><text x="35.5470%" y="1167.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (10 samples, 0.06%)</title><rect x="35.2970%" y="1141" width="0.0621%" height="15" fill="rgb(230,100,2)"/><text x="35.5470%" y="1151.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (10 samples, 0.06%)</title><rect x="35.2970%" y="1125" width="0.0621%" height="15" fill="rgb(219,142,25)"/><text x="35.5470%" y="1135.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (10 samples, 0.06%)</title><rect x="35.2970%" y="1109" width="0.0621%" height="15" fill="rgb(240,73,43)"/><text x="35.5470%" y="1119.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (9 samples, 0.06%)</title><rect x="35.3033%" y="1093" width="0.0559%" height="15" fill="rgb(214,114,15)"/><text x="35.5533%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (9 samples, 0.06%)</title><rect x="35.3033%" y="1077" width="0.0559%" height="15" fill="rgb(207,130,4)"/><text x="35.5533%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_sub (9 samples, 0.06%)</title><rect x="35.3033%" y="1061" width="0.0559%" height="15" fill="rgb(221,25,40)"/><text x="35.5533%" y="1071.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::register (40 samples, 0.25%)</title><rect x="35.2100%" y="1189" width="0.2486%" height="15" fill="rgb(241,184,7)"/><text x="35.4600%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (16 samples, 0.10%)</title><rect x="35.3592%" y="1173" width="0.0994%" height="15" fill="rgb(235,159,4)"/><text x="35.6092%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (16 samples, 0.10%)</title><rect x="35.3592%" y="1157" width="0.0994%" height="15" fill="rgb(214,87,48)"/><text x="35.6092%" y="1167.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::len (2 samples, 0.01%)</title><rect x="35.4586%" y="1189" width="0.0124%" height="15" fill="rgb(246,198,24)"/><text x="35.7086%" y="1199.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::atomic_load_head_and_len_all (2 samples, 0.01%)</title><rect x="35.4586%" y="1173" width="0.0124%" height="15" fill="rgb(209,66,40)"/><text x="35.7086%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (2 samples, 0.01%)</title><rect x="35.4959%" y="1173" width="0.0124%" height="15" fill="rgb(233,147,39)"/><text x="35.7459%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.01%)</title><rect x="35.4959%" y="1157" width="0.0124%" height="15" fill="rgb(231,145,52)"/><text x="35.7459%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::store (3 samples, 0.02%)</title><rect x="35.5083%" y="1157" width="0.0186%" height="15" fill="rgb(206,20,26)"/><text x="35.7583%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_store (3 samples, 0.02%)</title><rect x="35.5083%" y="1141" width="0.0186%" height="15" fill="rgb(238,220,4)"/><text x="35.7583%" y="1151.50"></text></g><g><title>futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;Fut&gt;::dequeue (10 samples, 0.06%)</title><rect x="35.4773%" y="1189" width="0.0621%" height="15" fill="rgb(252,195,42)"/><text x="35.7273%" y="1199.50"></text></g><g><title>futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;Fut&gt;::enqueue (5 samples, 0.03%)</title><rect x="35.5083%" y="1173" width="0.0311%" height="15" fill="rgb(209,10,6)"/><text x="35.7583%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::swap (2 samples, 0.01%)</title><rect x="35.5270%" y="1157" width="0.0124%" height="15" fill="rgb(229,3,52)"/><text x="35.7770%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_swap (2 samples, 0.01%)</title><rect x="35.5270%" y="1141" width="0.0124%" height="15" fill="rgb(253,49,37)"/><text x="35.7770%" y="1151.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (128 samples, 0.80%)</title><rect x="34.7502%" y="1205" width="0.7954%" height="15" fill="rgb(240,103,49)"/><text x="35.0002%" y="1215.50"></text></g><g><title>&lt;futures_util::stream::stream::next::Next&lt;St&gt; as core::future::future::Future&gt;::poll (132 samples, 0.82%)</title><rect x="34.7378%" y="1237" width="0.8203%" height="15" fill="rgb(250,182,30)"/><text x="34.9878%" y="1247.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (131 samples, 0.81%)</title><rect x="34.7440%" y="1221" width="0.8141%" height="15" fill="rgb(248,8,30)"/><text x="34.9940%" y="1231.50"></text></g><g><title>__rust_probestack (2 samples, 0.01%)</title><rect x="35.5456%" y="1205" width="0.0124%" height="15" fill="rgb(237,120,30)"/><text x="35.7956%" y="1215.50"></text></g><g><title>[libc-2.31.so] (298 samples, 1.85%)</title><rect x="35.5580%" y="1237" width="1.8519%" height="15" fill="rgb(221,146,34)"/><text x="35.8080%" y="1247.50">[..</text></g><g><title>tokio::util::rand::thread_rng_n::THREAD_RNG::__getit (3 samples, 0.02%)</title><rect x="37.4161%" y="1189" width="0.0186%" height="15" fill="rgb(242,55,13)"/><text x="37.6661%" y="1199.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (3 samples, 0.02%)</title><rect x="37.4161%" y="1173" width="0.0186%" height="15" fill="rgb(242,112,31)"/><text x="37.6661%" y="1183.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (2 samples, 0.01%)</title><rect x="37.4223%" y="1157" width="0.0124%" height="15" fill="rgb(249,192,27)"/><text x="37.6723%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.01%)</title><rect x="37.4223%" y="1141" width="0.0124%" height="15" fill="rgb(208,204,44)"/><text x="37.6723%" y="1151.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (467 samples, 2.90%)</title><rect x="34.5451%" y="1269" width="2.9021%" height="15" fill="rgb(208,93,54)"/><text x="34.7951%" y="1279.50">&lt;t..</text></g><g><title>rho_runtime::storage::runner::Runner::run::{{closure}}::{{closure}} (463 samples, 2.88%)</title><rect x="34.5700%" y="1253" width="2.8772%" height="15" fill="rgb(242,1,31)"/><text x="34.8200%" y="1263.50">rh..</text></g><g><title>tokio::util::rand::thread_rng_n (5 samples, 0.03%)</title><rect x="37.4161%" y="1237" width="0.0311%" height="15" fill="rgb(241,83,25)"/><text x="37.6661%" y="1247.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.03%)</title><rect x="37.4161%" y="1221" width="0.0311%" height="15" fill="rgb(205,169,50)"/><text x="37.6661%" y="1231.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.03%)</title><rect x="37.4161%" y="1205" width="0.0311%" height="15" fill="rgb(239,186,37)"/><text x="37.6661%" y="1215.50"></text></g><g><title>tokio::util::rand::thread_rng_n::{{closure}} (2 samples, 0.01%)</title><rect x="37.4348%" y="1189" width="0.0124%" height="15" fill="rgb(205,221,10)"/><text x="37.6848%" y="1199.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand_n (2 samples, 0.01%)</title><rect x="37.4348%" y="1173" width="0.0124%" height="15" fill="rgb(218,196,15)"/><text x="37.6848%" y="1183.50"></text></g><g><title>[libc-2.31.so] (72 samples, 0.45%)</title><rect x="37.4534%" y="1253" width="0.4474%" height="15" fill="rgb(218,196,35)"/><text x="37.7034%" y="1263.50"></text></g><g><title>__rg_dealloc (2 samples, 0.01%)</title><rect x="37.9132%" y="1205" width="0.0124%" height="15" fill="rgb(233,63,24)"/><text x="38.1632%" y="1215.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (2 samples, 0.01%)</title><rect x="37.9132%" y="1189" width="0.0124%" height="15" fill="rgb(225,8,4)"/><text x="38.1632%" y="1199.50"></text></g><g><title>arena_bin_slabs_nonfull_insert (2 samples, 0.01%)</title><rect x="38.0375%" y="1061" width="0.0124%" height="15" fill="rgb(234,105,35)"/><text x="38.2875%" y="1071.50"></text></g><g><title>extent_ad_comp (5 samples, 0.03%)</title><rect x="38.0500%" y="1045" width="0.0311%" height="15" fill="rgb(236,21,32)"/><text x="38.3000%" y="1055.50"></text></g><g><title>arena_bin_lower_slab (13 samples, 0.08%)</title><rect x="38.0251%" y="1077" width="0.0808%" height="15" fill="rgb(228,109,6)"/><text x="38.2751%" y="1087.50"></text></g><g><title>extent_snad_comp (9 samples, 0.06%)</title><rect x="38.0500%" y="1061" width="0.0559%" height="15" fill="rgb(229,215,31)"/><text x="38.3000%" y="1071.50"></text></g><g><title>extent_sn_comp (4 samples, 0.02%)</title><rect x="38.0810%" y="1045" width="0.0249%" height="15" fill="rgb(221,52,54)"/><text x="38.3310%" y="1055.50"></text></g><g><title>arena_bin_slabs_full_remove (2 samples, 0.01%)</title><rect x="38.1059%" y="1077" width="0.0124%" height="15" fill="rgb(252,129,43)"/><text x="38.3559%" y="1087.50"></text></g><g><title>arena_dalloc_bin_slab (4 samples, 0.02%)</title><rect x="38.1183%" y="1077" width="0.0249%" height="15" fill="rgb(248,183,27)"/><text x="38.3683%" y="1087.50"></text></g><g><title>arena_slab_dalloc (4 samples, 0.02%)</title><rect x="38.1183%" y="1061" width="0.0249%" height="15" fill="rgb(250,0,22)"/><text x="38.3683%" y="1071.50"></text></g><g><title>_rjem_je_arena_extents_dirty_dalloc (4 samples, 0.02%)</title><rect x="38.1183%" y="1045" width="0.0249%" height="15" fill="rgb(213,166,10)"/><text x="38.3683%" y="1055.50"></text></g><g><title>extent_record (4 samples, 0.02%)</title><rect x="38.1183%" y="1029" width="0.0249%" height="15" fill="rgb(207,163,36)"/><text x="38.3683%" y="1039.50"></text></g><g><title>extent_try_coalesce (3 samples, 0.02%)</title><rect x="38.1245%" y="1013" width="0.0186%" height="15" fill="rgb(208,122,22)"/><text x="38.3745%" y="1023.50"></text></g><g><title>extent_lock_from_addr (2 samples, 0.01%)</title><rect x="38.1307%" y="997" width="0.0124%" height="15" fill="rgb(207,104,49)"/><text x="38.3807%" y="1007.50"></text></g><g><title>extent_rtree_leaf_elm_try_lock (2 samples, 0.01%)</title><rect x="38.1307%" y="981" width="0.0124%" height="15" fill="rgb(248,211,50)"/><text x="38.3807%" y="991.50"></text></g><g><title>extent_lock (2 samples, 0.01%)</title><rect x="38.1307%" y="965" width="0.0124%" height="15" fill="rgb(217,13,45)"/><text x="38.3807%" y="975.50"></text></g><g><title>mutex_pool_lock (2 samples, 0.01%)</title><rect x="38.1307%" y="949" width="0.0124%" height="15" fill="rgb(211,216,49)"/><text x="38.3807%" y="959.50"></text></g><g><title>malloc_mutex_lock (2 samples, 0.01%)</title><rect x="38.1307%" y="933" width="0.0124%" height="15" fill="rgb(221,58,53)"/><text x="38.3807%" y="943.50"></text></g><g><title>malloc_mutex_trylock_final (2 samples, 0.01%)</title><rect x="38.1307%" y="917" width="0.0124%" height="15" fill="rgb(220,112,41)"/><text x="38.3807%" y="927.50"></text></g><g><title>__GI___pthread_mutex_trylock (2 samples, 0.01%)</title><rect x="38.1307%" y="901" width="0.0124%" height="15" fill="rgb(236,38,28)"/><text x="38.3807%" y="911.50"></text></g><g><title>arena_slab_regind (2 samples, 0.01%)</title><rect x="38.1432%" y="1061" width="0.0124%" height="15" fill="rgb(227,195,22)"/><text x="38.3932%" y="1071.50"></text></g><g><title>bitmap_unset (2 samples, 0.01%)</title><rect x="38.1556%" y="1061" width="0.0124%" height="15" fill="rgb(214,55,33)"/><text x="38.4056%" y="1071.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (29 samples, 0.18%)</title><rect x="37.9940%" y="1109" width="0.1802%" height="15" fill="rgb(248,80,13)"/><text x="38.2440%" y="1119.50"></text></g><g><title>arena_dalloc_bin_locked_impl (28 samples, 0.17%)</title><rect x="38.0002%" y="1093" width="0.1740%" height="15" fill="rgb(238,52,6)"/><text x="38.2502%" y="1103.50"></text></g><g><title>arena_slab_reg_dalloc (5 samples, 0.03%)</title><rect x="38.1432%" y="1077" width="0.0311%" height="15" fill="rgb(224,198,47)"/><text x="38.3932%" y="1087.50"></text></g><g><title>extent_arena_get (21 samples, 0.13%)</title><rect x="38.1805%" y="1109" width="0.1305%" height="15" fill="rgb(233,171,20)"/><text x="38.4305%" y="1119.50"></text></g><g><title>atomic_load_p (17 samples, 0.11%)</title><rect x="38.2053%" y="1093" width="0.1056%" height="15" fill="rgb(241,30,25)"/><text x="38.4553%" y="1103.50"></text></g><g><title>rtree_leaf_elm_extent_read (3 samples, 0.02%)</title><rect x="38.3110%" y="1077" width="0.0186%" height="15" fill="rgb(207,171,38)"/><text x="38.5610%" y="1087.50"></text></g><g><title>rtree_leaf_elm_bits_read (3 samples, 0.02%)</title><rect x="38.3110%" y="1061" width="0.0186%" height="15" fill="rgb(234,70,1)"/><text x="38.5610%" y="1071.50"></text></g><g><title>atomic_load_p (3 samples, 0.02%)</title><rect x="38.3110%" y="1045" width="0.0186%" height="15" fill="rgb(232,178,18)"/><text x="38.5610%" y="1055.50"></text></g><g><title>rtree_extent_read (4 samples, 0.02%)</title><rect x="38.3110%" y="1093" width="0.0249%" height="15" fill="rgb(241,78,40)"/><text x="38.5610%" y="1103.50"></text></g><g><title>iealloc (5 samples, 0.03%)</title><rect x="38.3110%" y="1109" width="0.0311%" height="15" fill="rgb(222,35,25)"/><text x="38.5610%" y="1119.50"></text></g><g><title>malloc_mutex_lock (10 samples, 0.06%)</title><rect x="38.3420%" y="1109" width="0.0621%" height="15" fill="rgb(207,92,16)"/><text x="38.5920%" y="1119.50"></text></g><g><title>malloc_mutex_trylock_final (10 samples, 0.06%)</title><rect x="38.3420%" y="1093" width="0.0621%" height="15" fill="rgb(216,59,51)"/><text x="38.5920%" y="1103.50"></text></g><g><title>__GI___pthread_mutex_trylock (10 samples, 0.06%)</title><rect x="38.3420%" y="1077" width="0.0621%" height="15" fill="rgb(213,80,28)"/><text x="38.5920%" y="1087.50"></text></g><g><title>_rjem_sdallocx (82 samples, 0.51%)</title><rect x="37.9257%" y="1205" width="0.5096%" height="15" fill="rgb(220,93,7)"/><text x="38.1757%" y="1215.50"></text></g><g><title>isfree (78 samples, 0.48%)</title><rect x="37.9505%" y="1189" width="0.4847%" height="15" fill="rgb(225,24,44)"/><text x="38.2005%" y="1199.50"></text></g><g><title>isdalloct (78 samples, 0.48%)</title><rect x="37.9505%" y="1173" width="0.4847%" height="15" fill="rgb(243,74,40)"/><text x="38.2005%" y="1183.50"></text></g><g><title>arena_sdalloc (78 samples, 0.48%)</title><rect x="37.9505%" y="1157" width="0.4847%" height="15" fill="rgb(228,39,7)"/><text x="38.2005%" y="1167.50"></text></g><g><title>tcache_dalloc_small (77 samples, 0.48%)</title><rect x="37.9567%" y="1141" width="0.4785%" height="15" fill="rgb(227,79,8)"/><text x="38.2067%" y="1151.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (76 samples, 0.47%)</title><rect x="37.9630%" y="1125" width="0.4723%" height="15" fill="rgb(236,58,11)"/><text x="38.2130%" y="1135.50"></text></g><g><title>malloc_mutex_unlock (5 samples, 0.03%)</title><rect x="38.4042%" y="1109" width="0.0311%" height="15" fill="rgb(249,63,35)"/><text x="38.6542%" y="1119.50"></text></g><g><title>__GI___pthread_mutex_unlock (5 samples, 0.03%)</title><rect x="38.4042%" y="1093" width="0.0311%" height="15" fill="rgb(252,114,16)"/><text x="38.6542%" y="1103.50"></text></g><g><title>futures_task::waker::drop_arc_raw (2 samples, 0.01%)</title><rect x="38.4539%" y="1157" width="0.0124%" height="15" fill="rgb(254,151,24)"/><text x="38.7039%" y="1167.50"></text></g><g><title>core::mem::drop (2 samples, 0.01%)</title><rect x="38.4539%" y="1141" width="0.0124%" height="15" fill="rgb(253,54,39)"/><text x="38.7039%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_util::stream::futures_unordered::task::Task&lt;rho_runtime::storage::runner::JoinGroup&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="38.4539%" y="1125" width="0.0124%" height="15" fill="rgb(243,25,45)"/><text x="38.7039%" y="1135.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="38.4539%" y="1109" width="0.0124%" height="15" fill="rgb(234,134,9)"/><text x="38.7039%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.01%)</title><rect x="38.4539%" y="1093" width="0.0124%" height="15" fill="rgb(227,166,31)"/><text x="38.7039%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.01%)</title><rect x="38.4539%" y="1077" width="0.0124%" height="15" fill="rgb(245,143,41)"/><text x="38.7039%" y="1087.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (6 samples, 0.04%)</title><rect x="38.4352%" y="1205" width="0.0373%" height="15" fill="rgb(238,181,32)"/><text x="38.6852%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::oneshot::Inner&lt;rho_runtime::storage::tuplecell::TupleCell&gt;&gt; (4 samples, 0.02%)</title><rect x="38.4477%" y="1189" width="0.0249%" height="15" fill="rgb(224,113,18)"/><text x="38.6977%" y="1199.50"></text></g><g><title>&lt;tokio::sync::oneshot::Inner&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="38.4477%" y="1173" width="0.0249%" height="15" fill="rgb(240,229,28)"/><text x="38.6977%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;rho_runtime::storage::tuplecell::TupleCell&gt;&gt;&gt;&gt; (107 samples, 0.66%)</title><rect x="37.9008%" y="1253" width="0.6649%" height="15" fill="rgb(250,185,3)"/><text x="38.1508%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;rho_runtime::storage::tuplecell::TupleCell&gt;&gt;&gt; (105 samples, 0.65%)</title><rect x="37.9132%" y="1237" width="0.6525%" height="15" fill="rgb(212,59,25)"/><text x="38.1632%" y="1247.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (105 samples, 0.65%)</title><rect x="37.9132%" y="1221" width="0.6525%" height="15" fill="rgb(221,87,20)"/><text x="38.1632%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (15 samples, 0.09%)</title><rect x="38.4725%" y="1205" width="0.0932%" height="15" fill="rgb(213,74,28)"/><text x="38.7225%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_sub (15 samples, 0.09%)</title><rect x="38.4725%" y="1189" width="0.0932%" height="15" fill="rgb(224,132,34)"/><text x="38.7225%" y="1199.50"></text></g><g><title>[libc-2.31.so] (65 samples, 0.40%)</title><rect x="38.6527%" y="1237" width="0.4039%" height="15" fill="rgb(222,101,24)"/><text x="38.9027%" y="1247.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (26 samples, 0.16%)</title><rect x="39.0691%" y="1173" width="0.1616%" height="15" fill="rgb(254,142,4)"/><text x="39.3191%" y="1183.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (26 samples, 0.16%)</title><rect x="39.0691%" y="1157" width="0.1616%" height="15" fill="rgb(230,229,49)"/><text x="39.3191%" y="1167.50"></text></g><g><title>core::mem::replace (26 samples, 0.16%)</title><rect x="39.0691%" y="1141" width="0.1616%" height="15" fill="rgb(238,70,47)"/><text x="39.3191%" y="1151.50"></text></g><g><title>core::mem::swap (26 samples, 0.16%)</title><rect x="39.0691%" y="1125" width="0.1616%" height="15" fill="rgb(231,160,17)"/><text x="39.3191%" y="1135.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (26 samples, 0.16%)</title><rect x="39.0691%" y="1109" width="0.1616%" height="15" fill="rgb(218,68,53)"/><text x="39.3191%" y="1119.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (26 samples, 0.16%)</title><rect x="39.0691%" y="1093" width="0.1616%" height="15" fill="rgb(236,111,10)"/><text x="39.3191%" y="1103.50"></text></g><g><title>tokio::coop::poll_proceed (29 samples, 0.18%)</title><rect x="39.0567%" y="1237" width="0.1802%" height="15" fill="rgb(224,34,41)"/><text x="39.3067%" y="1247.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (29 samples, 0.18%)</title><rect x="39.0567%" y="1221" width="0.1802%" height="15" fill="rgb(241,118,19)"/><text x="39.3067%" y="1231.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (29 samples, 0.18%)</title><rect x="39.0567%" y="1205" width="0.1802%" height="15" fill="rgb(238,129,25)"/><text x="39.3067%" y="1215.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (29 samples, 0.18%)</title><rect x="39.0567%" y="1189" width="0.1802%" height="15" fill="rgb(238,22,31)"/><text x="39.3067%" y="1199.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::consume_value (304 samples, 1.89%)</title><rect x="39.2369%" y="1237" width="1.8891%" height="15" fill="rgb(222,174,48)"/><text x="39.4869%" y="1247.50">t..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (304 samples, 1.89%)</title><rect x="39.2369%" y="1221" width="1.8891%" height="15" fill="rgb(206,152,40)"/><text x="39.4869%" y="1231.50">t..</text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::consume_value::{{closure}} (304 samples, 1.89%)</title><rect x="39.2369%" y="1205" width="1.8891%" height="15" fill="rgb(218,99,54)"/><text x="39.4869%" y="1215.50">t..</text></g><g><title>core::option::Option&lt;T&gt;::take (304 samples, 1.89%)</title><rect x="39.2369%" y="1189" width="1.8891%" height="15" fill="rgb(220,174,26)"/><text x="39.4869%" y="1199.50">c..</text></g><g><title>core::mem::take (304 samples, 1.89%)</title><rect x="39.2369%" y="1173" width="1.8891%" height="15" fill="rgb(245,116,9)"/><text x="39.4869%" y="1183.50">c..</text></g><g><title>core::mem::replace (304 samples, 1.89%)</title><rect x="39.2369%" y="1157" width="1.8891%" height="15" fill="rgb(209,72,35)"/><text x="39.4869%" y="1167.50">c..</text></g><g><title>core::mem::swap (304 samples, 1.89%)</title><rect x="39.2369%" y="1141" width="1.8891%" height="15" fill="rgb(226,126,21)"/><text x="39.4869%" y="1151.50">c..</text></g><g><title>core::ptr::swap_nonoverlapping_one (304 samples, 1.89%)</title><rect x="39.2369%" y="1125" width="1.8891%" height="15" fill="rgb(227,192,1)"/><text x="39.4869%" y="1135.50">c..</text></g><g><title>core::ptr::swap_nonoverlapping (304 samples, 1.89%)</title><rect x="39.2369%" y="1109" width="1.8891%" height="15" fill="rgb(237,180,29)"/><text x="39.4869%" y="1119.50">c..</text></g><g><title>core::ptr::swap_nonoverlapping_bytes (304 samples, 1.89%)</title><rect x="39.2369%" y="1093" width="1.8891%" height="15" fill="rgb(230,197,35)"/><text x="39.4869%" y="1103.50">c..</text></g><g><title>core::intrinsics::copy_nonoverlapping (288 samples, 1.79%)</title><rect x="39.3363%" y="1077" width="1.7897%" height="15" fill="rgb(246,193,31)"/><text x="39.5863%" y="1087.50">c..</text></g><g><title>tokio::sync::oneshot::State::load (13 samples, 0.08%)</title><rect x="41.1322%" y="1237" width="0.0808%" height="15" fill="rgb(241,36,4)"/><text x="41.3822%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (13 samples, 0.08%)</title><rect x="41.1322%" y="1221" width="0.0808%" height="15" fill="rgb(241,130,17)"/><text x="41.3822%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.08%)</title><rect x="41.1322%" y="1205" width="0.0808%" height="15" fill="rgb(206,137,32)"/><text x="41.3822%" y="1215.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (617 samples, 3.83%)</title><rect x="37.4472%" y="1269" width="3.8342%" height="15" fill="rgb(237,228,51)"/><text x="37.6972%" y="1279.50">&lt;tok..</text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::poll_recv (437 samples, 2.72%)</title><rect x="38.5657%" y="1253" width="2.7156%" height="15" fill="rgb(243,6,42)"/><text x="38.8157%" y="1263.50">to..</text></g><g><title>tokio::sync::oneshot::State::set_rx_task (11 samples, 0.07%)</title><rect x="41.2130%" y="1237" width="0.0684%" height="15" fill="rgb(251,74,28)"/><text x="41.4630%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (11 samples, 0.07%)</title><rect x="41.2130%" y="1221" width="0.0684%" height="15" fill="rgb(218,20,49)"/><text x="41.4630%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_or (11 samples, 0.07%)</title><rect x="41.2130%" y="1205" width="0.0684%" height="15" fill="rgb(238,28,14)"/><text x="41.4630%" y="1215.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="41.4057%" y="1253" width="0.0124%" height="15" fill="rgb(229,40,46)"/><text x="41.6557%" y="1263.50"></text></g><g><title>[libc-2.31.so] (23 samples, 0.14%)</title><rect x="41.2814%" y="1269" width="0.1429%" height="15" fill="rgb(244,195,20)"/><text x="41.5314%" y="1279.50"></text></g><g><title>__rg_alloc (2 samples, 0.01%)</title><rect x="41.4305%" y="1269" width="0.0124%" height="15" fill="rgb(253,56,35)"/><text x="41.6805%" y="1279.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (2 samples, 0.01%)</title><rect x="41.4305%" y="1253" width="0.0124%" height="15" fill="rgb(210,149,44)"/><text x="41.6805%" y="1263.50"></text></g><g><title>__rust_probestack (9 samples, 0.06%)</title><rect x="41.4492%" y="1269" width="0.0559%" height="15" fill="rgb(240,135,12)"/><text x="41.6992%" y="1279.50"></text></g><g><title>__sched_yield (4 samples, 0.02%)</title><rect x="41.5051%" y="1269" width="0.0249%" height="15" fill="rgb(251,24,50)"/><text x="41.7551%" y="1279.50"></text></g><g><title>_rjem_mallocx (3 samples, 0.02%)</title><rect x="41.5362%" y="1269" width="0.0186%" height="15" fill="rgb(243,200,47)"/><text x="41.7862%" y="1279.50"></text></g><g><title>alloc::slice::merge_sort (10 samples, 0.06%)</title><rect x="41.5672%" y="1269" width="0.0621%" height="15" fill="rgb(224,166,26)"/><text x="41.8172%" y="1279.50"></text></g><g><title>blake3::ChunkState::update (6 samples, 0.04%)</title><rect x="41.6356%" y="1269" width="0.0373%" height="15" fill="rgb(233,0,47)"/><text x="41.8856%" y="1279.50"></text></g><g><title>blake3::Hasher::update (7 samples, 0.04%)</title><rect x="41.6791%" y="1269" width="0.0435%" height="15" fill="rgb(253,80,5)"/><text x="41.9291%" y="1279.50"></text></g><g><title>blake3_compress_in_place_avx512 (3 samples, 0.02%)</title><rect x="41.7226%" y="1269" width="0.0186%" height="15" fill="rgb(214,133,25)"/><text x="41.9726%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Expr&gt; (5 samples, 0.03%)</title><rect x="41.7661%" y="1269" width="0.0311%" height="15" fill="rgb(209,27,14)"/><text x="42.0161%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (2 samples, 0.01%)</title><rect x="41.8034%" y="1253" width="0.0124%" height="15" fill="rgb(219,102,51)"/><text x="42.0534%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (4 samples, 0.02%)</title><rect x="41.7972%" y="1269" width="0.0249%" height="15" fill="rgb(237,18,16)"/><text x="42.0472%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::expr::ExprInstance&gt; (6 samples, 0.04%)</title><rect x="41.8220%" y="1269" width="0.0373%" height="15" fill="rgb(241,85,17)"/><text x="42.0720%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;core::option::Option&lt;rho_runtime::storage::tuplecell::TupleCell&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="41.8593%" y="1269" width="0.0124%" height="15" fill="rgb(236,90,42)"/><text x="42.1093%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::CoreStage&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::store::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Send&gt;::{{closure}}&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="41.8717%" y="1269" width="0.0249%" height="15" fill="rgb(249,57,21)"/><text x="42.1217%" y="1279.50"></text></g><g><title>[libc-2.31.so] (79 samples, 0.49%)</title><rect x="41.9277%" y="1253" width="0.4909%" height="15" fill="rgb(243,12,36)"/><text x="42.1777%" y="1263.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::downgrade (9 samples, 0.06%)</title><rect x="42.4186%" y="1253" width="0.0559%" height="15" fill="rgb(253,128,47)"/><text x="42.6686%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (7 samples, 0.04%)</title><rect x="42.4310%" y="1237" width="0.0435%" height="15" fill="rgb(207,33,20)"/><text x="42.6810%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (7 samples, 0.04%)</title><rect x="42.4310%" y="1221" width="0.0435%" height="15" fill="rgb(233,215,35)"/><text x="42.6810%" y="1231.50"></text></g><g><title>[libc-2.31.so] (60 samples, 0.37%)</title><rect x="42.4994%" y="1237" width="0.3729%" height="15" fill="rgb(249,188,52)"/><text x="42.7494%" y="1247.50"></text></g><g><title>tcache_alloc_large (2 samples, 0.01%)</title><rect x="42.8909%" y="1077" width="0.0124%" height="15" fill="rgb(225,12,32)"/><text x="43.1409%" y="1087.50"></text></g><g><title>tcache_event (2 samples, 0.01%)</title><rect x="42.8909%" y="1061" width="0.0124%" height="15" fill="rgb(247,98,14)"/><text x="43.1409%" y="1071.50"></text></g><g><title>extent_activate_locked (2 samples, 0.01%)</title><rect x="42.9157%" y="933" width="0.0124%" height="15" fill="rgb(247,219,48)"/><text x="43.1657%" y="943.50"></text></g><g><title>extents_remove_locked (2 samples, 0.01%)</title><rect x="42.9157%" y="917" width="0.0124%" height="15" fill="rgb(253,60,48)"/><text x="43.1657%" y="927.50"></text></g><g><title>_rjem_je_extent_heap_remove (2 samples, 0.01%)</title><rect x="42.9157%" y="901" width="0.0124%" height="15" fill="rgb(245,15,52)"/><text x="43.1657%" y="911.50"></text></g><g><title>_rjem_je_extents_alloc (4 samples, 0.02%)</title><rect x="42.9157%" y="981" width="0.0249%" height="15" fill="rgb(220,133,28)"/><text x="43.1657%" y="991.50"></text></g><g><title>extent_recycle (4 samples, 0.02%)</title><rect x="42.9157%" y="965" width="0.0249%" height="15" fill="rgb(217,180,4)"/><text x="43.1657%" y="975.50"></text></g><g><title>extent_recycle_extract (4 samples, 0.02%)</title><rect x="42.9157%" y="949" width="0.0249%" height="15" fill="rgb(251,24,1)"/><text x="43.1657%" y="959.50"></text></g><g><title>arena_bin_malloc_hard (6 samples, 0.04%)</title><rect x="42.9095%" y="1029" width="0.0373%" height="15" fill="rgb(212,185,49)"/><text x="43.1595%" y="1039.50"></text></g><g><title>arena_bin_nonfull_slab_get (6 samples, 0.04%)</title><rect x="42.9095%" y="1013" width="0.0373%" height="15" fill="rgb(215,175,22)"/><text x="43.1595%" y="1023.50"></text></g><g><title>arena_slab_alloc (6 samples, 0.04%)</title><rect x="42.9095%" y="997" width="0.0373%" height="15" fill="rgb(250,205,14)"/><text x="43.1595%" y="1007.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (8 samples, 0.05%)</title><rect x="42.9033%" y="1061" width="0.0497%" height="15" fill="rgb(225,211,22)"/><text x="43.1533%" y="1071.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (8 samples, 0.05%)</title><rect x="42.9033%" y="1045" width="0.0497%" height="15" fill="rgb(251,179,42)"/><text x="43.1533%" y="1055.50"></text></g><g><title>imalloc_no_sample (11 samples, 0.07%)</title><rect x="42.8909%" y="1125" width="0.0684%" height="15" fill="rgb(208,216,51)"/><text x="43.1409%" y="1135.50"></text></g><g><title>iallocztm (11 samples, 0.07%)</title><rect x="42.8909%" y="1109" width="0.0684%" height="15" fill="rgb(235,36,11)"/><text x="43.1409%" y="1119.50"></text></g><g><title>arena_malloc (11 samples, 0.07%)</title><rect x="42.8909%" y="1093" width="0.0684%" height="15" fill="rgb(213,189,28)"/><text x="43.1409%" y="1103.50"></text></g><g><title>tcache_alloc_small (9 samples, 0.06%)</title><rect x="42.9033%" y="1077" width="0.0559%" height="15" fill="rgb(227,203,42)"/><text x="43.1533%" y="1087.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (81 samples, 0.50%)</title><rect x="42.4745%" y="1253" width="0.5034%" height="15" fill="rgb(244,72,36)"/><text x="42.7245%" y="1263.50"></text></g><g><title>alloc::alloc::exchange_malloc (17 samples, 0.11%)</title><rect x="42.8722%" y="1237" width="0.1056%" height="15" fill="rgb(213,53,17)"/><text x="43.1222%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.11%)</title><rect x="42.8722%" y="1221" width="0.1056%" height="15" fill="rgb(207,167,3)"/><text x="43.1222%" y="1231.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.11%)</title><rect x="42.8722%" y="1205" width="0.1056%" height="15" fill="rgb(216,98,30)"/><text x="43.1222%" y="1215.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.11%)</title><rect x="42.8722%" y="1189" width="0.1056%" height="15" fill="rgb(236,123,15)"/><text x="43.1222%" y="1199.50"></text></g><g><title>_rjem_mallocx (16 samples, 0.10%)</title><rect x="42.8784%" y="1173" width="0.0994%" height="15" fill="rgb(248,81,50)"/><text x="43.1284%" y="1183.50"></text></g><g><title>imalloc (14 samples, 0.09%)</title><rect x="42.8909%" y="1157" width="0.0870%" height="15" fill="rgb(214,120,4)"/><text x="43.1409%" y="1167.50"></text></g><g><title>imalloc_body (14 samples, 0.09%)</title><rect x="42.8909%" y="1141" width="0.0870%" height="15" fill="rgb(208,179,34)"/><text x="43.1409%" y="1151.50"></text></g><g><title>sz_size2index (3 samples, 0.02%)</title><rect x="42.9592%" y="1125" width="0.0186%" height="15" fill="rgb(227,140,7)"/><text x="43.2092%" y="1135.50"></text></g><g><title>sz_size2index_compute (2 samples, 0.01%)</title><rect x="42.9654%" y="1109" width="0.0124%" height="15" fill="rgb(214,22,6)"/><text x="43.2154%" y="1119.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::link (53 samples, 0.33%)</title><rect x="42.9779%" y="1253" width="0.3294%" height="15" fill="rgb(207,137,27)"/><text x="43.2279%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::swap (53 samples, 0.33%)</title><rect x="42.9779%" y="1237" width="0.3294%" height="15" fill="rgb(210,8,46)"/><text x="43.2279%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_swap (53 samples, 0.33%)</title><rect x="42.9779%" y="1221" width="0.3294%" height="15" fill="rgb(240,16,54)"/><text x="43.2279%" y="1231.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::pending_next_all (13 samples, 0.08%)</title><rect x="43.3072%" y="1253" width="0.0808%" height="15" fill="rgb(211,209,29)"/><text x="43.5572%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::store (6 samples, 0.04%)</title><rect x="43.3880%" y="1237" width="0.0373%" height="15" fill="rgb(226,228,24)"/><text x="43.6380%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_store (6 samples, 0.04%)</title><rect x="43.3880%" y="1221" width="0.0373%" height="15" fill="rgb(222,84,9)"/><text x="43.6380%" y="1231.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::push (245 samples, 1.52%)</title><rect x="41.9215%" y="1269" width="1.5225%" height="15" fill="rgb(234,203,30)"/><text x="42.1715%" y="1279.50"></text></g><g><title>futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;Fut&gt;::enqueue (9 samples, 0.06%)</title><rect x="43.3880%" y="1253" width="0.0559%" height="15" fill="rgb(238,109,14)"/><text x="43.6380%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::swap (3 samples, 0.02%)</title><rect x="43.4253%" y="1237" width="0.0186%" height="15" fill="rgb(233,206,34)"/><text x="43.6753%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_swap (3 samples, 0.02%)</title><rect x="43.4253%" y="1221" width="0.0186%" height="15" fill="rgb(220,167,47)"/><text x="43.6753%" y="1231.50"></text></g><g><title>[libc-2.31.so] (32 samples, 0.20%)</title><rect x="43.4626%" y="1189" width="0.1989%" height="15" fill="rgb(238,105,10)"/><text x="43.7126%" y="1199.50"></text></g><g><title>__rg_dealloc (2 samples, 0.01%)</title><rect x="43.6677%" y="1157" width="0.0124%" height="15" fill="rgb(213,227,17)"/><text x="43.9177%" y="1167.50"></text></g><g><title>sz_size2index (2 samples, 0.01%)</title><rect x="43.6863%" y="1093" width="0.0124%" height="15" fill="rgb(217,132,38)"/><text x="43.9363%" y="1103.50"></text></g><g><title>sz_size2index_compute (2 samples, 0.01%)</title><rect x="43.6863%" y="1077" width="0.0124%" height="15" fill="rgb(242,146,4)"/><text x="43.9363%" y="1087.50"></text></g><g><title>_rjem_sdallocx (5 samples, 0.03%)</title><rect x="43.6801%" y="1157" width="0.0311%" height="15" fill="rgb(212,61,9)"/><text x="43.9301%" y="1167.50"></text></g><g><title>isfree (4 samples, 0.02%)</title><rect x="43.6863%" y="1141" width="0.0249%" height="15" fill="rgb(247,126,22)"/><text x="43.9363%" y="1151.50"></text></g><g><title>isdalloct (4 samples, 0.02%)</title><rect x="43.6863%" y="1125" width="0.0249%" height="15" fill="rgb(220,196,2)"/><text x="43.9363%" y="1135.50"></text></g><g><title>arena_sdalloc (4 samples, 0.02%)</title><rect x="43.6863%" y="1109" width="0.0249%" height="15" fill="rgb(208,46,4)"/><text x="43.9363%" y="1119.50"></text></g><g><title>tcache_dalloc_small (2 samples, 0.01%)</title><rect x="43.6987%" y="1093" width="0.0124%" height="15" fill="rgb(252,104,46)"/><text x="43.9487%" y="1103.50"></text></g><g><title>core::mem::drop (3 samples, 0.02%)</title><rect x="43.7112%" y="1141" width="0.0186%" height="15" fill="rgb(237,152,48)"/><text x="43.9612%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;futures_util::stream::futures_unordered::task::Task&lt;rho_runtime::storage::runner::JoinGroup&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="43.7112%" y="1125" width="0.0186%" height="15" fill="rgb(221,59,37)"/><text x="43.9612%" y="1135.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="43.7112%" y="1109" width="0.0186%" height="15" fill="rgb(209,202,51)"/><text x="43.9612%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.02%)</title><rect x="43.7112%" y="1093" width="0.0186%" height="15" fill="rgb(228,81,30)"/><text x="43.9612%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.02%)</title><rect x="43.7112%" y="1077" width="0.0186%" height="15" fill="rgb(227,42,39)"/><text x="43.9612%" y="1087.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (7 samples, 0.04%)</title><rect x="43.7112%" y="1157" width="0.0435%" height="15" fill="rgb(221,26,2)"/><text x="43.9612%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_util::stream::futures_unordered::task::Task&lt;rho_runtime::storage::runner::JoinGroup&gt;&gt; (4 samples, 0.02%)</title><rect x="43.7298%" y="1141" width="0.0249%" height="15" fill="rgb(254,61,31)"/><text x="43.9798%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;rho_runtime::storage::runner::JoinGroup&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="43.7298%" y="1125" width="0.0249%" height="15" fill="rgb(222,173,38)"/><text x="43.9798%" y="1135.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="43.7298%" y="1109" width="0.0249%" height="15" fill="rgb(218,50,12)"/><text x="43.9798%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.01%)</title><rect x="43.7422%" y="1093" width="0.0124%" height="15" fill="rgb(223,88,40)"/><text x="43.9922%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.01%)</title><rect x="43.7422%" y="1077" width="0.0124%" height="15" fill="rgb(237,54,19)"/><text x="43.9922%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_util::stream::futures_unordered::task::Task&lt;rho_runtime::storage::runner::JoinGroup&gt;&gt;&gt; (24 samples, 0.15%)</title><rect x="43.6614%" y="1189" width="0.1491%" height="15" fill="rgb(251,129,25)"/><text x="43.9114%" y="1199.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.15%)</title><rect x="43.6614%" y="1173" width="0.1491%" height="15" fill="rgb(238,97,19)"/><text x="43.9114%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (9 samples, 0.06%)</title><rect x="43.7547%" y="1157" width="0.0559%" height="15" fill="rgb(240,169,18)"/><text x="44.0047%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_sub (9 samples, 0.06%)</title><rect x="43.7547%" y="1141" width="0.0559%" height="15" fill="rgb(230,187,49)"/><text x="44.0047%" y="1151.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (96 samples, 0.60%)</title><rect x="43.4439%" y="1269" width="0.5966%" height="15" fill="rgb(209,44,26)"/><text x="43.6939%" y="1279.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (96 samples, 0.60%)</title><rect x="43.4439%" y="1253" width="0.5966%" height="15" fill="rgb(244,0,6)"/><text x="43.6939%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;rho_runtime::storage::runner::JoinGroup&gt;&gt; (95 samples, 0.59%)</title><rect x="43.4502%" y="1237" width="0.5904%" height="15" fill="rgb(248,18,21)"/><text x="43.7002%" y="1247.50"></text></g><g><title>&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;Fut&gt; as core::ops::drop::Drop&gt;::drop (95 samples, 0.59%)</title><rect x="43.4502%" y="1221" width="0.5904%" height="15" fill="rgb(245,180,19)"/><text x="43.7002%" y="1231.50"></text></g><g><title>futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt;::release_task (93 samples, 0.58%)</title><rect x="43.4626%" y="1205" width="0.5779%" height="15" fill="rgb(252,118,36)"/><text x="43.7126%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (37 samples, 0.23%)</title><rect x="43.8106%" y="1189" width="0.2299%" height="15" fill="rgb(210,224,19)"/><text x="44.0606%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_swap (37 samples, 0.23%)</title><rect x="43.8106%" y="1173" width="0.2299%" height="15" fill="rgb(218,30,24)"/><text x="44.0606%" y="1183.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (8 samples, 0.05%)</title><rect x="44.0529%" y="1269" width="0.0497%" height="15" fill="rgb(219,75,50)"/><text x="44.3029%" y="1279.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (3 samples, 0.02%)</title><rect x="44.1027%" y="1269" width="0.0186%" height="15" fill="rgb(234,72,50)"/><text x="44.3527%" y="1279.50"></text></g><g><title>&lt;rho_runtime::storage::runner::JoinGroup as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="44.1213%" y="1221" width="0.0124%" height="15" fill="rgb(219,100,48)"/><text x="44.3713%" y="1231.50"></text></g><g><title>prost::encoding::message::merge_repeated (8 samples, 0.05%)</title><rect x="44.1213%" y="1269" width="0.0497%" height="15" fill="rgb(253,5,41)"/><text x="44.3713%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.05%)</title><rect x="44.1213%" y="1253" width="0.0497%" height="15" fill="rgb(247,181,11)"/><text x="44.3713%" y="1263.50"></text></g><g><title>core::ptr::write (8 samples, 0.05%)</title><rect x="44.1213%" y="1237" width="0.0497%" height="15" fill="rgb(222,223,25)"/><text x="44.3713%" y="1247.50"></text></g><g><title>blake3_compress_in_place_avx512 (6 samples, 0.04%)</title><rect x="44.1337%" y="1221" width="0.0373%" height="15" fill="rgb(214,198,28)"/><text x="44.3837%" y="1231.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="44.2021%" y="1253" width="0.0124%" height="15" fill="rgb(230,46,43)"/><text x="44.4521%" y="1263.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (5 samples, 0.03%)</title><rect x="44.2145%" y="1253" width="0.0311%" height="15" fill="rgb(233,65,53)"/><text x="44.4645%" y="1263.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.03%)</title><rect x="44.2145%" y="1237" width="0.0311%" height="15" fill="rgb(221,121,27)"/><text x="44.4645%" y="1247.50"></text></g><g><title>[libc-2.31.so] (13 samples, 0.08%)</title><rect x="44.2456%" y="1253" width="0.0808%" height="15" fill="rgb(247,70,47)"/><text x="44.4956%" y="1263.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.01%)</title><rect x="44.3264%" y="1253" width="0.0124%" height="15" fill="rgb(228,85,35)"/><text x="44.5764%" y="1263.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.05%)</title><rect x="44.3512%" y="1173" width="0.0497%" height="15" fill="rgb(209,50,18)"/><text x="44.6012%" y="1183.50"></text></g><g><title>core::ptr::read (7 samples, 0.04%)</title><rect x="44.3574%" y="1157" width="0.0435%" height="15" fill="rgb(250,19,35)"/><text x="44.6074%" y="1167.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.04%)</title><rect x="44.3574%" y="1141" width="0.0435%" height="15" fill="rgb(253,107,29)"/><text x="44.6074%" y="1151.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="44.4009%" y="1173" width="0.0124%" height="15" fill="rgb(252,179,29)"/><text x="44.6509%" y="1183.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (2 samples, 0.01%)</title><rect x="44.4258%" y="933" width="0.0124%" height="15" fill="rgb(238,194,6)"/><text x="44.6758%" y="943.50"></text></g><g><title>arena_dalloc_bin_locked_impl (2 samples, 0.01%)</title><rect x="44.4258%" y="917" width="0.0124%" height="15" fill="rgb(238,164,29)"/><text x="44.6758%" y="927.50"></text></g><g><title>arena_dalloc_bin_slab (2 samples, 0.01%)</title><rect x="44.4258%" y="901" width="0.0124%" height="15" fill="rgb(224,25,9)"/><text x="44.6758%" y="911.50"></text></g><g><title>extent_arena_get (2 samples, 0.01%)</title><rect x="44.4382%" y="933" width="0.0124%" height="15" fill="rgb(244,153,23)"/><text x="44.6882%" y="943.50"></text></g><g><title>atomic_load_p (2 samples, 0.01%)</title><rect x="44.4382%" y="917" width="0.0124%" height="15" fill="rgb(212,203,14)"/><text x="44.6882%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.11%)</title><rect x="44.3512%" y="1205" width="0.1056%" height="15" fill="rgb(220,164,20)"/><text x="44.6012%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.11%)</title><rect x="44.3512%" y="1189" width="0.1056%" height="15" fill="rgb(222,203,48)"/><text x="44.6012%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::into_iter::IntoIter&lt;model::rho_types::Par&gt;&gt;&gt; (7 samples, 0.04%)</title><rect x="44.4134%" y="1173" width="0.0435%" height="15" fill="rgb(215,159,22)"/><text x="44.6634%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;model::rho_types::Par&gt;&gt; (6 samples, 0.04%)</title><rect x="44.4196%" y="1157" width="0.0373%" height="15" fill="rgb(216,183,47)"/><text x="44.6696%" y="1167.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.04%)</title><rect x="44.4196%" y="1141" width="0.0373%" height="15" fill="rgb(229,195,25)"/><text x="44.6696%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;model::rho_types::Par,alloc::alloc::Global&gt;&gt; (6 samples, 0.04%)</title><rect x="44.4196%" y="1125" width="0.0373%" height="15" fill="rgb(224,132,51)"/><text x="44.6696%" y="1135.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.04%)</title><rect x="44.4196%" y="1109" width="0.0373%" height="15" fill="rgb(240,63,7)"/><text x="44.6696%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Par&gt;&gt; (6 samples, 0.04%)</title><rect x="44.4196%" y="1093" width="0.0373%" height="15" fill="rgb(249,182,41)"/><text x="44.6696%" y="1103.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.04%)</title><rect x="44.4196%" y="1077" width="0.0373%" height="15" fill="rgb(243,47,26)"/><text x="44.6696%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.04%)</title><rect x="44.4196%" y="1061" width="0.0373%" height="15" fill="rgb(233,48,2)"/><text x="44.6696%" y="1071.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.04%)</title><rect x="44.4196%" y="1045" width="0.0373%" height="15" fill="rgb(244,165,34)"/><text x="44.6696%" y="1055.50"></text></g><g><title>_rjem_sdallocx (6 samples, 0.04%)</title><rect x="44.4196%" y="1029" width="0.0373%" height="15" fill="rgb(207,89,7)"/><text x="44.6696%" y="1039.50"></text></g><g><title>isfree (5 samples, 0.03%)</title><rect x="44.4258%" y="1013" width="0.0311%" height="15" fill="rgb(244,117,36)"/><text x="44.6758%" y="1023.50"></text></g><g><title>isdalloct (5 samples, 0.03%)</title><rect x="44.4258%" y="997" width="0.0311%" height="15" fill="rgb(226,144,34)"/><text x="44.6758%" y="1007.50"></text></g><g><title>arena_sdalloc (5 samples, 0.03%)</title><rect x="44.4258%" y="981" width="0.0311%" height="15" fill="rgb(213,23,19)"/><text x="44.6758%" y="991.50"></text></g><g><title>tcache_dalloc_small (5 samples, 0.03%)</title><rect x="44.4258%" y="965" width="0.0311%" height="15" fill="rgb(217,75,12)"/><text x="44.6758%" y="975.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (5 samples, 0.03%)</title><rect x="44.4258%" y="949" width="0.0311%" height="15" fill="rgb(224,159,17)"/><text x="44.6758%" y="959.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (18 samples, 0.11%)</title><rect x="44.3512%" y="1237" width="0.1119%" height="15" fill="rgb(217,118,1)"/><text x="44.6012%" y="1247.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (18 samples, 0.11%)</title><rect x="44.3512%" y="1221" width="0.1119%" height="15" fill="rgb(232,180,48)"/><text x="44.6012%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (21 samples, 0.13%)</title><rect x="44.3388%" y="1253" width="0.1305%" height="15" fill="rgb(230,27,33)"/><text x="44.5888%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (3 samples, 0.02%)</title><rect x="44.4693%" y="1253" width="0.0186%" height="15" fill="rgb(205,31,21)"/><text x="44.7193%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Match&gt;&gt; (3 samples, 0.02%)</title><rect x="44.4693%" y="1237" width="0.0186%" height="15" fill="rgb(253,59,4)"/><text x="44.7193%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Match&gt;&gt; (3 samples, 0.02%)</title><rect x="44.4693%" y="1221" width="0.0186%" height="15" fill="rgb(224,201,9)"/><text x="44.7193%" y="1231.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="44.4693%" y="1205" width="0.0186%" height="15" fill="rgb(229,206,30)"/><text x="44.7193%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.02%)</title><rect x="44.4693%" y="1189" width="0.0186%" height="15" fill="rgb(212,67,47)"/><text x="44.7193%" y="1199.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.02%)</title><rect x="44.4693%" y="1173" width="0.0186%" height="15" fill="rgb(211,96,50)"/><text x="44.7193%" y="1183.50"></text></g><g><title>_rjem_sdallocx (3 samples, 0.02%)</title><rect x="44.4693%" y="1157" width="0.0186%" height="15" fill="rgb(252,114,18)"/><text x="44.7193%" y="1167.50"></text></g><g><title>isfree (2 samples, 0.01%)</title><rect x="44.4755%" y="1141" width="0.0124%" height="15" fill="rgb(223,58,37)"/><text x="44.7255%" y="1151.50"></text></g><g><title>isdalloct (2 samples, 0.01%)</title><rect x="44.4755%" y="1125" width="0.0124%" height="15" fill="rgb(237,70,4)"/><text x="44.7255%" y="1135.50"></text></g><g><title>arena_sdalloc (2 samples, 0.01%)</title><rect x="44.4755%" y="1109" width="0.0124%" height="15" fill="rgb(244,85,46)"/><text x="44.7255%" y="1119.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.01%)</title><rect x="44.4879%" y="1189" width="0.0124%" height="15" fill="rgb(223,39,52)"/><text x="44.7379%" y="1199.50"></text></g><g><title>isfree (2 samples, 0.01%)</title><rect x="44.4879%" y="1173" width="0.0124%" height="15" fill="rgb(218,200,14)"/><text x="44.7379%" y="1183.50"></text></g><g><title>isdalloct (2 samples, 0.01%)</title><rect x="44.4879%" y="1157" width="0.0124%" height="15" fill="rgb(208,171,16)"/><text x="44.7379%" y="1167.50"></text></g><g><title>arena_sdalloc (2 samples, 0.01%)</title><rect x="44.4879%" y="1141" width="0.0124%" height="15" fill="rgb(234,200,18)"/><text x="44.7379%" y="1151.50"></text></g><g><title>tcache_dalloc_small (2 samples, 0.01%)</title><rect x="44.4879%" y="1125" width="0.0124%" height="15" fill="rgb(228,45,11)"/><text x="44.7379%" y="1135.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (2 samples, 0.01%)</title><rect x="44.5066%" y="997" width="0.0124%" height="15" fill="rgb(237,182,11)"/><text x="44.7566%" y="1007.50"></text></g><g><title>arena_dalloc_bin_locked_impl (2 samples, 0.01%)</title><rect x="44.5066%" y="981" width="0.0124%" height="15" fill="rgb(241,175,49)"/><text x="44.7566%" y="991.50"></text></g><g><title>isfree (5 samples, 0.03%)</title><rect x="44.5066%" y="1077" width="0.0311%" height="15" fill="rgb(247,38,35)"/><text x="44.7566%" y="1087.50"></text></g><g><title>isdalloct (5 samples, 0.03%)</title><rect x="44.5066%" y="1061" width="0.0311%" height="15" fill="rgb(228,39,49)"/><text x="44.7566%" y="1071.50"></text></g><g><title>arena_sdalloc (5 samples, 0.03%)</title><rect x="44.5066%" y="1045" width="0.0311%" height="15" fill="rgb(226,101,26)"/><text x="44.7566%" y="1055.50"></text></g><g><title>tcache_dalloc_small (5 samples, 0.03%)</title><rect x="44.5066%" y="1029" width="0.0311%" height="15" fill="rgb(206,141,19)"/><text x="44.7566%" y="1039.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (5 samples, 0.03%)</title><rect x="44.5066%" y="1013" width="0.0311%" height="15" fill="rgb(211,200,13)"/><text x="44.7566%" y="1023.50"></text></g><g><title>malloc_mutex_lock (2 samples, 0.01%)</title><rect x="44.5252%" y="997" width="0.0124%" height="15" fill="rgb(241,121,6)"/><text x="44.7752%" y="1007.50"></text></g><g><title>malloc_mutex_trylock_final (2 samples, 0.01%)</title><rect x="44.5252%" y="981" width="0.0124%" height="15" fill="rgb(234,221,29)"/><text x="44.7752%" y="991.50"></text></g><g><title>__GI___pthread_mutex_trylock (2 samples, 0.01%)</title><rect x="44.5252%" y="965" width="0.0124%" height="15" fill="rgb(229,136,5)"/><text x="44.7752%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;rho_runtime::interpreter::reduce::environment::Env&gt; (10 samples, 0.06%)</title><rect x="44.4879%" y="1253" width="0.0621%" height="15" fill="rgb(238,36,11)"/><text x="44.7379%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[model::rho_types::Par: 6]&gt;&gt; (10 samples, 0.06%)</title><rect x="44.4879%" y="1237" width="0.0621%" height="15" fill="rgb(251,55,41)"/><text x="44.7379%" y="1247.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.06%)</title><rect x="44.4879%" y="1221" width="0.0621%" height="15" fill="rgb(242,34,40)"/><text x="44.7379%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Par]&gt; (10 samples, 0.06%)</title><rect x="44.4879%" y="1205" width="0.0621%" height="15" fill="rgb(215,42,17)"/><text x="44.7379%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (8 samples, 0.05%)</title><rect x="44.5004%" y="1189" width="0.0497%" height="15" fill="rgb(207,44,46)"/><text x="44.7504%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (8 samples, 0.05%)</title><rect x="44.5004%" y="1173" width="0.0497%" height="15" fill="rgb(211,206,28)"/><text x="44.7504%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (8 samples, 0.05%)</title><rect x="44.5004%" y="1157" width="0.0497%" height="15" fill="rgb(237,167,16)"/><text x="44.7504%" y="1167.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.05%)</title><rect x="44.5004%" y="1141" width="0.0497%" height="15" fill="rgb(233,66,6)"/><text x="44.7504%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.05%)</title><rect x="44.5004%" y="1125" width="0.0497%" height="15" fill="rgb(246,123,29)"/><text x="44.7504%" y="1135.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.05%)</title><rect x="44.5004%" y="1109" width="0.0497%" height="15" fill="rgb(209,62,40)"/><text x="44.7504%" y="1119.50"></text></g><g><title>_rjem_sdallocx (8 samples, 0.05%)</title><rect x="44.5004%" y="1093" width="0.0497%" height="15" fill="rgb(218,4,25)"/><text x="44.7504%" y="1103.50"></text></g><g><title>tsd_fetch (2 samples, 0.01%)</title><rect x="44.5377%" y="1077" width="0.0124%" height="15" fill="rgb(253,91,49)"/><text x="44.7877%" y="1087.50"></text></g><g><title>tsd_fetch_impl (2 samples, 0.01%)</title><rect x="44.5377%" y="1061" width="0.0124%" height="15" fill="rgb(228,155,29)"/><text x="44.7877%" y="1071.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.03%)</title><rect x="44.5625%" y="1237" width="0.0311%" height="15" fill="rgb(243,57,37)"/><text x="44.8125%" y="1247.50"></text></g><g><title>__rust_probestack (2 samples, 0.01%)</title><rect x="44.5936%" y="1237" width="0.0124%" height="15" fill="rgb(244,167,17)"/><text x="44.8436%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (11 samples, 0.07%)</title><rect x="44.6184%" y="1237" width="0.0684%" height="15" fill="rgb(207,181,38)"/><text x="44.8684%" y="1247.50"></text></g><g><title>core::ptr::read (11 samples, 0.07%)</title><rect x="44.6184%" y="1221" width="0.0684%" height="15" fill="rgb(211,8,23)"/><text x="44.8684%" y="1231.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.07%)</title><rect x="44.6184%" y="1205" width="0.0684%" height="15" fill="rgb(235,11,44)"/><text x="44.8684%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.05%)</title><rect x="44.6930%" y="1109" width="0.0497%" height="15" fill="rgb(248,18,52)"/><text x="44.9430%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Expr]&gt; (8 samples, 0.05%)</title><rect x="44.6930%" y="1093" width="0.0497%" height="15" fill="rgb(208,4,7)"/><text x="44.9430%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Expr&gt; (7 samples, 0.04%)</title><rect x="44.6992%" y="1077" width="0.0435%" height="15" fill="rgb(240,17,39)"/><text x="44.9492%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::expr::ExprInstance&gt;&gt; (7 samples, 0.04%)</title><rect x="44.6992%" y="1061" width="0.0435%" height="15" fill="rgb(207,170,3)"/><text x="44.9492%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (12 samples, 0.07%)</title><rect x="44.6930%" y="1125" width="0.0746%" height="15" fill="rgb(236,100,52)"/><text x="44.9430%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (4 samples, 0.02%)</title><rect x="44.7427%" y="1109" width="0.0249%" height="15" fill="rgb(246,78,51)"/><text x="44.9927%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="44.7427%" y="1093" width="0.0249%" height="15" fill="rgb(211,17,15)"/><text x="44.9927%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.02%)</title><rect x="44.7427%" y="1077" width="0.0249%" height="15" fill="rgb(209,59,46)"/><text x="44.9927%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.02%)</title><rect x="44.7427%" y="1061" width="0.0249%" height="15" fill="rgb(210,92,25)"/><text x="44.9927%" y="1071.50"></text></g><g><title>_rjem_sdallocx (4 samples, 0.02%)</title><rect x="44.7427%" y="1045" width="0.0249%" height="15" fill="rgb(238,174,52)"/><text x="44.9927%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="44.7800%" y="1045" width="0.0249%" height="15" fill="rgb(230,73,7)"/><text x="45.0300%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Par]&gt; (4 samples, 0.02%)</title><rect x="44.7800%" y="1029" width="0.0249%" height="15" fill="rgb(243,124,40)"/><text x="45.0300%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (3 samples, 0.02%)</title><rect x="44.7862%" y="1013" width="0.0186%" height="15" fill="rgb(244,170,11)"/><text x="45.0362%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (3 samples, 0.02%)</title><rect x="44.7862%" y="997" width="0.0186%" height="15" fill="rgb(207,114,54)"/><text x="45.0362%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (2 samples, 0.01%)</title><rect x="44.7924%" y="981" width="0.0124%" height="15" fill="rgb(205,42,20)"/><text x="45.0424%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="44.7924%" y="965" width="0.0124%" height="15" fill="rgb(230,30,28)"/><text x="45.0424%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.01%)</title><rect x="44.7924%" y="949" width="0.0124%" height="15" fill="rgb(205,73,54)"/><text x="45.0424%" y="959.50"></text></g><g><title>isfree (3 samples, 0.02%)</title><rect x="44.8111%" y="965" width="0.0186%" height="15" fill="rgb(254,227,23)"/><text x="45.0611%" y="975.50"></text></g><g><title>isdalloct (3 samples, 0.02%)</title><rect x="44.8111%" y="949" width="0.0186%" height="15" fill="rgb(228,202,34)"/><text x="45.0611%" y="959.50"></text></g><g><title>arena_sdalloc (3 samples, 0.02%)</title><rect x="44.8111%" y="933" width="0.0186%" height="15" fill="rgb(222,225,37)"/><text x="45.0611%" y="943.50"></text></g><g><title>tcache_dalloc_small (3 samples, 0.02%)</title><rect x="44.8111%" y="917" width="0.0186%" height="15" fill="rgb(221,14,54)"/><text x="45.0611%" y="927.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (2 samples, 0.01%)</title><rect x="44.8173%" y="901" width="0.0124%" height="15" fill="rgb(254,102,2)"/><text x="45.0673%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Par&gt;&gt; (9 samples, 0.06%)</title><rect x="44.7800%" y="1061" width="0.0559%" height="15" fill="rgb(232,104,17)"/><text x="45.0300%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Par&gt;&gt; (5 samples, 0.03%)</title><rect x="44.8049%" y="1045" width="0.0311%" height="15" fill="rgb(250,220,14)"/><text x="45.0549%" y="1055.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.03%)</title><rect x="44.8049%" y="1029" width="0.0311%" height="15" fill="rgb(241,158,9)"/><text x="45.0549%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.03%)</title><rect x="44.8049%" y="1013" width="0.0311%" height="15" fill="rgb(246,9,43)"/><text x="45.0549%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.03%)</title><rect x="44.8049%" y="997" width="0.0311%" height="15" fill="rgb(206,73,33)"/><text x="45.0549%" y="1007.50"></text></g><g><title>_rjem_sdallocx (4 samples, 0.02%)</title><rect x="44.8111%" y="981" width="0.0249%" height="15" fill="rgb(222,79,8)"/><text x="45.0611%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.07%)</title><rect x="44.8422%" y="1013" width="0.0746%" height="15" fill="rgb(234,8,54)"/><text x="45.0922%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::GUnforgeable]&gt; (12 samples, 0.07%)</title><rect x="44.8422%" y="997" width="0.0746%" height="15" fill="rgb(209,134,38)"/><text x="45.0922%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::GUnforgeable&gt; (12 samples, 0.07%)</title><rect x="44.8422%" y="981" width="0.0746%" height="15" fill="rgb(230,127,29)"/><text x="45.0922%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::g_unforgeable::UnfInstance&gt;&gt; (12 samples, 0.07%)</title><rect x="44.8422%" y="965" width="0.0746%" height="15" fill="rgb(242,44,41)"/><text x="45.0922%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::g_unforgeable::UnfInstance&gt; (10 samples, 0.06%)</title><rect x="44.8546%" y="949" width="0.0621%" height="15" fill="rgb(222,56,43)"/><text x="45.1046%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::GPrivate&gt; (10 samples, 0.06%)</title><rect x="44.8546%" y="933" width="0.0621%" height="15" fill="rgb(238,39,47)"/><text x="45.1046%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (10 samples, 0.06%)</title><rect x="44.8546%" y="917" width="0.0621%" height="15" fill="rgb(226,79,43)"/><text x="45.1046%" y="927.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (10 samples, 0.06%)</title><rect x="44.8546%" y="901" width="0.0621%" height="15" fill="rgb(242,105,53)"/><text x="45.1046%" y="911.50"></text></g><g><title>bytes::bytes::shared_drop (10 samples, 0.06%)</title><rect x="44.8546%" y="885" width="0.0621%" height="15" fill="rgb(251,132,46)"/><text x="45.1046%" y="895.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (10 samples, 0.06%)</title><rect x="44.8546%" y="869" width="0.0621%" height="15" fill="rgb(231,77,14)"/><text x="45.1046%" y="879.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (10 samples, 0.06%)</title><rect x="44.8546%" y="853" width="0.0621%" height="15" fill="rgb(240,135,9)"/><text x="45.1046%" y="863.50"></text></g><g><title>bytes::bytes::release_shared (10 samples, 0.06%)</title><rect x="44.8546%" y="837" width="0.0621%" height="15" fill="rgb(248,109,14)"/><text x="45.1046%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (10 samples, 0.06%)</title><rect x="44.8546%" y="821" width="0.0621%" height="15" fill="rgb(227,146,52)"/><text x="45.1046%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_sub (10 samples, 0.06%)</title><rect x="44.8546%" y="805" width="0.0621%" height="15" fill="rgb(232,54,3)"/><text x="45.1046%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.16%)</title><rect x="44.7738%" y="1109" width="0.1554%" height="15" fill="rgb(229,201,43)"/><text x="45.0238%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Send]&gt; (25 samples, 0.16%)</title><rect x="44.7738%" y="1093" width="0.1554%" height="15" fill="rgb(252,161,33)"/><text x="45.0238%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Send&gt; (24 samples, 0.15%)</title><rect x="44.7800%" y="1077" width="0.1491%" height="15" fill="rgb(226,146,40)"/><text x="45.0300%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::Par&gt;&gt; (15 samples, 0.09%)</title><rect x="44.8359%" y="1061" width="0.0932%" height="15" fill="rgb(219,47,25)"/><text x="45.0859%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (14 samples, 0.09%)</title><rect x="44.8422%" y="1045" width="0.0870%" height="15" fill="rgb(250,135,13)"/><text x="45.0922%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::GUnforgeable&gt;&gt; (14 samples, 0.09%)</title><rect x="44.8422%" y="1029" width="0.0870%" height="15" fill="rgb(219,229,18)"/><text x="45.0922%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::GUnforgeable&gt;&gt; (2 samples, 0.01%)</title><rect x="44.9167%" y="1013" width="0.0124%" height="15" fill="rgb(217,152,27)"/><text x="45.1667%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="44.9167%" y="997" width="0.0124%" height="15" fill="rgb(225,71,47)"/><text x="45.1667%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.01%)</title><rect x="44.9167%" y="981" width="0.0124%" height="15" fill="rgb(220,139,14)"/><text x="45.1667%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.01%)</title><rect x="44.9167%" y="965" width="0.0124%" height="15" fill="rgb(247,54,32)"/><text x="45.1667%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.26%)</title><rect x="44.6868%" y="1205" width="0.2610%" height="15" fill="rgb(252,131,39)"/><text x="44.9368%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::MatchCase]&gt; (42 samples, 0.26%)</title><rect x="44.6868%" y="1189" width="0.2610%" height="15" fill="rgb(210,108,39)"/><text x="44.9368%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::MatchCase&gt; (42 samples, 0.26%)</title><rect x="44.6868%" y="1173" width="0.2610%" height="15" fill="rgb(205,23,29)"/><text x="44.9368%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::Par&gt;&gt; (42 samples, 0.26%)</title><rect x="44.6868%" y="1157" width="0.2610%" height="15" fill="rgb(246,139,46)"/><text x="44.9368%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (41 samples, 0.25%)</title><rect x="44.6930%" y="1141" width="0.2548%" height="15" fill="rgb(250,81,26)"/><text x="44.9430%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Send&gt;&gt; (28 samples, 0.17%)</title><rect x="44.7738%" y="1125" width="0.1740%" height="15" fill="rgb(214,104,7)"/><text x="45.0238%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Send&gt;&gt; (3 samples, 0.02%)</title><rect x="44.9292%" y="1109" width="0.0186%" height="15" fill="rgb(233,189,8)"/><text x="45.1792%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="44.9292%" y="1093" width="0.0186%" height="15" fill="rgb(228,141,17)"/><text x="45.1792%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.02%)</title><rect x="44.9292%" y="1077" width="0.0186%" height="15" fill="rgb(247,157,1)"/><text x="45.1792%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.02%)</title><rect x="44.9292%" y="1061" width="0.0186%" height="15" fill="rgb(249,225,5)"/><text x="45.1792%" y="1071.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.01%)</title><rect x="44.9354%" y="1045" width="0.0124%" height="15" fill="rgb(242,55,13)"/><text x="45.1854%" y="1055.50"></text></g><g><title>isfree (2 samples, 0.01%)</title><rect x="44.9354%" y="1029" width="0.0124%" height="15" fill="rgb(230,49,50)"/><text x="45.1854%" y="1039.50"></text></g><g><title>isdalloct (2 samples, 0.01%)</title><rect x="44.9354%" y="1013" width="0.0124%" height="15" fill="rgb(241,111,38)"/><text x="45.1854%" y="1023.50"></text></g><g><title>arena_sdalloc (2 samples, 0.01%)</title><rect x="44.9354%" y="997" width="0.0124%" height="15" fill="rgb(252,155,4)"/><text x="45.1854%" y="1007.50"></text></g><g><title>tcache_dalloc_small (2 samples, 0.01%)</title><rect x="44.9354%" y="981" width="0.0124%" height="15" fill="rgb(212,69,32)"/><text x="45.1854%" y="991.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (3 samples, 0.02%)</title><rect x="44.9540%" y="1045" width="0.0186%" height="15" fill="rgb(243,107,47)"/><text x="45.2040%" y="1055.50"></text></g><g><title>arena_dalloc_bin_locked_impl (3 samples, 0.02%)</title><rect x="44.9540%" y="1029" width="0.0186%" height="15" fill="rgb(247,130,12)"/><text x="45.2040%" y="1039.50"></text></g><g><title>arena_dalloc_bin_slab (3 samples, 0.02%)</title><rect x="44.9540%" y="1013" width="0.0186%" height="15" fill="rgb(233,74,16)"/><text x="45.2040%" y="1023.50"></text></g><g><title>arena_slab_dalloc (3 samples, 0.02%)</title><rect x="44.9540%" y="997" width="0.0186%" height="15" fill="rgb(208,58,18)"/><text x="45.2040%" y="1007.50"></text></g><g><title>_rjem_je_arena_extents_dirty_dalloc (3 samples, 0.02%)</title><rect x="44.9540%" y="981" width="0.0186%" height="15" fill="rgb(242,225,1)"/><text x="45.2040%" y="991.50"></text></g><g><title>extent_record (3 samples, 0.02%)</title><rect x="44.9540%" y="965" width="0.0186%" height="15" fill="rgb(249,39,40)"/><text x="45.2040%" y="975.50"></text></g><g><title>extent_deactivate_locked (2 samples, 0.01%)</title><rect x="44.9602%" y="949" width="0.0124%" height="15" fill="rgb(207,72,44)"/><text x="45.2102%" y="959.50"></text></g><g><title>extents_insert_locked (2 samples, 0.01%)</title><rect x="44.9602%" y="933" width="0.0124%" height="15" fill="rgb(215,193,12)"/><text x="45.2102%" y="943.50"></text></g><g><title>_rjem_je_extent_heap_insert (2 samples, 0.01%)</title><rect x="44.9602%" y="917" width="0.0124%" height="15" fill="rgb(248,41,39)"/><text x="45.2102%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::MatchCase&gt;&gt; (48 samples, 0.30%)</title><rect x="44.6868%" y="1221" width="0.2983%" height="15" fill="rgb(253,85,4)"/><text x="44.9368%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::MatchCase&gt;&gt; (6 samples, 0.04%)</title><rect x="44.9478%" y="1205" width="0.0373%" height="15" fill="rgb(243,70,31)"/><text x="45.1978%" y="1215.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.04%)</title><rect x="44.9478%" y="1189" width="0.0373%" height="15" fill="rgb(253,195,26)"/><text x="45.1978%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.04%)</title><rect x="44.9478%" y="1173" width="0.0373%" height="15" fill="rgb(243,42,11)"/><text x="45.1978%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.04%)</title><rect x="44.9478%" y="1157" width="0.0373%" height="15" fill="rgb(239,66,17)"/><text x="45.1978%" y="1167.50"></text></g><g><title>_rjem_sdallocx (6 samples, 0.04%)</title><rect x="44.9478%" y="1141" width="0.0373%" height="15" fill="rgb(217,132,21)"/><text x="45.1978%" y="1151.50"></text></g><g><title>isfree (6 samples, 0.04%)</title><rect x="44.9478%" y="1125" width="0.0373%" height="15" fill="rgb(252,202,21)"/><text x="45.1978%" y="1135.50"></text></g><g><title>isdalloct (6 samples, 0.04%)</title><rect x="44.9478%" y="1109" width="0.0373%" height="15" fill="rgb(233,98,36)"/><text x="45.1978%" y="1119.50"></text></g><g><title>arena_sdalloc (6 samples, 0.04%)</title><rect x="44.9478%" y="1093" width="0.0373%" height="15" fill="rgb(216,153,54)"/><text x="45.1978%" y="1103.50"></text></g><g><title>tcache_dalloc_small (6 samples, 0.04%)</title><rect x="44.9478%" y="1077" width="0.0373%" height="15" fill="rgb(250,99,7)"/><text x="45.1978%" y="1087.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (6 samples, 0.04%)</title><rect x="44.9478%" y="1061" width="0.0373%" height="15" fill="rgb(207,56,50)"/><text x="45.1978%" y="1071.50"></text></g><g><title>__rg_dealloc (2 samples, 0.01%)</title><rect x="44.9851%" y="1109" width="0.0124%" height="15" fill="rgb(244,61,34)"/><text x="45.2351%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Match&gt; (52 samples, 0.32%)</title><rect x="44.6868%" y="1237" width="0.3231%" height="15" fill="rgb(241,50,38)"/><text x="44.9368%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::Par&gt;&gt; (4 samples, 0.02%)</title><rect x="44.9851%" y="1221" width="0.0249%" height="15" fill="rgb(212,166,30)"/><text x="45.2351%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (4 samples, 0.02%)</title><rect x="44.9851%" y="1205" width="0.0249%" height="15" fill="rgb(249,127,32)"/><text x="45.2351%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (4 samples, 0.02%)</title><rect x="44.9851%" y="1189" width="0.0249%" height="15" fill="rgb(209,103,0)"/><text x="45.2351%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (4 samples, 0.02%)</title><rect x="44.9851%" y="1173" width="0.0249%" height="15" fill="rgb(238,209,51)"/><text x="45.2351%" y="1183.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="44.9851%" y="1157" width="0.0249%" height="15" fill="rgb(237,56,23)"/><text x="45.2351%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.02%)</title><rect x="44.9851%" y="1141" width="0.0249%" height="15" fill="rgb(215,153,46)"/><text x="45.2351%" y="1151.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.02%)</title><rect x="44.9851%" y="1125" width="0.0249%" height="15" fill="rgb(224,49,31)"/><text x="45.2351%" y="1135.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.01%)</title><rect x="44.9975%" y="1109" width="0.0124%" height="15" fill="rgb(250,18,42)"/><text x="45.2475%" y="1119.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (4 samples, 0.02%)</title><rect x="45.0348%" y="1221" width="0.0249%" height="15" fill="rgb(215,176,39)"/><text x="45.2848%" y="1231.50"></text></g><g><title>_rjem_sdallocx (3 samples, 0.02%)</title><rect x="45.0659%" y="1221" width="0.0186%" height="15" fill="rgb(223,77,29)"/><text x="45.3159%" y="1231.50"></text></g><g><title>isfree (2 samples, 0.01%)</title><rect x="45.0721%" y="1205" width="0.0124%" height="15" fill="rgb(234,94,52)"/><text x="45.3221%" y="1215.50"></text></g><g><title>isdalloct (2 samples, 0.01%)</title><rect x="45.0721%" y="1189" width="0.0124%" height="15" fill="rgb(220,154,50)"/><text x="45.3221%" y="1199.50"></text></g><g><title>arena_sdalloc (2 samples, 0.01%)</title><rect x="45.0721%" y="1173" width="0.0124%" height="15" fill="rgb(212,11,10)"/><text x="45.3221%" y="1183.50"></text></g><g><title>tcache_dalloc_small (2 samples, 0.01%)</title><rect x="45.0721%" y="1157" width="0.0124%" height="15" fill="rgb(205,166,19)"/><text x="45.3221%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (3 samples, 0.02%)</title><rect x="45.0845%" y="1221" width="0.0186%" height="15" fill="rgb(244,198,16)"/><text x="45.3345%" y="1231.50"></text></g><g><title>core::mem::take (3 samples, 0.02%)</title><rect x="45.0845%" y="1205" width="0.0186%" height="15" fill="rgb(219,69,12)"/><text x="45.3345%" y="1215.50"></text></g><g><title>core::mem::replace (3 samples, 0.02%)</title><rect x="45.0845%" y="1189" width="0.0186%" height="15" fill="rgb(245,30,7)"/><text x="45.3345%" y="1199.50"></text></g><g><title>core::mem::swap (3 samples, 0.02%)</title><rect x="45.0845%" y="1173" width="0.0186%" height="15" fill="rgb(218,221,48)"/><text x="45.3345%" y="1183.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (3 samples, 0.02%)</title><rect x="45.0845%" y="1157" width="0.0186%" height="15" fill="rgb(216,66,15)"/><text x="45.3345%" y="1167.50"></text></g><g><title>core::ptr::swap_nonoverlapping (3 samples, 0.02%)</title><rect x="45.0845%" y="1141" width="0.0186%" height="15" fill="rgb(226,122,50)"/><text x="45.3345%" y="1151.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (3 samples, 0.02%)</title><rect x="45.0845%" y="1125" width="0.0186%" height="15" fill="rgb(239,156,16)"/><text x="45.3345%" y="1135.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="45.0845%" y="1109" width="0.0186%" height="15" fill="rgb(224,27,38)"/><text x="45.3345%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (6 samples, 0.04%)</title><rect x="45.1032%" y="1221" width="0.0373%" height="15" fill="rgb(224,39,27)"/><text x="45.3532%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Send&gt;&gt; (6 samples, 0.04%)</title><rect x="45.1032%" y="1205" width="0.0373%" height="15" fill="rgb(215,92,29)"/><text x="45.3532%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Send&gt;&gt; (5 samples, 0.03%)</title><rect x="45.1094%" y="1189" width="0.0311%" height="15" fill="rgb(207,159,16)"/><text x="45.3594%" y="1199.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.03%)</title><rect x="45.1094%" y="1173" width="0.0311%" height="15" fill="rgb(238,163,47)"/><text x="45.3594%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.03%)</title><rect x="45.1094%" y="1157" width="0.0311%" height="15" fill="rgb(219,91,49)"/><text x="45.3594%" y="1167.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.03%)</title><rect x="45.1094%" y="1141" width="0.0311%" height="15" fill="rgb(227,167,31)"/><text x="45.3594%" y="1151.50"></text></g><g><title>_rjem_sdallocx (5 samples, 0.03%)</title><rect x="45.1094%" y="1125" width="0.0311%" height="15" fill="rgb(234,80,54)"/><text x="45.3594%" y="1135.50"></text></g><g><title>isfree (5 samples, 0.03%)</title><rect x="45.1094%" y="1109" width="0.0311%" height="15" fill="rgb(212,114,2)"/><text x="45.3594%" y="1119.50"></text></g><g><title>isdalloct (4 samples, 0.02%)</title><rect x="45.1156%" y="1093" width="0.0249%" height="15" fill="rgb(234,50,24)"/><text x="45.3656%" y="1103.50"></text></g><g><title>arena_sdalloc (4 samples, 0.02%)</title><rect x="45.1156%" y="1077" width="0.0249%" height="15" fill="rgb(221,68,8)"/><text x="45.3656%" y="1087.50"></text></g><g><title>tcache_dalloc_small (4 samples, 0.02%)</title><rect x="45.1156%" y="1061" width="0.0249%" height="15" fill="rgb(254,180,31)"/><text x="45.3656%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2 samples, 0.01%)</title><rect x="45.1467%" y="1189" width="0.0124%" height="15" fill="rgb(247,130,50)"/><text x="45.3967%" y="1199.50"></text></g><g><title>model::ordering::sort_par::&lt;impl model::ordering::Sortable for model::rho_types::Par&gt;::sort (4 samples, 0.02%)</title><rect x="45.1467%" y="1205" width="0.0249%" height="15" fill="rgb(211,109,4)"/><text x="45.3967%" y="1215.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by (2 samples, 0.01%)</title><rect x="45.1591%" y="1189" width="0.0124%" height="15" fill="rgb(238,50,21)"/><text x="45.4091%" y="1199.50"></text></g><g><title>alloc::slice::merge_sort (2 samples, 0.01%)</title><rect x="45.1591%" y="1173" width="0.0124%" height="15" fill="rgb(225,57,45)"/><text x="45.4091%" y="1183.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.04%)</title><rect x="45.1902%" y="1173" width="0.0435%" height="15" fill="rgb(209,196,50)"/><text x="45.4402%" y="1183.50"></text></g><g><title>core::ptr::read (7 samples, 0.04%)</title><rect x="45.1902%" y="1157" width="0.0435%" height="15" fill="rgb(242,140,13)"/><text x="45.4402%" y="1167.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.04%)</title><rect x="45.1902%" y="1141" width="0.0435%" height="15" fill="rgb(217,111,7)"/><text x="45.4402%" y="1151.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.04%)</title><rect x="45.2399%" y="1173" width="0.0435%" height="15" fill="rgb(253,193,51)"/><text x="45.4899%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (8 samples, 0.05%)</title><rect x="45.2834%" y="1173" width="0.0497%" height="15" fill="rgb(252,70,29)"/><text x="45.5334%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8 samples, 0.05%)</title><rect x="45.2834%" y="1157" width="0.0497%" height="15" fill="rgb(232,127,12)"/><text x="45.5334%" y="1167.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.05%)</title><rect x="45.2834%" y="1141" width="0.0497%" height="15" fill="rgb(211,180,21)"/><text x="45.5334%" y="1151.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.04%)</title><rect x="45.2896%" y="1125" width="0.0435%" height="15" fill="rgb(229,72,13)"/><text x="45.5396%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.02%)</title><rect x="45.3331%" y="1173" width="0.0186%" height="15" fill="rgb(240,211,49)"/><text x="45.5831%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="45.3331%" y="1157" width="0.0186%" height="15" fill="rgb(219,149,40)"/><text x="45.5831%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="45.3331%" y="1141" width="0.0186%" height="15" fill="rgb(210,127,46)"/><text x="45.5831%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.02%)</title><rect x="45.3331%" y="1125" width="0.0186%" height="15" fill="rgb(220,106,7)"/><text x="45.5831%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="45.3331%" y="1109" width="0.0186%" height="15" fill="rgb(249,31,22)"/><text x="45.5831%" y="1119.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="45.3331%" y="1093" width="0.0186%" height="15" fill="rgb(253,1,49)"/><text x="45.5831%" y="1103.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="45.3331%" y="1077" width="0.0186%" height="15" fill="rgb(227,144,33)"/><text x="45.5831%" y="1087.50"></text></g><g><title>_rjem_mallocx (2 samples, 0.01%)</title><rect x="45.3393%" y="1061" width="0.0124%" height="15" fill="rgb(249,163,44)"/><text x="45.5893%" y="1071.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::handle_comm_events (192 samples, 1.19%)</title><rect x="44.1710%" y="1269" width="1.1931%" height="15" fill="rgb(234,15,39)"/><text x="44.4210%" y="1279.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate (129 samples, 0.80%)</title><rect x="44.5625%" y="1253" width="0.8016%" height="15" fill="rgb(207,66,16)"/><text x="44.8125%" y="1263.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_match::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Match&gt;::evaluate (56 samples, 0.35%)</title><rect x="45.0162%" y="1237" width="0.3480%" height="15" fill="rgb(233,112,24)"/><text x="45.2662%" y="1247.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute (36 samples, 0.22%)</title><rect x="45.1404%" y="1221" width="0.2237%" height="15" fill="rgb(230,90,22)"/><text x="45.3904%" y="1231.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute_no_sort (31 samples, 0.19%)</title><rect x="45.1715%" y="1205" width="0.1926%" height="15" fill="rgb(229,61,13)"/><text x="45.4215%" y="1215.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::substitute_expressions_in_par (29 samples, 0.18%)</title><rect x="45.1839%" y="1189" width="0.1802%" height="15" fill="rgb(225,57,24)"/><text x="45.4339%" y="1199.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (2 samples, 0.01%)</title><rect x="45.4201%" y="1221" width="0.0124%" height="15" fill="rgb(208,169,48)"/><text x="45.6701%" y="1231.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.02%)</title><rect x="45.4325%" y="1221" width="0.0249%" height="15" fill="rgb(244,218,51)"/><text x="45.6825%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (2 samples, 0.01%)</title><rect x="45.4574%" y="1221" width="0.0124%" height="15" fill="rgb(214,148,10)"/><text x="45.7074%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="45.4884%" y="1125" width="0.0124%" height="15" fill="rgb(225,174,27)"/><text x="45.7384%" y="1135.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.03%)</title><rect x="45.5071%" y="1109" width="0.0311%" height="15" fill="rgb(230,96,26)"/><text x="45.7571%" y="1119.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (8 samples, 0.05%)</title><rect x="45.5009%" y="1125" width="0.0497%" height="15" fill="rgb(232,10,30)"/><text x="45.7509%" y="1135.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="45.5382%" y="1109" width="0.0124%" height="15" fill="rgb(222,8,50)"/><text x="45.7882%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (2 samples, 0.01%)</title><rect x="45.5506%" y="1125" width="0.0124%" height="15" fill="rgb(213,81,27)"/><text x="45.8006%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="45.5879%" y="1077" width="0.0186%" height="15" fill="rgb(245,50,10)"/><text x="45.8379%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="45.5879%" y="1061" width="0.0186%" height="15" fill="rgb(216,100,18)"/><text x="45.8379%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="45.5879%" y="1045" width="0.0186%" height="15" fill="rgb(236,147,54)"/><text x="45.8379%" y="1055.50"></text></g><g><title>_rjem_mallocx (3 samples, 0.02%)</title><rect x="45.5879%" y="1029" width="0.0186%" height="15" fill="rgb(205,143,26)"/><text x="45.8379%" y="1039.50"></text></g><g><title>imalloc (2 samples, 0.01%)</title><rect x="45.5941%" y="1013" width="0.0124%" height="15" fill="rgb(236,26,9)"/><text x="45.8441%" y="1023.50"></text></g><g><title>imalloc_body (2 samples, 0.01%)</title><rect x="45.5941%" y="997" width="0.0124%" height="15" fill="rgb(221,165,53)"/><text x="45.8441%" y="1007.50"></text></g><g><title>imalloc_no_sample (2 samples, 0.01%)</title><rect x="45.5941%" y="981" width="0.0124%" height="15" fill="rgb(214,110,17)"/><text x="45.8441%" y="991.50"></text></g><g><title>iallocztm (2 samples, 0.01%)</title><rect x="45.5941%" y="965" width="0.0124%" height="15" fill="rgb(237,197,12)"/><text x="45.8441%" y="975.50"></text></g><g><title>arena_malloc (2 samples, 0.01%)</title><rect x="45.5941%" y="949" width="0.0124%" height="15" fill="rgb(205,84,17)"/><text x="45.8441%" y="959.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.01%)</title><rect x="45.5941%" y="933" width="0.0124%" height="15" fill="rgb(237,18,45)"/><text x="45.8441%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.05%)</title><rect x="45.5630%" y="1125" width="0.0497%" height="15" fill="rgb(221,87,14)"/><text x="45.8130%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.04%)</title><rect x="45.5754%" y="1109" width="0.0373%" height="15" fill="rgb(238,186,15)"/><text x="45.8254%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.04%)</title><rect x="45.5754%" y="1093" width="0.0373%" height="15" fill="rgb(208,115,11)"/><text x="45.8254%" y="1103.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (25 samples, 0.16%)</title><rect x="45.4698%" y="1205" width="0.1554%" height="15" fill="rgb(254,175,0)"/><text x="45.7198%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (23 samples, 0.14%)</title><rect x="45.4822%" y="1189" width="0.1429%" height="15" fill="rgb(227,24,42)"/><text x="45.7322%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (22 samples, 0.14%)</title><rect x="45.4884%" y="1173" width="0.1367%" height="15" fill="rgb(223,211,37)"/><text x="45.7384%" y="1183.50"></text></g><g><title>alloc::slice::hack::to_vec (22 samples, 0.14%)</title><rect x="45.4884%" y="1157" width="0.1367%" height="15" fill="rgb(235,49,27)"/><text x="45.7384%" y="1167.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (22 samples, 0.14%)</title><rect x="45.4884%" y="1141" width="0.1367%" height="15" fill="rgb(254,97,51)"/><text x="45.7384%" y="1151.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2 samples, 0.01%)</title><rect x="45.6127%" y="1125" width="0.0124%" height="15" fill="rgb(249,51,40)"/><text x="45.8627%" y="1135.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (42 samples, 0.26%)</title><rect x="45.3766%" y="1253" width="0.2610%" height="15" fill="rgb(210,128,45)"/><text x="45.6266%" y="1263.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (42 samples, 0.26%)</title><rect x="45.3766%" y="1237" width="0.2610%" height="15" fill="rgb(224,137,50)"/><text x="45.6266%" y="1247.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_var::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S,model::rho_types::Par&gt; for model::rho_types::Var&gt;::evaluate (27 samples, 0.17%)</title><rect x="45.4698%" y="1221" width="0.1678%" height="15" fill="rgb(242,15,9)"/><text x="45.7198%" y="1231.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="45.6252%" y="1205" width="0.0124%" height="15" fill="rgb(233,187,41)"/><text x="45.8752%" y="1215.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (13 samples, 0.08%)</title><rect x="45.6562%" y="1205" width="0.0808%" height="15" fill="rgb(227,2,29)"/><text x="45.9062%" y="1215.50"></text></g><g><title>[libc-2.31.so] (12 samples, 0.07%)</title><rect x="45.6624%" y="1189" width="0.0746%" height="15" fill="rgb(222,70,3)"/><text x="45.9124%" y="1199.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.03%)</title><rect x="45.7370%" y="1189" width="0.0311%" height="15" fill="rgb(213,11,42)"/><text x="45.9870%" y="1199.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (9 samples, 0.06%)</title><rect x="45.7370%" y="1205" width="0.0559%" height="15" fill="rgb(225,150,9)"/><text x="45.9870%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (3 samples, 0.02%)</title><rect x="45.7743%" y="1189" width="0.0186%" height="15" fill="rgb(230,162,45)"/><text x="46.0243%" y="1199.50"></text></g><g><title>core::ptr::read (3 samples, 0.02%)</title><rect x="45.7743%" y="1173" width="0.0186%" height="15" fill="rgb(222,14,52)"/><text x="46.0243%" y="1183.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.02%)</title><rect x="45.7743%" y="1157" width="0.0186%" height="15" fill="rgb(254,198,14)"/><text x="46.0243%" y="1167.50"></text></g><g><title>[libc-2.31.so] (24 samples, 0.15%)</title><rect x="45.7929%" y="1205" width="0.1491%" height="15" fill="rgb(220,217,30)"/><text x="46.0429%" y="1215.50"></text></g><g><title>_rjem_sdallocx (3 samples, 0.02%)</title><rect x="45.9421%" y="1189" width="0.0186%" height="15" fill="rgb(215,146,41)"/><text x="46.1921%" y="1199.50"></text></g><g><title>isfree (3 samples, 0.02%)</title><rect x="45.9421%" y="1173" width="0.0186%" height="15" fill="rgb(217,27,36)"/><text x="46.1921%" y="1183.50"></text></g><g><title>isdalloct (3 samples, 0.02%)</title><rect x="45.9421%" y="1157" width="0.0186%" height="15" fill="rgb(219,218,39)"/><text x="46.1921%" y="1167.50"></text></g><g><title>arena_sdalloc (3 samples, 0.02%)</title><rect x="45.9421%" y="1141" width="0.0186%" height="15" fill="rgb(219,4,42)"/><text x="46.1921%" y="1151.50"></text></g><g><title>tcache_dalloc_small (3 samples, 0.02%)</title><rect x="45.9421%" y="1125" width="0.0186%" height="15" fill="rgb(249,119,36)"/><text x="46.1921%" y="1135.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (2 samples, 0.01%)</title><rect x="45.9483%" y="1109" width="0.0124%" height="15" fill="rgb(209,23,33)"/><text x="46.1983%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (2 samples, 0.01%)</title><rect x="45.9607%" y="1173" width="0.0124%" height="15" fill="rgb(211,10,0)"/><text x="46.2107%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (2 samples, 0.01%)</title><rect x="45.9607%" y="1157" width="0.0124%" height="15" fill="rgb(208,99,37)"/><text x="46.2107%" y="1167.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="45.9607%" y="1141" width="0.0124%" height="15" fill="rgb(213,132,31)"/><text x="46.2107%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.01%)</title><rect x="45.9607%" y="1125" width="0.0124%" height="15" fill="rgb(243,129,40)"/><text x="46.2107%" y="1135.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.01%)</title><rect x="45.9607%" y="1109" width="0.0124%" height="15" fill="rgb(210,66,33)"/><text x="46.2107%" y="1119.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.01%)</title><rect x="45.9607%" y="1093" width="0.0124%" height="15" fill="rgb(209,189,4)"/><text x="46.2107%" y="1103.50"></text></g><g><title>isfree (2 samples, 0.01%)</title><rect x="45.9607%" y="1077" width="0.0124%" height="15" fill="rgb(214,107,37)"/><text x="46.2107%" y="1087.50"></text></g><g><title>isdalloct (2 samples, 0.01%)</title><rect x="45.9607%" y="1061" width="0.0124%" height="15" fill="rgb(245,88,54)"/><text x="46.2107%" y="1071.50"></text></g><g><title>arena_sdalloc (2 samples, 0.01%)</title><rect x="45.9607%" y="1045" width="0.0124%" height="15" fill="rgb(205,146,20)"/><text x="46.2107%" y="1055.50"></text></g><g><title>tcache_dalloc_small (2 samples, 0.01%)</title><rect x="45.9607%" y="1029" width="0.0124%" height="15" fill="rgb(220,161,25)"/><text x="46.2107%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (3 samples, 0.02%)</title><rect x="45.9607%" y="1189" width="0.0186%" height="15" fill="rgb(215,152,15)"/><text x="46.2107%" y="1199.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (3 samples, 0.02%)</title><rect x="46.0104%" y="949" width="0.0186%" height="15" fill="rgb(233,192,44)"/><text x="46.2604%" y="959.50"></text></g><g><title>arena_dalloc_bin_locked_impl (3 samples, 0.02%)</title><rect x="46.0104%" y="933" width="0.0186%" height="15" fill="rgb(240,170,46)"/><text x="46.2604%" y="943.50"></text></g><g><title>_rjem_je_arena_decay (2 samples, 0.01%)</title><rect x="46.0291%" y="933" width="0.0124%" height="15" fill="rgb(207,104,33)"/><text x="46.2791%" y="943.50"></text></g><g><title>arena_decay_dirty (2 samples, 0.01%)</title><rect x="46.0291%" y="917" width="0.0124%" height="15" fill="rgb(219,21,39)"/><text x="46.2791%" y="927.50"></text></g><g><title>arena_decay_impl (2 samples, 0.01%)</title><rect x="46.0291%" y="901" width="0.0124%" height="15" fill="rgb(214,133,29)"/><text x="46.2791%" y="911.50"></text></g><g><title>malloc_mutex_unlock (2 samples, 0.01%)</title><rect x="46.0291%" y="885" width="0.0124%" height="15" fill="rgb(226,93,6)"/><text x="46.2791%" y="895.50"></text></g><g><title>__GI___pthread_mutex_unlock (2 samples, 0.01%)</title><rect x="46.0291%" y="869" width="0.0124%" height="15" fill="rgb(252,222,34)"/><text x="46.2791%" y="879.50"></text></g><g><title>arena_decay_ticks (3 samples, 0.02%)</title><rect x="46.0291%" y="949" width="0.0186%" height="15" fill="rgb(252,92,48)"/><text x="46.2791%" y="959.50"></text></g><g><title>extent_arena_get (3 samples, 0.02%)</title><rect x="46.0477%" y="949" width="0.0186%" height="15" fill="rgb(245,223,24)"/><text x="46.2977%" y="959.50"></text></g><g><title>atomic_load_p (3 samples, 0.02%)</title><rect x="46.0477%" y="933" width="0.0186%" height="15" fill="rgb(205,176,3)"/><text x="46.2977%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (14 samples, 0.09%)</title><rect x="45.9918%" y="1125" width="0.0870%" height="15" fill="rgb(235,151,15)"/><text x="46.2418%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (14 samples, 0.09%)</title><rect x="45.9918%" y="1109" width="0.0870%" height="15" fill="rgb(237,209,11)"/><text x="46.2418%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.09%)</title><rect x="45.9918%" y="1093" width="0.0870%" height="15" fill="rgb(243,227,24)"/><text x="46.2418%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.09%)</title><rect x="45.9918%" y="1077" width="0.0870%" height="15" fill="rgb(239,193,16)"/><text x="46.2418%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.09%)</title><rect x="45.9918%" y="1061" width="0.0870%" height="15" fill="rgb(231,27,9)"/><text x="46.2418%" y="1071.50"></text></g><g><title>_rjem_sdallocx (14 samples, 0.09%)</title><rect x="45.9918%" y="1045" width="0.0870%" height="15" fill="rgb(219,169,10)"/><text x="46.2418%" y="1055.50"></text></g><g><title>isfree (14 samples, 0.09%)</title><rect x="45.9918%" y="1029" width="0.0870%" height="15" fill="rgb(244,229,43)"/><text x="46.2418%" y="1039.50"></text></g><g><title>isdalloct (14 samples, 0.09%)</title><rect x="45.9918%" y="1013" width="0.0870%" height="15" fill="rgb(254,38,20)"/><text x="46.2418%" y="1023.50"></text></g><g><title>arena_sdalloc (14 samples, 0.09%)</title><rect x="45.9918%" y="997" width="0.0870%" height="15" fill="rgb(250,47,30)"/><text x="46.2418%" y="1007.50"></text></g><g><title>tcache_dalloc_small (14 samples, 0.09%)</title><rect x="45.9918%" y="981" width="0.0870%" height="15" fill="rgb(224,124,36)"/><text x="46.2418%" y="991.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (13 samples, 0.08%)</title><rect x="45.9980%" y="965" width="0.0808%" height="15" fill="rgb(246,68,51)"/><text x="46.2480%" y="975.50"></text></g><g><title>malloc_mutex_lock (2 samples, 0.01%)</title><rect x="46.0664%" y="949" width="0.0124%" height="15" fill="rgb(253,43,49)"/><text x="46.3164%" y="959.50"></text></g><g><title>malloc_mutex_trylock_final (2 samples, 0.01%)</title><rect x="46.0664%" y="933" width="0.0124%" height="15" fill="rgb(219,54,36)"/><text x="46.3164%" y="943.50"></text></g><g><title>__GI___pthread_mutex_trylock (2 samples, 0.01%)</title><rect x="46.0664%" y="917" width="0.0124%" height="15" fill="rgb(227,133,34)"/><text x="46.3164%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::expr::ExprInstance&gt;&gt; (24 samples, 0.15%)</title><rect x="45.9421%" y="1205" width="0.1491%" height="15" fill="rgb(247,227,15)"/><text x="46.1921%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::expr::ExprInstance&gt; (18 samples, 0.11%)</title><rect x="45.9794%" y="1189" width="0.1119%" height="15" fill="rgb(229,96,14)"/><text x="46.2294%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::EPlus&gt; (16 samples, 0.10%)</title><rect x="45.9918%" y="1173" width="0.0994%" height="15" fill="rgb(220,79,17)"/><text x="46.2418%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::Par&gt;&gt; (16 samples, 0.10%)</title><rect x="45.9918%" y="1157" width="0.0994%" height="15" fill="rgb(205,131,53)"/><text x="46.2418%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (16 samples, 0.10%)</title><rect x="45.9918%" y="1141" width="0.0994%" height="15" fill="rgb(209,50,29)"/><text x="46.2418%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (3 samples, 0.02%)</title><rect x="46.0912%" y="1205" width="0.0186%" height="15" fill="rgb(245,86,46)"/><text x="46.3412%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (2 samples, 0.01%)</title><rect x="46.0974%" y="1189" width="0.0124%" height="15" fill="rgb(235,66,46)"/><text x="46.3474%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (2 samples, 0.01%)</title><rect x="46.0974%" y="1173" width="0.0124%" height="15" fill="rgb(232,148,31)"/><text x="46.3474%" y="1183.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="46.0974%" y="1157" width="0.0124%" height="15" fill="rgb(217,149,8)"/><text x="46.3474%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.01%)</title><rect x="46.0974%" y="1141" width="0.0124%" height="15" fill="rgb(209,183,11)"/><text x="46.3474%" y="1151.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.01%)</title><rect x="46.0974%" y="1125" width="0.0124%" height="15" fill="rgb(208,55,20)"/><text x="46.3474%" y="1135.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.01%)</title><rect x="46.0974%" y="1109" width="0.0124%" height="15" fill="rgb(218,39,14)"/><text x="46.3474%" y="1119.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (2 samples, 0.01%)</title><rect x="46.1099%" y="1189" width="0.0124%" height="15" fill="rgb(216,169,33)"/><text x="46.3599%" y="1199.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.02%)</title><rect x="46.1223%" y="1173" width="0.0186%" height="15" fill="rgb(233,80,24)"/><text x="46.3723%" y="1183.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (16 samples, 0.10%)</title><rect x="46.1223%" y="1189" width="0.0994%" height="15" fill="rgb(213,179,31)"/><text x="46.3723%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (13 samples, 0.08%)</title><rect x="46.1409%" y="1173" width="0.0808%" height="15" fill="rgb(209,19,5)"/><text x="46.3909%" y="1183.50"></text></g><g><title>core::ptr::read (13 samples, 0.08%)</title><rect x="46.1409%" y="1157" width="0.0808%" height="15" fill="rgb(219,18,35)"/><text x="46.3909%" y="1167.50"></text></g><g><title>[libc-2.31.so] (13 samples, 0.08%)</title><rect x="46.1409%" y="1141" width="0.0808%" height="15" fill="rgb(209,169,16)"/><text x="46.3909%" y="1151.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::eval_eplus::&lt;impl rho_runtime::interpreter::reduce::eval_expression::ExprInstanceEvaluator&lt;S&gt; for model::rho_types::EPlus&gt;::evaluate (27 samples, 0.17%)</title><rect x="46.1099%" y="1205" width="0.1678%" height="15" fill="rgb(245,90,51)"/><text x="46.3599%" y="1215.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.06%)</title><rect x="46.2217%" y="1189" width="0.0559%" height="15" fill="rgb(220,99,45)"/><text x="46.4717%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.02%)</title><rect x="46.3274%" y="1157" width="0.0186%" height="15" fill="rgb(249,89,25)"/><text x="46.5774%" y="1167.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (16 samples, 0.10%)</title><rect x="46.3895%" y="1093" width="0.0994%" height="15" fill="rgb(239,193,0)"/><text x="46.6395%" y="1103.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.04%)</title><rect x="46.4454%" y="1077" width="0.0435%" height="15" fill="rgb(231,126,1)"/><text x="46.6954%" y="1087.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (22 samples, 0.14%)</title><rect x="46.3647%" y="1109" width="0.1367%" height="15" fill="rgb(243,166,3)"/><text x="46.6147%" y="1119.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="46.4889%" y="1093" width="0.0124%" height="15" fill="rgb(223,22,34)"/><text x="46.7389%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (3 samples, 0.02%)</title><rect x="46.5014%" y="1109" width="0.0186%" height="15" fill="rgb(251,52,51)"/><text x="46.7514%" y="1119.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (3 samples, 0.02%)</title><rect x="46.5573%" y="901" width="0.0186%" height="15" fill="rgb(221,165,28)"/><text x="46.8073%" y="911.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (3 samples, 0.02%)</title><rect x="46.5573%" y="885" width="0.0186%" height="15" fill="rgb(218,121,47)"/><text x="46.8073%" y="895.50"></text></g><g><title>imalloc_no_sample (6 samples, 0.04%)</title><rect x="46.5573%" y="965" width="0.0373%" height="15" fill="rgb(209,120,9)"/><text x="46.8073%" y="975.50"></text></g><g><title>iallocztm (6 samples, 0.04%)</title><rect x="46.5573%" y="949" width="0.0373%" height="15" fill="rgb(236,68,12)"/><text x="46.8073%" y="959.50"></text></g><g><title>arena_malloc (6 samples, 0.04%)</title><rect x="46.5573%" y="933" width="0.0373%" height="15" fill="rgb(225,194,26)"/><text x="46.8073%" y="943.50"></text></g><g><title>tcache_alloc_small (6 samples, 0.04%)</title><rect x="46.5573%" y="917" width="0.0373%" height="15" fill="rgb(231,84,39)"/><text x="46.8073%" y="927.50"></text></g><g><title>cache_bin_alloc_easy (3 samples, 0.02%)</title><rect x="46.5759%" y="901" width="0.0186%" height="15" fill="rgb(210,11,45)"/><text x="46.8259%" y="911.50"></text></g><g><title>imalloc_body (7 samples, 0.04%)</title><rect x="46.5573%" y="981" width="0.0435%" height="15" fill="rgb(224,54,52)"/><text x="46.8073%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.08%)</title><rect x="46.5262%" y="1061" width="0.0808%" height="15" fill="rgb(238,102,14)"/><text x="46.7762%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.08%)</title><rect x="46.5262%" y="1045" width="0.0808%" height="15" fill="rgb(243,160,52)"/><text x="46.7762%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.08%)</title><rect x="46.5262%" y="1029" width="0.0808%" height="15" fill="rgb(216,114,19)"/><text x="46.7762%" y="1039.50"></text></g><g><title>_rjem_mallocx (11 samples, 0.07%)</title><rect x="46.5387%" y="1013" width="0.0684%" height="15" fill="rgb(244,166,37)"/><text x="46.7887%" y="1023.50"></text></g><g><title>imalloc (9 samples, 0.06%)</title><rect x="46.5511%" y="997" width="0.0559%" height="15" fill="rgb(246,29,44)"/><text x="46.8011%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15 samples, 0.09%)</title><rect x="46.5200%" y="1109" width="0.0932%" height="15" fill="rgb(215,56,53)"/><text x="46.7700%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.09%)</title><rect x="46.5262%" y="1093" width="0.0870%" height="15" fill="rgb(217,60,2)"/><text x="46.7762%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.09%)</title><rect x="46.5262%" y="1077" width="0.0870%" height="15" fill="rgb(207,26,24)"/><text x="46.7762%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (50 samples, 0.31%)</title><rect x="46.3212%" y="1173" width="0.3107%" height="15" fill="rgb(252,210,15)"/><text x="46.5712%" y="1183.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (46 samples, 0.29%)</title><rect x="46.3460%" y="1157" width="0.2859%" height="15" fill="rgb(253,209,26)"/><text x="46.5960%" y="1167.50"></text></g><g><title>alloc::slice::hack::to_vec (46 samples, 0.29%)</title><rect x="46.3460%" y="1141" width="0.2859%" height="15" fill="rgb(238,170,14)"/><text x="46.5960%" y="1151.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (46 samples, 0.29%)</title><rect x="46.3460%" y="1125" width="0.2859%" height="15" fill="rgb(216,178,15)"/><text x="46.5960%" y="1135.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3 samples, 0.02%)</title><rect x="46.6132%" y="1109" width="0.0186%" height="15" fill="rgb(250,197,2)"/><text x="46.8632%" y="1119.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.02%)</title><rect x="46.6132%" y="1093" width="0.0186%" height="15" fill="rgb(212,70,42)"/><text x="46.8632%" y="1103.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (60 samples, 0.37%)</title><rect x="46.2777%" y="1189" width="0.3729%" height="15" fill="rgb(227,213,9)"/><text x="46.5277%" y="1199.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="46.6319%" y="1173" width="0.0186%" height="15" fill="rgb(245,99,25)"/><text x="46.8819%" y="1183.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (208 samples, 1.29%)</title><rect x="45.3642%" y="1269" width="1.2926%" height="15" fill="rgb(250,82,29)"/><text x="45.6142%" y="1279.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::eval_eplus::&lt;impl rho_runtime::interpreter::reduce::eval_expression::ExprInstanceEvaluator&lt;S&gt; for model::rho_types::EPlus&gt;::evaluate (164 samples, 1.02%)</title><rect x="45.6376%" y="1253" width="1.0191%" height="15" fill="rgb(241,226,54)"/><text x="45.8876%" y="1263.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (164 samples, 1.02%)</title><rect x="45.6376%" y="1237" width="1.0191%" height="15" fill="rgb(221,99,41)"/><text x="45.8876%" y="1247.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (164 samples, 1.02%)</title><rect x="45.6376%" y="1221" width="1.0191%" height="15" fill="rgb(213,90,21)"/><text x="45.8876%" y="1231.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_var::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S,model::rho_types::Par&gt; for model::rho_types::Var&gt;::evaluate (61 samples, 0.38%)</title><rect x="46.2777%" y="1205" width="0.3791%" height="15" fill="rgb(205,208,24)"/><text x="46.5277%" y="1215.50"></text></g><g><title>tokio::runtime::task::joinable (4 samples, 0.02%)</title><rect x="46.6692%" y="1173" width="0.0249%" height="15" fill="rgb(246,31,12)"/><text x="46.9192%" y="1183.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (4 samples, 0.02%)</title><rect x="46.6692%" y="1157" width="0.0249%" height="15" fill="rgb(213,154,6)"/><text x="46.9192%" y="1167.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.02%)</title><rect x="46.6692%" y="1141" width="0.0249%" height="15" fill="rgb(222,163,29)"/><text x="46.9192%" y="1151.50"></text></g><g><title>tokio::runtime::queue::Local&lt;T&gt;::push_back (3 samples, 0.02%)</title><rect x="46.7624%" y="1109" width="0.0186%" height="15" fill="rgb(227,201,8)"/><text x="47.0124%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (7 samples, 0.04%)</title><rect x="46.8059%" y="1061" width="0.0435%" height="15" fill="rgb(233,9,32)"/><text x="47.0559%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_swap (7 samples, 0.04%)</title><rect x="46.8059%" y="1045" width="0.0435%" height="15" fill="rgb(217,54,24)"/><text x="47.0559%" y="1055.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (12 samples, 0.07%)</title><rect x="46.7810%" y="1093" width="0.0746%" height="15" fill="rgb(235,192,0)"/><text x="47.0310%" y="1103.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (8 samples, 0.05%)</title><rect x="46.8059%" y="1077" width="0.0497%" height="15" fill="rgb(235,45,9)"/><text x="47.0559%" y="1087.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (124 samples, 0.77%)</title><rect x="46.8556%" y="1061" width="0.7706%" height="15" fill="rgb(246,42,40)"/><text x="47.1056%" y="1071.50"></text></g><g><title>syscall (124 samples, 0.77%)</title><rect x="46.8556%" y="1045" width="0.7706%" height="15" fill="rgb(248,111,24)"/><text x="47.1056%" y="1055.50"></text></g><g><title>[unknown] (120 samples, 0.75%)</title><rect x="46.8804%" y="1029" width="0.7457%" height="15" fill="rgb(249,65,22)"/><text x="47.1304%" y="1039.50"></text></g><g><title>[unknown] (118 samples, 0.73%)</title><rect x="46.8929%" y="1013" width="0.7333%" height="15" fill="rgb(238,111,51)"/><text x="47.1429%" y="1023.50"></text></g><g><title>[unknown] (116 samples, 0.72%)</title><rect x="46.9053%" y="997" width="0.7209%" height="15" fill="rgb(250,118,22)"/><text x="47.1553%" y="1007.50"></text></g><g><title>[unknown] (115 samples, 0.71%)</title><rect x="46.9115%" y="981" width="0.7146%" height="15" fill="rgb(234,84,26)"/><text x="47.1615%" y="991.50"></text></g><g><title>[unknown] (114 samples, 0.71%)</title><rect x="46.9177%" y="965" width="0.7084%" height="15" fill="rgb(243,172,12)"/><text x="47.1677%" y="975.50"></text></g><g><title>[unknown] (98 samples, 0.61%)</title><rect x="47.0172%" y="949" width="0.6090%" height="15" fill="rgb(236,150,49)"/><text x="47.2672%" y="959.50"></text></g><g><title>[unknown] (87 samples, 0.54%)</title><rect x="47.0855%" y="933" width="0.5406%" height="15" fill="rgb(225,197,26)"/><text x="47.3355%" y="943.50"></text></g><g><title>[unknown] (78 samples, 0.48%)</title><rect x="47.1414%" y="917" width="0.4847%" height="15" fill="rgb(214,17,42)"/><text x="47.3914%" y="927.50"></text></g><g><title>[unknown] (57 samples, 0.35%)</title><rect x="47.2719%" y="901" width="0.3542%" height="15" fill="rgb(224,165,40)"/><text x="47.5219%" y="911.50"></text></g><g><title>[unknown] (45 samples, 0.28%)</title><rect x="47.3465%" y="885" width="0.2796%" height="15" fill="rgb(246,100,4)"/><text x="47.5965%" y="895.50"></text></g><g><title>[unknown] (25 samples, 0.16%)</title><rect x="47.4708%" y="869" width="0.1554%" height="15" fill="rgb(222,103,0)"/><text x="47.7208%" y="879.50"></text></g><g><title>[unknown] (11 samples, 0.07%)</title><rect x="47.5578%" y="853" width="0.0684%" height="15" fill="rgb(227,189,26)"/><text x="47.8078%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="47.6137%" y="837" width="0.0124%" height="15" fill="rgb(214,202,17)"/><text x="47.8637%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (6 samples, 0.04%)</title><rect x="47.6261%" y="1061" width="0.0373%" height="15" fill="rgb(229,111,3)"/><text x="47.8761%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.04%)</title><rect x="47.6261%" y="1045" width="0.0373%" height="15" fill="rgb(229,172,15)"/><text x="47.8761%" y="1055.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (136 samples, 0.85%)</title><rect x="46.8556%" y="1093" width="0.8451%" height="15" fill="rgb(230,224,35)"/><text x="47.1056%" y="1103.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (136 samples, 0.85%)</title><rect x="46.8556%" y="1077" width="0.8451%" height="15" fill="rgb(251,141,6)"/><text x="47.1056%" y="1087.50"></text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (6 samples, 0.04%)</title><rect x="47.6634%" y="1061" width="0.0373%" height="15" fill="rgb(225,208,6)"/><text x="47.9134%" y="1071.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (6 samples, 0.04%)</title><rect x="47.6634%" y="1045" width="0.0373%" height="15" fill="rgb(246,181,16)"/><text x="47.9134%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (6 samples, 0.04%)</title><rect x="47.6634%" y="1029" width="0.0373%" height="15" fill="rgb(227,129,36)"/><text x="47.9134%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_sub (6 samples, 0.04%)</title><rect x="47.6634%" y="1013" width="0.0373%" height="15" fill="rgb(248,117,24)"/><text x="47.9134%" y="1023.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (6 samples, 0.04%)</title><rect x="47.7131%" y="1077" width="0.0373%" height="15" fill="rgb(214,185,35)"/><text x="47.9631%" y="1087.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (6 samples, 0.04%)</title><rect x="47.7131%" y="1061" width="0.0373%" height="15" fill="rgb(236,150,34)"/><text x="47.9631%" y="1071.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (6 samples, 0.04%)</title><rect x="47.7131%" y="1045" width="0.0373%" height="15" fill="rgb(243,228,27)"/><text x="47.9631%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (6 samples, 0.04%)</title><rect x="47.7131%" y="1029" width="0.0373%" height="15" fill="rgb(245,77,44)"/><text x="47.9631%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (6 samples, 0.04%)</title><rect x="47.7131%" y="1013" width="0.0373%" height="15" fill="rgb(235,214,42)"/><text x="47.9631%" y="1023.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate (190 samples, 1.18%)</title><rect x="46.6629%" y="1253" width="1.1807%" height="15" fill="rgb(221,74,3)"/><text x="46.9129%" y="1263.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation (190 samples, 1.18%)</title><rect x="46.6629%" y="1237" width="1.1807%" height="15" fill="rgb(206,121,29)"/><text x="46.9129%" y="1247.50"></text></g><g><title>tokio::task::spawn::spawn (190 samples, 1.18%)</title><rect x="46.6629%" y="1221" width="1.1807%" height="15" fill="rgb(249,131,53)"/><text x="46.9129%" y="1231.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (190 samples, 1.18%)</title><rect x="46.6629%" y="1205" width="1.1807%" height="15" fill="rgb(236,170,29)"/><text x="46.9129%" y="1215.50"></text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (189 samples, 1.17%)</title><rect x="46.6692%" y="1189" width="1.1745%" height="15" fill="rgb(247,96,15)"/><text x="46.9192%" y="1199.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (185 samples, 1.15%)</title><rect x="46.6940%" y="1173" width="1.1496%" height="15" fill="rgb(211,210,7)"/><text x="46.9440%" y="1183.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (184 samples, 1.14%)</title><rect x="46.7002%" y="1157" width="1.1434%" height="15" fill="rgb(240,88,50)"/><text x="46.9502%" y="1167.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (176 samples, 1.09%)</title><rect x="46.7499%" y="1141" width="1.0937%" height="15" fill="rgb(209,229,26)"/><text x="46.9999%" y="1151.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule_local (175 samples, 1.09%)</title><rect x="46.7562%" y="1125" width="1.0875%" height="15" fill="rgb(210,68,23)"/><text x="47.0062%" y="1135.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (171 samples, 1.06%)</title><rect x="46.7810%" y="1109" width="1.0626%" height="15" fill="rgb(229,180,13)"/><text x="47.0310%" y="1119.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::worker_to_notify (23 samples, 0.14%)</title><rect x="47.7007%" y="1093" width="0.1429%" height="15" fill="rgb(236,53,44)"/><text x="47.9507%" y="1103.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::notify_should_wakeup (15 samples, 0.09%)</title><rect x="47.7504%" y="1077" width="0.0932%" height="15" fill="rgb(244,214,29)"/><text x="48.0004%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (15 samples, 0.09%)</title><rect x="47.7504%" y="1061" width="0.0932%" height="15" fill="rgb(220,75,29)"/><text x="48.0004%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_add (15 samples, 0.09%)</title><rect x="47.7504%" y="1045" width="0.0932%" height="15" fill="rgb(214,183,37)"/><text x="48.0004%" y="1055.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_match::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Match&gt;::evaluate (192 samples, 1.19%)</title><rect x="46.6567%" y="1269" width="1.1931%" height="15" fill="rgb(239,117,29)"/><text x="46.9067%" y="1279.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.04%)</title><rect x="47.8623%" y="1141" width="0.0373%" height="15" fill="rgb(237,171,35)"/><text x="48.1123%" y="1151.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.04%)</title><rect x="47.9120%" y="1125" width="0.0435%" height="15" fill="rgb(229,178,53)"/><text x="48.1620%" y="1135.50"></text></g><g><title>_rjem_je_extents_alloc (2 samples, 0.01%)</title><rect x="47.9617%" y="869" width="0.0124%" height="15" fill="rgb(210,102,19)"/><text x="48.2117%" y="879.50"></text></g><g><title>extent_recycle (2 samples, 0.01%)</title><rect x="47.9617%" y="853" width="0.0124%" height="15" fill="rgb(235,127,22)"/><text x="48.2117%" y="863.50"></text></g><g><title>imalloc_no_sample (5 samples, 0.03%)</title><rect x="47.9555%" y="1013" width="0.0311%" height="15" fill="rgb(244,31,31)"/><text x="48.2055%" y="1023.50"></text></g><g><title>iallocztm (5 samples, 0.03%)</title><rect x="47.9555%" y="997" width="0.0311%" height="15" fill="rgb(231,43,21)"/><text x="48.2055%" y="1007.50"></text></g><g><title>arena_malloc (5 samples, 0.03%)</title><rect x="47.9555%" y="981" width="0.0311%" height="15" fill="rgb(217,131,35)"/><text x="48.2055%" y="991.50"></text></g><g><title>tcache_alloc_small (5 samples, 0.03%)</title><rect x="47.9555%" y="965" width="0.0311%" height="15" fill="rgb(221,149,4)"/><text x="48.2055%" y="975.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (5 samples, 0.03%)</title><rect x="47.9555%" y="949" width="0.0311%" height="15" fill="rgb(232,170,28)"/><text x="48.2055%" y="959.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (5 samples, 0.03%)</title><rect x="47.9555%" y="933" width="0.0311%" height="15" fill="rgb(238,56,10)"/><text x="48.2055%" y="943.50"></text></g><g><title>arena_bin_malloc_hard (5 samples, 0.03%)</title><rect x="47.9555%" y="917" width="0.0311%" height="15" fill="rgb(235,196,14)"/><text x="48.2055%" y="927.50"></text></g><g><title>arena_bin_nonfull_slab_get (5 samples, 0.03%)</title><rect x="47.9555%" y="901" width="0.0311%" height="15" fill="rgb(216,45,48)"/><text x="48.2055%" y="911.50"></text></g><g><title>arena_slab_alloc (4 samples, 0.02%)</title><rect x="47.9617%" y="885" width="0.0249%" height="15" fill="rgb(238,213,17)"/><text x="48.2117%" y="895.50"></text></g><g><title>arena_nactive_add (2 samples, 0.01%)</title><rect x="47.9741%" y="869" width="0.0124%" height="15" fill="rgb(212,13,2)"/><text x="48.2241%" y="879.50"></text></g><g><title>atomic_fetch_add_zu (2 samples, 0.01%)</title><rect x="47.9741%" y="853" width="0.0124%" height="15" fill="rgb(240,114,20)"/><text x="48.2241%" y="863.50"></text></g><g><title>tokio::runtime::task::joinable (21 samples, 0.13%)</title><rect x="47.8623%" y="1189" width="0.1305%" height="15" fill="rgb(228,41,40)"/><text x="48.1123%" y="1199.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (21 samples, 0.13%)</title><rect x="47.8623%" y="1173" width="0.1305%" height="15" fill="rgb(244,132,35)"/><text x="48.1123%" y="1183.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (21 samples, 0.13%)</title><rect x="47.8623%" y="1157" width="0.1305%" height="15" fill="rgb(253,189,4)"/><text x="48.1123%" y="1167.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (15 samples, 0.09%)</title><rect x="47.8996%" y="1141" width="0.0932%" height="15" fill="rgb(224,37,19)"/><text x="48.1496%" y="1151.50"></text></g><g><title>alloc::alloc::exchange_malloc (6 samples, 0.04%)</title><rect x="47.9555%" y="1125" width="0.0373%" height="15" fill="rgb(235,223,18)"/><text x="48.2055%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.04%)</title><rect x="47.9555%" y="1109" width="0.0373%" height="15" fill="rgb(235,163,25)"/><text x="48.2055%" y="1119.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.04%)</title><rect x="47.9555%" y="1093" width="0.0373%" height="15" fill="rgb(217,145,28)"/><text x="48.2055%" y="1103.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.04%)</title><rect x="47.9555%" y="1077" width="0.0373%" height="15" fill="rgb(223,223,32)"/><text x="48.2055%" y="1087.50"></text></g><g><title>_rjem_mallocx (6 samples, 0.04%)</title><rect x="47.9555%" y="1061" width="0.0373%" height="15" fill="rgb(227,189,39)"/><text x="48.2055%" y="1071.50"></text></g><g><title>imalloc (6 samples, 0.04%)</title><rect x="47.9555%" y="1045" width="0.0373%" height="15" fill="rgb(248,10,22)"/><text x="48.2055%" y="1055.50"></text></g><g><title>imalloc_body (6 samples, 0.04%)</title><rect x="47.9555%" y="1029" width="0.0373%" height="15" fill="rgb(248,46,39)"/><text x="48.2055%" y="1039.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (3 samples, 0.02%)</title><rect x="47.9928%" y="1077" width="0.0186%" height="15" fill="rgb(248,113,48)"/><text x="48.2428%" y="1087.50"></text></g><g><title>std::time::Instant::now (3 samples, 0.02%)</title><rect x="47.9928%" y="1061" width="0.0186%" height="15" fill="rgb(245,16,25)"/><text x="48.2428%" y="1071.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (3 samples, 0.02%)</title><rect x="47.9928%" y="1045" width="0.0186%" height="15" fill="rgb(249,152,16)"/><text x="48.2428%" y="1055.50"></text></g><g><title>std::sys::unix::time::inner::now (3 samples, 0.02%)</title><rect x="47.9928%" y="1029" width="0.0186%" height="15" fill="rgb(250,16,1)"/><text x="48.2428%" y="1039.50"></text></g><g><title>__clock_gettime (3 samples, 0.02%)</title><rect x="47.9928%" y="1013" width="0.0186%" height="15" fill="rgb(249,138,3)"/><text x="48.2428%" y="1023.50"></text></g><g><title>__vdso_clock_gettime (3 samples, 0.02%)</title><rect x="47.9928%" y="997" width="0.0186%" height="15" fill="rgb(227,71,41)"/><text x="48.2428%" y="1007.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation (28 samples, 0.17%)</title><rect x="47.8561%" y="1253" width="0.1740%" height="15" fill="rgb(209,184,23)"/><text x="48.1061%" y="1263.50"></text></g><g><title>tokio::task::spawn::spawn (27 samples, 0.17%)</title><rect x="47.8623%" y="1237" width="0.1678%" height="15" fill="rgb(223,215,31)"/><text x="48.1123%" y="1247.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (27 samples, 0.17%)</title><rect x="47.8623%" y="1221" width="0.1678%" height="15" fill="rgb(210,146,28)"/><text x="48.1123%" y="1231.50"></text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (27 samples, 0.17%)</title><rect x="47.8623%" y="1205" width="0.1678%" height="15" fill="rgb(209,183,41)"/><text x="48.1123%" y="1215.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (6 samples, 0.04%)</title><rect x="47.9928%" y="1189" width="0.0373%" height="15" fill="rgb(209,224,45)"/><text x="48.2428%" y="1199.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (6 samples, 0.04%)</title><rect x="47.9928%" y="1173" width="0.0373%" height="15" fill="rgb(224,209,51)"/><text x="48.2428%" y="1183.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (6 samples, 0.04%)</title><rect x="47.9928%" y="1157" width="0.0373%" height="15" fill="rgb(223,17,39)"/><text x="48.2428%" y="1167.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule_local (6 samples, 0.04%)</title><rect x="47.9928%" y="1141" width="0.0373%" height="15" fill="rgb(234,204,37)"/><text x="48.2428%" y="1151.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (6 samples, 0.04%)</title><rect x="47.9928%" y="1125" width="0.0373%" height="15" fill="rgb(236,120,5)"/><text x="48.2428%" y="1135.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (6 samples, 0.04%)</title><rect x="47.9928%" y="1109" width="0.0373%" height="15" fill="rgb(248,97,27)"/><text x="48.2428%" y="1119.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (6 samples, 0.04%)</title><rect x="47.9928%" y="1093" width="0.0373%" height="15" fill="rgb(240,66,17)"/><text x="48.2428%" y="1103.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (3 samples, 0.02%)</title><rect x="48.0114%" y="1077" width="0.0186%" height="15" fill="rgb(210,79,3)"/><text x="48.2614%" y="1087.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (3 samples, 0.02%)</title><rect x="48.0114%" y="1061" width="0.0186%" height="15" fill="rgb(214,176,27)"/><text x="48.2614%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (3 samples, 0.02%)</title><rect x="48.0114%" y="1045" width="0.0186%" height="15" fill="rgb(235,185,3)"/><text x="48.2614%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.02%)</title><rect x="48.0114%" y="1029" width="0.0186%" height="15" fill="rgb(227,24,12)"/><text x="48.2614%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (9 samples, 0.06%)</title><rect x="48.0301%" y="1221" width="0.0559%" height="15" fill="rgb(252,169,48)"/><text x="48.2801%" y="1231.50"></text></g><g><title>core::ptr::read (9 samples, 0.06%)</title><rect x="48.0301%" y="1205" width="0.0559%" height="15" fill="rgb(212,65,1)"/><text x="48.2801%" y="1215.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.06%)</title><rect x="48.0301%" y="1189" width="0.0559%" height="15" fill="rgb(242,39,24)"/><text x="48.2801%" y="1199.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="48.0860%" y="1205" width="0.0186%" height="15" fill="rgb(249,32,23)"/><text x="48.3360%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3 samples, 0.02%)</title><rect x="48.0860%" y="1189" width="0.0186%" height="15" fill="rgb(251,195,23)"/><text x="48.3360%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.02%)</title><rect x="48.0860%" y="1173" width="0.0186%" height="15" fill="rgb(236,174,8)"/><text x="48.3360%" y="1183.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="48.1233%" y="1061" width="0.0124%" height="15" fill="rgb(220,197,8)"/><text x="48.3733%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.03%)</title><rect x="48.1730%" y="1013" width="0.0311%" height="15" fill="rgb(240,108,37)"/><text x="48.4230%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="48.2103%" y="965" width="0.0124%" height="15" fill="rgb(232,176,24)"/><text x="48.4603%" y="975.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (10 samples, 0.06%)</title><rect x="48.2227%" y="949" width="0.0621%" height="15" fill="rgb(243,35,29)"/><text x="48.4727%" y="959.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.03%)</title><rect x="48.2538%" y="933" width="0.0311%" height="15" fill="rgb(210,37,18)"/><text x="48.5038%" y="943.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (14 samples, 0.09%)</title><rect x="48.2227%" y="965" width="0.0870%" height="15" fill="rgb(224,184,40)"/><text x="48.4727%" y="975.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.02%)</title><rect x="48.2849%" y="949" width="0.0249%" height="15" fill="rgb(236,39,29)"/><text x="48.5349%" y="959.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (2 samples, 0.01%)</title><rect x="48.3843%" y="757" width="0.0124%" height="15" fill="rgb(232,48,39)"/><text x="48.6343%" y="767.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (2 samples, 0.01%)</title><rect x="48.3843%" y="741" width="0.0124%" height="15" fill="rgb(236,34,42)"/><text x="48.6343%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.07%)</title><rect x="48.3470%" y="917" width="0.0684%" height="15" fill="rgb(243,106,37)"/><text x="48.5970%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.07%)</title><rect x="48.3470%" y="901" width="0.0684%" height="15" fill="rgb(218,96,6)"/><text x="48.5970%" y="911.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.06%)</title><rect x="48.3594%" y="885" width="0.0559%" height="15" fill="rgb(235,130,12)"/><text x="48.6094%" y="895.50"></text></g><g><title>_rjem_mallocx (7 samples, 0.04%)</title><rect x="48.3719%" y="869" width="0.0435%" height="15" fill="rgb(231,95,0)"/><text x="48.6219%" y="879.50"></text></g><g><title>imalloc (5 samples, 0.03%)</title><rect x="48.3843%" y="853" width="0.0311%" height="15" fill="rgb(228,12,23)"/><text x="48.6343%" y="863.50"></text></g><g><title>imalloc_body (5 samples, 0.03%)</title><rect x="48.3843%" y="837" width="0.0311%" height="15" fill="rgb(216,12,1)"/><text x="48.6343%" y="847.50"></text></g><g><title>imalloc_no_sample (5 samples, 0.03%)</title><rect x="48.3843%" y="821" width="0.0311%" height="15" fill="rgb(219,59,3)"/><text x="48.6343%" y="831.50"></text></g><g><title>iallocztm (5 samples, 0.03%)</title><rect x="48.3843%" y="805" width="0.0311%" height="15" fill="rgb(215,208,46)"/><text x="48.6343%" y="815.50"></text></g><g><title>arena_malloc (5 samples, 0.03%)</title><rect x="48.3843%" y="789" width="0.0311%" height="15" fill="rgb(254,224,29)"/><text x="48.6343%" y="799.50"></text></g><g><title>tcache_alloc_small (5 samples, 0.03%)</title><rect x="48.3843%" y="773" width="0.0311%" height="15" fill="rgb(232,14,29)"/><text x="48.6343%" y="783.50"></text></g><g><title>cache_bin_alloc_easy (3 samples, 0.02%)</title><rect x="48.3967%" y="757" width="0.0186%" height="15" fill="rgb(208,45,52)"/><text x="48.6467%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (20 samples, 0.12%)</title><rect x="48.3097%" y="965" width="0.1243%" height="15" fill="rgb(234,191,28)"/><text x="48.5597%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (16 samples, 0.10%)</title><rect x="48.3346%" y="949" width="0.0994%" height="15" fill="rgb(244,67,43)"/><text x="48.5846%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (16 samples, 0.10%)</title><rect x="48.3346%" y="933" width="0.0994%" height="15" fill="rgb(236,189,24)"/><text x="48.5846%" y="943.50"></text></g><g><title>core::alloc::layout::Layout::array (2 samples, 0.01%)</title><rect x="48.4216%" y="917" width="0.0124%" height="15" fill="rgb(239,214,33)"/><text x="48.6716%" y="927.50"></text></g><g><title>core::alloc::layout::Layout::repeat (2 samples, 0.01%)</title><rect x="48.4216%" y="901" width="0.0124%" height="15" fill="rgb(226,176,41)"/><text x="48.6716%" y="911.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (2 samples, 0.01%)</title><rect x="48.4216%" y="885" width="0.0124%" height="15" fill="rgb(248,47,8)"/><text x="48.6716%" y="895.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (2 samples, 0.01%)</title><rect x="48.4216%" y="869" width="0.0124%" height="15" fill="rgb(218,81,44)"/><text x="48.6716%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (52 samples, 0.32%)</title><rect x="48.1730%" y="1029" width="0.3231%" height="15" fill="rgb(213,98,6)"/><text x="48.4230%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (47 samples, 0.29%)</title><rect x="48.2041%" y="1013" width="0.2921%" height="15" fill="rgb(222,85,22)"/><text x="48.4541%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (47 samples, 0.29%)</title><rect x="48.2041%" y="997" width="0.2921%" height="15" fill="rgb(239,46,39)"/><text x="48.4541%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (47 samples, 0.29%)</title><rect x="48.2041%" y="981" width="0.2921%" height="15" fill="rgb(237,12,29)"/><text x="48.4541%" y="991.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (10 samples, 0.06%)</title><rect x="48.4340%" y="965" width="0.0621%" height="15" fill="rgb(214,77,8)"/><text x="48.6840%" y="975.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.02%)</title><rect x="48.4775%" y="949" width="0.0186%" height="15" fill="rgb(217,168,37)"/><text x="48.7275%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (63 samples, 0.39%)</title><rect x="48.1109%" y="1109" width="0.3915%" height="15" fill="rgb(221,217,23)"/><text x="48.3609%" y="1119.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (62 samples, 0.39%)</title><rect x="48.1171%" y="1093" width="0.3853%" height="15" fill="rgb(243,229,36)"/><text x="48.3671%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (62 samples, 0.39%)</title><rect x="48.1171%" y="1077" width="0.3853%" height="15" fill="rgb(251,163,40)"/><text x="48.3671%" y="1087.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (59 samples, 0.37%)</title><rect x="48.1357%" y="1061" width="0.3666%" height="15" fill="rgb(237,222,12)"/><text x="48.3857%" y="1071.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (59 samples, 0.37%)</title><rect x="48.1357%" y="1045" width="0.3666%" height="15" fill="rgb(248,132,6)"/><text x="48.3857%" y="1055.50"></text></g><g><title>core::ptr::write (8 samples, 0.05%)</title><rect x="48.5024%" y="1109" width="0.0497%" height="15" fill="rgb(227,167,50)"/><text x="48.7524%" y="1119.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="48.5396%" y="1093" width="0.0124%" height="15" fill="rgb(242,84,37)"/><text x="48.7896%" y="1103.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::clone::Clone&gt;::clone (73 samples, 0.45%)</title><rect x="48.1046%" y="1189" width="0.4536%" height="15" fill="rgb(212,4,50)"/><text x="48.3546%" y="1199.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::convert::From&lt;&amp;[&lt;A as smallvec::Array&gt;::Item]&gt;&gt;::from (73 samples, 0.45%)</title><rect x="48.1046%" y="1173" width="0.4536%" height="15" fill="rgb(230,228,32)"/><text x="48.3546%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (73 samples, 0.45%)</title><rect x="48.1046%" y="1157" width="0.4536%" height="15" fill="rgb(248,217,23)"/><text x="48.3546%" y="1167.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (73 samples, 0.45%)</title><rect x="48.1046%" y="1141" width="0.4536%" height="15" fill="rgb(238,197,32)"/><text x="48.3546%" y="1151.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (73 samples, 0.45%)</title><rect x="48.1046%" y="1125" width="0.4536%" height="15" fill="rgb(236,106,1)"/><text x="48.3546%" y="1135.50"></text></g><g><title>&lt;rho_runtime::interpreter::reduce::environment::Env&lt;T&gt; as core::clone::Clone&gt;::clone (79 samples, 0.49%)</title><rect x="48.1046%" y="1205" width="0.4909%" height="15" fill="rgb(219,228,13)"/><text x="48.3546%" y="1215.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.04%)</title><rect x="48.5583%" y="1189" width="0.0373%" height="15" fill="rgb(238,30,35)"/><text x="48.8083%" y="1199.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.02%)</title><rect x="48.5956%" y="1205" width="0.0186%" height="15" fill="rgb(236,70,23)"/><text x="48.8456%" y="1215.50"></text></g><g><title>core::future::from_generator (5 samples, 0.03%)</title><rect x="48.6142%" y="1205" width="0.0311%" height="15" fill="rgb(249,104,48)"/><text x="48.8642%" y="1215.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.03%)</title><rect x="48.6142%" y="1189" width="0.0311%" height="15" fill="rgb(254,117,50)"/><text x="48.8642%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::join::JoinHandle&lt;()&gt;&gt; (8 samples, 0.05%)</title><rect x="48.6453%" y="1205" width="0.0497%" height="15" fill="rgb(223,152,4)"/><text x="48.8953%" y="1215.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.05%)</title><rect x="48.6453%" y="1189" width="0.0497%" height="15" fill="rgb(245,6,2)"/><text x="48.8953%" y="1199.50"></text></g><g><title>tokio::runtime::task::state::State::drop_join_handle_fast (6 samples, 0.04%)</title><rect x="48.6577%" y="1173" width="0.0373%" height="15" fill="rgb(249,150,24)"/><text x="48.9077%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (5 samples, 0.03%)</title><rect x="48.6639%" y="1157" width="0.0311%" height="15" fill="rgb(228,185,42)"/><text x="48.9139%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (5 samples, 0.03%)</title><rect x="48.6639%" y="1141" width="0.0311%" height="15" fill="rgb(226,39,33)"/><text x="48.9139%" y="1151.50"></text></g><g><title>rho_runtime::interpreter::AsynWaitGroup::acquire (6 samples, 0.04%)</title><rect x="48.6950%" y="1205" width="0.0373%" height="15" fill="rgb(221,166,19)"/><text x="48.9450%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicI32::fetch_add (6 samples, 0.04%)</title><rect x="48.6950%" y="1189" width="0.0373%" height="15" fill="rgb(209,109,2)"/><text x="48.9450%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_add (6 samples, 0.04%)</title><rect x="48.6950%" y="1173" width="0.0373%" height="15" fill="rgb(252,216,26)"/><text x="48.9450%" y="1183.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.03%)</title><rect x="48.7323%" y="1189" width="0.0311%" height="15" fill="rgb(227,173,36)"/><text x="48.9823%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::spawner::Spawner&gt; (2 samples, 0.01%)</title><rect x="48.7634%" y="1189" width="0.0124%" height="15" fill="rgb(209,90,7)"/><text x="49.0134%" y="1199.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate (126 samples, 0.78%)</title><rect x="48.0301%" y="1237" width="0.7830%" height="15" fill="rgb(250,194,11)"/><text x="48.2801%" y="1247.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation (117 samples, 0.73%)</title><rect x="48.0860%" y="1221" width="0.7271%" height="15" fill="rgb(220,72,50)"/><text x="48.3360%" y="1231.50"></text></g><g><title>tokio::task::spawn::spawn (13 samples, 0.08%)</title><rect x="48.7323%" y="1205" width="0.0808%" height="15" fill="rgb(222,106,48)"/><text x="48.9823%" y="1215.50"></text></g><g><title>tokio::runtime::context::spawn_handle (6 samples, 0.04%)</title><rect x="48.7758%" y="1189" width="0.0373%" height="15" fill="rgb(216,220,45)"/><text x="49.0258%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.04%)</title><rect x="48.7758%" y="1173" width="0.0373%" height="15" fill="rgb(234,112,18)"/><text x="49.0258%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.04%)</title><rect x="48.7758%" y="1157" width="0.0373%" height="15" fill="rgb(206,179,9)"/><text x="49.0258%" y="1167.50"></text></g><g><title>tokio::runtime::context::spawn_handle::{{closure}} (6 samples, 0.04%)</title><rect x="48.7758%" y="1141" width="0.0373%" height="15" fill="rgb(215,115,40)"/><text x="49.0258%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.04%)</title><rect x="48.7758%" y="1125" width="0.0373%" height="15" fill="rgb(222,69,34)"/><text x="49.0258%" y="1135.50"></text></g><g><title>tokio::runtime::context::spawn_handle::{{closure}}::{{closure}} (6 samples, 0.04%)</title><rect x="48.7758%" y="1109" width="0.0373%" height="15" fill="rgb(209,161,10)"/><text x="49.0258%" y="1119.50"></text></g><g><title>&lt;tokio::runtime::spawner::Spawner as core::clone::Clone&gt;::clone (6 samples, 0.04%)</title><rect x="48.7758%" y="1093" width="0.0373%" height="15" fill="rgb(217,6,38)"/><text x="49.0258%" y="1103.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate (160 samples, 0.99%)</title><rect x="47.8499%" y="1269" width="0.9943%" height="15" fill="rgb(229,229,48)"/><text x="48.0999%" y="1279.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_match::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Match&gt;::evaluate (131 samples, 0.81%)</title><rect x="48.0301%" y="1253" width="0.8141%" height="15" fill="rgb(225,21,28)"/><text x="48.2801%" y="1263.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute (5 samples, 0.03%)</title><rect x="48.8131%" y="1237" width="0.0311%" height="15" fill="rgb(206,33,13)"/><text x="49.0631%" y="1247.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute_no_sort (5 samples, 0.03%)</title><rect x="48.8131%" y="1221" width="0.0311%" height="15" fill="rgb(242,178,17)"/><text x="49.0631%" y="1231.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::substitute_expressions_in_par (5 samples, 0.03%)</title><rect x="48.8131%" y="1205" width="0.0311%" height="15" fill="rgb(220,162,5)"/><text x="49.0631%" y="1215.50"></text></g><g><title>model::rho_types::Par::append_expr (5 samples, 0.03%)</title><rect x="48.8131%" y="1189" width="0.0311%" height="15" fill="rgb(210,33,43)"/><text x="49.0631%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.02%)</title><rect x="48.8193%" y="1173" width="0.0249%" height="15" fill="rgb(216,116,54)"/><text x="49.0693%" y="1183.50"></text></g><g><title>core::ptr::write (4 samples, 0.02%)</title><rect x="48.8193%" y="1157" width="0.0249%" height="15" fill="rgb(249,92,24)"/><text x="49.0693%" y="1167.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.02%)</title><rect x="48.8193%" y="1141" width="0.0249%" height="15" fill="rgb(231,189,14)"/><text x="49.0693%" y="1151.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_expr::dispatch (2 samples, 0.01%)</title><rect x="48.8441%" y="1269" width="0.0124%" height="15" fill="rgb(230,8,41)"/><text x="49.0941%" y="1279.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::substitute_expressions_in_par (6 samples, 0.04%)</title><rect x="48.8566%" y="1269" width="0.0373%" height="15" fill="rgb(249,7,27)"/><text x="49.1066%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.03%)</title><rect x="49.0306%" y="965" width="0.0311%" height="15" fill="rgb(232,86,5)"/><text x="49.2806%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.05%)</title><rect x="49.0306%" y="981" width="0.0497%" height="15" fill="rgb(224,175,18)"/><text x="49.2806%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.02%)</title><rect x="49.0616%" y="965" width="0.0186%" height="15" fill="rgb(220,129,12)"/><text x="49.3116%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.02%)</title><rect x="49.0616%" y="949" width="0.0186%" height="15" fill="rgb(210,19,36)"/><text x="49.3116%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.02%)</title><rect x="49.0616%" y="933" width="0.0186%" height="15" fill="rgb(219,96,14)"/><text x="49.3116%" y="943.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (21 samples, 0.13%)</title><rect x="48.9871%" y="997" width="0.1305%" height="15" fill="rgb(249,106,1)"/><text x="49.2371%" y="1007.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.04%)</title><rect x="49.0803%" y="981" width="0.0373%" height="15" fill="rgb(249,155,20)"/><text x="49.3303%" y="991.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (5 samples, 0.03%)</title><rect x="49.0865%" y="965" width="0.0311%" height="15" fill="rgb(244,168,9)"/><text x="49.3365%" y="975.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (5 samples, 0.03%)</title><rect x="49.0865%" y="949" width="0.0311%" height="15" fill="rgb(216,23,50)"/><text x="49.3365%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.03%)</title><rect x="49.0865%" y="933" width="0.0311%" height="15" fill="rgb(224,219,20)"/><text x="49.3365%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.02%)</title><rect x="49.0927%" y="917" width="0.0249%" height="15" fill="rgb(222,156,15)"/><text x="49.3427%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.02%)</title><rect x="49.0927%" y="901" width="0.0249%" height="15" fill="rgb(231,97,17)"/><text x="49.3427%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.02%)</title><rect x="49.0927%" y="885" width="0.0249%" height="15" fill="rgb(218,70,48)"/><text x="49.3427%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.02%)</title><rect x="49.0927%" y="869" width="0.0249%" height="15" fill="rgb(212,196,52)"/><text x="49.3427%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.02%)</title><rect x="49.0927%" y="853" width="0.0249%" height="15" fill="rgb(243,203,18)"/><text x="49.3427%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.02%)</title><rect x="49.0927%" y="837" width="0.0249%" height="15" fill="rgb(252,125,41)"/><text x="49.3427%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.02%)</title><rect x="49.0927%" y="821" width="0.0249%" height="15" fill="rgb(223,180,33)"/><text x="49.3427%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.02%)</title><rect x="49.0927%" y="805" width="0.0249%" height="15" fill="rgb(254,159,46)"/><text x="49.3427%" y="815.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.02%)</title><rect x="49.0927%" y="789" width="0.0249%" height="15" fill="rgb(254,38,10)"/><text x="49.3427%" y="799.50"></text></g><g><title>_rjem_mallocx (3 samples, 0.02%)</title><rect x="49.0989%" y="773" width="0.0186%" height="15" fill="rgb(208,217,32)"/><text x="49.3489%" y="783.50"></text></g><g><title>imalloc (3 samples, 0.02%)</title><rect x="49.0989%" y="757" width="0.0186%" height="15" fill="rgb(221,120,13)"/><text x="49.3489%" y="767.50"></text></g><g><title>imalloc_body (3 samples, 0.02%)</title><rect x="49.0989%" y="741" width="0.0186%" height="15" fill="rgb(246,54,52)"/><text x="49.3489%" y="751.50"></text></g><g><title>imalloc_no_sample (2 samples, 0.01%)</title><rect x="49.1051%" y="725" width="0.0124%" height="15" fill="rgb(242,34,25)"/><text x="49.3551%" y="735.50"></text></g><g><title>iallocztm (2 samples, 0.01%)</title><rect x="49.1051%" y="709" width="0.0124%" height="15" fill="rgb(247,209,9)"/><text x="49.3551%" y="719.50"></text></g><g><title>arena_malloc (2 samples, 0.01%)</title><rect x="49.1051%" y="693" width="0.0124%" height="15" fill="rgb(228,71,26)"/><text x="49.3551%" y="703.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.01%)</title><rect x="49.1051%" y="677" width="0.0124%" height="15" fill="rgb(222,145,49)"/><text x="49.3551%" y="687.50"></text></g><g><title>cache_bin_alloc_easy (2 samples, 0.01%)</title><rect x="49.1051%" y="661" width="0.0124%" height="15" fill="rgb(218,121,17)"/><text x="49.3551%" y="671.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (30 samples, 0.19%)</title><rect x="48.9809%" y="1013" width="0.1864%" height="15" fill="rgb(244,50,7)"/><text x="49.2309%" y="1023.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.05%)</title><rect x="49.1176%" y="997" width="0.0497%" height="15" fill="rgb(246,229,37)"/><text x="49.3676%" y="1007.50"></text></g><g><title>&lt;model::rho_types::MatchCase as core::clone::Clone&gt;::clone (32 samples, 0.20%)</title><rect x="48.9809%" y="1029" width="0.1989%" height="15" fill="rgb(225,18,5)"/><text x="49.2309%" y="1039.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="49.1673%" y="1013" width="0.0124%" height="15" fill="rgb(213,204,8)"/><text x="49.4173%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="49.1797%" y="1029" width="0.0186%" height="15" fill="rgb(238,103,6)"/><text x="49.4297%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="49.1797%" y="1013" width="0.0186%" height="15" fill="rgb(222,25,35)"/><text x="49.4297%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.02%)</title><rect x="49.1797%" y="997" width="0.0186%" height="15" fill="rgb(213,203,35)"/><text x="49.4297%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="49.1797%" y="981" width="0.0186%" height="15" fill="rgb(221,79,53)"/><text x="49.4297%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="49.1797%" y="965" width="0.0186%" height="15" fill="rgb(243,200,35)"/><text x="49.4297%" y="975.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="49.1797%" y="949" width="0.0186%" height="15" fill="rgb(248,60,25)"/><text x="49.4297%" y="959.50"></text></g><g><title>_rjem_mallocx (3 samples, 0.02%)</title><rect x="49.1797%" y="933" width="0.0186%" height="15" fill="rgb(227,53,46)"/><text x="49.4297%" y="943.50"></text></g><g><title>imalloc (3 samples, 0.02%)</title><rect x="49.1797%" y="917" width="0.0186%" height="15" fill="rgb(216,120,32)"/><text x="49.4297%" y="927.50"></text></g><g><title>imalloc_body (3 samples, 0.02%)</title><rect x="49.1797%" y="901" width="0.0186%" height="15" fill="rgb(220,134,1)"/><text x="49.4297%" y="911.50"></text></g><g><title>imalloc_no_sample (3 samples, 0.02%)</title><rect x="49.1797%" y="885" width="0.0186%" height="15" fill="rgb(237,168,5)"/><text x="49.4297%" y="895.50"></text></g><g><title>iallocztm (3 samples, 0.02%)</title><rect x="49.1797%" y="869" width="0.0186%" height="15" fill="rgb(231,100,33)"/><text x="49.4297%" y="879.50"></text></g><g><title>arena_malloc (3 samples, 0.02%)</title><rect x="49.1797%" y="853" width="0.0186%" height="15" fill="rgb(236,177,47)"/><text x="49.4297%" y="863.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.01%)</title><rect x="49.1859%" y="837" width="0.0124%" height="15" fill="rgb(235,7,49)"/><text x="49.4359%" y="847.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (2 samples, 0.01%)</title><rect x="49.1859%" y="821" width="0.0124%" height="15" fill="rgb(232,119,22)"/><text x="49.4359%" y="831.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (2 samples, 0.01%)</title><rect x="49.1859%" y="805" width="0.0124%" height="15" fill="rgb(254,73,53)"/><text x="49.4359%" y="815.50"></text></g><g><title>arena_bin_malloc_hard (2 samples, 0.01%)</title><rect x="49.1859%" y="789" width="0.0124%" height="15" fill="rgb(251,35,20)"/><text x="49.4359%" y="799.50"></text></g><g><title>arena_bin_nonfull_slab_get (2 samples, 0.01%)</title><rect x="49.1859%" y="773" width="0.0124%" height="15" fill="rgb(241,119,20)"/><text x="49.4359%" y="783.50"></text></g><g><title>malloc_mutex_unlock (2 samples, 0.01%)</title><rect x="49.1859%" y="757" width="0.0124%" height="15" fill="rgb(207,102,14)"/><text x="49.4359%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (38 samples, 0.24%)</title><rect x="48.9809%" y="1093" width="0.2361%" height="15" fill="rgb(248,201,50)"/><text x="49.2309%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (38 samples, 0.24%)</title><rect x="48.9809%" y="1077" width="0.2361%" height="15" fill="rgb(222,185,44)"/><text x="49.2309%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (38 samples, 0.24%)</title><rect x="48.9809%" y="1061" width="0.2361%" height="15" fill="rgb(218,107,18)"/><text x="49.2309%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (38 samples, 0.24%)</title><rect x="48.9809%" y="1045" width="0.2361%" height="15" fill="rgb(237,177,39)"/><text x="49.2309%" y="1055.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3 samples, 0.02%)</title><rect x="49.1984%" y="1029" width="0.0186%" height="15" fill="rgb(246,69,6)"/><text x="49.4484%" y="1039.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.02%)</title><rect x="49.1984%" y="1013" width="0.0186%" height="15" fill="rgb(234,208,37)"/><text x="49.4484%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="49.2170%" y="933" width="0.0124%" height="15" fill="rgb(225,4,6)"/><text x="49.4670%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="49.2170%" y="917" width="0.0124%" height="15" fill="rgb(233,45,0)"/><text x="49.4670%" y="927.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="49.2170%" y="901" width="0.0124%" height="15" fill="rgb(226,136,5)"/><text x="49.4670%" y="911.50"></text></g><g><title>_rjem_mallocx (2 samples, 0.01%)</title><rect x="49.2170%" y="885" width="0.0124%" height="15" fill="rgb(211,91,47)"/><text x="49.4670%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="49.2170%" y="981" width="0.0186%" height="15" fill="rgb(242,88,51)"/><text x="49.4670%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="49.2170%" y="965" width="0.0186%" height="15" fill="rgb(230,91,28)"/><text x="49.4670%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.02%)</title><rect x="49.2170%" y="949" width="0.0186%" height="15" fill="rgb(254,186,29)"/><text x="49.4670%" y="959.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (5 samples, 0.03%)</title><rect x="49.2170%" y="1077" width="0.0311%" height="15" fill="rgb(238,6,4)"/><text x="49.4670%" y="1087.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (5 samples, 0.03%)</title><rect x="49.2170%" y="1061" width="0.0311%" height="15" fill="rgb(221,151,16)"/><text x="49.4670%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.03%)</title><rect x="49.2170%" y="1045" width="0.0311%" height="15" fill="rgb(251,143,52)"/><text x="49.4670%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.03%)</title><rect x="49.2170%" y="1029" width="0.0311%" height="15" fill="rgb(206,90,15)"/><text x="49.4670%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.03%)</title><rect x="49.2170%" y="1013" width="0.0311%" height="15" fill="rgb(218,35,8)"/><text x="49.4670%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.03%)</title><rect x="49.2170%" y="997" width="0.0311%" height="15" fill="rgb(239,215,6)"/><text x="49.4670%" y="1007.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.01%)</title><rect x="49.2356%" y="981" width="0.0124%" height="15" fill="rgb(245,116,39)"/><text x="49.4856%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="49.2356%" y="965" width="0.0124%" height="15" fill="rgb(242,65,28)"/><text x="49.4856%" y="975.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="49.2356%" y="949" width="0.0124%" height="15" fill="rgb(252,132,53)"/><text x="49.4856%" y="959.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="49.2481%" y="1077" width="0.0249%" height="15" fill="rgb(224,159,50)"/><text x="49.4981%" y="1087.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="49.2543%" y="1061" width="0.0186%" height="15" fill="rgb(224,93,4)"/><text x="49.5043%" y="1071.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="49.2543%" y="1045" width="0.0186%" height="15" fill="rgb(208,81,34)"/><text x="49.5043%" y="1055.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="49.2543%" y="1029" width="0.0186%" height="15" fill="rgb(233,92,54)"/><text x="49.5043%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="49.2543%" y="1013" width="0.0186%" height="15" fill="rgb(237,21,14)"/><text x="49.5043%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.02%)</title><rect x="49.2543%" y="997" width="0.0186%" height="15" fill="rgb(249,128,51)"/><text x="49.5043%" y="1007.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.02%)</title><rect x="49.2543%" y="981" width="0.0186%" height="15" fill="rgb(223,129,24)"/><text x="49.5043%" y="991.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.02%)</title><rect x="49.2543%" y="965" width="0.0186%" height="15" fill="rgb(231,168,25)"/><text x="49.5043%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="49.2543%" y="949" width="0.0186%" height="15" fill="rgb(224,39,20)"/><text x="49.5043%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="49.2543%" y="933" width="0.0186%" height="15" fill="rgb(225,152,53)"/><text x="49.5043%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.02%)</title><rect x="49.2543%" y="917" width="0.0186%" height="15" fill="rgb(252,17,24)"/><text x="49.5043%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="49.2543%" y="901" width="0.0186%" height="15" fill="rgb(250,114,30)"/><text x="49.5043%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="49.2543%" y="885" width="0.0186%" height="15" fill="rgb(229,5,4)"/><text x="49.5043%" y="895.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="49.2543%" y="869" width="0.0186%" height="15" fill="rgb(225,176,49)"/><text x="49.5043%" y="879.50"></text></g><g><title>_rjem_mallocx (2 samples, 0.01%)</title><rect x="49.2605%" y="853" width="0.0124%" height="15" fill="rgb(224,221,49)"/><text x="49.5105%" y="863.50"></text></g><g><title>imalloc (2 samples, 0.01%)</title><rect x="49.2605%" y="837" width="0.0124%" height="15" fill="rgb(253,169,27)"/><text x="49.5105%" y="847.50"></text></g><g><title>imalloc_body (2 samples, 0.01%)</title><rect x="49.2605%" y="821" width="0.0124%" height="15" fill="rgb(211,206,16)"/><text x="49.5105%" y="831.50"></text></g><g><title>imalloc_no_sample (2 samples, 0.01%)</title><rect x="49.2605%" y="805" width="0.0124%" height="15" fill="rgb(244,87,35)"/><text x="49.5105%" y="815.50"></text></g><g><title>iallocztm (2 samples, 0.01%)</title><rect x="49.2605%" y="789" width="0.0124%" height="15" fill="rgb(246,28,10)"/><text x="49.5105%" y="799.50"></text></g><g><title>arena_malloc (2 samples, 0.01%)</title><rect x="49.2605%" y="773" width="0.0124%" height="15" fill="rgb(229,12,44)"/><text x="49.5105%" y="783.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.01%)</title><rect x="49.2605%" y="757" width="0.0124%" height="15" fill="rgb(210,145,37)"/><text x="49.5105%" y="767.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (14 samples, 0.09%)</title><rect x="49.2170%" y="1093" width="0.0870%" height="15" fill="rgb(227,112,52)"/><text x="49.4670%" y="1103.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.03%)</title><rect x="49.2729%" y="1077" width="0.0311%" height="15" fill="rgb(238,155,34)"/><text x="49.5229%" y="1087.50"></text></g><g><title>&lt;model::rho_types::Match as core::clone::Clone&gt;::clone (56 samples, 0.35%)</title><rect x="48.9746%" y="1109" width="0.3480%" height="15" fill="rgb(239,226,36)"/><text x="49.2246%" y="1119.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.02%)</title><rect x="49.3040%" y="1093" width="0.0186%" height="15" fill="rgb(230,16,23)"/><text x="49.5540%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="49.3226%" y="1109" width="0.0186%" height="15" fill="rgb(236,171,36)"/><text x="49.5726%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="49.3289%" y="1093" width="0.0124%" height="15" fill="rgb(221,22,14)"/><text x="49.5789%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.01%)</title><rect x="49.3289%" y="1077" width="0.0124%" height="15" fill="rgb(242,43,11)"/><text x="49.5789%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (65 samples, 0.40%)</title><rect x="48.9560%" y="1173" width="0.4039%" height="15" fill="rgb(232,69,23)"/><text x="49.2060%" y="1183.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (64 samples, 0.40%)</title><rect x="48.9622%" y="1157" width="0.3977%" height="15" fill="rgb(216,180,54)"/><text x="49.2122%" y="1167.50"></text></g><g><title>alloc::slice::hack::to_vec (64 samples, 0.40%)</title><rect x="48.9622%" y="1141" width="0.3977%" height="15" fill="rgb(216,5,24)"/><text x="49.2122%" y="1151.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (64 samples, 0.40%)</title><rect x="48.9622%" y="1125" width="0.3977%" height="15" fill="rgb(225,89,9)"/><text x="49.2122%" y="1135.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3 samples, 0.02%)</title><rect x="49.3413%" y="1109" width="0.0186%" height="15" fill="rgb(243,75,33)"/><text x="49.5913%" y="1119.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.02%)</title><rect x="49.3413%" y="1093" width="0.0186%" height="15" fill="rgb(247,141,45)"/><text x="49.5913%" y="1103.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (72 samples, 0.45%)</title><rect x="48.9374%" y="1189" width="0.4474%" height="15" fill="rgb(232,177,36)"/><text x="49.1874%" y="1199.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="49.3599%" y="1173" width="0.0249%" height="15" fill="rgb(219,125,36)"/><text x="49.6099%" y="1183.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="49.3599%" y="1157" width="0.0249%" height="15" fill="rgb(227,94,9)"/><text x="49.6099%" y="1167.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="49.3599%" y="1141" width="0.0249%" height="15" fill="rgb(240,34,52)"/><text x="49.6099%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="49.3661%" y="1125" width="0.0186%" height="15" fill="rgb(216,45,12)"/><text x="49.6161%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.01%)</title><rect x="49.3724%" y="1109" width="0.0124%" height="15" fill="rgb(246,21,19)"/><text x="49.6224%" y="1119.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.01%)</title><rect x="49.3724%" y="1093" width="0.0124%" height="15" fill="rgb(213,98,42)"/><text x="49.6224%" y="1103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.01%)</title><rect x="49.3724%" y="1077" width="0.0124%" height="15" fill="rgb(250,136,47)"/><text x="49.6224%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="49.3724%" y="1061" width="0.0124%" height="15" fill="rgb(251,124,27)"/><text x="49.6224%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="49.3724%" y="1045" width="0.0124%" height="15" fill="rgb(229,180,14)"/><text x="49.6224%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.01%)</title><rect x="49.3724%" y="1029" width="0.0124%" height="15" fill="rgb(245,216,25)"/><text x="49.6224%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="49.3724%" y="1013" width="0.0124%" height="15" fill="rgb(251,43,5)"/><text x="49.6224%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="49.3724%" y="997" width="0.0124%" height="15" fill="rgb(250,128,24)"/><text x="49.6224%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="49.3724%" y="981" width="0.0124%" height="15" fill="rgb(217,117,27)"/><text x="49.6224%" y="991.50"></text></g><g><title>_rjem_mallocx (2 samples, 0.01%)</title><rect x="49.3724%" y="965" width="0.0124%" height="15" fill="rgb(245,147,4)"/><text x="49.6224%" y="975.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (76 samples, 0.47%)</title><rect x="48.9374%" y="1205" width="0.4723%" height="15" fill="rgb(242,201,35)"/><text x="49.1874%" y="1215.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.02%)</title><rect x="49.3848%" y="1189" width="0.0249%" height="15" fill="rgb(218,181,1)"/><text x="49.6348%" y="1199.50"></text></g><g><title>&lt;rho_runtime::storage::TaggedContinuation as core::clone::Clone&gt;::clone (77 samples, 0.48%)</title><rect x="48.9374%" y="1237" width="0.4785%" height="15" fill="rgb(222,6,29)"/><text x="49.1874%" y="1247.50"></text></g><g><title>&lt;model::rho_types::ParWithRandom as core::clone::Clone&gt;::clone (77 samples, 0.48%)</title><rect x="48.9374%" y="1221" width="0.4785%" height="15" fill="rgb(208,186,3)"/><text x="49.1874%" y="1231.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (2 samples, 0.01%)</title><rect x="49.4159%" y="1237" width="0.0124%" height="15" fill="rgb(216,36,26)"/><text x="49.6659%" y="1247.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.06%)</title><rect x="49.4283%" y="1237" width="0.0559%" height="15" fill="rgb(248,201,23)"/><text x="49.6783%" y="1247.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::remove (4 samples, 0.02%)</title><rect x="49.5401%" y="1125" width="0.0249%" height="15" fill="rgb(251,170,31)"/><text x="49.7901%" y="1135.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.02%)</title><rect x="49.5650%" y="1077" width="0.0186%" height="15" fill="rgb(207,110,25)"/><text x="49.8150%" y="1087.50"></text></g><g><title>&lt;blake3::Hash as core::hash::Hash&gt;::hash (3 samples, 0.02%)</title><rect x="49.5650%" y="1061" width="0.0186%" height="15" fill="rgb(250,54,15)"/><text x="49.8150%" y="1071.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (3 samples, 0.02%)</title><rect x="49.5650%" y="1045" width="0.0186%" height="15" fill="rgb(227,68,33)"/><text x="49.8150%" y="1055.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (3 samples, 0.02%)</title><rect x="49.5650%" y="1029" width="0.0186%" height="15" fill="rgb(238,34,41)"/><text x="49.8150%" y="1039.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (3 samples, 0.02%)</title><rect x="49.5650%" y="1013" width="0.0186%" height="15" fill="rgb(220,11,15)"/><text x="49.8150%" y="1023.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="49.5650%" y="997" width="0.0186%" height="15" fill="rgb(246,111,35)"/><text x="49.8150%" y="1007.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (2 samples, 0.01%)</title><rect x="49.5712%" y="981" width="0.0124%" height="15" fill="rgb(209,88,53)"/><text x="49.8212%" y="991.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_mul (2 samples, 0.01%)</title><rect x="49.5712%" y="965" width="0.0124%" height="15" fill="rgb(231,185,47)"/><text x="49.8212%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.09%)</title><rect x="49.5091%" y="1189" width="0.0870%" height="15" fill="rgb(233,154,1)"/><text x="49.7591%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 0.08%)</title><rect x="49.5153%" y="1173" width="0.0808%" height="15" fill="rgb(225,15,46)"/><text x="49.7653%" y="1183.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (11 samples, 0.07%)</title><rect x="49.5277%" y="1157" width="0.0684%" height="15" fill="rgb(211,135,41)"/><text x="49.7777%" y="1167.50"></text></g><g><title>rho_runtime::storage::tuplecell::TupleCell::join::{{closure}} (11 samples, 0.07%)</title><rect x="49.5277%" y="1141" width="0.0684%" height="15" fill="rgb(208,54,0)"/><text x="49.7777%" y="1151.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.03%)</title><rect x="49.5650%" y="1125" width="0.0311%" height="15" fill="rgb(244,136,14)"/><text x="49.8150%" y="1135.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.03%)</title><rect x="49.5650%" y="1109" width="0.0311%" height="15" fill="rgb(241,56,14)"/><text x="49.8150%" y="1119.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (5 samples, 0.03%)</title><rect x="49.5650%" y="1093" width="0.0311%" height="15" fill="rgb(205,80,24)"/><text x="49.8150%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (2 samples, 0.01%)</title><rect x="49.5836%" y="1077" width="0.0124%" height="15" fill="rgb(220,57,4)"/><text x="49.8336%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value::{{closure}} (2 samples, 0.01%)</title><rect x="49.5836%" y="1061" width="0.0124%" height="15" fill="rgb(226,193,50)"/><text x="49.8336%" y="1071.50"></text></g><g><title>&lt;blake3::Hash as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="49.5836%" y="1045" width="0.0124%" height="15" fill="rgb(231,168,22)"/><text x="49.8336%" y="1055.50"></text></g><g><title>constant_time_eq::constant_time_eq_32 (2 samples, 0.01%)</title><rect x="49.5836%" y="1029" width="0.0124%" height="15" fill="rgb(254,215,14)"/><text x="49.8336%" y="1039.50"></text></g><g><title>constant_time_eq::constant_time_ne_32 (2 samples, 0.01%)</title><rect x="49.5836%" y="1013" width="0.0124%" height="15" fill="rgb(211,115,16)"/><text x="49.8336%" y="1023.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (20 samples, 0.12%)</title><rect x="49.4904%" y="1205" width="0.1243%" height="15" fill="rgb(236,210,16)"/><text x="49.7404%" y="1215.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::reserve (2 samples, 0.01%)</title><rect x="49.6023%" y="1189" width="0.0124%" height="15" fill="rgb(221,94,12)"/><text x="49.8523%" y="1199.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_reserve (2 samples, 0.01%)</title><rect x="49.6023%" y="1173" width="0.0124%" height="15" fill="rgb(235,218,49)"/><text x="49.8523%" y="1183.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (22 samples, 0.14%)</title><rect x="49.4904%" y="1221" width="0.1367%" height="15" fill="rgb(217,114,14)"/><text x="49.7404%" y="1231.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="49.6147%" y="1205" width="0.0124%" height="15" fill="rgb(216,145,22)"/><text x="49.8647%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (24 samples, 0.15%)</title><rect x="49.4904%" y="1237" width="0.1491%" height="15" fill="rgb(217,112,39)"/><text x="49.7404%" y="1247.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="49.6271%" y="1221" width="0.0124%" height="15" fill="rgb(225,85,32)"/><text x="49.8771%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rho_runtime::storage::tuplecell::SharedJoinedConsumer&gt;&gt; (2 samples, 0.01%)</title><rect x="49.6396%" y="1237" width="0.0124%" height="15" fill="rgb(245,209,47)"/><text x="49.8896%" y="1247.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="49.6396%" y="1221" width="0.0124%" height="15" fill="rgb(218,220,15)"/><text x="49.8896%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.01%)</title><rect x="49.6396%" y="1205" width="0.0124%" height="15" fill="rgb(222,202,31)"/><text x="49.8896%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.01%)</title><rect x="49.6396%" y="1189" width="0.0124%" height="15" fill="rgb(243,203,4)"/><text x="49.8896%" y="1199.50"></text></g><g><title>&lt;&amp;mut smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (3 samples, 0.02%)</title><rect x="49.6706%" y="1221" width="0.0186%" height="15" fill="rgb(237,92,17)"/><text x="49.9206%" y="1231.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (2 samples, 0.01%)</title><rect x="49.6769%" y="1205" width="0.0124%" height="15" fill="rgb(231,119,7)"/><text x="49.9269%" y="1215.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="49.6769%" y="1189" width="0.0124%" height="15" fill="rgb(237,82,41)"/><text x="49.9269%" y="1199.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.04%)</title><rect x="49.6893%" y="1221" width="0.0435%" height="15" fill="rgb(226,81,48)"/><text x="49.9393%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (7 samples, 0.04%)</title><rect x="49.6893%" y="1205" width="0.0435%" height="15" fill="rgb(234,70,51)"/><text x="49.9393%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_add (7 samples, 0.04%)</title><rect x="49.6893%" y="1189" width="0.0435%" height="15" fill="rgb(251,86,4)"/><text x="49.9393%" y="1199.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="49.7390%" y="1189" width="0.0124%" height="15" fill="rgb(244,144,28)"/><text x="49.9890%" y="1199.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="49.7390%" y="1173" width="0.0124%" height="15" fill="rgb(232,161,39)"/><text x="49.9890%" y="1183.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="49.7390%" y="1157" width="0.0124%" height="15" fill="rgb(247,34,51)"/><text x="49.9890%" y="1167.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="49.7390%" y="1141" width="0.0124%" height="15" fill="rgb(225,132,2)"/><text x="49.9890%" y="1151.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.02%)</title><rect x="49.7514%" y="1093" width="0.0249%" height="15" fill="rgb(209,159,44)"/><text x="50.0014%" y="1103.50"></text></g><g><title>&lt;blake3::Hash as core::hash::Hash&gt;::hash (3 samples, 0.02%)</title><rect x="49.7576%" y="1077" width="0.0186%" height="15" fill="rgb(251,214,1)"/><text x="50.0076%" y="1087.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (3 samples, 0.02%)</title><rect x="49.7576%" y="1061" width="0.0186%" height="15" fill="rgb(247,84,47)"/><text x="50.0076%" y="1071.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (3 samples, 0.02%)</title><rect x="49.7576%" y="1045" width="0.0186%" height="15" fill="rgb(240,111,43)"/><text x="50.0076%" y="1055.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (3 samples, 0.02%)</title><rect x="49.7576%" y="1029" width="0.0186%" height="15" fill="rgb(215,214,35)"/><text x="50.0076%" y="1039.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write (3 samples, 0.02%)</title><rect x="49.7576%" y="1013" width="0.0186%" height="15" fill="rgb(248,207,23)"/><text x="50.0076%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value::{{closure}} (2 samples, 0.01%)</title><rect x="49.7763%" y="1077" width="0.0124%" height="15" fill="rgb(214,186,4)"/><text x="50.0263%" y="1087.50"></text></g><g><title>&lt;blake3::Hash as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="49.7763%" y="1061" width="0.0124%" height="15" fill="rgb(220,133,22)"/><text x="50.0263%" y="1071.50"></text></g><g><title>constant_time_eq::constant_time_eq_32 (2 samples, 0.01%)</title><rect x="49.7763%" y="1045" width="0.0124%" height="15" fill="rgb(239,134,19)"/><text x="50.0263%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::probe_seq (2 samples, 0.01%)</title><rect x="49.7887%" y="1045" width="0.0124%" height="15" fill="rgb(250,140,9)"/><text x="50.0387%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (11 samples, 0.07%)</title><rect x="49.7390%" y="1221" width="0.0684%" height="15" fill="rgb(225,59,14)"/><text x="49.9890%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.07%)</title><rect x="49.7390%" y="1205" width="0.0684%" height="15" fill="rgb(214,152,51)"/><text x="49.9890%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (9 samples, 0.06%)</title><rect x="49.7514%" y="1189" width="0.0559%" height="15" fill="rgb(251,227,43)"/><text x="50.0014%" y="1199.50"></text></g><g><title>rho_runtime::storage::tuplecell::TupleCell::match_one::{{closure}} (9 samples, 0.06%)</title><rect x="49.7514%" y="1173" width="0.0559%" height="15" fill="rgb(241,96,17)"/><text x="50.0014%" y="1183.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (9 samples, 0.06%)</title><rect x="49.7514%" y="1157" width="0.0559%" height="15" fill="rgb(234,198,43)"/><text x="50.0014%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (9 samples, 0.06%)</title><rect x="49.7514%" y="1141" width="0.0559%" height="15" fill="rgb(220,108,29)"/><text x="50.0014%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.06%)</title><rect x="49.7514%" y="1125" width="0.0559%" height="15" fill="rgb(226,163,33)"/><text x="50.0014%" y="1135.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (9 samples, 0.06%)</title><rect x="49.7514%" y="1109" width="0.0559%" height="15" fill="rgb(205,194,45)"/><text x="50.0014%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (5 samples, 0.03%)</title><rect x="49.7763%" y="1093" width="0.0311%" height="15" fill="rgb(206,143,44)"/><text x="50.0263%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::iter_hash (3 samples, 0.02%)</title><rect x="49.7887%" y="1077" width="0.0186%" height="15" fill="rgb(236,136,36)"/><text x="50.0387%" y="1087.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="49.7887%" y="1061" width="0.0186%" height="15" fill="rgb(249,172,42)"/><text x="50.0387%" y="1071.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="49.8074%" y="1173" width="0.0124%" height="15" fill="rgb(216,139,23)"/><text x="50.0574%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;*const rho_runtime::storage::tuplecell::SharedJoinedConsumer,smallvec::SmallVec&lt;[[usize: 2]: 3]&gt;,core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="49.8074%" y="1221" width="0.0186%" height="15" fill="rgb(207,166,20)"/><text x="50.0574%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;*const rho_runtime::storage::tuplecell::SharedJoinedConsumer,smallvec::SmallVec&lt;[[usize: 2]: 3]&gt;,core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="49.8074%" y="1205" width="0.0186%" height="15" fill="rgb(210,209,22)"/><text x="50.0574%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(*const rho_runtime::storage::tuplecell::SharedJoinedConsumer,smallvec::SmallVec&lt;[[usize: 2]: 3]&gt;)&gt;&gt; (3 samples, 0.02%)</title><rect x="49.8074%" y="1189" width="0.0186%" height="15" fill="rgb(232,118,20)"/><text x="50.0574%" y="1199.50"></text></g><g><title>rho_runtime::storage::tuplecell::TupleCell::find_first_dataum_position (2 samples, 0.01%)</title><rect x="49.8260%" y="1221" width="0.0124%" height="15" fill="rgb(238,113,42)"/><text x="50.0760%" y="1231.50"></text></g><g><title>core::mem::swap (2 samples, 0.01%)</title><rect x="49.8446%" y="1125" width="0.0124%" height="15" fill="rgb(231,42,5)"/><text x="50.0946%" y="1135.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.01%)</title><rect x="49.8446%" y="1109" width="0.0124%" height="15" fill="rgb(243,166,24)"/><text x="50.0946%" y="1119.50"></text></g><g><title>core::ptr::swap_nonoverlapping (2 samples, 0.01%)</title><rect x="49.8446%" y="1093" width="0.0124%" height="15" fill="rgb(237,226,12)"/><text x="50.0946%" y="1103.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (2 samples, 0.01%)</title><rect x="49.8446%" y="1077" width="0.0124%" height="15" fill="rgb(229,133,24)"/><text x="50.0946%" y="1087.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="49.8446%" y="1061" width="0.0124%" height="15" fill="rgb(238,33,43)"/><text x="50.0946%" y="1071.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (7 samples, 0.04%)</title><rect x="49.8446%" y="1221" width="0.0435%" height="15" fill="rgb(227,59,38)"/><text x="50.0946%" y="1231.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry (7 samples, 0.04%)</title><rect x="49.8446%" y="1205" width="0.0435%" height="15" fill="rgb(230,97,0)"/><text x="50.0946%" y="1215.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::reserve (7 samples, 0.04%)</title><rect x="49.8446%" y="1189" width="0.0435%" height="15" fill="rgb(250,173,50)"/><text x="50.0946%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve (7 samples, 0.04%)</title><rect x="49.8446%" y="1173" width="0.0435%" height="15" fill="rgb(240,15,50)"/><text x="50.0946%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (7 samples, 0.04%)</title><rect x="49.8446%" y="1157" width="0.0435%" height="15" fill="rgb(221,93,22)"/><text x="50.0946%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::resize (7 samples, 0.04%)</title><rect x="49.8446%" y="1141" width="0.0435%" height="15" fill="rgb(245,180,53)"/><text x="50.0946%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::fallible_with_capacity (5 samples, 0.03%)</title><rect x="49.8571%" y="1125" width="0.0311%" height="15" fill="rgb(231,88,51)"/><text x="50.1071%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::new_uninitialized (4 samples, 0.02%)</title><rect x="49.8633%" y="1109" width="0.0249%" height="15" fill="rgb(240,58,21)"/><text x="50.1133%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="49.8695%" y="1093" width="0.0186%" height="15" fill="rgb(237,21,10)"/><text x="50.1195%" y="1103.50"></text></g><g><title>_rjem_mallocx (3 samples, 0.02%)</title><rect x="49.8695%" y="1077" width="0.0186%" height="15" fill="rgb(218,43,11)"/><text x="50.1195%" y="1087.50"></text></g><g><title>imalloc (3 samples, 0.02%)</title><rect x="49.8695%" y="1061" width="0.0186%" height="15" fill="rgb(218,221,29)"/><text x="50.1195%" y="1071.50"></text></g><g><title>imalloc_body (3 samples, 0.02%)</title><rect x="49.8695%" y="1045" width="0.0186%" height="15" fill="rgb(214,118,42)"/><text x="50.1195%" y="1055.50"></text></g><g><title>sz_size2index (2 samples, 0.01%)</title><rect x="49.8757%" y="1029" width="0.0124%" height="15" fill="rgb(251,200,26)"/><text x="50.1257%" y="1039.50"></text></g><g><title>rho_runtime::storage::tuplecell::TupleCell::match_one (41 samples, 0.25%)</title><rect x="49.6520%" y="1237" width="0.2548%" height="15" fill="rgb(237,101,39)"/><text x="49.9020%" y="1247.50"></text></g><g><title>core::ptr::write (2 samples, 0.01%)</title><rect x="49.9130%" y="1221" width="0.0124%" height="15" fill="rgb(251,117,11)"/><text x="50.1630%" y="1231.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="49.9130%" y="1205" width="0.0124%" height="15" fill="rgb(216,223,23)"/><text x="50.1630%" y="1215.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::push (4 samples, 0.02%)</title><rect x="49.9068%" y="1237" width="0.0249%" height="15" fill="rgb(251,54,12)"/><text x="50.1568%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="49.9316%" y="1221" width="0.0186%" height="15" fill="rgb(254,176,54)"/><text x="50.1816%" y="1231.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="49.9316%" y="1205" width="0.0186%" height="15" fill="rgb(210,32,8)"/><text x="50.1816%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.02%)</title><rect x="49.9316%" y="1189" width="0.0186%" height="15" fill="rgb(235,52,38)"/><text x="50.1816%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.02%)</title><rect x="49.9316%" y="1173" width="0.0186%" height="15" fill="rgb(231,4,44)"/><text x="50.1816%" y="1183.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.02%)</title><rect x="49.9565%" y="1189" width="0.0249%" height="15" fill="rgb(249,2,32)"/><text x="50.2065%" y="1199.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (16 samples, 0.10%)</title><rect x="49.9503%" y="1221" width="0.0994%" height="15" fill="rgb(224,65,26)"/><text x="50.2003%" y="1231.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send::{{closure}} (16 samples, 0.10%)</title><rect x="49.9503%" y="1205" width="0.0994%" height="15" fill="rgb(250,73,40)"/><text x="50.2003%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt; (11 samples, 0.07%)</title><rect x="49.9814%" y="1189" width="0.0684%" height="15" fill="rgb(253,177,16)"/><text x="50.2314%" y="1199.50"></text></g><g><title>tokio::sync::oneshot::State::set_complete (33 samples, 0.21%)</title><rect x="50.0497%" y="1205" width="0.2051%" height="15" fill="rgb(217,32,34)"/><text x="50.2997%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (33 samples, 0.21%)</title><rect x="50.0497%" y="1189" width="0.2051%" height="15" fill="rgb(212,7,10)"/><text x="50.2997%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_or (33 samples, 0.21%)</title><rect x="50.0497%" y="1173" width="0.2051%" height="15" fill="rgb(245,89,8)"/><text x="50.2997%" y="1183.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::schedule (6 samples, 0.04%)</title><rect x="50.2548%" y="1093" width="0.0373%" height="15" fill="rgb(237,16,53)"/><text x="50.5048%" y="1103.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (6 samples, 0.04%)</title><rect x="50.2548%" y="1077" width="0.0373%" height="15" fill="rgb(250,204,30)"/><text x="50.5048%" y="1087.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::schedule::{{closure}} (6 samples, 0.04%)</title><rect x="50.2548%" y="1061" width="0.0373%" height="15" fill="rgb(208,77,27)"/><text x="50.5048%" y="1071.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::schedule (6 samples, 0.04%)</title><rect x="50.2548%" y="1045" width="0.0373%" height="15" fill="rgb(250,204,28)"/><text x="50.5048%" y="1055.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (6 samples, 0.04%)</title><rect x="50.2548%" y="1029" width="0.0373%" height="15" fill="rgb(244,63,21)"/><text x="50.5048%" y="1039.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (6 samples, 0.04%)</title><rect x="50.2548%" y="1013" width="0.0373%" height="15" fill="rgb(236,85,44)"/><text x="50.5048%" y="1023.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (3 samples, 0.02%)</title><rect x="50.2734%" y="997" width="0.0186%" height="15" fill="rgb(215,98,4)"/><text x="50.5234%" y="1007.50"></text></g><g><title>rho_runtime::storage::tuplecell::TupleCell::join (228 samples, 1.42%)</title><rect x="48.9125%" y="1253" width="1.4169%" height="15" fill="rgb(235,38,11)"/><text x="49.1625%" y="1263.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (64 samples, 0.40%)</title><rect x="49.9316%" y="1237" width="0.3977%" height="15" fill="rgb(254,186,25)"/><text x="50.1816%" y="1247.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::complete (45 samples, 0.28%)</title><rect x="50.0497%" y="1221" width="0.2796%" height="15" fill="rgb(225,55,31)"/><text x="50.2997%" y="1231.50"></text></g><g><title>tokio::sync::oneshot::Task::with_task (12 samples, 0.07%)</title><rect x="50.2548%" y="1205" width="0.0746%" height="15" fill="rgb(211,15,21)"/><text x="50.5048%" y="1215.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (12 samples, 0.07%)</title><rect x="50.2548%" y="1189" width="0.0746%" height="15" fill="rgb(215,187,41)"/><text x="50.5048%" y="1199.50"></text></g><g><title>tokio::sync::oneshot::Task::with_task::{{closure}} (12 samples, 0.07%)</title><rect x="50.2548%" y="1173" width="0.0746%" height="15" fill="rgb(248,69,32)"/><text x="50.5048%" y="1183.50"></text></g><g><title>core::ops::function::FnOnce::call_once (12 samples, 0.07%)</title><rect x="50.2548%" y="1157" width="0.0746%" height="15" fill="rgb(252,102,52)"/><text x="50.5048%" y="1167.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (12 samples, 0.07%)</title><rect x="50.2548%" y="1141" width="0.0746%" height="15" fill="rgb(253,140,32)"/><text x="50.5048%" y="1151.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (12 samples, 0.07%)</title><rect x="50.2548%" y="1125" width="0.0746%" height="15" fill="rgb(216,56,42)"/><text x="50.5048%" y="1135.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_ref (12 samples, 0.07%)</title><rect x="50.2548%" y="1109" width="0.0746%" height="15" fill="rgb(216,184,14)"/><text x="50.5048%" y="1119.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified (6 samples, 0.04%)</title><rect x="50.2921%" y="1093" width="0.0373%" height="15" fill="rgb(237,187,27)"/><text x="50.5421%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (6 samples, 0.04%)</title><rect x="50.2921%" y="1077" width="0.0373%" height="15" fill="rgb(219,65,3)"/><text x="50.5421%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_or (6 samples, 0.04%)</title><rect x="50.2921%" y="1061" width="0.0373%" height="15" fill="rgb(245,83,25)"/><text x="50.5421%" y="1071.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (13 samples, 0.08%)</title><rect x="50.3418%" y="1237" width="0.0808%" height="15" fill="rgb(214,205,45)"/><text x="50.5918%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (13 samples, 0.08%)</title><rect x="50.3418%" y="1221" width="0.0808%" height="15" fill="rgb(241,20,18)"/><text x="50.5918%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_add (13 samples, 0.08%)</title><rect x="50.3418%" y="1205" width="0.0808%" height="15" fill="rgb(232,163,23)"/><text x="50.5918%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::GUnforgeable&gt;&gt; (19 samples, 0.12%)</title><rect x="50.4288%" y="1205" width="0.1181%" height="15" fill="rgb(214,5,46)"/><text x="50.6788%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.12%)</title><rect x="50.4288%" y="1189" width="0.1181%" height="15" fill="rgb(229,78,17)"/><text x="50.6788%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::GUnforgeable]&gt; (19 samples, 0.12%)</title><rect x="50.4288%" y="1173" width="0.1181%" height="15" fill="rgb(248,89,10)"/><text x="50.6788%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::GUnforgeable&gt; (19 samples, 0.12%)</title><rect x="50.4288%" y="1157" width="0.1181%" height="15" fill="rgb(248,54,15)"/><text x="50.6788%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::g_unforgeable::UnfInstance&gt;&gt; (19 samples, 0.12%)</title><rect x="50.4288%" y="1141" width="0.1181%" height="15" fill="rgb(223,116,6)"/><text x="50.6788%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::g_unforgeable::UnfInstance&gt; (18 samples, 0.11%)</title><rect x="50.4350%" y="1125" width="0.1119%" height="15" fill="rgb(205,125,38)"/><text x="50.6850%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::GPrivate&gt; (18 samples, 0.11%)</title><rect x="50.4350%" y="1109" width="0.1119%" height="15" fill="rgb(251,78,38)"/><text x="50.6850%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (18 samples, 0.11%)</title><rect x="50.4350%" y="1093" width="0.1119%" height="15" fill="rgb(253,78,28)"/><text x="50.6850%" y="1103.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (18 samples, 0.11%)</title><rect x="50.4350%" y="1077" width="0.1119%" height="15" fill="rgb(209,120,3)"/><text x="50.6850%" y="1087.50"></text></g><g><title>bytes::bytes::shared_drop (16 samples, 0.10%)</title><rect x="50.4474%" y="1061" width="0.0994%" height="15" fill="rgb(238,229,9)"/><text x="50.6974%" y="1071.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (16 samples, 0.10%)</title><rect x="50.4474%" y="1045" width="0.0994%" height="15" fill="rgb(253,159,18)"/><text x="50.6974%" y="1055.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (16 samples, 0.10%)</title><rect x="50.4474%" y="1029" width="0.0994%" height="15" fill="rgb(244,42,34)"/><text x="50.6974%" y="1039.50"></text></g><g><title>bytes::bytes::release_shared (16 samples, 0.10%)</title><rect x="50.4474%" y="1013" width="0.0994%" height="15" fill="rgb(224,8,7)"/><text x="50.6974%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (16 samples, 0.10%)</title><rect x="50.4474%" y="997" width="0.0994%" height="15" fill="rgb(210,201,45)"/><text x="50.6974%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_sub (16 samples, 0.10%)</title><rect x="50.4474%" y="981" width="0.0994%" height="15" fill="rgb(252,185,21)"/><text x="50.6974%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;(blake3::Hash,model::rho_types::Par)&gt; (21 samples, 0.13%)</title><rect x="50.4226%" y="1237" width="0.1305%" height="15" fill="rgb(223,131,1)"/><text x="50.6726%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (20 samples, 0.12%)</title><rect x="50.4288%" y="1221" width="0.1243%" height="15" fill="rgb(245,141,16)"/><text x="50.6788%" y="1231.50"></text></g><g><title>rho_runtime::storage::tuplecell::TupleCell::produce (37 samples, 0.23%)</title><rect x="50.3294%" y="1253" width="0.2299%" height="15" fill="rgb(229,55,45)"/><text x="50.5794%" y="1263.50"></text></g><g><title>[libc-2.31.so] (28 samples, 0.17%)</title><rect x="50.6028%" y="1237" width="0.1740%" height="15" fill="rgb(208,92,15)"/><text x="50.8528%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;rho_runtime::storage::tuplecell::TupleCell&gt;&gt;&gt; (5 samples, 0.03%)</title><rect x="50.7768%" y="1237" width="0.0311%" height="15" fill="rgb(234,185,47)"/><text x="51.0268%" y="1247.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.03%)</title><rect x="50.7768%" y="1221" width="0.0311%" height="15" fill="rgb(253,104,50)"/><text x="51.0268%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (5 samples, 0.03%)</title><rect x="50.7768%" y="1205" width="0.0311%" height="15" fill="rgb(205,70,7)"/><text x="51.0268%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_sub (5 samples, 0.03%)</title><rect x="50.7768%" y="1189" width="0.0311%" height="15" fill="rgb(240,178,43)"/><text x="51.0268%" y="1199.50"></text></g><g><title>[libc-2.31.so] (84 samples, 0.52%)</title><rect x="50.8079%" y="1205" width="0.5220%" height="15" fill="rgb(214,112,2)"/><text x="51.0579%" y="1215.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (158 samples, 0.98%)</title><rect x="50.8079%" y="1237" width="0.9819%" height="15" fill="rgb(206,46,17)"/><text x="51.0579%" y="1247.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send::{{closure}} (158 samples, 0.98%)</title><rect x="50.8079%" y="1221" width="0.9819%" height="15" fill="rgb(225,220,16)"/><text x="51.0579%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;rho_runtime::storage::tuplecell::TupleCell&gt;&gt; (74 samples, 0.46%)</title><rect x="51.3299%" y="1205" width="0.4599%" height="15" fill="rgb(238,65,40)"/><text x="51.5799%" y="1215.50"></text></g><g><title>tokio::sync::oneshot::State::set_complete (254 samples, 1.58%)</title><rect x="51.7897%" y="1221" width="1.5784%" height="15" fill="rgb(230,151,21)"/><text x="52.0397%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (254 samples, 1.58%)</title><rect x="51.7897%" y="1205" width="1.5784%" height="15" fill="rgb(218,58,49)"/><text x="52.0397%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_or (254 samples, 1.58%)</title><rect x="51.7897%" y="1189" width="1.5784%" height="15" fill="rgb(219,179,14)"/><text x="52.0397%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (3 samples, 0.02%)</title><rect x="53.3806%" y="1093" width="0.0186%" height="15" fill="rgb(223,72,1)"/><text x="53.6306%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.02%)</title><rect x="53.3806%" y="1077" width="0.0186%" height="15" fill="rgb(238,126,10)"/><text x="53.6306%" y="1087.50"></text></g><g><title>alloc::sync::Weak&lt;T&gt;::upgrade (6 samples, 0.04%)</title><rect x="53.3681%" y="1109" width="0.0373%" height="15" fill="rgb(224,206,38)"/><text x="53.6181%" y="1119.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::wake (7 samples, 0.04%)</title><rect x="53.4116%" y="1109" width="0.0435%" height="15" fill="rgb(212,201,54)"/><text x="53.6616%" y="1119.50"></text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::take (7 samples, 0.04%)</title><rect x="53.4116%" y="1093" width="0.0435%" height="15" fill="rgb(218,154,48)"/><text x="53.6616%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (6 samples, 0.04%)</title><rect x="53.4178%" y="1077" width="0.0373%" height="15" fill="rgb(232,93,24)"/><text x="53.6678%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_or (6 samples, 0.04%)</title><rect x="53.4178%" y="1061" width="0.0373%" height="15" fill="rgb(245,30,21)"/><text x="53.6678%" y="1071.50"></text></g><g><title>futures_util::stream::futures_unordered::ready_to_run_queue::ReadyToRunQueue&lt;Fut&gt;::enqueue (4 samples, 0.02%)</title><rect x="53.4551%" y="1109" width="0.0249%" height="15" fill="rgb(242,148,29)"/><text x="53.7051%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::swap (3 samples, 0.02%)</title><rect x="53.4613%" y="1093" width="0.0186%" height="15" fill="rgb(244,153,54)"/><text x="53.7113%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_swap (3 samples, 0.02%)</title><rect x="53.4613%" y="1077" width="0.0186%" height="15" fill="rgb(252,87,22)"/><text x="53.7113%" y="1087.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (3 samples, 0.02%)</title><rect x="53.4800%" y="1077" width="0.0186%" height="15" fill="rgb(210,51,29)"/><text x="53.7300%" y="1087.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (2 samples, 0.01%)</title><rect x="53.4862%" y="1061" width="0.0124%" height="15" fill="rgb(242,136,47)"/><text x="53.7362%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (5 samples, 0.03%)</title><rect x="53.5297%" y="885" width="0.0311%" height="15" fill="rgb(238,68,4)"/><text x="53.7797%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_swap (5 samples, 0.03%)</title><rect x="53.5297%" y="869" width="0.0311%" height="15" fill="rgb(242,161,30)"/><text x="53.7797%" y="879.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (8 samples, 0.05%)</title><rect x="53.5235%" y="917" width="0.0497%" height="15" fill="rgb(218,58,44)"/><text x="53.7735%" y="927.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (7 samples, 0.04%)</title><rect x="53.5297%" y="901" width="0.0435%" height="15" fill="rgb(252,125,32)"/><text x="53.7797%" y="911.50"></text></g><g><title>tokio::runtime::park::Inner::unpark_condvar (2 samples, 0.01%)</title><rect x="53.5608%" y="885" width="0.0124%" height="15" fill="rgb(219,178,0)"/><text x="53.8108%" y="895.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (2 samples, 0.01%)</title><rect x="53.5608%" y="869" width="0.0124%" height="15" fill="rgb(213,152,7)"/><text x="53.8108%" y="879.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.01%)</title><rect x="53.5608%" y="853" width="0.0124%" height="15" fill="rgb(249,109,34)"/><text x="53.8108%" y="863.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.01%)</title><rect x="53.5608%" y="837" width="0.0124%" height="15" fill="rgb(232,96,21)"/><text x="53.8108%" y="847.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (2 samples, 0.01%)</title><rect x="53.5608%" y="821" width="0.0124%" height="15" fill="rgb(228,27,39)"/><text x="53.8108%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (2 samples, 0.01%)</title><rect x="53.5608%" y="805" width="0.0124%" height="15" fill="rgb(211,182,52)"/><text x="53.8108%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.01%)</title><rect x="53.5608%" y="789" width="0.0124%" height="15" fill="rgb(234,178,38)"/><text x="53.8108%" y="799.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (65 samples, 0.40%)</title><rect x="53.5732%" y="885" width="0.4039%" height="15" fill="rgb(221,111,3)"/><text x="53.8232%" y="895.50"></text></g><g><title>syscall (65 samples, 0.40%)</title><rect x="53.5732%" y="869" width="0.4039%" height="15" fill="rgb(228,175,21)"/><text x="53.8232%" y="879.50"></text></g><g><title>[unknown] (65 samples, 0.40%)</title><rect x="53.5732%" y="853" width="0.4039%" height="15" fill="rgb(228,174,43)"/><text x="53.8232%" y="863.50"></text></g><g><title>[unknown] (64 samples, 0.40%)</title><rect x="53.5794%" y="837" width="0.3977%" height="15" fill="rgb(211,191,0)"/><text x="53.8294%" y="847.50"></text></g><g><title>[unknown] (63 samples, 0.39%)</title><rect x="53.5856%" y="821" width="0.3915%" height="15" fill="rgb(253,117,3)"/><text x="53.8356%" y="831.50"></text></g><g><title>[unknown] (62 samples, 0.39%)</title><rect x="53.5918%" y="805" width="0.3853%" height="15" fill="rgb(241,127,19)"/><text x="53.8418%" y="815.50"></text></g><g><title>[unknown] (62 samples, 0.39%)</title><rect x="53.5918%" y="789" width="0.3853%" height="15" fill="rgb(218,103,12)"/><text x="53.8418%" y="799.50"></text></g><g><title>[unknown] (54 samples, 0.34%)</title><rect x="53.6416%" y="773" width="0.3356%" height="15" fill="rgb(236,214,43)"/><text x="53.8916%" y="783.50"></text></g><g><title>[unknown] (48 samples, 0.30%)</title><rect x="53.6788%" y="757" width="0.2983%" height="15" fill="rgb(244,144,19)"/><text x="53.9288%" y="767.50"></text></g><g><title>[unknown] (44 samples, 0.27%)</title><rect x="53.7037%" y="741" width="0.2734%" height="15" fill="rgb(246,188,10)"/><text x="53.9537%" y="751.50"></text></g><g><title>[unknown] (35 samples, 0.22%)</title><rect x="53.7596%" y="725" width="0.2175%" height="15" fill="rgb(212,193,33)"/><text x="54.0096%" y="735.50"></text></g><g><title>[unknown] (27 samples, 0.17%)</title><rect x="53.8093%" y="709" width="0.1678%" height="15" fill="rgb(241,51,29)"/><text x="54.0593%" y="719.50"></text></g><g><title>[unknown] (14 samples, 0.09%)</title><rect x="53.8901%" y="693" width="0.0870%" height="15" fill="rgb(211,58,19)"/><text x="54.1401%" y="703.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="53.9461%" y="677" width="0.0311%" height="15" fill="rgb(229,111,26)"/><text x="54.1961%" y="687.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="53.9647%" y="661" width="0.0124%" height="15" fill="rgb(213,115,40)"/><text x="54.2147%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.02%)</title><rect x="53.9771%" y="885" width="0.0249%" height="15" fill="rgb(209,56,44)"/><text x="54.2271%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.02%)</title><rect x="53.9771%" y="869" width="0.0249%" height="15" fill="rgb(230,108,32)"/><text x="54.2271%" y="879.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (3 samples, 0.02%)</title><rect x="54.0020%" y="885" width="0.0186%" height="15" fill="rgb(216,165,31)"/><text x="54.2520%" y="895.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (3 samples, 0.02%)</title><rect x="54.0020%" y="869" width="0.0186%" height="15" fill="rgb(218,122,21)"/><text x="54.2520%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (3 samples, 0.02%)</title><rect x="54.0020%" y="853" width="0.0186%" height="15" fill="rgb(223,224,47)"/><text x="54.2520%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.02%)</title><rect x="54.0020%" y="837" width="0.0186%" height="15" fill="rgb(238,102,44)"/><text x="54.2520%" y="847.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (77 samples, 0.48%)</title><rect x="53.5732%" y="917" width="0.4785%" height="15" fill="rgb(236,46,40)"/><text x="53.8232%" y="927.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (77 samples, 0.48%)</title><rect x="53.5732%" y="901" width="0.4785%" height="15" fill="rgb(247,202,50)"/><text x="53.8232%" y="911.50"></text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (5 samples, 0.03%)</title><rect x="54.0206%" y="885" width="0.0311%" height="15" fill="rgb(209,99,20)"/><text x="54.2706%" y="895.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (5 samples, 0.03%)</title><rect x="54.0206%" y="869" width="0.0311%" height="15" fill="rgb(252,27,34)"/><text x="54.2706%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (5 samples, 0.03%)</title><rect x="54.0206%" y="853" width="0.0311%" height="15" fill="rgb(215,206,23)"/><text x="54.2706%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_sub (5 samples, 0.03%)</title><rect x="54.0206%" y="837" width="0.0311%" height="15" fill="rgb(212,135,36)"/><text x="54.2706%" y="847.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (2 samples, 0.01%)</title><rect x="54.0641%" y="901" width="0.0124%" height="15" fill="rgb(240,189,1)"/><text x="54.3141%" y="911.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.01%)</title><rect x="54.0641%" y="885" width="0.0124%" height="15" fill="rgb(242,56,20)"/><text x="54.3141%" y="895.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.01%)</title><rect x="54.0641%" y="869" width="0.0124%" height="15" fill="rgb(247,132,33)"/><text x="54.3141%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (2 samples, 0.01%)</title><rect x="54.0641%" y="853" width="0.0124%" height="15" fill="rgb(208,149,11)"/><text x="54.3141%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.01%)</title><rect x="54.0641%" y="837" width="0.0124%" height="15" fill="rgb(211,33,11)"/><text x="54.3141%" y="847.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::notify_should_wakeup (6 samples, 0.04%)</title><rect x="54.0766%" y="901" width="0.0373%" height="15" fill="rgb(221,29,38)"/><text x="54.3266%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (6 samples, 0.04%)</title><rect x="54.0766%" y="885" width="0.0373%" height="15" fill="rgb(206,182,49)"/><text x="54.3266%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_add (6 samples, 0.04%)</title><rect x="54.0766%" y="869" width="0.0373%" height="15" fill="rgb(216,140,1)"/><text x="54.3266%" y="879.50"></text></g><g><title>rho_runtime::storage::runner::Runner::handle (841 samples, 5.23%)</title><rect x="48.8939%" y="1269" width="5.2262%" height="15" fill="rgb(232,57,40)"/><text x="49.1439%" y="1279.50">rho_ru..</text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (572 samples, 3.55%)</title><rect x="50.5655%" y="1253" width="3.5546%" height="15" fill="rgb(224,186,18)"/><text x="50.8155%" y="1263.50">toki..</text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::complete (375 samples, 2.33%)</title><rect x="51.7897%" y="1237" width="2.3304%" height="15" fill="rgb(215,121,11)"/><text x="52.0397%" y="1247.50">t..</text></g><g><title>tokio::sync::oneshot::Task::with_task (121 samples, 0.75%)</title><rect x="53.3681%" y="1221" width="0.7519%" height="15" fill="rgb(245,147,10)"/><text x="53.6181%" y="1231.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (121 samples, 0.75%)</title><rect x="53.3681%" y="1205" width="0.7519%" height="15" fill="rgb(238,153,13)"/><text x="53.6181%" y="1215.50"></text></g><g><title>tokio::sync::oneshot::Task::with_task::{{closure}} (121 samples, 0.75%)</title><rect x="53.3681%" y="1189" width="0.7519%" height="15" fill="rgb(233,108,0)"/><text x="53.6181%" y="1199.50"></text></g><g><title>core::ops::function::FnOnce::call_once (121 samples, 0.75%)</title><rect x="53.3681%" y="1173" width="0.7519%" height="15" fill="rgb(212,157,17)"/><text x="53.6181%" y="1183.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (121 samples, 0.75%)</title><rect x="53.3681%" y="1157" width="0.7519%" height="15" fill="rgb(225,213,38)"/><text x="53.6181%" y="1167.50"></text></g><g><title>futures_task::waker::wake_by_ref_arc_raw (121 samples, 0.75%)</title><rect x="53.3681%" y="1141" width="0.7519%" height="15" fill="rgb(248,16,11)"/><text x="53.6181%" y="1151.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::task::Task&lt;Fut&gt; as futures_task::arc_wake::ArcWake&gt;::wake_by_ref (121 samples, 0.75%)</title><rect x="53.3681%" y="1125" width="0.7519%" height="15" fill="rgb(241,33,4)"/><text x="53.6181%" y="1135.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (103 samples, 0.64%)</title><rect x="53.4800%" y="1109" width="0.6401%" height="15" fill="rgb(222,26,43)"/><text x="53.7300%" y="1119.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_val (103 samples, 0.64%)</title><rect x="53.4800%" y="1093" width="0.6401%" height="15" fill="rgb(243,29,36)"/><text x="53.7300%" y="1103.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_ref (100 samples, 0.62%)</title><rect x="53.4986%" y="1077" width="0.6214%" height="15" fill="rgb(241,9,27)"/><text x="53.7486%" y="1087.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::schedule (100 samples, 0.62%)</title><rect x="53.4986%" y="1061" width="0.6214%" height="15" fill="rgb(205,117,26)"/><text x="53.7486%" y="1071.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (100 samples, 0.62%)</title><rect x="53.4986%" y="1045" width="0.6214%" height="15" fill="rgb(209,80,39)"/><text x="53.7486%" y="1055.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::schedule::{{closure}} (100 samples, 0.62%)</title><rect x="53.4986%" y="1029" width="0.6214%" height="15" fill="rgb(239,155,6)"/><text x="53.7486%" y="1039.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::schedule (100 samples, 0.62%)</title><rect x="53.4986%" y="1013" width="0.6214%" height="15" fill="rgb(212,104,12)"/><text x="53.7486%" y="1023.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (100 samples, 0.62%)</title><rect x="53.4986%" y="997" width="0.6214%" height="15" fill="rgb(234,204,3)"/><text x="53.7486%" y="1007.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (100 samples, 0.62%)</title><rect x="53.4986%" y="981" width="0.6214%" height="15" fill="rgb(251,218,7)"/><text x="53.7486%" y="991.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (99 samples, 0.62%)</title><rect x="53.5048%" y="965" width="0.6152%" height="15" fill="rgb(221,81,32)"/><text x="53.7548%" y="975.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule_local (97 samples, 0.60%)</title><rect x="53.5173%" y="949" width="0.6028%" height="15" fill="rgb(214,152,26)"/><text x="53.7673%" y="959.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (97 samples, 0.60%)</title><rect x="53.5173%" y="933" width="0.6028%" height="15" fill="rgb(223,22,3)"/><text x="53.7673%" y="943.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::worker_to_notify (11 samples, 0.07%)</title><rect x="54.0517%" y="917" width="0.0684%" height="15" fill="rgb(207,174,7)"/><text x="54.3017%" y="927.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (3 samples, 0.02%)</title><rect x="54.2381%" y="901" width="0.0186%" height="15" fill="rgb(224,19,52)"/><text x="54.4881%" y="911.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for bool&gt;::clone (3 samples, 0.02%)</title><rect x="54.2381%" y="885" width="0.0186%" height="15" fill="rgb(228,24,14)"/><text x="54.4881%" y="895.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.04%)</title><rect x="54.2257%" y="917" width="0.0373%" height="15" fill="rgb(230,153,43)"/><text x="54.4757%" y="927.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (10 samples, 0.06%)</title><rect x="54.2195%" y="933" width="0.0621%" height="15" fill="rgb(231,106,12)"/><text x="54.4695%" y="943.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.02%)</title><rect x="54.2630%" y="917" width="0.0186%" height="15" fill="rgb(215,92,2)"/><text x="54.5130%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.02%)</title><rect x="54.2941%" y="821" width="0.0186%" height="15" fill="rgb(249,143,25)"/><text x="54.5441%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (8 samples, 0.05%)</title><rect x="54.3997%" y="661" width="0.0497%" height="15" fill="rgb(252,7,35)"/><text x="54.6497%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="54.4743%" y="613" width="0.0186%" height="15" fill="rgb(216,69,40)"/><text x="54.7243%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (2 samples, 0.01%)</title><rect x="54.4929%" y="613" width="0.0124%" height="15" fill="rgb(240,36,33)"/><text x="54.7429%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (33 samples, 0.21%)</title><rect x="54.3997%" y="677" width="0.2051%" height="15" fill="rgb(231,128,14)"/><text x="54.6497%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (25 samples, 0.16%)</title><rect x="54.4494%" y="661" width="0.1554%" height="15" fill="rgb(245,143,14)"/><text x="54.6994%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (25 samples, 0.16%)</title><rect x="54.4494%" y="645" width="0.1554%" height="15" fill="rgb(222,130,28)"/><text x="54.6994%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (25 samples, 0.16%)</title><rect x="54.4494%" y="629" width="0.1554%" height="15" fill="rgb(212,10,48)"/><text x="54.6994%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (16 samples, 0.10%)</title><rect x="54.5053%" y="613" width="0.0994%" height="15" fill="rgb(254,118,45)"/><text x="54.7553%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.06%)</title><rect x="54.5488%" y="597" width="0.0559%" height="15" fill="rgb(228,6,45)"/><text x="54.7988%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.06%)</title><rect x="54.5488%" y="581" width="0.0559%" height="15" fill="rgb(241,18,35)"/><text x="54.7988%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (4 samples, 0.02%)</title><rect x="54.5799%" y="565" width="0.0249%" height="15" fill="rgb(227,214,53)"/><text x="54.8299%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.02%)</title><rect x="54.6296%" y="517" width="0.0249%" height="15" fill="rgb(224,107,51)"/><text x="54.8796%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.02%)</title><rect x="54.6296%" y="501" width="0.0249%" height="15" fill="rgb(248,60,28)"/><text x="54.8796%" y="511.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.02%)</title><rect x="54.6296%" y="485" width="0.0249%" height="15" fill="rgb(249,101,23)"/><text x="54.8796%" y="495.50"></text></g><g><title>_rjem_mallocx (3 samples, 0.02%)</title><rect x="54.6358%" y="469" width="0.0186%" height="15" fill="rgb(228,51,19)"/><text x="54.8858%" y="479.50"></text></g><g><title>imalloc (2 samples, 0.01%)</title><rect x="54.6421%" y="453" width="0.0124%" height="15" fill="rgb(213,20,6)"/><text x="54.8921%" y="463.50"></text></g><g><title>imalloc_body (2 samples, 0.01%)</title><rect x="54.6421%" y="437" width="0.0124%" height="15" fill="rgb(212,124,10)"/><text x="54.8921%" y="447.50"></text></g><g><title>imalloc_no_sample (2 samples, 0.01%)</title><rect x="54.6421%" y="421" width="0.0124%" height="15" fill="rgb(248,3,40)"/><text x="54.8921%" y="431.50"></text></g><g><title>iallocztm (2 samples, 0.01%)</title><rect x="54.6421%" y="405" width="0.0124%" height="15" fill="rgb(223,178,23)"/><text x="54.8921%" y="415.50"></text></g><g><title>arena_malloc (2 samples, 0.01%)</title><rect x="54.6421%" y="389" width="0.0124%" height="15" fill="rgb(240,132,45)"/><text x="54.8921%" y="399.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.01%)</title><rect x="54.6421%" y="373" width="0.0124%" height="15" fill="rgb(245,164,36)"/><text x="54.8921%" y="383.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (2 samples, 0.01%)</title><rect x="54.6421%" y="357" width="0.0124%" height="15" fill="rgb(231,188,53)"/><text x="54.8921%" y="367.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (2 samples, 0.01%)</title><rect x="54.6421%" y="341" width="0.0124%" height="15" fill="rgb(237,198,39)"/><text x="54.8921%" y="351.50"></text></g><g><title>malloc_mutex_unlock (2 samples, 0.01%)</title><rect x="54.6421%" y="325" width="0.0124%" height="15" fill="rgb(223,120,35)"/><text x="54.8921%" y="335.50"></text></g><g><title>__GI___pthread_mutex_unlock (2 samples, 0.01%)</title><rect x="54.6421%" y="309" width="0.0124%" height="15" fill="rgb(253,107,49)"/><text x="54.8921%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.03%)</title><rect x="54.6296%" y="565" width="0.0311%" height="15" fill="rgb(216,44,31)"/><text x="54.8796%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.03%)</title><rect x="54.6296%" y="549" width="0.0311%" height="15" fill="rgb(253,87,21)"/><text x="54.8796%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.03%)</title><rect x="54.6296%" y="533" width="0.0311%" height="15" fill="rgb(226,18,2)"/><text x="54.8796%" y="543.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (47 samples, 0.29%)</title><rect x="54.3811%" y="693" width="0.2921%" height="15" fill="rgb(216,8,46)"/><text x="54.6311%" y="703.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (11 samples, 0.07%)</title><rect x="54.6048%" y="677" width="0.0684%" height="15" fill="rgb(226,140,39)"/><text x="54.8548%" y="687.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (8 samples, 0.05%)</title><rect x="54.6234%" y="661" width="0.0497%" height="15" fill="rgb(221,194,54)"/><text x="54.8734%" y="671.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (8 samples, 0.05%)</title><rect x="54.6234%" y="645" width="0.0497%" height="15" fill="rgb(213,92,11)"/><text x="54.8734%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.04%)</title><rect x="54.6296%" y="629" width="0.0435%" height="15" fill="rgb(229,162,46)"/><text x="54.8796%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.04%)</title><rect x="54.6296%" y="613" width="0.0435%" height="15" fill="rgb(214,111,36)"/><text x="54.8796%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.04%)</title><rect x="54.6296%" y="597" width="0.0435%" height="15" fill="rgb(207,6,21)"/><text x="54.8796%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.04%)</title><rect x="54.6296%" y="581" width="0.0435%" height="15" fill="rgb(213,127,38)"/><text x="54.8796%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.01%)</title><rect x="54.6607%" y="565" width="0.0124%" height="15" fill="rgb(238,118,32)"/><text x="54.9107%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="54.6607%" y="549" width="0.0124%" height="15" fill="rgb(240,139,39)"/><text x="54.9107%" y="559.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="54.6607%" y="533" width="0.0124%" height="15" fill="rgb(235,10,37)"/><text x="54.9107%" y="543.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (58 samples, 0.36%)</title><rect x="54.3686%" y="709" width="0.3604%" height="15" fill="rgb(249,171,38)"/><text x="54.6186%" y="719.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.06%)</title><rect x="54.6731%" y="693" width="0.0559%" height="15" fill="rgb(242,144,32)"/><text x="54.9231%" y="703.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (67 samples, 0.42%)</title><rect x="54.3562%" y="741" width="0.4164%" height="15" fill="rgb(217,117,21)"/><text x="54.6062%" y="751.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (67 samples, 0.42%)</title><rect x="54.3562%" y="725" width="0.4164%" height="15" fill="rgb(249,87,1)"/><text x="54.6062%" y="735.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.04%)</title><rect x="54.7291%" y="709" width="0.0435%" height="15" fill="rgb(248,196,48)"/><text x="54.9791%" y="719.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (74 samples, 0.46%)</title><rect x="54.3438%" y="757" width="0.4599%" height="15" fill="rgb(251,206,33)"/><text x="54.5938%" y="767.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.03%)</title><rect x="54.7726%" y="741" width="0.0311%" height="15" fill="rgb(232,141,28)"/><text x="55.0226%" y="751.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (83 samples, 0.52%)</title><rect x="54.3376%" y="773" width="0.5158%" height="15" fill="rgb(209,167,14)"/><text x="54.5876%" y="783.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.05%)</title><rect x="54.8036%" y="757" width="0.0497%" height="15" fill="rgb(225,11,50)"/><text x="55.0536%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (3 samples, 0.02%)</title><rect x="54.8533%" y="773" width="0.0186%" height="15" fill="rgb(209,50,20)"/><text x="55.1033%" y="783.50"></text></g><g><title>arena_slab_alloc (2 samples, 0.01%)</title><rect x="54.9403%" y="501" width="0.0124%" height="15" fill="rgb(212,17,46)"/><text x="55.1903%" y="511.50"></text></g><g><title>_rjem_je_extents_alloc (2 samples, 0.01%)</title><rect x="54.9403%" y="485" width="0.0124%" height="15" fill="rgb(216,101,39)"/><text x="55.1903%" y="495.50"></text></g><g><title>extent_recycle (2 samples, 0.01%)</title><rect x="54.9403%" y="469" width="0.0124%" height="15" fill="rgb(212,228,48)"/><text x="55.1903%" y="479.50"></text></g><g><title>arena_bin_nonfull_slab_get (4 samples, 0.02%)</title><rect x="54.9341%" y="517" width="0.0249%" height="15" fill="rgb(250,6,50)"/><text x="55.1841%" y="527.50"></text></g><g><title>arena_bin_malloc_hard (5 samples, 0.03%)</title><rect x="54.9341%" y="533" width="0.0311%" height="15" fill="rgb(250,160,48)"/><text x="55.1841%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.07%)</title><rect x="54.8968%" y="725" width="0.0746%" height="15" fill="rgb(244,216,33)"/><text x="55.1468%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.07%)</title><rect x="54.8968%" y="709" width="0.0746%" height="15" fill="rgb(207,157,5)"/><text x="55.1468%" y="719.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.06%)</title><rect x="54.9093%" y="693" width="0.0621%" height="15" fill="rgb(228,199,8)"/><text x="55.1593%" y="703.50"></text></g><g><title>_rjem_mallocx (9 samples, 0.06%)</title><rect x="54.9155%" y="677" width="0.0559%" height="15" fill="rgb(227,80,20)"/><text x="55.1655%" y="687.50"></text></g><g><title>imalloc (6 samples, 0.04%)</title><rect x="54.9341%" y="661" width="0.0373%" height="15" fill="rgb(222,9,33)"/><text x="55.1841%" y="671.50"></text></g><g><title>imalloc_body (6 samples, 0.04%)</title><rect x="54.9341%" y="645" width="0.0373%" height="15" fill="rgb(239,44,28)"/><text x="55.1841%" y="655.50"></text></g><g><title>imalloc_no_sample (6 samples, 0.04%)</title><rect x="54.9341%" y="629" width="0.0373%" height="15" fill="rgb(249,187,43)"/><text x="55.1841%" y="639.50"></text></g><g><title>iallocztm (6 samples, 0.04%)</title><rect x="54.9341%" y="613" width="0.0373%" height="15" fill="rgb(216,141,28)"/><text x="55.1841%" y="623.50"></text></g><g><title>arena_malloc (6 samples, 0.04%)</title><rect x="54.9341%" y="597" width="0.0373%" height="15" fill="rgb(230,154,53)"/><text x="55.1841%" y="607.50"></text></g><g><title>tcache_alloc_small (6 samples, 0.04%)</title><rect x="54.9341%" y="581" width="0.0373%" height="15" fill="rgb(227,82,4)"/><text x="55.1841%" y="591.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (6 samples, 0.04%)</title><rect x="54.9341%" y="565" width="0.0373%" height="15" fill="rgb(220,107,16)"/><text x="55.1841%" y="575.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (6 samples, 0.04%)</title><rect x="54.9341%" y="549" width="0.0373%" height="15" fill="rgb(207,187,2)"/><text x="55.1841%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (18 samples, 0.11%)</title><rect x="54.8720%" y="773" width="0.1119%" height="15" fill="rgb(210,162,52)"/><text x="55.1220%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15 samples, 0.09%)</title><rect x="54.8906%" y="757" width="0.0932%" height="15" fill="rgb(217,216,49)"/><text x="55.1406%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (15 samples, 0.09%)</title><rect x="54.8906%" y="741" width="0.0932%" height="15" fill="rgb(218,146,49)"/><text x="55.1406%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (116 samples, 0.72%)</title><rect x="54.2878%" y="837" width="0.7209%" height="15" fill="rgb(216,55,40)"/><text x="54.5378%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (112 samples, 0.70%)</title><rect x="54.3127%" y="821" width="0.6960%" height="15" fill="rgb(208,196,21)"/><text x="54.5627%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (112 samples, 0.70%)</title><rect x="54.3127%" y="805" width="0.6960%" height="15" fill="rgb(242,117,42)"/><text x="54.5627%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (112 samples, 0.70%)</title><rect x="54.3127%" y="789" width="0.6960%" height="15" fill="rgb(210,11,23)"/><text x="54.5627%" y="799.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (4 samples, 0.02%)</title><rect x="54.9838%" y="773" width="0.0249%" height="15" fill="rgb(217,110,2)"/><text x="55.2338%" y="783.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="54.9963%" y="757" width="0.0124%" height="15" fill="rgb(229,77,54)"/><text x="55.2463%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.02%)</title><rect x="55.0273%" y="677" width="0.0249%" height="15" fill="rgb(218,53,16)"/><text x="55.2773%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.02%)</title><rect x="55.0273%" y="661" width="0.0249%" height="15" fill="rgb(215,38,13)"/><text x="55.2773%" y="671.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.02%)</title><rect x="55.0273%" y="645" width="0.0249%" height="15" fill="rgb(235,42,18)"/><text x="55.2773%" y="655.50"></text></g><g><title>_rjem_mallocx (4 samples, 0.02%)</title><rect x="55.0273%" y="629" width="0.0249%" height="15" fill="rgb(219,66,54)"/><text x="55.2773%" y="639.50"></text></g><g><title>imalloc (3 samples, 0.02%)</title><rect x="55.0336%" y="613" width="0.0186%" height="15" fill="rgb(222,205,4)"/><text x="55.2836%" y="623.50"></text></g><g><title>imalloc_body (3 samples, 0.02%)</title><rect x="55.0336%" y="597" width="0.0186%" height="15" fill="rgb(227,213,46)"/><text x="55.2836%" y="607.50"></text></g><g><title>imalloc_no_sample (3 samples, 0.02%)</title><rect x="55.0336%" y="581" width="0.0186%" height="15" fill="rgb(250,145,42)"/><text x="55.2836%" y="591.50"></text></g><g><title>iallocztm (3 samples, 0.02%)</title><rect x="55.0336%" y="565" width="0.0186%" height="15" fill="rgb(219,15,2)"/><text x="55.2836%" y="575.50"></text></g><g><title>arena_malloc (3 samples, 0.02%)</title><rect x="55.0336%" y="549" width="0.0186%" height="15" fill="rgb(231,181,52)"/><text x="55.2836%" y="559.50"></text></g><g><title>tcache_alloc_small (3 samples, 0.02%)</title><rect x="55.0336%" y="533" width="0.0186%" height="15" fill="rgb(235,1,42)"/><text x="55.2836%" y="543.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (124 samples, 0.77%)</title><rect x="54.2878%" y="853" width="0.7706%" height="15" fill="rgb(249,88,27)"/><text x="54.5378%" y="863.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.05%)</title><rect x="55.0087%" y="837" width="0.0497%" height="15" fill="rgb(235,145,16)"/><text x="55.2587%" y="847.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (7 samples, 0.04%)</title><rect x="55.0149%" y="821" width="0.0435%" height="15" fill="rgb(237,114,19)"/><text x="55.2649%" y="831.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (7 samples, 0.04%)</title><rect x="55.0149%" y="805" width="0.0435%" height="15" fill="rgb(238,51,50)"/><text x="55.2649%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.04%)</title><rect x="55.0149%" y="789" width="0.0435%" height="15" fill="rgb(205,194,25)"/><text x="55.2649%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.04%)</title><rect x="55.0211%" y="773" width="0.0373%" height="15" fill="rgb(215,203,17)"/><text x="55.2711%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.04%)</title><rect x="55.0211%" y="757" width="0.0373%" height="15" fill="rgb(233,112,49)"/><text x="55.2711%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.04%)</title><rect x="55.0211%" y="741" width="0.0373%" height="15" fill="rgb(241,130,26)"/><text x="55.2711%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.04%)</title><rect x="55.0211%" y="725" width="0.0373%" height="15" fill="rgb(252,223,19)"/><text x="55.2711%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.04%)</title><rect x="55.0211%" y="709" width="0.0373%" height="15" fill="rgb(211,95,25)"/><text x="55.2711%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.04%)</title><rect x="55.0211%" y="693" width="0.0373%" height="15" fill="rgb(251,182,27)"/><text x="55.2711%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.04%)</title><rect x="55.0584%" y="853" width="0.0373%" height="15" fill="rgb(238,24,4)"/><text x="55.3084%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.04%)</title><rect x="55.0584%" y="837" width="0.0373%" height="15" fill="rgb(224,220,25)"/><text x="55.3084%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.04%)</title><rect x="55.0584%" y="821" width="0.0373%" height="15" fill="rgb(239,133,26)"/><text x="55.3084%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.04%)</title><rect x="55.0584%" y="805" width="0.0373%" height="15" fill="rgb(211,94,48)"/><text x="55.3084%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.04%)</title><rect x="55.0584%" y="789" width="0.0373%" height="15" fill="rgb(239,87,6)"/><text x="55.3084%" y="799.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.04%)</title><rect x="55.0584%" y="773" width="0.0373%" height="15" fill="rgb(227,62,0)"/><text x="55.3084%" y="783.50"></text></g><g><title>_rjem_mallocx (6 samples, 0.04%)</title><rect x="55.0584%" y="757" width="0.0373%" height="15" fill="rgb(211,226,4)"/><text x="55.3084%" y="767.50"></text></g><g><title>imalloc (3 samples, 0.02%)</title><rect x="55.0771%" y="741" width="0.0186%" height="15" fill="rgb(253,38,52)"/><text x="55.3271%" y="751.50"></text></g><g><title>imalloc_body (3 samples, 0.02%)</title><rect x="55.0771%" y="725" width="0.0186%" height="15" fill="rgb(229,126,40)"/><text x="55.3271%" y="735.50"></text></g><g><title>imalloc_no_sample (3 samples, 0.02%)</title><rect x="55.0771%" y="709" width="0.0186%" height="15" fill="rgb(229,165,44)"/><text x="55.3271%" y="719.50"></text></g><g><title>iallocztm (3 samples, 0.02%)</title><rect x="55.0771%" y="693" width="0.0186%" height="15" fill="rgb(247,95,47)"/><text x="55.3271%" y="703.50"></text></g><g><title>arena_malloc (3 samples, 0.02%)</title><rect x="55.0771%" y="677" width="0.0186%" height="15" fill="rgb(216,140,30)"/><text x="55.3271%" y="687.50"></text></g><g><title>tcache_alloc_small (3 samples, 0.02%)</title><rect x="55.0771%" y="661" width="0.0186%" height="15" fill="rgb(246,214,8)"/><text x="55.3271%" y="671.50"></text></g><g><title>cache_bin_alloc_easy (3 samples, 0.02%)</title><rect x="55.0771%" y="645" width="0.0186%" height="15" fill="rgb(227,224,15)"/><text x="55.3271%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (137 samples, 0.85%)</title><rect x="54.2878%" y="917" width="0.8514%" height="15" fill="rgb(233,175,4)"/><text x="54.5378%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (137 samples, 0.85%)</title><rect x="54.2878%" y="901" width="0.8514%" height="15" fill="rgb(221,66,45)"/><text x="54.5378%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (137 samples, 0.85%)</title><rect x="54.2878%" y="885" width="0.8514%" height="15" fill="rgb(221,178,18)"/><text x="54.5378%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (137 samples, 0.85%)</title><rect x="54.2878%" y="869" width="0.8514%" height="15" fill="rgb(213,81,29)"/><text x="54.5378%" y="879.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (7 samples, 0.04%)</title><rect x="55.0957%" y="853" width="0.0435%" height="15" fill="rgb(220,89,49)"/><text x="55.3457%" y="863.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.04%)</title><rect x="55.0957%" y="837" width="0.0435%" height="15" fill="rgb(227,60,33)"/><text x="55.3457%" y="847.50"></text></g><g><title>imalloc_no_sample (2 samples, 0.01%)</title><rect x="55.1578%" y="661" width="0.0124%" height="15" fill="rgb(205,113,12)"/><text x="55.4078%" y="671.50"></text></g><g><title>iallocztm (2 samples, 0.01%)</title><rect x="55.1578%" y="645" width="0.0124%" height="15" fill="rgb(211,32,1)"/><text x="55.4078%" y="655.50"></text></g><g><title>arena_malloc (2 samples, 0.01%)</title><rect x="55.1578%" y="629" width="0.0124%" height="15" fill="rgb(246,2,12)"/><text x="55.4078%" y="639.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.01%)</title><rect x="55.1578%" y="613" width="0.0124%" height="15" fill="rgb(243,37,27)"/><text x="55.4078%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.04%)</title><rect x="55.1392%" y="805" width="0.0435%" height="15" fill="rgb(248,211,31)"/><text x="55.3892%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.04%)</title><rect x="55.1392%" y="789" width="0.0435%" height="15" fill="rgb(242,146,47)"/><text x="55.3892%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.04%)</title><rect x="55.1392%" y="773" width="0.0435%" height="15" fill="rgb(206,70,20)"/><text x="55.3892%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.04%)</title><rect x="55.1392%" y="757" width="0.0435%" height="15" fill="rgb(215,10,51)"/><text x="55.3892%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.04%)</title><rect x="55.1392%" y="741" width="0.0435%" height="15" fill="rgb(243,178,53)"/><text x="55.3892%" y="751.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.04%)</title><rect x="55.1392%" y="725" width="0.0435%" height="15" fill="rgb(233,221,20)"/><text x="55.3892%" y="735.50"></text></g><g><title>_rjem_mallocx (6 samples, 0.04%)</title><rect x="55.1454%" y="709" width="0.0373%" height="15" fill="rgb(218,95,35)"/><text x="55.3954%" y="719.50"></text></g><g><title>imalloc (5 samples, 0.03%)</title><rect x="55.1516%" y="693" width="0.0311%" height="15" fill="rgb(229,13,5)"/><text x="55.4016%" y="703.50"></text></g><g><title>imalloc_body (5 samples, 0.03%)</title><rect x="55.1516%" y="677" width="0.0311%" height="15" fill="rgb(252,164,30)"/><text x="55.4016%" y="687.50"></text></g><g><title>sz_index2size (2 samples, 0.01%)</title><rect x="55.1703%" y="661" width="0.0124%" height="15" fill="rgb(232,68,36)"/><text x="55.4203%" y="671.50"></text></g><g><title>sz_index2size_lookup (2 samples, 0.01%)</title><rect x="55.1703%" y="645" width="0.0124%" height="15" fill="rgb(219,59,54)"/><text x="55.4203%" y="655.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (11 samples, 0.07%)</title><rect x="55.1392%" y="901" width="0.0684%" height="15" fill="rgb(250,92,33)"/><text x="55.3892%" y="911.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (11 samples, 0.07%)</title><rect x="55.1392%" y="885" width="0.0684%" height="15" fill="rgb(229,162,54)"/><text x="55.3892%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.07%)</title><rect x="55.1392%" y="869" width="0.0684%" height="15" fill="rgb(244,114,52)"/><text x="55.3892%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 0.07%)</title><rect x="55.1392%" y="853" width="0.0684%" height="15" fill="rgb(212,211,43)"/><text x="55.3892%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.07%)</title><rect x="55.1392%" y="837" width="0.0684%" height="15" fill="rgb(226,147,8)"/><text x="55.3892%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.07%)</title><rect x="55.1392%" y="821" width="0.0684%" height="15" fill="rgb(226,23,13)"/><text x="55.3892%" y="831.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (4 samples, 0.02%)</title><rect x="55.1827%" y="805" width="0.0249%" height="15" fill="rgb(240,63,4)"/><text x="55.4327%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.02%)</title><rect x="55.1827%" y="789" width="0.0249%" height="15" fill="rgb(221,1,32)"/><text x="55.4327%" y="799.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="55.1951%" y="773" width="0.0124%" height="15" fill="rgb(242,117,10)"/><text x="55.4451%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.01%)</title><rect x="55.2324%" y="869" width="0.0124%" height="15" fill="rgb(249,172,44)"/><text x="55.4824%" y="879.50"></text></g><g><title>&lt;model::rho_types::GUnforgeable as core::clone::Clone&gt;::clone (49 samples, 0.30%)</title><rect x="55.2448%" y="821" width="0.3045%" height="15" fill="rgb(244,46,45)"/><text x="55.4948%" y="831.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (46 samples, 0.29%)</title><rect x="55.2635%" y="805" width="0.2859%" height="15" fill="rgb(206,43,17)"/><text x="55.5135%" y="815.50"></text></g><g><title>&lt;model::rho_types::g_unforgeable::UnfInstance as core::clone::Clone&gt;::clone (44 samples, 0.27%)</title><rect x="55.2759%" y="789" width="0.2734%" height="15" fill="rgb(239,218,39)"/><text x="55.5259%" y="799.50"></text></g><g><title>&lt;model::rho_types::GPrivate as core::clone::Clone&gt;::clone (44 samples, 0.27%)</title><rect x="55.2759%" y="773" width="0.2734%" height="15" fill="rgb(208,169,54)"/><text x="55.5259%" y="783.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (44 samples, 0.27%)</title><rect x="55.2759%" y="757" width="0.2734%" height="15" fill="rgb(247,25,42)"/><text x="55.5259%" y="767.50"></text></g><g><title>bytes::bytes::shared_clone (44 samples, 0.27%)</title><rect x="55.2759%" y="741" width="0.2734%" height="15" fill="rgb(226,23,31)"/><text x="55.5259%" y="751.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (44 samples, 0.27%)</title><rect x="55.2759%" y="725" width="0.2734%" height="15" fill="rgb(247,16,28)"/><text x="55.5259%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (43 samples, 0.27%)</title><rect x="55.2821%" y="709" width="0.2672%" height="15" fill="rgb(231,147,38)"/><text x="55.5321%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_add (43 samples, 0.27%)</title><rect x="55.2821%" y="693" width="0.2672%" height="15" fill="rgb(253,81,48)"/><text x="55.5321%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.04%)</title><rect x="55.5556%" y="773" width="0.0435%" height="15" fill="rgb(249,222,43)"/><text x="55.8056%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.04%)</title><rect x="55.5556%" y="757" width="0.0435%" height="15" fill="rgb(221,3,27)"/><text x="55.8056%" y="767.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.04%)</title><rect x="55.5556%" y="741" width="0.0435%" height="15" fill="rgb(228,180,5)"/><text x="55.8056%" y="751.50"></text></g><g><title>_rjem_mallocx (4 samples, 0.02%)</title><rect x="55.5742%" y="725" width="0.0249%" height="15" fill="rgb(227,131,42)"/><text x="55.8242%" y="735.50"></text></g><g><title>imalloc (4 samples, 0.02%)</title><rect x="55.5742%" y="709" width="0.0249%" height="15" fill="rgb(212,3,39)"/><text x="55.8242%" y="719.50"></text></g><g><title>imalloc_body (4 samples, 0.02%)</title><rect x="55.5742%" y="693" width="0.0249%" height="15" fill="rgb(226,45,5)"/><text x="55.8242%" y="703.50"></text></g><g><title>imalloc_no_sample (4 samples, 0.02%)</title><rect x="55.5742%" y="677" width="0.0249%" height="15" fill="rgb(215,167,45)"/><text x="55.8242%" y="687.50"></text></g><g><title>iallocztm (3 samples, 0.02%)</title><rect x="55.5804%" y="661" width="0.0186%" height="15" fill="rgb(250,218,53)"/><text x="55.8304%" y="671.50"></text></g><g><title>arena_malloc (3 samples, 0.02%)</title><rect x="55.5804%" y="645" width="0.0186%" height="15" fill="rgb(207,140,0)"/><text x="55.8304%" y="655.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.01%)</title><rect x="55.5866%" y="629" width="0.0124%" height="15" fill="rgb(238,133,51)"/><text x="55.8366%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (2 samples, 0.01%)</title><rect x="55.5991%" y="773" width="0.0124%" height="15" fill="rgb(218,203,53)"/><text x="55.8491%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.07%)</title><rect x="55.5493%" y="821" width="0.0684%" height="15" fill="rgb(226,184,25)"/><text x="55.7993%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.06%)</title><rect x="55.5556%" y="805" width="0.0621%" height="15" fill="rgb(231,121,21)"/><text x="55.8056%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.06%)</title><rect x="55.5556%" y="789" width="0.0621%" height="15" fill="rgb(251,14,34)"/><text x="55.8056%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (64 samples, 0.40%)</title><rect x="55.2262%" y="885" width="0.3977%" height="15" fill="rgb(249,193,11)"/><text x="55.4762%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (61 samples, 0.38%)</title><rect x="55.2448%" y="869" width="0.3791%" height="15" fill="rgb(220,172,37)"/><text x="55.4948%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (61 samples, 0.38%)</title><rect x="55.2448%" y="853" width="0.3791%" height="15" fill="rgb(231,229,43)"/><text x="55.4948%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (61 samples, 0.38%)</title><rect x="55.2448%" y="837" width="0.3791%" height="15" fill="rgb(250,161,5)"/><text x="55.4948%" y="847.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="55.6239%" y="885" width="0.0249%" height="15" fill="rgb(218,225,18)"/><text x="55.8739%" y="895.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="55.6239%" y="869" width="0.0249%" height="15" fill="rgb(245,45,42)"/><text x="55.8739%" y="879.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="55.6239%" y="853" width="0.0249%" height="15" fill="rgb(211,115,1)"/><text x="55.8739%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="55.6239%" y="837" width="0.0249%" height="15" fill="rgb(248,133,52)"/><text x="55.8739%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.02%)</title><rect x="55.6239%" y="821" width="0.0249%" height="15" fill="rgb(238,100,21)"/><text x="55.8739%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.02%)</title><rect x="55.6239%" y="805" width="0.0249%" height="15" fill="rgb(247,144,11)"/><text x="55.8739%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.02%)</title><rect x="55.6239%" y="789" width="0.0249%" height="15" fill="rgb(206,164,16)"/><text x="55.8739%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.02%)</title><rect x="55.6239%" y="773" width="0.0249%" height="15" fill="rgb(222,34,3)"/><text x="55.8739%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.02%)</title><rect x="55.6239%" y="757" width="0.0249%" height="15" fill="rgb(248,82,4)"/><text x="55.8739%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.02%)</title><rect x="55.6239%" y="741" width="0.0249%" height="15" fill="rgb(228,81,46)"/><text x="55.8739%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.02%)</title><rect x="55.6239%" y="725" width="0.0249%" height="15" fill="rgb(227,67,47)"/><text x="55.8739%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.02%)</title><rect x="55.6239%" y="709" width="0.0249%" height="15" fill="rgb(215,93,53)"/><text x="55.8739%" y="719.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.02%)</title><rect x="55.6239%" y="693" width="0.0249%" height="15" fill="rgb(248,194,39)"/><text x="55.8739%" y="703.50"></text></g><g><title>_rjem_mallocx (2 samples, 0.01%)</title><rect x="55.6363%" y="677" width="0.0124%" height="15" fill="rgb(215,5,19)"/><text x="55.8863%" y="687.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (72 samples, 0.45%)</title><rect x="55.2076%" y="901" width="0.4474%" height="15" fill="rgb(226,215,51)"/><text x="55.4576%" y="911.50"></text></g><g><title>&lt;model::rho_types::Send as core::clone::Clone&gt;::clone (224 samples, 1.39%)</title><rect x="54.2816%" y="933" width="1.3920%" height="15" fill="rgb(225,56,26)"/><text x="54.5316%" y="943.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (86 samples, 0.53%)</title><rect x="55.1392%" y="917" width="0.5344%" height="15" fill="rgb(222,75,29)"/><text x="55.3892%" y="927.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.02%)</title><rect x="55.6550%" y="901" width="0.0186%" height="15" fill="rgb(236,139,6)"/><text x="55.9050%" y="911.50"></text></g><g><title>arena_slab_alloc (3 samples, 0.02%)</title><rect x="55.7606%" y="661" width="0.0186%" height="15" fill="rgb(223,137,36)"/><text x="56.0106%" y="671.50"></text></g><g><title>arena_nactive_add (2 samples, 0.01%)</title><rect x="55.7668%" y="645" width="0.0124%" height="15" fill="rgb(226,99,2)"/><text x="56.0168%" y="655.50"></text></g><g><title>atomic_fetch_add_zu (2 samples, 0.01%)</title><rect x="55.7668%" y="629" width="0.0124%" height="15" fill="rgb(206,133,23)"/><text x="56.0168%" y="639.50"></text></g><g><title>arena_bin_malloc_hard (6 samples, 0.04%)</title><rect x="55.7482%" y="693" width="0.0373%" height="15" fill="rgb(243,173,15)"/><text x="55.9982%" y="703.50"></text></g><g><title>arena_bin_nonfull_slab_get (5 samples, 0.03%)</title><rect x="55.7544%" y="677" width="0.0311%" height="15" fill="rgb(228,69,28)"/><text x="56.0044%" y="687.50"></text></g><g><title>arena_slab_reg_alloc (3 samples, 0.02%)</title><rect x="55.7855%" y="693" width="0.0186%" height="15" fill="rgb(212,51,22)"/><text x="56.0355%" y="703.50"></text></g><g><title>bitmap_sfu (2 samples, 0.01%)</title><rect x="55.7917%" y="677" width="0.0124%" height="15" fill="rgb(227,113,0)"/><text x="56.0417%" y="687.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (12 samples, 0.07%)</title><rect x="55.7482%" y="725" width="0.0746%" height="15" fill="rgb(252,84,27)"/><text x="55.9982%" y="735.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (12 samples, 0.07%)</title><rect x="55.7482%" y="709" width="0.0746%" height="15" fill="rgb(223,145,39)"/><text x="55.9982%" y="719.50"></text></g><g><title>malloc_mutex_lock (3 samples, 0.02%)</title><rect x="55.8041%" y="693" width="0.0186%" height="15" fill="rgb(239,219,30)"/><text x="56.0541%" y="703.50"></text></g><g><title>malloc_mutex_trylock_final (3 samples, 0.02%)</title><rect x="55.8041%" y="677" width="0.0186%" height="15" fill="rgb(224,196,39)"/><text x="56.0541%" y="687.50"></text></g><g><title>__GI___pthread_mutex_trylock (3 samples, 0.02%)</title><rect x="55.8041%" y="661" width="0.0186%" height="15" fill="rgb(205,35,43)"/><text x="56.0541%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (23 samples, 0.14%)</title><rect x="55.6985%" y="885" width="0.1429%" height="15" fill="rgb(228,201,21)"/><text x="55.9485%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (23 samples, 0.14%)</title><rect x="55.6985%" y="869" width="0.1429%" height="15" fill="rgb(237,118,16)"/><text x="55.9485%" y="879.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.13%)</title><rect x="55.7109%" y="853" width="0.1305%" height="15" fill="rgb(241,17,19)"/><text x="55.9609%" y="863.50"></text></g><g><title>_rjem_mallocx (19 samples, 0.12%)</title><rect x="55.7233%" y="837" width="0.1181%" height="15" fill="rgb(214,10,25)"/><text x="55.9733%" y="847.50"></text></g><g><title>imalloc (17 samples, 0.11%)</title><rect x="55.7358%" y="821" width="0.1056%" height="15" fill="rgb(238,37,29)"/><text x="55.9858%" y="831.50"></text></g><g><title>imalloc_body (17 samples, 0.11%)</title><rect x="55.7358%" y="805" width="0.1056%" height="15" fill="rgb(253,83,25)"/><text x="55.9858%" y="815.50"></text></g><g><title>imalloc_no_sample (17 samples, 0.11%)</title><rect x="55.7358%" y="789" width="0.1056%" height="15" fill="rgb(234,192,12)"/><text x="55.9858%" y="799.50"></text></g><g><title>iallocztm (16 samples, 0.10%)</title><rect x="55.7420%" y="773" width="0.0994%" height="15" fill="rgb(241,216,45)"/><text x="55.9920%" y="783.50"></text></g><g><title>arena_malloc (16 samples, 0.10%)</title><rect x="55.7420%" y="757" width="0.0994%" height="15" fill="rgb(242,22,33)"/><text x="55.9920%" y="767.50"></text></g><g><title>tcache_alloc_small (15 samples, 0.09%)</title><rect x="55.7482%" y="741" width="0.0932%" height="15" fill="rgb(231,105,49)"/><text x="55.9982%" y="751.50"></text></g><g><title>tcache_event (2 samples, 0.01%)</title><rect x="55.8290%" y="725" width="0.0124%" height="15" fill="rgb(218,204,15)"/><text x="56.0790%" y="735.50"></text></g><g><title>ticker_tick (2 samples, 0.01%)</title><rect x="55.8290%" y="709" width="0.0124%" height="15" fill="rgb(235,138,41)"/><text x="56.0790%" y="719.50"></text></g><g><title>ticker_ticks (2 samples, 0.01%)</title><rect x="55.8290%" y="693" width="0.0124%" height="15" fill="rgb(246,0,9)"/><text x="56.0790%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (3 samples, 0.02%)</title><rect x="55.8414%" y="885" width="0.0186%" height="15" fill="rgb(210,74,4)"/><text x="56.0914%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (34 samples, 0.21%)</title><rect x="55.6736%" y="933" width="0.2113%" height="15" fill="rgb(250,60,41)"/><text x="55.9236%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (31 samples, 0.19%)</title><rect x="55.6923%" y="917" width="0.1926%" height="15" fill="rgb(220,115,12)"/><text x="55.9423%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (31 samples, 0.19%)</title><rect x="55.6923%" y="901" width="0.1926%" height="15" fill="rgb(237,100,13)"/><text x="55.9423%" y="911.50"></text></g><g><title>core::alloc::layout::Layout::array (4 samples, 0.02%)</title><rect x="55.8601%" y="885" width="0.0249%" height="15" fill="rgb(213,55,26)"/><text x="56.1101%" y="895.50"></text></g><g><title>core::alloc::layout::Layout::repeat (4 samples, 0.02%)</title><rect x="55.8601%" y="869" width="0.0249%" height="15" fill="rgb(216,17,4)"/><text x="56.1101%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (301 samples, 1.87%)</title><rect x="54.1511%" y="1109" width="1.8705%" height="15" fill="rgb(220,153,47)"/><text x="54.4011%" y="1119.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (301 samples, 1.87%)</title><rect x="54.1511%" y="1093" width="1.8705%" height="15" fill="rgb(215,131,9)"/><text x="54.4011%" y="1103.50">a..</text></g><g><title>alloc::slice::hack::to_vec (301 samples, 1.87%)</title><rect x="54.1511%" y="1077" width="1.8705%" height="15" fill="rgb(233,46,42)"/><text x="54.4011%" y="1087.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (301 samples, 1.87%)</title><rect x="54.1511%" y="1061" width="1.8705%" height="15" fill="rgb(226,86,7)"/><text x="54.4011%" y="1071.50">&lt;..</text></g><g><title>&lt;model::rho_types::MatchCase as core::clone::Clone&gt;::clone (301 samples, 1.87%)</title><rect x="54.1511%" y="1045" width="1.8705%" height="15" fill="rgb(239,226,21)"/><text x="54.4011%" y="1055.50">&lt;..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (301 samples, 1.87%)</title><rect x="54.1511%" y="1029" width="1.8705%" height="15" fill="rgb(244,137,22)"/><text x="54.4011%" y="1039.50">&lt;..</text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (301 samples, 1.87%)</title><rect x="54.1511%" y="1013" width="1.8705%" height="15" fill="rgb(211,139,35)"/><text x="54.4011%" y="1023.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (301 samples, 1.87%)</title><rect x="54.1511%" y="997" width="1.8705%" height="15" fill="rgb(214,62,50)"/><text x="54.4011%" y="1007.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (299 samples, 1.86%)</title><rect x="54.1636%" y="981" width="1.8581%" height="15" fill="rgb(212,113,44)"/><text x="54.4136%" y="991.50">a..</text></g><g><title>alloc::slice::hack::to_vec (299 samples, 1.86%)</title><rect x="54.1636%" y="965" width="1.8581%" height="15" fill="rgb(226,150,43)"/><text x="54.4136%" y="975.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (299 samples, 1.86%)</title><rect x="54.1636%" y="949" width="1.8581%" height="15" fill="rgb(250,71,37)"/><text x="54.4136%" y="959.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (22 samples, 0.14%)</title><rect x="55.8849%" y="933" width="0.1367%" height="15" fill="rgb(219,76,19)"/><text x="56.1349%" y="943.50"></text></g><g><title>[libc-2.31.so] (19 samples, 0.12%)</title><rect x="55.9036%" y="917" width="0.1181%" height="15" fill="rgb(250,39,11)"/><text x="56.1536%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.01%)</title><rect x="56.0962%" y="901" width="0.0124%" height="15" fill="rgb(230,64,31)"/><text x="56.3462%" y="911.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (2 samples, 0.01%)</title><rect x="56.1646%" y="821" width="0.0124%" height="15" fill="rgb(208,222,23)"/><text x="56.4146%" y="831.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.04%)</title><rect x="56.1459%" y="837" width="0.0435%" height="15" fill="rgb(227,125,18)"/><text x="56.3959%" y="847.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="56.1770%" y="821" width="0.0124%" height="15" fill="rgb(234,210,9)"/><text x="56.4270%" y="831.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (12 samples, 0.07%)</title><rect x="56.1335%" y="853" width="0.0746%" height="15" fill="rgb(217,127,24)"/><text x="56.3835%" y="863.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.02%)</title><rect x="56.1894%" y="837" width="0.0186%" height="15" fill="rgb(239,141,48)"/><text x="56.4394%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.03%)</title><rect x="56.2702%" y="805" width="0.0311%" height="15" fill="rgb(227,109,8)"/><text x="56.5202%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.03%)</title><rect x="56.2702%" y="789" width="0.0311%" height="15" fill="rgb(235,184,23)"/><text x="56.5202%" y="799.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="56.2888%" y="773" width="0.0124%" height="15" fill="rgb(227,226,48)"/><text x="56.5388%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17 samples, 0.11%)</title><rect x="56.2081%" y="853" width="0.1056%" height="15" fill="rgb(206,150,11)"/><text x="56.4581%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.07%)</title><rect x="56.2453%" y="837" width="0.0684%" height="15" fill="rgb(254,2,33)"/><text x="56.4953%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.07%)</title><rect x="56.2453%" y="821" width="0.0684%" height="15" fill="rgb(243,160,20)"/><text x="56.4953%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (2 samples, 0.01%)</title><rect x="56.3013%" y="805" width="0.0124%" height="15" fill="rgb(218,208,30)"/><text x="56.5513%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (40 samples, 0.25%)</title><rect x="56.0962%" y="917" width="0.2486%" height="15" fill="rgb(224,120,49)"/><text x="56.3462%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (38 samples, 0.24%)</title><rect x="56.1086%" y="901" width="0.2361%" height="15" fill="rgb(246,12,2)"/><text x="56.3586%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (38 samples, 0.24%)</title><rect x="56.1086%" y="885" width="0.2361%" height="15" fill="rgb(236,117,3)"/><text x="56.3586%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (38 samples, 0.24%)</title><rect x="56.1086%" y="869" width="0.2361%" height="15" fill="rgb(216,128,52)"/><text x="56.3586%" y="879.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (5 samples, 0.03%)</title><rect x="56.3137%" y="853" width="0.0311%" height="15" fill="rgb(246,145,19)"/><text x="56.5637%" y="863.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="56.3323%" y="837" width="0.0124%" height="15" fill="rgb(222,11,46)"/><text x="56.5823%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="56.3510%" y="805" width="0.0186%" height="15" fill="rgb(245,82,36)"/><text x="56.6010%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.02%)</title><rect x="56.3510%" y="789" width="0.0186%" height="15" fill="rgb(250,73,51)"/><text x="56.6010%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.02%)</title><rect x="56.3510%" y="773" width="0.0186%" height="15" fill="rgb(221,189,23)"/><text x="56.6010%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="56.3510%" y="757" width="0.0186%" height="15" fill="rgb(210,33,7)"/><text x="56.6010%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="56.3510%" y="741" width="0.0186%" height="15" fill="rgb(210,107,22)"/><text x="56.6010%" y="751.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="56.3510%" y="725" width="0.0186%" height="15" fill="rgb(222,116,37)"/><text x="56.6010%" y="735.50"></text></g><g><title>_rjem_mallocx (3 samples, 0.02%)</title><rect x="56.3510%" y="709" width="0.0186%" height="15" fill="rgb(254,17,48)"/><text x="56.6010%" y="719.50"></text></g><g><title>imalloc (2 samples, 0.01%)</title><rect x="56.3572%" y="693" width="0.0124%" height="15" fill="rgb(224,36,32)"/><text x="56.6072%" y="703.50"></text></g><g><title>imalloc_body (2 samples, 0.01%)</title><rect x="56.3572%" y="677" width="0.0124%" height="15" fill="rgb(232,90,46)"/><text x="56.6072%" y="687.50"></text></g><g><title>sz_index2size (2 samples, 0.01%)</title><rect x="56.3572%" y="661" width="0.0124%" height="15" fill="rgb(241,66,40)"/><text x="56.6072%" y="671.50"></text></g><g><title>sz_index2size_lookup (2 samples, 0.01%)</title><rect x="56.3572%" y="645" width="0.0124%" height="15" fill="rgb(249,184,29)"/><text x="56.6072%" y="655.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (49 samples, 0.30%)</title><rect x="56.0776%" y="933" width="0.3045%" height="15" fill="rgb(231,181,1)"/><text x="56.3276%" y="943.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.04%)</title><rect x="56.3448%" y="917" width="0.0373%" height="15" fill="rgb(224,94,2)"/><text x="56.5948%" y="927.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (5 samples, 0.03%)</title><rect x="56.3510%" y="901" width="0.0311%" height="15" fill="rgb(229,170,15)"/><text x="56.6010%" y="911.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (5 samples, 0.03%)</title><rect x="56.3510%" y="885" width="0.0311%" height="15" fill="rgb(240,127,35)"/><text x="56.6010%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.03%)</title><rect x="56.3510%" y="869" width="0.0311%" height="15" fill="rgb(248,196,34)"/><text x="56.6010%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.03%)</title><rect x="56.3510%" y="853" width="0.0311%" height="15" fill="rgb(236,137,7)"/><text x="56.6010%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.03%)</title><rect x="56.3510%" y="837" width="0.0311%" height="15" fill="rgb(235,127,16)"/><text x="56.6010%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.03%)</title><rect x="56.3510%" y="821" width="0.0311%" height="15" fill="rgb(250,192,54)"/><text x="56.6010%" y="831.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.01%)</title><rect x="56.3696%" y="805" width="0.0124%" height="15" fill="rgb(218,98,20)"/><text x="56.6196%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="56.3696%" y="789" width="0.0124%" height="15" fill="rgb(230,176,47)"/><text x="56.6196%" y="799.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="56.3696%" y="773" width="0.0124%" height="15" fill="rgb(244,2,33)"/><text x="56.6196%" y="783.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (57 samples, 0.35%)</title><rect x="56.0651%" y="981" width="0.3542%" height="15" fill="rgb(231,100,17)"/><text x="56.3151%" y="991.50"></text></g><g><title>&lt;model::rho_types::ELt as core::clone::Clone&gt;::clone (57 samples, 0.35%)</title><rect x="56.0651%" y="965" width="0.3542%" height="15" fill="rgb(245,23,12)"/><text x="56.3151%" y="975.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (55 samples, 0.34%)</title><rect x="56.0776%" y="949" width="0.3418%" height="15" fill="rgb(249,55,22)"/><text x="56.3276%" y="959.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.04%)</title><rect x="56.3821%" y="933" width="0.0373%" height="15" fill="rgb(207,134,9)"/><text x="56.6321%" y="943.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (62 samples, 0.39%)</title><rect x="56.0465%" y="997" width="0.3853%" height="15" fill="rgb(218,134,0)"/><text x="56.2965%" y="1007.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="56.4193%" y="981" width="0.0124%" height="15" fill="rgb(213,212,33)"/><text x="56.6693%" y="991.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (63 samples, 0.39%)</title><rect x="56.0465%" y="1013" width="0.3915%" height="15" fill="rgb(252,106,18)"/><text x="56.2965%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.06%)</title><rect x="56.4380%" y="1013" width="0.0559%" height="15" fill="rgb(208,126,42)"/><text x="56.6880%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.04%)</title><rect x="56.4504%" y="997" width="0.0435%" height="15" fill="rgb(246,175,29)"/><text x="56.7004%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.04%)</title><rect x="56.4504%" y="981" width="0.0435%" height="15" fill="rgb(215,13,50)"/><text x="56.7004%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (2 samples, 0.01%)</title><rect x="56.4815%" y="965" width="0.0124%" height="15" fill="rgb(216,172,15)"/><text x="56.7315%" y="975.50"></text></g><g><title>&lt;rho_runtime::storage::TaggedContinuation as core::clone::Clone&gt;::clone (379 samples, 2.36%)</title><rect x="54.1511%" y="1253" width="2.3552%" height="15" fill="rgb(212,103,13)"/><text x="54.4011%" y="1263.50">&lt;..</text></g><g><title>&lt;model::rho_types::ParWithRandom as core::clone::Clone&gt;::clone (379 samples, 2.36%)</title><rect x="54.1511%" y="1237" width="2.3552%" height="15" fill="rgb(231,171,36)"/><text x="54.4011%" y="1247.50">&lt;..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (379 samples, 2.36%)</title><rect x="54.1511%" y="1221" width="2.3552%" height="15" fill="rgb(250,123,20)"/><text x="54.4011%" y="1231.50">&lt;..</text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (379 samples, 2.36%)</title><rect x="54.1511%" y="1205" width="2.3552%" height="15" fill="rgb(212,53,50)"/><text x="54.4011%" y="1215.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (379 samples, 2.36%)</title><rect x="54.1511%" y="1189" width="2.3552%" height="15" fill="rgb(243,54,12)"/><text x="54.4011%" y="1199.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (379 samples, 2.36%)</title><rect x="54.1511%" y="1173" width="2.3552%" height="15" fill="rgb(234,101,34)"/><text x="54.4011%" y="1183.50">a..</text></g><g><title>alloc::slice::hack::to_vec (379 samples, 2.36%)</title><rect x="54.1511%" y="1157" width="2.3552%" height="15" fill="rgb(254,67,22)"/><text x="54.4011%" y="1167.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (379 samples, 2.36%)</title><rect x="54.1511%" y="1141" width="2.3552%" height="15" fill="rgb(250,35,47)"/><text x="54.4011%" y="1151.50">&lt;..</text></g><g><title>&lt;model::rho_types::Match as core::clone::Clone&gt;::clone (379 samples, 2.36%)</title><rect x="54.1511%" y="1125" width="2.3552%" height="15" fill="rgb(226,126,38)"/><text x="54.4011%" y="1135.50">&lt;..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (78 samples, 0.48%)</title><rect x="56.0216%" y="1109" width="0.4847%" height="15" fill="rgb(216,138,53)"/><text x="56.2716%" y="1119.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (78 samples, 0.48%)</title><rect x="56.0216%" y="1093" width="0.4847%" height="15" fill="rgb(246,199,43)"/><text x="56.2716%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (78 samples, 0.48%)</title><rect x="56.0216%" y="1077" width="0.4847%" height="15" fill="rgb(232,125,11)"/><text x="56.2716%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (77 samples, 0.48%)</title><rect x="56.0278%" y="1061" width="0.4785%" height="15" fill="rgb(218,219,45)"/><text x="56.2778%" y="1071.50"></text></g><g><title>alloc::slice::hack::to_vec (77 samples, 0.48%)</title><rect x="56.0278%" y="1045" width="0.4785%" height="15" fill="rgb(216,102,54)"/><text x="56.2778%" y="1055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (77 samples, 0.48%)</title><rect x="56.0278%" y="1029" width="0.4785%" height="15" fill="rgb(250,228,7)"/><text x="56.2778%" y="1039.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2 samples, 0.01%)</title><rect x="56.4939%" y="1013" width="0.0124%" height="15" fill="rgb(226,125,25)"/><text x="56.7439%" y="1023.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="56.4939%" y="997" width="0.0124%" height="15" fill="rgb(224,165,27)"/><text x="56.7439%" y="1007.50"></text></g><g><title>rho_runtime::storage::tuplecell::TupleCell::join (385 samples, 2.39%)</title><rect x="54.1201%" y="1269" width="2.3925%" height="15" fill="rgb(233,86,3)"/><text x="54.3701%" y="1279.50">rh..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.09%)</title><rect x="56.5374%" y="533" width="0.0870%" height="15" fill="rgb(228,116,20)"/><text x="56.7874%" y="543.50"></text></g><g><title>core::ptr::read (13 samples, 0.08%)</title><rect x="56.5436%" y="517" width="0.0808%" height="15" fill="rgb(209,192,17)"/><text x="56.7936%" y="527.50"></text></g><g><title>[libc-2.31.so] (13 samples, 0.08%)</title><rect x="56.5436%" y="501" width="0.0808%" height="15" fill="rgb(224,88,34)"/><text x="56.7936%" y="511.50"></text></g><g><title>[libc-2.31.so] (18 samples, 0.11%)</title><rect x="56.6244%" y="533" width="0.1119%" height="15" fill="rgb(233,38,6)"/><text x="56.8744%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (3 samples, 0.02%)</title><rect x="56.7363%" y="533" width="0.0186%" height="15" fill="rgb(212,59,30)"/><text x="56.9863%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.02%)</title><rect x="56.7363%" y="517" width="0.0186%" height="15" fill="rgb(213,80,3)"/><text x="56.9863%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="56.7363%" y="501" width="0.0186%" height="15" fill="rgb(251,178,7)"/><text x="56.9863%" y="511.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.02%)</title><rect x="56.7363%" y="485" width="0.0186%" height="15" fill="rgb(213,154,26)"/><text x="56.9863%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.01%)</title><rect x="56.7549%" y="533" width="0.0124%" height="15" fill="rgb(238,165,49)"/><text x="57.0049%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="56.7549%" y="517" width="0.0124%" height="15" fill="rgb(248,91,46)"/><text x="57.0049%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.01%)</title><rect x="56.7549%" y="501" width="0.0124%" height="15" fill="rgb(244,21,52)"/><text x="57.0049%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.01%)</title><rect x="56.7549%" y="485" width="0.0124%" height="15" fill="rgb(247,122,20)"/><text x="57.0049%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="56.7549%" y="469" width="0.0124%" height="15" fill="rgb(218,27,9)"/><text x="57.0049%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="56.7549%" y="453" width="0.0124%" height="15" fill="rgb(246,7,6)"/><text x="57.0049%" y="463.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="56.7549%" y="437" width="0.0124%" height="15" fill="rgb(227,135,54)"/><text x="57.0049%" y="447.50"></text></g><g><title>_rjem_mallocx (2 samples, 0.01%)</title><rect x="56.7549%" y="421" width="0.0124%" height="15" fill="rgb(247,14,11)"/><text x="57.0049%" y="431.50"></text></g><g><title>imalloc (2 samples, 0.01%)</title><rect x="56.7549%" y="405" width="0.0124%" height="15" fill="rgb(206,149,34)"/><text x="57.0049%" y="415.50"></text></g><g><title>imalloc_body (2 samples, 0.01%)</title><rect x="56.7549%" y="389" width="0.0124%" height="15" fill="rgb(227,228,4)"/><text x="57.0049%" y="399.50"></text></g><g><title>imalloc_no_sample (2 samples, 0.01%)</title><rect x="56.7549%" y="373" width="0.0124%" height="15" fill="rgb(238,218,28)"/><text x="57.0049%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;model::rho_types::Expr&gt;&gt; (4 samples, 0.02%)</title><rect x="56.7673%" y="533" width="0.0249%" height="15" fill="rgb(252,86,40)"/><text x="57.0173%" y="543.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="56.7673%" y="517" width="0.0249%" height="15" fill="rgb(251,225,11)"/><text x="57.0173%" y="527.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (2 samples, 0.01%)</title><rect x="56.7798%" y="501" width="0.0124%" height="15" fill="rgb(206,46,49)"/><text x="57.0298%" y="511.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (46 samples, 0.29%)</title><rect x="56.5188%" y="1269" width="0.2859%" height="15" fill="rgb(245,128,24)"/><text x="56.7688%" y="1279.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (46 samples, 0.29%)</title><rect x="56.5188%" y="1253" width="0.2859%" height="15" fill="rgb(219,177,34)"/><text x="56.7688%" y="1263.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (46 samples, 0.29%)</title><rect x="56.5188%" y="1237" width="0.2859%" height="15" fill="rgb(218,60,48)"/><text x="56.7688%" y="1247.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (46 samples, 0.29%)</title><rect x="56.5188%" y="1221" width="0.2859%" height="15" fill="rgb(221,11,5)"/><text x="56.7688%" y="1231.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (46 samples, 0.29%)</title><rect x="56.5188%" y="1205" width="0.2859%" height="15" fill="rgb(220,148,13)"/><text x="56.7688%" y="1215.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (46 samples, 0.29%)</title><rect x="56.5188%" y="1189" width="0.2859%" height="15" fill="rgb(210,16,3)"/><text x="56.7688%" y="1199.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (46 samples, 0.29%)</title><rect x="56.5188%" y="1173" width="0.2859%" height="15" fill="rgb(236,80,2)"/><text x="56.7688%" y="1183.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (46 samples, 0.29%)</title><rect x="56.5188%" y="1157" width="0.2859%" height="15" fill="rgb(239,129,19)"/><text x="56.7688%" y="1167.50"></text></g><g><title>std::panic::catch_unwind (46 samples, 0.29%)</title><rect x="56.5188%" y="1141" width="0.2859%" height="15" fill="rgb(220,106,35)"/><text x="56.7688%" y="1151.50"></text></g><g><title>std::panicking::try (46 samples, 0.29%)</title><rect x="56.5188%" y="1125" width="0.2859%" height="15" fill="rgb(252,139,45)"/><text x="56.7688%" y="1135.50"></text></g><g><title>std::panicking::try::do_call (46 samples, 0.29%)</title><rect x="56.5188%" y="1109" width="0.2859%" height="15" fill="rgb(229,8,36)"/><text x="56.7688%" y="1119.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (46 samples, 0.29%)</title><rect x="56.5188%" y="1093" width="0.2859%" height="15" fill="rgb(230,126,33)"/><text x="56.7688%" y="1103.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (46 samples, 0.29%)</title><rect x="56.5188%" y="1077" width="0.2859%" height="15" fill="rgb(239,140,21)"/><text x="56.7688%" y="1087.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (46 samples, 0.29%)</title><rect x="56.5188%" y="1061" width="0.2859%" height="15" fill="rgb(254,104,9)"/><text x="56.7688%" y="1071.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (46 samples, 0.29%)</title><rect x="56.5188%" y="1045" width="0.2859%" height="15" fill="rgb(239,52,14)"/><text x="56.7688%" y="1055.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (46 samples, 0.29%)</title><rect x="56.5188%" y="1029" width="0.2859%" height="15" fill="rgb(208,227,44)"/><text x="56.7688%" y="1039.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (46 samples, 0.29%)</title><rect x="56.5188%" y="1013" width="0.2859%" height="15" fill="rgb(246,18,19)"/><text x="56.7688%" y="1023.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (46 samples, 0.29%)</title><rect x="56.5188%" y="997" width="0.2859%" height="15" fill="rgb(235,228,25)"/><text x="56.7688%" y="1007.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (46 samples, 0.29%)</title><rect x="56.5188%" y="981" width="0.2859%" height="15" fill="rgb(240,156,20)"/><text x="56.7688%" y="991.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (46 samples, 0.29%)</title><rect x="56.5188%" y="965" width="0.2859%" height="15" fill="rgb(224,8,20)"/><text x="56.7688%" y="975.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (46 samples, 0.29%)</title><rect x="56.5188%" y="949" width="0.2859%" height="15" fill="rgb(214,12,52)"/><text x="56.7688%" y="959.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (46 samples, 0.29%)</title><rect x="56.5188%" y="933" width="0.2859%" height="15" fill="rgb(211,220,47)"/><text x="56.7688%" y="943.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (46 samples, 0.29%)</title><rect x="56.5188%" y="917" width="0.2859%" height="15" fill="rgb(250,173,5)"/><text x="56.7688%" y="927.50"></text></g><g><title>tokio::coop::budget (46 samples, 0.29%)</title><rect x="56.5188%" y="901" width="0.2859%" height="15" fill="rgb(250,125,52)"/><text x="56.7688%" y="911.50"></text></g><g><title>tokio::coop::with_budget (46 samples, 0.29%)</title><rect x="56.5188%" y="885" width="0.2859%" height="15" fill="rgb(209,133,18)"/><text x="56.7688%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (46 samples, 0.29%)</title><rect x="56.5188%" y="869" width="0.2859%" height="15" fill="rgb(216,173,22)"/><text x="56.7688%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (46 samples, 0.29%)</title><rect x="56.5188%" y="853" width="0.2859%" height="15" fill="rgb(205,3,22)"/><text x="56.7688%" y="863.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (46 samples, 0.29%)</title><rect x="56.5188%" y="837" width="0.2859%" height="15" fill="rgb(248,22,20)"/><text x="56.7688%" y="847.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (46 samples, 0.29%)</title><rect x="56.5188%" y="821" width="0.2859%" height="15" fill="rgb(233,6,29)"/><text x="56.7688%" y="831.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (46 samples, 0.29%)</title><rect x="56.5188%" y="805" width="0.2859%" height="15" fill="rgb(240,22,54)"/><text x="56.7688%" y="815.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (46 samples, 0.29%)</title><rect x="56.5188%" y="789" width="0.2859%" height="15" fill="rgb(231,133,32)"/><text x="56.7688%" y="799.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (46 samples, 0.29%)</title><rect x="56.5188%" y="773" width="0.2859%" height="15" fill="rgb(248,193,4)"/><text x="56.7688%" y="783.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (46 samples, 0.29%)</title><rect x="56.5188%" y="757" width="0.2859%" height="15" fill="rgb(211,178,46)"/><text x="56.7688%" y="767.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (46 samples, 0.29%)</title><rect x="56.5188%" y="741" width="0.2859%" height="15" fill="rgb(224,5,42)"/><text x="56.7688%" y="751.50"></text></g><g><title>std::panic::catch_unwind (46 samples, 0.29%)</title><rect x="56.5188%" y="725" width="0.2859%" height="15" fill="rgb(239,176,25)"/><text x="56.7688%" y="735.50"></text></g><g><title>std::panicking::try (46 samples, 0.29%)</title><rect x="56.5188%" y="709" width="0.2859%" height="15" fill="rgb(245,187,50)"/><text x="56.7688%" y="719.50"></text></g><g><title>std::panicking::try::do_call (46 samples, 0.29%)</title><rect x="56.5188%" y="693" width="0.2859%" height="15" fill="rgb(248,24,15)"/><text x="56.7688%" y="703.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (46 samples, 0.29%)</title><rect x="56.5188%" y="677" width="0.2859%" height="15" fill="rgb(205,166,13)"/><text x="56.7688%" y="687.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (46 samples, 0.29%)</title><rect x="56.5188%" y="661" width="0.2859%" height="15" fill="rgb(208,114,23)"/><text x="56.7688%" y="671.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (46 samples, 0.29%)</title><rect x="56.5188%" y="645" width="0.2859%" height="15" fill="rgb(239,127,18)"/><text x="56.7688%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (46 samples, 0.29%)</title><rect x="56.5188%" y="629" width="0.2859%" height="15" fill="rgb(219,154,28)"/><text x="56.7688%" y="639.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation::{{closure}} (45 samples, 0.28%)</title><rect x="56.5250%" y="613" width="0.2796%" height="15" fill="rgb(225,157,23)"/><text x="56.7750%" y="623.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_send::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Send&gt;::evaluate (45 samples, 0.28%)</title><rect x="56.5250%" y="597" width="0.2796%" height="15" fill="rgb(219,8,6)"/><text x="56.7750%" y="607.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute (45 samples, 0.28%)</title><rect x="56.5250%" y="581" width="0.2796%" height="15" fill="rgb(212,47,6)"/><text x="56.7750%" y="591.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute_no_sort (45 samples, 0.28%)</title><rect x="56.5250%" y="565" width="0.2796%" height="15" fill="rgb(224,190,4)"/><text x="56.7750%" y="575.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::substitute_expressions_in_par (45 samples, 0.28%)</title><rect x="56.5250%" y="549" width="0.2796%" height="15" fill="rgb(239,183,29)"/><text x="56.7750%" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.02%)</title><rect x="56.8046%" y="1269" width="0.0186%" height="15" fill="rgb(213,57,7)"/><text x="57.0546%" y="1279.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.01%)</title><rect x="56.8108%" y="1253" width="0.0124%" height="15" fill="rgb(216,148,1)"/><text x="57.0608%" y="1263.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (2 samples, 0.01%)</title><rect x="56.8108%" y="1237" width="0.0124%" height="15" fill="rgb(236,182,29)"/><text x="57.0608%" y="1247.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (2 samples, 0.01%)</title><rect x="56.8108%" y="1221" width="0.0124%" height="15" fill="rgb(244,120,48)"/><text x="57.0608%" y="1231.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (2 samples, 0.01%)</title><rect x="56.8108%" y="1205" width="0.0124%" height="15" fill="rgb(206,71,34)"/><text x="57.0608%" y="1215.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (2 samples, 0.01%)</title><rect x="56.8108%" y="1189" width="0.0124%" height="15" fill="rgb(242,32,6)"/><text x="57.0608%" y="1199.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2 samples, 0.01%)</title><rect x="56.8108%" y="1173" width="0.0124%" height="15" fill="rgb(241,35,3)"/><text x="57.0608%" y="1183.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (2 samples, 0.01%)</title><rect x="56.8108%" y="1157" width="0.0124%" height="15" fill="rgb(222,62,19)"/><text x="57.0608%" y="1167.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (2 samples, 0.01%)</title><rect x="56.8108%" y="1141" width="0.0124%" height="15" fill="rgb(223,110,41)"/><text x="57.0608%" y="1151.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.01%)</title><rect x="56.8108%" y="1125" width="0.0124%" height="15" fill="rgb(208,224,4)"/><text x="57.0608%" y="1135.50"></text></g><g><title>std::panicking::try (2 samples, 0.01%)</title><rect x="56.8108%" y="1109" width="0.0124%" height="15" fill="rgb(241,137,19)"/><text x="57.0608%" y="1119.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.01%)</title><rect x="56.8108%" y="1093" width="0.0124%" height="15" fill="rgb(244,24,17)"/><text x="57.0608%" y="1103.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.01%)</title><rect x="56.8108%" y="1077" width="0.0124%" height="15" fill="rgb(245,178,49)"/><text x="57.0608%" y="1087.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (2 samples, 0.01%)</title><rect x="56.8108%" y="1061" width="0.0124%" height="15" fill="rgb(219,160,38)"/><text x="57.0608%" y="1071.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (2 samples, 0.01%)</title><rect x="56.8108%" y="1045" width="0.0124%" height="15" fill="rgb(228,137,14)"/><text x="57.0608%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="56.8108%" y="1029" width="0.0124%" height="15" fill="rgb(237,134,11)"/><text x="57.0608%" y="1039.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::produce::{{closure}} (2 samples, 0.01%)</title><rect x="56.8108%" y="1013" width="0.0124%" height="15" fill="rgb(211,126,44)"/><text x="57.0608%" y="1023.50"></text></g><g><title>&lt;rho_runtime::storage::store::AsyncStore as rho_runtime::storage::Storage&gt;::produce (2 samples, 0.01%)</title><rect x="56.8108%" y="997" width="0.0124%" height="15" fill="rgb(226,171,33)"/><text x="57.0608%" y="1007.50"></text></g><g><title>tokio::coop::CURRENT::__getit (2 samples, 0.01%)</title><rect x="56.8295%" y="1269" width="0.0124%" height="15" fill="rgb(253,99,13)"/><text x="57.0795%" y="1279.50"></text></g><g><title>&lt;tokio::loom::std::atomic_usize::AtomicUsize as tokio::sync::mpsc::chan::Semaphore&gt;::add_permit (32 samples, 0.20%)</title><rect x="56.9911%" y="1237" width="0.1989%" height="15" fill="rgb(244,48,7)"/><text x="57.2411%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (31 samples, 0.19%)</title><rect x="56.9973%" y="1221" width="0.1926%" height="15" fill="rgb(244,217,54)"/><text x="57.2473%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_sub (31 samples, 0.19%)</title><rect x="56.9973%" y="1205" width="0.1926%" height="15" fill="rgb(224,15,18)"/><text x="57.2473%" y="1215.50"></text></g><g><title>[libc-2.31.so] (98 samples, 0.61%)</title><rect x="57.1899%" y="1237" width="0.6090%" height="15" fill="rgb(244,99,12)"/><text x="57.4399%" y="1247.50"></text></g><g><title>core::task::wake::Context::waker (2 samples, 0.01%)</title><rect x="57.7989%" y="1237" width="0.0124%" height="15" fill="rgb(233,226,8)"/><text x="58.0489%" y="1247.50"></text></g><g><title>[libc-2.31.so] (314 samples, 1.95%)</title><rect x="57.8175%" y="1221" width="1.9513%" height="15" fill="rgb(229,211,3)"/><text x="58.0675%" y="1231.50">[..</text></g><g><title>__rust_probestack (3 samples, 0.02%)</title><rect x="59.7688%" y="1221" width="0.0186%" height="15" fill="rgb(216,140,21)"/><text x="60.0188%" y="1231.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::read (787 samples, 4.89%)</title><rect x="59.7875%" y="1221" width="4.8906%" height="15" fill="rgb(234,122,30)"/><text x="60.0375%" y="1231.50">tokio:..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (785 samples, 4.88%)</title><rect x="59.7999%" y="1205" width="4.8782%" height="15" fill="rgb(236,25,46)"/><text x="60.0499%" y="1215.50">tokio:..</text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::read::{{closure}} (785 samples, 4.88%)</title><rect x="59.7999%" y="1189" width="4.8782%" height="15" fill="rgb(217,52,54)"/><text x="60.0499%" y="1199.50">tokio:..</text></g><g><title>core::ptr::read (785 samples, 4.88%)</title><rect x="59.7999%" y="1173" width="4.8782%" height="15" fill="rgb(222,29,26)"/><text x="60.0499%" y="1183.50">core::..</text></g><g><title>[libc-2.31.so] (769 samples, 4.78%)</title><rect x="59.8993%" y="1157" width="4.7788%" height="15" fill="rgb(216,177,29)"/><text x="60.1493%" y="1167.50">[libc-..</text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="64.6657%" y="1141" width="0.0124%" height="15" fill="rgb(247,136,51)"/><text x="64.9157%" y="1151.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="64.6657%" y="1125" width="0.0124%" height="15" fill="rgb(231,47,47)"/><text x="64.9157%" y="1135.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="64.6657%" y="1109" width="0.0124%" height="15" fill="rgb(211,192,36)"/><text x="64.9157%" y="1119.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="64.6657%" y="1093" width="0.0124%" height="15" fill="rgb(229,156,32)"/><text x="64.9157%" y="1103.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="64.6657%" y="1077" width="0.0124%" height="15" fill="rgb(248,213,20)"/><text x="64.9157%" y="1087.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="64.6657%" y="1061" width="0.0124%" height="15" fill="rgb(217,64,7)"/><text x="64.9157%" y="1071.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="64.6657%" y="1045" width="0.0124%" height="15" fill="rgb(232,142,8)"/><text x="64.9157%" y="1055.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="64.6657%" y="1029" width="0.0124%" height="15" fill="rgb(224,92,44)"/><text x="64.9157%" y="1039.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="64.6657%" y="1013" width="0.0124%" height="15" fill="rgb(214,169,17)"/><text x="64.9157%" y="1023.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="64.6657%" y="997" width="0.0124%" height="15" fill="rgb(210,59,37)"/><text x="64.9157%" y="1007.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="64.6657%" y="981" width="0.0124%" height="15" fill="rgb(214,116,48)"/><text x="64.9157%" y="991.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="64.6657%" y="965" width="0.0124%" height="15" fill="rgb(244,191,6)"/><text x="64.9157%" y="975.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="64.6657%" y="949" width="0.0124%" height="15" fill="rgb(241,50,52)"/><text x="64.9157%" y="959.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::reclaim_blocks (5 samples, 0.03%)</title><rect x="64.6781%" y="1221" width="0.0311%" height="15" fill="rgb(236,75,39)"/><text x="64.9281%" y="1231.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::observed_tail_position (2 samples, 0.01%)</title><rect x="64.6967%" y="1205" width="0.0124%" height="15" fill="rgb(236,99,0)"/><text x="64.9467%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.01%)</title><rect x="64.6967%" y="1189" width="0.0124%" height="15" fill="rgb(207,202,15)"/><text x="64.9467%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.01%)</title><rect x="64.6967%" y="1173" width="0.0124%" height="15" fill="rgb(233,207,14)"/><text x="64.9467%" y="1183.50"></text></g><g><title>__sched_yield (8 samples, 0.05%)</title><rect x="65.1317%" y="1205" width="0.0497%" height="15" fill="rgb(226,27,51)"/><text x="65.3817%" y="1215.50"></text></g><g><title>[unknown] (8 samples, 0.05%)</title><rect x="65.1317%" y="1189" width="0.0497%" height="15" fill="rgb(206,104,42)"/><text x="65.3817%" y="1199.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="65.1442%" y="1173" width="0.0373%" height="15" fill="rgb(212,225,4)"/><text x="65.3942%" y="1183.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="65.1566%" y="1157" width="0.0249%" height="15" fill="rgb(233,96,42)"/><text x="65.4066%" y="1167.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="65.1628%" y="1141" width="0.0186%" height="15" fill="rgb(229,21,32)"/><text x="65.4128%" y="1151.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="65.1628%" y="1125" width="0.0186%" height="15" fill="rgb(226,216,24)"/><text x="65.4128%" y="1135.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="65.1628%" y="1109" width="0.0186%" height="15" fill="rgb(221,163,17)"/><text x="65.4128%" y="1119.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="65.1628%" y="1093" width="0.0186%" height="15" fill="rgb(216,216,42)"/><text x="65.4128%" y="1103.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (1,189 samples, 7.39%)</title><rect x="57.8113%" y="1237" width="7.3888%" height="15" fill="rgb(240,118,7)"/><text x="58.0613%" y="1247.50">tokio::syn..</text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::try_advancing_head (79 samples, 0.49%)</title><rect x="64.7092%" y="1221" width="0.4909%" height="15" fill="rgb(221,67,37)"/><text x="64.9592%" y="1231.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::is_at_index (3 samples, 0.02%)</title><rect x="65.1815%" y="1205" width="0.0186%" height="15" fill="rgb(241,32,44)"/><text x="65.4315%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (43 samples, 0.27%)</title><rect x="65.2063%" y="1205" width="0.2672%" height="15" fill="rgb(235,204,43)"/><text x="65.4563%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (43 samples, 0.27%)</title><rect x="65.2063%" y="1189" width="0.2672%" height="15" fill="rgb(213,116,10)"/><text x="65.4563%" y="1199.50"></text></g><g><title>&lt;&amp;core::task::wake::Waker as tokio::sync::task::atomic_waker::WakerRef&gt;::into_waker (5 samples, 0.03%)</title><rect x="65.4735%" y="1173" width="0.0311%" height="15" fill="rgb(239,15,48)"/><text x="65.7235%" y="1183.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (5 samples, 0.03%)</title><rect x="65.4735%" y="1157" width="0.0311%" height="15" fill="rgb(207,123,36)"/><text x="65.7235%" y="1167.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (5 samples, 0.03%)</title><rect x="65.4735%" y="1141" width="0.0311%" height="15" fill="rgb(209,103,30)"/><text x="65.7235%" y="1151.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (5 samples, 0.03%)</title><rect x="65.4735%" y="1125" width="0.0311%" height="15" fill="rgb(238,100,19)"/><text x="65.7235%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (5 samples, 0.03%)</title><rect x="65.4735%" y="1109" width="0.0311%" height="15" fill="rgb(244,30,14)"/><text x="65.7235%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_add (5 samples, 0.03%)</title><rect x="65.4735%" y="1093" width="0.0311%" height="15" fill="rgb(249,174,6)"/><text x="65.7235%" y="1103.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1,396 samples, 8.68%)</title><rect x="56.8419%" y="1269" width="8.6751%" height="15" fill="rgb(235,213,41)"/><text x="57.0919%" y="1279.50">tokio::loom:..</text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv::{{closure}} (1,396 samples, 8.68%)</title><rect x="56.8419%" y="1253" width="8.6751%" height="15" fill="rgb(213,118,6)"/><text x="57.0919%" y="1263.50">tokio::sync:..</text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (51 samples, 0.32%)</title><rect x="65.2001%" y="1237" width="0.3169%" height="15" fill="rgb(235,44,51)"/><text x="65.4501%" y="1247.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register (51 samples, 0.32%)</title><rect x="65.2001%" y="1221" width="0.3169%" height="15" fill="rgb(217,9,53)"/><text x="65.4501%" y="1231.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (7 samples, 0.04%)</title><rect x="65.4735%" y="1205" width="0.0435%" height="15" fill="rgb(237,172,34)"/><text x="65.7235%" y="1215.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::{{closure}} (7 samples, 0.04%)</title><rect x="65.4735%" y="1189" width="0.0435%" height="15" fill="rgb(206,206,11)"/><text x="65.7235%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (2 samples, 0.01%)</title><rect x="65.5046%" y="1173" width="0.0124%" height="15" fill="rgb(214,149,29)"/><text x="65.7546%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (2 samples, 0.01%)</title><rect x="65.5046%" y="1157" width="0.0124%" height="15" fill="rgb(208,123,3)"/><text x="65.7546%" y="1167.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="65.5046%" y="1141" width="0.0124%" height="15" fill="rgb(229,126,4)"/><text x="65.7546%" y="1151.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (2 samples, 0.01%)</title><rect x="65.5046%" y="1125" width="0.0124%" height="15" fill="rgb(222,92,36)"/><text x="65.7546%" y="1135.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (2 samples, 0.01%)</title><rect x="65.5046%" y="1109" width="0.0124%" height="15" fill="rgb(216,39,41)"/><text x="65.7546%" y="1119.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (2 samples, 0.01%)</title><rect x="65.5046%" y="1093" width="0.0124%" height="15" fill="rgb(253,127,28)"/><text x="65.7546%" y="1103.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (2 samples, 0.01%)</title><rect x="65.5170%" y="1269" width="0.0124%" height="15" fill="rgb(249,152,51)"/><text x="65.7670%" y="1279.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (2 samples, 0.01%)</title><rect x="65.5295%" y="1269" width="0.0124%" height="15" fill="rgb(209,123,42)"/><text x="65.7795%" y="1279.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (2 samples, 0.01%)</title><rect x="65.5295%" y="1253" width="0.0124%" height="15" fill="rgb(241,118,22)"/><text x="65.7795%" y="1263.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (2 samples, 0.01%)</title><rect x="65.5295%" y="1237" width="0.0124%" height="15" fill="rgb(208,25,7)"/><text x="65.7795%" y="1247.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2 samples, 0.01%)</title><rect x="65.5295%" y="1221" width="0.0124%" height="15" fill="rgb(243,144,39)"/><text x="65.7795%" y="1231.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (2 samples, 0.01%)</title><rect x="65.5295%" y="1205" width="0.0124%" height="15" fill="rgb(250,50,5)"/><text x="65.7795%" y="1215.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (2 samples, 0.01%)</title><rect x="65.5295%" y="1189" width="0.0124%" height="15" fill="rgb(207,67,11)"/><text x="65.7795%" y="1199.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.01%)</title><rect x="65.5295%" y="1173" width="0.0124%" height="15" fill="rgb(245,204,40)"/><text x="65.7795%" y="1183.50"></text></g><g><title>std::panicking::try (2 samples, 0.01%)</title><rect x="65.5295%" y="1157" width="0.0124%" height="15" fill="rgb(238,228,24)"/><text x="65.7795%" y="1167.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.01%)</title><rect x="65.5295%" y="1141" width="0.0124%" height="15" fill="rgb(217,116,22)"/><text x="65.7795%" y="1151.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.01%)</title><rect x="65.5295%" y="1125" width="0.0124%" height="15" fill="rgb(234,98,12)"/><text x="65.7795%" y="1135.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (2 samples, 0.01%)</title><rect x="65.5295%" y="1109" width="0.0124%" height="15" fill="rgb(242,170,50)"/><text x="65.7795%" y="1119.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (2 samples, 0.01%)</title><rect x="65.5295%" y="1093" width="0.0124%" height="15" fill="rgb(235,7,5)"/><text x="65.7795%" y="1103.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2 samples, 0.01%)</title><rect x="65.5295%" y="1077" width="0.0124%" height="15" fill="rgb(241,114,28)"/><text x="65.7795%" y="1087.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (2 samples, 0.01%)</title><rect x="65.5295%" y="1061" width="0.0124%" height="15" fill="rgb(246,112,42)"/><text x="65.7795%" y="1071.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="65.5295%" y="1045" width="0.0124%" height="15" fill="rgb(248,228,14)"/><text x="65.7795%" y="1055.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (2 samples, 0.01%)</title><rect x="65.5295%" y="1029" width="0.0124%" height="15" fill="rgb(208,133,18)"/><text x="65.7795%" y="1039.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (2 samples, 0.01%)</title><rect x="65.5295%" y="1013" width="0.0124%" height="15" fill="rgb(207,35,49)"/><text x="65.7795%" y="1023.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (2 samples, 0.01%)</title><rect x="65.5295%" y="997" width="0.0124%" height="15" fill="rgb(205,68,36)"/><text x="65.7795%" y="1007.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (2 samples, 0.01%)</title><rect x="65.5295%" y="981" width="0.0124%" height="15" fill="rgb(245,62,40)"/><text x="65.7795%" y="991.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (2 samples, 0.01%)</title><rect x="65.5295%" y="965" width="0.0124%" height="15" fill="rgb(228,27,24)"/><text x="65.7795%" y="975.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (2 samples, 0.01%)</title><rect x="65.5295%" y="949" width="0.0124%" height="15" fill="rgb(253,19,12)"/><text x="65.7795%" y="959.50"></text></g><g><title>tokio::coop::budget (2 samples, 0.01%)</title><rect x="65.5295%" y="933" width="0.0124%" height="15" fill="rgb(232,28,20)"/><text x="65.7795%" y="943.50"></text></g><g><title>tokio::coop::with_budget (2 samples, 0.01%)</title><rect x="65.5295%" y="917" width="0.0124%" height="15" fill="rgb(218,35,51)"/><text x="65.7795%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.01%)</title><rect x="65.5295%" y="901" width="0.0124%" height="15" fill="rgb(212,90,40)"/><text x="65.7795%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.01%)</title><rect x="65.5295%" y="885" width="0.0124%" height="15" fill="rgb(220,172,12)"/><text x="65.7795%" y="895.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (2 samples, 0.01%)</title><rect x="65.5295%" y="869" width="0.0124%" height="15" fill="rgb(226,159,20)"/><text x="65.7795%" y="879.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (2 samples, 0.01%)</title><rect x="65.5295%" y="853" width="0.0124%" height="15" fill="rgb(234,205,16)"/><text x="65.7795%" y="863.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (2 samples, 0.01%)</title><rect x="65.5295%" y="837" width="0.0124%" height="15" fill="rgb(207,9,39)"/><text x="65.7795%" y="847.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (2 samples, 0.01%)</title><rect x="65.5295%" y="821" width="0.0124%" height="15" fill="rgb(249,143,15)"/><text x="65.7795%" y="831.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2 samples, 0.01%)</title><rect x="65.5295%" y="805" width="0.0124%" height="15" fill="rgb(253,133,29)"/><text x="65.7795%" y="815.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (2 samples, 0.01%)</title><rect x="65.5295%" y="789" width="0.0124%" height="15" fill="rgb(221,187,0)"/><text x="65.7795%" y="799.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (2 samples, 0.01%)</title><rect x="65.5295%" y="773" width="0.0124%" height="15" fill="rgb(205,204,26)"/><text x="65.7795%" y="783.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.01%)</title><rect x="65.5295%" y="757" width="0.0124%" height="15" fill="rgb(224,68,54)"/><text x="65.7795%" y="767.50"></text></g><g><title>std::panicking::try (2 samples, 0.01%)</title><rect x="65.5295%" y="741" width="0.0124%" height="15" fill="rgb(209,67,4)"/><text x="65.7795%" y="751.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.01%)</title><rect x="65.5295%" y="725" width="0.0124%" height="15" fill="rgb(228,229,18)"/><text x="65.7795%" y="735.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.01%)</title><rect x="65.5295%" y="709" width="0.0124%" height="15" fill="rgb(231,89,13)"/><text x="65.7795%" y="719.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (2 samples, 0.01%)</title><rect x="65.5295%" y="693" width="0.0124%" height="15" fill="rgb(210,182,18)"/><text x="65.7795%" y="703.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (2 samples, 0.01%)</title><rect x="65.5295%" y="677" width="0.0124%" height="15" fill="rgb(240,105,2)"/><text x="65.7795%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="65.5295%" y="661" width="0.0124%" height="15" fill="rgb(207,170,50)"/><text x="65.7795%" y="671.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::produce::{{closure}} (2 samples, 0.01%)</title><rect x="65.5295%" y="645" width="0.0124%" height="15" fill="rgb(232,133,24)"/><text x="65.7795%" y="655.50"></text></g><g><title>&lt;rho_runtime::storage::store::AsyncStore as rho_runtime::storage::Storage&gt;::produce (2 samples, 0.01%)</title><rect x="65.5295%" y="629" width="0.0124%" height="15" fill="rgb(235,166,27)"/><text x="65.7795%" y="639.50"></text></g><g><title>tokio::sync::oneshot::channel (2 samples, 0.01%)</title><rect x="65.5295%" y="613" width="0.0124%" height="15" fill="rgb(209,19,13)"/><text x="65.7795%" y="623.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="65.5295%" y="597" width="0.0124%" height="15" fill="rgb(226,79,39)"/><text x="65.7795%" y="607.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.01%)</title><rect x="65.5295%" y="581" width="0.0124%" height="15" fill="rgb(222,163,10)"/><text x="65.7795%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="65.5295%" y="565" width="0.0124%" height="15" fill="rgb(214,44,19)"/><text x="65.7795%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="65.5295%" y="549" width="0.0124%" height="15" fill="rgb(210,217,13)"/><text x="65.7795%" y="559.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="65.5295%" y="533" width="0.0124%" height="15" fill="rgb(237,61,54)"/><text x="65.7795%" y="543.50"></text></g><g><title>_rjem_mallocx (2 samples, 0.01%)</title><rect x="65.5295%" y="517" width="0.0124%" height="15" fill="rgb(226,184,24)"/><text x="65.7795%" y="527.50"></text></g><g><title>imalloc (2 samples, 0.01%)</title><rect x="65.5295%" y="501" width="0.0124%" height="15" fill="rgb(223,226,4)"/><text x="65.7795%" y="511.50"></text></g><g><title>imalloc_body (2 samples, 0.01%)</title><rect x="65.5295%" y="485" width="0.0124%" height="15" fill="rgb(210,26,41)"/><text x="65.7795%" y="495.50"></text></g><g><title>imalloc_no_sample (2 samples, 0.01%)</title><rect x="65.5295%" y="469" width="0.0124%" height="15" fill="rgb(220,221,6)"/><text x="65.7795%" y="479.50"></text></g><g><title>iallocztm (2 samples, 0.01%)</title><rect x="65.5295%" y="453" width="0.0124%" height="15" fill="rgb(225,89,49)"/><text x="65.7795%" y="463.50"></text></g><g><title>arena_malloc (2 samples, 0.01%)</title><rect x="65.5295%" y="437" width="0.0124%" height="15" fill="rgb(218,70,45)"/><text x="65.7795%" y="447.50"></text></g><g><title>tokio::runtime::queue::Local&lt;T&gt;::pop (2 samples, 0.01%)</title><rect x="65.5419%" y="1269" width="0.0124%" height="15" fill="rgb(238,166,21)"/><text x="65.7919%" y="1279.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::steal_into (5 samples, 0.03%)</title><rect x="65.5543%" y="1269" width="0.0311%" height="15" fill="rgb(224,141,44)"/><text x="65.8043%" y="1279.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (2 samples, 0.01%)</title><rect x="65.5854%" y="1269" width="0.0124%" height="15" fill="rgb(230,12,49)"/><text x="65.8354%" y="1279.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (4 samples, 0.02%)</title><rect x="65.5978%" y="1269" width="0.0249%" height="15" fill="rgb(212,174,12)"/><text x="65.8478%" y="1279.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (4 samples, 0.02%)</title><rect x="65.5978%" y="1253" width="0.0249%" height="15" fill="rgb(246,67,9)"/><text x="65.8478%" y="1263.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (4 samples, 0.02%)</title><rect x="65.5978%" y="1237" width="0.0249%" height="15" fill="rgb(239,35,23)"/><text x="65.8478%" y="1247.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.02%)</title><rect x="65.5978%" y="1221" width="0.0249%" height="15" fill="rgb(211,167,0)"/><text x="65.8478%" y="1231.50"></text></g><g><title>std::panicking::try (4 samples, 0.02%)</title><rect x="65.5978%" y="1205" width="0.0249%" height="15" fill="rgb(225,119,45)"/><text x="65.8478%" y="1215.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.02%)</title><rect x="65.5978%" y="1189" width="0.0249%" height="15" fill="rgb(210,162,6)"/><text x="65.8478%" y="1199.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.02%)</title><rect x="65.5978%" y="1173" width="0.0249%" height="15" fill="rgb(208,118,35)"/><text x="65.8478%" y="1183.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (4 samples, 0.02%)</title><rect x="65.5978%" y="1157" width="0.0249%" height="15" fill="rgb(239,4,53)"/><text x="65.8478%" y="1167.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (4 samples, 0.02%)</title><rect x="65.5978%" y="1141" width="0.0249%" height="15" fill="rgb(213,130,21)"/><text x="65.8478%" y="1151.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (4 samples, 0.02%)</title><rect x="65.5978%" y="1125" width="0.0249%" height="15" fill="rgb(235,148,0)"/><text x="65.8478%" y="1135.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (4 samples, 0.02%)</title><rect x="65.5978%" y="1109" width="0.0249%" height="15" fill="rgb(244,224,18)"/><text x="65.8478%" y="1119.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.02%)</title><rect x="65.5978%" y="1093" width="0.0249%" height="15" fill="rgb(211,214,4)"/><text x="65.8478%" y="1103.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (4 samples, 0.02%)</title><rect x="65.5978%" y="1077" width="0.0249%" height="15" fill="rgb(206,119,25)"/><text x="65.8478%" y="1087.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (4 samples, 0.02%)</title><rect x="65.5978%" y="1061" width="0.0249%" height="15" fill="rgb(243,93,47)"/><text x="65.8478%" y="1071.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (4 samples, 0.02%)</title><rect x="65.5978%" y="1045" width="0.0249%" height="15" fill="rgb(224,194,6)"/><text x="65.8478%" y="1055.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (4 samples, 0.02%)</title><rect x="65.5978%" y="1029" width="0.0249%" height="15" fill="rgb(243,229,6)"/><text x="65.8478%" y="1039.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (4 samples, 0.02%)</title><rect x="65.5978%" y="1013" width="0.0249%" height="15" fill="rgb(207,23,50)"/><text x="65.8478%" y="1023.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (4 samples, 0.02%)</title><rect x="65.5978%" y="997" width="0.0249%" height="15" fill="rgb(253,192,32)"/><text x="65.8478%" y="1007.50"></text></g><g><title>tokio::coop::budget (4 samples, 0.02%)</title><rect x="65.5978%" y="981" width="0.0249%" height="15" fill="rgb(213,21,6)"/><text x="65.8478%" y="991.50"></text></g><g><title>tokio::coop::with_budget (4 samples, 0.02%)</title><rect x="65.5978%" y="965" width="0.0249%" height="15" fill="rgb(243,151,13)"/><text x="65.8478%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.02%)</title><rect x="65.5978%" y="949" width="0.0249%" height="15" fill="rgb(233,165,41)"/><text x="65.8478%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.02%)</title><rect x="65.5978%" y="933" width="0.0249%" height="15" fill="rgb(246,176,45)"/><text x="65.8478%" y="943.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (4 samples, 0.02%)</title><rect x="65.5978%" y="917" width="0.0249%" height="15" fill="rgb(217,170,52)"/><text x="65.8478%" y="927.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (4 samples, 0.02%)</title><rect x="65.5978%" y="901" width="0.0249%" height="15" fill="rgb(214,203,54)"/><text x="65.8478%" y="911.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (4 samples, 0.02%)</title><rect x="65.5978%" y="885" width="0.0249%" height="15" fill="rgb(248,215,49)"/><text x="65.8478%" y="895.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (4 samples, 0.02%)</title><rect x="65.5978%" y="869" width="0.0249%" height="15" fill="rgb(208,46,10)"/><text x="65.8478%" y="879.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (4 samples, 0.02%)</title><rect x="65.5978%" y="853" width="0.0249%" height="15" fill="rgb(254,5,31)"/><text x="65.8478%" y="863.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (4 samples, 0.02%)</title><rect x="65.5978%" y="837" width="0.0249%" height="15" fill="rgb(222,104,33)"/><text x="65.8478%" y="847.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (4 samples, 0.02%)</title><rect x="65.5978%" y="821" width="0.0249%" height="15" fill="rgb(248,49,16)"/><text x="65.8478%" y="831.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.02%)</title><rect x="65.5978%" y="805" width="0.0249%" height="15" fill="rgb(232,198,41)"/><text x="65.8478%" y="815.50"></text></g><g><title>std::panicking::try (4 samples, 0.02%)</title><rect x="65.5978%" y="789" width="0.0249%" height="15" fill="rgb(214,125,3)"/><text x="65.8478%" y="799.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.02%)</title><rect x="65.5978%" y="773" width="0.0249%" height="15" fill="rgb(229,220,28)"/><text x="65.8478%" y="783.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.02%)</title><rect x="65.5978%" y="757" width="0.0249%" height="15" fill="rgb(222,64,37)"/><text x="65.8478%" y="767.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (4 samples, 0.02%)</title><rect x="65.5978%" y="741" width="0.0249%" height="15" fill="rgb(249,184,13)"/><text x="65.8478%" y="751.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (4 samples, 0.02%)</title><rect x="65.5978%" y="725" width="0.0249%" height="15" fill="rgb(252,176,6)"/><text x="65.8478%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.02%)</title><rect x="65.5978%" y="709" width="0.0249%" height="15" fill="rgb(228,153,7)"/><text x="65.8478%" y="719.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation::{{closure}} (4 samples, 0.02%)</title><rect x="65.5978%" y="693" width="0.0249%" height="15" fill="rgb(242,193,5)"/><text x="65.8478%" y="703.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_send::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Send&gt;::evaluate (4 samples, 0.02%)</title><rect x="65.5978%" y="677" width="0.0249%" height="15" fill="rgb(232,140,9)"/><text x="65.8478%" y="687.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute (4 samples, 0.02%)</title><rect x="65.5978%" y="661" width="0.0249%" height="15" fill="rgb(213,222,16)"/><text x="65.8478%" y="671.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute_no_sort (4 samples, 0.02%)</title><rect x="65.5978%" y="645" width="0.0249%" height="15" fill="rgb(222,75,50)"/><text x="65.8478%" y="655.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::substitute_expressions_in_par (4 samples, 0.02%)</title><rect x="65.5978%" y="629" width="0.0249%" height="15" fill="rgb(205,180,2)"/><text x="65.8478%" y="639.50"></text></g><g><title>model::rho_types::Par::append_expr (4 samples, 0.02%)</title><rect x="65.5978%" y="613" width="0.0249%" height="15" fill="rgb(216,34,7)"/><text x="65.8478%" y="623.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.02%)</title><rect x="65.5978%" y="597" width="0.0249%" height="15" fill="rgb(253,16,32)"/><text x="65.8478%" y="607.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::news_score (8 samples, 0.05%)</title><rect x="65.6786%" y="1045" width="0.0497%" height="15" fill="rgb(208,97,28)"/><text x="65.9286%" y="1055.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::matches_score (6 samples, 0.04%)</title><rect x="65.6910%" y="1029" width="0.0373%" height="15" fill="rgb(225,92,11)"/><text x="65.9410%" y="1039.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::bundles_score (6 samples, 0.04%)</title><rect x="65.6910%" y="1013" width="0.0373%" height="15" fill="rgb(243,38,12)"/><text x="65.9410%" y="1023.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::connectives_score (6 samples, 0.04%)</title><rect x="65.6910%" y="997" width="0.0373%" height="15" fill="rgb(208,139,16)"/><text x="65.9410%" y="1007.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::unforgeables_score (6 samples, 0.04%)</title><rect x="65.6910%" y="981" width="0.0373%" height="15" fill="rgb(227,24,9)"/><text x="65.9410%" y="991.50"></text></g><g><title>model::ordering::sort_unforgeable::&lt;impl model::ordering::Scorable for &amp;model::rho_types::GUnforgeable&gt;::score_tree_iter (6 samples, 0.04%)</title><rect x="65.6910%" y="965" width="0.0373%" height="15" fill="rgb(206,62,11)"/><text x="65.9410%" y="975.50"></text></g><g><title>&lt;model::ordering::ScoreTreeIter as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.08%)</title><rect x="65.6662%" y="1077" width="0.0808%" height="15" fill="rgb(228,134,27)"/><text x="65.9162%" y="1087.50"></text></g><g><title>&lt;model::ordering::sort_par::ParScoreTreeIter as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.07%)</title><rect x="65.6786%" y="1061" width="0.0684%" height="15" fill="rgb(205,55,33)"/><text x="65.9286%" y="1071.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::sends_score (2 samples, 0.01%)</title><rect x="65.7345%" y="1045" width="0.0124%" height="15" fill="rgb(243,75,43)"/><text x="65.9845%" y="1055.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash::traverse (2 samples, 0.01%)</title><rect x="65.7470%" y="1077" width="0.0124%" height="15" fill="rgb(223,27,42)"/><text x="65.9970%" y="1087.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash::traverse (20 samples, 0.12%)</title><rect x="65.6537%" y="1093" width="0.1243%" height="15" fill="rgb(232,189,33)"/><text x="65.9037%" y="1103.50"></text></g><g><title>blake3::Hasher::update (3 samples, 0.02%)</title><rect x="65.7594%" y="1077" width="0.0186%" height="15" fill="rgb(210,9,39)"/><text x="66.0094%" y="1087.50"></text></g><g><title>blake3::Hasher::update_with_join (3 samples, 0.02%)</title><rect x="65.7594%" y="1061" width="0.0186%" height="15" fill="rgb(242,85,26)"/><text x="66.0094%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (23 samples, 0.14%)</title><rect x="65.6537%" y="1157" width="0.1429%" height="15" fill="rgb(248,44,4)"/><text x="65.9037%" y="1167.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::produce::{{closure}} (23 samples, 0.14%)</title><rect x="65.6537%" y="1141" width="0.1429%" height="15" fill="rgb(250,96,46)"/><text x="65.9037%" y="1151.50"></text></g><g><title>&lt;rho_runtime::storage::store::AsyncStore as rho_runtime::storage::Storage&gt;::produce (23 samples, 0.14%)</title><rect x="65.6537%" y="1125" width="0.1429%" height="15" fill="rgb(229,116,26)"/><text x="65.9037%" y="1135.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash (23 samples, 0.14%)</title><rect x="65.6537%" y="1109" width="0.1429%" height="15" fill="rgb(246,94,34)"/><text x="65.9037%" y="1119.50"></text></g><g><title>blake3::Hasher::finalize (3 samples, 0.02%)</title><rect x="65.7780%" y="1093" width="0.0186%" height="15" fill="rgb(251,73,21)"/><text x="66.0280%" y="1103.50"></text></g><g><title>blake3::Hasher::final_output (3 samples, 0.02%)</title><rect x="65.7780%" y="1077" width="0.0186%" height="15" fill="rgb(254,121,25)"/><text x="66.0280%" y="1087.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (29 samples, 0.18%)</title><rect x="65.6227%" y="1269" width="0.1802%" height="15" fill="rgb(215,161,49)"/><text x="65.8727%" y="1279.50"></text></g><g><title>std::panic::catch_unwind (24 samples, 0.15%)</title><rect x="65.6537%" y="1253" width="0.1491%" height="15" fill="rgb(221,43,13)"/><text x="65.9037%" y="1263.50"></text></g><g><title>std::panicking::try (24 samples, 0.15%)</title><rect x="65.6537%" y="1237" width="0.1491%" height="15" fill="rgb(249,5,37)"/><text x="65.9037%" y="1247.50"></text></g><g><title>std::panicking::try::do_call (24 samples, 0.15%)</title><rect x="65.6537%" y="1221" width="0.1491%" height="15" fill="rgb(226,25,44)"/><text x="65.9037%" y="1231.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (24 samples, 0.15%)</title><rect x="65.6537%" y="1205" width="0.1491%" height="15" fill="rgb(238,189,16)"/><text x="65.9037%" y="1215.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (24 samples, 0.15%)</title><rect x="65.6537%" y="1189" width="0.1491%" height="15" fill="rgb(251,186,8)"/><text x="65.9037%" y="1199.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (24 samples, 0.15%)</title><rect x="65.6537%" y="1173" width="0.1491%" height="15" fill="rgb(254,34,31)"/><text x="65.9037%" y="1183.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::release (2 samples, 0.01%)</title><rect x="65.8153%" y="1269" width="0.0124%" height="15" fill="rgb(225,215,27)"/><text x="66.0653%" y="1279.50"></text></g><g><title>&lt;blake3::Hasher as core::default::Default&gt;::default (2 samples, 0.01%)</title><rect x="65.8526%" y="917" width="0.0124%" height="15" fill="rgb(221,192,48)"/><text x="66.1026%" y="927.50"></text></g><g><title>blake3::Hasher::new (2 samples, 0.01%)</title><rect x="65.8526%" y="901" width="0.0124%" height="15" fill="rgb(219,137,20)"/><text x="66.1026%" y="911.50"></text></g><g><title>blake3::Hasher::new_internal (2 samples, 0.01%)</title><rect x="65.8526%" y="885" width="0.0124%" height="15" fill="rgb(219,84,11)"/><text x="66.1026%" y="895.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (2 samples, 0.01%)</title><rect x="65.8650%" y="901" width="0.0124%" height="15" fill="rgb(224,10,23)"/><text x="66.1150%" y="911.50"></text></g><g><title>model::ordering::sort_par::&lt;impl core::convert::From&lt;model::ordering::sort_par::ParScoreTreeIter&gt; for model::ordering::ScoreTreeIter&gt;::from (2 samples, 0.01%)</title><rect x="65.8650%" y="885" width="0.0124%" height="15" fill="rgb(248,22,39)"/><text x="66.1150%" y="895.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (9 samples, 0.06%)</title><rect x="65.8277%" y="1269" width="0.0559%" height="15" fill="rgb(212,154,20)"/><text x="66.0777%" y="1279.50"></text></g><g><title>tokio::coop::budget (5 samples, 0.03%)</title><rect x="65.8526%" y="1253" width="0.0311%" height="15" fill="rgb(236,199,50)"/><text x="66.1026%" y="1263.50"></text></g><g><title>tokio::coop::with_budget (5 samples, 0.03%)</title><rect x="65.8526%" y="1237" width="0.0311%" height="15" fill="rgb(211,9,17)"/><text x="66.1026%" y="1247.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.03%)</title><rect x="65.8526%" y="1221" width="0.0311%" height="15" fill="rgb(243,216,36)"/><text x="66.1026%" y="1231.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.03%)</title><rect x="65.8526%" y="1205" width="0.0311%" height="15" fill="rgb(250,2,10)"/><text x="66.1026%" y="1215.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (5 samples, 0.03%)</title><rect x="65.8526%" y="1189" width="0.0311%" height="15" fill="rgb(226,50,48)"/><text x="66.1026%" y="1199.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (5 samples, 0.03%)</title><rect x="65.8526%" y="1173" width="0.0311%" height="15" fill="rgb(243,81,16)"/><text x="66.1026%" y="1183.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (5 samples, 0.03%)</title><rect x="65.8526%" y="1157" width="0.0311%" height="15" fill="rgb(250,14,2)"/><text x="66.1026%" y="1167.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (5 samples, 0.03%)</title><rect x="65.8526%" y="1141" width="0.0311%" height="15" fill="rgb(233,135,29)"/><text x="66.1026%" y="1151.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (5 samples, 0.03%)</title><rect x="65.8526%" y="1125" width="0.0311%" height="15" fill="rgb(224,64,43)"/><text x="66.1026%" y="1135.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (5 samples, 0.03%)</title><rect x="65.8526%" y="1109" width="0.0311%" height="15" fill="rgb(238,84,13)"/><text x="66.1026%" y="1119.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (5 samples, 0.03%)</title><rect x="65.8526%" y="1093" width="0.0311%" height="15" fill="rgb(253,48,26)"/><text x="66.1026%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.03%)</title><rect x="65.8526%" y="1077" width="0.0311%" height="15" fill="rgb(205,223,31)"/><text x="66.1026%" y="1087.50"></text></g><g><title>std::panicking::try (5 samples, 0.03%)</title><rect x="65.8526%" y="1061" width="0.0311%" height="15" fill="rgb(221,41,32)"/><text x="66.1026%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.03%)</title><rect x="65.8526%" y="1045" width="0.0311%" height="15" fill="rgb(213,158,31)"/><text x="66.1026%" y="1055.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.03%)</title><rect x="65.8526%" y="1029" width="0.0311%" height="15" fill="rgb(245,126,43)"/><text x="66.1026%" y="1039.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (5 samples, 0.03%)</title><rect x="65.8526%" y="1013" width="0.0311%" height="15" fill="rgb(227,7,22)"/><text x="66.1026%" y="1023.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (5 samples, 0.03%)</title><rect x="65.8526%" y="997" width="0.0311%" height="15" fill="rgb(252,90,44)"/><text x="66.1026%" y="1007.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.03%)</title><rect x="65.8526%" y="981" width="0.0311%" height="15" fill="rgb(253,91,0)"/><text x="66.1026%" y="991.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::produce::{{closure}} (5 samples, 0.03%)</title><rect x="65.8526%" y="965" width="0.0311%" height="15" fill="rgb(252,175,49)"/><text x="66.1026%" y="975.50"></text></g><g><title>&lt;rho_runtime::storage::store::AsyncStore as rho_runtime::storage::Storage&gt;::produce (5 samples, 0.03%)</title><rect x="65.8526%" y="949" width="0.0311%" height="15" fill="rgb(246,150,1)"/><text x="66.1026%" y="959.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash (5 samples, 0.03%)</title><rect x="65.8526%" y="933" width="0.0311%" height="15" fill="rgb(241,192,25)"/><text x="66.1026%" y="943.50"></text></g><g><title>model::ordering::sort_par::&lt;impl model::ordering::Scorable for &amp;model::rho_types::Par&gt;::score_tree_iter (3 samples, 0.02%)</title><rect x="65.8650%" y="917" width="0.0186%" height="15" fill="rgb(239,187,11)"/><text x="66.1150%" y="927.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::drain_pending_drop (3 samples, 0.02%)</title><rect x="65.8837%" y="1269" width="0.0186%" height="15" fill="rgb(218,202,51)"/><text x="66.1337%" y="1279.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (2 samples, 0.01%)</title><rect x="65.9085%" y="1269" width="0.0124%" height="15" fill="rgb(225,176,8)"/><text x="66.1585%" y="1279.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (2 samples, 0.01%)</title><rect x="65.9085%" y="1253" width="0.0124%" height="15" fill="rgb(219,122,41)"/><text x="66.1585%" y="1263.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (2 samples, 0.01%)</title><rect x="65.9085%" y="1237" width="0.0124%" height="15" fill="rgb(248,140,20)"/><text x="66.1585%" y="1247.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (2 samples, 0.01%)</title><rect x="65.9085%" y="1221" width="0.0124%" height="15" fill="rgb(245,41,37)"/><text x="66.1585%" y="1231.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (2 samples, 0.01%)</title><rect x="65.9085%" y="1205" width="0.0124%" height="15" fill="rgb(235,82,39)"/><text x="66.1585%" y="1215.50"></text></g><g><title>tokio::coop::budget (2 samples, 0.01%)</title><rect x="65.9085%" y="1189" width="0.0124%" height="15" fill="rgb(230,108,42)"/><text x="66.1585%" y="1199.50"></text></g><g><title>tokio::coop::with_budget (2 samples, 0.01%)</title><rect x="65.9085%" y="1173" width="0.0124%" height="15" fill="rgb(215,150,50)"/><text x="66.1585%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.01%)</title><rect x="65.9085%" y="1157" width="0.0124%" height="15" fill="rgb(233,212,5)"/><text x="66.1585%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.01%)</title><rect x="65.9085%" y="1141" width="0.0124%" height="15" fill="rgb(245,80,22)"/><text x="66.1585%" y="1151.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (2 samples, 0.01%)</title><rect x="65.9085%" y="1125" width="0.0124%" height="15" fill="rgb(238,129,16)"/><text x="66.1585%" y="1135.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (2 samples, 0.01%)</title><rect x="65.9085%" y="1109" width="0.0124%" height="15" fill="rgb(240,19,0)"/><text x="66.1585%" y="1119.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (2 samples, 0.01%)</title><rect x="65.9085%" y="1093" width="0.0124%" height="15" fill="rgb(232,42,35)"/><text x="66.1585%" y="1103.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (2 samples, 0.01%)</title><rect x="65.9085%" y="1077" width="0.0124%" height="15" fill="rgb(223,130,24)"/><text x="66.1585%" y="1087.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2 samples, 0.01%)</title><rect x="65.9085%" y="1061" width="0.0124%" height="15" fill="rgb(237,16,22)"/><text x="66.1585%" y="1071.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (2 samples, 0.01%)</title><rect x="65.9085%" y="1045" width="0.0124%" height="15" fill="rgb(248,192,20)"/><text x="66.1585%" y="1055.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (2 samples, 0.01%)</title><rect x="65.9085%" y="1029" width="0.0124%" height="15" fill="rgb(233,167,2)"/><text x="66.1585%" y="1039.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.01%)</title><rect x="65.9085%" y="1013" width="0.0124%" height="15" fill="rgb(252,71,44)"/><text x="66.1585%" y="1023.50"></text></g><g><title>std::panicking::try (2 samples, 0.01%)</title><rect x="65.9085%" y="997" width="0.0124%" height="15" fill="rgb(238,37,47)"/><text x="66.1585%" y="1007.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.01%)</title><rect x="65.9085%" y="981" width="0.0124%" height="15" fill="rgb(214,202,54)"/><text x="66.1585%" y="991.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.01%)</title><rect x="65.9085%" y="965" width="0.0124%" height="15" fill="rgb(254,165,40)"/><text x="66.1585%" y="975.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (2 samples, 0.01%)</title><rect x="65.9085%" y="949" width="0.0124%" height="15" fill="rgb(246,173,38)"/><text x="66.1585%" y="959.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (2 samples, 0.01%)</title><rect x="65.9085%" y="933" width="0.0124%" height="15" fill="rgb(215,3,27)"/><text x="66.1585%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.01%)</title><rect x="65.9085%" y="917" width="0.0124%" height="15" fill="rgb(239,169,51)"/><text x="66.1585%" y="927.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation::{{closure}} (2 samples, 0.01%)</title><rect x="65.9085%" y="901" width="0.0124%" height="15" fill="rgb(212,5,25)"/><text x="66.1585%" y="911.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_send::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Send&gt;::evaluate (2 samples, 0.01%)</title><rect x="65.9085%" y="885" width="0.0124%" height="15" fill="rgb(243,45,17)"/><text x="66.1585%" y="895.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_nested_expressions (2 samples, 0.01%)</title><rect x="65.9085%" y="869" width="0.0124%" height="15" fill="rgb(242,97,9)"/><text x="66.1585%" y="879.50"></text></g><g><title>__rust_probestack (2 samples, 0.01%)</title><rect x="65.9085%" y="853" width="0.0124%" height="15" fill="rgb(228,71,31)"/><text x="66.1585%" y="863.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (3 samples, 0.02%)</title><rect x="65.9210%" y="1269" width="0.0186%" height="15" fill="rgb(252,184,16)"/><text x="66.1710%" y="1279.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::read (2 samples, 0.01%)</title><rect x="65.9272%" y="1253" width="0.0124%" height="15" fill="rgb(236,169,46)"/><text x="66.1772%" y="1263.50"></text></g><g><title>tokio::sync::oneshot::State::load (2 samples, 0.01%)</title><rect x="65.9582%" y="1269" width="0.0124%" height="15" fill="rgb(207,17,47)"/><text x="66.2082%" y="1279.50"></text></g><g><title>tokio::sync::oneshot::Task::set_task (2 samples, 0.01%)</title><rect x="65.9707%" y="1269" width="0.0124%" height="15" fill="rgb(206,201,28)"/><text x="66.2207%" y="1279.50"></text></g><g><title>[unknown] (7,466 samples, 46.40%)</title><rect x="19.5936%" y="1285" width="46.3957%" height="15" fill="rgb(224,184,23)"/><text x="19.8436%" y="1295.50">[unknown]</text></g><g><title>__rust_probestack (2 samples, 0.01%)</title><rect x="65.9893%" y="1285" width="0.0124%" height="15" fill="rgb(208,139,48)"/><text x="66.2393%" y="1295.50"></text></g><g><title>alloc::slice::merge_sort (4 samples, 0.02%)</title><rect x="66.0142%" y="1285" width="0.0249%" height="15" fill="rgb(208,130,10)"/><text x="66.2642%" y="1295.50"></text></g><g><title>blake3_compress_in_place_avx512 (6 samples, 0.04%)</title><rect x="66.0515%" y="1285" width="0.0373%" height="15" fill="rgb(211,213,45)"/><text x="66.3015%" y="1295.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (15 samples, 0.09%)</title><rect x="66.1012%" y="949" width="0.0932%" height="15" fill="rgb(235,100,30)"/><text x="66.3512%" y="959.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (15 samples, 0.09%)</title><rect x="66.1012%" y="933" width="0.0932%" height="15" fill="rgb(206,144,31)"/><text x="66.3512%" y="943.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (15 samples, 0.09%)</title><rect x="66.1012%" y="917" width="0.0932%" height="15" fill="rgb(224,200,26)"/><text x="66.3512%" y="927.50"></text></g><g><title>syscall (15 samples, 0.09%)</title><rect x="66.1012%" y="901" width="0.0932%" height="15" fill="rgb(247,104,53)"/><text x="66.3512%" y="911.50"></text></g><g><title>[unknown] (15 samples, 0.09%)</title><rect x="66.1012%" y="885" width="0.0932%" height="15" fill="rgb(220,14,17)"/><text x="66.3512%" y="895.50"></text></g><g><title>[unknown] (15 samples, 0.09%)</title><rect x="66.1012%" y="869" width="0.0932%" height="15" fill="rgb(230,140,40)"/><text x="66.3512%" y="879.50"></text></g><g><title>[unknown] (15 samples, 0.09%)</title><rect x="66.1012%" y="853" width="0.0932%" height="15" fill="rgb(229,2,41)"/><text x="66.3512%" y="863.50"></text></g><g><title>[unknown] (15 samples, 0.09%)</title><rect x="66.1012%" y="837" width="0.0932%" height="15" fill="rgb(232,89,16)"/><text x="66.3512%" y="847.50"></text></g><g><title>[unknown] (15 samples, 0.09%)</title><rect x="66.1012%" y="821" width="0.0932%" height="15" fill="rgb(247,59,52)"/><text x="66.3512%" y="831.50"></text></g><g><title>[unknown] (14 samples, 0.09%)</title><rect x="66.1074%" y="805" width="0.0870%" height="15" fill="rgb(226,110,21)"/><text x="66.3574%" y="815.50"></text></g><g><title>[unknown] (13 samples, 0.08%)</title><rect x="66.1136%" y="789" width="0.0808%" height="15" fill="rgb(224,176,43)"/><text x="66.3636%" y="799.50"></text></g><g><title>[unknown] (13 samples, 0.08%)</title><rect x="66.1136%" y="773" width="0.0808%" height="15" fill="rgb(221,73,6)"/><text x="66.3636%" y="783.50"></text></g><g><title>[unknown] (13 samples, 0.08%)</title><rect x="66.1136%" y="757" width="0.0808%" height="15" fill="rgb(232,78,19)"/><text x="66.3636%" y="767.50"></text></g><g><title>[unknown] (13 samples, 0.08%)</title><rect x="66.1136%" y="741" width="0.0808%" height="15" fill="rgb(233,112,48)"/><text x="66.3636%" y="751.50"></text></g><g><title>[unknown] (13 samples, 0.08%)</title><rect x="66.1136%" y="725" width="0.0808%" height="15" fill="rgb(243,131,47)"/><text x="66.3636%" y="735.50"></text></g><g><title>[unknown] (13 samples, 0.08%)</title><rect x="66.1136%" y="709" width="0.0808%" height="15" fill="rgb(226,51,1)"/><text x="66.3636%" y="719.50"></text></g><g><title>[unknown] (13 samples, 0.08%)</title><rect x="66.1136%" y="693" width="0.0808%" height="15" fill="rgb(247,58,7)"/><text x="66.3636%" y="703.50"></text></g><g><title>[unknown] (13 samples, 0.08%)</title><rect x="66.1136%" y="677" width="0.0808%" height="15" fill="rgb(209,7,32)"/><text x="66.3636%" y="687.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (16 samples, 0.10%)</title><rect x="66.1012%" y="1045" width="0.0994%" height="15" fill="rgb(209,39,41)"/><text x="66.3512%" y="1055.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (16 samples, 0.10%)</title><rect x="66.1012%" y="1029" width="0.0994%" height="15" fill="rgb(226,182,46)"/><text x="66.3512%" y="1039.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (16 samples, 0.10%)</title><rect x="66.1012%" y="1013" width="0.0994%" height="15" fill="rgb(230,219,10)"/><text x="66.3512%" y="1023.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (16 samples, 0.10%)</title><rect x="66.1012%" y="997" width="0.0994%" height="15" fill="rgb(227,175,30)"/><text x="66.3512%" y="1007.50"></text></g><g><title>parking_lot_core::parking_lot::park (16 samples, 0.10%)</title><rect x="66.1012%" y="981" width="0.0994%" height="15" fill="rgb(217,2,50)"/><text x="66.3512%" y="991.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (16 samples, 0.10%)</title><rect x="66.1012%" y="965" width="0.0994%" height="15" fill="rgb(229,160,0)"/><text x="66.3512%" y="975.50"></text></g><g><title>__sched_yield (789 samples, 4.90%)</title><rect x="66.4430%" y="677" width="4.9031%" height="15" fill="rgb(207,78,37)"/><text x="66.6930%" y="687.50">__sche..</text></g><g><title>[unknown] (731 samples, 4.54%)</title><rect x="66.8034%" y="661" width="4.5426%" height="15" fill="rgb(225,57,0)"/><text x="67.0534%" y="671.50">[unkn..</text></g><g><title>[unknown] (651 samples, 4.05%)</title><rect x="67.3005%" y="645" width="4.0455%" height="15" fill="rgb(232,154,2)"/><text x="67.5505%" y="655.50">[unk..</text></g><g><title>[unknown] (622 samples, 3.87%)</title><rect x="67.4807%" y="629" width="3.8653%" height="15" fill="rgb(241,212,25)"/><text x="67.7307%" y="639.50">[unk..</text></g><g><title>[unknown] (604 samples, 3.75%)</title><rect x="67.5926%" y="613" width="3.7534%" height="15" fill="rgb(226,69,20)"/><text x="67.8426%" y="623.50">[unk..</text></g><g><title>[unknown] (524 samples, 3.26%)</title><rect x="68.0897%" y="597" width="3.2563%" height="15" fill="rgb(247,184,54)"/><text x="68.3397%" y="607.50">[un..</text></g><g><title>[unknown] (498 samples, 3.09%)</title><rect x="68.2513%" y="581" width="3.0947%" height="15" fill="rgb(210,145,0)"/><text x="68.5013%" y="591.50">[un..</text></g><g><title>[unknown] (356 samples, 2.21%)</title><rect x="69.1337%" y="565" width="2.2123%" height="15" fill="rgb(253,82,12)"/><text x="69.3837%" y="575.50">[..</text></g><g><title>[unknown] (274 samples, 1.70%)</title><rect x="69.6433%" y="549" width="1.7027%" height="15" fill="rgb(245,42,11)"/><text x="69.8933%" y="559.50"></text></g><g><title>[unknown] (171 samples, 1.06%)</title><rect x="70.2834%" y="533" width="1.0626%" height="15" fill="rgb(219,147,32)"/><text x="70.5334%" y="543.50"></text></g><g><title>[unknown] (7 samples, 0.04%)</title><rect x="71.3025%" y="517" width="0.0435%" height="15" fill="rgb(246,12,7)"/><text x="71.5525%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (44 samples, 0.27%)</title><rect x="71.3460%" y="677" width="0.2734%" height="15" fill="rgb(243,50,9)"/><text x="71.5960%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (44 samples, 0.27%)</title><rect x="71.3460%" y="661" width="0.2734%" height="15" fill="rgb(219,149,6)"/><text x="71.5960%" y="671.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (5 samples, 0.03%)</title><rect x="71.6194%" y="677" width="0.0311%" height="15" fill="rgb(241,51,42)"/><text x="71.8694%" y="687.50"></text></g><g><title>parking_lot_core::parking_lot::park (5 samples, 0.03%)</title><rect x="71.6194%" y="661" width="0.0311%" height="15" fill="rgb(226,128,27)"/><text x="71.8694%" y="671.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (5 samples, 0.03%)</title><rect x="71.6194%" y="645" width="0.0311%" height="15" fill="rgb(244,144,4)"/><text x="71.8694%" y="655.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (5 samples, 0.03%)</title><rect x="71.6194%" y="629" width="0.0311%" height="15" fill="rgb(221,4,13)"/><text x="71.8694%" y="639.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (5 samples, 0.03%)</title><rect x="71.6194%" y="613" width="0.0311%" height="15" fill="rgb(208,170,28)"/><text x="71.8694%" y="623.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (5 samples, 0.03%)</title><rect x="71.6194%" y="597" width="0.0311%" height="15" fill="rgb(226,131,13)"/><text x="71.8694%" y="607.50"></text></g><g><title>syscall (5 samples, 0.03%)</title><rect x="71.6194%" y="581" width="0.0311%" height="15" fill="rgb(215,72,41)"/><text x="71.8694%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="71.6194%" y="565" width="0.0311%" height="15" fill="rgb(243,108,20)"/><text x="71.8694%" y="575.50"></text></g><g><title>std::thread::yield_now (3 samples, 0.02%)</title><rect x="71.6505%" y="677" width="0.0186%" height="15" fill="rgb(230,189,17)"/><text x="71.9005%" y="687.50"></text></g><g><title>std::sys::unix::thread::Thread::yield_now (3 samples, 0.02%)</title><rect x="71.6505%" y="661" width="0.0186%" height="15" fill="rgb(220,50,17)"/><text x="71.9005%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,()&gt;&gt; (10 samples, 0.06%)</title><rect x="71.6754%" y="661" width="0.0621%" height="15" fill="rgb(248,152,48)"/><text x="71.9254%" y="671.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.06%)</title><rect x="71.6754%" y="645" width="0.0621%" height="15" fill="rgb(244,91,11)"/><text x="71.9254%" y="655.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (10 samples, 0.06%)</title><rect x="71.6754%" y="629" width="0.0621%" height="15" fill="rgb(220,157,5)"/><text x="71.9254%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (9 samples, 0.06%)</title><rect x="71.6816%" y="613" width="0.0559%" height="15" fill="rgb(253,137,8)"/><text x="71.9316%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (9 samples, 0.06%)</title><rect x="71.6816%" y="597" width="0.0559%" height="15" fill="rgb(217,137,51)"/><text x="71.9316%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (28 samples, 0.17%)</title><rect x="71.7375%" y="661" width="0.1740%" height="15" fill="rgb(218,209,53)"/><text x="71.9875%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (28 samples, 0.17%)</title><rect x="71.7375%" y="645" width="0.1740%" height="15" fill="rgb(249,137,25)"/><text x="71.9875%" y="655.50"></text></g><g><title>__sched_yield (4 samples, 0.02%)</title><rect x="71.9177%" y="629" width="0.0249%" height="15" fill="rgb(239,155,26)"/><text x="72.1677%" y="639.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="71.9177%" y="613" width="0.0249%" height="15" fill="rgb(227,85,46)"/><text x="72.1677%" y="623.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (13 samples, 0.08%)</title><rect x="71.9488%" y="613" width="0.0808%" height="15" fill="rgb(251,107,43)"/><text x="72.1988%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (13 samples, 0.08%)</title><rect x="71.9488%" y="597" width="0.0808%" height="15" fill="rgb(234,170,33)"/><text x="72.1988%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (13 samples, 0.08%)</title><rect x="71.9488%" y="581" width="0.0808%" height="15" fill="rgb(206,29,35)"/><text x="72.1988%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;parking_lot_core::parking_lot::ThreadData&gt;&gt; (2 samples, 0.01%)</title><rect x="72.0296%" y="581" width="0.0124%" height="15" fill="rgb(227,138,25)"/><text x="72.2796%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (78 samples, 0.48%)</title><rect x="72.0669%" y="549" width="0.4847%" height="15" fill="rgb(249,131,35)"/><text x="72.3169%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_load (78 samples, 0.48%)</title><rect x="72.0669%" y="533" width="0.4847%" height="15" fill="rgb(239,6,40)"/><text x="72.3169%" y="543.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (1,520 samples, 9.45%)</title><rect x="72.0544%" y="565" width="9.4457%" height="15" fill="rgb(246,136,47)"/><text x="72.3044%" y="575.50">&lt;parking_lot_c..</text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (1,440 samples, 8.95%)</title><rect x="72.5516%" y="549" width="8.9485%" height="15" fill="rgb(253,58,26)"/><text x="72.8016%" y="559.50">parking_lot_c..</text></g><g><title>syscall (1,440 samples, 8.95%)</title><rect x="72.5516%" y="533" width="8.9485%" height="15" fill="rgb(237,141,10)"/><text x="72.8016%" y="543.50">syscall</text></g><g><title>[unknown] (1,414 samples, 8.79%)</title><rect x="72.7131%" y="517" width="8.7870%" height="15" fill="rgb(234,156,12)"/><text x="72.9631%" y="527.50">[unknown]</text></g><g><title>[unknown] (1,367 samples, 8.49%)</title><rect x="73.0052%" y="501" width="8.4949%" height="15" fill="rgb(243,224,36)"/><text x="73.2552%" y="511.50">[unknown]</text></g><g><title>[unknown] (1,340 samples, 8.33%)</title><rect x="73.1730%" y="485" width="8.3271%" height="15" fill="rgb(205,229,51)"/><text x="73.4230%" y="495.50">[unknown]</text></g><g><title>[unknown] (1,308 samples, 8.13%)</title><rect x="73.3719%" y="469" width="8.1283%" height="15" fill="rgb(223,189,4)"/><text x="73.6219%" y="479.50">[unknown]</text></g><g><title>[unknown] (1,277 samples, 7.94%)</title><rect x="73.5645%" y="453" width="7.9356%" height="15" fill="rgb(249,167,54)"/><text x="73.8145%" y="463.50">[unknown]</text></g><g><title>[unknown] (1,194 samples, 7.42%)</title><rect x="74.0803%" y="437" width="7.4198%" height="15" fill="rgb(218,34,28)"/><text x="74.3303%" y="447.50">[unknown]</text></g><g><title>[unknown] (1,053 samples, 6.54%)</title><rect x="74.9565%" y="421" width="6.5436%" height="15" fill="rgb(232,109,42)"/><text x="75.2065%" y="431.50">[unknown]</text></g><g><title>[unknown] (966 samples, 6.00%)</title><rect x="75.4971%" y="405" width="6.0030%" height="15" fill="rgb(248,214,46)"/><text x="75.7471%" y="415.50">[unknown]</text></g><g><title>[unknown] (879 samples, 5.46%)</title><rect x="76.0378%" y="389" width="5.4623%" height="15" fill="rgb(244,216,40)"/><text x="76.2878%" y="399.50">[unknow..</text></g><g><title>[unknown] (680 samples, 4.23%)</title><rect x="77.2744%" y="373" width="4.2257%" height="15" fill="rgb(231,226,31)"/><text x="77.5244%" y="383.50">[unkn..</text></g><g><title>[unknown] (463 samples, 2.88%)</title><rect x="78.6229%" y="357" width="2.8772%" height="15" fill="rgb(238,38,43)"/><text x="78.8729%" y="367.50">[u..</text></g><g><title>[unknown] (326 samples, 2.03%)</title><rect x="79.4743%" y="341" width="2.0259%" height="15" fill="rgb(208,88,43)"/><text x="79.7243%" y="351.50">[..</text></g><g><title>[unknown] (229 samples, 1.42%)</title><rect x="80.0771%" y="325" width="1.4231%" height="15" fill="rgb(205,136,37)"/><text x="80.3271%" y="335.50"></text></g><g><title>[unknown] (174 samples, 1.08%)</title><rect x="80.4188%" y="309" width="1.0813%" height="15" fill="rgb(237,34,14)"/><text x="80.6688%" y="319.50"></text></g><g><title>[unknown] (6 samples, 0.04%)</title><rect x="81.4628%" y="293" width="0.0373%" height="15" fill="rgb(236,193,44)"/><text x="81.7128%" y="303.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="81.4753%" y="277" width="0.0249%" height="15" fill="rgb(231,48,10)"/><text x="81.7253%" y="287.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="81.4753%" y="261" width="0.0249%" height="15" fill="rgb(213,141,34)"/><text x="81.7253%" y="271.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="81.4753%" y="245" width="0.0249%" height="15" fill="rgb(249,130,34)"/><text x="81.7253%" y="255.50"></text></g><g><title>[unknown] (3 samples, 0.02%)</title><rect x="81.4815%" y="229" width="0.0186%" height="15" fill="rgb(219,42,41)"/><text x="81.7315%" y="239.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (8 samples, 0.05%)</title><rect x="81.5063%" y="533" width="0.0497%" height="15" fill="rgb(224,100,54)"/><text x="81.7563%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (8 samples, 0.05%)</title><rect x="81.5063%" y="517" width="0.0497%" height="15" fill="rgb(229,200,27)"/><text x="81.7563%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (8 samples, 0.05%)</title><rect x="81.5063%" y="501" width="0.0497%" height="15" fill="rgb(217,118,10)"/><text x="81.7563%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (10 samples, 0.06%)</title><rect x="81.5063%" y="565" width="0.0621%" height="15" fill="rgb(206,22,3)"/><text x="81.7563%" y="575.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal::{{closure}} (10 samples, 0.06%)</title><rect x="81.5063%" y="549" width="0.0621%" height="15" fill="rgb(232,163,46)"/><text x="81.7563%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (2 samples, 0.01%)</title><rect x="81.5561%" y="533" width="0.0124%" height="15" fill="rgb(206,95,13)"/><text x="81.8061%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.01%)</title><rect x="81.5561%" y="517" width="0.0124%" height="15" fill="rgb(253,154,18)"/><text x="81.8061%" y="527.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (30 samples, 0.19%)</title><rect x="81.5747%" y="565" width="0.1864%" height="15" fill="rgb(219,32,23)"/><text x="81.8247%" y="575.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (28 samples, 0.17%)</title><rect x="81.5871%" y="549" width="0.1740%" height="15" fill="rgb(230,191,45)"/><text x="81.8371%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (28 samples, 0.17%)</title><rect x="81.5871%" y="533" width="0.1740%" height="15" fill="rgb(229,64,36)"/><text x="81.8371%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (28 samples, 0.17%)</title><rect x="81.5871%" y="517" width="0.1740%" height="15" fill="rgb(205,129,25)"/><text x="81.8371%" y="527.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (1,615 samples, 10.04%)</title><rect x="72.0420%" y="581" width="10.0360%" height="15" fill="rgb(254,112,7)"/><text x="72.2920%" y="591.50">parking_lot_cor..</text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (51 samples, 0.32%)</title><rect x="81.7611%" y="565" width="0.3169%" height="15" fill="rgb(226,53,48)"/><text x="82.0111%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (51 samples, 0.32%)</title><rect x="81.7611%" y="549" width="0.3169%" height="15" fill="rgb(214,153,38)"/><text x="82.0111%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_sub (51 samples, 0.32%)</title><rect x="81.7611%" y="533" width="0.3169%" height="15" fill="rgb(243,101,7)"/><text x="82.0111%" y="543.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (1,637 samples, 10.17%)</title><rect x="71.9115%" y="661" width="10.1728%" height="15" fill="rgb(240,140,22)"/><text x="72.1615%" y="671.50">tokio::loom::st..</text></g><g><title>parking_lot::condvar::Condvar::wait (1,637 samples, 10.17%)</title><rect x="71.9115%" y="645" width="10.1728%" height="15" fill="rgb(235,114,2)"/><text x="72.1615%" y="655.50">parking_lot::co..</text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (1,632 samples, 10.14%)</title><rect x="71.9426%" y="629" width="10.1417%" height="15" fill="rgb(242,59,12)"/><text x="72.1926%" y="639.50">parking_lot::co..</text></g><g><title>parking_lot_core::parking_lot::park (1,618 samples, 10.05%)</title><rect x="72.0296%" y="613" width="10.0547%" height="15" fill="rgb(252,134,9)"/><text x="72.2796%" y="623.50">parking_lot_cor..</text></g><g><title>parking_lot_core::parking_lot::with_thread_data (1,618 samples, 10.05%)</title><rect x="72.0296%" y="597" width="10.0547%" height="15" fill="rgb(236,4,44)"/><text x="72.2796%" y="607.50">parking_lot_cor..</text></g><g><title>tokio::runtime::park::Inner::park_condvar (1,683 samples, 10.46%)</title><rect x="71.6692%" y="677" width="10.4586%" height="15" fill="rgb(254,172,41)"/><text x="71.9192%" y="687.50">tokio::runtime:..</text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (7 samples, 0.04%)</title><rect x="82.0843%" y="661" width="0.0435%" height="15" fill="rgb(244,63,20)"/><text x="82.3343%" y="671.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (7 samples, 0.04%)</title><rect x="82.0843%" y="645" width="0.0435%" height="15" fill="rgb(250,73,31)"/><text x="82.3343%" y="655.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (7 samples, 0.04%)</title><rect x="82.0843%" y="629" width="0.0435%" height="15" fill="rgb(241,38,36)"/><text x="82.3343%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (7 samples, 0.04%)</title><rect x="82.0843%" y="613" width="0.0435%" height="15" fill="rgb(245,211,2)"/><text x="82.3343%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (7 samples, 0.04%)</title><rect x="82.0843%" y="597" width="0.0435%" height="15" fill="rgb(206,120,28)"/><text x="82.3343%" y="607.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (2,593 samples, 16.11%)</title><rect x="66.3932%" y="709" width="16.1136%" height="15" fill="rgb(211,59,34)"/><text x="66.6432%" y="719.50">&lt;tokio::runtime::park::Pa..</text></g><g><title>tokio::runtime::park::Inner::park (2,591 samples, 16.10%)</title><rect x="66.4057%" y="693" width="16.1012%" height="15" fill="rgb(233,168,5)"/><text x="66.6557%" y="703.50">tokio::runtime::park::Inn..</text></g><g><title>tokio::util::try_lock::TryLock&lt;T&gt;::try_lock (60 samples, 0.37%)</title><rect x="82.1340%" y="677" width="0.3729%" height="15" fill="rgb(234,33,13)"/><text x="82.3840%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (59 samples, 0.37%)</title><rect x="82.1402%" y="661" width="0.3666%" height="15" fill="rgb(231,150,26)"/><text x="82.3902%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (59 samples, 0.37%)</title><rect x="82.1402%" y="645" width="0.3666%" height="15" fill="rgb(217,191,4)"/><text x="82.3902%" y="655.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (10 samples, 0.06%)</title><rect x="82.5068%" y="709" width="0.0621%" height="15" fill="rgb(246,198,38)"/><text x="82.7568%" y="719.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (10 samples, 0.06%)</title><rect x="82.5068%" y="693" width="0.0621%" height="15" fill="rgb(245,64,37)"/><text x="82.7568%" y="703.50"></text></g><g><title>core::cell::BorrowRefMut::new (10 samples, 0.06%)</title><rect x="82.5068%" y="677" width="0.0621%" height="15" fill="rgb(250,30,36)"/><text x="82.7568%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::park::Parker&gt;&gt; (5 samples, 0.03%)</title><rect x="82.5690%" y="709" width="0.0311%" height="15" fill="rgb(217,86,53)"/><text x="82.8190%" y="719.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (37 samples, 0.23%)</title><rect x="82.6000%" y="709" width="0.2299%" height="15" fill="rgb(228,157,16)"/><text x="82.8500%" y="719.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (2,650 samples, 16.47%)</title><rect x="66.3870%" y="725" width="16.4678%" height="15" fill="rgb(217,59,31)"/><text x="66.6370%" y="735.50">tokio::runtime::thread_po..</text></g><g><title>tokio::runtime::queue::Local&lt;T&gt;::is_stealable (4 samples, 0.02%)</title><rect x="82.8300%" y="709" width="0.0249%" height="15" fill="rgb(237,138,41)"/><text x="83.0800%" y="719.50"></text></g><g><title>tokio::runtime::queue::Inner&lt;T&gt;::is_empty (4 samples, 0.02%)</title><rect x="82.8300%" y="693" width="0.0249%" height="15" fill="rgb(227,91,49)"/><text x="83.0800%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (4 samples, 0.02%)</title><rect x="82.8300%" y="677" width="0.0249%" height="15" fill="rgb(247,21,44)"/><text x="83.0800%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.02%)</title><rect x="82.8300%" y="661" width="0.0249%" height="15" fill="rgb(219,210,51)"/><text x="83.0800%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::queue::Pointers&gt;&gt; (7 samples, 0.04%)</title><rect x="82.8610%" y="693" width="0.0435%" height="15" fill="rgb(209,140,6)"/><text x="83.1110%" y="703.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.04%)</title><rect x="82.8610%" y="677" width="0.0435%" height="15" fill="rgb(221,188,24)"/><text x="83.1110%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (7 samples, 0.04%)</title><rect x="82.8610%" y="661" width="0.0435%" height="15" fill="rgb(232,154,20)"/><text x="83.1110%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (7 samples, 0.04%)</title><rect x="82.8610%" y="645" width="0.0435%" height="15" fill="rgb(244,137,50)"/><text x="83.1110%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (7 samples, 0.04%)</title><rect x="82.8610%" y="629" width="0.0435%" height="15" fill="rgb(225,185,43)"/><text x="83.1110%" y="639.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::is_closed (24 samples, 0.15%)</title><rect x="82.8610%" y="709" width="0.1491%" height="15" fill="rgb(213,205,38)"/><text x="83.1110%" y="719.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (17 samples, 0.11%)</title><rect x="82.9045%" y="693" width="0.1056%" height="15" fill="rgb(236,73,12)"/><text x="83.1545%" y="703.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (17 samples, 0.11%)</title><rect x="82.9045%" y="677" width="0.1056%" height="15" fill="rgb(235,219,13)"/><text x="83.1545%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (17 samples, 0.11%)</title><rect x="82.9045%" y="661" width="0.1056%" height="15" fill="rgb(218,59,36)"/><text x="83.1545%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (16 samples, 0.10%)</title><rect x="82.9108%" y="645" width="0.0994%" height="15" fill="rgb(205,110,39)"/><text x="83.1608%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (16 samples, 0.10%)</title><rect x="82.9108%" y="629" width="0.0994%" height="15" fill="rgb(218,206,42)"/><text x="83.1608%" y="639.50"></text></g><g><title>&lt;tokio::runtime::task::stack::TransferStack&lt;T&gt;::drain::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.07%)</title><rect x="83.0102%" y="693" width="0.0684%" height="15" fill="rgb(248,125,24)"/><text x="83.2602%" y="703.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (9 samples, 0.06%)</title><rect x="83.0226%" y="677" width="0.0559%" height="15" fill="rgb(242,28,27)"/><text x="83.2726%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Core&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::store::AsyncStore&gt;::produce::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="83.0972%" y="565" width="0.0186%" height="15" fill="rgb(216,228,15)"/><text x="83.3472%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Scheduler&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="83.0972%" y="549" width="0.0186%" height="15" fill="rgb(235,116,46)"/><text x="83.3472%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="83.0972%" y="533" width="0.0186%" height="15" fill="rgb(224,18,32)"/><text x="83.3472%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="83.0972%" y="517" width="0.0186%" height="15" fill="rgb(252,5,12)"/><text x="83.3472%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="83.0972%" y="501" width="0.0186%" height="15" fill="rgb(251,36,5)"/><text x="83.3472%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt; (3 samples, 0.02%)</title><rect x="83.0972%" y="485" width="0.0186%" height="15" fill="rgb(217,53,14)"/><text x="83.3472%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="83.0972%" y="469" width="0.0186%" height="15" fill="rgb(215,86,45)"/><text x="83.3472%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.02%)</title><rect x="83.0972%" y="453" width="0.0186%" height="15" fill="rgb(242,169,11)"/><text x="83.3472%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.02%)</title><rect x="83.0972%" y="437" width="0.0186%" height="15" fill="rgb(211,213,45)"/><text x="83.3472%" y="447.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::dealloc (6 samples, 0.04%)</title><rect x="83.0848%" y="645" width="0.0373%" height="15" fill="rgb(205,88,11)"/><text x="83.3348%" y="655.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (4 samples, 0.02%)</title><rect x="83.0972%" y="629" width="0.0249%" height="15" fill="rgb(252,69,26)"/><text x="83.3472%" y="639.50"></text></g><g><title>core::mem::drop (4 samples, 0.02%)</title><rect x="83.0972%" y="613" width="0.0249%" height="15" fill="rgb(246,123,37)"/><text x="83.3472%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::store::AsyncStore&gt;::produce::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="83.0972%" y="597" width="0.0249%" height="15" fill="rgb(212,205,5)"/><text x="83.3472%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::store::AsyncStore&gt;::produce::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="83.0972%" y="581" width="0.0249%" height="15" fill="rgb(253,148,0)"/><text x="83.3472%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (12 samples, 0.07%)</title><rect x="83.0848%" y="693" width="0.0746%" height="15" fill="rgb(239,22,4)"/><text x="83.3348%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (12 samples, 0.07%)</title><rect x="83.0848%" y="677" width="0.0746%" height="15" fill="rgb(226,26,53)"/><text x="83.3348%" y="687.50"></text></g><g><title>&lt;tokio::runtime::task::Task&lt;S&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.07%)</title><rect x="83.0848%" y="661" width="0.0746%" height="15" fill="rgb(225,229,45)"/><text x="83.3348%" y="671.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (6 samples, 0.04%)</title><rect x="83.1220%" y="645" width="0.0373%" height="15" fill="rgb(220,60,37)"/><text x="83.3720%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (6 samples, 0.04%)</title><rect x="83.1220%" y="629" width="0.0373%" height="15" fill="rgb(217,180,35)"/><text x="83.3720%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_sub (6 samples, 0.04%)</title><rect x="83.1220%" y="613" width="0.0373%" height="15" fill="rgb(229,7,53)"/><text x="83.3720%" y="623.50"></text></g><g><title>tokio::runtime::task::stack::TransferStack&lt;T&gt;::drain (48 samples, 0.30%)</title><rect x="83.1593%" y="693" width="0.2983%" height="15" fill="rgb(254,137,3)"/><text x="83.4093%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::swap (48 samples, 0.30%)</title><rect x="83.1593%" y="677" width="0.2983%" height="15" fill="rgb(215,140,41)"/><text x="83.4093%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_swap (48 samples, 0.30%)</title><rect x="83.1593%" y="661" width="0.2983%" height="15" fill="rgb(250,80,15)"/><text x="83.4093%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Worker::remote (24 samples, 0.15%)</title><rect x="83.4576%" y="693" width="0.1491%" height="15" fill="rgb(252,191,6)"/><text x="83.7076%" y="703.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::maintenance (127 samples, 0.79%)</title><rect x="82.8548%" y="725" width="0.7892%" height="15" fill="rgb(246,217,18)"/><text x="83.1048%" y="735.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::drain_pending_drop (102 samples, 0.63%)</title><rect x="83.0102%" y="709" width="0.6339%" height="15" fill="rgb(223,93,7)"/><text x="83.2602%" y="719.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (6 samples, 0.04%)</title><rect x="83.6068%" y="693" width="0.0373%" height="15" fill="rgb(225,55,52)"/><text x="83.8568%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.01%)</title><rect x="83.6503%" y="693" width="0.0124%" height="15" fill="rgb(240,31,24)"/><text x="83.9003%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (6 samples, 0.04%)</title><rect x="83.6689%" y="645" width="0.0373%" height="15" fill="rgb(205,56,52)"/><text x="83.9189%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.04%)</title><rect x="83.6689%" y="629" width="0.0373%" height="15" fill="rgb(246,146,12)"/><text x="83.9189%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;usize&gt;&gt;&gt; (8 samples, 0.05%)</title><rect x="83.6627%" y="693" width="0.0497%" height="15" fill="rgb(239,84,36)"/><text x="83.9127%" y="703.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.05%)</title><rect x="83.6627%" y="677" width="0.0497%" height="15" fill="rgb(207,41,40)"/><text x="83.9127%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (8 samples, 0.05%)</title><rect x="83.6627%" y="661" width="0.0497%" height="15" fill="rgb(241,179,25)"/><text x="83.9127%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (8 samples, 0.05%)</title><rect x="83.7124%" y="693" width="0.0497%" height="15" fill="rgb(210,0,34)"/><text x="83.9624%" y="703.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (8 samples, 0.05%)</title><rect x="83.7124%" y="677" width="0.0497%" height="15" fill="rgb(225,217,29)"/><text x="83.9624%" y="687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (8 samples, 0.05%)</title><rect x="83.7124%" y="661" width="0.0497%" height="15" fill="rgb(216,191,38)"/><text x="83.9624%" y="671.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (6 samples, 0.04%)</title><rect x="83.7248%" y="645" width="0.0373%" height="15" fill="rgb(232,140,52)"/><text x="83.9748%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (6 samples, 0.04%)</title><rect x="83.7248%" y="629" width="0.0373%" height="15" fill="rgb(223,158,51)"/><text x="83.9748%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (6 samples, 0.04%)</title><rect x="83.7683%" y="645" width="0.0373%" height="15" fill="rgb(235,29,51)"/><text x="84.0183%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (6 samples, 0.04%)</title><rect x="83.7683%" y="629" width="0.0373%" height="15" fill="rgb(215,181,18)"/><text x="84.0183%" y="639.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_from_parked (27 samples, 0.17%)</title><rect x="83.6440%" y="725" width="0.1678%" height="15" fill="rgb(227,125,34)"/><text x="83.8940%" y="735.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::is_parked (26 samples, 0.16%)</title><rect x="83.6503%" y="709" width="0.1616%" height="15" fill="rgb(230,197,49)"/><text x="83.9003%" y="719.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (8 samples, 0.05%)</title><rect x="83.7621%" y="693" width="0.0497%" height="15" fill="rgb(239,141,16)"/><text x="84.0121%" y="703.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (8 samples, 0.05%)</title><rect x="83.7621%" y="677" width="0.0497%" height="15" fill="rgb(225,105,43)"/><text x="84.0121%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (8 samples, 0.05%)</title><rect x="83.7621%" y="661" width="0.0497%" height="15" fill="rgb(214,131,14)"/><text x="84.0121%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 0.04%)</title><rect x="83.8118%" y="693" width="0.0435%" height="15" fill="rgb(229,177,11)"/><text x="84.0618%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;usize&gt;&gt;&gt; (59 samples, 0.37%)</title><rect x="83.8553%" y="693" width="0.3666%" height="15" fill="rgb(231,180,14)"/><text x="84.1053%" y="703.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (59 samples, 0.37%)</title><rect x="83.8553%" y="677" width="0.3666%" height="15" fill="rgb(232,88,2)"/><text x="84.1053%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (59 samples, 0.37%)</title><rect x="83.8553%" y="661" width="0.3666%" height="15" fill="rgb(205,220,8)"/><text x="84.1053%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (59 samples, 0.37%)</title><rect x="83.8553%" y="645" width="0.3666%" height="15" fill="rgb(225,23,53)"/><text x="84.1053%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (59 samples, 0.37%)</title><rect x="83.8553%" y="629" width="0.3666%" height="15" fill="rgb(213,62,29)"/><text x="84.1053%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (6 samples, 0.04%)</title><rect x="84.2282%" y="645" width="0.0373%" height="15" fill="rgb(227,75,7)"/><text x="84.4782%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (6 samples, 0.04%)</title><rect x="84.2282%" y="629" width="0.0373%" height="15" fill="rgb(207,105,14)"/><text x="84.4782%" y="639.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (14 samples, 0.09%)</title><rect x="84.2220%" y="693" width="0.0870%" height="15" fill="rgb(245,62,29)"/><text x="84.4720%" y="703.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (14 samples, 0.09%)</title><rect x="84.2220%" y="677" width="0.0870%" height="15" fill="rgb(236,202,4)"/><text x="84.4720%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (14 samples, 0.09%)</title><rect x="84.2220%" y="661" width="0.0870%" height="15" fill="rgb(250,67,1)"/><text x="84.4720%" y="671.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (7 samples, 0.04%)</title><rect x="84.2655%" y="645" width="0.0435%" height="15" fill="rgb(253,115,44)"/><text x="84.5155%" y="655.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (3 samples, 0.02%)</title><rect x="84.2903%" y="629" width="0.0186%" height="15" fill="rgb(251,139,18)"/><text x="84.5403%" y="639.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (3 samples, 0.02%)</title><rect x="84.2903%" y="613" width="0.0186%" height="15" fill="rgb(218,22,32)"/><text x="84.5403%" y="623.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (3 samples, 0.02%)</title><rect x="84.2903%" y="597" width="0.0186%" height="15" fill="rgb(243,53,5)"/><text x="84.5403%" y="607.50"></text></g><g><title>core::hint::spin_loop (3 samples, 0.02%)</title><rect x="84.2903%" y="581" width="0.0186%" height="15" fill="rgb(227,56,16)"/><text x="84.5403%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (3 samples, 0.02%)</title><rect x="84.2903%" y="565" width="0.0186%" height="15" fill="rgb(245,53,0)"/><text x="84.5403%" y="575.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::transition_worker_to_parked (89 samples, 0.55%)</title><rect x="83.8118%" y="709" width="0.5531%" height="15" fill="rgb(216,170,35)"/><text x="84.0618%" y="719.50"></text></g><g><title>tokio::runtime::thread_pool::idle::State::dec_num_unparked (9 samples, 0.06%)</title><rect x="84.3090%" y="693" width="0.0559%" height="15" fill="rgb(211,200,8)"/><text x="84.5590%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (8 samples, 0.05%)</title><rect x="84.3152%" y="677" width="0.0497%" height="15" fill="rgb(228,204,44)"/><text x="84.5652%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_sub (8 samples, 0.05%)</title><rect x="84.3152%" y="661" width="0.0497%" height="15" fill="rgb(214,121,17)"/><text x="84.5652%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park (2,924 samples, 18.17%)</title><rect x="66.2317%" y="741" width="18.1705%" height="15" fill="rgb(233,64,38)"/><text x="66.4817%" y="751.50">tokio::runtime::thread_pool:..</text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_to_parked (95 samples, 0.59%)</title><rect x="83.8118%" y="725" width="0.5904%" height="15" fill="rgb(253,54,19)"/><text x="84.0618%" y="735.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_if_work_pending (6 samples, 0.04%)</title><rect x="84.3649%" y="709" width="0.0373%" height="15" fill="rgb(253,94,18)"/><text x="84.6149%" y="719.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (3 samples, 0.02%)</title><rect x="84.4208%" y="725" width="0.0186%" height="15" fill="rgb(227,57,52)"/><text x="84.6708%" y="735.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (3 samples, 0.02%)</title><rect x="84.4208%" y="709" width="0.0186%" height="15" fill="rgb(230,228,50)"/><text x="84.6708%" y="719.50"></text></g><g><title>core::cell::BorrowRefMut::new (3 samples, 0.02%)</title><rect x="84.4208%" y="693" width="0.0186%" height="15" fill="rgb(217,205,27)"/><text x="84.6708%" y="703.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (5 samples, 0.03%)</title><rect x="84.4519%" y="693" width="0.0311%" height="15" fill="rgb(252,71,50)"/><text x="84.7019%" y="703.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (5 samples, 0.03%)</title><rect x="84.4519%" y="677" width="0.0311%" height="15" fill="rgb(209,86,4)"/><text x="84.7019%" y="687.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (5 samples, 0.03%)</title><rect x="84.4519%" y="661" width="0.0311%" height="15" fill="rgb(229,94,0)"/><text x="84.7019%" y="671.50"></text></g><g><title>syscall (5 samples, 0.03%)</title><rect x="84.4519%" y="645" width="0.0311%" height="15" fill="rgb(252,223,21)"/><text x="84.7019%" y="655.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="84.4519%" y="629" width="0.0311%" height="15" fill="rgb(230,210,4)"/><text x="84.7019%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::coop::with_budget::ResetGuard&gt; (2 samples, 0.01%)</title><rect x="84.5451%" y="645" width="0.0124%" height="15" fill="rgb(240,149,38)"/><text x="84.7951%" y="655.50"></text></g><g><title>&lt;tokio::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="84.5451%" y="629" width="0.0124%" height="15" fill="rgb(254,105,20)"/><text x="84.7951%" y="639.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.01%)</title><rect x="84.5451%" y="613" width="0.0124%" height="15" fill="rgb(253,87,46)"/><text x="84.7951%" y="623.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.01%)</title><rect x="84.5451%" y="597" width="0.0124%" height="15" fill="rgb(253,116,33)"/><text x="84.7951%" y="607.50"></text></g><g><title>core::mem::replace (2 samples, 0.01%)</title><rect x="84.5451%" y="581" width="0.0124%" height="15" fill="rgb(229,198,5)"/><text x="84.7951%" y="591.50"></text></g><g><title>core::mem::swap (2 samples, 0.01%)</title><rect x="84.5451%" y="565" width="0.0124%" height="15" fill="rgb(242,38,37)"/><text x="84.7951%" y="575.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.01%)</title><rect x="84.5451%" y="549" width="0.0124%" height="15" fill="rgb(242,69,53)"/><text x="84.7951%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="84.5451%" y="533" width="0.0124%" height="15" fill="rgb(249,80,16)"/><text x="84.7951%" y="543.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (4 samples, 0.02%)</title><rect x="84.6197%" y="629" width="0.0249%" height="15" fill="rgb(206,128,11)"/><text x="84.8697%" y="639.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (4 samples, 0.02%)</title><rect x="84.6197%" y="613" width="0.0249%" height="15" fill="rgb(212,35,20)"/><text x="84.8697%" y="623.50"></text></g><g><title>core::cell::BorrowRefMut::new (4 samples, 0.02%)</title><rect x="84.6197%" y="597" width="0.0249%" height="15" fill="rgb(236,79,13)"/><text x="84.8697%" y="607.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.01%)</title><rect x="84.6321%" y="581" width="0.0124%" height="15" fill="rgb(233,123,3)"/><text x="84.8821%" y="591.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.01%)</title><rect x="84.6321%" y="565" width="0.0124%" height="15" fill="rgb(214,93,52)"/><text x="84.8821%" y="575.50"></text></g><g><title>core::mem::replace (2 samples, 0.01%)</title><rect x="84.6321%" y="549" width="0.0124%" height="15" fill="rgb(251,37,40)"/><text x="84.8821%" y="559.50"></text></g><g><title>core::mem::swap (2 samples, 0.01%)</title><rect x="84.6321%" y="533" width="0.0124%" height="15" fill="rgb(227,80,54)"/><text x="84.8821%" y="543.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.01%)</title><rect x="84.6321%" y="517" width="0.0124%" height="15" fill="rgb(254,48,11)"/><text x="84.8821%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.01%)</title><rect x="84.6321%" y="501" width="0.0124%" height="15" fill="rgb(235,193,26)"/><text x="84.8821%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (5 samples, 0.03%)</title><rect x="84.6445%" y="629" width="0.0311%" height="15" fill="rgb(229,99,21)"/><text x="84.8945%" y="639.50"></text></g><g><title>core::mem::take (5 samples, 0.03%)</title><rect x="84.6445%" y="613" width="0.0311%" height="15" fill="rgb(211,140,41)"/><text x="84.8945%" y="623.50"></text></g><g><title>core::mem::replace (5 samples, 0.03%)</title><rect x="84.6445%" y="597" width="0.0311%" height="15" fill="rgb(240,227,30)"/><text x="84.8945%" y="607.50"></text></g><g><title>core::mem::swap (5 samples, 0.03%)</title><rect x="84.6445%" y="581" width="0.0311%" height="15" fill="rgb(215,224,45)"/><text x="84.8945%" y="591.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (5 samples, 0.03%)</title><rect x="84.6445%" y="565" width="0.0311%" height="15" fill="rgb(206,123,31)"/><text x="84.8945%" y="575.50"></text></g><g><title>core::ptr::read (4 samples, 0.02%)</title><rect x="84.6508%" y="549" width="0.0249%" height="15" fill="rgb(210,138,16)"/><text x="84.9008%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.02%)</title><rect x="84.6508%" y="533" width="0.0249%" height="15" fill="rgb(228,57,28)"/><text x="84.9008%" y="543.50"></text></g><g><title>tokio::runtime::queue::Local&lt;T&gt;::push_back (4 samples, 0.02%)</title><rect x="84.9242%" y="453" width="0.0249%" height="15" fill="rgb(242,170,10)"/><text x="85.1742%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (4 samples, 0.02%)</title><rect x="84.9677%" y="405" width="0.0249%" height="15" fill="rgb(228,214,39)"/><text x="85.2177%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_swap (4 samples, 0.02%)</title><rect x="84.9677%" y="389" width="0.0249%" height="15" fill="rgb(218,179,33)"/><text x="85.2177%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (3 samples, 0.02%)</title><rect x="84.9988%" y="341" width="0.0186%" height="15" fill="rgb(235,193,39)"/><text x="85.2488%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.02%)</title><rect x="84.9988%" y="325" width="0.0186%" height="15" fill="rgb(219,221,36)"/><text x="85.2488%" y="335.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (12 samples, 0.07%)</title><rect x="84.9490%" y="437" width="0.0746%" height="15" fill="rgb(248,218,19)"/><text x="85.1990%" y="447.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (10 samples, 0.06%)</title><rect x="84.9615%" y="421" width="0.0621%" height="15" fill="rgb(205,50,9)"/><text x="85.2115%" y="431.50"></text></g><g><title>tokio::runtime::park::Inner::unpark_condvar (5 samples, 0.03%)</title><rect x="84.9925%" y="405" width="0.0311%" height="15" fill="rgb(238,81,28)"/><text x="85.2425%" y="415.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (4 samples, 0.02%)</title><rect x="84.9988%" y="389" width="0.0249%" height="15" fill="rgb(235,110,19)"/><text x="85.2488%" y="399.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (4 samples, 0.02%)</title><rect x="84.9988%" y="373" width="0.0249%" height="15" fill="rgb(214,7,14)"/><text x="85.2488%" y="383.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (4 samples, 0.02%)</title><rect x="84.9988%" y="357" width="0.0249%" height="15" fill="rgb(211,77,3)"/><text x="85.2488%" y="367.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (57 samples, 0.35%)</title><rect x="85.0236%" y="405" width="0.3542%" height="15" fill="rgb(229,5,9)"/><text x="85.2736%" y="415.50"></text></g><g><title>syscall (57 samples, 0.35%)</title><rect x="85.0236%" y="389" width="0.3542%" height="15" fill="rgb(225,90,11)"/><text x="85.2736%" y="399.50"></text></g><g><title>[unknown] (53 samples, 0.33%)</title><rect x="85.0485%" y="373" width="0.3294%" height="15" fill="rgb(242,56,8)"/><text x="85.2985%" y="383.50"></text></g><g><title>[unknown] (49 samples, 0.30%)</title><rect x="85.0733%" y="357" width="0.3045%" height="15" fill="rgb(249,212,39)"/><text x="85.3233%" y="367.50"></text></g><g><title>[unknown] (49 samples, 0.30%)</title><rect x="85.0733%" y="341" width="0.3045%" height="15" fill="rgb(236,90,9)"/><text x="85.3233%" y="351.50"></text></g><g><title>[unknown] (48 samples, 0.30%)</title><rect x="85.0795%" y="325" width="0.2983%" height="15" fill="rgb(206,88,35)"/><text x="85.3295%" y="335.50"></text></g><g><title>[unknown] (48 samples, 0.30%)</title><rect x="85.0795%" y="309" width="0.2983%" height="15" fill="rgb(205,126,30)"/><text x="85.3295%" y="319.50"></text></g><g><title>[unknown] (41 samples, 0.25%)</title><rect x="85.1230%" y="293" width="0.2548%" height="15" fill="rgb(230,176,12)"/><text x="85.3730%" y="303.50"></text></g><g><title>[unknown] (36 samples, 0.22%)</title><rect x="85.1541%" y="277" width="0.2237%" height="15" fill="rgb(243,19,9)"/><text x="85.4041%" y="287.50"></text></g><g><title>[unknown] (30 samples, 0.19%)</title><rect x="85.1914%" y="261" width="0.1864%" height="15" fill="rgb(245,171,17)"/><text x="85.4414%" y="271.50"></text></g><g><title>[unknown] (24 samples, 0.15%)</title><rect x="85.2287%" y="245" width="0.1491%" height="15" fill="rgb(227,52,21)"/><text x="85.4787%" y="255.50"></text></g><g><title>[unknown] (17 samples, 0.11%)</title><rect x="85.2722%" y="229" width="0.1056%" height="15" fill="rgb(238,69,14)"/><text x="85.5222%" y="239.50"></text></g><g><title>[unknown] (14 samples, 0.09%)</title><rect x="85.2908%" y="213" width="0.0870%" height="15" fill="rgb(241,156,39)"/><text x="85.5408%" y="223.50"></text></g><g><title>[unknown] (9 samples, 0.06%)</title><rect x="85.3219%" y="197" width="0.0559%" height="15" fill="rgb(212,227,28)"/><text x="85.5719%" y="207.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="85.3530%" y="181" width="0.0249%" height="15" fill="rgb(209,118,27)"/><text x="85.6030%" y="191.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.02%)</title><rect x="85.3778%" y="405" width="0.0186%" height="15" fill="rgb(226,102,5)"/><text x="85.6278%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.02%)</title><rect x="85.3778%" y="389" width="0.0186%" height="15" fill="rgb(223,34,3)"/><text x="85.6278%" y="399.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (64 samples, 0.40%)</title><rect x="85.0236%" y="437" width="0.3977%" height="15" fill="rgb(221,81,38)"/><text x="85.2736%" y="447.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (64 samples, 0.40%)</title><rect x="85.0236%" y="421" width="0.3977%" height="15" fill="rgb(236,219,28)"/><text x="85.2736%" y="431.50"></text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (3 samples, 0.02%)</title><rect x="85.4027%" y="405" width="0.0186%" height="15" fill="rgb(213,200,14)"/><text x="85.6527%" y="415.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (3 samples, 0.02%)</title><rect x="85.4027%" y="389" width="0.0186%" height="15" fill="rgb(240,33,19)"/><text x="85.6527%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.02%)</title><rect x="85.4027%" y="373" width="0.0186%" height="15" fill="rgb(233,113,27)"/><text x="85.6527%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.02%)</title><rect x="85.4027%" y="357" width="0.0186%" height="15" fill="rgb(220,221,18)"/><text x="85.6527%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (5 samples, 0.03%)</title><rect x="85.4213%" y="421" width="0.0311%" height="15" fill="rgb(238,92,8)"/><text x="85.6713%" y="431.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (6 samples, 0.04%)</title><rect x="85.4586%" y="421" width="0.0373%" height="15" fill="rgb(222,164,16)"/><text x="85.7086%" y="431.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (6 samples, 0.04%)</title><rect x="85.4586%" y="405" width="0.0373%" height="15" fill="rgb(241,119,3)"/><text x="85.7086%" y="415.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (6 samples, 0.04%)</title><rect x="85.4586%" y="389" width="0.0373%" height="15" fill="rgb(241,44,8)"/><text x="85.7086%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (6 samples, 0.04%)</title><rect x="85.4586%" y="373" width="0.0373%" height="15" fill="rgb(230,36,40)"/><text x="85.7086%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (6 samples, 0.04%)</title><rect x="85.4586%" y="357" width="0.0373%" height="15" fill="rgb(243,16,36)"/><text x="85.7086%" y="367.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::yield_now (111 samples, 0.69%)</title><rect x="84.8993%" y="581" width="0.6898%" height="15" fill="rgb(231,4,26)"/><text x="85.1493%" y="591.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (111 samples, 0.69%)</title><rect x="84.8993%" y="565" width="0.6898%" height="15" fill="rgb(240,9,31)"/><text x="85.1493%" y="575.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::yield_now::{{closure}} (111 samples, 0.69%)</title><rect x="84.8993%" y="549" width="0.6898%" height="15" fill="rgb(207,173,15)"/><text x="85.1493%" y="559.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::yield_now (111 samples, 0.69%)</title><rect x="84.8993%" y="533" width="0.6898%" height="15" fill="rgb(224,192,53)"/><text x="85.1493%" y="543.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (108 samples, 0.67%)</title><rect x="84.9180%" y="517" width="0.6711%" height="15" fill="rgb(223,67,28)"/><text x="85.1680%" y="527.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (108 samples, 0.67%)</title><rect x="84.9180%" y="501" width="0.6711%" height="15" fill="rgb(211,20,47)"/><text x="85.1680%" y="511.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (107 samples, 0.66%)</title><rect x="84.9242%" y="485" width="0.6649%" height="15" fill="rgb(240,228,2)"/><text x="85.1742%" y="495.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule_local (107 samples, 0.66%)</title><rect x="84.9242%" y="469" width="0.6649%" height="15" fill="rgb(248,151,12)"/><text x="85.1742%" y="479.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (103 samples, 0.64%)</title><rect x="84.9490%" y="453" width="0.6401%" height="15" fill="rgb(244,8,39)"/><text x="85.1990%" y="463.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::worker_to_notify (27 samples, 0.17%)</title><rect x="85.4213%" y="437" width="0.1678%" height="15" fill="rgb(222,26,8)"/><text x="85.6713%" y="447.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::notify_should_wakeup (15 samples, 0.09%)</title><rect x="85.4959%" y="421" width="0.0932%" height="15" fill="rgb(213,106,44)"/><text x="85.7459%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (13 samples, 0.08%)</title><rect x="85.5083%" y="405" width="0.0808%" height="15" fill="rgb(214,129,20)"/><text x="85.7583%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_add (13 samples, 0.08%)</title><rect x="85.5083%" y="389" width="0.0808%" height="15" fill="rgb(212,32,13)"/><text x="85.7583%" y="399.50"></text></g><g><title>_rjem_sdallocx (7 samples, 0.04%)</title><rect x="85.5953%" y="565" width="0.0435%" height="15" fill="rgb(208,168,33)"/><text x="85.8453%" y="575.50"></text></g><g><title>isfree (4 samples, 0.02%)</title><rect x="85.6140%" y="549" width="0.0249%" height="15" fill="rgb(231,207,8)"/><text x="85.8640%" y="559.50"></text></g><g><title>isdalloct (4 samples, 0.02%)</title><rect x="85.6140%" y="533" width="0.0249%" height="15" fill="rgb(235,219,23)"/><text x="85.8640%" y="543.50"></text></g><g><title>arena_sdalloc (4 samples, 0.02%)</title><rect x="85.6140%" y="517" width="0.0249%" height="15" fill="rgb(226,216,26)"/><text x="85.8640%" y="527.50"></text></g><g><title>tcache_dalloc_small (4 samples, 0.02%)</title><rect x="85.6140%" y="501" width="0.0249%" height="15" fill="rgb(239,137,16)"/><text x="85.8640%" y="511.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (3 samples, 0.02%)</title><rect x="85.6202%" y="485" width="0.0186%" height="15" fill="rgb(207,12,36)"/><text x="85.8702%" y="495.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (2 samples, 0.01%)</title><rect x="85.6264%" y="469" width="0.0124%" height="15" fill="rgb(210,214,24)"/><text x="85.8764%" y="479.50"></text></g><g><title>arena_dalloc_bin_locked_impl (2 samples, 0.01%)</title><rect x="85.6264%" y="453" width="0.0124%" height="15" fill="rgb(206,56,30)"/><text x="85.8764%" y="463.50"></text></g><g><title>arena_dalloc_bin_slab (2 samples, 0.01%)</title><rect x="85.6264%" y="437" width="0.0124%" height="15" fill="rgb(228,143,26)"/><text x="85.8764%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::store::AsyncStore&gt;::produce::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="85.6388%" y="533" width="0.0249%" height="15" fill="rgb(216,218,46)"/><text x="85.8888%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::store::AsyncStore&gt;::produce::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="85.6388%" y="517" width="0.0249%" height="15" fill="rgb(206,6,19)"/><text x="85.8888%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Core&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::store::AsyncStore&gt;::produce::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="85.6388%" y="501" width="0.0249%" height="15" fill="rgb(239,177,51)"/><text x="85.8888%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Scheduler&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="85.6388%" y="485" width="0.0249%" height="15" fill="rgb(216,55,25)"/><text x="85.8888%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="85.6388%" y="469" width="0.0249%" height="15" fill="rgb(231,163,29)"/><text x="85.8888%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="85.6388%" y="453" width="0.0249%" height="15" fill="rgb(232,149,50)"/><text x="85.8888%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="85.6388%" y="437" width="0.0249%" height="15" fill="rgb(223,142,48)"/><text x="85.8888%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt; (4 samples, 0.02%)</title><rect x="85.6388%" y="421" width="0.0249%" height="15" fill="rgb(245,83,23)"/><text x="85.8888%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="85.6388%" y="405" width="0.0249%" height="15" fill="rgb(224,63,2)"/><text x="85.8888%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4 samples, 0.02%)</title><rect x="85.6388%" y="389" width="0.0249%" height="15" fill="rgb(218,65,53)"/><text x="85.8888%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (4 samples, 0.02%)</title><rect x="85.6388%" y="373" width="0.0249%" height="15" fill="rgb(221,84,29)"/><text x="85.8888%" y="383.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (9 samples, 0.06%)</title><rect x="85.6388%" y="565" width="0.0559%" height="15" fill="rgb(234,0,32)"/><text x="85.8888%" y="575.50"></text></g><g><title>core::mem::drop (9 samples, 0.06%)</title><rect x="85.6388%" y="549" width="0.0559%" height="15" fill="rgb(206,20,16)"/><text x="85.8888%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::store::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Send&gt;::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (5 samples, 0.03%)</title><rect x="85.6637%" y="533" width="0.0311%" height="15" fill="rgb(244,172,18)"/><text x="85.9137%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::store::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Send&gt;::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (5 samples, 0.03%)</title><rect x="85.6637%" y="517" width="0.0311%" height="15" fill="rgb(254,133,1)"/><text x="85.9137%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Core&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::store::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Send&gt;::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (5 samples, 0.03%)</title><rect x="85.6637%" y="501" width="0.0311%" height="15" fill="rgb(222,206,41)"/><text x="85.9137%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Scheduler&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="85.6699%" y="485" width="0.0249%" height="15" fill="rgb(212,3,42)"/><text x="85.9199%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="85.6699%" y="469" width="0.0249%" height="15" fill="rgb(241,11,4)"/><text x="85.9199%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="85.6699%" y="453" width="0.0249%" height="15" fill="rgb(205,19,26)"/><text x="85.9199%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="85.6699%" y="437" width="0.0249%" height="15" fill="rgb(210,179,32)"/><text x="85.9199%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt; (4 samples, 0.02%)</title><rect x="85.6699%" y="421" width="0.0249%" height="15" fill="rgb(227,116,49)"/><text x="85.9199%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="85.6699%" y="405" width="0.0249%" height="15" fill="rgb(211,146,6)"/><text x="85.9199%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4 samples, 0.02%)</title><rect x="85.6699%" y="389" width="0.0249%" height="15" fill="rgb(219,44,39)"/><text x="85.9199%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (4 samples, 0.02%)</title><rect x="85.6699%" y="373" width="0.0249%" height="15" fill="rgb(234,128,11)"/><text x="85.9199%" y="383.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (3 samples, 0.02%)</title><rect x="85.7010%" y="485" width="0.0186%" height="15" fill="rgb(220,183,53)"/><text x="85.9510%" y="495.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::release::{{closure}} (2 samples, 0.01%)</title><rect x="85.7072%" y="469" width="0.0124%" height="15" fill="rgb(213,219,32)"/><text x="85.9572%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::queue::Pointers&gt;&gt; (2 samples, 0.01%)</title><rect x="85.7196%" y="469" width="0.0124%" height="15" fill="rgb(232,156,16)"/><text x="85.9696%" y="479.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="85.7196%" y="453" width="0.0124%" height="15" fill="rgb(246,135,34)"/><text x="85.9696%" y="463.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (2 samples, 0.01%)</title><rect x="85.7196%" y="437" width="0.0124%" height="15" fill="rgb(241,99,0)"/><text x="85.9696%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (2 samples, 0.01%)</title><rect x="85.7196%" y="421" width="0.0124%" height="15" fill="rgb(222,103,45)"/><text x="85.9696%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.01%)</title><rect x="85.7196%" y="405" width="0.0124%" height="15" fill="rgb(212,57,4)"/><text x="85.9696%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (2 samples, 0.01%)</title><rect x="85.7320%" y="421" width="0.0124%" height="15" fill="rgb(215,68,47)"/><text x="85.9820%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.01%)</title><rect x="85.7320%" y="405" width="0.0124%" height="15" fill="rgb(230,84,2)"/><text x="85.9820%" y="415.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::is_closed (5 samples, 0.03%)</title><rect x="85.7196%" y="485" width="0.0311%" height="15" fill="rgb(220,102,14)"/><text x="85.9696%" y="495.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (3 samples, 0.02%)</title><rect x="85.7320%" y="469" width="0.0186%" height="15" fill="rgb(240,10,32)"/><text x="85.9820%" y="479.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (3 samples, 0.02%)</title><rect x="85.7320%" y="453" width="0.0186%" height="15" fill="rgb(215,47,27)"/><text x="85.9820%" y="463.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (3 samples, 0.02%)</title><rect x="85.7320%" y="437" width="0.0186%" height="15" fill="rgb(233,188,43)"/><text x="85.9820%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::compare_exchange (6 samples, 0.04%)</title><rect x="85.7507%" y="469" width="0.0373%" height="15" fill="rgb(253,190,1)"/><text x="86.0007%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.04%)</title><rect x="85.7507%" y="453" width="0.0373%" height="15" fill="rgb(206,114,52)"/><text x="86.0007%" y="463.50"></text></g><g><title>tokio::runtime::task::stack::TransferStack&lt;T&gt;::push (8 samples, 0.05%)</title><rect x="85.7507%" y="485" width="0.0497%" height="15" fill="rgb(233,120,37)"/><text x="86.0007%" y="495.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::release (18 samples, 0.11%)</title><rect x="85.7010%" y="549" width="0.1119%" height="15" fill="rgb(214,52,39)"/><text x="85.9510%" y="559.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (18 samples, 0.11%)</title><rect x="85.7010%" y="533" width="0.1119%" height="15" fill="rgb(223,80,29)"/><text x="85.9510%" y="543.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::release::{{closure}} (18 samples, 0.11%)</title><rect x="85.7010%" y="517" width="0.1119%" height="15" fill="rgb(230,101,40)"/><text x="85.9510%" y="527.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::release (18 samples, 0.11%)</title><rect x="85.7010%" y="501" width="0.1119%" height="15" fill="rgb(219,211,8)"/><text x="85.9510%" y="511.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Worker::remote (2 samples, 0.01%)</title><rect x="85.8004%" y="485" width="0.0124%" height="15" fill="rgb(252,126,28)"/><text x="86.0504%" y="495.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (40 samples, 0.25%)</title><rect x="85.5891%" y="581" width="0.2486%" height="15" fill="rgb(215,56,38)"/><text x="85.8391%" y="591.50"></text></g><g><title>tokio::runtime::task::harness::SchedulerView&lt;S&gt;::transition_to_terminal (23 samples, 0.14%)</title><rect x="85.6948%" y="565" width="0.1429%" height="15" fill="rgb(249,55,44)"/><text x="85.9448%" y="575.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_terminal (3 samples, 0.02%)</title><rect x="85.8190%" y="549" width="0.0186%" height="15" fill="rgb(220,221,32)"/><text x="86.0690%" y="559.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update (3 samples, 0.02%)</title><rect x="85.8190%" y="533" width="0.0186%" height="15" fill="rgb(212,216,41)"/><text x="86.0690%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (11 samples, 0.07%)</title><rect x="85.8625%" y="501" width="0.0684%" height="15" fill="rgb(228,213,43)"/><text x="86.1125%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (8 samples, 0.05%)</title><rect x="85.8812%" y="485" width="0.0497%" height="15" fill="rgb(211,31,26)"/><text x="86.1312%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (8 samples, 0.05%)</title><rect x="85.8812%" y="469" width="0.0497%" height="15" fill="rgb(229,202,19)"/><text x="86.1312%" y="479.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (14 samples, 0.09%)</title><rect x="85.8563%" y="533" width="0.0870%" height="15" fill="rgb(229,105,46)"/><text x="86.1063%" y="543.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::bind::{{closure}} (14 samples, 0.09%)</title><rect x="85.8563%" y="517" width="0.0870%" height="15" fill="rgb(235,108,1)"/><text x="86.1063%" y="527.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (2 samples, 0.01%)</title><rect x="85.9309%" y="501" width="0.0124%" height="15" fill="rgb(245,111,35)"/><text x="86.1809%" y="511.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::bind_scheduler (15 samples, 0.09%)</title><rect x="85.8563%" y="549" width="0.0932%" height="15" fill="rgb(219,185,31)"/><text x="86.1063%" y="559.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::is_bound (4 samples, 0.02%)</title><rect x="85.9495%" y="549" width="0.0249%" height="15" fill="rgb(214,4,43)"/><text x="86.1995%" y="559.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (4 samples, 0.02%)</title><rect x="85.9495%" y="533" width="0.0249%" height="15" fill="rgb(235,227,40)"/><text x="86.1995%" y="543.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::is_bound::{{closure}} (4 samples, 0.02%)</title><rect x="85.9495%" y="517" width="0.0249%" height="15" fill="rgb(230,88,30)"/><text x="86.1995%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (4 samples, 0.02%)</title><rect x="85.9495%" y="501" width="0.0249%" height="15" fill="rgb(216,217,1)"/><text x="86.1995%" y="511.50"></text></g><g><title>tokio::runtime::task::harness::SchedulerView&lt;S&gt;::transition_to_running (44 samples, 0.27%)</title><rect x="85.8501%" y="565" width="0.2734%" height="15" fill="rgb(248,139,50)"/><text x="86.1001%" y="575.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (23 samples, 0.14%)</title><rect x="85.9806%" y="549" width="0.1429%" height="15" fill="rgb(233,1,21)"/><text x="86.2306%" y="559.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update (23 samples, 0.14%)</title><rect x="85.9806%" y="533" width="0.1429%" height="15" fill="rgb(215,183,12)"/><text x="86.2306%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (23 samples, 0.14%)</title><rect x="85.9806%" y="517" width="0.1429%" height="15" fill="rgb(229,104,42)"/><text x="86.2306%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (23 samples, 0.14%)</title><rect x="85.9806%" y="501" width="0.1429%" height="15" fill="rgb(243,34,48)"/><text x="86.2306%" y="511.50"></text></g><g><title>__rust_probestack (8 samples, 0.05%)</title><rect x="86.3845%" y="437" width="0.0497%" height="15" fill="rgb(239,11,44)"/><text x="86.6345%" y="447.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="86.4778%" y="405" width="0.0124%" height="15" fill="rgb(231,98,35)"/><text x="86.7278%" y="415.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.04%)</title><rect x="86.5150%" y="389" width="0.0435%" height="15" fill="rgb(233,28,25)"/><text x="86.7650%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2 samples, 0.01%)</title><rect x="86.5585%" y="373" width="0.0124%" height="15" fill="rgb(234,123,11)"/><text x="86.8085%" y="383.50"></text></g><g><title>core::ptr::write (2 samples, 0.01%)</title><rect x="86.5585%" y="357" width="0.0124%" height="15" fill="rgb(220,69,3)"/><text x="86.8085%" y="367.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="86.5585%" y="341" width="0.0124%" height="15" fill="rgb(214,64,36)"/><text x="86.8085%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (3 samples, 0.02%)</title><rect x="86.5710%" y="373" width="0.0186%" height="15" fill="rgb(211,138,32)"/><text x="86.8210%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.02%)</title><rect x="86.5710%" y="357" width="0.0186%" height="15" fill="rgb(213,118,47)"/><text x="86.8210%" y="367.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::push (22 samples, 0.14%)</title><rect x="86.5585%" y="389" width="0.1367%" height="15" fill="rgb(243,124,49)"/><text x="86.8085%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (17 samples, 0.11%)</title><rect x="86.5896%" y="373" width="0.1056%" height="15" fill="rgb(221,30,28)"/><text x="86.8396%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_load (17 samples, 0.11%)</title><rect x="86.5896%" y="357" width="0.1056%" height="15" fill="rgb(246,37,13)"/><text x="86.8396%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (5 samples, 0.03%)</title><rect x="86.6953%" y="373" width="0.0311%" height="15" fill="rgb(249,66,14)"/><text x="86.9453%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (5 samples, 0.03%)</title><rect x="86.6953%" y="357" width="0.0311%" height="15" fill="rgb(213,166,5)"/><text x="86.9453%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.02%)</title><rect x="86.7263%" y="373" width="0.0249%" height="15" fill="rgb(221,66,24)"/><text x="86.9763%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.02%)</title><rect x="86.7263%" y="357" width="0.0249%" height="15" fill="rgb(210,132,17)"/><text x="86.9763%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (3 samples, 0.02%)</title><rect x="86.7636%" y="325" width="0.0186%" height="15" fill="rgb(243,202,5)"/><text x="87.0136%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_swap (3 samples, 0.02%)</title><rect x="86.7636%" y="309" width="0.0186%" height="15" fill="rgb(233,70,48)"/><text x="87.0136%" y="319.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (292 samples, 1.81%)</title><rect x="86.7885%" y="261" width="1.8146%" height="15" fill="rgb(238,41,26)"/><text x="87.0385%" y="271.50">&lt;..</text></g><g><title>syscall (290 samples, 1.80%)</title><rect x="86.8009%" y="245" width="1.8021%" height="15" fill="rgb(241,19,31)"/><text x="87.0509%" y="255.50">s..</text></g><g><title>[unknown] (285 samples, 1.77%)</title><rect x="86.8320%" y="229" width="1.7711%" height="15" fill="rgb(214,76,10)"/><text x="87.0820%" y="239.50">[..</text></g><g><title>[unknown] (283 samples, 1.76%)</title><rect x="86.8444%" y="213" width="1.7586%" height="15" fill="rgb(254,202,22)"/><text x="87.0944%" y="223.50"></text></g><g><title>[unknown] (278 samples, 1.73%)</title><rect x="86.8755%" y="197" width="1.7276%" height="15" fill="rgb(214,72,24)"/><text x="87.1255%" y="207.50"></text></g><g><title>[unknown] (278 samples, 1.73%)</title><rect x="86.8755%" y="181" width="1.7276%" height="15" fill="rgb(221,92,46)"/><text x="87.1255%" y="191.50"></text></g><g><title>[unknown] (276 samples, 1.72%)</title><rect x="86.8879%" y="165" width="1.7151%" height="15" fill="rgb(246,13,50)"/><text x="87.1379%" y="175.50"></text></g><g><title>[unknown] (244 samples, 1.52%)</title><rect x="87.0868%" y="149" width="1.5163%" height="15" fill="rgb(240,165,38)"/><text x="87.3368%" y="159.50"></text></g><g><title>[unknown] (219 samples, 1.36%)</title><rect x="87.2421%" y="133" width="1.3609%" height="15" fill="rgb(241,24,51)"/><text x="87.4921%" y="143.50"></text></g><g><title>[unknown] (197 samples, 1.22%)</title><rect x="87.3788%" y="117" width="1.2242%" height="15" fill="rgb(227,51,44)"/><text x="87.6288%" y="127.50"></text></g><g><title>[unknown] (147 samples, 0.91%)</title><rect x="87.6895%" y="101" width="0.9135%" height="15" fill="rgb(231,121,3)"/><text x="87.9395%" y="111.50"></text></g><g><title>[unknown] (114 samples, 0.71%)</title><rect x="87.8946%" y="85" width="0.7084%" height="15" fill="rgb(245,3,41)"/><text x="88.1446%" y="95.50"></text></g><g><title>[unknown] (50 samples, 0.31%)</title><rect x="88.2923%" y="69" width="0.3107%" height="15" fill="rgb(214,13,26)"/><text x="88.5423%" y="79.50"></text></g><g><title>[unknown] (16 samples, 0.10%)</title><rect x="88.5036%" y="53" width="0.0994%" height="15" fill="rgb(252,75,11)"/><text x="88.7536%" y="63.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="88.5906%" y="37" width="0.0124%" height="15" fill="rgb(218,226,17)"/><text x="88.8406%" y="47.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.01%)</title><rect x="88.6030%" y="261" width="0.0124%" height="15" fill="rgb(248,89,38)"/><text x="88.8530%" y="271.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.01%)</title><rect x="88.6030%" y="245" width="0.0124%" height="15" fill="rgb(237,73,46)"/><text x="88.8530%" y="255.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (2 samples, 0.01%)</title><rect x="88.6155%" y="261" width="0.0124%" height="15" fill="rgb(242,78,33)"/><text x="88.8655%" y="271.50"></text></g><g><title>std::time::Instant::now (2 samples, 0.01%)</title><rect x="88.6155%" y="245" width="0.0124%" height="15" fill="rgb(235,60,3)"/><text x="88.8655%" y="255.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (2 samples, 0.01%)</title><rect x="88.6155%" y="229" width="0.0124%" height="15" fill="rgb(216,172,19)"/><text x="88.8655%" y="239.50"></text></g><g><title>std::sys::unix::time::inner::now (2 samples, 0.01%)</title><rect x="88.6155%" y="213" width="0.0124%" height="15" fill="rgb(227,6,42)"/><text x="88.8655%" y="223.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (5 samples, 0.03%)</title><rect x="88.6279%" y="261" width="0.0311%" height="15" fill="rgb(223,207,42)"/><text x="88.8779%" y="271.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (5 samples, 0.03%)</title><rect x="88.6279%" y="245" width="0.0311%" height="15" fill="rgb(246,138,30)"/><text x="88.8779%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (5 samples, 0.03%)</title><rect x="88.6279%" y="229" width="0.0311%" height="15" fill="rgb(251,199,47)"/><text x="88.8779%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (5 samples, 0.03%)</title><rect x="88.6279%" y="213" width="0.0311%" height="15" fill="rgb(228,218,44)"/><text x="88.8779%" y="223.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::notify_one (304 samples, 1.89%)</title><rect x="86.7823%" y="325" width="1.8891%" height="15" fill="rgb(220,68,6)"/><text x="87.0323%" y="335.50">t..</text></g><g><title>parking_lot::condvar::Condvar::notify_one (304 samples, 1.89%)</title><rect x="86.7823%" y="309" width="1.8891%" height="15" fill="rgb(240,60,26)"/><text x="87.0323%" y="319.50">p..</text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (304 samples, 1.89%)</title><rect x="86.7823%" y="293" width="1.8891%" height="15" fill="rgb(211,200,19)"/><text x="87.0323%" y="303.50">p..</text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (304 samples, 1.89%)</title><rect x="86.7823%" y="277" width="1.8891%" height="15" fill="rgb(242,145,30)"/><text x="87.0323%" y="287.50">p..</text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (2 samples, 0.01%)</title><rect x="88.6590%" y="261" width="0.0124%" height="15" fill="rgb(225,64,13)"/><text x="88.9090%" y="271.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (2 samples, 0.01%)</title><rect x="88.6590%" y="245" width="0.0124%" height="15" fill="rgb(218,103,35)"/><text x="88.9090%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.01%)</title><rect x="88.6590%" y="229" width="0.0124%" height="15" fill="rgb(216,93,46)"/><text x="88.9090%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.01%)</title><rect x="88.6590%" y="213" width="0.0124%" height="15" fill="rgb(225,159,27)"/><text x="88.9090%" y="223.50"></text></g><g><title>core::task::wake::Waker::wake (310 samples, 1.93%)</title><rect x="86.7512%" y="373" width="1.9264%" height="15" fill="rgb(225,204,11)"/><text x="87.0012%" y="383.50">c..</text></g><g><title>tokio::park::thread::wake (310 samples, 1.93%)</title><rect x="86.7512%" y="357" width="1.9264%" height="15" fill="rgb(205,56,4)"/><text x="87.0012%" y="367.50">t..</text></g><g><title>tokio::park::thread::Inner::unpark (309 samples, 1.92%)</title><rect x="86.7574%" y="341" width="1.9202%" height="15" fill="rgb(206,6,35)"/><text x="87.0074%" y="351.50">t..</text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (20 samples, 0.12%)</title><rect x="88.6776%" y="325" width="0.1243%" height="15" fill="rgb(247,73,52)"/><text x="88.9276%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (20 samples, 0.12%)</title><rect x="88.6776%" y="309" width="0.1243%" height="15" fill="rgb(246,97,4)"/><text x="88.9276%" y="319.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (22 samples, 0.14%)</title><rect x="88.6776%" y="373" width="0.1367%" height="15" fill="rgb(212,37,15)"/><text x="88.9276%" y="383.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (22 samples, 0.14%)</title><rect x="88.6776%" y="357" width="0.1367%" height="15" fill="rgb(208,130,40)"/><text x="88.9276%" y="367.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (22 samples, 0.14%)</title><rect x="88.6776%" y="341" width="0.1367%" height="15" fill="rgb(236,55,29)"/><text x="88.9276%" y="351.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (2 samples, 0.01%)</title><rect x="88.8019%" y="325" width="0.0124%" height="15" fill="rgb(209,156,45)"/><text x="89.0519%" y="335.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (2 samples, 0.01%)</title><rect x="88.8019%" y="309" width="0.0124%" height="15" fill="rgb(249,107,4)"/><text x="89.0519%" y="319.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (2 samples, 0.01%)</title><rect x="88.8019%" y="293" width="0.0124%" height="15" fill="rgb(227,7,13)"/><text x="89.0519%" y="303.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (2 samples, 0.01%)</title><rect x="88.8019%" y="277" width="0.0124%" height="15" fill="rgb(250,129,14)"/><text x="89.0519%" y="287.50"></text></g><g><title>core::hint::spin_loop (2 samples, 0.01%)</title><rect x="88.8019%" y="261" width="0.0124%" height="15" fill="rgb(229,92,13)"/><text x="89.0519%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (2 samples, 0.01%)</title><rect x="88.8019%" y="245" width="0.0124%" height="15" fill="rgb(245,98,39)"/><text x="89.0519%" y="255.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (2 samples, 0.01%)</title><rect x="88.8143%" y="357" width="0.0124%" height="15" fill="rgb(234,135,48)"/><text x="89.0643%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (2 samples, 0.01%)</title><rect x="88.8143%" y="341" width="0.0124%" height="15" fill="rgb(230,98,28)"/><text x="89.0643%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (5 samples, 0.03%)</title><rect x="88.8267%" y="357" width="0.0311%" height="15" fill="rgb(223,121,0)"/><text x="89.0767%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_store (5 samples, 0.03%)</title><rect x="88.8267%" y="341" width="0.0311%" height="15" fill="rgb(234,173,33)"/><text x="89.0767%" y="351.50"></text></g><g><title>rho_runtime::storage::coordinator::ThreadSafeQueue::push (387 samples, 2.40%)</title><rect x="86.4902%" y="405" width="2.4049%" height="15" fill="rgb(245,47,8)"/><text x="86.7402%" y="415.50">rh..</text></g><g><title>tokio::sync::notify::Notify::notify_one (354 samples, 2.20%)</title><rect x="86.6953%" y="389" width="2.1999%" height="15" fill="rgb(205,17,20)"/><text x="86.9453%" y="399.50">t..</text></g><g><title>tokio::sync::notify::notify_locked (13 samples, 0.08%)</title><rect x="88.8143%" y="373" width="0.0808%" height="15" fill="rgb(232,151,16)"/><text x="89.0643%" y="383.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::pop_back (6 samples, 0.04%)</title><rect x="88.8578%" y="357" width="0.0373%" height="15" fill="rgb(208,30,32)"/><text x="89.1078%" y="367.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.06%)</title><rect x="88.8951%" y="389" width="0.0559%" height="15" fill="rgb(254,26,3)"/><text x="89.1451%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (9 samples, 0.06%)</title><rect x="88.8951%" y="373" width="0.0559%" height="15" fill="rgb(240,177,30)"/><text x="89.1451%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_add (9 samples, 0.06%)</title><rect x="88.8951%" y="357" width="0.0559%" height="15" fill="rgb(248,76,44)"/><text x="89.1451%" y="367.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.03%)</title><rect x="88.9510%" y="373" width="0.0311%" height="15" fill="rgb(241,186,54)"/><text x="89.2010%" y="383.50"></text></g><g><title>&lt;rho_runtime::storage::store::AsyncStore as rho_runtime::storage::Storage&gt;::produce (406 samples, 2.52%)</title><rect x="86.4778%" y="421" width="2.5230%" height="15" fill="rgb(249,171,29)"/><text x="86.7278%" y="431.50">&lt;r..</text></g><g><title>tokio::sync::oneshot::channel (17 samples, 0.11%)</title><rect x="88.8951%" y="405" width="0.1056%" height="15" fill="rgb(237,151,44)"/><text x="89.1451%" y="415.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (8 samples, 0.05%)</title><rect x="88.9510%" y="389" width="0.0497%" height="15" fill="rgb(228,174,30)"/><text x="89.2010%" y="399.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.02%)</title><rect x="88.9821%" y="373" width="0.0186%" height="15" fill="rgb(252,14,37)"/><text x="89.2321%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.02%)</title><rect x="88.9821%" y="357" width="0.0186%" height="15" fill="rgb(207,111,40)"/><text x="89.2321%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.02%)</title><rect x="88.9821%" y="341" width="0.0186%" height="15" fill="rgb(248,171,54)"/><text x="89.2321%" y="351.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.02%)</title><rect x="88.9821%" y="325" width="0.0186%" height="15" fill="rgb(211,127,2)"/><text x="89.2321%" y="335.50"></text></g><g><title>_rjem_mallocx (3 samples, 0.02%)</title><rect x="88.9821%" y="309" width="0.0186%" height="15" fill="rgb(236,87,47)"/><text x="89.2321%" y="319.50"></text></g><g><title>imalloc (3 samples, 0.02%)</title><rect x="88.9821%" y="293" width="0.0186%" height="15" fill="rgb(223,190,45)"/><text x="89.2321%" y="303.50"></text></g><g><title>imalloc_body (3 samples, 0.02%)</title><rect x="88.9821%" y="277" width="0.0186%" height="15" fill="rgb(215,5,16)"/><text x="89.2321%" y="287.50"></text></g><g><title>imalloc_no_sample (3 samples, 0.02%)</title><rect x="88.9821%" y="261" width="0.0186%" height="15" fill="rgb(252,82,33)"/><text x="89.2321%" y="271.50"></text></g><g><title>iallocztm (3 samples, 0.02%)</title><rect x="88.9821%" y="245" width="0.0186%" height="15" fill="rgb(247,213,44)"/><text x="89.2321%" y="255.50"></text></g><g><title>arena_malloc (3 samples, 0.02%)</title><rect x="88.9821%" y="229" width="0.0186%" height="15" fill="rgb(205,196,44)"/><text x="89.2321%" y="239.50"></text></g><g><title>tcache_alloc_small (3 samples, 0.02%)</title><rect x="88.9821%" y="213" width="0.0186%" height="15" fill="rgb(237,96,54)"/><text x="89.2321%" y="223.50"></text></g><g><title>[libc-2.31.so] (39 samples, 0.24%)</title><rect x="89.0070%" y="421" width="0.2424%" height="15" fill="rgb(230,113,34)"/><text x="89.2570%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::store::AsyncStore&gt;&gt;&gt; (3 samples, 0.02%)</title><rect x="89.2493%" y="421" width="0.0186%" height="15" fill="rgb(221,224,12)"/><text x="89.4993%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="89.2493%" y="405" width="0.0186%" height="15" fill="rgb(219,112,44)"/><text x="89.4993%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.02%)</title><rect x="89.2493%" y="389" width="0.0186%" height="15" fill="rgb(210,31,13)"/><text x="89.4993%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.02%)</title><rect x="89.2493%" y="373" width="0.0186%" height="15" fill="rgb(230,25,16)"/><text x="89.4993%" y="383.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::produce::{{closure}} (467 samples, 2.90%)</title><rect x="86.4343%" y="437" width="2.9021%" height="15" fill="rgb(246,108,53)"/><text x="86.6843%" y="447.50">rh..</text></g><g><title>rho_runtime::interpreter::AsynWaitGroup::release (11 samples, 0.07%)</title><rect x="89.2680%" y="421" width="0.0684%" height="15" fill="rgb(241,172,50)"/><text x="89.5180%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicI32::fetch_sub (11 samples, 0.07%)</title><rect x="89.2680%" y="405" width="0.0684%" height="15" fill="rgb(235,141,10)"/><text x="89.5180%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_sub (11 samples, 0.07%)</title><rect x="89.2680%" y="389" width="0.0684%" height="15" fill="rgb(220,174,43)"/><text x="89.5180%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::store::AsyncStore&gt;&gt;&gt; (2 samples, 0.01%)</title><rect x="89.3550%" y="421" width="0.0124%" height="15" fill="rgb(215,181,40)"/><text x="89.6050%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="89.3550%" y="405" width="0.0124%" height="15" fill="rgb(230,97,2)"/><text x="89.6050%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Send&gt; (3 samples, 0.02%)</title><rect x="89.3674%" y="421" width="0.0186%" height="15" fill="rgb(211,25,27)"/><text x="89.6174%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Par&gt;&gt; (3 samples, 0.02%)</title><rect x="89.3674%" y="405" width="0.0186%" height="15" fill="rgb(230,87,26)"/><text x="89.6174%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Par&gt;&gt; (3 samples, 0.02%)</title><rect x="89.3674%" y="389" width="0.0186%" height="15" fill="rgb(227,160,17)"/><text x="89.6174%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.02%)</title><rect x="89.3674%" y="373" width="0.0186%" height="15" fill="rgb(244,85,34)"/><text x="89.6174%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.02%)</title><rect x="89.3674%" y="357" width="0.0186%" height="15" fill="rgb(207,70,0)"/><text x="89.6174%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.02%)</title><rect x="89.3674%" y="341" width="0.0186%" height="15" fill="rgb(223,129,7)"/><text x="89.6174%" y="351.50"></text></g><g><title>_rjem_sdallocx (3 samples, 0.02%)</title><rect x="89.3674%" y="325" width="0.0186%" height="15" fill="rgb(246,105,7)"/><text x="89.6174%" y="335.50"></text></g><g><title>isfree (2 samples, 0.01%)</title><rect x="89.3736%" y="309" width="0.0124%" height="15" fill="rgb(215,154,42)"/><text x="89.6236%" y="319.50"></text></g><g><title>isdalloct (2 samples, 0.01%)</title><rect x="89.3736%" y="293" width="0.0124%" height="15" fill="rgb(220,215,30)"/><text x="89.6236%" y="303.50"></text></g><g><title>arena_sdalloc (2 samples, 0.01%)</title><rect x="89.3736%" y="277" width="0.0124%" height="15" fill="rgb(228,81,51)"/><text x="89.6236%" y="287.50"></text></g><g><title>tcache_dalloc_small (2 samples, 0.01%)</title><rect x="89.3736%" y="261" width="0.0124%" height="15" fill="rgb(247,71,54)"/><text x="89.6236%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.03%)</title><rect x="89.4047%" y="325" width="0.0311%" height="15" fill="rgb(234,176,34)"/><text x="89.6547%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Expr]&gt; (5 samples, 0.03%)</title><rect x="89.4047%" y="309" width="0.0311%" height="15" fill="rgb(241,103,54)"/><text x="89.6547%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Expr&gt; (5 samples, 0.03%)</title><rect x="89.4047%" y="293" width="0.0311%" height="15" fill="rgb(228,22,34)"/><text x="89.6547%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::expr::ExprInstance&gt;&gt; (5 samples, 0.03%)</title><rect x="89.4047%" y="277" width="0.0311%" height="15" fill="rgb(241,179,48)"/><text x="89.6547%" y="287.50"></text></g><g><title>inallocx (2 samples, 0.01%)</title><rect x="89.4544%" y="245" width="0.0124%" height="15" fill="rgb(235,167,37)"/><text x="89.7044%" y="255.50"></text></g><g><title>arena_dalloc_bin_slab (2 samples, 0.01%)</title><rect x="89.5165%" y="133" width="0.0124%" height="15" fill="rgb(213,109,30)"/><text x="89.7665%" y="143.50"></text></g><g><title>arena_slab_dalloc (2 samples, 0.01%)</title><rect x="89.5165%" y="117" width="0.0124%" height="15" fill="rgb(222,172,16)"/><text x="89.7665%" y="127.50"></text></g><g><title>_rjem_je_arena_extents_dirty_dalloc (2 samples, 0.01%)</title><rect x="89.5165%" y="101" width="0.0124%" height="15" fill="rgb(233,192,5)"/><text x="89.7665%" y="111.50"></text></g><g><title>extent_record (2 samples, 0.01%)</title><rect x="89.5165%" y="85" width="0.0124%" height="15" fill="rgb(247,189,41)"/><text x="89.7665%" y="95.50"></text></g><g><title>bitmap_unset (3 samples, 0.02%)</title><rect x="89.5290%" y="117" width="0.0186%" height="15" fill="rgb(218,134,47)"/><text x="89.7790%" y="127.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (10 samples, 0.06%)</title><rect x="89.4917%" y="165" width="0.0621%" height="15" fill="rgb(216,29,3)"/><text x="89.7417%" y="175.50"></text></g><g><title>arena_dalloc_bin_locked_impl (8 samples, 0.05%)</title><rect x="89.5041%" y="149" width="0.0497%" height="15" fill="rgb(246,140,12)"/><text x="89.7541%" y="159.50"></text></g><g><title>arena_slab_reg_dalloc (4 samples, 0.02%)</title><rect x="89.5290%" y="133" width="0.0249%" height="15" fill="rgb(230,136,11)"/><text x="89.7790%" y="143.50"></text></g><g><title>rtree_leaf_elm_bits_extent_get (2 samples, 0.01%)</title><rect x="89.5662%" y="117" width="0.0124%" height="15" fill="rgb(247,22,47)"/><text x="89.8162%" y="127.50"></text></g><g><title>iealloc (3 samples, 0.02%)</title><rect x="89.5662%" y="165" width="0.0186%" height="15" fill="rgb(218,84,22)"/><text x="89.8162%" y="175.50"></text></g><g><title>rtree_extent_read (3 samples, 0.02%)</title><rect x="89.5662%" y="149" width="0.0186%" height="15" fill="rgb(216,87,39)"/><text x="89.8162%" y="159.50"></text></g><g><title>rtree_leaf_elm_extent_read (3 samples, 0.02%)</title><rect x="89.5662%" y="133" width="0.0186%" height="15" fill="rgb(221,178,8)"/><text x="89.8162%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (32 samples, 0.20%)</title><rect x="89.4047%" y="341" width="0.1989%" height="15" fill="rgb(230,42,11)"/><text x="89.6547%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (27 samples, 0.17%)</title><rect x="89.4357%" y="325" width="0.1678%" height="15" fill="rgb(237,229,4)"/><text x="89.6857%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.17%)</title><rect x="89.4357%" y="309" width="0.1678%" height="15" fill="rgb(222,31,33)"/><text x="89.6857%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (27 samples, 0.17%)</title><rect x="89.4357%" y="293" width="0.1678%" height="15" fill="rgb(210,17,39)"/><text x="89.6857%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (27 samples, 0.17%)</title><rect x="89.4357%" y="277" width="0.1678%" height="15" fill="rgb(244,93,20)"/><text x="89.6857%" y="287.50"></text></g><g><title>_rjem_sdallocx (25 samples, 0.16%)</title><rect x="89.4482%" y="261" width="0.1554%" height="15" fill="rgb(210,40,47)"/><text x="89.6982%" y="271.50"></text></g><g><title>isfree (22 samples, 0.14%)</title><rect x="89.4668%" y="245" width="0.1367%" height="15" fill="rgb(239,211,47)"/><text x="89.7168%" y="255.50"></text></g><g><title>isdalloct (22 samples, 0.14%)</title><rect x="89.4668%" y="229" width="0.1367%" height="15" fill="rgb(251,223,49)"/><text x="89.7168%" y="239.50"></text></g><g><title>arena_sdalloc (22 samples, 0.14%)</title><rect x="89.4668%" y="213" width="0.1367%" height="15" fill="rgb(221,149,5)"/><text x="89.7168%" y="223.50"></text></g><g><title>tcache_dalloc_small (22 samples, 0.14%)</title><rect x="89.4668%" y="197" width="0.1367%" height="15" fill="rgb(219,224,51)"/><text x="89.7168%" y="207.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (19 samples, 0.12%)</title><rect x="89.4855%" y="181" width="0.1181%" height="15" fill="rgb(223,7,8)"/><text x="89.7355%" y="191.50"></text></g><g><title>malloc_mutex_lock (3 samples, 0.02%)</title><rect x="89.5849%" y="165" width="0.0186%" height="15" fill="rgb(241,217,22)"/><text x="89.8349%" y="175.50"></text></g><g><title>malloc_mutex_trylock_final (3 samples, 0.02%)</title><rect x="89.5849%" y="149" width="0.0186%" height="15" fill="rgb(248,209,0)"/><text x="89.8349%" y="159.50"></text></g><g><title>__GI___pthread_mutex_trylock (3 samples, 0.02%)</title><rect x="89.5849%" y="133" width="0.0186%" height="15" fill="rgb(217,205,4)"/><text x="89.8349%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;rho_runtime::interpreter::reduce::environment::Env&gt; (36 samples, 0.22%)</title><rect x="89.3860%" y="421" width="0.2237%" height="15" fill="rgb(228,124,39)"/><text x="89.6360%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[model::rho_types::Par: 6]&gt;&gt; (36 samples, 0.22%)</title><rect x="89.3860%" y="405" width="0.2237%" height="15" fill="rgb(250,116,42)"/><text x="89.6360%" y="415.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.22%)</title><rect x="89.3860%" y="389" width="0.2237%" height="15" fill="rgb(223,202,9)"/><text x="89.6360%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Par]&gt; (36 samples, 0.22%)</title><rect x="89.3860%" y="373" width="0.2237%" height="15" fill="rgb(242,222,40)"/><text x="89.6360%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (34 samples, 0.21%)</title><rect x="89.3985%" y="357" width="0.2113%" height="15" fill="rgb(229,99,46)"/><text x="89.6485%" y="367.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (3 samples, 0.02%)</title><rect x="89.6967%" y="405" width="0.0186%" height="15" fill="rgb(225,56,46)"/><text x="89.9467%" y="415.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.02%)</title><rect x="89.7154%" y="405" width="0.0186%" height="15" fill="rgb(227,94,5)"/><text x="89.9654%" y="415.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (2 samples, 0.01%)</title><rect x="89.7340%" y="309" width="0.0124%" height="15" fill="rgb(205,112,38)"/><text x="89.9840%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.02%)</title><rect x="89.7465%" y="309" width="0.0249%" height="15" fill="rgb(231,133,46)"/><text x="89.9965%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.05%)</title><rect x="89.7340%" y="373" width="0.0497%" height="15" fill="rgb(217,16,9)"/><text x="89.9840%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.05%)</title><rect x="89.7340%" y="357" width="0.0497%" height="15" fill="rgb(249,173,9)"/><text x="89.9840%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (8 samples, 0.05%)</title><rect x="89.7340%" y="341" width="0.0497%" height="15" fill="rgb(205,163,53)"/><text x="89.9840%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.05%)</title><rect x="89.7340%" y="325" width="0.0497%" height="15" fill="rgb(217,54,41)"/><text x="89.9840%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="89.7837%" y="373" width="0.0186%" height="15" fill="rgb(228,216,12)"/><text x="90.0337%" y="383.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.02%)</title><rect x="89.7837%" y="357" width="0.0186%" height="15" fill="rgb(244,228,15)"/><text x="90.0337%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (12 samples, 0.07%)</title><rect x="89.7340%" y="405" width="0.0746%" height="15" fill="rgb(221,176,53)"/><text x="89.9840%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (12 samples, 0.07%)</title><rect x="89.7340%" y="389" width="0.0746%" height="15" fill="rgb(205,94,34)"/><text x="89.9840%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::join::JoinHandle&lt;()&gt;&gt; (6 samples, 0.04%)</title><rect x="89.8210%" y="389" width="0.0373%" height="15" fill="rgb(213,110,48)"/><text x="90.0710%" y="399.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.04%)</title><rect x="89.8210%" y="373" width="0.0373%" height="15" fill="rgb(236,142,28)"/><text x="90.0710%" y="383.50"></text></g><g><title>tokio::runtime::task::state::State::drop_join_handle_fast (6 samples, 0.04%)</title><rect x="89.8210%" y="357" width="0.0373%" height="15" fill="rgb(225,135,29)"/><text x="90.0710%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (6 samples, 0.04%)</title><rect x="89.8210%" y="341" width="0.0373%" height="15" fill="rgb(252,45,31)"/><text x="90.0710%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (6 samples, 0.04%)</title><rect x="89.8210%" y="325" width="0.0373%" height="15" fill="rgb(211,187,50)"/><text x="90.0710%" y="335.50"></text></g><g><title>rho_runtime::interpreter::AsynWaitGroup::acquire (5 samples, 0.03%)</title><rect x="89.8583%" y="389" width="0.0311%" height="15" fill="rgb(229,109,7)"/><text x="90.1083%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicI32::fetch_add (5 samples, 0.03%)</title><rect x="89.8583%" y="373" width="0.0311%" height="15" fill="rgb(251,131,51)"/><text x="90.1083%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_add (5 samples, 0.03%)</title><rect x="89.8583%" y="357" width="0.0311%" height="15" fill="rgb(251,180,35)"/><text x="90.1083%" y="367.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="89.8894%" y="373" width="0.0124%" height="15" fill="rgb(211,46,32)"/><text x="90.1394%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8 samples, 0.05%)</title><rect x="89.9080%" y="309" width="0.0497%" height="15" fill="rgb(248,123,17)"/><text x="90.1580%" y="319.50"></text></g><g><title>tokio::runtime::context::spawn_handle::{{closure}}::{{closure}} (8 samples, 0.05%)</title><rect x="89.9080%" y="293" width="0.0497%" height="15" fill="rgb(227,141,18)"/><text x="90.1580%" y="303.50"></text></g><g><title>&lt;tokio::runtime::spawner::Spawner as core::clone::Clone&gt;::clone (8 samples, 0.05%)</title><rect x="89.9080%" y="277" width="0.0497%" height="15" fill="rgb(216,102,9)"/><text x="90.1580%" y="287.50"></text></g><g><title>tokio::runtime::context::spawn_handle (10 samples, 0.06%)</title><rect x="89.9018%" y="373" width="0.0621%" height="15" fill="rgb(253,47,13)"/><text x="90.1518%" y="383.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (10 samples, 0.06%)</title><rect x="89.9018%" y="357" width="0.0621%" height="15" fill="rgb(226,93,23)"/><text x="90.1518%" y="367.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10 samples, 0.06%)</title><rect x="89.9018%" y="341" width="0.0621%" height="15" fill="rgb(247,104,17)"/><text x="90.1518%" y="351.50"></text></g><g><title>tokio::runtime::context::spawn_handle::{{closure}} (10 samples, 0.06%)</title><rect x="89.9018%" y="325" width="0.0621%" height="15" fill="rgb(233,203,26)"/><text x="90.1518%" y="335.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.02%)</title><rect x="89.9702%" y="309" width="0.0249%" height="15" fill="rgb(244,98,49)"/><text x="90.2202%" y="319.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="89.9950%" y="293" width="0.0124%" height="15" fill="rgb(235,134,22)"/><text x="90.2450%" y="303.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.02%)</title><rect x="90.0075%" y="277" width="0.0186%" height="15" fill="rgb(221,70,32)"/><text x="90.2575%" y="287.50"></text></g><g><title>tokio::runtime::task::joinable (11 samples, 0.07%)</title><rect x="89.9702%" y="341" width="0.0684%" height="15" fill="rgb(238,15,50)"/><text x="90.2202%" y="351.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (11 samples, 0.07%)</title><rect x="89.9702%" y="325" width="0.0684%" height="15" fill="rgb(215,221,48)"/><text x="90.2202%" y="335.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (7 samples, 0.04%)</title><rect x="89.9950%" y="309" width="0.0435%" height="15" fill="rgb(236,73,3)"/><text x="90.2450%" y="319.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (5 samples, 0.03%)</title><rect x="90.0075%" y="293" width="0.0311%" height="15" fill="rgb(250,107,11)"/><text x="90.2575%" y="303.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.01%)</title><rect x="90.0261%" y="277" width="0.0124%" height="15" fill="rgb(242,39,14)"/><text x="90.2761%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.01%)</title><rect x="90.0261%" y="261" width="0.0124%" height="15" fill="rgb(248,164,37)"/><text x="90.2761%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.01%)</title><rect x="90.0261%" y="245" width="0.0124%" height="15" fill="rgb(217,60,12)"/><text x="90.2761%" y="255.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.01%)</title><rect x="90.0261%" y="229" width="0.0124%" height="15" fill="rgb(240,125,29)"/><text x="90.2761%" y="239.50"></text></g><g><title>_rjem_mallocx (2 samples, 0.01%)</title><rect x="90.0261%" y="213" width="0.0124%" height="15" fill="rgb(208,207,28)"/><text x="90.2761%" y="223.50"></text></g><g><title>imalloc (2 samples, 0.01%)</title><rect x="90.0261%" y="197" width="0.0124%" height="15" fill="rgb(209,159,27)"/><text x="90.2761%" y="207.50"></text></g><g><title>imalloc_body (2 samples, 0.01%)</title><rect x="90.0261%" y="181" width="0.0124%" height="15" fill="rgb(251,176,53)"/><text x="90.2761%" y="191.50"></text></g><g><title>imalloc_no_sample (2 samples, 0.01%)</title><rect x="90.0261%" y="165" width="0.0124%" height="15" fill="rgb(211,85,7)"/><text x="90.2761%" y="175.50"></text></g><g><title>iallocztm (2 samples, 0.01%)</title><rect x="90.0261%" y="149" width="0.0124%" height="15" fill="rgb(216,64,54)"/><text x="90.2761%" y="159.50"></text></g><g><title>arena_malloc (2 samples, 0.01%)</title><rect x="90.0261%" y="133" width="0.0124%" height="15" fill="rgb(217,54,24)"/><text x="90.2761%" y="143.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.01%)</title><rect x="90.0261%" y="117" width="0.0124%" height="15" fill="rgb(208,206,53)"/><text x="90.2761%" y="127.50"></text></g><g><title>cache_bin_alloc_easy (2 samples, 0.01%)</title><rect x="90.0261%" y="101" width="0.0124%" height="15" fill="rgb(251,74,39)"/><text x="90.2761%" y="111.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::produce (45 samples, 0.28%)</title><rect x="89.8148%" y="405" width="0.2796%" height="15" fill="rgb(226,47,5)"/><text x="90.0648%" y="415.50"></text></g><g><title>tokio::task::spawn::spawn (33 samples, 0.21%)</title><rect x="89.8894%" y="389" width="0.2051%" height="15" fill="rgb(234,111,33)"/><text x="90.1394%" y="399.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (21 samples, 0.13%)</title><rect x="89.9640%" y="373" width="0.1305%" height="15" fill="rgb(251,14,10)"/><text x="90.2140%" y="383.50"></text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (21 samples, 0.13%)</title><rect x="89.9640%" y="357" width="0.1305%" height="15" fill="rgb(232,43,0)"/><text x="90.2140%" y="367.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (9 samples, 0.06%)</title><rect x="90.0385%" y="341" width="0.0559%" height="15" fill="rgb(222,68,43)"/><text x="90.2885%" y="351.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (9 samples, 0.06%)</title><rect x="90.0385%" y="325" width="0.0559%" height="15" fill="rgb(217,24,23)"/><text x="90.2885%" y="335.50"></text></g><g><title>model::ordering::sort_par::&lt;impl model::ordering::Sortable for model::rho_types::Par&gt;::sort (3 samples, 0.02%)</title><rect x="90.1007%" y="389" width="0.0186%" height="15" fill="rgb(229,209,14)"/><text x="90.3507%" y="399.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="90.1069%" y="373" width="0.0124%" height="15" fill="rgb(250,149,48)"/><text x="90.3569%" y="383.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (4 samples, 0.02%)</title><rect x="90.1380%" y="373" width="0.0249%" height="15" fill="rgb(210,120,37)"/><text x="90.3880%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (4 samples, 0.02%)</title><rect x="90.1380%" y="357" width="0.0249%" height="15" fill="rgb(210,21,8)"/><text x="90.3880%" y="367.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="90.1628%" y="373" width="0.0186%" height="15" fill="rgb(243,145,7)"/><text x="90.4128%" y="383.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (613 samples, 3.81%)</title><rect x="86.3783%" y="453" width="3.8093%" height="15" fill="rgb(238,178,32)"/><text x="86.6283%" y="463.50">&lt;cor..</text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation::{{closure}} (137 samples, 0.85%)</title><rect x="89.3363%" y="437" width="0.8514%" height="15" fill="rgb(222,4,10)"/><text x="89.5863%" y="447.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_send::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Send&gt;::evaluate (92 samples, 0.57%)</title><rect x="89.6160%" y="421" width="0.5717%" height="15" fill="rgb(239,7,37)"/><text x="89.8660%" y="431.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute (15 samples, 0.09%)</title><rect x="90.0945%" y="405" width="0.0932%" height="15" fill="rgb(215,31,37)"/><text x="90.3445%" y="415.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute_no_sort (11 samples, 0.07%)</title><rect x="90.1193%" y="389" width="0.0684%" height="15" fill="rgb(224,83,33)"/><text x="90.3693%" y="399.50"></text></g><g><title>std::panic::catch_unwind (635 samples, 3.95%)</title><rect x="86.3100%" y="549" width="3.9461%" height="15" fill="rgb(239,55,3)"/><text x="86.5600%" y="559.50">std:..</text></g><g><title>std::panicking::try (635 samples, 3.95%)</title><rect x="86.3100%" y="533" width="3.9461%" height="15" fill="rgb(247,92,11)"/><text x="86.5600%" y="543.50">std:..</text></g><g><title>std::panicking::try::do_call (635 samples, 3.95%)</title><rect x="86.3100%" y="517" width="3.9461%" height="15" fill="rgb(239,200,7)"/><text x="86.5600%" y="527.50">std:..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (635 samples, 3.95%)</title><rect x="86.3100%" y="501" width="3.9461%" height="15" fill="rgb(227,115,8)"/><text x="86.5600%" y="511.50">&lt;std..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (635 samples, 3.95%)</title><rect x="86.3100%" y="485" width="3.9461%" height="15" fill="rgb(215,189,27)"/><text x="86.5600%" y="495.50">toki..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (635 samples, 3.95%)</title><rect x="86.3100%" y="469" width="3.9461%" height="15" fill="rgb(251,216,39)"/><text x="86.5600%" y="479.50">toki..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::drop_future_or_output (11 samples, 0.07%)</title><rect x="90.1877%" y="453" width="0.0684%" height="15" fill="rgb(207,29,47)"/><text x="90.4377%" y="463.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::set_stage (11 samples, 0.07%)</title><rect x="90.1877%" y="437" width="0.0684%" height="15" fill="rgb(210,71,34)"/><text x="90.4377%" y="447.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (11 samples, 0.07%)</title><rect x="90.1877%" y="421" width="0.0684%" height="15" fill="rgb(253,217,51)"/><text x="90.4377%" y="431.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::set_stage::{{closure}} (11 samples, 0.07%)</title><rect x="90.1877%" y="405" width="0.0684%" height="15" fill="rgb(222,117,46)"/><text x="90.4377%" y="415.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.06%)</title><rect x="90.1939%" y="389" width="0.0621%" height="15" fill="rgb(226,132,6)"/><text x="90.4439%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (6 samples, 0.04%)</title><rect x="90.2685%" y="517" width="0.0373%" height="15" fill="rgb(254,145,51)"/><text x="90.5185%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.04%)</title><rect x="90.2685%" y="501" width="0.0373%" height="15" fill="rgb(231,199,27)"/><text x="90.5185%" y="511.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (901 samples, 5.60%)</title><rect x="84.7253%" y="597" width="5.5991%" height="15" fill="rgb(245,158,14)"/><text x="84.9753%" y="607.50">tokio::..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (722 samples, 4.49%)</title><rect x="85.8377%" y="581" width="4.4867%" height="15" fill="rgb(240,113,14)"/><text x="86.0877%" y="591.50">tokio..</text></g><g><title>tokio::runtime::task::harness::poll_future (676 samples, 4.20%)</title><rect x="86.1235%" y="565" width="4.2008%" height="15" fill="rgb(210,20,13)"/><text x="86.3735%" y="575.50">tokio..</text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (10 samples, 0.06%)</title><rect x="90.2622%" y="549" width="0.0621%" height="15" fill="rgb(241,144,13)"/><text x="90.5122%" y="559.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update (10 samples, 0.06%)</title><rect x="90.2622%" y="533" width="0.0621%" height="15" fill="rgb(235,43,34)"/><text x="90.5122%" y="543.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle::{{closure}} (2 samples, 0.01%)</title><rect x="90.3120%" y="517" width="0.0124%" height="15" fill="rgb(208,36,20)"/><text x="90.5620%" y="527.50"></text></g><g><title>tokio::coop::budget (951 samples, 5.91%)</title><rect x="84.4457%" y="725" width="5.9098%" height="15" fill="rgb(239,204,10)"/><text x="84.6957%" y="735.50">tokio::c..</text></g><g><title>tokio::coop::with_budget (951 samples, 5.91%)</title><rect x="84.4457%" y="709" width="5.9098%" height="15" fill="rgb(217,84,43)"/><text x="84.6957%" y="719.50">tokio::c..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (945 samples, 5.87%)</title><rect x="84.4830%" y="693" width="5.8725%" height="15" fill="rgb(241,170,50)"/><text x="84.7330%" y="703.50">std::th..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (939 samples, 5.84%)</title><rect x="84.5203%" y="677" width="5.8352%" height="15" fill="rgb(226,205,29)"/><text x="84.7703%" y="687.50">std::th..</text></g><g><title>tokio::coop::with_budget::{{closure}} (937 samples, 5.82%)</title><rect x="84.5327%" y="661" width="5.8228%" height="15" fill="rgb(233,113,1)"/><text x="84.7827%" y="671.50">tokio::..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (933 samples, 5.80%)</title><rect x="84.5575%" y="645" width="5.7979%" height="15" fill="rgb(253,98,13)"/><text x="84.8075%" y="655.50">tokio::..</text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (913 samples, 5.67%)</title><rect x="84.6818%" y="629" width="5.6736%" height="15" fill="rgb(211,115,12)"/><text x="84.9318%" y="639.50">tokio::..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (913 samples, 5.67%)</title><rect x="84.6818%" y="613" width="5.6736%" height="15" fill="rgb(208,12,16)"/><text x="84.9318%" y="623.50">tokio::..</text></g><g><title>tokio::runtime::task::raw::poll (5 samples, 0.03%)</title><rect x="90.3244%" y="597" width="0.0311%" height="15" fill="rgb(237,193,54)"/><text x="90.5744%" y="607.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::transition_worker_from_searching (7 samples, 0.04%)</title><rect x="90.3555%" y="693" width="0.0435%" height="15" fill="rgb(243,22,42)"/><text x="90.6055%" y="703.50"></text></g><g><title>tokio::runtime::thread_pool::idle::State::dec_num_searching (7 samples, 0.04%)</title><rect x="90.3555%" y="677" width="0.0435%" height="15" fill="rgb(233,151,36)"/><text x="90.6055%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (7 samples, 0.04%)</title><rect x="90.3555%" y="661" width="0.0435%" height="15" fill="rgb(237,57,45)"/><text x="90.6055%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_sub (7 samples, 0.04%)</title><rect x="90.3555%" y="645" width="0.0435%" height="15" fill="rgb(221,88,17)"/><text x="90.6055%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (16 samples, 0.10%)</title><rect x="90.4549%" y="645" width="0.0994%" height="15" fill="rgb(230,79,15)"/><text x="90.7049%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_swap (16 samples, 0.10%)</title><rect x="90.4549%" y="629" width="0.0994%" height="15" fill="rgb(213,57,13)"/><text x="90.7049%" y="639.50"></text></g><g><title>core::mem::drop (6 samples, 0.04%)</title><rect x="90.5543%" y="629" width="0.0373%" height="15" fill="rgb(222,116,39)"/><text x="90.8043%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,()&gt;&gt; (6 samples, 0.04%)</title><rect x="90.5543%" y="613" width="0.0373%" height="15" fill="rgb(245,107,2)"/><text x="90.8043%" y="623.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.04%)</title><rect x="90.5543%" y="597" width="0.0373%" height="15" fill="rgb(238,1,10)"/><text x="90.8043%" y="607.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (6 samples, 0.04%)</title><rect x="90.5543%" y="581" width="0.0373%" height="15" fill="rgb(249,4,48)"/><text x="90.8043%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (6 samples, 0.04%)</title><rect x="90.5543%" y="565" width="0.0373%" height="15" fill="rgb(223,151,18)"/><text x="90.8043%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.04%)</title><rect x="90.5543%" y="549" width="0.0373%" height="15" fill="rgb(227,65,43)"/><text x="90.8043%" y="559.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (36 samples, 0.22%)</title><rect x="90.3990%" y="677" width="0.2237%" height="15" fill="rgb(218,40,45)"/><text x="90.6490%" y="687.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (35 samples, 0.22%)</title><rect x="90.4052%" y="661" width="0.2175%" height="15" fill="rgb(252,121,31)"/><text x="90.6552%" y="671.50"></text></g><g><title>tokio::runtime::park::Inner::unpark_condvar (11 samples, 0.07%)</title><rect x="90.5543%" y="645" width="0.0684%" height="15" fill="rgb(219,158,43)"/><text x="90.8043%" y="655.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (4 samples, 0.02%)</title><rect x="90.5978%" y="629" width="0.0249%" height="15" fill="rgb(231,162,42)"/><text x="90.8478%" y="639.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (4 samples, 0.02%)</title><rect x="90.5978%" y="613" width="0.0249%" height="15" fill="rgb(217,179,25)"/><text x="90.8478%" y="623.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (4 samples, 0.02%)</title><rect x="90.5978%" y="597" width="0.0249%" height="15" fill="rgb(206,212,31)"/><text x="90.8478%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (4 samples, 0.02%)</title><rect x="90.5978%" y="581" width="0.0249%" height="15" fill="rgb(235,144,12)"/><text x="90.8478%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (4 samples, 0.02%)</title><rect x="90.5978%" y="565" width="0.0249%" height="15" fill="rgb(213,51,10)"/><text x="90.8478%" y="575.50"></text></g><g><title>std::time::Instant::now (5 samples, 0.03%)</title><rect x="90.6662%" y="629" width="0.0311%" height="15" fill="rgb(231,145,14)"/><text x="90.9162%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (5 samples, 0.03%)</title><rect x="90.6662%" y="613" width="0.0311%" height="15" fill="rgb(235,15,28)"/><text x="90.9162%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::now (5 samples, 0.03%)</title><rect x="90.6662%" y="597" width="0.0311%" height="15" fill="rgb(237,206,10)"/><text x="90.9162%" y="607.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (5 samples, 0.03%)</title><rect x="90.6662%" y="581" width="0.0311%" height="15" fill="rgb(236,227,27)"/><text x="90.9162%" y="591.50"></text></g><g><title>parking_lot_core::parking_lot::park (5 samples, 0.03%)</title><rect x="90.6662%" y="565" width="0.0311%" height="15" fill="rgb(246,83,35)"/><text x="90.9162%" y="575.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (5 samples, 0.03%)</title><rect x="90.6662%" y="549" width="0.0311%" height="15" fill="rgb(220,136,24)"/><text x="90.9162%" y="559.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (5 samples, 0.03%)</title><rect x="90.6662%" y="533" width="0.0311%" height="15" fill="rgb(217,3,25)"/><text x="90.9162%" y="543.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (5 samples, 0.03%)</title><rect x="90.6662%" y="517" width="0.0311%" height="15" fill="rgb(239,24,14)"/><text x="90.9162%" y="527.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (5 samples, 0.03%)</title><rect x="90.6662%" y="501" width="0.0311%" height="15" fill="rgb(244,16,53)"/><text x="90.9162%" y="511.50"></text></g><g><title>syscall (5 samples, 0.03%)</title><rect x="90.6662%" y="485" width="0.0311%" height="15" fill="rgb(208,175,44)"/><text x="90.9162%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="90.6662%" y="469" width="0.0311%" height="15" fill="rgb(252,18,48)"/><text x="90.9162%" y="479.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (1,073 samples, 6.67%)</title><rect x="90.6413%" y="645" width="6.6679%" height="15" fill="rgb(234,199,32)"/><text x="90.8913%" y="655.50">&lt;parking_..</text></g><g><title>syscall (1,064 samples, 6.61%)</title><rect x="90.6972%" y="629" width="6.6120%" height="15" fill="rgb(225,77,54)"/><text x="90.9472%" y="639.50">syscall</text></g><g><title>[unknown] (1,050 samples, 6.52%)</title><rect x="90.7842%" y="613" width="6.5250%" height="15" fill="rgb(225,42,25)"/><text x="91.0342%" y="623.50">[unknown]</text></g><g><title>[unknown] (1,029 samples, 6.39%)</title><rect x="90.9147%" y="597" width="6.3945%" height="15" fill="rgb(242,227,46)"/><text x="91.1647%" y="607.50">[unknown]</text></g><g><title>[unknown] (1,020 samples, 6.34%)</title><rect x="90.9707%" y="581" width="6.3386%" height="15" fill="rgb(246,197,35)"/><text x="91.2207%" y="591.50">[unknown]</text></g><g><title>[unknown] (1,018 samples, 6.33%)</title><rect x="90.9831%" y="565" width="6.3261%" height="15" fill="rgb(215,159,26)"/><text x="91.2331%" y="575.50">[unknown]</text></g><g><title>[unknown] (1,006 samples, 6.25%)</title><rect x="91.0577%" y="549" width="6.2516%" height="15" fill="rgb(212,194,50)"/><text x="91.3077%" y="559.50">[unknown]</text></g><g><title>[unknown] (870 samples, 5.41%)</title><rect x="91.9028%" y="533" width="5.4064%" height="15" fill="rgb(246,132,1)"/><text x="92.1528%" y="543.50">[unknow..</text></g><g><title>[unknown] (812 samples, 5.05%)</title><rect x="92.2632%" y="517" width="5.0460%" height="15" fill="rgb(217,71,7)"/><text x="92.5132%" y="527.50">[unkno..</text></g><g><title>[unknown] (738 samples, 4.59%)</title><rect x="92.7231%" y="501" width="4.5861%" height="15" fill="rgb(252,59,32)"/><text x="92.9731%" y="511.50">[unkn..</text></g><g><title>[unknown] (556 samples, 3.46%)</title><rect x="93.8541%" y="485" width="3.4551%" height="15" fill="rgb(253,204,25)"/><text x="94.1041%" y="495.50">[un..</text></g><g><title>[unknown] (419 samples, 2.60%)</title><rect x="94.7054%" y="469" width="2.6038%" height="15" fill="rgb(232,21,16)"/><text x="94.9554%" y="479.50">[u..</text></g><g><title>[unknown] (203 samples, 1.26%)</title><rect x="96.0477%" y="453" width="1.2615%" height="15" fill="rgb(248,90,29)"/><text x="96.2977%" y="463.50"></text></g><g><title>[unknown] (73 samples, 0.45%)</title><rect x="96.8556%" y="437" width="0.4536%" height="15" fill="rgb(249,223,7)"/><text x="97.1056%" y="447.50"></text></g><g><title>[unknown] (18 samples, 0.11%)</title><rect x="97.1974%" y="421" width="0.1119%" height="15" fill="rgb(231,119,42)"/><text x="97.4474%" y="431.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="97.2968%" y="405" width="0.0124%" height="15" fill="rgb(215,41,35)"/><text x="97.5468%" y="415.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="97.2968%" y="389" width="0.0124%" height="15" fill="rgb(220,44,45)"/><text x="97.5468%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="97.2968%" y="373" width="0.0124%" height="15" fill="rgb(253,197,36)"/><text x="97.5468%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="97.2968%" y="357" width="0.0124%" height="15" fill="rgb(245,225,54)"/><text x="97.5468%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (34 samples, 0.21%)</title><rect x="97.3217%" y="645" width="0.2113%" height="15" fill="rgb(239,94,37)"/><text x="97.5717%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_load (34 samples, 0.21%)</title><rect x="97.3217%" y="629" width="0.2113%" height="15" fill="rgb(242,217,10)"/><text x="97.5717%" y="639.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (15 samples, 0.09%)</title><rect x="97.5329%" y="645" width="0.0932%" height="15" fill="rgb(250,193,7)"/><text x="97.7829%" y="655.50"></text></g><g><title>std::time::Instant::now (14 samples, 0.09%)</title><rect x="97.5391%" y="629" width="0.0870%" height="15" fill="rgb(230,104,19)"/><text x="97.7891%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (14 samples, 0.09%)</title><rect x="97.5391%" y="613" width="0.0870%" height="15" fill="rgb(230,181,4)"/><text x="97.7891%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::now (14 samples, 0.09%)</title><rect x="97.5391%" y="597" width="0.0870%" height="15" fill="rgb(216,219,49)"/><text x="97.7891%" y="607.50"></text></g><g><title>__clock_gettime (12 samples, 0.07%)</title><rect x="97.5516%" y="581" width="0.0746%" height="15" fill="rgb(254,144,0)"/><text x="97.8016%" y="591.50"></text></g><g><title>__vdso_clock_gettime (11 samples, 0.07%)</title><rect x="97.5578%" y="565" width="0.0684%" height="15" fill="rgb(205,209,38)"/><text x="97.8078%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (30 samples, 0.19%)</title><rect x="97.6510%" y="613" width="0.1864%" height="15" fill="rgb(240,21,42)"/><text x="97.9010%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (30 samples, 0.19%)</title><rect x="97.6510%" y="597" width="0.1864%" height="15" fill="rgb(241,132,3)"/><text x="97.9010%" y="607.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (2 samples, 0.01%)</title><rect x="97.8436%" y="597" width="0.0124%" height="15" fill="rgb(225,14,2)"/><text x="98.0936%" y="607.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (2 samples, 0.01%)</title><rect x="97.8436%" y="581" width="0.0124%" height="15" fill="rgb(210,141,35)"/><text x="98.0936%" y="591.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (2 samples, 0.01%)</title><rect x="97.8436%" y="565" width="0.0124%" height="15" fill="rgb(251,14,44)"/><text x="98.0936%" y="575.50"></text></g><g><title>core::hint::spin_loop (2 samples, 0.01%)</title><rect x="97.8436%" y="549" width="0.0124%" height="15" fill="rgb(247,48,18)"/><text x="98.0936%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (2 samples, 0.01%)</title><rect x="97.8436%" y="533" width="0.0124%" height="15" fill="rgb(225,0,40)"/><text x="98.0936%" y="543.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (38 samples, 0.24%)</title><rect x="97.6261%" y="645" width="0.2361%" height="15" fill="rgb(221,31,33)"/><text x="97.8761%" y="655.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (35 samples, 0.22%)</title><rect x="97.6448%" y="629" width="0.2175%" height="15" fill="rgb(237,42,40)"/><text x="97.8948%" y="639.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock_slow (4 samples, 0.02%)</title><rect x="97.8374%" y="613" width="0.0249%" height="15" fill="rgb(233,51,29)"/><text x="98.0874%" y="623.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (1,200 samples, 7.46%)</title><rect x="90.6227%" y="677" width="7.4571%" height="15" fill="rgb(226,58,20)"/><text x="90.8727%" y="687.50">parking_lo..</text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (1,200 samples, 7.46%)</title><rect x="90.6227%" y="661" width="7.4571%" height="15" fill="rgb(208,98,7)"/><text x="90.8727%" y="671.50">parking_lo..</text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (35 samples, 0.22%)</title><rect x="97.8623%" y="645" width="0.2175%" height="15" fill="rgb(228,143,44)"/><text x="98.1123%" y="655.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (35 samples, 0.22%)</title><rect x="97.8623%" y="629" width="0.2175%" height="15" fill="rgb(246,55,38)"/><text x="98.1123%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (35 samples, 0.22%)</title><rect x="97.8623%" y="613" width="0.2175%" height="15" fill="rgb(247,87,16)"/><text x="98.1123%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_sub (35 samples, 0.22%)</title><rect x="97.8623%" y="597" width="0.2175%" height="15" fill="rgb(234,129,42)"/><text x="98.1123%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;usize&gt;&gt;&gt; (16 samples, 0.10%)</title><rect x="98.0798%" y="661" width="0.0994%" height="15" fill="rgb(220,82,16)"/><text x="98.3298%" y="671.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.10%)</title><rect x="98.0798%" y="645" width="0.0994%" height="15" fill="rgb(211,88,4)"/><text x="98.3298%" y="655.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (16 samples, 0.10%)</title><rect x="98.0798%" y="629" width="0.0994%" height="15" fill="rgb(248,151,21)"/><text x="98.3298%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (16 samples, 0.10%)</title><rect x="98.0798%" y="613" width="0.0994%" height="15" fill="rgb(238,163,6)"/><text x="98.3298%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (16 samples, 0.10%)</title><rect x="98.0798%" y="597" width="0.0994%" height="15" fill="rgb(209,183,11)"/><text x="98.3298%" y="607.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (4 samples, 0.02%)</title><rect x="98.1792%" y="661" width="0.0249%" height="15" fill="rgb(219,37,20)"/><text x="98.4292%" y="671.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (4 samples, 0.02%)</title><rect x="98.1792%" y="645" width="0.0249%" height="15" fill="rgb(210,158,4)"/><text x="98.4292%" y="655.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (4 samples, 0.02%)</title><rect x="98.1792%" y="629" width="0.0249%" height="15" fill="rgb(221,167,53)"/><text x="98.4292%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (4 samples, 0.02%)</title><rect x="98.1792%" y="613" width="0.0249%" height="15" fill="rgb(237,151,45)"/><text x="98.4292%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (4 samples, 0.02%)</title><rect x="98.1792%" y="597" width="0.0249%" height="15" fill="rgb(231,39,3)"/><text x="98.4292%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (16 samples, 0.10%)</title><rect x="98.2103%" y="645" width="0.0994%" height="15" fill="rgb(212,167,28)"/><text x="98.4603%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_add (16 samples, 0.10%)</title><rect x="98.2103%" y="629" width="0.0994%" height="15" fill="rgb(232,178,8)"/><text x="98.4603%" y="639.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::notify_should_wakeup (18 samples, 0.11%)</title><rect x="98.2041%" y="661" width="0.1119%" height="15" fill="rgb(225,151,20)"/><text x="98.4541%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (2,246 samples, 13.96%)</title><rect x="84.4022%" y="741" width="13.9572%" height="15" fill="rgb(238,3,37)"/><text x="84.6522%" y="751.50">tokio::runtime::threa..</text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_from_searching (1,288 samples, 8.00%)</title><rect x="90.3555%" y="725" width="8.0040%" height="15" fill="rgb(251,147,42)"/><text x="90.6055%" y="735.50">tokio::runt..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::transition_worker_from_searching (1,288 samples, 8.00%)</title><rect x="90.3555%" y="709" width="8.0040%" height="15" fill="rgb(208,173,10)"/><text x="90.6055%" y="719.50">tokio::runt..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (1,281 samples, 7.96%)</title><rect x="90.3990%" y="693" width="7.9605%" height="15" fill="rgb(246,225,4)"/><text x="90.6490%" y="703.50">tokio::runt..</text></g><g><title>tokio::runtime::thread_pool::idle::Idle::worker_to_notify (45 samples, 0.28%)</title><rect x="98.0798%" y="677" width="0.2796%" height="15" fill="rgb(248,102,6)"/><text x="98.3298%" y="687.50"></text></g><g><title>tokio::runtime::thread_pool::idle::State::unpark_one (7 samples, 0.04%)</title><rect x="98.3159%" y="661" width="0.0435%" height="15" fill="rgb(232,6,21)"/><text x="98.5659%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (7 samples, 0.04%)</title><rect x="98.3159%" y="645" width="0.0435%" height="15" fill="rgb(221,179,22)"/><text x="98.5659%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_add (7 samples, 0.04%)</title><rect x="98.3159%" y="629" width="0.0435%" height="15" fill="rgb(252,50,20)"/><text x="98.5659%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::queue::Pointers&gt;&gt; (22 samples, 0.14%)</title><rect x="98.4340%" y="677" width="0.1367%" height="15" fill="rgb(222,56,38)"/><text x="98.6840%" y="687.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.14%)</title><rect x="98.4340%" y="661" width="0.1367%" height="15" fill="rgb(206,193,29)"/><text x="98.6840%" y="671.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (22 samples, 0.14%)</title><rect x="98.4340%" y="645" width="0.1367%" height="15" fill="rgb(239,192,45)"/><text x="98.6840%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (22 samples, 0.14%)</title><rect x="98.4340%" y="629" width="0.1367%" height="15" fill="rgb(254,18,36)"/><text x="98.6840%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (22 samples, 0.14%)</title><rect x="98.4340%" y="613" width="0.1367%" height="15" fill="rgb(221,127,11)"/><text x="98.6840%" y="623.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (4 samples, 0.02%)</title><rect x="98.5707%" y="677" width="0.0249%" height="15" fill="rgb(234,146,35)"/><text x="98.8207%" y="687.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (4 samples, 0.02%)</title><rect x="98.5707%" y="661" width="0.0249%" height="15" fill="rgb(254,201,37)"/><text x="98.8207%" y="671.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (4 samples, 0.02%)</title><rect x="98.5707%" y="645" width="0.0249%" height="15" fill="rgb(211,202,23)"/><text x="98.8207%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (3 samples, 0.02%)</title><rect x="98.5769%" y="629" width="0.0186%" height="15" fill="rgb(237,91,2)"/><text x="98.8269%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.02%)</title><rect x="98.5769%" y="613" width="0.0186%" height="15" fill="rgb(226,228,36)"/><text x="98.8269%" y="623.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::is_empty (18 samples, 0.11%)</title><rect x="98.5956%" y="677" width="0.1119%" height="15" fill="rgb(213,63,50)"/><text x="98.8456%" y="687.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::len (18 samples, 0.11%)</title><rect x="98.5956%" y="661" width="0.1119%" height="15" fill="rgb(235,194,19)"/><text x="98.8456%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (18 samples, 0.11%)</title><rect x="98.5956%" y="645" width="0.1119%" height="15" fill="rgb(207,204,18)"/><text x="98.8456%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_load (18 samples, 0.11%)</title><rect x="98.5956%" y="629" width="0.1119%" height="15" fill="rgb(248,8,7)"/><text x="98.8456%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (55 samples, 0.34%)</title><rect x="98.4154%" y="725" width="0.3418%" height="15" fill="rgb(223,145,47)"/><text x="98.6654%" y="735.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_task::{{closure}} (54 samples, 0.34%)</title><rect x="98.4216%" y="709" width="0.3356%" height="15" fill="rgb(228,84,11)"/><text x="98.6716%" y="719.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::pop (53 samples, 0.33%)</title><rect x="98.4278%" y="693" width="0.3294%" height="15" fill="rgb(218,76,45)"/><text x="98.6778%" y="703.50"></text></g><g><title>tokio::runtime::queue::get_next (8 samples, 0.05%)</title><rect x="98.7074%" y="677" width="0.0497%" height="15" fill="rgb(223,80,15)"/><text x="98.9574%" y="687.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (8 samples, 0.05%)</title><rect x="98.7074%" y="661" width="0.0497%" height="15" fill="rgb(219,218,33)"/><text x="98.9574%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (3 samples, 0.02%)</title><rect x="98.7758%" y="661" width="0.0186%" height="15" fill="rgb(208,51,11)"/><text x="99.0258%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (3 samples, 0.02%)</title><rect x="98.7758%" y="645" width="0.0186%" height="15" fill="rgb(229,165,39)"/><text x="99.0258%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (6 samples, 0.04%)</title><rect x="98.7944%" y="661" width="0.0373%" height="15" fill="rgb(241,100,24)"/><text x="99.0444%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.04%)</title><rect x="98.7944%" y="645" width="0.0373%" height="15" fill="rgb(228,14,23)"/><text x="99.0444%" y="655.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_task (78 samples, 0.48%)</title><rect x="98.3594%" y="741" width="0.4847%" height="15" fill="rgb(247,116,52)"/><text x="98.6094%" y="751.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_local_task (14 samples, 0.09%)</title><rect x="98.7571%" y="725" width="0.0870%" height="15" fill="rgb(216,149,33)"/><text x="99.0071%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (14 samples, 0.09%)</title><rect x="98.7571%" y="709" width="0.0870%" height="15" fill="rgb(238,142,29)"/><text x="99.0071%" y="719.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_local_task::{{closure}} (13 samples, 0.08%)</title><rect x="98.7634%" y="693" width="0.0808%" height="15" fill="rgb(224,83,40)"/><text x="99.0134%" y="703.50"></text></g><g><title>tokio::runtime::queue::Local&lt;T&gt;::pop (13 samples, 0.08%)</title><rect x="98.7634%" y="677" width="0.0808%" height="15" fill="rgb(234,165,11)"/><text x="99.0134%" y="687.50"></text></g><g><title>tokio::runtime::queue::unpack (2 samples, 0.01%)</title><rect x="98.8317%" y="661" width="0.0124%" height="15" fill="rgb(215,96,23)"/><text x="99.0817%" y="671.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.02%)</title><rect x="99.0057%" y="725" width="0.0249%" height="15" fill="rgb(233,179,26)"/><text x="99.2557%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (4 samples, 0.02%)</title><rect x="99.0057%" y="709" width="0.0249%" height="15" fill="rgb(225,129,33)"/><text x="99.2557%" y="719.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::pop (5 samples, 0.03%)</title><rect x="99.0306%" y="725" width="0.0311%" height="15" fill="rgb(237,49,13)"/><text x="99.2806%" y="735.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::is_empty (3 samples, 0.02%)</title><rect x="99.0430%" y="709" width="0.0186%" height="15" fill="rgb(211,3,31)"/><text x="99.2930%" y="719.50"></text></g><g><title>tokio::loom::std::atomic_u16::AtomicU16::unsync_load (4 samples, 0.02%)</title><rect x="99.1114%" y="709" width="0.0249%" height="15" fill="rgb(216,152,19)"/><text x="99.3614%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (10 samples, 0.06%)</title><rect x="99.2729%" y="693" width="0.0621%" height="15" fill="rgb(251,121,35)"/><text x="99.5229%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (10 samples, 0.06%)</title><rect x="99.2729%" y="677" width="0.0621%" height="15" fill="rgb(210,217,47)"/><text x="99.5229%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (30 samples, 0.19%)</title><rect x="99.3351%" y="693" width="0.1864%" height="15" fill="rgb(244,116,22)"/><text x="99.5851%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (30 samples, 0.19%)</title><rect x="99.3351%" y="677" width="0.1864%" height="15" fill="rgb(228,17,21)"/><text x="99.5851%" y="687.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (3 samples, 0.02%)</title><rect x="99.5215%" y="693" width="0.0186%" height="15" fill="rgb(240,149,34)"/><text x="99.7715%" y="703.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::steal_into2::{{closure}} (3 samples, 0.02%)</title><rect x="99.5215%" y="677" width="0.0186%" height="15" fill="rgb(208,125,47)"/><text x="99.7715%" y="687.50"></text></g><g><title>core::ptr::read (3 samples, 0.02%)</title><rect x="99.5215%" y="661" width="0.0186%" height="15" fill="rgb(249,186,39)"/><text x="99.7715%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.02%)</title><rect x="99.5215%" y="645" width="0.0186%" height="15" fill="rgb(240,220,33)"/><text x="99.7715%" y="655.50"></text></g><g><title>tokio::runtime::queue::pack (2 samples, 0.01%)</title><rect x="99.5401%" y="693" width="0.0124%" height="15" fill="rgb(243,110,23)"/><text x="99.7901%" y="703.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::steal_into (82 samples, 0.51%)</title><rect x="99.0616%" y="725" width="0.5096%" height="15" fill="rgb(219,163,46)"/><text x="99.3116%" y="735.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::steal_into2 (70 samples, 0.43%)</title><rect x="99.1362%" y="709" width="0.4350%" height="15" fill="rgb(216,126,30)"/><text x="99.3862%" y="719.50"></text></g><g><title>tokio::runtime::queue::unpack (3 samples, 0.02%)</title><rect x="99.5526%" y="693" width="0.0186%" height="15" fill="rgb(208,139,11)"/><text x="99.8026%" y="703.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::steal_work (148 samples, 0.92%)</title><rect x="98.8441%" y="741" width="0.9197%" height="15" fill="rgb(213,118,36)"/><text x="99.0941%" y="751.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_to_searching (31 samples, 0.19%)</title><rect x="99.5712%" y="725" width="0.1926%" height="15" fill="rgb(226,43,17)"/><text x="99.8212%" y="735.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::transition_worker_to_searching (31 samples, 0.19%)</title><rect x="99.5712%" y="709" width="0.1926%" height="15" fill="rgb(254,217,4)"/><text x="99.8212%" y="719.50"></text></g><g><title>tokio::runtime::thread_pool::idle::State::inc_num_searching (23 samples, 0.14%)</title><rect x="99.6209%" y="693" width="0.1429%" height="15" fill="rgb(210,134,47)"/><text x="99.8709%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (23 samples, 0.14%)</title><rect x="99.6209%" y="677" width="0.1429%" height="15" fill="rgb(237,24,49)"/><text x="99.8709%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_add (23 samples, 0.14%)</title><rect x="99.6209%" y="661" width="0.1429%" height="15" fill="rgb(251,39,46)"/><text x="99.8709%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::tick (2 samples, 0.01%)</title><rect x="99.7639%" y="741" width="0.0124%" height="15" fill="rgb(251,220,3)"/><text x="100.0139%" y="751.50"></text></g><g><title>core::num::&lt;impl u8&gt;::wrapping_add (2 samples, 0.01%)</title><rect x="99.7639%" y="725" width="0.0124%" height="15" fill="rgb(228,105,12)"/><text x="100.0139%" y="735.50"></text></g><g><title>std::panic::catch_unwind (5,425 samples, 33.71%)</title><rect x="66.1012%" y="1173" width="33.7124%" height="15" fill="rgb(215,196,1)"/><text x="66.3512%" y="1183.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (5,425 samples, 33.71%)</title><rect x="66.1012%" y="1157" width="33.7124%" height="15" fill="rgb(214,33,39)"/><text x="66.3512%" y="1167.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (5,425 samples, 33.71%)</title><rect x="66.1012%" y="1141" width="33.7124%" height="15" fill="rgb(220,19,52)"/><text x="66.3512%" y="1151.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5,425 samples, 33.71%)</title><rect x="66.1012%" y="1125" width="33.7124%" height="15" fill="rgb(221,78,38)"/><text x="66.3512%" y="1135.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (5,425 samples, 33.71%)</title><rect x="66.1012%" y="1109" width="33.7124%" height="15" fill="rgb(253,30,16)"/><text x="66.3512%" y="1119.50">std::thread::Builder::spawn_unchecked::{{closure}}::{{c..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5,425 samples, 33.71%)</title><rect x="66.1012%" y="1093" width="33.7124%" height="15" fill="rgb(242,65,0)"/><text x="66.3512%" y="1103.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (5,425 samples, 33.71%)</title><rect x="66.1012%" y="1077" width="33.7124%" height="15" fill="rgb(235,201,12)"/><text x="66.3512%" y="1087.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::..</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (5,425 samples, 33.71%)</title><rect x="66.1012%" y="1061" width="33.7124%" height="15" fill="rgb(233,161,9)"/><text x="66.3512%" y="1071.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (5,409 samples, 33.61%)</title><rect x="66.2006%" y="1045" width="33.6130%" height="15" fill="rgb(241,207,41)"/><text x="66.4506%" y="1055.50">tokio::runtime::task::Notified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (5,409 samples, 33.61%)</title><rect x="66.2006%" y="1029" width="33.6130%" height="15" fill="rgb(212,69,46)"/><text x="66.4506%" y="1039.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (5,409 samples, 33.61%)</title><rect x="66.2006%" y="1013" width="33.6130%" height="15" fill="rgb(239,69,45)"/><text x="66.4506%" y="1023.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (5,409 samples, 33.61%)</title><rect x="66.2006%" y="997" width="33.6130%" height="15" fill="rgb(242,117,48)"/><text x="66.4506%" y="1007.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (5,409 samples, 33.61%)</title><rect x="66.2006%" y="981" width="33.6130%" height="15" fill="rgb(228,41,36)"/><text x="66.4506%" y="991.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (5,409 samples, 33.61%)</title><rect x="66.2006%" y="965" width="33.6130%" height="15" fill="rgb(212,3,32)"/><text x="66.4506%" y="975.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (5,409 samples, 33.61%)</title><rect x="66.2006%" y="949" width="33.6130%" height="15" fill="rgb(233,41,49)"/><text x="66.4506%" y="959.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (5,409 samples, 33.61%)</title><rect x="66.2006%" y="933" width="33.6130%" height="15" fill="rgb(252,170,49)"/><text x="66.4506%" y="943.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5,409 samples, 33.61%)</title><rect x="66.2006%" y="917" width="33.6130%" height="15" fill="rgb(229,53,26)"/><text x="66.4506%" y="927.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::functio..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (5,409 samples, 33.61%)</title><rect x="66.2006%" y="901" width="33.6130%" height="15" fill="rgb(217,157,12)"/><text x="66.4506%" y="911.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (5,409 samples, 33.61%)</title><rect x="66.2006%" y="885" width="33.6130%" height="15" fill="rgb(227,17,9)"/><text x="66.4506%" y="895.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (5,409 samples, 33.61%)</title><rect x="66.2006%" y="869" width="33.6130%" height="15" fill="rgb(218,84,12)"/><text x="66.4506%" y="879.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (5,409 samples, 33.61%)</title><rect x="66.2006%" y="853" width="33.6130%" height="15" fill="rgb(212,79,24)"/><text x="66.4506%" y="863.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{clos..</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (5,409 samples, 33.61%)</title><rect x="66.2006%" y="837" width="33.6130%" height="15" fill="rgb(217,222,37)"/><text x="66.4506%" y="847.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as co..</text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (5,409 samples, 33.61%)</title><rect x="66.2006%" y="821" width="33.6130%" height="15" fill="rgb(246,208,8)"/><text x="66.4506%" y="831.50">tokio::runtime::thread_pool::worker::Launch::launch::{..</text></g><g><title>tokio::runtime::thread_pool::worker::run (5,409 samples, 33.61%)</title><rect x="66.2006%" y="805" width="33.6130%" height="15" fill="rgb(244,133,10)"/><text x="66.4506%" y="815.50">tokio::runtime::thread_pool::worker::run</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (5,409 samples, 33.61%)</title><rect x="66.2006%" y="789" width="33.6130%" height="15" fill="rgb(209,219,41)"/><text x="66.4506%" y="799.50">tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (5,409 samples, 33.61%)</title><rect x="66.2006%" y="773" width="33.6130%" height="15" fill="rgb(253,175,45)"/><text x="66.4506%" y="783.50">tokio::runtime::thread_pool::worker::run::{{closure}}</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (5,409 samples, 33.61%)</title><rect x="66.2006%" y="757" width="33.6130%" height="15" fill="rgb(235,100,37)"/><text x="66.4506%" y="767.50">tokio::runtime::thread_pool::worker::Context::run</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::shutdown (6 samples, 0.04%)</title><rect x="99.7763%" y="741" width="0.0373%" height="15" fill="rgb(225,87,19)"/><text x="100.0263%" y="751.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (5 samples, 0.03%)</title><rect x="99.7825%" y="725" width="0.0311%" height="15" fill="rgb(217,152,17)"/><text x="100.0325%" y="735.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (5 samples, 0.03%)</title><rect x="99.7825%" y="709" width="0.0311%" height="15" fill="rgb(235,72,13)"/><text x="100.0325%" y="719.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (5 samples, 0.03%)</title><rect x="99.7825%" y="693" width="0.0311%" height="15" fill="rgb(233,140,18)"/><text x="100.0325%" y="703.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (5 samples, 0.03%)</title><rect x="99.7825%" y="677" width="0.0311%" height="15" fill="rgb(207,212,28)"/><text x="100.0325%" y="687.50"></text></g><g><title>parking_lot_core::parking_lot::park (5 samples, 0.03%)</title><rect x="99.7825%" y="661" width="0.0311%" height="15" fill="rgb(220,130,25)"/><text x="100.0325%" y="671.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (5 samples, 0.03%)</title><rect x="99.7825%" y="645" width="0.0311%" height="15" fill="rgb(205,55,34)"/><text x="100.0325%" y="655.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (5 samples, 0.03%)</title><rect x="99.7825%" y="629" width="0.0311%" height="15" fill="rgb(237,54,35)"/><text x="100.0325%" y="639.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (5 samples, 0.03%)</title><rect x="99.7825%" y="613" width="0.0311%" height="15" fill="rgb(208,67,23)"/><text x="100.0325%" y="623.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (5 samples, 0.03%)</title><rect x="99.7825%" y="597" width="0.0311%" height="15" fill="rgb(206,207,50)"/><text x="100.0325%" y="607.50"></text></g><g><title>syscall (5 samples, 0.03%)</title><rect x="99.7825%" y="581" width="0.0311%" height="15" fill="rgb(213,211,42)"/><text x="100.0325%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="99.7825%" y="565" width="0.0311%" height="15" fill="rgb(252,197,50)"/><text x="100.0325%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="99.7825%" y="549" width="0.0311%" height="15" fill="rgb(251,211,41)"/><text x="100.0325%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="99.7825%" y="533" width="0.0311%" height="15" fill="rgb(229,211,5)"/><text x="100.0325%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="99.7825%" y="517" width="0.0311%" height="15" fill="rgb(239,36,31)"/><text x="100.0325%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="99.7825%" y="501" width="0.0311%" height="15" fill="rgb(248,67,31)"/><text x="100.0325%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="99.7825%" y="485" width="0.0311%" height="15" fill="rgb(249,55,44)"/><text x="100.0325%" y="495.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="99.7887%" y="469" width="0.0249%" height="15" fill="rgb(216,82,12)"/><text x="100.0387%" y="479.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="99.7887%" y="453" width="0.0249%" height="15" fill="rgb(242,174,1)"/><text x="100.0387%" y="463.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="99.7887%" y="437" width="0.0249%" height="15" fill="rgb(208,120,29)"/><text x="100.0387%" y="447.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="99.7887%" y="421" width="0.0249%" height="15" fill="rgb(221,105,43)"/><text x="100.0387%" y="431.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="99.7887%" y="405" width="0.0249%" height="15" fill="rgb(234,124,22)"/><text x="100.0387%" y="415.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="99.7887%" y="389" width="0.0249%" height="15" fill="rgb(212,23,30)"/><text x="100.0387%" y="399.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="99.7887%" y="373" width="0.0249%" height="15" fill="rgb(219,122,53)"/><text x="100.0387%" y="383.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="99.7887%" y="357" width="0.0249%" height="15" fill="rgb(248,84,24)"/><text x="100.0387%" y="367.50"></text></g><g><title>clone (5,429 samples, 33.74%)</title><rect x="66.0887%" y="1285" width="33.7373%" height="15" fill="rgb(245,115,18)"/><text x="66.3387%" y="1295.50">clone</text></g><g><title>start_thread (5,429 samples, 33.74%)</title><rect x="66.0887%" y="1269" width="33.7373%" height="15" fill="rgb(227,176,51)"/><text x="66.3387%" y="1279.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (5,427 samples, 33.72%)</title><rect x="66.1012%" y="1253" width="33.7248%" height="15" fill="rgb(229,63,42)"/><text x="66.3512%" y="1263.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (5,427 samples, 33.72%)</title><rect x="66.1012%" y="1237" width="33.7248%" height="15" fill="rgb(247,202,24)"/><text x="66.3512%" y="1247.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (5,427 samples, 33.72%)</title><rect x="66.1012%" y="1221" width="33.7248%" height="15" fill="rgb(244,173,20)"/><text x="66.3512%" y="1231.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (5,427 samples, 33.72%)</title><rect x="66.1012%" y="1205" width="33.7248%" height="15" fill="rgb(242,81,47)"/><text x="66.3512%" y="1215.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (5,427 samples, 33.72%)</title><rect x="66.1012%" y="1189" width="33.7248%" height="15" fill="rgb(231,185,54)"/><text x="66.3512%" y="1199.50">std::thread::Builder::spawn_unchecked::{{closure}}</text></g><g><title>std::sys::unix::thread::guard::current (2 samples, 0.01%)</title><rect x="99.8136%" y="1173" width="0.0124%" height="15" fill="rgb(243,55,32)"/><text x="100.0636%" y="1183.50"></text></g><g><title>pthread_getattr_np (2 samples, 0.01%)</title><rect x="99.8136%" y="1157" width="0.0124%" height="15" fill="rgb(208,167,19)"/><text x="100.0636%" y="1167.50"></text></g><g><title>__libc_malloc (2 samples, 0.01%)</title><rect x="99.8136%" y="1141" width="0.0124%" height="15" fill="rgb(231,72,35)"/><text x="100.0636%" y="1151.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="99.8136%" y="1125" width="0.0124%" height="15" fill="rgb(250,173,51)"/><text x="100.0636%" y="1135.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="99.8136%" y="1109" width="0.0124%" height="15" fill="rgb(209,5,22)"/><text x="100.0636%" y="1119.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="99.8136%" y="1093" width="0.0124%" height="15" fill="rgb(250,174,19)"/><text x="100.0636%" y="1103.50"></text></g><g><title>futures_util::stream::stream::StreamExt::poll_next_unpin (6 samples, 0.04%)</title><rect x="99.8322%" y="1285" width="0.0373%" height="15" fill="rgb(217,3,49)"/><text x="100.0822%" y="1295.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next (2 samples, 0.01%)</title><rect x="99.8571%" y="1269" width="0.0124%" height="15" fill="rgb(218,225,5)"/><text x="100.1071%" y="1279.50"></text></g><g><title>jemallocator::layout_to_flags (3 samples, 0.02%)</title><rect x="99.8695%" y="1285" width="0.0186%" height="15" fill="rgb(236,89,11)"/><text x="100.1195%" y="1295.50"></text></g><g><title>rho_runtime::storage::runner::Runner::handle (2 samples, 0.01%)</title><rect x="99.9006%" y="1285" width="0.0124%" height="15" fill="rgb(206,33,28)"/><text x="100.1506%" y="1295.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park (5 samples, 0.03%)</title><rect x="99.9316%" y="1269" width="0.0311%" height="15" fill="rgb(241,56,42)"/><text x="100.1816%" y="1279.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::maintenance (3 samples, 0.02%)</title><rect x="99.9441%" y="1253" width="0.0186%" height="15" fill="rgb(222,44,11)"/><text x="100.1941%" y="1263.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (8 samples, 0.05%)</title><rect x="99.9316%" y="1285" width="0.0497%" height="15" fill="rgb(234,111,20)"/><text x="100.1816%" y="1295.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::steal_work (3 samples, 0.02%)</title><rect x="99.9627%" y="1269" width="0.0186%" height="15" fill="rgb(237,77,6)"/><text x="100.2127%" y="1279.50"></text></g><g><title>all (16,092 samples, 100%)</title><rect x="0.0000%" y="1317" width="100.0000%" height="15" fill="rgb(235,111,23)"/><text x="0.2500%" y="1327.50"></text></g><g><title>tokio-runtime-w (13,302 samples, 82.66%)</title><rect x="17.3378%" y="1301" width="82.6622%" height="15" fill="rgb(251,135,29)"/><text x="17.5878%" y="1311.50">tokio-runtime-w</text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (3 samples, 0.02%)</title><rect x="99.9814%" y="1285" width="0.0186%" height="15" fill="rgb(217,57,1)"/><text x="100.2314%" y="1295.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::read (2 samples, 0.01%)</title><rect x="99.9876%" y="1269" width="0.0124%" height="15" fill="rgb(249,119,31)"/><text x="100.2376%" y="1279.50"></text></g></svg></svg>