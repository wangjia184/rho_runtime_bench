<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1446" onload="init(evt)" viewBox="0 0 1200 1446" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1446" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1429.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1429.00"> </text><svg id="frames" x="10" width="1180"><g><title>perf (5 samples, 0.06%)</title><rect x="0.0000%" y="1381" width="0.0560%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="1391.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="0.0000%" y="1365" width="0.0560%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="1375.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="0.0000%" y="1349" width="0.0560%" height="15" fill="rgb(221,193,54)"/><text x="0.2500%" y="1359.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="0.0000%" y="1333" width="0.0560%" height="15" fill="rgb(248,212,6)"/><text x="0.2500%" y="1343.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="0.0000%" y="1317" width="0.0560%" height="15" fill="rgb(208,68,35)"/><text x="0.2500%" y="1327.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="0.0000%" y="1301" width="0.0560%" height="15" fill="rgb(232,128,0)"/><text x="0.2500%" y="1311.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="0.0000%" y="1285" width="0.0560%" height="15" fill="rgb(207,160,47)"/><text x="0.2500%" y="1295.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="0.0000%" y="1269" width="0.0560%" height="15" fill="rgb(228,23,34)"/><text x="0.2500%" y="1279.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="0.0000%" y="1253" width="0.0560%" height="15" fill="rgb(218,30,26)"/><text x="0.2500%" y="1263.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="0.0000%" y="1237" width="0.0560%" height="15" fill="rgb(220,122,19)"/><text x="0.2500%" y="1247.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="0.0000%" y="1221" width="0.0560%" height="15" fill="rgb(250,228,42)"/><text x="0.2500%" y="1231.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="0.0000%" y="1205" width="0.0560%" height="15" fill="rgb(240,193,28)"/><text x="0.2500%" y="1215.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="0.0000%" y="1189" width="0.0560%" height="15" fill="rgb(216,20,37)"/><text x="0.2500%" y="1199.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="0.0000%" y="1173" width="0.0560%" height="15" fill="rgb(206,188,39)"/><text x="0.2500%" y="1183.50"></text></g><g><title>&lt;tokio::loom::std::atomic_usize::AtomicUsize as core::ops::deref::Deref&gt;::deref (3 samples, 0.03%)</title><rect x="0.0560%" y="1349" width="0.0336%" height="15" fill="rgb(217,207,13)"/><text x="0.3060%" y="1359.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="0.0896%" y="1349" width="0.0112%" height="15" fill="rgb(231,73,38)"/><text x="0.3396%" y="1359.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (1 samples, 0.01%)</title><rect x="0.1008%" y="1349" width="0.0112%" height="15" fill="rgb(225,20,46)"/><text x="0.3508%" y="1359.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (1 samples, 0.01%)</title><rect x="0.1120%" y="1349" width="0.0112%" height="15" fill="rgb(210,31,41)"/><text x="0.3620%" y="1359.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register (1 samples, 0.01%)</title><rect x="0.1120%" y="1333" width="0.0112%" height="15" fill="rgb(221,200,47)"/><text x="0.3620%" y="1343.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.01%)</title><rect x="0.1120%" y="1317" width="0.0112%" height="15" fill="rgb(226,26,5)"/><text x="0.3620%" y="1327.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::{{closure}} (1 samples, 0.01%)</title><rect x="0.1120%" y="1301" width="0.0112%" height="15" fill="rgb(249,33,26)"/><text x="0.3620%" y="1311.50"></text></g><g><title>&lt;&amp;core::task::wake::Waker as tokio::sync::task::atomic_waker::WakerRef&gt;::into_waker (1 samples, 0.01%)</title><rect x="0.1120%" y="1285" width="0.0112%" height="15" fill="rgb(235,183,28)"/><text x="0.3620%" y="1295.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="0.1120%" y="1269" width="0.0112%" height="15" fill="rgb(221,5,38)"/><text x="0.3620%" y="1279.50"></text></g><g><title>[[heap]] (8 samples, 0.09%)</title><rect x="0.0560%" y="1365" width="0.0896%" height="15" fill="rgb(247,18,42)"/><text x="0.3060%" y="1375.50"></text></g><g><title>tokio::task::spawn::spawn (2 samples, 0.02%)</title><rect x="0.1232%" y="1349" width="0.0224%" height="15" fill="rgb(241,131,45)"/><text x="0.3732%" y="1359.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.01%)</title><rect x="0.1456%" y="1349" width="0.0112%" height="15" fill="rgb(249,31,29)"/><text x="0.3956%" y="1359.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="0.1568%" y="1349" width="0.0224%" height="15" fill="rgb(225,111,53)"/><text x="0.4068%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;rho_runtime::storage::coordinator::TransitPort&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="0.1904%" y="1333" width="0.0112%" height="15" fill="rgb(238,160,17)"/><text x="0.4404%" y="1343.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::handle_produce (4 samples, 0.04%)</title><rect x="0.1792%" y="1349" width="0.0448%" height="15" fill="rgb(214,148,48)"/><text x="0.4292%" y="1359.50"></text></g><g><title>tokio::sync::oneshot::channel (2 samples, 0.02%)</title><rect x="0.2016%" y="1333" width="0.0224%" height="15" fill="rgb(232,36,49)"/><text x="0.4516%" y="1343.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="0.2128%" y="1317" width="0.0112%" height="15" fill="rgb(209,103,24)"/><text x="0.4628%" y="1327.50"></text></g><g><title>syscall (1 samples, 0.01%)</title><rect x="0.2240%" y="1349" width="0.0112%" height="15" fill="rgb(229,88,8)"/><text x="0.4740%" y="1359.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (5 samples, 0.06%)</title><rect x="0.2352%" y="1349" width="0.0560%" height="15" fill="rgb(213,181,19)"/><text x="0.4852%" y="1359.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv::{{closure}} (4 samples, 0.04%)</title><rect x="0.2464%" y="1333" width="0.0448%" height="15" fill="rgb(254,191,54)"/><text x="0.4964%" y="1343.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="0.2912%" y="1349" width="0.0112%" height="15" fill="rgb(241,83,37)"/><text x="0.5412%" y="1359.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="0.2912%" y="1333" width="0.0112%" height="15" fill="rgb(233,36,39)"/><text x="0.5412%" y="1343.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="0.2912%" y="1317" width="0.0112%" height="15" fill="rgb(226,3,54)"/><text x="0.5412%" y="1327.50"></text></g><g><title>tokio::park::thread::Inner::park (3 samples, 0.03%)</title><rect x="0.3024%" y="1349" width="0.0336%" height="15" fill="rgb(245,192,40)"/><text x="0.5524%" y="1359.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (3 samples, 0.03%)</title><rect x="0.3024%" y="1333" width="0.0336%" height="15" fill="rgb(238,167,29)"/><text x="0.5524%" y="1343.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (3 samples, 0.03%)</title><rect x="0.3024%" y="1317" width="0.0336%" height="15" fill="rgb(232,182,51)"/><text x="0.5524%" y="1327.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (3 samples, 0.03%)</title><rect x="0.3024%" y="1301" width="0.0336%" height="15" fill="rgb(231,60,39)"/><text x="0.5524%" y="1311.50"></text></g><g><title>parking_lot_core::parking_lot::park (3 samples, 0.03%)</title><rect x="0.3024%" y="1285" width="0.0336%" height="15" fill="rgb(208,69,12)"/><text x="0.5524%" y="1295.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (3 samples, 0.03%)</title><rect x="0.3024%" y="1269" width="0.0336%" height="15" fill="rgb(235,93,37)"/><text x="0.5524%" y="1279.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (3 samples, 0.03%)</title><rect x="0.3024%" y="1253" width="0.0336%" height="15" fill="rgb(213,116,39)"/><text x="0.5524%" y="1263.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (3 samples, 0.03%)</title><rect x="0.3024%" y="1237" width="0.0336%" height="15" fill="rgb(222,207,29)"/><text x="0.5524%" y="1247.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (3 samples, 0.03%)</title><rect x="0.3024%" y="1221" width="0.0336%" height="15" fill="rgb(206,96,30)"/><text x="0.5524%" y="1231.50"></text></g><g><title>syscall (3 samples, 0.03%)</title><rect x="0.3024%" y="1205" width="0.0336%" height="15" fill="rgb(218,138,4)"/><text x="0.5524%" y="1215.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="0.3024%" y="1189" width="0.0336%" height="15" fill="rgb(250,191,14)"/><text x="0.5524%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::coop::with_budget::ResetGuard&gt; (2 samples, 0.02%)</title><rect x="0.4032%" y="1237" width="0.0224%" height="15" fill="rgb(239,60,40)"/><text x="0.6532%" y="1247.50"></text></g><g><title>tokio::runtime::enter::Enter::block_on (10 samples, 0.11%)</title><rect x="0.3360%" y="1349" width="0.1120%" height="15" fill="rgb(206,27,48)"/><text x="0.5860%" y="1359.50"></text></g><g><title>tokio::park::thread::CachedParkThread::block_on (10 samples, 0.11%)</title><rect x="0.3360%" y="1333" width="0.1120%" height="15" fill="rgb(225,35,8)"/><text x="0.5860%" y="1343.50"></text></g><g><title>tokio::coop::budget (10 samples, 0.11%)</title><rect x="0.3360%" y="1317" width="0.1120%" height="15" fill="rgb(250,213,24)"/><text x="0.5860%" y="1327.50"></text></g><g><title>tokio::coop::with_budget (6 samples, 0.07%)</title><rect x="0.3808%" y="1301" width="0.0672%" height="15" fill="rgb(247,123,22)"/><text x="0.6308%" y="1311.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.07%)</title><rect x="0.3808%" y="1285" width="0.0672%" height="15" fill="rgb(231,138,38)"/><text x="0.6308%" y="1295.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.07%)</title><rect x="0.3808%" y="1269" width="0.0672%" height="15" fill="rgb(231,145,46)"/><text x="0.6308%" y="1279.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (4 samples, 0.04%)</title><rect x="0.4032%" y="1253" width="0.0448%" height="15" fill="rgb(251,118,11)"/><text x="0.6532%" y="1263.50"></text></g><g><title>tokio::park::thread::CachedParkThread::block_on::{{closure}} (2 samples, 0.02%)</title><rect x="0.4256%" y="1237" width="0.0224%" height="15" fill="rgb(217,147,25)"/><text x="0.6756%" y="1247.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (4 samples, 0.04%)</title><rect x="0.4480%" y="1349" width="0.0448%" height="15" fill="rgb(247,81,37)"/><text x="0.6980%" y="1359.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (4 samples, 0.04%)</title><rect x="0.4480%" y="1333" width="0.0448%" height="15" fill="rgb(209,12,38)"/><text x="0.6980%" y="1343.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="0.4816%" y="1317" width="0.0112%" height="15" fill="rgb(227,1,9)"/><text x="0.7316%" y="1327.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="0.4816%" y="1301" width="0.0112%" height="15" fill="rgb(248,47,43)"/><text x="0.7316%" y="1311.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="0.4816%" y="1285" width="0.0112%" height="15" fill="rgb(221,10,30)"/><text x="0.7316%" y="1295.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="0.4816%" y="1269" width="0.0112%" height="15" fill="rgb(210,229,1)"/><text x="0.7316%" y="1279.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (1 samples, 0.01%)</title><rect x="0.4928%" y="1349" width="0.0112%" height="15" fill="rgb(222,148,37)"/><text x="0.7428%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::coop::RestoreOnPending&gt; (1 samples, 0.01%)</title><rect x="0.5264%" y="1333" width="0.0112%" height="15" fill="rgb(234,67,33)"/><text x="0.7764%" y="1343.50"></text></g><g><title>[[stack]] (36 samples, 0.40%)</title><rect x="0.1456%" y="1365" width="0.4032%" height="15" fill="rgb(247,98,35)"/><text x="0.3956%" y="1375.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (4 samples, 0.04%)</title><rect x="0.5040%" y="1349" width="0.0448%" height="15" fill="rgb(247,138,52)"/><text x="0.7540%" y="1359.50"></text></g><g><title>tokio::coop::poll_proceed (1 samples, 0.01%)</title><rect x="0.5376%" y="1333" width="0.0112%" height="15" fill="rgb(213,79,30)"/><text x="0.7876%" y="1343.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="0.5376%" y="1317" width="0.0112%" height="15" fill="rgb(246,177,23)"/><text x="0.7876%" y="1327.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="0.5376%" y="1301" width="0.0112%" height="15" fill="rgb(230,62,27)"/><text x="0.7876%" y="1311.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (1 samples, 0.01%)</title><rect x="0.5376%" y="1285" width="0.0112%" height="15" fill="rgb(216,154,8)"/><text x="0.7876%" y="1295.50"></text></g><g><title>&lt;tokio::park::thread::CachedParkThread as tokio::park::Park&gt;::park (6 samples, 0.07%)</title><rect x="0.5488%" y="1349" width="0.0672%" height="15" fill="rgb(244,35,45)"/><text x="0.7988%" y="1359.50"></text></g><g><title>tokio::park::thread::CachedParkThread::with_current (1 samples, 0.01%)</title><rect x="0.6048%" y="1333" width="0.0112%" height="15" fill="rgb(251,115,12)"/><text x="0.8548%" y="1343.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="0.6048%" y="1317" width="0.0112%" height="15" fill="rgb(240,54,50)"/><text x="0.8548%" y="1327.50"></text></g><g><title>tokio::park::thread::CachedParkThread::with_current::{{closure}} (1 samples, 0.01%)</title><rect x="0.6048%" y="1301" width="0.0112%" height="15" fill="rgb(233,84,52)"/><text x="0.8548%" y="1311.50"></text></g><g><title>&lt;tokio::park::thread::CachedParkThread as tokio::park::Park&gt;::park::{{closure}} (1 samples, 0.01%)</title><rect x="0.6048%" y="1285" width="0.0112%" height="15" fill="rgb(207,117,47)"/><text x="0.8548%" y="1295.50"></text></g><g><title>syscall (2 samples, 0.02%)</title><rect x="0.6160%" y="1349" width="0.0224%" height="15" fill="rgb(249,43,39)"/><text x="0.8660%" y="1359.50"></text></g><g><title>[anon] (9 samples, 0.10%)</title><rect x="0.5488%" y="1365" width="0.1008%" height="15" fill="rgb(209,38,44)"/><text x="0.7988%" y="1375.50"></text></g><g><title>tokio::task::spawn::spawn (1 samples, 0.01%)</title><rect x="0.6384%" y="1349" width="0.0112%" height="15" fill="rgb(236,212,23)"/><text x="0.8884%" y="1359.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.01%)</title><rect x="0.6496%" y="1365" width="0.0112%" height="15" fill="rgb(242,79,21)"/><text x="0.8996%" y="1375.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.01%)</title><rect x="0.6496%" y="1349" width="0.0112%" height="15" fill="rgb(211,96,35)"/><text x="0.8996%" y="1359.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.01%)</title><rect x="0.6496%" y="1333" width="0.0112%" height="15" fill="rgb(253,215,40)"/><text x="0.8996%" y="1343.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.01%)</title><rect x="0.6496%" y="1317" width="0.0112%" height="15" fill="rgb(211,81,21)"/><text x="0.8996%" y="1327.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.01%)</title><rect x="0.6496%" y="1301" width="0.0112%" height="15" fill="rgb(208,190,38)"/><text x="0.8996%" y="1311.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.01%)</title><rect x="0.6496%" y="1285" width="0.0112%" height="15" fill="rgb(235,213,38)"/><text x="0.8996%" y="1295.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.01%)</title><rect x="0.6496%" y="1269" width="0.0112%" height="15" fill="rgb(237,122,38)"/><text x="0.8996%" y="1279.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.01%)</title><rect x="0.6496%" y="1253" width="0.0112%" height="15" fill="rgb(244,218,35)"/><text x="0.8996%" y="1263.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.01%)</title><rect x="0.6496%" y="1237" width="0.0112%" height="15" fill="rgb(240,68,47)"/><text x="0.8996%" y="1247.50"></text></g><g><title>[rho_runtime] (1 samples, 0.01%)</title><rect x="0.6608%" y="1365" width="0.0112%" height="15" fill="rgb(210,16,53)"/><text x="0.9108%" y="1375.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (1 samples, 0.01%)</title><rect x="0.6608%" y="1349" width="0.0112%" height="15" fill="rgb(235,124,12)"/><text x="0.9108%" y="1359.50"></text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (1 samples, 0.01%)</title><rect x="0.6608%" y="1333" width="0.0112%" height="15" fill="rgb(224,169,11)"/><text x="0.9108%" y="1343.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::handle_produce (1 samples, 0.01%)</title><rect x="0.7504%" y="1221" width="0.0112%" height="15" fill="rgb(250,166,2)"/><text x="1.0004%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;rho_runtime::storage::coordinator::TransitPort&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="0.7504%" y="1205" width="0.0112%" height="15" fill="rgb(242,216,29)"/><text x="1.0004%" y="1215.50"></text></g><g><title>tokio::task::spawn::spawn (1 samples, 0.01%)</title><rect x="0.7504%" y="1189" width="0.0112%" height="15" fill="rgb(230,116,27)"/><text x="1.0004%" y="1199.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (1 samples, 0.01%)</title><rect x="0.7504%" y="1173" width="0.0112%" height="15" fill="rgb(228,99,48)"/><text x="1.0004%" y="1183.50"></text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (1 samples, 0.01%)</title><rect x="0.7504%" y="1157" width="0.0112%" height="15" fill="rgb(253,11,6)"/><text x="1.0004%" y="1167.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (1 samples, 0.01%)</title><rect x="0.7504%" y="1141" width="0.0112%" height="15" fill="rgb(247,143,39)"/><text x="1.0004%" y="1151.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (1 samples, 0.01%)</title><rect x="0.7504%" y="1125" width="0.0112%" height="15" fill="rgb(236,97,10)"/><text x="1.0004%" y="1135.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (1 samples, 0.01%)</title><rect x="0.7504%" y="1109" width="0.0112%" height="15" fill="rgb(233,208,19)"/><text x="1.0004%" y="1119.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (1 samples, 0.01%)</title><rect x="0.7504%" y="1093" width="0.0112%" height="15" fill="rgb(216,164,2)"/><text x="1.0004%" y="1103.50"></text></g><g><title>syscall (1 samples, 0.01%)</title><rect x="0.7504%" y="1077" width="0.0112%" height="15" fill="rgb(220,129,5)"/><text x="1.0004%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.7504%" y="1061" width="0.0112%" height="15" fill="rgb(242,17,10)"/><text x="1.0004%" y="1071.50"></text></g><g><title>&lt;(tokio::sync::batch_semaphore::Semaphore,usize) as tokio::sync::mpsc::chan::Semaphore&gt;::add_permit (20 samples, 0.22%)</title><rect x="0.7616%" y="1173" width="0.2240%" height="15" fill="rgb(242,107,0)"/><text x="1.0116%" y="1183.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::release (20 samples, 0.22%)</title><rect x="0.7616%" y="1157" width="0.2240%" height="15" fill="rgb(251,28,31)"/><text x="1.0116%" y="1167.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (20 samples, 0.22%)</title><rect x="0.7616%" y="1141" width="0.2240%" height="15" fill="rgb(233,223,10)"/><text x="1.0116%" y="1151.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (20 samples, 0.22%)</title><rect x="0.7616%" y="1125" width="0.2240%" height="15" fill="rgb(215,21,27)"/><text x="1.0116%" y="1135.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (20 samples, 0.22%)</title><rect x="0.7616%" y="1109" width="0.2240%" height="15" fill="rgb(232,23,21)"/><text x="1.0116%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (20 samples, 0.22%)</title><rect x="0.7616%" y="1093" width="0.2240%" height="15" fill="rgb(244,5,23)"/><text x="1.0116%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (20 samples, 0.22%)</title><rect x="0.7616%" y="1077" width="0.2240%" height="15" fill="rgb(226,81,46)"/><text x="1.0116%" y="1087.50"></text></g><g><title>core::array::&lt;impl core::default::Default for [T: _]&gt;::default (2 samples, 0.02%)</title><rect x="0.9968%" y="1157" width="0.0224%" height="15" fill="rgb(247,70,30)"/><text x="1.2468%" y="1167.50"></text></g><g><title>core::mem::drop (7 samples, 0.08%)</title><rect x="1.0192%" y="1157" width="0.0784%" height="15" fill="rgb(212,68,19)"/><text x="1.2692%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::sync::batch_semaphore::Waitlist&gt;&gt; (7 samples, 0.08%)</title><rect x="1.0192%" y="1141" width="0.0784%" height="15" fill="rgb(240,187,13)"/><text x="1.2692%" y="1151.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.08%)</title><rect x="1.0192%" y="1125" width="0.0784%" height="15" fill="rgb(223,113,26)"/><text x="1.2692%" y="1135.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (7 samples, 0.08%)</title><rect x="1.0192%" y="1109" width="0.0784%" height="15" fill="rgb(206,192,2)"/><text x="1.2692%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (7 samples, 0.08%)</title><rect x="1.0192%" y="1093" width="0.0784%" height="15" fill="rgb(241,108,4)"/><text x="1.2692%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (7 samples, 0.08%)</title><rect x="1.0192%" y="1077" width="0.0784%" height="15" fill="rgb(247,173,49)"/><text x="1.2692%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt;: 8]&gt; (3 samples, 0.03%)</title><rect x="1.0975%" y="1157" width="0.0336%" height="15" fill="rgb(224,114,35)"/><text x="1.3475%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (3 samples, 0.03%)</title><rect x="1.0975%" y="1141" width="0.0336%" height="15" fill="rgb(245,159,27)"/><text x="1.3475%" y="1151.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (27 samples, 0.30%)</title><rect x="0.9856%" y="1173" width="0.3024%" height="15" fill="rgb(245,172,44)"/><text x="1.2356%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (14 samples, 0.16%)</title><rect x="1.1311%" y="1157" width="0.1568%" height="15" fill="rgb(236,23,11)"/><text x="1.3811%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_add (14 samples, 0.16%)</title><rect x="1.1311%" y="1141" width="0.1568%" height="15" fill="rgb(205,117,38)"/><text x="1.3811%" y="1151.50"></text></g><g><title>[libc-2.31.so] (13 samples, 0.15%)</title><rect x="1.2991%" y="1157" width="0.1456%" height="15" fill="rgb(237,72,25)"/><text x="1.5491%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.04%)</title><rect x="1.4447%" y="1141" width="0.0448%" height="15" fill="rgb(244,70,9)"/><text x="1.6947%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.04%)</title><rect x="1.4447%" y="1125" width="0.0448%" height="15" fill="rgb(217,125,39)"/><text x="1.6947%" y="1135.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (53 samples, 0.59%)</title><rect x="1.4895%" y="1141" width="0.5936%" height="15" fill="rgb(235,36,10)"/><text x="1.7395%" y="1151.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::read::{{closure}} (53 samples, 0.59%)</title><rect x="1.4895%" y="1125" width="0.5936%" height="15" fill="rgb(251,123,47)"/><text x="1.7395%" y="1135.50"></text></g><g><title>core::ptr::read (53 samples, 0.59%)</title><rect x="1.4895%" y="1109" width="0.5936%" height="15" fill="rgb(221,13,13)"/><text x="1.7395%" y="1119.50"></text></g><g><title>[libc-2.31.so] (46 samples, 0.52%)</title><rect x="1.5679%" y="1093" width="0.5152%" height="15" fill="rgb(238,131,9)"/><text x="1.8179%" y="1103.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::read (58 samples, 0.65%)</title><rect x="1.4447%" y="1157" width="0.6496%" height="15" fill="rgb(211,50,8)"/><text x="1.6947%" y="1167.50"></text></g><g><title>tokio::sync::mpsc::block::is_ready (1 samples, 0.01%)</title><rect x="2.0831%" y="1141" width="0.0112%" height="15" fill="rgb(245,182,24)"/><text x="2.3331%" y="1151.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::reclaim_blocks (3 samples, 0.03%)</title><rect x="2.0943%" y="1157" width="0.0336%" height="15" fill="rgb(242,14,37)"/><text x="2.3443%" y="1167.50"></text></g><g><title>__sched_yield (3 samples, 0.03%)</title><rect x="2.0943%" y="1141" width="0.0336%" height="15" fill="rgb(246,228,12)"/><text x="2.3443%" y="1151.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="2.0943%" y="1125" width="0.0336%" height="15" fill="rgb(213,55,15)"/><text x="2.3443%" y="1135.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="2.0943%" y="1109" width="0.0336%" height="15" fill="rgb(209,9,3)"/><text x="2.3443%" y="1119.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="2.0943%" y="1093" width="0.0336%" height="15" fill="rgb(230,59,30)"/><text x="2.3443%" y="1103.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="2.0943%" y="1077" width="0.0336%" height="15" fill="rgb(209,121,21)"/><text x="2.3443%" y="1087.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="2.0943%" y="1061" width="0.0336%" height="15" fill="rgb(220,109,13)"/><text x="2.3443%" y="1071.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="2.0943%" y="1045" width="0.0336%" height="15" fill="rgb(232,18,1)"/><text x="2.3443%" y="1055.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="2.0943%" y="1029" width="0.0336%" height="15" fill="rgb(215,41,42)"/><text x="2.3443%" y="1039.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="2.1055%" y="1013" width="0.0224%" height="15" fill="rgb(224,123,36)"/><text x="2.3555%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="2.1167%" y="997" width="0.0112%" height="15" fill="rgb(240,125,3)"/><text x="2.3667%" y="1007.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (139 samples, 1.56%)</title><rect x="0.7504%" y="1285" width="1.5567%" height="15" fill="rgb(205,98,50)"/><text x="1.0004%" y="1295.50"></text></g><g><title>tokio::sync::mpsc::bounded::Receiver&lt;T&gt;::recv::{{closure}} (139 samples, 1.56%)</title><rect x="0.7504%" y="1269" width="1.5567%" height="15" fill="rgb(205,185,37)"/><text x="1.0004%" y="1279.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (139 samples, 1.56%)</title><rect x="0.7504%" y="1253" width="1.5567%" height="15" fill="rgb(238,207,15)"/><text x="1.0004%" y="1263.50"></text></g><g><title>tokio::sync::mpsc::bounded::Receiver&lt;T&gt;::recv::{{closure}}::{{closure}} (139 samples, 1.56%)</title><rect x="0.7504%" y="1237" width="1.5567%" height="15" fill="rgb(213,199,42)"/><text x="1.0004%" y="1247.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (138 samples, 1.55%)</title><rect x="0.7616%" y="1221" width="1.5455%" height="15" fill="rgb(235,201,11)"/><text x="1.0116%" y="1231.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (138 samples, 1.55%)</title><rect x="0.7616%" y="1205" width="1.5455%" height="15" fill="rgb(207,46,11)"/><text x="1.0116%" y="1215.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv::{{closure}} (138 samples, 1.55%)</title><rect x="0.7616%" y="1189" width="1.5455%" height="15" fill="rgb(241,35,35)"/><text x="1.0116%" y="1199.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (91 samples, 1.02%)</title><rect x="1.2879%" y="1173" width="1.0192%" height="15" fill="rgb(243,32,47)"/><text x="1.5379%" y="1183.50"></text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::try_advancing_head (16 samples, 0.18%)</title><rect x="2.1279%" y="1157" width="0.1792%" height="15" fill="rgb(247,202,23)"/><text x="2.3779%" y="1167.50"></text></g><g><title>__sched_yield (2 samples, 0.02%)</title><rect x="2.2847%" y="1141" width="0.0224%" height="15" fill="rgb(219,102,11)"/><text x="2.5347%" y="1151.50"></text></g><g><title>core::future::from_generator (4 samples, 0.04%)</title><rect x="2.3071%" y="1269" width="0.0448%" height="15" fill="rgb(243,110,44)"/><text x="2.5571%" y="1279.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="2.3183%" y="1253" width="0.0336%" height="15" fill="rgb(222,74,54)"/><text x="2.5683%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;rho_runtime::storage::coordinator::TransitPort&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="2.3519%" y="1269" width="0.0112%" height="15" fill="rgb(216,99,12)"/><text x="2.6019%" y="1279.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="2.3519%" y="1253" width="0.0112%" height="15" fill="rgb(226,22,26)"/><text x="2.6019%" y="1263.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::header (4 samples, 0.04%)</title><rect x="2.4415%" y="1237" width="0.0448%" height="15" fill="rgb(217,163,10)"/><text x="2.6915%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::join::JoinHandle&lt;()&gt;&gt; (15 samples, 0.17%)</title><rect x="2.3631%" y="1269" width="0.1680%" height="15" fill="rgb(213,25,53)"/><text x="2.6131%" y="1279.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.17%)</title><rect x="2.3631%" y="1253" width="0.1680%" height="15" fill="rgb(252,105,26)"/><text x="2.6131%" y="1263.50"></text></g><g><title>tokio::runtime::task::state::State::drop_join_handle_fast (4 samples, 0.04%)</title><rect x="2.4863%" y="1237" width="0.0448%" height="15" fill="rgb(220,39,43)"/><text x="2.7363%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (3 samples, 0.03%)</title><rect x="2.4975%" y="1221" width="0.0336%" height="15" fill="rgb(229,68,48)"/><text x="2.7475%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.03%)</title><rect x="2.4975%" y="1205" width="0.0336%" height="15" fill="rgb(252,8,32)"/><text x="2.7475%" y="1215.50"></text></g><g><title>core::num::&lt;impl usize&gt;::rotate_left (1 samples, 0.01%)</title><rect x="2.5535%" y="1109" width="0.0112%" height="15" fill="rgb(223,20,43)"/><text x="2.8035%" y="1119.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="2.5535%" y="1221" width="0.0224%" height="15" fill="rgb(229,81,49)"/><text x="2.8035%" y="1231.50"></text></g><g><title>&lt;blake3::Hash as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="2.5535%" y="1205" width="0.0224%" height="15" fill="rgb(236,28,36)"/><text x="2.8035%" y="1215.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (2 samples, 0.02%)</title><rect x="2.5535%" y="1189" width="0.0224%" height="15" fill="rgb(249,185,26)"/><text x="2.8035%" y="1199.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (2 samples, 0.02%)</title><rect x="2.5535%" y="1173" width="0.0224%" height="15" fill="rgb(249,174,33)"/><text x="2.8035%" y="1183.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (2 samples, 0.02%)</title><rect x="2.5535%" y="1157" width="0.0224%" height="15" fill="rgb(233,201,37)"/><text x="2.8035%" y="1167.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="2.5535%" y="1141" width="0.0224%" height="15" fill="rgb(221,78,26)"/><text x="2.8035%" y="1151.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (2 samples, 0.02%)</title><rect x="2.5535%" y="1125" width="0.0224%" height="15" fill="rgb(250,127,30)"/><text x="2.8035%" y="1135.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="2.5647%" y="1109" width="0.0112%" height="15" fill="rgb(230,49,44)"/><text x="2.8147%" y="1119.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="2.5871%" y="1205" width="0.0112%" height="15" fill="rgb(229,67,23)"/><text x="2.8371%" y="1215.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.01%)</title><rect x="2.5983%" y="1173" width="0.0112%" height="15" fill="rgb(249,83,47)"/><text x="2.8483%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::iter_hash (6 samples, 0.07%)</title><rect x="2.5983%" y="1205" width="0.0672%" height="15" fill="rgb(215,43,3)"/><text x="2.8483%" y="1215.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T&gt;::new (6 samples, 0.07%)</title><rect x="2.5983%" y="1189" width="0.0672%" height="15" fill="rgb(238,154,13)"/><text x="2.8483%" y="1199.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (5 samples, 0.06%)</title><rect x="2.6095%" y="1173" width="0.0560%" height="15" fill="rgb(219,56,2)"/><text x="2.8595%" y="1183.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (5 samples, 0.06%)</title><rect x="2.6095%" y="1157" width="0.0560%" height="15" fill="rgb(233,0,4)"/><text x="2.8595%" y="1167.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.06%)</title><rect x="2.6095%" y="1141" width="0.0560%" height="15" fill="rgb(235,30,7)"/><text x="2.8595%" y="1151.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry (14 samples, 0.16%)</title><rect x="2.5423%" y="1237" width="0.1568%" height="15" fill="rgb(250,79,13)"/><text x="2.7923%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (11 samples, 0.12%)</title><rect x="2.5759%" y="1221" width="0.1232%" height="15" fill="rgb(211,146,34)"/><text x="2.8259%" y="1231.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry::{{closure}} (3 samples, 0.03%)</title><rect x="2.6655%" y="1205" width="0.0336%" height="15" fill="rgb(228,22,38)"/><text x="2.9155%" y="1215.50"></text></g><g><title>&lt;blake3::Hash as core::cmp::PartialEq&gt;::eq (3 samples, 0.03%)</title><rect x="2.6655%" y="1189" width="0.0336%" height="15" fill="rgb(235,168,5)"/><text x="2.9155%" y="1199.50"></text></g><g><title>constant_time_eq::constant_time_eq_32 (3 samples, 0.03%)</title><rect x="2.6655%" y="1173" width="0.0336%" height="15" fill="rgb(221,155,16)"/><text x="2.9155%" y="1183.50"></text></g><g><title>constant_time_eq::constant_time_ne_32 (3 samples, 0.03%)</title><rect x="2.6655%" y="1157" width="0.0336%" height="15" fill="rgb(215,215,53)"/><text x="2.9155%" y="1167.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::get_or_create_transit_port (19 samples, 0.21%)</title><rect x="2.5311%" y="1269" width="0.2128%" height="15" fill="rgb(223,4,10)"/><text x="2.7811%" y="1279.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (19 samples, 0.21%)</title><rect x="2.5311%" y="1253" width="0.2128%" height="15" fill="rgb(234,103,6)"/><text x="2.7811%" y="1263.50"></text></g><g><title>std::collections::hash::map::map_entry (4 samples, 0.04%)</title><rect x="2.6991%" y="1237" width="0.0448%" height="15" fill="rgb(227,97,0)"/><text x="2.9491%" y="1247.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (66 samples, 0.74%)</title><rect x="2.7439%" y="1253" width="0.7392%" height="15" fill="rgb(234,150,53)"/><text x="2.9939%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (66 samples, 0.74%)</title><rect x="2.7439%" y="1237" width="0.7392%" height="15" fill="rgb(228,201,54)"/><text x="2.9939%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_add (66 samples, 0.74%)</title><rect x="2.7439%" y="1221" width="0.7392%" height="15" fill="rgb(222,22,37)"/><text x="2.9939%" y="1231.50"></text></g><g><title>[libc-2.31.so] (16 samples, 0.18%)</title><rect x="3.4830%" y="1237" width="0.1792%" height="15" fill="rgb(237,53,32)"/><text x="3.7330%" y="1247.50"></text></g><g><title>__libc_malloc (78 samples, 0.87%)</title><rect x="3.6622%" y="1173" width="0.8736%" height="15" fill="rgb(233,25,53)"/><text x="3.9122%" y="1183.50"></text></g><g><title>[libc-2.31.so] (51 samples, 0.57%)</title><rect x="3.9646%" y="1157" width="0.5712%" height="15" fill="rgb(210,40,34)"/><text x="4.2146%" y="1167.50"></text></g><g><title>tokio::sync::oneshot::channel (161 samples, 1.80%)</title><rect x="2.7439%" y="1269" width="1.8031%" height="15" fill="rgb(241,220,44)"/><text x="2.9939%" y="1279.50">t..</text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (95 samples, 1.06%)</title><rect x="3.4830%" y="1253" width="1.0639%" height="15" fill="rgb(235,28,35)"/><text x="3.7330%" y="1263.50"></text></g><g><title>alloc::alloc::exchange_malloc (79 samples, 0.88%)</title><rect x="3.6622%" y="1237" width="0.8848%" height="15" fill="rgb(210,56,17)"/><text x="3.9122%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (79 samples, 0.88%)</title><rect x="3.6622%" y="1221" width="0.8848%" height="15" fill="rgb(224,130,29)"/><text x="3.9122%" y="1231.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (79 samples, 0.88%)</title><rect x="3.6622%" y="1205" width="0.8848%" height="15" fill="rgb(235,212,8)"/><text x="3.9122%" y="1215.50"></text></g><g><title>alloc::alloc::alloc (79 samples, 0.88%)</title><rect x="3.6622%" y="1189" width="0.8848%" height="15" fill="rgb(223,33,50)"/><text x="3.9122%" y="1199.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="4.5358%" y="1173" width="0.0112%" height="15" fill="rgb(219,149,13)"/><text x="4.7858%" y="1183.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="4.5358%" y="1157" width="0.0112%" height="15" fill="rgb(250,156,29)"/><text x="4.7858%" y="1167.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.06%)</title><rect x="4.6030%" y="1253" width="0.0560%" height="15" fill="rgb(216,193,19)"/><text x="4.8530%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::spawner::Spawner&gt; (7 samples, 0.08%)</title><rect x="4.6590%" y="1253" width="0.0784%" height="15" fill="rgb(216,135,14)"/><text x="4.9090%" y="1263.50"></text></g><g><title>tokio::runtime::context::spawn_handle (11 samples, 0.12%)</title><rect x="4.7374%" y="1253" width="0.1232%" height="15" fill="rgb(241,47,5)"/><text x="4.9874%" y="1263.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (11 samples, 0.12%)</title><rect x="4.7374%" y="1237" width="0.1232%" height="15" fill="rgb(233,42,35)"/><text x="4.9874%" y="1247.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11 samples, 0.12%)</title><rect x="4.7374%" y="1221" width="0.1232%" height="15" fill="rgb(231,13,6)"/><text x="4.9874%" y="1231.50"></text></g><g><title>tokio::runtime::context::spawn_handle::{{closure}} (11 samples, 0.12%)</title><rect x="4.7374%" y="1205" width="0.1232%" height="15" fill="rgb(207,181,40)"/><text x="4.9874%" y="1215.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.12%)</title><rect x="4.7374%" y="1189" width="0.1232%" height="15" fill="rgb(254,173,49)"/><text x="4.9874%" y="1199.50"></text></g><g><title>tokio::runtime::context::spawn_handle::{{closure}}::{{closure}} (11 samples, 0.12%)</title><rect x="4.7374%" y="1173" width="0.1232%" height="15" fill="rgb(221,1,38)"/><text x="4.9874%" y="1183.50"></text></g><g><title>&lt;tokio::runtime::spawner::Spawner as core::clone::Clone&gt;::clone (11 samples, 0.12%)</title><rect x="4.7374%" y="1157" width="0.1232%" height="15" fill="rgb(206,124,46)"/><text x="4.9874%" y="1167.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.09%)</title><rect x="4.9054%" y="1189" width="0.0896%" height="15" fill="rgb(249,21,11)"/><text x="5.1554%" y="1199.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.07%)</title><rect x="4.9950%" y="1173" width="0.0672%" height="15" fill="rgb(222,201,40)"/><text x="5.2450%" y="1183.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="5.0846%" y="1157" width="0.0224%" height="15" fill="rgb(235,61,29)"/><text x="5.3346%" y="1167.50"></text></g><g><title>__libc_malloc (47 samples, 0.53%)</title><rect x="5.1070%" y="1093" width="0.5264%" height="15" fill="rgb(219,207,3)"/><text x="5.3570%" y="1103.50"></text></g><g><title>[libc-2.31.so] (23 samples, 0.26%)</title><rect x="5.3757%" y="1077" width="0.2576%" height="15" fill="rgb(222,56,46)"/><text x="5.6257%" y="1087.50"></text></g><g><title>tokio::runtime::task::joinable (68 samples, 0.76%)</title><rect x="4.9054%" y="1221" width="0.7616%" height="15" fill="rgb(239,76,54)"/><text x="5.1554%" y="1231.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (68 samples, 0.76%)</title><rect x="4.9054%" y="1205" width="0.7616%" height="15" fill="rgb(231,124,27)"/><text x="5.1554%" y="1215.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (60 samples, 0.67%)</title><rect x="4.9950%" y="1189" width="0.6720%" height="15" fill="rgb(249,195,6)"/><text x="5.2450%" y="1199.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (54 samples, 0.60%)</title><rect x="5.0622%" y="1173" width="0.6048%" height="15" fill="rgb(237,174,47)"/><text x="5.3122%" y="1183.50"></text></g><g><title>alloc::alloc::exchange_malloc (50 samples, 0.56%)</title><rect x="5.1070%" y="1157" width="0.5600%" height="15" fill="rgb(206,201,31)"/><text x="5.3570%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (50 samples, 0.56%)</title><rect x="5.1070%" y="1141" width="0.5600%" height="15" fill="rgb(231,57,52)"/><text x="5.3570%" y="1151.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (50 samples, 0.56%)</title><rect x="5.1070%" y="1125" width="0.5600%" height="15" fill="rgb(248,177,22)"/><text x="5.3570%" y="1135.50"></text></g><g><title>alloc::alloc::alloc (50 samples, 0.56%)</title><rect x="5.1070%" y="1109" width="0.5600%" height="15" fill="rgb(215,211,37)"/><text x="5.3570%" y="1119.50"></text></g><g><title>__rdl_alloc (3 samples, 0.03%)</title><rect x="5.6333%" y="1093" width="0.0336%" height="15" fill="rgb(241,128,51)"/><text x="5.8833%" y="1103.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.03%)</title><rect x="5.6333%" y="1077" width="0.0336%" height="15" fill="rgb(227,165,31)"/><text x="5.8833%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (13 samples, 0.15%)</title><rect x="5.7117%" y="1173" width="0.1456%" height="15" fill="rgb(228,167,24)"/><text x="5.9617%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_swap (13 samples, 0.15%)</title><rect x="5.7117%" y="1157" width="0.1456%" height="15" fill="rgb(228,143,12)"/><text x="5.9617%" y="1167.50"></text></g><g><title>core::mem::drop (6 samples, 0.07%)</title><rect x="5.8573%" y="1157" width="0.0672%" height="15" fill="rgb(249,149,8)"/><text x="6.1073%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,()&gt;&gt; (6 samples, 0.07%)</title><rect x="5.8573%" y="1141" width="0.0672%" height="15" fill="rgb(243,35,44)"/><text x="6.1073%" y="1151.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.07%)</title><rect x="5.8573%" y="1125" width="0.0672%" height="15" fill="rgb(246,89,9)"/><text x="6.1073%" y="1135.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (6 samples, 0.07%)</title><rect x="5.8573%" y="1109" width="0.0672%" height="15" fill="rgb(233,213,13)"/><text x="6.1073%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (5 samples, 0.06%)</title><rect x="5.8685%" y="1093" width="0.0560%" height="15" fill="rgb(233,141,41)"/><text x="6.1185%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (5 samples, 0.06%)</title><rect x="5.8685%" y="1077" width="0.0560%" height="15" fill="rgb(239,167,4)"/><text x="6.1185%" y="1087.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (24 samples, 0.27%)</title><rect x="5.6781%" y="1205" width="0.2688%" height="15" fill="rgb(209,217,16)"/><text x="5.9281%" y="1215.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (22 samples, 0.25%)</title><rect x="5.7005%" y="1189" width="0.2464%" height="15" fill="rgb(219,88,35)"/><text x="5.9505%" y="1199.50"></text></g><g><title>tokio::runtime::park::Inner::unpark_condvar (8 samples, 0.09%)</title><rect x="5.8573%" y="1173" width="0.0896%" height="15" fill="rgb(220,193,23)"/><text x="6.1073%" y="1183.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (2 samples, 0.02%)</title><rect x="5.9245%" y="1157" width="0.0224%" height="15" fill="rgb(230,90,52)"/><text x="6.1745%" y="1167.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.02%)</title><rect x="5.9245%" y="1141" width="0.0224%" height="15" fill="rgb(252,106,19)"/><text x="6.1745%" y="1151.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.02%)</title><rect x="5.9245%" y="1125" width="0.0224%" height="15" fill="rgb(206,74,20)"/><text x="6.1745%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.01%)</title><rect x="5.9357%" y="1109" width="0.0112%" height="15" fill="rgb(230,138,44)"/><text x="6.1857%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="5.9357%" y="1093" width="0.0112%" height="15" fill="rgb(235,182,43)"/><text x="6.1857%" y="1103.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (577 samples, 6.46%)</title><rect x="5.9693%" y="1173" width="6.4621%" height="15" fill="rgb(242,16,51)"/><text x="6.2193%" y="1183.50">&lt;parking..</text></g><g><title>syscall (575 samples, 6.44%)</title><rect x="5.9917%" y="1157" width="6.4397%" height="15" fill="rgb(248,9,4)"/><text x="6.2417%" y="1167.50">syscall</text></g><g><title>[unknown] (568 samples, 6.36%)</title><rect x="6.0701%" y="1141" width="6.3613%" height="15" fill="rgb(210,31,22)"/><text x="6.3201%" y="1151.50">[unknown]</text></g><g><title>[unknown] (554 samples, 6.20%)</title><rect x="6.2269%" y="1125" width="6.2045%" height="15" fill="rgb(239,54,39)"/><text x="6.4769%" y="1135.50">[unknown]</text></g><g><title>[unknown] (544 samples, 6.09%)</title><rect x="6.3389%" y="1109" width="6.0925%" height="15" fill="rgb(230,99,41)"/><text x="6.5889%" y="1119.50">[unknown]</text></g><g><title>[unknown] (537 samples, 6.01%)</title><rect x="6.4173%" y="1093" width="6.0141%" height="15" fill="rgb(253,106,12)"/><text x="6.6673%" y="1103.50">[unknown]</text></g><g><title>[unknown] (532 samples, 5.96%)</title><rect x="6.4733%" y="1077" width="5.9581%" height="15" fill="rgb(213,46,41)"/><text x="6.7233%" y="1087.50">[unknown]</text></g><g><title>[unknown] (466 samples, 5.22%)</title><rect x="7.2125%" y="1061" width="5.2189%" height="15" fill="rgb(215,133,35)"/><text x="7.4625%" y="1071.50">[unkno..</text></g><g><title>[unknown] (430 samples, 4.82%)</title><rect x="7.6156%" y="1045" width="4.8158%" height="15" fill="rgb(213,28,5)"/><text x="7.8656%" y="1055.50">[unkno..</text></g><g><title>[unknown] (381 samples, 4.27%)</title><rect x="8.1644%" y="1029" width="4.2670%" height="15" fill="rgb(215,77,49)"/><text x="8.4144%" y="1039.50">[unkn..</text></g><g><title>[unknown] (330 samples, 3.70%)</title><rect x="8.7356%" y="1013" width="3.6958%" height="15" fill="rgb(248,100,22)"/><text x="8.9856%" y="1023.50">[unk..</text></g><g><title>[unknown] (230 samples, 2.58%)</title><rect x="9.8555%" y="997" width="2.5759%" height="15" fill="rgb(208,67,9)"/><text x="10.1055%" y="1007.50">[u..</text></g><g><title>[unknown] (130 samples, 1.46%)</title><rect x="10.9755%" y="981" width="1.4559%" height="15" fill="rgb(219,133,21)"/><text x="11.2255%" y="991.50"></text></g><g><title>[unknown] (42 samples, 0.47%)</title><rect x="11.9610%" y="965" width="0.4704%" height="15" fill="rgb(246,46,29)"/><text x="12.2110%" y="975.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="12.3530%" y="949" width="0.0784%" height="15" fill="rgb(246,185,52)"/><text x="12.6030%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="12.4202%" y="933" width="0.0112%" height="15" fill="rgb(252,136,11)"/><text x="12.6702%" y="943.50"></text></g><g><title>core::ops::function::FnOnce::call_once (3 samples, 0.03%)</title><rect x="12.4314%" y="1173" width="0.0336%" height="15" fill="rgb(219,138,53)"/><text x="12.6814%" y="1183.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow::{{closure}} (3 samples, 0.03%)</title><rect x="12.4314%" y="1157" width="0.0336%" height="15" fill="rgb(211,51,23)"/><text x="12.6814%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (14 samples, 0.16%)</title><rect x="12.4650%" y="1173" width="0.1568%" height="15" fill="rgb(247,221,28)"/><text x="12.7150%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.16%)</title><rect x="12.4650%" y="1157" width="0.1568%" height="15" fill="rgb(251,222,45)"/><text x="12.7150%" y="1167.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (11 samples, 0.12%)</title><rect x="12.6218%" y="1173" width="0.1232%" height="15" fill="rgb(217,162,53)"/><text x="12.8718%" y="1183.50"></text></g><g><title>std::time::Instant::now (10 samples, 0.11%)</title><rect x="12.6330%" y="1157" width="0.1120%" height="15" fill="rgb(229,93,14)"/><text x="12.8830%" y="1167.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (10 samples, 0.11%)</title><rect x="12.6330%" y="1141" width="0.1120%" height="15" fill="rgb(209,67,49)"/><text x="12.8830%" y="1151.50"></text></g><g><title>std::sys::unix::time::inner::now (10 samples, 0.11%)</title><rect x="12.6330%" y="1125" width="0.1120%" height="15" fill="rgb(213,87,29)"/><text x="12.8830%" y="1135.50"></text></g><g><title>__clock_gettime (10 samples, 0.11%)</title><rect x="12.6330%" y="1109" width="0.1120%" height="15" fill="rgb(205,151,52)"/><text x="12.8830%" y="1119.50"></text></g><g><title>__vdso_clock_gettime (10 samples, 0.11%)</title><rect x="12.6330%" y="1093" width="0.1120%" height="15" fill="rgb(253,215,39)"/><text x="12.8830%" y="1103.50"></text></g><g><title>parking_lot_core::parking_lot::hash (1 samples, 0.01%)</title><rect x="12.7450%" y="1157" width="0.0112%" height="15" fill="rgb(221,220,41)"/><text x="12.9950%" y="1167.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (16 samples, 0.18%)</title><rect x="12.7450%" y="1173" width="0.1792%" height="15" fill="rgb(218,133,21)"/><text x="12.9950%" y="1183.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (15 samples, 0.17%)</title><rect x="12.7562%" y="1157" width="0.1680%" height="15" fill="rgb(221,193,43)"/><text x="13.0062%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (15 samples, 0.17%)</title><rect x="12.7562%" y="1141" width="0.1680%" height="15" fill="rgb(240,128,52)"/><text x="13.0062%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (15 samples, 0.17%)</title><rect x="12.7562%" y="1125" width="0.1680%" height="15" fill="rgb(253,114,12)"/><text x="13.0062%" y="1135.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (635 samples, 7.11%)</title><rect x="5.9469%" y="1205" width="7.1117%" height="15" fill="rgb(215,223,47)"/><text x="6.1969%" y="1215.50">parking_lo..</text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (635 samples, 7.11%)</title><rect x="5.9469%" y="1189" width="7.1117%" height="15" fill="rgb(248,225,23)"/><text x="6.1969%" y="1199.50">parking_lo..</text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (12 samples, 0.13%)</title><rect x="12.9242%" y="1173" width="0.1344%" height="15" fill="rgb(250,108,0)"/><text x="13.1742%" y="1183.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (12 samples, 0.13%)</title><rect x="12.9242%" y="1157" width="0.1344%" height="15" fill="rgb(228,208,7)"/><text x="13.1742%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (11 samples, 0.12%)</title><rect x="12.9354%" y="1141" width="0.1232%" height="15" fill="rgb(244,45,10)"/><text x="13.1854%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_sub (11 samples, 0.12%)</title><rect x="12.9354%" y="1125" width="0.1232%" height="15" fill="rgb(207,125,25)"/><text x="13.1854%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::queue::Pointers&gt;&gt; (11 samples, 0.12%)</title><rect x="13.0810%" y="1157" width="0.1232%" height="15" fill="rgb(210,195,18)"/><text x="13.3310%" y="1167.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.12%)</title><rect x="13.0810%" y="1141" width="0.1232%" height="15" fill="rgb(249,80,12)"/><text x="13.3310%" y="1151.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (11 samples, 0.12%)</title><rect x="13.0810%" y="1125" width="0.1232%" height="15" fill="rgb(221,65,9)"/><text x="13.3310%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (11 samples, 0.12%)</title><rect x="13.0810%" y="1109" width="0.1232%" height="15" fill="rgb(235,49,36)"/><text x="13.3310%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (11 samples, 0.12%)</title><rect x="13.0810%" y="1093" width="0.1232%" height="15" fill="rgb(225,32,20)"/><text x="13.3310%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (1 samples, 0.01%)</title><rect x="13.2042%" y="1157" width="0.0112%" height="15" fill="rgb(215,141,46)"/><text x="13.4542%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_store (1 samples, 0.01%)</title><rect x="13.2042%" y="1141" width="0.0112%" height="15" fill="rgb(250,160,47)"/><text x="13.4542%" y="1151.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::push (35 samples, 0.39%)</title><rect x="13.0810%" y="1173" width="0.3920%" height="15" fill="rgb(216,222,40)"/><text x="13.3310%" y="1183.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (23 samples, 0.26%)</title><rect x="13.2154%" y="1157" width="0.2576%" height="15" fill="rgb(234,217,39)"/><text x="13.4654%" y="1167.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (23 samples, 0.26%)</title><rect x="13.2154%" y="1141" width="0.2576%" height="15" fill="rgb(207,178,40)"/><text x="13.4654%" y="1151.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (23 samples, 0.26%)</title><rect x="13.2154%" y="1125" width="0.2576%" height="15" fill="rgb(221,136,13)"/><text x="13.4654%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (23 samples, 0.26%)</title><rect x="13.2154%" y="1109" width="0.2576%" height="15" fill="rgb(249,199,10)"/><text x="13.4654%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (23 samples, 0.26%)</title><rect x="13.2154%" y="1093" width="0.2576%" height="15" fill="rgb(249,222,13)"/><text x="13.4654%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (13 samples, 0.15%)</title><rect x="13.4842%" y="1141" width="0.1456%" height="15" fill="rgb(244,185,38)"/><text x="13.7342%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;usize&gt;&gt;&gt; (4 samples, 0.04%)</title><rect x="13.6297%" y="1141" width="0.0448%" height="15" fill="rgb(236,202,9)"/><text x="13.8797%" y="1151.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="13.6297%" y="1125" width="0.0448%" height="15" fill="rgb(250,229,37)"/><text x="13.8797%" y="1135.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (4 samples, 0.04%)</title><rect x="13.6297%" y="1109" width="0.0448%" height="15" fill="rgb(206,174,23)"/><text x="13.8797%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (4 samples, 0.04%)</title><rect x="13.6297%" y="1093" width="0.0448%" height="15" fill="rgb(211,33,43)"/><text x="13.8797%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.04%)</title><rect x="13.6297%" y="1077" width="0.0448%" height="15" fill="rgb(245,58,50)"/><text x="13.8797%" y="1087.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::notify_should_wakeup (18 samples, 0.20%)</title><rect x="13.6745%" y="1141" width="0.2016%" height="15" fill="rgb(244,68,36)"/><text x="13.9245%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (18 samples, 0.20%)</title><rect x="13.6745%" y="1125" width="0.2016%" height="15" fill="rgb(232,229,15)"/><text x="13.9245%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_add (18 samples, 0.20%)</title><rect x="13.6745%" y="1109" width="0.2016%" height="15" fill="rgb(254,30,23)"/><text x="13.9245%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,183 samples, 13.25%)</title><rect x="0.7280%" y="1349" width="13.2490%" height="15" fill="rgb(235,160,14)"/><text x="0.9780%" y="1359.50">&lt;core::future::from_..</text></g><g><title>rho_runtime::run::{{closure}} (1,181 samples, 13.23%)</title><rect x="0.7504%" y="1333" width="13.2266%" height="15" fill="rgb(212,155,44)"/><text x="1.0004%" y="1343.50">rho_runtime::run::{{..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,181 samples, 13.23%)</title><rect x="0.7504%" y="1317" width="13.2266%" height="15" fill="rgb(226,2,50)"/><text x="1.0004%" y="1327.50">&lt;core::future::from_..</text></g><g><title>rho_runtime::storage::coordinator::Coordinator::run::{{closure}} (1,181 samples, 13.23%)</title><rect x="0.7504%" y="1301" width="13.2266%" height="15" fill="rgb(234,177,6)"/><text x="1.0004%" y="1311.50">rho_runtime::storage..</text></g><g><title>rho_runtime::storage::coordinator::Coordinator::handle_produce (1,042 samples, 11.67%)</title><rect x="2.3071%" y="1285" width="11.6698%" height="15" fill="rgb(217,24,9)"/><text x="2.5571%" y="1295.50">rho_runtime::stor..</text></g><g><title>tokio::task::spawn::spawn (842 samples, 9.43%)</title><rect x="4.5470%" y="1269" width="9.4299%" height="15" fill="rgb(220,13,46)"/><text x="4.7970%" y="1279.50">tokio::task::..</text></g><g><title>tokio::runtime::spawner::Spawner::spawn (814 samples, 9.12%)</title><rect x="4.8606%" y="1253" width="9.1164%" height="15" fill="rgb(239,221,27)"/><text x="5.1106%" y="1263.50">tokio::runtim..</text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (814 samples, 9.12%)</title><rect x="4.8606%" y="1237" width="9.1164%" height="15" fill="rgb(222,198,25)"/><text x="5.1106%" y="1247.50">tokio::runtim..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (742 samples, 8.31%)</title><rect x="5.6669%" y="1221" width="8.3100%" height="15" fill="rgb(211,99,13)"/><text x="5.9169%" y="1231.50">tokio::runti..</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (82 samples, 0.92%)</title><rect x="13.0586%" y="1205" width="0.9184%" height="15" fill="rgb(232,111,31)"/><text x="13.3086%" y="1215.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (82 samples, 0.92%)</title><rect x="13.0586%" y="1189" width="0.9184%" height="15" fill="rgb(245,82,37)"/><text x="13.3086%" y="1199.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (45 samples, 0.50%)</title><rect x="13.4730%" y="1173" width="0.5040%" height="15" fill="rgb(227,149,46)"/><text x="13.7230%" y="1183.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::worker_to_notify (44 samples, 0.49%)</title><rect x="13.4842%" y="1157" width="0.4928%" height="15" fill="rgb(218,36,50)"/><text x="13.7342%" y="1167.50"></text></g><g><title>tokio::runtime::thread_pool::idle::State::unpark_one (9 samples, 0.10%)</title><rect x="13.8761%" y="1141" width="0.1008%" height="15" fill="rgb(226,80,48)"/><text x="14.1261%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (9 samples, 0.10%)</title><rect x="13.8761%" y="1125" width="0.1008%" height="15" fill="rgb(238,224,15)"/><text x="14.1261%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_add (9 samples, 0.10%)</title><rect x="13.8761%" y="1109" width="0.1008%" height="15" fill="rgb(241,136,10)"/><text x="14.1261%" y="1119.50"></text></g><g><title>&lt;tokio::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="13.9769%" y="1349" width="0.0336%" height="15" fill="rgb(208,32,45)"/><text x="14.2269%" y="1359.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (1 samples, 0.01%)</title><rect x="14.0105%" y="1349" width="0.0112%" height="15" fill="rgb(207,135,9)"/><text x="14.2605%" y="1359.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="14.0217%" y="1349" width="0.0336%" height="15" fill="rgb(206,86,44)"/><text x="14.2717%" y="1359.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="14.0441%" y="1333" width="0.0112%" height="15" fill="rgb(245,177,15)"/><text x="14.2941%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.0441%" y="1317" width="0.0112%" height="15" fill="rgb(206,64,50)"/><text x="14.2941%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.0441%" y="1301" width="0.0112%" height="15" fill="rgb(234,36,40)"/><text x="14.2941%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.0441%" y="1285" width="0.0112%" height="15" fill="rgb(213,64,8)"/><text x="14.2941%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.0441%" y="1269" width="0.0112%" height="15" fill="rgb(210,75,36)"/><text x="14.2941%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.0553%" y="1349" width="0.0112%" height="15" fill="rgb(229,88,21)"/><text x="14.3053%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.0553%" y="1333" width="0.0112%" height="15" fill="rgb(252,204,47)"/><text x="14.3053%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.0553%" y="1317" width="0.0112%" height="15" fill="rgb(208,77,27)"/><text x="14.3053%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.0553%" y="1301" width="0.0112%" height="15" fill="rgb(221,76,26)"/><text x="14.3053%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.0553%" y="1285" width="0.0112%" height="15" fill="rgb(225,139,18)"/><text x="14.3053%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.0553%" y="1269" width="0.0112%" height="15" fill="rgb(230,137,11)"/><text x="14.3053%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.0553%" y="1253" width="0.0112%" height="15" fill="rgb(212,28,1)"/><text x="14.3053%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.0553%" y="1237" width="0.0112%" height="15" fill="rgb(248,164,17)"/><text x="14.3053%" y="1247.50"></text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="14.0665%" y="1349" width="0.0224%" height="15" fill="rgb(222,171,42)"/><text x="14.3165%" y="1359.50"></text></g><g><title>__rust_probestack (7 samples, 0.08%)</title><rect x="14.0889%" y="1349" width="0.0784%" height="15" fill="rgb(243,84,45)"/><text x="14.3389%" y="1359.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (1 samples, 0.01%)</title><rect x="14.1785%" y="1301" width="0.0112%" height="15" fill="rgb(252,49,23)"/><text x="14.4285%" y="1311.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (1 samples, 0.01%)</title><rect x="14.1785%" y="1285" width="0.0112%" height="15" fill="rgb(215,19,7)"/><text x="14.4285%" y="1295.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (1 samples, 0.01%)</title><rect x="14.1785%" y="1269" width="0.0112%" height="15" fill="rgb(238,81,41)"/><text x="14.4285%" y="1279.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (3 samples, 0.03%)</title><rect x="14.1673%" y="1349" width="0.0336%" height="15" fill="rgb(210,199,37)"/><text x="14.4173%" y="1359.50"></text></g><g><title>parking_lot_core::parking_lot::park (2 samples, 0.02%)</title><rect x="14.1785%" y="1333" width="0.0224%" height="15" fill="rgb(244,192,49)"/><text x="14.4285%" y="1343.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (2 samples, 0.02%)</title><rect x="14.1785%" y="1317" width="0.0224%" height="15" fill="rgb(226,211,11)"/><text x="14.4285%" y="1327.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="14.1897%" y="1301" width="0.0112%" height="15" fill="rgb(236,162,54)"/><text x="14.4397%" y="1311.50"></text></g><g><title>rho_runtime::main (4 samples, 0.04%)</title><rect x="14.2009%" y="1349" width="0.0448%" height="15" fill="rgb(220,229,9)"/><text x="14.4509%" y="1359.50"></text></g><g><title>tokio::runtime::Runtime::block_on (4 samples, 0.04%)</title><rect x="14.2009%" y="1333" width="0.0448%" height="15" fill="rgb(250,87,22)"/><text x="14.4509%" y="1343.50"></text></g><g><title>tokio::runtime::thread_pool::ThreadPool::block_on (4 samples, 0.04%)</title><rect x="14.2009%" y="1317" width="0.0448%" height="15" fill="rgb(239,43,17)"/><text x="14.4509%" y="1327.50"></text></g><g><title>tokio::runtime::enter::Enter::block_on (4 samples, 0.04%)</title><rect x="14.2009%" y="1301" width="0.0448%" height="15" fill="rgb(231,177,25)"/><text x="14.4509%" y="1311.50"></text></g><g><title>tokio::park::thread::CachedParkThread::block_on (4 samples, 0.04%)</title><rect x="14.2009%" y="1285" width="0.0448%" height="15" fill="rgb(219,179,1)"/><text x="14.4509%" y="1295.50"></text></g><g><title>tokio::coop::budget (4 samples, 0.04%)</title><rect x="14.2009%" y="1269" width="0.0448%" height="15" fill="rgb(238,219,53)"/><text x="14.4509%" y="1279.50"></text></g><g><title>tokio::coop::with_budget (4 samples, 0.04%)</title><rect x="14.2009%" y="1253" width="0.0448%" height="15" fill="rgb(232,167,36)"/><text x="14.4509%" y="1263.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.04%)</title><rect x="14.2009%" y="1237" width="0.0448%" height="15" fill="rgb(244,19,51)"/><text x="14.4509%" y="1247.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.04%)</title><rect x="14.2009%" y="1221" width="0.0448%" height="15" fill="rgb(224,6,22)"/><text x="14.4509%" y="1231.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (4 samples, 0.04%)</title><rect x="14.2009%" y="1205" width="0.0448%" height="15" fill="rgb(224,145,5)"/><text x="14.4509%" y="1215.50"></text></g><g><title>tokio::park::thread::CachedParkThread::block_on::{{closure}} (4 samples, 0.04%)</title><rect x="14.2009%" y="1189" width="0.0448%" height="15" fill="rgb(234,130,49)"/><text x="14.4509%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.04%)</title><rect x="14.2009%" y="1173" width="0.0448%" height="15" fill="rgb(254,6,2)"/><text x="14.4509%" y="1183.50"></text></g><g><title>__rust_probestack (4 samples, 0.04%)</title><rect x="14.2009%" y="1157" width="0.0448%" height="15" fill="rgb(208,96,46)"/><text x="14.4509%" y="1167.50"></text></g><g><title>tokio::coop::CURRENT::__getit (1 samples, 0.01%)</title><rect x="14.2457%" y="1349" width="0.0112%" height="15" fill="rgb(239,3,39)"/><text x="14.4957%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::coop::RestoreOnPending&gt; (2 samples, 0.02%)</title><rect x="14.2905%" y="1077" width="0.0224%" height="15" fill="rgb(233,210,1)"/><text x="14.5405%" y="1087.50"></text></g><g><title>&lt;tokio::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="14.3017%" y="1061" width="0.0112%" height="15" fill="rgb(244,137,37)"/><text x="14.5517%" y="1071.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (9 samples, 0.10%)</title><rect x="14.3129%" y="1013" width="0.1008%" height="15" fill="rgb(240,136,2)"/><text x="14.5629%" y="1023.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (9 samples, 0.10%)</title><rect x="14.3129%" y="997" width="0.1008%" height="15" fill="rgb(239,18,37)"/><text x="14.5629%" y="1007.50"></text></g><g><title>core::mem::replace (9 samples, 0.10%)</title><rect x="14.3129%" y="981" width="0.1008%" height="15" fill="rgb(218,185,22)"/><text x="14.5629%" y="991.50"></text></g><g><title>core::mem::swap (9 samples, 0.10%)</title><rect x="14.3129%" y="965" width="0.1008%" height="15" fill="rgb(225,218,4)"/><text x="14.5629%" y="975.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (9 samples, 0.10%)</title><rect x="14.3129%" y="949" width="0.1008%" height="15" fill="rgb(230,182,32)"/><text x="14.5629%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.10%)</title><rect x="14.3129%" y="933" width="0.1008%" height="15" fill="rgb(242,56,43)"/><text x="14.5629%" y="943.50"></text></g><g><title>tokio::coop::poll_proceed (11 samples, 0.12%)</title><rect x="14.3129%" y="1077" width="0.1232%" height="15" fill="rgb(233,99,24)"/><text x="14.5629%" y="1087.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (11 samples, 0.12%)</title><rect x="14.3129%" y="1061" width="0.1232%" height="15" fill="rgb(234,209,42)"/><text x="14.5629%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11 samples, 0.12%)</title><rect x="14.3129%" y="1045" width="0.1232%" height="15" fill="rgb(227,7,12)"/><text x="14.5629%" y="1055.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (11 samples, 0.12%)</title><rect x="14.3129%" y="1029" width="0.1232%" height="15" fill="rgb(245,203,43)"/><text x="14.5629%" y="1039.50"></text></g><g><title>tokio::coop::Budget::decrement (2 samples, 0.02%)</title><rect x="14.4137%" y="1013" width="0.0224%" height="15" fill="rgb(238,205,33)"/><text x="14.6637%" y="1023.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.12%)</title><rect x="14.4921%" y="1045" width="0.1232%" height="15" fill="rgb(231,56,7)"/><text x="14.7421%" y="1055.50"></text></g><g><title>tokio::coop::RestoreOnPending::made_progress (1 samples, 0.01%)</title><rect x="14.6153%" y="1045" width="0.0112%" height="15" fill="rgb(244,186,29)"/><text x="14.8653%" y="1055.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.01%)</title><rect x="14.6153%" y="1029" width="0.0112%" height="15" fill="rgb(234,111,31)"/><text x="14.8653%" y="1039.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.01%)</title><rect x="14.6153%" y="1013" width="0.0112%" height="15" fill="rgb(241,149,10)"/><text x="14.8653%" y="1023.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="14.6153%" y="997" width="0.0112%" height="15" fill="rgb(249,206,44)"/><text x="14.8653%" y="1007.50"></text></g><g><title>core::mem::swap (1 samples, 0.01%)</title><rect x="14.6153%" y="981" width="0.0112%" height="15" fill="rgb(251,153,30)"/><text x="14.8653%" y="991.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.01%)</title><rect x="14.6153%" y="965" width="0.0112%" height="15" fill="rgb(239,152,38)"/><text x="14.8653%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="14.6153%" y="949" width="0.0112%" height="15" fill="rgb(249,139,47)"/><text x="14.8653%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (5 samples, 0.06%)</title><rect x="14.6377%" y="1013" width="0.0560%" height="15" fill="rgb(244,64,35)"/><text x="14.8877%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (5 samples, 0.06%)</title><rect x="14.6377%" y="997" width="0.0560%" height="15" fill="rgb(216,46,15)"/><text x="14.8877%" y="1007.50"></text></g><g><title>tokio::runtime::enter::Enter::block_on (41 samples, 0.46%)</title><rect x="14.2569%" y="1349" width="0.4592%" height="15" fill="rgb(250,74,19)"/><text x="14.5069%" y="1359.50"></text></g><g><title>tokio::park::thread::CachedParkThread::block_on (41 samples, 0.46%)</title><rect x="14.2569%" y="1333" width="0.4592%" height="15" fill="rgb(249,42,33)"/><text x="14.5069%" y="1343.50"></text></g><g><title>tokio::coop::budget (41 samples, 0.46%)</title><rect x="14.2569%" y="1317" width="0.4592%" height="15" fill="rgb(242,149,17)"/><text x="14.5069%" y="1327.50"></text></g><g><title>tokio::coop::with_budget (41 samples, 0.46%)</title><rect x="14.2569%" y="1301" width="0.4592%" height="15" fill="rgb(244,29,21)"/><text x="14.5069%" y="1311.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (41 samples, 0.46%)</title><rect x="14.2569%" y="1285" width="0.4592%" height="15" fill="rgb(220,130,37)"/><text x="14.5069%" y="1295.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (41 samples, 0.46%)</title><rect x="14.2569%" y="1269" width="0.4592%" height="15" fill="rgb(211,67,2)"/><text x="14.5069%" y="1279.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (41 samples, 0.46%)</title><rect x="14.2569%" y="1253" width="0.4592%" height="15" fill="rgb(235,68,52)"/><text x="14.5069%" y="1263.50"></text></g><g><title>tokio::park::thread::CachedParkThread::block_on::{{closure}} (41 samples, 0.46%)</title><rect x="14.2569%" y="1237" width="0.4592%" height="15" fill="rgb(246,142,3)"/><text x="14.5069%" y="1247.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (41 samples, 0.46%)</title><rect x="14.2569%" y="1221" width="0.4592%" height="15" fill="rgb(241,25,7)"/><text x="14.5069%" y="1231.50"></text></g><g><title>rho_runtime::run::{{closure}} (41 samples, 0.46%)</title><rect x="14.2569%" y="1205" width="0.4592%" height="15" fill="rgb(242,119,39)"/><text x="14.5069%" y="1215.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (41 samples, 0.46%)</title><rect x="14.2569%" y="1189" width="0.4592%" height="15" fill="rgb(241,98,45)"/><text x="14.5069%" y="1199.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::run::{{closure}} (41 samples, 0.46%)</title><rect x="14.2569%" y="1173" width="0.4592%" height="15" fill="rgb(254,28,30)"/><text x="14.5069%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (41 samples, 0.46%)</title><rect x="14.2569%" y="1157" width="0.4592%" height="15" fill="rgb(241,142,54)"/><text x="14.5069%" y="1167.50"></text></g><g><title>tokio::sync::mpsc::bounded::Receiver&lt;T&gt;::recv::{{closure}} (41 samples, 0.46%)</title><rect x="14.2569%" y="1141" width="0.4592%" height="15" fill="rgb(222,85,15)"/><text x="14.5069%" y="1151.50"></text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (41 samples, 0.46%)</title><rect x="14.2569%" y="1125" width="0.4592%" height="15" fill="rgb(210,85,47)"/><text x="14.5069%" y="1135.50"></text></g><g><title>tokio::sync::mpsc::bounded::Receiver&lt;T&gt;::recv::{{closure}}::{{closure}} (41 samples, 0.46%)</title><rect x="14.2569%" y="1109" width="0.4592%" height="15" fill="rgb(224,206,25)"/><text x="14.5069%" y="1119.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (41 samples, 0.46%)</title><rect x="14.2569%" y="1093" width="0.4592%" height="15" fill="rgb(243,201,19)"/><text x="14.5069%" y="1103.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (25 samples, 0.28%)</title><rect x="14.4361%" y="1077" width="0.2800%" height="15" fill="rgb(236,59,4)"/><text x="14.6861%" y="1087.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv::{{closure}} (24 samples, 0.27%)</title><rect x="14.4473%" y="1061" width="0.2688%" height="15" fill="rgb(254,179,45)"/><text x="14.6973%" y="1071.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::register_by_ref (8 samples, 0.09%)</title><rect x="14.6265%" y="1045" width="0.0896%" height="15" fill="rgb(226,14,10)"/><text x="14.8765%" y="1055.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register (8 samples, 0.09%)</title><rect x="14.6265%" y="1029" width="0.0896%" height="15" fill="rgb(244,27,41)"/><text x="14.8765%" y="1039.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2 samples, 0.02%)</title><rect x="14.6937%" y="1013" width="0.0224%" height="15" fill="rgb(235,35,32)"/><text x="14.9437%" y="1023.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::do_register::{{closure}} (2 samples, 0.02%)</title><rect x="14.6937%" y="997" width="0.0224%" height="15" fill="rgb(218,68,31)"/><text x="14.9437%" y="1007.50"></text></g><g><title>&lt;&amp;core::task::wake::Waker as tokio::sync::task::atomic_waker::WakerRef&gt;::into_waker (2 samples, 0.02%)</title><rect x="14.6937%" y="981" width="0.0224%" height="15" fill="rgb(207,120,37)"/><text x="14.9437%" y="991.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="14.6937%" y="965" width="0.0224%" height="15" fill="rgb(227,98,0)"/><text x="14.9437%" y="975.50"></text></g><g><title>tokio::park::thread::clone (1 samples, 0.01%)</title><rect x="14.7049%" y="949" width="0.0112%" height="15" fill="rgb(207,7,3)"/><text x="14.9549%" y="959.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="14.7049%" y="933" width="0.0112%" height="15" fill="rgb(206,98,19)"/><text x="14.9549%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="14.7049%" y="917" width="0.0112%" height="15" fill="rgb(217,5,26)"/><text x="14.9549%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="14.7049%" y="901" width="0.0112%" height="15" fill="rgb(235,190,38)"/><text x="14.9549%" y="911.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (1 samples, 0.01%)</title><rect x="14.7161%" y="1349" width="0.0112%" height="15" fill="rgb(247,86,24)"/><text x="14.9661%" y="1359.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.09%)</title><rect x="14.8169%" y="1141" width="0.0896%" height="15" fill="rgb(205,101,16)"/><text x="15.0669%" y="1151.50"></text></g><g><title>tokio::sync::mpsc::bounded::Receiver&lt;T&gt;::recv::{{closure}} (8 samples, 0.09%)</title><rect x="14.8169%" y="1125" width="0.0896%" height="15" fill="rgb(246,168,33)"/><text x="15.0669%" y="1135.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.04%)</title><rect x="14.8617%" y="1109" width="0.0448%" height="15" fill="rgb(231,114,1)"/><text x="15.1117%" y="1119.50"></text></g><g><title>tokio::runtime::thread_pool::ThreadPool::block_on (39 samples, 0.44%)</title><rect x="14.7273%" y="1349" width="0.4368%" height="15" fill="rgb(207,184,53)"/><text x="14.9773%" y="1359.50"></text></g><g><title>tokio::runtime::enter::Enter::block_on (39 samples, 0.44%)</title><rect x="14.7273%" y="1333" width="0.4368%" height="15" fill="rgb(224,95,51)"/><text x="14.9773%" y="1343.50"></text></g><g><title>tokio::park::thread::CachedParkThread::block_on (39 samples, 0.44%)</title><rect x="14.7273%" y="1317" width="0.4368%" height="15" fill="rgb(212,188,45)"/><text x="14.9773%" y="1327.50"></text></g><g><title>tokio::coop::budget (39 samples, 0.44%)</title><rect x="14.7273%" y="1301" width="0.4368%" height="15" fill="rgb(223,154,38)"/><text x="14.9773%" y="1311.50"></text></g><g><title>tokio::coop::with_budget (39 samples, 0.44%)</title><rect x="14.7273%" y="1285" width="0.4368%" height="15" fill="rgb(251,22,52)"/><text x="14.9773%" y="1295.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 samples, 0.44%)</title><rect x="14.7273%" y="1269" width="0.4368%" height="15" fill="rgb(229,209,22)"/><text x="14.9773%" y="1279.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (39 samples, 0.44%)</title><rect x="14.7273%" y="1253" width="0.4368%" height="15" fill="rgb(234,138,34)"/><text x="14.9773%" y="1263.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (39 samples, 0.44%)</title><rect x="14.7273%" y="1237" width="0.4368%" height="15" fill="rgb(212,95,11)"/><text x="14.9773%" y="1247.50"></text></g><g><title>tokio::park::thread::CachedParkThread::block_on::{{closure}} (39 samples, 0.44%)</title><rect x="14.7273%" y="1221" width="0.4368%" height="15" fill="rgb(240,179,47)"/><text x="14.9773%" y="1231.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (39 samples, 0.44%)</title><rect x="14.7273%" y="1205" width="0.4368%" height="15" fill="rgb(240,163,11)"/><text x="14.9773%" y="1215.50"></text></g><g><title>rho_runtime::run::{{closure}} (38 samples, 0.43%)</title><rect x="14.7385%" y="1189" width="0.4256%" height="15" fill="rgb(236,37,12)"/><text x="14.9885%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (38 samples, 0.43%)</title><rect x="14.7385%" y="1173" width="0.4256%" height="15" fill="rgb(232,164,16)"/><text x="14.9885%" y="1183.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::run::{{closure}} (38 samples, 0.43%)</title><rect x="14.7385%" y="1157" width="0.4256%" height="15" fill="rgb(244,205,15)"/><text x="14.9885%" y="1167.50"></text></g><g><title>[libc-2.31.so] (23 samples, 0.26%)</title><rect x="14.9065%" y="1141" width="0.2576%" height="15" fill="rgb(223,117,47)"/><text x="15.1565%" y="1151.50"></text></g><g><title>tokio::sync::mpsc::chan::Rx&lt;T,S&gt;::recv (1 samples, 0.01%)</title><rect x="15.1641%" y="1349" width="0.0112%" height="15" fill="rgb(244,107,35)"/><text x="15.4141%" y="1359.50"></text></g><g><title>[unknown] (1,302 samples, 14.58%)</title><rect x="0.6720%" y="1365" width="14.5817%" height="15" fill="rgb(205,140,8)"/><text x="0.9220%" y="1375.50">[unknown]</text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (7 samples, 0.08%)</title><rect x="15.1753%" y="1349" width="0.0784%" height="15" fill="rgb(228,84,46)"/><text x="15.4253%" y="1359.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="15.2537%" y="1365" width="0.0112%" height="15" fill="rgb(254,188,9)"/><text x="15.5037%" y="1375.50"></text></g><g><title>tokio::park::thread::CURRENT_PARKER::__getit (3 samples, 0.03%)</title><rect x="15.4665%" y="1061" width="0.0336%" height="15" fill="rgb(206,112,54)"/><text x="15.7165%" y="1071.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (3 samples, 0.03%)</title><rect x="15.4665%" y="1045" width="0.0336%" height="15" fill="rgb(216,84,49)"/><text x="15.7165%" y="1055.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (2 samples, 0.02%)</title><rect x="15.4777%" y="1029" width="0.0224%" height="15" fill="rgb(214,194,35)"/><text x="15.7277%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="15.4777%" y="1013" width="0.0224%" height="15" fill="rgb(249,28,3)"/><text x="15.7277%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,()&gt;&gt; (6 samples, 0.07%)</title><rect x="15.6568%" y="1013" width="0.0672%" height="15" fill="rgb(222,56,52)"/><text x="15.9068%" y="1023.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.07%)</title><rect x="15.6568%" y="997" width="0.0672%" height="15" fill="rgb(245,217,50)"/><text x="15.9068%" y="1007.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (6 samples, 0.07%)</title><rect x="15.6568%" y="981" width="0.0672%" height="15" fill="rgb(213,201,24)"/><text x="15.9068%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (5 samples, 0.06%)</title><rect x="15.6680%" y="965" width="0.0560%" height="15" fill="rgb(248,116,28)"/><text x="15.9180%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (5 samples, 0.06%)</title><rect x="15.6680%" y="949" width="0.0560%" height="15" fill="rgb(219,72,43)"/><text x="15.9180%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (23 samples, 0.26%)</title><rect x="15.7240%" y="1013" width="0.2576%" height="15" fill="rgb(209,138,14)"/><text x="15.9740%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (23 samples, 0.26%)</title><rect x="15.7240%" y="997" width="0.2576%" height="15" fill="rgb(222,18,33)"/><text x="15.9740%" y="1007.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (9 samples, 0.10%)</title><rect x="15.9928%" y="965" width="0.1008%" height="15" fill="rgb(213,199,7)"/><text x="16.2428%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (9 samples, 0.10%)</title><rect x="15.9928%" y="949" width="0.1008%" height="15" fill="rgb(250,110,10)"/><text x="16.2428%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (9 samples, 0.10%)</title><rect x="15.9928%" y="933" width="0.1008%" height="15" fill="rgb(248,123,6)"/><text x="16.2428%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (36 samples, 0.40%)</title><rect x="16.0936%" y="901" width="0.4032%" height="15" fill="rgb(206,91,31)"/><text x="16.3436%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_load (36 samples, 0.40%)</title><rect x="16.0936%" y="885" width="0.4032%" height="15" fill="rgb(211,154,13)"/><text x="16.3436%" y="895.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (690 samples, 7.73%)</title><rect x="16.0936%" y="917" width="7.7276%" height="15" fill="rgb(225,148,7)"/><text x="16.3436%" y="927.50">&lt;parking_lo..</text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (654 samples, 7.32%)</title><rect x="16.4968%" y="901" width="7.3244%" height="15" fill="rgb(220,160,43)"/><text x="16.7468%" y="911.50">parking_lo..</text></g><g><title>syscall (654 samples, 7.32%)</title><rect x="16.4968%" y="885" width="7.3244%" height="15" fill="rgb(213,52,39)"/><text x="16.7468%" y="895.50">syscall</text></g><g><title>[unknown] (646 samples, 7.23%)</title><rect x="16.5864%" y="869" width="7.2349%" height="15" fill="rgb(243,137,7)"/><text x="16.8364%" y="879.50">[unknown]</text></g><g><title>[unknown] (614 samples, 6.88%)</title><rect x="16.9448%" y="853" width="6.8765%" height="15" fill="rgb(230,79,13)"/><text x="17.1948%" y="863.50">[unknown]</text></g><g><title>[unknown] (601 samples, 6.73%)</title><rect x="17.0904%" y="837" width="6.7309%" height="15" fill="rgb(247,105,23)"/><text x="17.3404%" y="847.50">[unknown]</text></g><g><title>[unknown] (589 samples, 6.60%)</title><rect x="17.2248%" y="821" width="6.5965%" height="15" fill="rgb(223,179,41)"/><text x="17.4748%" y="831.50">[unknown]</text></g><g><title>[unknown] (574 samples, 6.43%)</title><rect x="17.3928%" y="805" width="6.4285%" height="15" fill="rgb(218,9,34)"/><text x="17.6428%" y="815.50">[unknown]</text></g><g><title>[unknown] (545 samples, 6.10%)</title><rect x="17.7175%" y="789" width="6.1037%" height="15" fill="rgb(222,106,8)"/><text x="17.9675%" y="799.50">[unknown]</text></g><g><title>[unknown] (499 samples, 5.59%)</title><rect x="18.2327%" y="773" width="5.5885%" height="15" fill="rgb(211,220,0)"/><text x="18.4827%" y="783.50">[unknow..</text></g><g><title>[unknown] (469 samples, 5.25%)</title><rect x="18.5687%" y="757" width="5.2525%" height="15" fill="rgb(229,52,16)"/><text x="18.8187%" y="767.50">[unkno..</text></g><g><title>[unknown] (421 samples, 4.71%)</title><rect x="19.1063%" y="741" width="4.7150%" height="15" fill="rgb(212,155,18)"/><text x="19.3563%" y="751.50">[unkn..</text></g><g><title>[unknown] (317 samples, 3.55%)</title><rect x="20.2710%" y="725" width="3.5502%" height="15" fill="rgb(242,21,14)"/><text x="20.5210%" y="735.50">[unk..</text></g><g><title>[unknown] (216 samples, 2.42%)</title><rect x="21.4022%" y="709" width="2.4191%" height="15" fill="rgb(222,19,48)"/><text x="21.6522%" y="719.50">[u..</text></g><g><title>[unknown] (149 samples, 1.67%)</title><rect x="22.1525%" y="693" width="1.6687%" height="15" fill="rgb(232,45,27)"/><text x="22.4025%" y="703.50"></text></g><g><title>[unknown] (88 samples, 0.99%)</title><rect x="22.8357%" y="677" width="0.9856%" height="15" fill="rgb(249,103,42)"/><text x="23.0857%" y="687.50"></text></g><g><title>[unknown] (66 samples, 0.74%)</title><rect x="23.0821%" y="661" width="0.7392%" height="15" fill="rgb(246,81,33)"/><text x="23.3321%" y="671.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="23.7989%" y="645" width="0.0224%" height="15" fill="rgb(252,33,42)"/><text x="24.0489%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="23.8101%" y="629" width="0.0112%" height="15" fill="rgb(209,212,41)"/><text x="24.0601%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="23.8101%" y="613" width="0.0112%" height="15" fill="rgb(207,154,6)"/><text x="24.0601%" y="623.50"></text></g><g><title>parking_lot_core::parking_lot::hash (1 samples, 0.01%)</title><rect x="23.8213%" y="901" width="0.0112%" height="15" fill="rgb(223,64,47)"/><text x="24.0713%" y="911.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (20 samples, 0.22%)</title><rect x="23.8213%" y="917" width="0.2240%" height="15" fill="rgb(211,161,38)"/><text x="24.0713%" y="927.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (19 samples, 0.21%)</title><rect x="23.8325%" y="901" width="0.2128%" height="15" fill="rgb(219,138,40)"/><text x="24.0825%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (19 samples, 0.21%)</title><rect x="23.8325%" y="885" width="0.2128%" height="15" fill="rgb(241,228,46)"/><text x="24.0825%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (19 samples, 0.21%)</title><rect x="23.8325%" y="869" width="0.2128%" height="15" fill="rgb(223,209,38)"/><text x="24.0825%" y="879.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (711 samples, 7.96%)</title><rect x="16.0936%" y="933" width="7.9628%" height="15" fill="rgb(236,164,45)"/><text x="16.3436%" y="943.50">parking_lot..</text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (1 samples, 0.01%)</title><rect x="24.0452%" y="917" width="0.0112%" height="15" fill="rgb(231,15,5)"/><text x="24.2952%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="24.0452%" y="901" width="0.0112%" height="15" fill="rgb(252,35,15)"/><text x="24.2952%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="24.0452%" y="885" width="0.0112%" height="15" fill="rgb(248,181,18)"/><text x="24.2952%" y="895.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (722 samples, 8.09%)</title><rect x="15.9816%" y="1013" width="8.0860%" height="15" fill="rgb(233,39,42)"/><text x="16.2316%" y="1023.50">tokio::loom..</text></g><g><title>parking_lot::condvar::Condvar::wait (722 samples, 8.09%)</title><rect x="15.9816%" y="997" width="8.0860%" height="15" fill="rgb(238,110,33)"/><text x="16.2316%" y="1007.50">parking_lot..</text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (722 samples, 8.09%)</title><rect x="15.9816%" y="981" width="8.0860%" height="15" fill="rgb(233,195,10)"/><text x="16.2316%" y="991.50">parking_lot..</text></g><g><title>parking_lot_core::parking_lot::park (712 samples, 7.97%)</title><rect x="16.0936%" y="965" width="7.9740%" height="15" fill="rgb(254,105,3)"/><text x="16.3436%" y="975.50">parking_lot..</text></g><g><title>parking_lot_core::parking_lot::with_thread_data (712 samples, 7.97%)</title><rect x="16.0936%" y="949" width="7.9740%" height="15" fill="rgb(221,225,9)"/><text x="16.3436%" y="959.50">parking_lot..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="24.0564%" y="933" width="0.0112%" height="15" fill="rgb(224,227,45)"/><text x="24.3064%" y="943.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::__getit (1 samples, 0.01%)</title><rect x="24.0564%" y="917" width="0.0112%" height="15" fill="rgb(229,198,43)"/><text x="24.3064%" y="927.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="24.0564%" y="901" width="0.0112%" height="15" fill="rgb(206,209,35)"/><text x="24.3064%" y="911.50"></text></g><g><title>&lt;tokio::park::thread::CachedParkThread as tokio::park::Park&gt;::park (777 samples, 8.70%)</title><rect x="15.4665%" y="1109" width="8.7020%" height="15" fill="rgb(245,195,53)"/><text x="15.7165%" y="1119.50">&lt;tokio::park..</text></g><g><title>tokio::park::thread::CachedParkThread::with_current (777 samples, 8.70%)</title><rect x="15.4665%" y="1093" width="8.7020%" height="15" fill="rgb(240,92,26)"/><text x="15.7165%" y="1103.50">tokio::park:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (777 samples, 8.70%)</title><rect x="15.4665%" y="1077" width="8.7020%" height="15" fill="rgb(207,40,23)"/><text x="15.7165%" y="1087.50">std::thread:..</text></g><g><title>tokio::park::thread::CachedParkThread::with_current::{{closure}} (774 samples, 8.67%)</title><rect x="15.5001%" y="1061" width="8.6684%" height="15" fill="rgb(223,111,35)"/><text x="15.7501%" y="1071.50">tokio::park:..</text></g><g><title>&lt;tokio::park::thread::CachedParkThread as tokio::park::Park&gt;::park::{{closure}} (774 samples, 8.67%)</title><rect x="15.5001%" y="1045" width="8.6684%" height="15" fill="rgb(229,147,28)"/><text x="15.7501%" y="1055.50">&lt;tokio::park..</text></g><g><title>tokio::park::thread::Inner::park (761 samples, 8.52%)</title><rect x="15.6456%" y="1029" width="8.5228%" height="15" fill="rgb(211,29,28)"/><text x="15.8956%" y="1039.50">tokio::park:..</text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (9 samples, 0.10%)</title><rect x="24.0676%" y="1013" width="0.1008%" height="15" fill="rgb(228,72,33)"/><text x="24.3176%" y="1023.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (9 samples, 0.10%)</title><rect x="24.0676%" y="997" width="0.1008%" height="15" fill="rgb(205,214,31)"/><text x="24.3176%" y="1007.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (9 samples, 0.10%)</title><rect x="24.0676%" y="981" width="0.1008%" height="15" fill="rgb(224,111,15)"/><text x="24.3176%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (8 samples, 0.09%)</title><rect x="24.0788%" y="965" width="0.0896%" height="15" fill="rgb(253,21,26)"/><text x="24.3288%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (8 samples, 0.09%)</title><rect x="24.0788%" y="949" width="0.0896%" height="15" fill="rgb(245,139,43)"/><text x="24.3288%" y="959.50"></text></g><g><title>tokio::coop::Budget::initial (3 samples, 0.03%)</title><rect x="24.1684%" y="1093" width="0.0336%" height="15" fill="rgb(252,170,7)"/><text x="24.4184%" y="1103.50"></text></g><g><title>tokio::coop::CURRENT::__getit (1 samples, 0.01%)</title><rect x="24.2020%" y="1045" width="0.0112%" height="15" fill="rgb(231,118,14)"/><text x="24.4520%" y="1055.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="24.2020%" y="1029" width="0.0112%" height="15" fill="rgb(238,83,0)"/><text x="24.4520%" y="1039.50"></text></g><g><title>_start (804 samples, 9.00%)</title><rect x="15.2649%" y="1365" width="9.0044%" height="15" fill="rgb(221,39,39)"/><text x="15.5149%" y="1375.50">_start</text></g><g><title>__libc_start_main (804 samples, 9.00%)</title><rect x="15.2649%" y="1349" width="9.0044%" height="15" fill="rgb(222,119,46)"/><text x="15.5149%" y="1359.50">__libc_start_..</text></g><g><title>main (804 samples, 9.00%)</title><rect x="15.2649%" y="1333" width="9.0044%" height="15" fill="rgb(222,165,49)"/><text x="15.5149%" y="1343.50">main</text></g><g><title>std::rt::lang_start_internal (804 samples, 9.00%)</title><rect x="15.2649%" y="1317" width="9.0044%" height="15" fill="rgb(219,113,52)"/><text x="15.5149%" y="1327.50">std::rt::lang..</text></g><g><title>std::panic::catch_unwind (804 samples, 9.00%)</title><rect x="15.2649%" y="1301" width="9.0044%" height="15" fill="rgb(214,7,15)"/><text x="15.5149%" y="1311.50">std::panic::c..</text></g><g><title>std::panicking::try (804 samples, 9.00%)</title><rect x="15.2649%" y="1285" width="9.0044%" height="15" fill="rgb(235,32,4)"/><text x="15.5149%" y="1295.50">std::panickin..</text></g><g><title>std::panicking::try::do_call (804 samples, 9.00%)</title><rect x="15.2649%" y="1269" width="9.0044%" height="15" fill="rgb(238,90,54)"/><text x="15.5149%" y="1279.50">std::panickin..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (804 samples, 9.00%)</title><rect x="15.2649%" y="1253" width="9.0044%" height="15" fill="rgb(213,208,19)"/><text x="15.5149%" y="1263.50">core::ops::fu..</text></g><g><title>std::rt::lang_start::{{closure}} (804 samples, 9.00%)</title><rect x="15.2649%" y="1237" width="9.0044%" height="15" fill="rgb(233,156,4)"/><text x="15.5149%" y="1247.50">std::rt::lang..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (804 samples, 9.00%)</title><rect x="15.2649%" y="1221" width="9.0044%" height="15" fill="rgb(207,194,5)"/><text x="15.5149%" y="1231.50">std::sys_comm..</text></g><g><title>core::ops::function::FnOnce::call_once (804 samples, 9.00%)</title><rect x="15.2649%" y="1205" width="9.0044%" height="15" fill="rgb(206,111,30)"/><text x="15.5149%" y="1215.50">core::ops::fu..</text></g><g><title>rho_runtime::main (804 samples, 9.00%)</title><rect x="15.2649%" y="1189" width="9.0044%" height="15" fill="rgb(243,70,54)"/><text x="15.5149%" y="1199.50">rho_runtime::..</text></g><g><title>tokio::runtime::Runtime::block_on (804 samples, 9.00%)</title><rect x="15.2649%" y="1173" width="9.0044%" height="15" fill="rgb(242,28,8)"/><text x="15.5149%" y="1183.50">tokio::runtim..</text></g><g><title>tokio::runtime::thread_pool::ThreadPool::block_on (804 samples, 9.00%)</title><rect x="15.2649%" y="1157" width="9.0044%" height="15" fill="rgb(219,106,18)"/><text x="15.5149%" y="1167.50">tokio::runtim..</text></g><g><title>tokio::runtime::enter::Enter::block_on (804 samples, 9.00%)</title><rect x="15.2649%" y="1141" width="9.0044%" height="15" fill="rgb(244,222,10)"/><text x="15.5149%" y="1151.50">tokio::runtim..</text></g><g><title>tokio::park::thread::CachedParkThread::block_on (804 samples, 9.00%)</title><rect x="15.2649%" y="1125" width="9.0044%" height="15" fill="rgb(236,179,52)"/><text x="15.5149%" y="1135.50">tokio::park::..</text></g><g><title>tokio::coop::budget (9 samples, 0.10%)</title><rect x="24.1684%" y="1109" width="0.1008%" height="15" fill="rgb(213,23,39)"/><text x="24.4184%" y="1119.50"></text></g><g><title>tokio::coop::with_budget (6 samples, 0.07%)</title><rect x="24.2020%" y="1093" width="0.0672%" height="15" fill="rgb(238,48,10)"/><text x="24.4520%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.07%)</title><rect x="24.2020%" y="1077" width="0.0672%" height="15" fill="rgb(251,196,23)"/><text x="24.4520%" y="1087.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.07%)</title><rect x="24.2020%" y="1061" width="0.0672%" height="15" fill="rgb(250,152,24)"/><text x="24.4520%" y="1071.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (5 samples, 0.06%)</title><rect x="24.2132%" y="1045" width="0.0560%" height="15" fill="rgb(209,150,17)"/><text x="24.4632%" y="1055.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.02%)</title><rect x="24.2468%" y="1029" width="0.0224%" height="15" fill="rgb(234,202,34)"/><text x="24.4968%" y="1039.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.02%)</title><rect x="24.2468%" y="1013" width="0.0224%" height="15" fill="rgb(253,148,53)"/><text x="24.4968%" y="1023.50"></text></g><g><title>core::mem::replace (2 samples, 0.02%)</title><rect x="24.2468%" y="997" width="0.0224%" height="15" fill="rgb(218,129,16)"/><text x="24.4968%" y="1007.50"></text></g><g><title>core::mem::swap (2 samples, 0.02%)</title><rect x="24.2468%" y="981" width="0.0224%" height="15" fill="rgb(216,85,19)"/><text x="24.4968%" y="991.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.02%)</title><rect x="24.2468%" y="965" width="0.0224%" height="15" fill="rgb(235,228,7)"/><text x="24.4968%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="24.2468%" y="949" width="0.0224%" height="15" fill="rgb(245,175,0)"/><text x="24.4968%" y="959.50"></text></g><g><title>[unknown] (43 samples, 0.48%)</title><rect x="24.2916%" y="1349" width="0.4816%" height="15" fill="rgb(208,168,36)"/><text x="24.5416%" y="1359.50"></text></g><g><title>[unknown] (43 samples, 0.48%)</title><rect x="24.2916%" y="1333" width="0.4816%" height="15" fill="rgb(246,171,24)"/><text x="24.5416%" y="1343.50"></text></g><g><title>[unknown] (43 samples, 0.48%)</title><rect x="24.2916%" y="1317" width="0.4816%" height="15" fill="rgb(215,142,24)"/><text x="24.5416%" y="1327.50"></text></g><g><title>[unknown] (42 samples, 0.47%)</title><rect x="24.3028%" y="1301" width="0.4704%" height="15" fill="rgb(250,187,7)"/><text x="24.5528%" y="1311.50"></text></g><g><title>[unknown] (41 samples, 0.46%)</title><rect x="24.3140%" y="1285" width="0.4592%" height="15" fill="rgb(228,66,33)"/><text x="24.5640%" y="1295.50"></text></g><g><title>[unknown] (41 samples, 0.46%)</title><rect x="24.3140%" y="1269" width="0.4592%" height="15" fill="rgb(234,215,21)"/><text x="24.5640%" y="1279.50"></text></g><g><title>[unknown] (40 samples, 0.45%)</title><rect x="24.3252%" y="1253" width="0.4480%" height="15" fill="rgb(222,191,20)"/><text x="24.5752%" y="1263.50"></text></g><g><title>[unknown] (40 samples, 0.45%)</title><rect x="24.3252%" y="1237" width="0.4480%" height="15" fill="rgb(245,79,54)"/><text x="24.5752%" y="1247.50"></text></g><g><title>clone (46 samples, 0.52%)</title><rect x="24.2692%" y="1365" width="0.5152%" height="15" fill="rgb(240,10,37)"/><text x="24.5192%" y="1375.50"></text></g><g><title>start_thread (1 samples, 0.01%)</title><rect x="24.7732%" y="1349" width="0.0112%" height="15" fill="rgb(214,192,32)"/><text x="25.0232%" y="1359.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.01%)</title><rect x="24.7732%" y="1333" width="0.0112%" height="15" fill="rgb(209,36,54)"/><text x="25.0232%" y="1343.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (1 samples, 0.01%)</title><rect x="24.7732%" y="1317" width="0.0112%" height="15" fill="rgb(220,10,11)"/><text x="25.0232%" y="1327.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (1 samples, 0.01%)</title><rect x="24.7732%" y="1301" width="0.0112%" height="15" fill="rgb(221,106,17)"/><text x="25.0232%" y="1311.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (1 samples, 0.01%)</title><rect x="24.7732%" y="1285" width="0.0112%" height="15" fill="rgb(251,142,44)"/><text x="25.0232%" y="1295.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (1 samples, 0.01%)</title><rect x="24.7732%" y="1269" width="0.0112%" height="15" fill="rgb(238,13,15)"/><text x="25.0232%" y="1279.50"></text></g><g><title>mmap64 (1 samples, 0.01%)</title><rect x="24.7732%" y="1253" width="0.0112%" height="15" fill="rgb(208,107,27)"/><text x="25.0232%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="24.7732%" y="1237" width="0.0112%" height="15" fill="rgb(205,136,37)"/><text x="25.0232%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="24.7732%" y="1221" width="0.0112%" height="15" fill="rgb(250,205,27)"/><text x="25.0232%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="24.7732%" y="1205" width="0.0112%" height="15" fill="rgb(210,80,43)"/><text x="25.0232%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="24.7732%" y="1189" width="0.0112%" height="15" fill="rgb(247,160,36)"/><text x="25.0232%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="24.7732%" y="1173" width="0.0112%" height="15" fill="rgb(234,13,49)"/><text x="25.0232%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="24.7732%" y="1157" width="0.0112%" height="15" fill="rgb(234,122,0)"/><text x="25.0232%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="24.7732%" y="1141" width="0.0112%" height="15" fill="rgb(207,146,38)"/><text x="25.0232%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="24.7732%" y="1125" width="0.0112%" height="15" fill="rgb(207,177,25)"/><text x="25.0232%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="24.7732%" y="1109" width="0.0112%" height="15" fill="rgb(211,178,42)"/><text x="25.0232%" y="1119.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry (2 samples, 0.02%)</title><rect x="24.7844%" y="1365" width="0.0224%" height="15" fill="rgb(230,69,54)"/><text x="25.0344%" y="1375.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (1 samples, 0.01%)</title><rect x="24.7956%" y="1349" width="0.0112%" height="15" fill="rgb(214,135,41)"/><text x="25.0456%" y="1359.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry::{{closure}} (1 samples, 0.01%)</title><rect x="24.7956%" y="1333" width="0.0112%" height="15" fill="rgb(237,67,25)"/><text x="25.0456%" y="1343.50"></text></g><g><title>&lt;blake3::Hash as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="24.7956%" y="1317" width="0.0112%" height="15" fill="rgb(222,189,50)"/><text x="25.0456%" y="1327.50"></text></g><g><title>constant_time_eq::constant_time_eq_32 (1 samples, 0.01%)</title><rect x="24.7956%" y="1301" width="0.0112%" height="15" fill="rgb(245,148,34)"/><text x="25.0456%" y="1311.50"></text></g><g><title>tokio::coop::CURRENT::__getit (1 samples, 0.01%)</title><rect x="24.8068%" y="1365" width="0.0112%" height="15" fill="rgb(222,29,6)"/><text x="25.0568%" y="1375.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (1 samples, 0.01%)</title><rect x="24.8180%" y="1365" width="0.0112%" height="15" fill="rgb(221,189,43)"/><text x="25.0680%" y="1375.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::add_permits_locked (1 samples, 0.01%)</title><rect x="24.8292%" y="1365" width="0.0112%" height="15" fill="rgb(207,36,27)"/><text x="25.0792%" y="1375.50"></text></g><g><title>rho_runtime (2,223 samples, 24.90%)</title><rect x="0.0560%" y="1381" width="24.8964%" height="15" fill="rgb(217,90,24)"/><text x="0.3060%" y="1391.50">rho_runtime</text></g><g><title>tokio::sync::mpsc::list::Rx&lt;T&gt;::pop (10 samples, 0.11%)</title><rect x="24.8404%" y="1365" width="0.1120%" height="15" fill="rgb(224,66,35)"/><text x="25.0904%" y="1375.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::read (6 samples, 0.07%)</title><rect x="24.8852%" y="1349" width="0.0672%" height="15" fill="rgb(221,13,50)"/><text x="25.1352%" y="1359.50"></text></g><g><title>rholang_parser (1 samples, 0.01%)</title><rect x="24.9524%" y="1381" width="0.0112%" height="15" fill="rgb(236,68,49)"/><text x="25.2024%" y="1391.50"></text></g><g><title>_init (1 samples, 0.01%)</title><rect x="24.9524%" y="1365" width="0.0112%" height="15" fill="rgb(229,146,28)"/><text x="25.2024%" y="1375.50"></text></g><g><title>__pthread_initialize_minimal_internal (1 samples, 0.01%)</title><rect x="24.9524%" y="1349" width="0.0112%" height="15" fill="rgb(225,31,38)"/><text x="25.2024%" y="1359.50"></text></g><g><title>__getrlimit (1 samples, 0.01%)</title><rect x="24.9524%" y="1333" width="0.0112%" height="15" fill="rgb(250,208,3)"/><text x="25.2024%" y="1343.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="24.9524%" y="1317" width="0.0112%" height="15" fill="rgb(246,54,23)"/><text x="25.2024%" y="1327.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="24.9524%" y="1301" width="0.0112%" height="15" fill="rgb(243,76,11)"/><text x="25.2024%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="24.9636%" y="1365" width="0.0112%" height="15" fill="rgb(245,21,50)"/><text x="25.2136%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="24.9636%" y="1349" width="0.0112%" height="15" fill="rgb(228,9,43)"/><text x="25.2136%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="24.9860%" y="1349" width="0.0224%" height="15" fill="rgb(208,100,47)"/><text x="25.2360%" y="1359.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="24.9972%" y="1333" width="0.0112%" height="15" fill="rgb(232,26,8)"/><text x="25.2472%" y="1343.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="24.9972%" y="1317" width="0.0112%" height="15" fill="rgb(216,166,38)"/><text x="25.2472%" y="1327.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="24.9748%" y="1365" width="0.0448%" height="15" fill="rgb(251,202,51)"/><text x="25.2248%" y="1375.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="25.0084%" y="1349" width="0.0112%" height="15" fill="rgb(254,216,34)"/><text x="25.2584%" y="1359.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="25.0084%" y="1333" width="0.0112%" height="15" fill="rgb(251,32,27)"/><text x="25.2584%" y="1343.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="25.0084%" y="1317" width="0.0112%" height="15" fill="rgb(208,127,28)"/><text x="25.2584%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="25.0084%" y="1301" width="0.0112%" height="15" fill="rgb(224,137,22)"/><text x="25.2584%" y="1311.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="25.0084%" y="1285" width="0.0112%" height="15" fill="rgb(254,70,32)"/><text x="25.2584%" y="1295.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="25.0084%" y="1269" width="0.0112%" height="15" fill="rgb(229,75,37)"/><text x="25.2584%" y="1279.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="25.0084%" y="1253" width="0.0112%" height="15" fill="rgb(252,64,23)"/><text x="25.2584%" y="1263.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="25.0084%" y="1237" width="0.0112%" height="15" fill="rgb(232,162,48)"/><text x="25.2584%" y="1247.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="25.0084%" y="1221" width="0.0112%" height="15" fill="rgb(246,160,12)"/><text x="25.2584%" y="1231.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.08%)</title><rect x="25.0196%" y="1349" width="0.0784%" height="15" fill="rgb(247,166,0)"/><text x="25.2696%" y="1359.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="25.0644%" y="1333" width="0.0336%" height="15" fill="rgb(249,219,21)"/><text x="25.3144%" y="1343.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="25.0868%" y="1317" width="0.0112%" height="15" fill="rgb(205,209,3)"/><text x="25.3368%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="25.0980%" y="1349" width="0.0224%" height="15" fill="rgb(243,44,1)"/><text x="25.3480%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="25.1092%" y="1333" width="0.0112%" height="15" fill="rgb(206,159,16)"/><text x="25.3592%" y="1343.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.04%)</title><rect x="25.1204%" y="1349" width="0.0448%" height="15" fill="rgb(244,77,30)"/><text x="25.3704%" y="1359.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::send::{{closure}} (2 samples, 0.02%)</title><rect x="25.1428%" y="1333" width="0.0224%" height="15" fill="rgb(218,69,12)"/><text x="25.3928%" y="1343.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="25.1540%" y="1317" width="0.0112%" height="15" fill="rgb(212,87,7)"/><text x="25.4040%" y="1327.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::reserve::{{closure}} (1 samples, 0.01%)</title><rect x="25.1540%" y="1301" width="0.0112%" height="15" fill="rgb(245,114,25)"/><text x="25.4040%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="25.1652%" y="1333" width="0.0224%" height="15" fill="rgb(210,61,42)"/><text x="25.4152%" y="1343.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="25.1652%" y="1317" width="0.0224%" height="15" fill="rgb(211,52,33)"/><text x="25.4152%" y="1327.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="25.1652%" y="1301" width="0.0224%" height="15" fill="rgb(234,58,33)"/><text x="25.4152%" y="1311.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="25.1652%" y="1349" width="0.0336%" height="15" fill="rgb(220,115,36)"/><text x="25.4152%" y="1359.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="25.1876%" y="1333" width="0.0112%" height="15" fill="rgb(243,153,54)"/><text x="25.4376%" y="1343.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="25.1876%" y="1317" width="0.0112%" height="15" fill="rgb(251,47,18)"/><text x="25.4376%" y="1327.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="25.1876%" y="1301" width="0.0112%" height="15" fill="rgb(242,102,42)"/><text x="25.4376%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="25.1876%" y="1285" width="0.0112%" height="15" fill="rgb(234,31,38)"/><text x="25.4376%" y="1295.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="25.1876%" y="1269" width="0.0112%" height="15" fill="rgb(221,117,51)"/><text x="25.4376%" y="1279.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="25.1876%" y="1253" width="0.0112%" height="15" fill="rgb(212,20,18)"/><text x="25.4376%" y="1263.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="25.1876%" y="1237" width="0.0112%" height="15" fill="rgb(245,133,36)"/><text x="25.4376%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="25.1876%" y="1221" width="0.0112%" height="15" fill="rgb(212,6,19)"/><text x="25.4376%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="25.1876%" y="1205" width="0.0112%" height="15" fill="rgb(218,1,36)"/><text x="25.4376%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="25.1876%" y="1189" width="0.0112%" height="15" fill="rgb(246,84,54)"/><text x="25.4376%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="25.1876%" y="1173" width="0.0112%" height="15" fill="rgb(242,110,6)"/><text x="25.4376%" y="1183.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="25.1876%" y="1157" width="0.0112%" height="15" fill="rgb(214,47,5)"/><text x="25.4376%" y="1167.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="25.1876%" y="1141" width="0.0112%" height="15" fill="rgb(218,159,25)"/><text x="25.4376%" y="1151.50"></text></g><g><title>&lt;tokio::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="25.1988%" y="1349" width="0.0112%" height="15" fill="rgb(215,211,28)"/><text x="25.4488%" y="1359.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="25.2100%" y="1333" width="0.0112%" height="15" fill="rgb(238,59,32)"/><text x="25.4600%" y="1343.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="25.2100%" y="1349" width="0.0224%" height="15" fill="rgb(226,82,3)"/><text x="25.4600%" y="1359.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::poll_recv (1 samples, 0.01%)</title><rect x="25.2212%" y="1333" width="0.0112%" height="15" fill="rgb(240,164,32)"/><text x="25.4712%" y="1343.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="25.2324%" y="1349" width="0.0336%" height="15" fill="rgb(232,46,7)"/><text x="25.4824%" y="1359.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="25.2660%" y="1349" width="0.0112%" height="15" fill="rgb(229,129,53)"/><text x="25.5160%" y="1359.50"></text></g><g><title>__rust_probestack (1 samples, 0.01%)</title><rect x="25.2772%" y="1349" width="0.0112%" height="15" fill="rgb(234,188,29)"/><text x="25.5272%" y="1359.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="25.2884%" y="1349" width="0.0112%" height="15" fill="rgb(246,141,4)"/><text x="25.5384%" y="1359.50"></text></g><g><title>alloc::slice::merge_sort (5 samples, 0.06%)</title><rect x="25.2996%" y="1349" width="0.0560%" height="15" fill="rgb(229,23,39)"/><text x="25.5496%" y="1359.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (1 samples, 0.01%)</title><rect x="25.3556%" y="1349" width="0.0112%" height="15" fill="rgb(206,12,3)"/><text x="25.6056%" y="1359.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (1 samples, 0.01%)</title><rect x="25.3556%" y="1333" width="0.0112%" height="15" fill="rgb(252,226,20)"/><text x="25.6056%" y="1343.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (1 samples, 0.01%)</title><rect x="25.3668%" y="1349" width="0.0112%" height="15" fill="rgb(216,123,35)"/><text x="25.6168%" y="1359.50"></text></g><g><title>parking_lot_core::parking_lot::park (1 samples, 0.01%)</title><rect x="25.3668%" y="1333" width="0.0112%" height="15" fill="rgb(212,68,40)"/><text x="25.6168%" y="1343.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (1 samples, 0.01%)</title><rect x="25.3668%" y="1317" width="0.0112%" height="15" fill="rgb(254,125,32)"/><text x="25.6168%" y="1327.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (1 samples, 0.01%)</title><rect x="25.3668%" y="1301" width="0.0112%" height="15" fill="rgb(253,97,22)"/><text x="25.6168%" y="1311.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (1 samples, 0.01%)</title><rect x="25.3668%" y="1285" width="0.0112%" height="15" fill="rgb(241,101,14)"/><text x="25.6168%" y="1295.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (1 samples, 0.01%)</title><rect x="25.3668%" y="1269" width="0.0112%" height="15" fill="rgb(238,103,29)"/><text x="25.6168%" y="1279.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="25.3780%" y="1349" width="0.0224%" height="15" fill="rgb(233,195,47)"/><text x="25.6280%" y="1359.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="25.3892%" y="1333" width="0.0112%" height="15" fill="rgb(246,218,30)"/><text x="25.6392%" y="1343.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (1 samples, 0.01%)</title><rect x="25.3892%" y="1317" width="0.0112%" height="15" fill="rgb(219,145,47)"/><text x="25.6392%" y="1327.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (1 samples, 0.01%)</title><rect x="25.3892%" y="1301" width="0.0112%" height="15" fill="rgb(243,12,26)"/><text x="25.6392%" y="1311.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (1 samples, 0.01%)</title><rect x="25.3892%" y="1285" width="0.0112%" height="15" fill="rgb(214,87,16)"/><text x="25.6392%" y="1295.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (1 samples, 0.01%)</title><rect x="25.3892%" y="1269" width="0.0112%" height="15" fill="rgb(208,99,42)"/><text x="25.6392%" y="1279.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.01%)</title><rect x="25.4004%" y="1349" width="0.0112%" height="15" fill="rgb(253,99,2)"/><text x="25.6504%" y="1359.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="25.4116%" y="1349" width="0.0112%" height="15" fill="rgb(220,168,23)"/><text x="25.6616%" y="1359.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="25.4116%" y="1333" width="0.0112%" height="15" fill="rgb(242,38,24)"/><text x="25.6616%" y="1343.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="25.4116%" y="1317" width="0.0112%" height="15" fill="rgb(225,182,9)"/><text x="25.6616%" y="1327.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (1 samples, 0.01%)</title><rect x="25.4228%" y="1349" width="0.0112%" height="15" fill="rgb(243,178,37)"/><text x="25.6728%" y="1359.50"></text></g><g><title>tokio::runtime::task::harness::SchedulerView&lt;S&gt;::transition_to_terminal (1 samples, 0.01%)</title><rect x="25.4228%" y="1333" width="0.0112%" height="15" fill="rgb(232,139,19)"/><text x="25.6728%" y="1343.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (1 samples, 0.01%)</title><rect x="25.4228%" y="1317" width="0.0112%" height="15" fill="rgb(225,201,24)"/><text x="25.6728%" y="1327.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_ref (1 samples, 0.01%)</title><rect x="25.4228%" y="1301" width="0.0112%" height="15" fill="rgb(221,47,46)"/><text x="25.6728%" y="1311.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::schedule (1 samples, 0.01%)</title><rect x="25.4228%" y="1285" width="0.0112%" height="15" fill="rgb(249,23,13)"/><text x="25.6728%" y="1295.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="25.4228%" y="1269" width="0.0112%" height="15" fill="rgb(219,9,5)"/><text x="25.6728%" y="1279.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::schedule::{{closure}} (1 samples, 0.01%)</title><rect x="25.4228%" y="1253" width="0.0112%" height="15" fill="rgb(254,171,16)"/><text x="25.6728%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Match&gt;::{{closure}}&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="25.4228%" y="1237" width="0.0112%" height="15" fill="rgb(230,171,20)"/><text x="25.6728%" y="1247.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (3 samples, 0.03%)</title><rect x="25.4340%" y="1349" width="0.0336%" height="15" fill="rgb(210,71,41)"/><text x="25.6840%" y="1359.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (2 samples, 0.02%)</title><rect x="25.4452%" y="1333" width="0.0224%" height="15" fill="rgb(206,173,20)"/><text x="25.6952%" y="1343.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (2 samples, 0.02%)</title><rect x="25.4676%" y="1349" width="0.0224%" height="15" fill="rgb(233,88,34)"/><text x="25.7176%" y="1359.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::from_raw (1 samples, 0.01%)</title><rect x="25.4900%" y="1349" width="0.0112%" height="15" fill="rgb(223,209,46)"/><text x="25.7400%" y="1359.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::is_notified (1 samples, 0.01%)</title><rect x="25.5012%" y="1349" width="0.0112%" height="15" fill="rgb(250,43,18)"/><text x="25.7512%" y="1359.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (1 samples, 0.01%)</title><rect x="25.5124%" y="1349" width="0.0112%" height="15" fill="rgb(208,13,10)"/><text x="25.7624%" y="1359.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_terminal (3 samples, 0.03%)</title><rect x="25.5236%" y="1349" width="0.0336%" height="15" fill="rgb(212,200,36)"/><text x="25.7736%" y="1359.50"></text></g><g><title>tokio::runtime::thread_pool::worker::CURRENT::FOO::__getit (1 samples, 0.01%)</title><rect x="25.5572%" y="1349" width="0.0112%" height="15" fill="rgb(225,90,30)"/><text x="25.8072%" y="1359.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (1 samples, 0.01%)</title><rect x="25.5684%" y="1349" width="0.0112%" height="15" fill="rgb(236,182,39)"/><text x="25.8184%" y="1359.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park (1 samples, 0.01%)</title><rect x="25.5796%" y="1333" width="0.0112%" height="15" fill="rgb(212,144,35)"/><text x="25.8296%" y="1343.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_task (2 samples, 0.02%)</title><rect x="25.5908%" y="1333" width="0.0224%" height="15" fill="rgb(228,63,44)"/><text x="25.8408%" y="1343.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_local_task (2 samples, 0.02%)</title><rect x="25.5908%" y="1317" width="0.0224%" height="15" fill="rgb(228,109,6)"/><text x="25.8408%" y="1327.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (2 samples, 0.02%)</title><rect x="25.5908%" y="1301" width="0.0224%" height="15" fill="rgb(238,117,24)"/><text x="25.8408%" y="1311.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_local_task::{{closure}} (2 samples, 0.02%)</title><rect x="25.5908%" y="1285" width="0.0224%" height="15" fill="rgb(242,26,26)"/><text x="25.8408%" y="1295.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (6 samples, 0.07%)</title><rect x="25.5796%" y="1349" width="0.0672%" height="15" fill="rgb(221,92,48)"/><text x="25.8296%" y="1359.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::steal_work (3 samples, 0.03%)</title><rect x="25.6132%" y="1333" width="0.0336%" height="15" fill="rgb(209,209,32)"/><text x="25.8632%" y="1343.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (1 samples, 0.01%)</title><rect x="25.6468%" y="1349" width="0.0112%" height="15" fill="rgb(221,70,22)"/><text x="25.8968%" y="1359.50"></text></g><g><title>tokio::coop::budget (1 samples, 0.01%)</title><rect x="25.6468%" y="1333" width="0.0112%" height="15" fill="rgb(248,145,5)"/><text x="25.8968%" y="1343.50"></text></g><g><title>tokio::coop::with_budget (1 samples, 0.01%)</title><rect x="25.6468%" y="1317" width="0.0112%" height="15" fill="rgb(226,116,26)"/><text x="25.8968%" y="1327.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::drain_pending_drop (1 samples, 0.01%)</title><rect x="25.6580%" y="1349" width="0.0112%" height="15" fill="rgb(244,5,17)"/><text x="25.9080%" y="1359.50"></text></g><g><title>[[heap]] (59 samples, 0.66%)</title><rect x="25.0196%" y="1365" width="0.6608%" height="15" fill="rgb(252,159,33)"/><text x="25.2696%" y="1375.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule_local (1 samples, 0.01%)</title><rect x="25.6692%" y="1349" width="0.0112%" height="15" fill="rgb(206,71,0)"/><text x="25.9192%" y="1359.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="25.6916%" y="1333" width="0.0448%" height="15" fill="rgb(233,118,54)"/><text x="25.9416%" y="1343.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="25.7028%" y="1317" width="0.0336%" height="15" fill="rgb(234,83,48)"/><text x="25.9528%" y="1327.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="25.7252%" y="1301" width="0.0112%" height="15" fill="rgb(228,3,54)"/><text x="25.9752%" y="1311.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="25.7252%" y="1285" width="0.0112%" height="15" fill="rgb(226,155,13)"/><text x="25.9752%" y="1295.50"></text></g><g><title>&lt;model::rho_types::Match as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="25.7364%" y="1333" width="0.0112%" height="15" fill="rgb(241,28,37)"/><text x="25.9864%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="25.7364%" y="1317" width="0.0112%" height="15" fill="rgb(233,93,10)"/><text x="25.9864%" y="1327.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="25.7364%" y="1301" width="0.0112%" height="15" fill="rgb(225,113,19)"/><text x="25.9864%" y="1311.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="25.7364%" y="1285" width="0.0112%" height="15" fill="rgb(241,2,18)"/><text x="25.9864%" y="1295.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="25.7364%" y="1269" width="0.0112%" height="15" fill="rgb(228,207,21)"/><text x="25.9864%" y="1279.50"></text></g><g><title>&lt;model::rho_types::MatchCase as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="25.7364%" y="1253" width="0.0112%" height="15" fill="rgb(213,211,35)"/><text x="25.9864%" y="1263.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.10%)</title><rect x="25.6804%" y="1349" width="0.1008%" height="15" fill="rgb(209,83,10)"/><text x="25.9304%" y="1359.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="25.7476%" y="1333" width="0.0336%" height="15" fill="rgb(209,164,1)"/><text x="25.9976%" y="1343.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="25.7476%" y="1317" width="0.0336%" height="15" fill="rgb(213,184,43)"/><text x="25.9976%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.03%)</title><rect x="25.7476%" y="1301" width="0.0336%" height="15" fill="rgb(231,61,34)"/><text x="25.9976%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.03%)</title><rect x="25.7476%" y="1285" width="0.0336%" height="15" fill="rgb(235,75,3)"/><text x="25.9976%" y="1295.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.03%)</title><rect x="25.7476%" y="1269" width="0.0336%" height="15" fill="rgb(220,106,47)"/><text x="25.9976%" y="1279.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.03%)</title><rect x="25.7476%" y="1253" width="0.0336%" height="15" fill="rgb(210,196,33)"/><text x="25.9976%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.07%)</title><rect x="25.8148%" y="1333" width="0.0672%" height="15" fill="rgb(229,154,42)"/><text x="26.0648%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.11%)</title><rect x="25.7812%" y="1349" width="0.1120%" height="15" fill="rgb(228,114,26)"/><text x="26.0312%" y="1359.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="25.8820%" y="1333" width="0.0112%" height="15" fill="rgb(208,144,1)"/><text x="26.1320%" y="1343.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="25.8820%" y="1317" width="0.0112%" height="15" fill="rgb(239,112,37)"/><text x="26.1320%" y="1327.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="25.8820%" y="1301" width="0.0112%" height="15" fill="rgb(210,96,50)"/><text x="26.1320%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="25.8820%" y="1285" width="0.0112%" height="15" fill="rgb(222,178,2)"/><text x="26.1320%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="25.8820%" y="1269" width="0.0112%" height="15" fill="rgb(226,74,18)"/><text x="26.1320%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="25.8820%" y="1253" width="0.0112%" height="15" fill="rgb(225,67,54)"/><text x="26.1320%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="25.8820%" y="1237" width="0.0112%" height="15" fill="rgb(251,92,32)"/><text x="26.1320%" y="1247.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="25.8820%" y="1221" width="0.0112%" height="15" fill="rgb(228,149,22)"/><text x="26.1320%" y="1231.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="25.8820%" y="1205" width="0.0112%" height="15" fill="rgb(243,54,13)"/><text x="26.1320%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="26.0276%" y="1317" width="0.0224%" height="15" fill="rgb(243,180,28)"/><text x="26.2776%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (2 samples, 0.02%)</title><rect x="26.0276%" y="1301" width="0.0224%" height="15" fill="rgb(208,167,24)"/><text x="26.2776%" y="1311.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.01%)</title><rect x="26.0388%" y="1285" width="0.0112%" height="15" fill="rgb(245,73,45)"/><text x="26.2888%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="26.0388%" y="1269" width="0.0112%" height="15" fill="rgb(237,203,48)"/><text x="26.2888%" y="1279.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="26.0388%" y="1253" width="0.0112%" height="15" fill="rgb(211,197,16)"/><text x="26.2888%" y="1263.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression::{{closure}} (8 samples, 0.09%)</title><rect x="25.9716%" y="1333" width="0.0896%" height="15" fill="rgb(243,99,51)"/><text x="26.2216%" y="1343.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (1 samples, 0.01%)</title><rect x="26.0499%" y="1317" width="0.0112%" height="15" fill="rgb(215,123,29)"/><text x="26.2999%" y="1327.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1 samples, 0.01%)</title><rect x="26.0499%" y="1301" width="0.0112%" height="15" fill="rgb(239,186,37)"/><text x="26.2999%" y="1311.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="26.0499%" y="1285" width="0.0112%" height="15" fill="rgb(252,136,39)"/><text x="26.2999%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="26.0499%" y="1269" width="0.0112%" height="15" fill="rgb(223,213,32)"/><text x="26.2999%" y="1279.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="26.0499%" y="1253" width="0.0112%" height="15" fill="rgb(233,115,5)"/><text x="26.2999%" y="1263.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="26.0499%" y="1237" width="0.0112%" height="15" fill="rgb(207,226,44)"/><text x="26.2999%" y="1247.50"></text></g><g><title>&lt;rho_runtime::storage::coordinator::AsyncStore as rho_runtime::storage::Storage&gt;::produce::{{closure}} (4 samples, 0.04%)</title><rect x="26.0611%" y="1333" width="0.0448%" height="15" fill="rgb(208,126,0)"/><text x="26.3111%" y="1343.50"></text></g><g><title>tokio::sync::oneshot::channel (3 samples, 0.03%)</title><rect x="26.0723%" y="1317" width="0.0336%" height="15" fill="rgb(244,66,21)"/><text x="26.3223%" y="1327.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::evaludate::{{closure}} (1 samples, 0.01%)</title><rect x="26.1059%" y="1333" width="0.0112%" height="15" fill="rgb(222,97,12)"/><text x="26.3559%" y="1343.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::eval_eplus::&lt;impl rho_runtime::interpreter::reduce::eval_expression::AsyncExprInstanceEvaluator&lt;S&gt; for model::rho_types::EPlus&gt;::evaluate::{{closure}} (3 samples, 0.03%)</title><rect x="26.1171%" y="1333" width="0.0336%" height="15" fill="rgb(219,213,19)"/><text x="26.3671%" y="1343.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate::{{closure}} (2 samples, 0.02%)</title><rect x="26.1507%" y="1333" width="0.0224%" height="15" fill="rgb(252,169,30)"/><text x="26.4007%" y="1343.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="26.1619%" y="1317" width="0.0112%" height="15" fill="rgb(206,32,51)"/><text x="26.4119%" y="1327.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_match::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Match&gt;::evaluate::{{closure}} (1 samples, 0.01%)</title><rect x="26.1731%" y="1333" width="0.0112%" height="15" fill="rgb(250,172,42)"/><text x="26.4231%" y="1343.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute (1 samples, 0.01%)</title><rect x="26.1731%" y="1317" width="0.0112%" height="15" fill="rgb(209,34,43)"/><text x="26.4231%" y="1327.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate::{{closure}} (1 samples, 0.01%)</title><rect x="26.1843%" y="1333" width="0.0112%" height="15" fill="rgb(223,11,35)"/><text x="26.4343%" y="1343.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_send::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Send&gt;::evaluate::{{closure}} (1 samples, 0.01%)</title><rect x="26.1955%" y="1333" width="0.0112%" height="15" fill="rgb(251,219,26)"/><text x="26.4455%" y="1343.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_nested_expressions (1 samples, 0.01%)</title><rect x="26.1955%" y="1317" width="0.0112%" height="15" fill="rgb(231,119,3)"/><text x="26.4455%" y="1327.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1 samples, 0.01%)</title><rect x="26.1955%" y="1301" width="0.0112%" height="15" fill="rgb(216,97,11)"/><text x="26.4455%" y="1311.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="26.1955%" y="1285" width="0.0112%" height="15" fill="rgb(223,59,9)"/><text x="26.4455%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="26.1955%" y="1269" width="0.0112%" height="15" fill="rgb(233,93,31)"/><text x="26.4455%" y="1279.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="26.1955%" y="1253" width="0.0112%" height="15" fill="rgb(239,81,33)"/><text x="26.4455%" y="1263.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="26.1955%" y="1237" width="0.0112%" height="15" fill="rgb(213,120,34)"/><text x="26.4455%" y="1247.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (29 samples, 0.32%)</title><rect x="25.8932%" y="1349" width="0.3248%" height="15" fill="rgb(243,49,53)"/><text x="26.1432%" y="1359.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_var::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S,model::rho_types::Par&gt; for model::rho_types::Var&gt;::evaluate::{{closure}} (1 samples, 0.01%)</title><rect x="26.2067%" y="1333" width="0.0112%" height="15" fill="rgb(247,216,33)"/><text x="26.4567%" y="1343.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="26.2291%" y="1317" width="0.0224%" height="15" fill="rgb(226,26,14)"/><text x="26.4791%" y="1327.50"></text></g><g><title>&lt;model::ordering::ScoreTreeIter as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="26.2179%" y="1349" width="0.0448%" height="15" fill="rgb(215,49,53)"/><text x="26.4679%" y="1359.50"></text></g><g><title>&lt;model::ordering::sort_unforgeable::UnforgeableScoreTreeIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="26.2291%" y="1333" width="0.0336%" height="15" fill="rgb(245,162,40)"/><text x="26.4791%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="26.2515%" y="1317" width="0.0112%" height="15" fill="rgb(229,68,17)"/><text x="26.5015%" y="1327.50"></text></g><g><title>&lt;model::ordering::sort_par::ParScoreTreeIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="26.2627%" y="1349" width="0.0224%" height="15" fill="rgb(213,182,10)"/><text x="26.5127%" y="1359.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (6 samples, 0.07%)</title><rect x="26.2851%" y="1349" width="0.0672%" height="15" fill="rgb(245,125,30)"/><text x="26.5351%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="26.3187%" y="1333" width="0.0336%" height="15" fill="rgb(232,202,2)"/><text x="26.5687%" y="1343.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="26.3299%" y="1317" width="0.0224%" height="15" fill="rgb(237,140,51)"/><text x="26.5799%" y="1327.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="26.3299%" y="1301" width="0.0224%" height="15" fill="rgb(236,157,25)"/><text x="26.5799%" y="1311.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash (1 samples, 0.01%)</title><rect x="26.3523%" y="1349" width="0.0112%" height="15" fill="rgb(219,209,0)"/><text x="26.6023%" y="1359.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash::traverse (3 samples, 0.03%)</title><rect x="26.3635%" y="1349" width="0.0336%" height="15" fill="rgb(240,116,54)"/><text x="26.6135%" y="1359.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="26.3971%" y="1317" width="0.0112%" height="15" fill="rgb(216,10,36)"/><text x="26.6471%" y="1327.50"></text></g><g><title>&lt;rho_runtime::storage::TaggedContinuation as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="26.3971%" y="1349" width="0.0224%" height="15" fill="rgb(222,72,44)"/><text x="26.6471%" y="1359.50"></text></g><g><title>&lt;model::rho_types::ParWithRandom as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="26.3971%" y="1333" width="0.0224%" height="15" fill="rgb(232,159,9)"/><text x="26.6471%" y="1343.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="26.4083%" y="1317" width="0.0112%" height="15" fill="rgb(210,39,32)"/><text x="26.6583%" y="1327.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="26.4083%" y="1301" width="0.0112%" height="15" fill="rgb(216,194,45)"/><text x="26.6583%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="26.4083%" y="1285" width="0.0112%" height="15" fill="rgb(218,18,35)"/><text x="26.6583%" y="1295.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="26.4083%" y="1269" width="0.0112%" height="15" fill="rgb(207,83,51)"/><text x="26.6583%" y="1279.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="26.4083%" y="1253" width="0.0112%" height="15" fill="rgb(225,63,43)"/><text x="26.6583%" y="1263.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="26.4195%" y="1349" width="0.0112%" height="15" fill="rgb(207,57,36)"/><text x="26.6695%" y="1359.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="26.4195%" y="1333" width="0.0112%" height="15" fill="rgb(216,99,33)"/><text x="26.6695%" y="1343.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="26.4195%" y="1317" width="0.0112%" height="15" fill="rgb(225,42,16)"/><text x="26.6695%" y="1327.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (2 samples, 0.02%)</title><rect x="26.4307%" y="1349" width="0.0224%" height="15" fill="rgb(220,201,45)"/><text x="26.6807%" y="1359.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="26.4419%" y="1333" width="0.0112%" height="15" fill="rgb(225,33,4)"/><text x="26.6919%" y="1343.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="26.4531%" y="1349" width="0.0224%" height="15" fill="rgb(224,33,50)"/><text x="26.7031%" y="1359.50"></text></g><g><title>&lt;tokio::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="26.4755%" y="1349" width="0.0112%" height="15" fill="rgb(246,198,51)"/><text x="26.7255%" y="1359.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (4 samples, 0.04%)</title><rect x="26.4867%" y="1349" width="0.0448%" height="15" fill="rgb(205,22,4)"/><text x="26.7367%" y="1359.50"></text></g><g><title>tokio::runtime::park::Inner::park (2 samples, 0.02%)</title><rect x="26.5091%" y="1333" width="0.0224%" height="15" fill="rgb(206,3,8)"/><text x="26.7591%" y="1343.50"></text></g><g><title>tokio::runtime::park::Inner::park_condvar (1 samples, 0.01%)</title><rect x="26.5203%" y="1317" width="0.0112%" height="15" fill="rgb(251,23,15)"/><text x="26.7703%" y="1327.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (1 samples, 0.01%)</title><rect x="26.5203%" y="1301" width="0.0112%" height="15" fill="rgb(252,88,28)"/><text x="26.7703%" y="1311.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (1 samples, 0.01%)</title><rect x="26.5203%" y="1285" width="0.0112%" height="15" fill="rgb(212,127,14)"/><text x="26.7703%" y="1295.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.07%)</title><rect x="26.5315%" y="1349" width="0.0672%" height="15" fill="rgb(247,145,37)"/><text x="26.7815%" y="1359.50"></text></g><g><title>tokio::coop::poll_proceed (2 samples, 0.02%)</title><rect x="26.5763%" y="1333" width="0.0224%" height="15" fill="rgb(209,117,53)"/><text x="26.8263%" y="1343.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="26.5763%" y="1317" width="0.0224%" height="15" fill="rgb(212,90,42)"/><text x="26.8263%" y="1327.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="26.5763%" y="1301" width="0.0224%" height="15" fill="rgb(218,164,37)"/><text x="26.8263%" y="1311.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (1 samples, 0.01%)</title><rect x="26.5875%" y="1285" width="0.0112%" height="15" fill="rgb(246,65,34)"/><text x="26.8375%" y="1295.50"></text></g><g><title>&lt;tokio::sync::mpsc::chan::Tx&lt;T,S&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="26.5987%" y="1349" width="0.0112%" height="15" fill="rgb(231,100,33)"/><text x="26.8487%" y="1359.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="26.6099%" y="1333" width="0.0224%" height="15" fill="rgb(228,126,14)"/><text x="26.8599%" y="1343.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.03%)</title><rect x="26.6099%" y="1349" width="0.0336%" height="15" fill="rgb(215,173,21)"/><text x="26.8599%" y="1359.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::poll_recv (1 samples, 0.01%)</title><rect x="26.6323%" y="1333" width="0.0112%" height="15" fill="rgb(210,6,40)"/><text x="26.8823%" y="1343.50"></text></g><g><title>[libc-2.31.so] (14 samples, 0.16%)</title><rect x="26.6435%" y="1349" width="0.1568%" height="15" fill="rgb(212,48,18)"/><text x="26.8935%" y="1359.50"></text></g><g><title>__libc_malloc (11 samples, 0.12%)</title><rect x="26.8003%" y="1349" width="0.1232%" height="15" fill="rgb(230,214,11)"/><text x="27.0503%" y="1359.50"></text></g><g><title>__rust_probestack (3 samples, 0.03%)</title><rect x="26.9235%" y="1349" width="0.0336%" height="15" fill="rgb(254,105,39)"/><text x="27.1735%" y="1359.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="26.9571%" y="1349" width="0.0112%" height="15" fill="rgb(245,158,5)"/><text x="27.2071%" y="1359.50"></text></g><g><title>alloc::slice::merge_sort (4 samples, 0.04%)</title><rect x="26.9683%" y="1349" width="0.0448%" height="15" fill="rgb(249,208,11)"/><text x="27.2183%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::oneshot::Inner&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="27.0131%" y="1333" width="0.0224%" height="15" fill="rgb(210,39,28)"/><text x="27.2631%" y="1343.50"></text></g><g><title>&lt;tokio::sync::oneshot::Inner&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="27.0131%" y="1317" width="0.0224%" height="15" fill="rgb(211,56,53)"/><text x="27.2631%" y="1327.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.03%)</title><rect x="27.0131%" y="1349" width="0.0336%" height="15" fill="rgb(226,201,30)"/><text x="27.2631%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::oneshot::Inner&lt;rho_runtime::storage::transit::Transit&gt;&gt; (1 samples, 0.01%)</title><rect x="27.0355%" y="1333" width="0.0112%" height="15" fill="rgb(239,101,34)"/><text x="27.2855%" y="1343.50"></text></g><g><title>&lt;tokio::sync::oneshot::Inner&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="27.0355%" y="1317" width="0.0112%" height="15" fill="rgb(226,209,5)"/><text x="27.2855%" y="1327.50"></text></g><g><title>blake3::Hasher::update (1 samples, 0.01%)</title><rect x="27.0467%" y="1349" width="0.0112%" height="15" fill="rgb(250,105,47)"/><text x="27.2967%" y="1359.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="27.0579%" y="1349" width="0.0112%" height="15" fill="rgb(230,72,3)"/><text x="27.3079%" y="1359.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (3 samples, 0.03%)</title><rect x="27.0691%" y="1349" width="0.0336%" height="15" fill="rgb(232,218,39)"/><text x="27.3191%" y="1359.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="27.0915%" y="1333" width="0.0112%" height="15" fill="rgb(248,166,6)"/><text x="27.3415%" y="1343.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (1 samples, 0.01%)</title><rect x="27.0915%" y="1317" width="0.0112%" height="15" fill="rgb(247,89,20)"/><text x="27.3415%" y="1327.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="27.0915%" y="1301" width="0.0112%" height="15" fill="rgb(248,130,54)"/><text x="27.3415%" y="1311.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="27.0915%" y="1285" width="0.0112%" height="15" fill="rgb(234,196,4)"/><text x="27.3415%" y="1295.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="27.0915%" y="1269" width="0.0112%" height="15" fill="rgb(250,143,31)"/><text x="27.3415%" y="1279.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="27.0915%" y="1253" width="0.0112%" height="15" fill="rgb(211,110,34)"/><text x="27.3415%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="27.0915%" y="1237" width="0.0112%" height="15" fill="rgb(215,124,48)"/><text x="27.3415%" y="1247.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="27.0915%" y="1221" width="0.0112%" height="15" fill="rgb(216,46,13)"/><text x="27.3415%" y="1231.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="27.0915%" y="1205" width="0.0112%" height="15" fill="rgb(205,184,25)"/><text x="27.3415%" y="1215.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="27.0915%" y="1189" width="0.0112%" height="15" fill="rgb(228,1,10)"/><text x="27.3415%" y="1199.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="27.0915%" y="1173" width="0.0112%" height="15" fill="rgb(213,116,27)"/><text x="27.3415%" y="1183.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="27.0915%" y="1157" width="0.0112%" height="15" fill="rgb(241,95,50)"/><text x="27.3415%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;rho_runtime::storage::coordinator::AsyncStore&gt;&gt;::evaluate_single_expression::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="27.1027%" y="1349" width="0.0112%" height="15" fill="rgb(238,48,32)"/><text x="27.3527%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;rho_runtime::storage::coordinator::AsyncStore&gt;&gt;::evaluate_single_expression::{{closure}}&gt; (1 samples, 0.01%)</title><rect x="27.1027%" y="1333" width="0.0112%" height="15" fill="rgb(235,113,49)"/><text x="27.3527%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;rho_runtime::storage::coordinator::AsyncStore as rho_runtime::storage::Storage&gt;::produce::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="27.1139%" y="1349" width="0.0112%" height="15" fill="rgb(205,127,43)"/><text x="27.3639%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;rho_runtime::storage::coordinator::AsyncStore&gt; for model::rho_types::Expr&gt;::evaluate::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="27.1251%" y="1349" width="0.0112%" height="15" fill="rgb(250,162,2)"/><text x="27.3751%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::reduce::eval_match::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;rho_runtime::storage::coordinator::AsyncStore&gt; for model::rho_types::Match&gt;::evaluate::{{closure}}&gt;&gt; (2 samples, 0.02%)</title><rect x="27.1363%" y="1349" width="0.0224%" height="15" fill="rgb(220,13,41)"/><text x="27.3863%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Expr&gt; (3 samples, 0.03%)</title><rect x="27.1587%" y="1349" width="0.0336%" height="15" fill="rgb(249,221,25)"/><text x="27.4087%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::expr::ExprInstance&gt;&gt; (3 samples, 0.03%)</title><rect x="27.1587%" y="1333" width="0.0336%" height="15" fill="rgb(215,208,19)"/><text x="27.4087%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Match&gt; (1 samples, 0.01%)</title><rect x="27.1923%" y="1349" width="0.0112%" height="15" fill="rgb(236,175,2)"/><text x="27.4423%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::Par&gt;&gt; (1 samples, 0.01%)</title><rect x="27.1923%" y="1333" width="0.0112%" height="15" fill="rgb(241,52,2)"/><text x="27.4423%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="27.2259%" y="1317" width="0.0112%" height="15" fill="rgb(248,140,14)"/><text x="27.4759%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Expr]&gt; (1 samples, 0.01%)</title><rect x="27.2259%" y="1301" width="0.0112%" height="15" fill="rgb(253,22,42)"/><text x="27.4759%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (2 samples, 0.02%)</title><rect x="27.2259%" y="1333" width="0.0224%" height="15" fill="rgb(234,61,47)"/><text x="27.4759%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (1 samples, 0.01%)</title><rect x="27.2371%" y="1317" width="0.0112%" height="15" fill="rgb(208,226,15)"/><text x="27.4871%" y="1327.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="27.2371%" y="1301" width="0.0112%" height="15" fill="rgb(217,221,4)"/><text x="27.4871%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="27.2371%" y="1285" width="0.0112%" height="15" fill="rgb(212,174,34)"/><text x="27.4871%" y="1295.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="27.2371%" y="1269" width="0.0112%" height="15" fill="rgb(253,83,4)"/><text x="27.4871%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (5 samples, 0.06%)</title><rect x="27.2035%" y="1349" width="0.0560%" height="15" fill="rgb(250,195,49)"/><text x="27.4535%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::bitset::BitSet&gt;&gt; (1 samples, 0.01%)</title><rect x="27.2483%" y="1333" width="0.0112%" height="15" fill="rgb(241,192,25)"/><text x="27.4983%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::bitset::BitSet&gt; (1 samples, 0.01%)</title><rect x="27.2483%" y="1317" width="0.0112%" height="15" fill="rgb(208,124,10)"/><text x="27.4983%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;bit_vec::BitVec&gt; (1 samples, 0.01%)</title><rect x="27.2483%" y="1301" width="0.0112%" height="15" fill="rgb(222,33,0)"/><text x="27.4983%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u32&gt;&gt; (1 samples, 0.01%)</title><rect x="27.2483%" y="1285" width="0.0112%" height="15" fill="rgb(234,209,28)"/><text x="27.4983%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u32&gt;&gt; (1 samples, 0.01%)</title><rect x="27.2483%" y="1269" width="0.0112%" height="15" fill="rgb(224,11,23)"/><text x="27.4983%" y="1279.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="27.2483%" y="1253" width="0.0112%" height="15" fill="rgb(232,99,1)"/><text x="27.4983%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="27.2483%" y="1237" width="0.0112%" height="15" fill="rgb(237,95,45)"/><text x="27.4983%" y="1247.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="27.2483%" y="1221" width="0.0112%" height="15" fill="rgb(208,109,11)"/><text x="27.4983%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Send&gt; (1 samples, 0.01%)</title><rect x="27.2595%" y="1349" width="0.0112%" height="15" fill="rgb(216,190,48)"/><text x="27.5095%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Par&gt;&gt; (1 samples, 0.01%)</title><rect x="27.2595%" y="1333" width="0.0112%" height="15" fill="rgb(251,171,36)"/><text x="27.5095%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Par&gt;&gt; (1 samples, 0.01%)</title><rect x="27.2595%" y="1317" width="0.0112%" height="15" fill="rgb(230,62,22)"/><text x="27.5095%" y="1327.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="27.2595%" y="1301" width="0.0112%" height="15" fill="rgb(225,114,35)"/><text x="27.5095%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="27.2595%" y="1285" width="0.0112%" height="15" fill="rgb(215,118,42)"/><text x="27.5095%" y="1295.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="27.2595%" y="1269" width="0.0112%" height="15" fill="rgb(243,119,21)"/><text x="27.5095%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::expr::ExprInstance&gt; (1 samples, 0.01%)</title><rect x="27.2707%" y="1349" width="0.0112%" height="15" fill="rgb(252,177,53)"/><text x="27.5207%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::EMethod&gt; (1 samples, 0.01%)</title><rect x="27.2707%" y="1333" width="0.0112%" height="15" fill="rgb(237,209,29)"/><text x="27.5207%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Par&gt;&gt; (1 samples, 0.01%)</title><rect x="27.2707%" y="1317" width="0.0112%" height="15" fill="rgb(212,65,23)"/><text x="27.5207%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="27.2707%" y="1301" width="0.0112%" height="15" fill="rgb(230,222,46)"/><text x="27.5207%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Par]&gt; (1 samples, 0.01%)</title><rect x="27.2707%" y="1285" width="0.0112%" height="15" fill="rgb(215,135,32)"/><text x="27.5207%" y="1295.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="27.2707%" y="1269" width="0.0112%" height="15" fill="rgb(246,101,22)"/><text x="27.5207%" y="1279.50"></text></g><g><title>crossbeam_queue::seg_queue::SegQueue&lt;T&gt;::pop (2 samples, 0.02%)</title><rect x="27.2819%" y="1349" width="0.0224%" height="15" fill="rgb(206,107,13)"/><text x="27.5319%" y="1359.50"></text></g><g><title>model::ordering::sort_par::&lt;impl model::ordering::Sortable for model::rho_types::Par&gt;::sort (5 samples, 0.06%)</title><rect x="27.3043%" y="1349" width="0.0560%" height="15" fill="rgb(250,100,44)"/><text x="27.5543%" y="1359.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by (1 samples, 0.01%)</title><rect x="27.3491%" y="1333" width="0.0112%" height="15" fill="rgb(231,147,38)"/><text x="27.5991%" y="1343.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::receives_score (1 samples, 0.01%)</title><rect x="27.3603%" y="1349" width="0.0112%" height="15" fill="rgb(229,8,40)"/><text x="27.6103%" y="1359.50"></text></g><g><title>model::rho_types::Par::append_expr (2 samples, 0.02%)</title><rect x="27.3715%" y="1349" width="0.0224%" height="15" fill="rgb(221,135,30)"/><text x="27.6215%" y="1359.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (6 samples, 0.07%)</title><rect x="27.3939%" y="1349" width="0.0672%" height="15" fill="rgb(249,193,18)"/><text x="27.6439%" y="1359.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (2 samples, 0.02%)</title><rect x="27.4387%" y="1333" width="0.0224%" height="15" fill="rgb(209,133,39)"/><text x="27.6887%" y="1343.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (2 samples, 0.02%)</title><rect x="27.4387%" y="1317" width="0.0224%" height="15" fill="rgb(232,100,14)"/><text x="27.6887%" y="1327.50"></text></g><g><title>syscall (2 samples, 0.02%)</title><rect x="27.4387%" y="1301" width="0.0224%" height="15" fill="rgb(224,185,1)"/><text x="27.6887%" y="1311.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="27.4387%" y="1285" width="0.0224%" height="15" fill="rgb(223,139,8)"/><text x="27.6887%" y="1295.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::__getit (1 samples, 0.01%)</title><rect x="27.4611%" y="1349" width="0.0112%" height="15" fill="rgb(232,213,38)"/><text x="27.7111%" y="1359.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::handle_comm_events (1 samples, 0.01%)</title><rect x="27.4723%" y="1349" width="0.0112%" height="15" fill="rgb(207,94,22)"/><text x="27.7223%" y="1359.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::substitute_expressions_in_par (1 samples, 0.01%)</title><rect x="27.4835%" y="1349" width="0.0112%" height="15" fill="rgb(219,183,54)"/><text x="27.7335%" y="1359.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.01%)</title><rect x="27.4835%" y="1333" width="0.0112%" height="15" fill="rgb(216,185,54)"/><text x="27.7335%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="27.4835%" y="1317" width="0.0112%" height="15" fill="rgb(254,217,39)"/><text x="27.7335%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="27.4835%" y="1301" width="0.0112%" height="15" fill="rgb(240,178,23)"/><text x="27.7335%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="27.4835%" y="1285" width="0.0112%" height="15" fill="rgb(218,11,47)"/><text x="27.7335%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="27.4835%" y="1269" width="0.0112%" height="15" fill="rgb(218,51,51)"/><text x="27.7335%" y="1279.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="27.4835%" y="1253" width="0.0112%" height="15" fill="rgb(238,126,27)"/><text x="27.7335%" y="1263.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="27.4835%" y="1237" width="0.0112%" height="15" fill="rgb(249,202,22)"/><text x="27.7335%" y="1247.50"></text></g><g><title>syscall (4 samples, 0.04%)</title><rect x="27.4947%" y="1349" width="0.0448%" height="15" fill="rgb(254,195,49)"/><text x="27.7447%" y="1359.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="27.5283%" y="1333" width="0.0112%" height="15" fill="rgb(208,123,14)"/><text x="27.7783%" y="1343.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3 samples, 0.03%)</title><rect x="27.5395%" y="1349" width="0.0336%" height="15" fill="rgb(224,200,8)"/><text x="27.7895%" y="1359.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (2 samples, 0.02%)</title><rect x="27.5507%" y="1333" width="0.0224%" height="15" fill="rgb(217,61,36)"/><text x="27.8007%" y="1343.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (3 samples, 0.03%)</title><rect x="27.5731%" y="1349" width="0.0336%" height="15" fill="rgb(206,35,45)"/><text x="27.8231%" y="1359.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="27.5843%" y="1333" width="0.0224%" height="15" fill="rgb(217,65,33)"/><text x="27.8343%" y="1343.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="27.5843%" y="1317" width="0.0224%" height="15" fill="rgb(222,158,48)"/><text x="27.8343%" y="1327.50"></text></g><g><title>tokio::park::thread::wake (1 samples, 0.01%)</title><rect x="27.6067%" y="1349" width="0.0112%" height="15" fill="rgb(254,2,54)"/><text x="27.8567%" y="1359.50"></text></g><g><title>tokio::park::thread::Inner::unpark (1 samples, 0.01%)</title><rect x="27.6067%" y="1333" width="0.0112%" height="15" fill="rgb(250,143,38)"/><text x="27.8567%" y="1343.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::notify_one (1 samples, 0.01%)</title><rect x="27.6067%" y="1317" width="0.0112%" height="15" fill="rgb(248,25,0)"/><text x="27.8567%" y="1327.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one (1 samples, 0.01%)</title><rect x="27.6067%" y="1301" width="0.0112%" height="15" fill="rgb(206,152,27)"/><text x="27.8567%" y="1311.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (2 samples, 0.02%)</title><rect x="27.6179%" y="1349" width="0.0224%" height="15" fill="rgb(240,77,30)"/><text x="27.8679%" y="1359.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::store_output (2 samples, 0.02%)</title><rect x="27.6739%" y="1333" width="0.0224%" height="15" fill="rgb(231,5,3)"/><text x="27.9239%" y="1343.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::set_stage (2 samples, 0.02%)</title><rect x="27.6739%" y="1317" width="0.0224%" height="15" fill="rgb(207,226,32)"/><text x="27.9239%" y="1327.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2 samples, 0.02%)</title><rect x="27.6739%" y="1301" width="0.0224%" height="15" fill="rgb(222,207,47)"/><text x="27.9239%" y="1311.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::set_stage::{{closure}} (2 samples, 0.02%)</title><rect x="27.6739%" y="1285" width="0.0224%" height="15" fill="rgb(229,115,45)"/><text x="27.9239%" y="1295.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (6 samples, 0.07%)</title><rect x="27.6403%" y="1349" width="0.0672%" height="15" fill="rgb(224,191,6)"/><text x="27.8903%" y="1359.50"></text></g><g><title>tokio::runtime::task::harness::transition_to_complete (1 samples, 0.01%)</title><rect x="27.6963%" y="1333" width="0.0112%" height="15" fill="rgb(230,227,24)"/><text x="27.9463%" y="1343.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (2 samples, 0.02%)</title><rect x="27.7075%" y="1349" width="0.0224%" height="15" fill="rgb(228,80,19)"/><text x="27.9575%" y="1359.50"></text></g><g><title>core::mem::drop (1 samples, 0.01%)</title><rect x="27.7187%" y="1333" width="0.0112%" height="15" fill="rgb(247,229,0)"/><text x="27.9687%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Send&gt;::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="27.7187%" y="1317" width="0.0112%" height="15" fill="rgb(237,194,15)"/><text x="27.9687%" y="1327.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.01%)</title><rect x="27.7187%" y="1301" width="0.0112%" height="15" fill="rgb(219,203,20)"/><text x="27.9687%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="27.7187%" y="1285" width="0.0112%" height="15" fill="rgb(234,128,8)"/><text x="27.9687%" y="1295.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="27.7187%" y="1269" width="0.0112%" height="15" fill="rgb(248,202,8)"/><text x="27.9687%" y="1279.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (6 samples, 0.07%)</title><rect x="27.7299%" y="1349" width="0.0672%" height="15" fill="rgb(206,104,37)"/><text x="27.9799%" y="1359.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1 samples, 0.01%)</title><rect x="27.7859%" y="1333" width="0.0112%" height="15" fill="rgb(223,8,27)"/><text x="28.0359%" y="1343.50"></text></g><g><title>tokio::runtime::task::harness::SchedulerView&lt;S&gt;::transition_to_running (1 samples, 0.01%)</title><rect x="27.7859%" y="1317" width="0.0112%" height="15" fill="rgb(216,217,28)"/><text x="28.0359%" y="1327.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::try_read_output (3 samples, 0.03%)</title><rect x="27.7971%" y="1349" width="0.0336%" height="15" fill="rgb(249,199,1)"/><text x="28.0471%" y="1359.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::take_output (2 samples, 0.02%)</title><rect x="27.8083%" y="1333" width="0.0224%" height="15" fill="rgb(240,85,17)"/><text x="28.0583%" y="1343.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2 samples, 0.02%)</title><rect x="27.8083%" y="1317" width="0.0224%" height="15" fill="rgb(206,108,45)"/><text x="28.0583%" y="1327.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::take_output::{{closure}} (2 samples, 0.02%)</title><rect x="27.8083%" y="1301" width="0.0224%" height="15" fill="rgb(245,210,41)"/><text x="28.0583%" y="1311.50"></text></g><g><title>core::mem::replace (2 samples, 0.02%)</title><rect x="27.8083%" y="1285" width="0.0224%" height="15" fill="rgb(206,13,37)"/><text x="28.0583%" y="1295.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_complete (1 samples, 0.01%)</title><rect x="27.8307%" y="1349" width="0.0112%" height="15" fill="rgb(250,61,18)"/><text x="28.0807%" y="1359.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_terminal (2 samples, 0.02%)</title><rect x="27.8419%" y="1349" width="0.0224%" height="15" fill="rgb(235,172,48)"/><text x="28.0919%" y="1359.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (1 samples, 0.01%)</title><rect x="27.8643%" y="1349" width="0.0112%" height="15" fill="rgb(249,201,17)"/><text x="28.1143%" y="1359.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (1 samples, 0.01%)</title><rect x="27.8643%" y="1333" width="0.0112%" height="15" fill="rgb(219,208,6)"/><text x="28.1143%" y="1343.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::schedule (1 samples, 0.01%)</title><rect x="27.8755%" y="1349" width="0.0112%" height="15" fill="rgb(248,31,23)"/><text x="28.1255%" y="1359.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (1 samples, 0.01%)</title><rect x="27.8755%" y="1333" width="0.0112%" height="15" fill="rgb(245,15,42)"/><text x="28.1255%" y="1343.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (5 samples, 0.06%)</title><rect x="27.8867%" y="1349" width="0.0560%" height="15" fill="rgb(222,217,39)"/><text x="28.1367%" y="1359.50"></text></g><g><title>tokio::sync::mpsc::chan::Tx&lt;T,S&gt;::send (2 samples, 0.02%)</title><rect x="27.9427%" y="1349" width="0.0224%" height="15" fill="rgb(210,219,27)"/><text x="28.1927%" y="1359.50"></text></g><g><title>tokio::sync::oneshot::State::is_closed (1 samples, 0.01%)</title><rect x="27.9651%" y="1349" width="0.0112%" height="15" fill="rgb(252,166,36)"/><text x="28.2151%" y="1359.50"></text></g><g><title>tokio::sync::oneshot::State::is_complete (1 samples, 0.01%)</title><rect x="27.9763%" y="1349" width="0.0112%" height="15" fill="rgb(245,132,34)"/><text x="28.2263%" y="1359.50"></text></g><g><title>[anon] (207 samples, 2.32%)</title><rect x="25.6804%" y="1365" width="2.3183%" height="15" fill="rgb(236,54,3)"/><text x="25.9304%" y="1375.50">[..</text></g><g><title>tokio::task::spawn::spawn (1 samples, 0.01%)</title><rect x="27.9875%" y="1349" width="0.0112%" height="15" fill="rgb(241,173,43)"/><text x="28.2375%" y="1359.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="28.0435%" y="1349" width="0.0112%" height="15" fill="rgb(215,190,9)"/><text x="28.2935%" y="1359.50"></text></g><g><title>__GI___pthread_rwlock_rdlock (1 samples, 0.01%)</title><rect x="28.0547%" y="1349" width="0.0112%" height="15" fill="rgb(242,101,16)"/><text x="28.3047%" y="1359.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="28.0659%" y="1349" width="0.0112%" height="15" fill="rgb(223,190,21)"/><text x="28.3159%" y="1359.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.09%)</title><rect x="27.9987%" y="1365" width="0.0896%" height="15" fill="rgb(215,228,25)"/><text x="28.2487%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (1 samples, 0.01%)</title><rect x="28.0771%" y="1349" width="0.0112%" height="15" fill="rgb(225,36,22)"/><text x="28.3271%" y="1359.50"></text></g><g><title>[rho_runtime] (1 samples, 0.01%)</title><rect x="28.0883%" y="1365" width="0.0112%" height="15" fill="rgb(251,106,46)"/><text x="28.3383%" y="1375.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (1 samples, 0.01%)</title><rect x="28.0883%" y="1349" width="0.0112%" height="15" fill="rgb(208,90,1)"/><text x="28.3383%" y="1359.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15 samples, 0.17%)</title><rect x="28.3122%" y="1349" width="0.1680%" height="15" fill="rgb(243,10,4)"/><text x="28.5622%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.10%)</title><rect x="28.4802%" y="1349" width="0.1008%" height="15" fill="rgb(212,137,27)"/><text x="28.7302%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="28.5586%" y="1333" width="0.0224%" height="15" fill="rgb(231,220,49)"/><text x="28.8086%" y="1343.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="28.5810%" y="1349" width="0.0224%" height="15" fill="rgb(237,96,20)"/><text x="28.8310%" y="1359.50"></text></g><g><title>[libc-2.31.so] (18 samples, 0.20%)</title><rect x="28.9954%" y="1221" width="0.2016%" height="15" fill="rgb(239,229,30)"/><text x="29.2454%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (3 samples, 0.03%)</title><rect x="29.1970%" y="1221" width="0.0336%" height="15" fill="rgb(219,65,33)"/><text x="29.4470%" y="1231.50"></text></g><g><title>core::ptr::read (3 samples, 0.03%)</title><rect x="29.1970%" y="1205" width="0.0336%" height="15" fill="rgb(243,134,7)"/><text x="29.4470%" y="1215.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="29.1970%" y="1189" width="0.0336%" height="15" fill="rgb(216,177,54)"/><text x="29.4470%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="29.2306%" y="1221" width="0.0112%" height="15" fill="rgb(211,160,20)"/><text x="29.4806%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (1 samples, 0.01%)</title><rect x="29.2306%" y="1205" width="0.0112%" height="15" fill="rgb(239,85,39)"/><text x="29.4806%" y="1215.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.01%)</title><rect x="29.2306%" y="1189" width="0.0112%" height="15" fill="rgb(232,125,22)"/><text x="29.4806%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="29.2306%" y="1173" width="0.0112%" height="15" fill="rgb(244,57,34)"/><text x="29.4806%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="29.2306%" y="1157" width="0.0112%" height="15" fill="rgb(214,203,32)"/><text x="29.4806%" y="1167.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="29.2306%" y="1141" width="0.0112%" height="15" fill="rgb(207,58,43)"/><text x="29.4806%" y="1151.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="29.2306%" y="1125" width="0.0112%" height="15" fill="rgb(215,193,15)"/><text x="29.4806%" y="1135.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="29.2418%" y="1189" width="0.0224%" height="15" fill="rgb(232,15,44)"/><text x="29.4918%" y="1199.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression::{{closure}} (31 samples, 0.35%)</title><rect x="28.9394%" y="1237" width="0.3472%" height="15" fill="rgb(212,3,48)"/><text x="29.1894%" y="1247.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (4 samples, 0.04%)</title><rect x="29.2418%" y="1221" width="0.0448%" height="15" fill="rgb(218,128,7)"/><text x="29.4918%" y="1231.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (4 samples, 0.04%)</title><rect x="29.2418%" y="1205" width="0.0448%" height="15" fill="rgb(226,216,39)"/><text x="29.4918%" y="1215.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.02%)</title><rect x="29.2642%" y="1189" width="0.0224%" height="15" fill="rgb(243,47,51)"/><text x="29.5142%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="29.2642%" y="1173" width="0.0224%" height="15" fill="rgb(241,183,40)"/><text x="29.5142%" y="1183.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="29.2642%" y="1157" width="0.0224%" height="15" fill="rgb(231,217,32)"/><text x="29.5142%" y="1167.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="29.2642%" y="1141" width="0.0224%" height="15" fill="rgb(229,61,38)"/><text x="29.5142%" y="1151.50"></text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="29.2642%" y="1125" width="0.0224%" height="15" fill="rgb(225,210,5)"/><text x="29.5142%" y="1135.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.09%)</title><rect x="29.2866%" y="1237" width="0.0896%" height="15" fill="rgb(231,79,45)"/><text x="29.5366%" y="1247.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (6 samples, 0.07%)</title><rect x="29.4322%" y="1221" width="0.0672%" height="15" fill="rgb(224,100,7)"/><text x="29.6822%" y="1231.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.07%)</title><rect x="29.4322%" y="1205" width="0.0672%" height="15" fill="rgb(241,198,18)"/><text x="29.6822%" y="1215.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.04%)</title><rect x="29.5106%" y="1189" width="0.0448%" height="15" fill="rgb(252,97,53)"/><text x="29.7606%" y="1199.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="29.5554%" y="1125" width="0.0112%" height="15" fill="rgb(220,88,7)"/><text x="29.8054%" y="1135.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (8 samples, 0.09%)</title><rect x="29.4994%" y="1221" width="0.0896%" height="15" fill="rgb(213,176,14)"/><text x="29.7494%" y="1231.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (8 samples, 0.09%)</title><rect x="29.4994%" y="1205" width="0.0896%" height="15" fill="rgb(246,73,7)"/><text x="29.7494%" y="1215.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.03%)</title><rect x="29.5554%" y="1189" width="0.0336%" height="15" fill="rgb(245,64,36)"/><text x="29.8054%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.03%)</title><rect x="29.5554%" y="1173" width="0.0336%" height="15" fill="rgb(245,80,10)"/><text x="29.8054%" y="1183.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.03%)</title><rect x="29.5554%" y="1157" width="0.0336%" height="15" fill="rgb(232,107,50)"/><text x="29.8054%" y="1167.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.03%)</title><rect x="29.5554%" y="1141" width="0.0336%" height="15" fill="rgb(253,3,0)"/><text x="29.8054%" y="1151.50"></text></g><g><title>__rdl_alloc (2 samples, 0.02%)</title><rect x="29.5666%" y="1125" width="0.0224%" height="15" fill="rgb(212,99,53)"/><text x="29.8166%" y="1135.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.02%)</title><rect x="29.5666%" y="1109" width="0.0224%" height="15" fill="rgb(249,111,54)"/><text x="29.8166%" y="1119.50"></text></g><g><title>[libc-2.31.so] (22 samples, 0.25%)</title><rect x="29.5890%" y="1221" width="0.2464%" height="15" fill="rgb(249,55,30)"/><text x="29.8390%" y="1231.50"></text></g><g><title>core::num::&lt;impl i64&gt;::overflowing_add (1 samples, 0.01%)</title><rect x="29.8354%" y="1221" width="0.0112%" height="15" fill="rgb(237,47,42)"/><text x="30.0854%" y="1231.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="29.8466%" y="1141" width="0.0112%" height="15" fill="rgb(211,20,18)"/><text x="30.0966%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;model::rho_types::Expr,model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (3 samples, 0.03%)</title><rect x="29.8466%" y="1221" width="0.0336%" height="15" fill="rgb(231,203,46)"/><text x="30.0966%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;model::rho_types::Expr,model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (3 samples, 0.03%)</title><rect x="29.8466%" y="1205" width="0.0336%" height="15" fill="rgb(237,142,3)"/><text x="30.0966%" y="1215.50"></text></g><g><title>alloc::alloc::box_free (3 samples, 0.03%)</title><rect x="29.8466%" y="1189" width="0.0336%" height="15" fill="rgb(241,107,1)"/><text x="30.0966%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.03%)</title><rect x="29.8466%" y="1173" width="0.0336%" height="15" fill="rgb(229,83,13)"/><text x="30.0966%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.03%)</title><rect x="29.8466%" y="1157" width="0.0336%" height="15" fill="rgb(241,91,40)"/><text x="30.0966%" y="1167.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="29.8578%" y="1141" width="0.0224%" height="15" fill="rgb(225,3,45)"/><text x="30.1078%" y="1151.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (86 samples, 0.96%)</title><rect x="28.9394%" y="1269" width="0.9632%" height="15" fill="rgb(244,223,14)"/><text x="29.1894%" y="1279.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (86 samples, 0.96%)</title><rect x="28.9394%" y="1253" width="0.9632%" height="15" fill="rgb(224,124,37)"/><text x="29.1894%" y="1263.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::eval_eplus::&lt;impl rho_runtime::interpreter::reduce::eval_expression::AsyncExprInstanceEvaluator&lt;S&gt; for model::rho_types::EPlus&gt;::evaluate::{{closure}} (47 samples, 0.53%)</title><rect x="29.3762%" y="1237" width="0.5264%" height="15" fill="rgb(251,171,30)"/><text x="29.6262%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::expr::ExprInstance&gt; (2 samples, 0.02%)</title><rect x="29.8802%" y="1221" width="0.0224%" height="15" fill="rgb(236,46,54)"/><text x="30.1302%" y="1231.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (6 samples, 0.07%)</title><rect x="29.9026%" y="1269" width="0.0672%" height="15" fill="rgb(245,213,5)"/><text x="30.1526%" y="1279.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.07%)</title><rect x="29.9026%" y="1253" width="0.0672%" height="15" fill="rgb(230,144,27)"/><text x="30.1526%" y="1263.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.06%)</title><rect x="29.9698%" y="1237" width="0.0560%" height="15" fill="rgb(220,86,6)"/><text x="30.2198%" y="1247.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (7 samples, 0.08%)</title><rect x="29.9698%" y="1269" width="0.0784%" height="15" fill="rgb(240,20,13)"/><text x="30.2198%" y="1279.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (7 samples, 0.08%)</title><rect x="29.9698%" y="1253" width="0.0784%" height="15" fill="rgb(217,89,34)"/><text x="30.2198%" y="1263.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.02%)</title><rect x="30.0258%" y="1237" width="0.0224%" height="15" fill="rgb(229,13,5)"/><text x="30.2758%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="30.0258%" y="1221" width="0.0224%" height="15" fill="rgb(244,67,35)"/><text x="30.2758%" y="1231.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="30.0258%" y="1205" width="0.0224%" height="15" fill="rgb(221,40,2)"/><text x="30.2758%" y="1215.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="30.0258%" y="1189" width="0.0224%" height="15" fill="rgb(237,157,21)"/><text x="30.2758%" y="1199.50"></text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="30.0258%" y="1173" width="0.0224%" height="15" fill="rgb(222,94,11)"/><text x="30.2758%" y="1183.50"></text></g><g><title>[libc-2.31.so] (24 samples, 0.27%)</title><rect x="30.0482%" y="1269" width="0.2688%" height="15" fill="rgb(249,113,6)"/><text x="30.2982%" y="1279.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.07%)</title><rect x="30.3281%" y="1157" width="0.0672%" height="15" fill="rgb(238,137,36)"/><text x="30.5781%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (7 samples, 0.08%)</title><rect x="30.3281%" y="1237" width="0.0784%" height="15" fill="rgb(210,102,26)"/><text x="30.5781%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (7 samples, 0.08%)</title><rect x="30.3281%" y="1221" width="0.0784%" height="15" fill="rgb(218,30,30)"/><text x="30.5781%" y="1231.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.08%)</title><rect x="30.3281%" y="1205" width="0.0784%" height="15" fill="rgb(214,67,26)"/><text x="30.5781%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.08%)</title><rect x="30.3281%" y="1189" width="0.0784%" height="15" fill="rgb(251,9,53)"/><text x="30.5781%" y="1199.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.08%)</title><rect x="30.3281%" y="1173" width="0.0784%" height="15" fill="rgb(228,204,25)"/><text x="30.5781%" y="1183.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="30.3953%" y="1157" width="0.0112%" height="15" fill="rgb(207,153,8)"/><text x="30.6453%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (9 samples, 0.10%)</title><rect x="30.3169%" y="1253" width="0.1008%" height="15" fill="rgb(242,9,16)"/><text x="30.5669%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Receive&gt;&gt; (1 samples, 0.01%)</title><rect x="30.4065%" y="1237" width="0.0112%" height="15" fill="rgb(217,211,10)"/><text x="30.6565%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="30.4065%" y="1221" width="0.0112%" height="15" fill="rgb(219,228,52)"/><text x="30.6565%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Receive]&gt; (1 samples, 0.01%)</title><rect x="30.4065%" y="1205" width="0.0112%" height="15" fill="rgb(231,92,29)"/><text x="30.6565%" y="1215.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="30.4177%" y="1205" width="0.0224%" height="15" fill="rgb(232,8,23)"/><text x="30.6677%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::GUnforgeable&gt;&gt; (1 samples, 0.01%)</title><rect x="30.4401%" y="1189" width="0.0112%" height="15" fill="rgb(216,211,34)"/><text x="30.6901%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="30.4401%" y="1173" width="0.0112%" height="15" fill="rgb(236,151,0)"/><text x="30.6901%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::GUnforgeable]&gt; (1 samples, 0.01%)</title><rect x="30.4401%" y="1157" width="0.0112%" height="15" fill="rgb(209,168,3)"/><text x="30.6901%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="30.4513%" y="1173" width="0.0224%" height="15" fill="rgb(208,129,28)"/><text x="30.7013%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Match]&gt; (2 samples, 0.02%)</title><rect x="30.4513%" y="1157" width="0.0224%" height="15" fill="rgb(229,78,22)"/><text x="30.7013%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Match&gt;&gt; (3 samples, 0.03%)</title><rect x="30.4513%" y="1189" width="0.0336%" height="15" fill="rgb(228,187,13)"/><text x="30.7013%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Match&gt;&gt; (1 samples, 0.01%)</title><rect x="30.4737%" y="1173" width="0.0112%" height="15" fill="rgb(240,119,24)"/><text x="30.7237%" y="1183.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="30.4737%" y="1157" width="0.0112%" height="15" fill="rgb(209,194,42)"/><text x="30.7237%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="30.4737%" y="1141" width="0.0112%" height="15" fill="rgb(247,200,46)"/><text x="30.7237%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::ELt&gt; (7 samples, 0.08%)</title><rect x="30.4177%" y="1237" width="0.0784%" height="15" fill="rgb(218,76,16)"/><text x="30.6677%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::Par&gt;&gt; (7 samples, 0.08%)</title><rect x="30.4177%" y="1221" width="0.0784%" height="15" fill="rgb(225,21,48)"/><text x="30.6677%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (5 samples, 0.06%)</title><rect x="30.4401%" y="1205" width="0.0560%" height="15" fill="rgb(239,223,50)"/><text x="30.6901%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Receive&gt;&gt; (1 samples, 0.01%)</title><rect x="30.4849%" y="1189" width="0.0112%" height="15" fill="rgb(244,45,21)"/><text x="30.7349%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="30.4849%" y="1173" width="0.0112%" height="15" fill="rgb(232,33,43)"/><text x="30.7349%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Receive]&gt; (1 samples, 0.01%)</title><rect x="30.4849%" y="1157" width="0.0112%" height="15" fill="rgb(209,8,3)"/><text x="30.7349%" y="1167.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="30.4961%" y="1205" width="0.0224%" height="15" fill="rgb(214,25,53)"/><text x="30.7461%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="30.5297%" y="1173" width="0.0112%" height="15" fill="rgb(254,186,54)"/><text x="30.7797%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Expr]&gt; (1 samples, 0.01%)</title><rect x="30.5297%" y="1157" width="0.0112%" height="15" fill="rgb(208,174,49)"/><text x="30.7797%" y="1167.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="30.5409%" y="1109" width="0.0224%" height="15" fill="rgb(233,191,51)"/><text x="30.7909%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (4 samples, 0.04%)</title><rect x="30.5297%" y="1189" width="0.0448%" height="15" fill="rgb(222,134,10)"/><text x="30.7797%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (3 samples, 0.03%)</title><rect x="30.5409%" y="1173" width="0.0336%" height="15" fill="rgb(230,226,20)"/><text x="30.7909%" y="1183.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="30.5409%" y="1157" width="0.0336%" height="15" fill="rgb(251,111,25)"/><text x="30.7909%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.03%)</title><rect x="30.5409%" y="1141" width="0.0336%" height="15" fill="rgb(224,40,46)"/><text x="30.7909%" y="1151.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.03%)</title><rect x="30.5409%" y="1125" width="0.0336%" height="15" fill="rgb(236,108,47)"/><text x="30.7909%" y="1135.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="30.5633%" y="1109" width="0.0112%" height="15" fill="rgb(234,93,0)"/><text x="30.8133%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::expr::ExprInstance&gt;&gt; (24 samples, 0.27%)</title><rect x="30.3169%" y="1269" width="0.2688%" height="15" fill="rgb(224,213,32)"/><text x="30.5669%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::expr::ExprInstance&gt; (15 samples, 0.17%)</title><rect x="30.4177%" y="1253" width="0.1680%" height="15" fill="rgb(251,11,48)"/><text x="30.6677%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::EPlus&gt; (8 samples, 0.09%)</title><rect x="30.4961%" y="1237" width="0.0896%" height="15" fill="rgb(236,173,5)"/><text x="30.7461%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::Par&gt;&gt; (8 samples, 0.09%)</title><rect x="30.4961%" y="1221" width="0.0896%" height="15" fill="rgb(230,95,12)"/><text x="30.7461%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (6 samples, 0.07%)</title><rect x="30.5185%" y="1205" width="0.0672%" height="15" fill="rgb(232,209,1)"/><text x="30.7685%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Match&gt;&gt; (1 samples, 0.01%)</title><rect x="30.5745%" y="1189" width="0.0112%" height="15" fill="rgb(232,6,1)"/><text x="30.8245%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="30.5745%" y="1173" width="0.0112%" height="15" fill="rgb(210,224,50)"/><text x="30.8245%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Match]&gt; (1 samples, 0.01%)</title><rect x="30.5745%" y="1157" width="0.0112%" height="15" fill="rgb(228,127,35)"/><text x="30.8245%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;model::rho_types::expr::ExprInstance,model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="30.5857%" y="1269" width="0.0224%" height="15" fill="rgb(245,102,45)"/><text x="30.8357%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;model::rho_types::expr::ExprInstance,model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (2 samples, 0.02%)</title><rect x="30.5857%" y="1253" width="0.0224%" height="15" fill="rgb(214,1,49)"/><text x="30.8357%" y="1263.50"></text></g><g><title>alloc::alloc::box_free (2 samples, 0.02%)</title><rect x="30.5857%" y="1237" width="0.0224%" height="15" fill="rgb(226,163,40)"/><text x="30.8357%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="30.5857%" y="1221" width="0.0224%" height="15" fill="rgb(239,212,28)"/><text x="30.8357%" y="1231.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="30.5857%" y="1205" width="0.0224%" height="15" fill="rgb(220,20,13)"/><text x="30.8357%" y="1215.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="30.5857%" y="1189" width="0.0224%" height="15" fill="rgb(210,164,35)"/><text x="30.8357%" y="1199.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="30.6081%" y="1237" width="0.0224%" height="15" fill="rgb(248,109,41)"/><text x="30.8581%" y="1247.50"></text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="30.6305%" y="1173" width="0.0224%" height="15" fill="rgb(238,23,50)"/><text x="30.8805%" y="1183.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (161 samples, 1.80%)</title><rect x="28.8610%" y="1317" width="1.8031%" height="15" fill="rgb(211,48,49)"/><text x="29.1110%" y="1327.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (161 samples, 1.80%)</title><rect x="28.8610%" y="1301" width="1.8031%" height="15" fill="rgb(223,36,21)"/><text x="29.1110%" y="1311.50">&lt;..</text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate::{{closure}} (161 samples, 1.80%)</title><rect x="28.8610%" y="1285" width="1.8031%" height="15" fill="rgb(207,123,46)"/><text x="29.1110%" y="1295.50">r..</text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::eval_eplus::&lt;impl rho_runtime::interpreter::reduce::eval_expression::AsyncExprInstanceEvaluator&lt;S&gt; for model::rho_types::EPlus&gt;::evaluate (5 samples, 0.06%)</title><rect x="30.6081%" y="1269" width="0.0560%" height="15" fill="rgb(240,218,32)"/><text x="30.8581%" y="1279.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (5 samples, 0.06%)</title><rect x="30.6081%" y="1253" width="0.0560%" height="15" fill="rgb(252,5,43)"/><text x="30.8581%" y="1263.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.03%)</title><rect x="30.6305%" y="1237" width="0.0336%" height="15" fill="rgb(252,84,19)"/><text x="30.8805%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.03%)</title><rect x="30.6305%" y="1221" width="0.0336%" height="15" fill="rgb(243,152,39)"/><text x="30.8805%" y="1231.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.03%)</title><rect x="30.6305%" y="1205" width="0.0336%" height="15" fill="rgb(234,160,15)"/><text x="30.8805%" y="1215.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.03%)</title><rect x="30.6305%" y="1189" width="0.0336%" height="15" fill="rgb(237,34,20)"/><text x="30.8805%" y="1199.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="30.6529%" y="1173" width="0.0112%" height="15" fill="rgb(229,97,13)"/><text x="30.9029%" y="1183.50"></text></g><g><title>core::ptr::read (8 samples, 0.09%)</title><rect x="30.6641%" y="1301" width="0.0896%" height="15" fill="rgb(234,71,50)"/><text x="30.9141%" y="1311.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.08%)</title><rect x="30.6753%" y="1285" width="0.0784%" height="15" fill="rgb(253,155,4)"/><text x="30.9253%" y="1295.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.10%)</title><rect x="30.6641%" y="1317" width="0.1008%" height="15" fill="rgb(222,185,37)"/><text x="30.9141%" y="1327.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="30.7537%" y="1301" width="0.0112%" height="15" fill="rgb(251,177,13)"/><text x="31.0037%" y="1311.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple (1 samples, 0.01%)</title><rect x="30.7537%" y="1285" width="0.0112%" height="15" fill="rgb(250,179,40)"/><text x="31.0037%" y="1295.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.08%)</title><rect x="30.8993%" y="1301" width="0.0784%" height="15" fill="rgb(242,44,2)"/><text x="31.1493%" y="1311.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 0.08%)</title><rect x="30.8993%" y="1285" width="0.0784%" height="15" fill="rgb(216,177,13)"/><text x="31.1493%" y="1295.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (7 samples, 0.08%)</title><rect x="30.8993%" y="1269" width="0.0784%" height="15" fill="rgb(216,106,43)"/><text x="31.1493%" y="1279.50"></text></g><g><title>core::ptr::read (7 samples, 0.08%)</title><rect x="30.8993%" y="1253" width="0.0784%" height="15" fill="rgb(216,183,2)"/><text x="31.1493%" y="1263.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.07%)</title><rect x="30.9105%" y="1237" width="0.0672%" height="15" fill="rgb(249,75,3)"/><text x="31.1605%" y="1247.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (22 samples, 0.25%)</title><rect x="30.7649%" y="1317" width="0.2464%" height="15" fill="rgb(219,67,39)"/><text x="31.0149%" y="1327.50"></text></g><g><title>core::ptr::write (3 samples, 0.03%)</title><rect x="30.9777%" y="1301" width="0.0336%" height="15" fill="rgb(253,228,2)"/><text x="31.2277%" y="1311.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="30.9777%" y="1285" width="0.0336%" height="15" fill="rgb(235,138,27)"/><text x="31.2277%" y="1295.50"></text></g><g><title>[libc-2.31.so] (23 samples, 0.26%)</title><rect x="31.0449%" y="1301" width="0.2576%" height="15" fill="rgb(236,97,51)"/><text x="31.2949%" y="1311.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (27 samples, 0.30%)</title><rect x="31.0113%" y="1317" width="0.3024%" height="15" fill="rgb(240,80,30)"/><text x="31.2613%" y="1327.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::len (1 samples, 0.01%)</title><rect x="31.3025%" y="1301" width="0.0112%" height="15" fill="rgb(230,178,19)"/><text x="31.5525%" y="1311.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple (1 samples, 0.01%)</title><rect x="31.3025%" y="1285" width="0.0112%" height="15" fill="rgb(210,190,27)"/><text x="31.5525%" y="1295.50"></text></g><g><title>[libc-2.31.so] (55 samples, 0.62%)</title><rect x="31.3137%" y="1317" width="0.6160%" height="15" fill="rgb(222,107,31)"/><text x="31.5637%" y="1327.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="31.9073%" y="1301" width="0.0224%" height="15" fill="rgb(216,127,34)"/><text x="32.1573%" y="1311.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.9185%" y="1285" width="0.0112%" height="15" fill="rgb(234,116,52)"/><text x="32.1685%" y="1295.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.9185%" y="1269" width="0.0112%" height="15" fill="rgb(222,124,15)"/><text x="32.1685%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.9185%" y="1253" width="0.0112%" height="15" fill="rgb(231,179,28)"/><text x="32.1685%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.9185%" y="1237" width="0.0112%" height="15" fill="rgb(226,93,45)"/><text x="32.1685%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.9185%" y="1221" width="0.0112%" height="15" fill="rgb(215,8,51)"/><text x="32.1685%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.9185%" y="1205" width="0.0112%" height="15" fill="rgb(223,106,5)"/><text x="32.1685%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.9185%" y="1189" width="0.0112%" height="15" fill="rgb(250,191,5)"/><text x="32.1685%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.9185%" y="1173" width="0.0112%" height="15" fill="rgb(242,132,44)"/><text x="32.1685%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.9185%" y="1157" width="0.0112%" height="15" fill="rgb(251,152,29)"/><text x="32.1685%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.9185%" y="1141" width="0.0112%" height="15" fill="rgb(218,179,5)"/><text x="32.1685%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.9185%" y="1125" width="0.0112%" height="15" fill="rgb(227,67,19)"/><text x="32.1685%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="31.9185%" y="1109" width="0.0112%" height="15" fill="rgb(233,119,31)"/><text x="32.1685%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (1 samples, 0.01%)</title><rect x="31.9297%" y="1317" width="0.0112%" height="15" fill="rgb(241,120,22)"/><text x="32.1797%" y="1327.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.01%)</title><rect x="31.9297%" y="1301" width="0.0112%" height="15" fill="rgb(224,102,30)"/><text x="32.1797%" y="1311.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="31.9297%" y="1285" width="0.0112%" height="15" fill="rgb(210,164,37)"/><text x="32.1797%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (7 samples, 0.08%)</title><rect x="31.9409%" y="1317" width="0.0784%" height="15" fill="rgb(226,191,16)"/><text x="32.1909%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (7 samples, 0.08%)</title><rect x="31.9409%" y="1301" width="0.0784%" height="15" fill="rgb(214,40,45)"/><text x="32.1909%" y="1311.50"></text></g><g><title>alloc::alloc::box_free (7 samples, 0.08%)</title><rect x="31.9409%" y="1285" width="0.0784%" height="15" fill="rgb(244,29,26)"/><text x="32.1909%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.06%)</title><rect x="31.9633%" y="1269" width="0.0560%" height="15" fill="rgb(216,16,5)"/><text x="32.2133%" y="1279.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.04%)</title><rect x="31.9745%" y="1253" width="0.0448%" height="15" fill="rgb(249,76,35)"/><text x="32.2245%" y="1263.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.04%)</title><rect x="31.9745%" y="1237" width="0.0448%" height="15" fill="rgb(207,11,44)"/><text x="32.2245%" y="1247.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="32.0193%" y="1301" width="0.0112%" height="15" fill="rgb(228,190,49)"/><text x="32.2693%" y="1311.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="32.0193%" y="1285" width="0.0112%" height="15" fill="rgb(214,173,12)"/><text x="32.2693%" y="1295.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="32.0193%" y="1269" width="0.0112%" height="15" fill="rgb(218,26,35)"/><text x="32.2693%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::IntoIter&lt;[model::rho_types::Expr: 5]&gt;&gt; (2 samples, 0.02%)</title><rect x="32.0193%" y="1317" width="0.0224%" height="15" fill="rgb(220,200,19)"/><text x="32.2693%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[model::rho_types::Expr: 5]&gt;&gt; (1 samples, 0.01%)</title><rect x="32.0305%" y="1301" width="0.0112%" height="15" fill="rgb(239,95,49)"/><text x="32.2805%" y="1311.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="32.0305%" y="1285" width="0.0112%" height="15" fill="rgb(235,85,53)"/><text x="32.2805%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Expr]&gt; (1 samples, 0.01%)</title><rect x="32.0305%" y="1269" width="0.0112%" height="15" fill="rgb(233,133,31)"/><text x="32.2805%" y="1279.50"></text></g><g><title>&lt;model::locally_free::ExprInstanceLocallyFree as model::locally_free::HasLocallyFree&lt;model::rho_types::expr::ExprInstance&gt;&gt;::locally_free (1 samples, 0.01%)</title><rect x="32.0753%" y="1301" width="0.0112%" height="15" fill="rgb(218,25,20)"/><text x="32.3253%" y="1311.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.04%)</title><rect x="32.0865%" y="1301" width="0.0448%" height="15" fill="rgb(252,210,38)"/><text x="32.3365%" y="1311.50"></text></g><g><title>model::rho_types::Par::append_expr (18 samples, 0.20%)</title><rect x="32.0417%" y="1317" width="0.2016%" height="15" fill="rgb(242,134,21)"/><text x="32.2917%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.11%)</title><rect x="32.1313%" y="1301" width="0.1120%" height="15" fill="rgb(213,28,48)"/><text x="32.3813%" y="1311.50"></text></g><g><title>core::ptr::write (10 samples, 0.11%)</title><rect x="32.1313%" y="1285" width="0.1120%" height="15" fill="rgb(250,196,2)"/><text x="32.3813%" y="1295.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.11%)</title><rect x="32.1313%" y="1269" width="0.1120%" height="15" fill="rgb(227,5,17)"/><text x="32.3813%" y="1279.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="32.2433%" y="1285" width="0.0336%" height="15" fill="rgb(221,226,24)"/><text x="32.4933%" y="1295.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_nested_expressions::{{closure}} (319 samples, 3.57%)</title><rect x="28.7378%" y="1333" width="3.5726%" height="15" fill="rgb(211,5,48)"/><text x="28.9878%" y="1343.50">&lt;mod..</text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (6 samples, 0.07%)</title><rect x="32.2433%" y="1317" width="0.0672%" height="15" fill="rgb(219,150,6)"/><text x="32.4933%" y="1327.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (6 samples, 0.07%)</title><rect x="32.2433%" y="1301" width="0.0672%" height="15" fill="rgb(251,46,16)"/><text x="32.4933%" y="1311.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.03%)</title><rect x="32.2769%" y="1285" width="0.0336%" height="15" fill="rgb(220,204,40)"/><text x="32.5269%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.03%)</title><rect x="32.2769%" y="1269" width="0.0336%" height="15" fill="rgb(211,85,2)"/><text x="32.5269%" y="1279.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.03%)</title><rect x="32.2769%" y="1253" width="0.0336%" height="15" fill="rgb(229,17,7)"/><text x="32.5269%" y="1263.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.03%)</title><rect x="32.2769%" y="1237" width="0.0336%" height="15" fill="rgb(239,72,28)"/><text x="32.5269%" y="1247.50"></text></g><g><title>__libc_malloc (3 samples, 0.03%)</title><rect x="32.2769%" y="1221" width="0.0336%" height="15" fill="rgb(230,47,54)"/><text x="32.5269%" y="1231.50"></text></g><g><title>[libc-2.31.so] (18 samples, 0.20%)</title><rect x="32.3104%" y="1301" width="0.2016%" height="15" fill="rgb(214,50,8)"/><text x="32.5604%" y="1311.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.04%)</title><rect x="32.5120%" y="1253" width="0.0448%" height="15" fill="rgb(216,198,43)"/><text x="32.7620%" y="1263.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="32.5456%" y="1237" width="0.0112%" height="15" fill="rgb(234,20,35)"/><text x="32.7956%" y="1247.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="32.5568%" y="1253" width="0.0112%" height="15" fill="rgb(254,45,19)"/><text x="32.8068%" y="1263.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="32.5568%" y="1237" width="0.0112%" height="15" fill="rgb(219,14,44)"/><text x="32.8068%" y="1247.50"></text></g><g><title>core::mem::drop (1 samples, 0.01%)</title><rect x="32.5680%" y="1237" width="0.0112%" height="15" fill="rgb(217,220,26)"/><text x="32.8180%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;tokio::sync::oneshot::Inner&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="32.5680%" y="1221" width="0.0112%" height="15" fill="rgb(213,158,28)"/><text x="32.8180%" y="1231.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="32.5680%" y="1205" width="0.0112%" height="15" fill="rgb(252,51,52)"/><text x="32.8180%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="32.5680%" y="1189" width="0.0112%" height="15" fill="rgb(246,89,16)"/><text x="32.8180%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="32.5680%" y="1173" width="0.0112%" height="15" fill="rgb(216,158,49)"/><text x="32.8180%" y="1183.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.02%)</title><rect x="32.5680%" y="1253" width="0.0224%" height="15" fill="rgb(236,107,19)"/><text x="32.8180%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::oneshot::Inner&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="32.5792%" y="1237" width="0.0112%" height="15" fill="rgb(228,185,30)"/><text x="32.8292%" y="1247.50"></text></g><g><title>&lt;tokio::sync::oneshot::Inner&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="32.5792%" y="1221" width="0.0112%" height="15" fill="rgb(246,134,8)"/><text x="32.8292%" y="1231.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (1 samples, 0.01%)</title><rect x="32.5792%" y="1205" width="0.0112%" height="15" fill="rgb(214,143,50)"/><text x="32.8292%" y="1215.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (1 samples, 0.01%)</title><rect x="32.5792%" y="1189" width="0.0112%" height="15" fill="rgb(228,75,8)"/><text x="32.8292%" y="1199.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (1 samples, 0.01%)</title><rect x="32.5792%" y="1173" width="0.0112%" height="15" fill="rgb(207,175,4)"/><text x="32.8292%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt;&gt;&gt; (10 samples, 0.11%)</title><rect x="32.5120%" y="1301" width="0.1120%" height="15" fill="rgb(205,108,24)"/><text x="32.7620%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt;&gt; (10 samples, 0.11%)</title><rect x="32.5120%" y="1285" width="0.1120%" height="15" fill="rgb(244,120,49)"/><text x="32.7620%" y="1295.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.11%)</title><rect x="32.5120%" y="1269" width="0.1120%" height="15" fill="rgb(223,47,38)"/><text x="32.7620%" y="1279.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.03%)</title><rect x="32.5904%" y="1253" width="0.0336%" height="15" fill="rgb(229,179,11)"/><text x="32.8404%" y="1263.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.03%)</title><rect x="32.5904%" y="1237" width="0.0336%" height="15" fill="rgb(231,122,1)"/><text x="32.8404%" y="1247.50"></text></g><g><title>&lt;tokio::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="32.6352%" y="1285" width="0.0224%" height="15" fill="rgb(245,119,9)"/><text x="32.8852%" y="1295.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="32.6464%" y="1269" width="0.0112%" height="15" fill="rgb(241,163,25)"/><text x="32.8964%" y="1279.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="32.6464%" y="1253" width="0.0112%" height="15" fill="rgb(217,214,3)"/><text x="32.8964%" y="1263.50"></text></g><g><title>tokio::coop::CURRENT::__getit (1 samples, 0.01%)</title><rect x="32.6464%" y="1237" width="0.0112%" height="15" fill="rgb(240,86,28)"/><text x="32.8964%" y="1247.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="32.6464%" y="1221" width="0.0112%" height="15" fill="rgb(215,47,9)"/><text x="32.8964%" y="1231.50"></text></g><g><title>[libc-2.31.so] (14 samples, 0.16%)</title><rect x="32.6576%" y="1285" width="0.1568%" height="15" fill="rgb(252,25,45)"/><text x="32.9076%" y="1295.50"></text></g><g><title>tokio::coop::poll_proceed (2 samples, 0.02%)</title><rect x="32.8144%" y="1285" width="0.0224%" height="15" fill="rgb(251,164,9)"/><text x="33.0644%" y="1295.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="32.8144%" y="1269" width="0.0224%" height="15" fill="rgb(233,194,0)"/><text x="33.0644%" y="1279.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="32.8144%" y="1253" width="0.0224%" height="15" fill="rgb(249,111,24)"/><text x="33.0644%" y="1263.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (2 samples, 0.02%)</title><rect x="32.8144%" y="1237" width="0.0224%" height="15" fill="rgb(250,223,3)"/><text x="33.0644%" y="1247.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.02%)</title><rect x="32.8144%" y="1221" width="0.0224%" height="15" fill="rgb(236,178,37)"/><text x="33.0644%" y="1231.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.02%)</title><rect x="32.8144%" y="1205" width="0.0224%" height="15" fill="rgb(241,158,50)"/><text x="33.0644%" y="1215.50"></text></g><g><title>core::mem::replace (2 samples, 0.02%)</title><rect x="32.8144%" y="1189" width="0.0224%" height="15" fill="rgb(213,121,41)"/><text x="33.0644%" y="1199.50"></text></g><g><title>core::mem::swap (2 samples, 0.02%)</title><rect x="32.8144%" y="1173" width="0.0224%" height="15" fill="rgb(240,92,3)"/><text x="33.0644%" y="1183.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.02%)</title><rect x="32.8144%" y="1157" width="0.0224%" height="15" fill="rgb(205,123,3)"/><text x="33.0644%" y="1167.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="32.8144%" y="1141" width="0.0224%" height="15" fill="rgb(205,97,47)"/><text x="33.0644%" y="1151.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::consume_value (10 samples, 0.11%)</title><rect x="32.8368%" y="1285" width="0.1120%" height="15" fill="rgb(247,152,14)"/><text x="33.0868%" y="1295.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (10 samples, 0.11%)</title><rect x="32.8368%" y="1269" width="0.1120%" height="15" fill="rgb(248,195,53)"/><text x="33.0868%" y="1279.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::consume_value::{{closure}} (10 samples, 0.11%)</title><rect x="32.8368%" y="1253" width="0.1120%" height="15" fill="rgb(226,201,16)"/><text x="33.0868%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (10 samples, 0.11%)</title><rect x="32.8368%" y="1237" width="0.1120%" height="15" fill="rgb(205,98,0)"/><text x="33.0868%" y="1247.50"></text></g><g><title>core::mem::take (10 samples, 0.11%)</title><rect x="32.8368%" y="1221" width="0.1120%" height="15" fill="rgb(214,191,48)"/><text x="33.0868%" y="1231.50"></text></g><g><title>core::mem::replace (10 samples, 0.11%)</title><rect x="32.8368%" y="1205" width="0.1120%" height="15" fill="rgb(237,112,39)"/><text x="33.0868%" y="1215.50"></text></g><g><title>core::mem::swap (10 samples, 0.11%)</title><rect x="32.8368%" y="1189" width="0.1120%" height="15" fill="rgb(247,203,27)"/><text x="33.0868%" y="1199.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (10 samples, 0.11%)</title><rect x="32.8368%" y="1173" width="0.1120%" height="15" fill="rgb(235,124,28)"/><text x="33.0868%" y="1183.50"></text></g><g><title>core::ptr::swap_nonoverlapping (10 samples, 0.11%)</title><rect x="32.8368%" y="1157" width="0.1120%" height="15" fill="rgb(208,207,46)"/><text x="33.0868%" y="1167.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (10 samples, 0.11%)</title><rect x="32.8368%" y="1141" width="0.1120%" height="15" fill="rgb(234,176,4)"/><text x="33.0868%" y="1151.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.10%)</title><rect x="32.8480%" y="1125" width="0.1008%" height="15" fill="rgb(230,133,28)"/><text x="33.0980%" y="1135.50"></text></g><g><title>tokio::sync::oneshot::State::set_rx_task (2 samples, 0.02%)</title><rect x="32.9488%" y="1285" width="0.0224%" height="15" fill="rgb(211,137,40)"/><text x="33.1988%" y="1295.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (2 samples, 0.02%)</title><rect x="32.9488%" y="1269" width="0.0224%" height="15" fill="rgb(254,35,13)"/><text x="33.1988%" y="1279.50"></text></g><g><title>core::sync::atomic::atomic_or (2 samples, 0.02%)</title><rect x="32.9488%" y="1253" width="0.0224%" height="15" fill="rgb(225,49,51)"/><text x="33.1988%" y="1263.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="32.9712%" y="1237" width="0.0448%" height="15" fill="rgb(251,10,15)"/><text x="33.2212%" y="1247.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (2 samples, 0.02%)</title><rect x="32.9936%" y="1221" width="0.0224%" height="15" fill="rgb(228,207,15)"/><text x="33.2436%" y="1231.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (2 samples, 0.02%)</title><rect x="32.9936%" y="1205" width="0.0224%" height="15" fill="rgb(241,99,19)"/><text x="33.2436%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.02%)</title><rect x="32.9936%" y="1189" width="0.0224%" height="15" fill="rgb(207,104,49)"/><text x="33.2436%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.02%)</title><rect x="32.9936%" y="1173" width="0.0224%" height="15" fill="rgb(234,99,18)"/><text x="33.2436%" y="1183.50"></text></g><g><title>&lt;rho_runtime::storage::coordinator::AsyncStore as rho_runtime::storage::Storage&gt;::produce::{{closure}} (64 samples, 0.72%)</title><rect x="32.3104%" y="1333" width="0.7168%" height="15" fill="rgb(213,191,49)"/><text x="32.5604%" y="1343.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (64 samples, 0.72%)</title><rect x="32.3104%" y="1317" width="0.7168%" height="15" fill="rgb(210,226,19)"/><text x="32.5604%" y="1327.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::poll_recv (36 samples, 0.40%)</title><rect x="32.6240%" y="1301" width="0.4032%" height="15" fill="rgb(229,97,18)"/><text x="32.8740%" y="1311.50"></text></g><g><title>tokio::sync::oneshot::Task::set_task (5 samples, 0.06%)</title><rect x="32.9712%" y="1285" width="0.0560%" height="15" fill="rgb(211,167,15)"/><text x="33.2212%" y="1295.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (5 samples, 0.06%)</title><rect x="32.9712%" y="1269" width="0.0560%" height="15" fill="rgb(210,169,34)"/><text x="33.2212%" y="1279.50"></text></g><g><title>tokio::sync::oneshot::Task::set_task::{{closure}} (5 samples, 0.06%)</title><rect x="32.9712%" y="1253" width="0.0560%" height="15" fill="rgb(241,121,31)"/><text x="33.2212%" y="1263.50"></text></g><g><title>core::task::wake::Context::waker (1 samples, 0.01%)</title><rect x="33.0160%" y="1237" width="0.0112%" height="15" fill="rgb(232,40,11)"/><text x="33.2660%" y="1247.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.01%)</title><rect x="33.1056%" y="1269" width="0.0112%" height="15" fill="rgb(205,86,26)"/><text x="33.3556%" y="1279.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter_mut (1 samples, 0.01%)</title><rect x="33.1056%" y="1253" width="0.0112%" height="15" fill="rgb(231,126,28)"/><text x="33.3556%" y="1263.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="33.1056%" y="1237" width="0.0112%" height="15" fill="rgb(219,221,18)"/><text x="33.3556%" y="1247.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="33.1168%" y="1269" width="0.0112%" height="15" fill="rgb(211,40,0)"/><text x="33.3668%" y="1279.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="33.1392%" y="1221" width="0.0112%" height="15" fill="rgb(239,85,43)"/><text x="33.3892%" y="1231.50"></text></g><g><title>__rust_probestack (1 samples, 0.01%)</title><rect x="33.1392%" y="1205" width="0.0112%" height="15" fill="rgb(231,55,21)"/><text x="33.3892%" y="1215.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 0.03%)</title><rect x="33.1392%" y="1237" width="0.0336%" height="15" fill="rgb(225,184,43)"/><text x="33.3892%" y="1247.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::as_mut (2 samples, 0.02%)</title><rect x="33.1504%" y="1221" width="0.0224%" height="15" fill="rgb(251,158,41)"/><text x="33.4004%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2 samples, 0.02%)</title><rect x="33.1504%" y="1205" width="0.0224%" height="15" fill="rgb(234,159,37)"/><text x="33.4004%" y="1215.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.06%)</title><rect x="33.1728%" y="1205" width="0.0560%" height="15" fill="rgb(216,204,22)"/><text x="33.4228%" y="1215.50"></text></g><g><title>&lt;rho_runtime::storage::coordinator::AsyncStore as rho_runtime::storage::Storage&gt;::produce (21 samples, 0.24%)</title><rect x="33.1728%" y="1237" width="0.2352%" height="15" fill="rgb(214,17,3)"/><text x="33.4228%" y="1247.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (21 samples, 0.24%)</title><rect x="33.1728%" y="1221" width="0.2352%" height="15" fill="rgb(212,111,17)"/><text x="33.4228%" y="1231.50"></text></g><g><title>alloc::alloc::exchange_malloc (16 samples, 0.18%)</title><rect x="33.2288%" y="1205" width="0.1792%" height="15" fill="rgb(221,157,24)"/><text x="33.4788%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.18%)</title><rect x="33.2288%" y="1189" width="0.1792%" height="15" fill="rgb(252,16,13)"/><text x="33.4788%" y="1199.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.18%)</title><rect x="33.2288%" y="1173" width="0.1792%" height="15" fill="rgb(221,62,2)"/><text x="33.4788%" y="1183.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.18%)</title><rect x="33.2288%" y="1157" width="0.1792%" height="15" fill="rgb(247,87,22)"/><text x="33.4788%" y="1167.50"></text></g><g><title>__libc_malloc (16 samples, 0.18%)</title><rect x="33.2288%" y="1141" width="0.1792%" height="15" fill="rgb(215,73,9)"/><text x="33.4788%" y="1151.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.08%)</title><rect x="33.3296%" y="1125" width="0.0784%" height="15" fill="rgb(207,175,33)"/><text x="33.5796%" y="1135.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.06%)</title><rect x="33.4080%" y="1237" width="0.0560%" height="15" fill="rgb(243,129,54)"/><text x="33.6580%" y="1247.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.09%)</title><rect x="33.4640%" y="1157" width="0.0896%" height="15" fill="rgb(227,119,45)"/><text x="33.7140%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (39 samples, 0.44%)</title><rect x="33.1280%" y="1269" width="0.4368%" height="15" fill="rgb(205,109,36)"/><text x="33.3780%" y="1279.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::produce::{{closure}} (39 samples, 0.44%)</title><rect x="33.1280%" y="1253" width="0.4368%" height="15" fill="rgb(205,6,39)"/><text x="33.3780%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;+core::marker::Send&gt;&gt;&gt; (9 samples, 0.10%)</title><rect x="33.4640%" y="1237" width="0.1008%" height="15" fill="rgb(221,32,16)"/><text x="33.7140%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;+core::marker::Send&gt;&gt; (9 samples, 0.10%)</title><rect x="33.4640%" y="1221" width="0.1008%" height="15" fill="rgb(228,144,50)"/><text x="33.7140%" y="1231.50"></text></g><g><title>alloc::alloc::box_free (9 samples, 0.10%)</title><rect x="33.4640%" y="1205" width="0.1008%" height="15" fill="rgb(229,201,53)"/><text x="33.7140%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.10%)</title><rect x="33.4640%" y="1189" width="0.1008%" height="15" fill="rgb(249,153,27)"/><text x="33.7140%" y="1199.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.10%)</title><rect x="33.4640%" y="1173" width="0.1008%" height="15" fill="rgb(227,106,25)"/><text x="33.7140%" y="1183.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="33.5536%" y="1157" width="0.0112%" height="15" fill="rgb(230,65,29)"/><text x="33.8036%" y="1167.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="33.5648%" y="1269" width="0.0112%" height="15" fill="rgb(221,57,46)"/><text x="33.8148%" y="1279.50"></text></g><g><title>[libc-2.31.so] (25 samples, 0.28%)</title><rect x="33.5760%" y="1237" width="0.2800%" height="15" fill="rgb(229,161,17)"/><text x="33.8260%" y="1247.50"></text></g><g><title>__libc_malloc (22 samples, 0.25%)</title><rect x="33.8672%" y="1173" width="0.2464%" height="15" fill="rgb(222,213,11)"/><text x="34.1172%" y="1183.50"></text></g><g><title>[libc-2.31.so] (14 samples, 0.16%)</title><rect x="33.9568%" y="1157" width="0.1568%" height="15" fill="rgb(235,35,13)"/><text x="34.2068%" y="1167.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_nested_expressions (49 samples, 0.55%)</title><rect x="33.5760%" y="1269" width="0.5488%" height="15" fill="rgb(233,158,34)"/><text x="33.8260%" y="1279.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (49 samples, 0.55%)</title><rect x="33.5760%" y="1253" width="0.5488%" height="15" fill="rgb(215,151,48)"/><text x="33.8260%" y="1263.50"></text></g><g><title>alloc::alloc::exchange_malloc (24 samples, 0.27%)</title><rect x="33.8560%" y="1237" width="0.2688%" height="15" fill="rgb(229,84,14)"/><text x="34.1060%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (24 samples, 0.27%)</title><rect x="33.8560%" y="1221" width="0.2688%" height="15" fill="rgb(229,68,14)"/><text x="34.1060%" y="1231.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24 samples, 0.27%)</title><rect x="33.8560%" y="1205" width="0.2688%" height="15" fill="rgb(243,106,26)"/><text x="34.1060%" y="1215.50"></text></g><g><title>alloc::alloc::alloc (23 samples, 0.26%)</title><rect x="33.8672%" y="1189" width="0.2576%" height="15" fill="rgb(206,45,38)"/><text x="34.1172%" y="1199.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="34.1136%" y="1173" width="0.0112%" height="15" fill="rgb(226,6,15)"/><text x="34.3636%" y="1183.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="34.1136%" y="1157" width="0.0112%" height="15" fill="rgb(232,22,54)"/><text x="34.3636%" y="1167.50"></text></g><g><title>[libc-2.31.so] (16 samples, 0.18%)</title><rect x="34.1248%" y="1269" width="0.1792%" height="15" fill="rgb(229,222,32)"/><text x="34.3748%" y="1279.50"></text></g><g><title>__libc_malloc (3 samples, 0.03%)</title><rect x="34.3040%" y="1157" width="0.0336%" height="15" fill="rgb(228,62,29)"/><text x="34.5540%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.04%)</title><rect x="34.3040%" y="1237" width="0.0448%" height="15" fill="rgb(251,103,34)"/><text x="34.5540%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.04%)</title><rect x="34.3040%" y="1221" width="0.0448%" height="15" fill="rgb(233,12,30)"/><text x="34.5540%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (4 samples, 0.04%)</title><rect x="34.3040%" y="1205" width="0.0448%" height="15" fill="rgb(238,52,0)"/><text x="34.5540%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.04%)</title><rect x="34.3040%" y="1189" width="0.0448%" height="15" fill="rgb(223,98,5)"/><text x="34.5540%" y="1199.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.04%)</title><rect x="34.3040%" y="1173" width="0.0448%" height="15" fill="rgb(228,75,37)"/><text x="34.5540%" y="1183.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="34.3376%" y="1157" width="0.0112%" height="15" fill="rgb(205,115,49)"/><text x="34.5876%" y="1167.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="34.3376%" y="1141" width="0.0112%" height="15" fill="rgb(250,154,43)"/><text x="34.5876%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (5 samples, 0.06%)</title><rect x="34.3040%" y="1269" width="0.0560%" height="15" fill="rgb(226,43,29)"/><text x="34.5540%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (5 samples, 0.06%)</title><rect x="34.3040%" y="1253" width="0.0560%" height="15" fill="rgb(249,228,39)"/><text x="34.5540%" y="1263.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="34.3488%" y="1237" width="0.0112%" height="15" fill="rgb(216,79,43)"/><text x="34.5988%" y="1247.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="34.3488%" y="1221" width="0.0112%" height="15" fill="rgb(228,95,12)"/><text x="34.5988%" y="1231.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.01%)</title><rect x="34.3600%" y="1269" width="0.0112%" height="15" fill="rgb(249,221,15)"/><text x="34.6100%" y="1279.50"></text></g><g><title>core::mem::take (1 samples, 0.01%)</title><rect x="34.3600%" y="1253" width="0.0112%" height="15" fill="rgb(233,34,13)"/><text x="34.6100%" y="1263.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="34.3600%" y="1237" width="0.0112%" height="15" fill="rgb(214,103,39)"/><text x="34.6100%" y="1247.50"></text></g><g><title>[libc-2.31.so] (21 samples, 0.24%)</title><rect x="34.3712%" y="1189" width="0.2352%" height="15" fill="rgb(251,126,39)"/><text x="34.6212%" y="1199.50"></text></g><g><title>[libc-2.31.so] (12 samples, 0.13%)</title><rect x="34.4719%" y="1173" width="0.1344%" height="15" fill="rgb(214,216,36)"/><text x="34.7219%" y="1183.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="34.5839%" y="1157" width="0.0224%" height="15" fill="rgb(220,221,8)"/><text x="34.8339%" y="1167.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="34.6063%" y="1189" width="0.0112%" height="15" fill="rgb(240,216,3)"/><text x="34.8563%" y="1199.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="34.6063%" y="1173" width="0.0112%" height="15" fill="rgb(232,218,17)"/><text x="34.8563%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (23 samples, 0.26%)</title><rect x="34.3712%" y="1269" width="0.2576%" height="15" fill="rgb(229,163,45)"/><text x="34.6212%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (23 samples, 0.26%)</title><rect x="34.3712%" y="1253" width="0.2576%" height="15" fill="rgb(231,110,42)"/><text x="34.6212%" y="1263.50"></text></g><g><title>alloc::alloc::box_free (23 samples, 0.26%)</title><rect x="34.3712%" y="1237" width="0.2576%" height="15" fill="rgb(208,170,48)"/><text x="34.6212%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (23 samples, 0.26%)</title><rect x="34.3712%" y="1221" width="0.2576%" height="15" fill="rgb(239,116,25)"/><text x="34.6212%" y="1231.50"></text></g><g><title>alloc::alloc::dealloc (23 samples, 0.26%)</title><rect x="34.3712%" y="1205" width="0.2576%" height="15" fill="rgb(219,200,50)"/><text x="34.6212%" y="1215.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="34.6175%" y="1189" width="0.0112%" height="15" fill="rgb(245,200,0)"/><text x="34.8675%" y="1199.50"></text></g><g><title>model::rho_types::Par::single_bundle (1 samples, 0.01%)</title><rect x="34.6287%" y="1269" width="0.0112%" height="15" fill="rgb(245,119,33)"/><text x="34.8787%" y="1279.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (147 samples, 1.65%)</title><rect x="33.0272%" y="1317" width="1.6463%" height="15" fill="rgb(231,125,12)"/><text x="33.2772%" y="1327.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (147 samples, 1.65%)</title><rect x="33.0272%" y="1301" width="1.6463%" height="15" fill="rgb(216,96,41)"/><text x="33.2772%" y="1311.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_send::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Send&gt;::evaluate::{{closure}} (147 samples, 1.65%)</title><rect x="33.0272%" y="1285" width="1.6463%" height="15" fill="rgb(248,43,45)"/><text x="33.2772%" y="1295.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::may_raise_aborted_error (3 samples, 0.03%)</title><rect x="34.6399%" y="1269" width="0.0336%" height="15" fill="rgb(217,222,7)"/><text x="34.8899%" y="1279.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (2 samples, 0.02%)</title><rect x="34.6511%" y="1253" width="0.0224%" height="15" fill="rgb(233,28,6)"/><text x="34.9011%" y="1263.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="34.6511%" y="1237" width="0.0224%" height="15" fill="rgb(231,218,15)"/><text x="34.9011%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="34.6735%" y="1317" width="0.0224%" height="15" fill="rgb(226,171,48)"/><text x="34.9235%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (2 samples, 0.02%)</title><rect x="34.6735%" y="1301" width="0.0224%" height="15" fill="rgb(235,201,9)"/><text x="34.9235%" y="1311.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.01%)</title><rect x="34.6847%" y="1285" width="0.0112%" height="15" fill="rgb(217,80,15)"/><text x="34.9347%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="34.6847%" y="1269" width="0.0112%" height="15" fill="rgb(219,152,8)"/><text x="34.9347%" y="1279.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="34.6847%" y="1253" width="0.0112%" height="15" fill="rgb(243,107,38)"/><text x="34.9347%" y="1263.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation::{{closure}} (150 samples, 1.68%)</title><rect x="33.0272%" y="1333" width="1.6799%" height="15" fill="rgb(231,17,5)"/><text x="33.2772%" y="1343.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_send::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Send&gt;::evaluate (1 samples, 0.01%)</title><rect x="34.6959%" y="1317" width="0.0112%" height="15" fill="rgb(209,25,54)"/><text x="34.9459%" y="1327.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1 samples, 0.01%)</title><rect x="34.6959%" y="1301" width="0.0112%" height="15" fill="rgb(219,0,2)"/><text x="34.9459%" y="1311.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="34.6959%" y="1285" width="0.0112%" height="15" fill="rgb(246,9,5)"/><text x="34.9459%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="34.6959%" y="1269" width="0.0112%" height="15" fill="rgb(226,159,4)"/><text x="34.9459%" y="1279.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="34.6959%" y="1253" width="0.0112%" height="15" fill="rgb(219,175,34)"/><text x="34.9459%" y="1263.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="34.6959%" y="1237" width="0.0112%" height="15" fill="rgb(236,10,46)"/><text x="34.9459%" y="1247.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.09%)</title><rect x="34.7631%" y="1173" width="0.0896%" height="15" fill="rgb(240,211,16)"/><text x="35.0131%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.01%)</title><rect x="34.8527%" y="1173" width="0.0112%" height="15" fill="rgb(205,3,43)"/><text x="35.1027%" y="1183.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="34.8527%" y="1157" width="0.0112%" height="15" fill="rgb(245,7,22)"/><text x="35.1027%" y="1167.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="34.8527%" y="1141" width="0.0112%" height="15" fill="rgb(239,132,32)"/><text x="35.1027%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="34.8639%" y="1173" width="0.0112%" height="15" fill="rgb(228,202,34)"/><text x="35.1139%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (1 samples, 0.01%)</title><rect x="34.8639%" y="1157" width="0.0112%" height="15" fill="rgb(254,200,22)"/><text x="35.1139%" y="1167.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.01%)</title><rect x="34.8639%" y="1141" width="0.0112%" height="15" fill="rgb(219,10,39)"/><text x="35.1139%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="34.8639%" y="1125" width="0.0112%" height="15" fill="rgb(226,210,39)"/><text x="35.1139%" y="1135.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="34.8639%" y="1109" width="0.0112%" height="15" fill="rgb(208,219,16)"/><text x="35.1139%" y="1119.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="34.8639%" y="1093" width="0.0112%" height="15" fill="rgb(216,158,51)"/><text x="35.1139%" y="1103.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="34.8751%" y="1141" width="0.0112%" height="15" fill="rgb(233,14,44)"/><text x="35.1251%" y="1151.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="34.8863%" y="1077" width="0.0112%" height="15" fill="rgb(237,97,39)"/><text x="35.1363%" y="1087.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression::{{closure}} (15 samples, 0.17%)</title><rect x="34.7519%" y="1189" width="0.1680%" height="15" fill="rgb(218,198,43)"/><text x="35.0019%" y="1199.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (4 samples, 0.04%)</title><rect x="34.8751%" y="1173" width="0.0448%" height="15" fill="rgb(231,104,20)"/><text x="35.1251%" y="1183.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (4 samples, 0.04%)</title><rect x="34.8751%" y="1157" width="0.0448%" height="15" fill="rgb(254,36,13)"/><text x="35.1251%" y="1167.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.03%)</title><rect x="34.8863%" y="1141" width="0.0336%" height="15" fill="rgb(248,14,50)"/><text x="35.1363%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.03%)</title><rect x="34.8863%" y="1125" width="0.0336%" height="15" fill="rgb(217,107,29)"/><text x="35.1363%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.03%)</title><rect x="34.8863%" y="1109" width="0.0336%" height="15" fill="rgb(251,169,33)"/><text x="35.1363%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.03%)</title><rect x="34.8863%" y="1093" width="0.0336%" height="15" fill="rgb(217,108,32)"/><text x="35.1363%" y="1103.50"></text></g><g><title>__rdl_alloc (2 samples, 0.02%)</title><rect x="34.8975%" y="1077" width="0.0224%" height="15" fill="rgb(219,66,42)"/><text x="35.1475%" y="1087.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.02%)</title><rect x="34.8975%" y="1061" width="0.0224%" height="15" fill="rgb(206,180,7)"/><text x="35.1475%" y="1071.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.06%)</title><rect x="34.9199%" y="1189" width="0.0560%" height="15" fill="rgb(208,226,31)"/><text x="35.1699%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="35.0767%" y="1141" width="0.0112%" height="15" fill="rgb(218,26,49)"/><text x="35.3267%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="35.0767%" y="1125" width="0.0112%" height="15" fill="rgb(233,197,48)"/><text x="35.3267%" y="1135.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="35.1775%" y="1061" width="0.0112%" height="15" fill="rgb(252,181,51)"/><text x="35.4275%" y="1071.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="35.1439%" y="1077" width="0.0560%" height="15" fill="rgb(253,90,19)"/><text x="35.3939%" y="1087.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="35.1887%" y="1061" width="0.0112%" height="15" fill="rgb(215,171,30)"/><text x="35.4387%" y="1071.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (13 samples, 0.15%)</title><rect x="35.1215%" y="1093" width="0.1456%" height="15" fill="rgb(214,222,9)"/><text x="35.3715%" y="1103.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.07%)</title><rect x="35.1999%" y="1077" width="0.0672%" height="15" fill="rgb(223,3,22)"/><text x="35.4499%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.01%)</title><rect x="35.2671%" y="1093" width="0.0112%" height="15" fill="rgb(225,196,46)"/><text x="35.5171%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="35.3007%" y="1045" width="0.0224%" height="15" fill="rgb(209,110,37)"/><text x="35.5507%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="35.3007%" y="1029" width="0.0224%" height="15" fill="rgb(249,89,12)"/><text x="35.5507%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="35.3119%" y="1013" width="0.0112%" height="15" fill="rgb(226,27,33)"/><text x="35.5619%" y="1023.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="35.3119%" y="997" width="0.0112%" height="15" fill="rgb(213,82,22)"/><text x="35.5619%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (2 samples, 0.02%)</title><rect x="35.3231%" y="1045" width="0.0224%" height="15" fill="rgb(248,140,0)"/><text x="35.5731%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.08%)</title><rect x="35.2783%" y="1093" width="0.0784%" height="15" fill="rgb(228,106,3)"/><text x="35.5283%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.07%)</title><rect x="35.2895%" y="1077" width="0.0672%" height="15" fill="rgb(209,23,37)"/><text x="35.5395%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.07%)</title><rect x="35.2895%" y="1061" width="0.0672%" height="15" fill="rgb(241,93,50)"/><text x="35.5395%" y="1071.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="35.3455%" y="1045" width="0.0112%" height="15" fill="rgb(253,46,43)"/><text x="35.5955%" y="1055.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1 samples, 0.01%)</title><rect x="35.3455%" y="1029" width="0.0112%" height="15" fill="rgb(226,206,43)"/><text x="35.5955%" y="1039.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.01%)</title><rect x="35.3455%" y="1013" width="0.0112%" height="15" fill="rgb(217,54,7)"/><text x="35.5955%" y="1023.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.01%)</title><rect x="35.3455%" y="997" width="0.0112%" height="15" fill="rgb(223,5,52)"/><text x="35.5955%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (26 samples, 0.29%)</title><rect x="35.0767%" y="1157" width="0.2912%" height="15" fill="rgb(206,52,46)"/><text x="35.3267%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (25 samples, 0.28%)</title><rect x="35.0879%" y="1141" width="0.2800%" height="15" fill="rgb(253,136,11)"/><text x="35.3379%" y="1151.50"></text></g><g><title>alloc::slice::hack::to_vec (25 samples, 0.28%)</title><rect x="35.0879%" y="1125" width="0.2800%" height="15" fill="rgb(208,106,33)"/><text x="35.3379%" y="1135.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (25 samples, 0.28%)</title><rect x="35.0879%" y="1109" width="0.2800%" height="15" fill="rgb(206,54,4)"/><text x="35.3379%" y="1119.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="35.3567%" y="1093" width="0.0112%" height="15" fill="rgb(213,3,15)"/><text x="35.6067%" y="1103.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="35.3567%" y="1077" width="0.0112%" height="15" fill="rgb(252,211,39)"/><text x="35.6067%" y="1087.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (37 samples, 0.41%)</title><rect x="34.9759%" y="1173" width="0.4144%" height="15" fill="rgb(223,6,36)"/><text x="35.2259%" y="1183.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="35.3679%" y="1157" width="0.0224%" height="15" fill="rgb(252,169,45)"/><text x="35.6179%" y="1167.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="35.3791%" y="1141" width="0.0112%" height="15" fill="rgb(212,48,26)"/><text x="35.6291%" y="1151.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="35.3791%" y="1125" width="0.0112%" height="15" fill="rgb(251,102,48)"/><text x="35.6291%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="35.3791%" y="1109" width="0.0112%" height="15" fill="rgb(243,208,16)"/><text x="35.6291%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="35.3791%" y="1093" width="0.0112%" height="15" fill="rgb(219,96,24)"/><text x="35.6291%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="35.3791%" y="1077" width="0.0112%" height="15" fill="rgb(219,33,29)"/><text x="35.6291%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="35.3791%" y="1061" width="0.0112%" height="15" fill="rgb(223,176,5)"/><text x="35.6291%" y="1071.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="35.3791%" y="1045" width="0.0112%" height="15" fill="rgb(228,140,14)"/><text x="35.6291%" y="1055.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="35.3791%" y="1029" width="0.0112%" height="15" fill="rgb(217,179,31)"/><text x="35.6291%" y="1039.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="35.3791%" y="1013" width="0.0112%" height="15" fill="rgb(230,9,30)"/><text x="35.6291%" y="1023.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (60 samples, 0.67%)</title><rect x="34.7519%" y="1221" width="0.6720%" height="15" fill="rgb(230,136,20)"/><text x="35.0019%" y="1231.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (60 samples, 0.67%)</title><rect x="34.7519%" y="1205" width="0.6720%" height="15" fill="rgb(215,210,22)"/><text x="35.0019%" y="1215.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_var::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S,model::rho_types::Par&gt; for model::rho_types::Var&gt;::evaluate::{{closure}} (40 samples, 0.45%)</title><rect x="34.9759%" y="1189" width="0.4480%" height="15" fill="rgb(218,43,5)"/><text x="35.2259%" y="1199.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="35.3903%" y="1173" width="0.0336%" height="15" fill="rgb(216,11,5)"/><text x="35.6403%" y="1183.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (1 samples, 0.01%)</title><rect x="35.4239%" y="1221" width="0.0112%" height="15" fill="rgb(209,82,29)"/><text x="35.6739%" y="1231.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="35.4351%" y="1189" width="0.0112%" height="15" fill="rgb(244,115,12)"/><text x="35.6851%" y="1199.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (3 samples, 0.03%)</title><rect x="35.4351%" y="1221" width="0.0336%" height="15" fill="rgb(222,82,18)"/><text x="35.6851%" y="1231.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (3 samples, 0.03%)</title><rect x="35.4351%" y="1205" width="0.0336%" height="15" fill="rgb(249,227,8)"/><text x="35.6851%" y="1215.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.02%)</title><rect x="35.4463%" y="1189" width="0.0224%" height="15" fill="rgb(253,141,45)"/><text x="35.6963%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="35.4463%" y="1173" width="0.0224%" height="15" fill="rgb(234,184,4)"/><text x="35.6963%" y="1183.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="35.4463%" y="1157" width="0.0224%" height="15" fill="rgb(218,194,23)"/><text x="35.6963%" y="1167.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="35.4463%" y="1141" width="0.0224%" height="15" fill="rgb(235,66,41)"/><text x="35.6963%" y="1151.50"></text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="35.4463%" y="1125" width="0.0224%" height="15" fill="rgb(245,217,1)"/><text x="35.6963%" y="1135.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.08%)</title><rect x="35.4687%" y="1221" width="0.0784%" height="15" fill="rgb(229,91,1)"/><text x="35.7187%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;model::rho_types::Expr,model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="35.5471%" y="1221" width="0.0224%" height="15" fill="rgb(207,101,30)"/><text x="35.7971%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;model::rho_types::Expr,model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (2 samples, 0.02%)</title><rect x="35.5471%" y="1205" width="0.0224%" height="15" fill="rgb(223,82,49)"/><text x="35.7971%" y="1215.50"></text></g><g><title>alloc::alloc::box_free (2 samples, 0.02%)</title><rect x="35.5471%" y="1189" width="0.0224%" height="15" fill="rgb(218,167,17)"/><text x="35.7971%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="35.5471%" y="1173" width="0.0224%" height="15" fill="rgb(208,103,14)"/><text x="35.7971%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="35.5471%" y="1157" width="0.0224%" height="15" fill="rgb(238,20,8)"/><text x="35.7971%" y="1167.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="35.5471%" y="1141" width="0.0224%" height="15" fill="rgb(218,80,54)"/><text x="35.7971%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;model::rho_types::Par,model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="35.5695%" y="1221" width="0.0112%" height="15" fill="rgb(240,144,17)"/><text x="35.8195%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;model::rho_types::Par,model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (1 samples, 0.01%)</title><rect x="35.5695%" y="1205" width="0.0112%" height="15" fill="rgb(245,27,50)"/><text x="35.8195%" y="1215.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.01%)</title><rect x="35.5695%" y="1189" width="0.0112%" height="15" fill="rgb(251,51,7)"/><text x="35.8195%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="35.5695%" y="1173" width="0.0112%" height="15" fill="rgb(245,217,29)"/><text x="35.8195%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="35.5695%" y="1157" width="0.0112%" height="15" fill="rgb(221,176,29)"/><text x="35.8195%" y="1167.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="35.5695%" y="1141" width="0.0112%" height="15" fill="rgb(212,180,24)"/><text x="35.8195%" y="1151.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="35.5807%" y="1125" width="0.0336%" height="15" fill="rgb(254,24,2)"/><text x="35.8307%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (5 samples, 0.06%)</title><rect x="35.5807%" y="1205" width="0.0560%" height="15" fill="rgb(230,100,2)"/><text x="35.8307%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (5 samples, 0.06%)</title><rect x="35.5807%" y="1189" width="0.0560%" height="15" fill="rgb(219,142,25)"/><text x="35.8307%" y="1199.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.06%)</title><rect x="35.5807%" y="1173" width="0.0560%" height="15" fill="rgb(240,73,43)"/><text x="35.8307%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.06%)</title><rect x="35.5807%" y="1157" width="0.0560%" height="15" fill="rgb(214,114,15)"/><text x="35.8307%" y="1167.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.06%)</title><rect x="35.5807%" y="1141" width="0.0560%" height="15" fill="rgb(207,130,4)"/><text x="35.8307%" y="1151.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="35.6143%" y="1125" width="0.0224%" height="15" fill="rgb(221,25,40)"/><text x="35.8643%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::GUnforgeable&gt;&gt; (1 samples, 0.01%)</title><rect x="35.6367%" y="1205" width="0.0112%" height="15" fill="rgb(241,184,7)"/><text x="35.8867%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::GUnforgeable&gt;&gt; (1 samples, 0.01%)</title><rect x="35.6367%" y="1189" width="0.0112%" height="15" fill="rgb(235,159,4)"/><text x="35.8867%" y="1199.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="35.6367%" y="1173" width="0.0112%" height="15" fill="rgb(214,87,48)"/><text x="35.8867%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="35.6367%" y="1157" width="0.0112%" height="15" fill="rgb(246,198,24)"/><text x="35.8867%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (7 samples, 0.08%)</title><rect x="35.5807%" y="1221" width="0.0784%" height="15" fill="rgb(209,66,40)"/><text x="35.8307%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Match&gt;&gt; (1 samples, 0.01%)</title><rect x="35.6479%" y="1205" width="0.0112%" height="15" fill="rgb(233,147,39)"/><text x="35.8979%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="35.6479%" y="1189" width="0.0112%" height="15" fill="rgb(231,145,52)"/><text x="35.8979%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Match]&gt; (1 samples, 0.01%)</title><rect x="35.6479%" y="1173" width="0.0112%" height="15" fill="rgb(206,20,26)"/><text x="35.8979%" y="1183.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::eval_eplus::&lt;impl rho_runtime::interpreter::reduce::eval_expression::AsyncExprInstanceEvaluator&lt;S&gt; for model::rho_types::EPlus&gt;::evaluate::{{closure}} (87 samples, 0.97%)</title><rect x="34.7071%" y="1333" width="0.9744%" height="15" fill="rgb(238,220,4)"/><text x="34.9571%" y="1343.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (87 samples, 0.97%)</title><rect x="34.7071%" y="1317" width="0.9744%" height="15" fill="rgb(252,195,42)"/><text x="34.9571%" y="1327.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (87 samples, 0.97%)</title><rect x="34.7071%" y="1301" width="0.9744%" height="15" fill="rgb(209,10,6)"/><text x="34.9571%" y="1311.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression::{{closure}} (87 samples, 0.97%)</title><rect x="34.7071%" y="1285" width="0.9744%" height="15" fill="rgb(229,3,52)"/><text x="34.9571%" y="1295.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (87 samples, 0.97%)</title><rect x="34.7071%" y="1269" width="0.9744%" height="15" fill="rgb(253,49,37)"/><text x="34.9571%" y="1279.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (87 samples, 0.97%)</title><rect x="34.7071%" y="1253" width="0.9744%" height="15" fill="rgb(240,103,49)"/><text x="34.9571%" y="1263.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate::{{closure}} (87 samples, 0.97%)</title><rect x="34.7071%" y="1237" width="0.9744%" height="15" fill="rgb(250,182,30)"/><text x="34.9571%" y="1247.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_var::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S,model::rho_types::Par&gt; for model::rho_types::Var&gt;::evaluate (2 samples, 0.02%)</title><rect x="35.6591%" y="1221" width="0.0224%" height="15" fill="rgb(248,8,30)"/><text x="35.9091%" y="1231.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (2 samples, 0.02%)</title><rect x="35.6591%" y="1205" width="0.0224%" height="15" fill="rgb(237,120,30)"/><text x="35.9091%" y="1215.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.02%)</title><rect x="35.6591%" y="1189" width="0.0224%" height="15" fill="rgb(221,146,34)"/><text x="35.9091%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="35.6591%" y="1173" width="0.0224%" height="15" fill="rgb(242,55,13)"/><text x="35.9091%" y="1183.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="35.6591%" y="1157" width="0.0224%" height="15" fill="rgb(242,112,31)"/><text x="35.9091%" y="1167.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="35.6591%" y="1141" width="0.0224%" height="15" fill="rgb(249,192,27)"/><text x="35.9091%" y="1151.50"></text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="35.6591%" y="1125" width="0.0224%" height="15" fill="rgb(208,204,44)"/><text x="35.9091%" y="1135.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.08%)</title><rect x="35.7711%" y="1173" width="0.0784%" height="15" fill="rgb(208,93,54)"/><text x="36.0211%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.01%)</title><rect x="35.8495%" y="1173" width="0.0112%" height="15" fill="rgb(242,1,31)"/><text x="36.0995%" y="1183.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="35.8495%" y="1157" width="0.0112%" height="15" fill="rgb(241,83,25)"/><text x="36.0995%" y="1167.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="35.8495%" y="1141" width="0.0112%" height="15" fill="rgb(205,169,50)"/><text x="36.0995%" y="1151.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="35.8607%" y="1093" width="0.0224%" height="15" fill="rgb(239,186,37)"/><text x="36.1107%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (3 samples, 0.03%)</title><rect x="35.8607%" y="1173" width="0.0336%" height="15" fill="rgb(205,221,10)"/><text x="36.1107%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (3 samples, 0.03%)</title><rect x="35.8607%" y="1157" width="0.0336%" height="15" fill="rgb(218,196,15)"/><text x="36.1107%" y="1167.50"></text></g><g><title>alloc::alloc::box_free (3 samples, 0.03%)</title><rect x="35.8607%" y="1141" width="0.0336%" height="15" fill="rgb(218,196,35)"/><text x="36.1107%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.03%)</title><rect x="35.8607%" y="1125" width="0.0336%" height="15" fill="rgb(233,63,24)"/><text x="36.1107%" y="1135.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.03%)</title><rect x="35.8607%" y="1109" width="0.0336%" height="15" fill="rgb(225,8,4)"/><text x="36.1107%" y="1119.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="35.8831%" y="1093" width="0.0112%" height="15" fill="rgb(234,105,35)"/><text x="36.1331%" y="1103.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="35.8943%" y="1141" width="0.0224%" height="15" fill="rgb(236,21,32)"/><text x="36.1443%" y="1151.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="35.9167%" y="1077" width="0.0112%" height="15" fill="rgb(228,109,6)"/><text x="36.1667%" y="1087.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression::{{closure}} (18 samples, 0.20%)</title><rect x="35.7375%" y="1189" width="0.2016%" height="15" fill="rgb(229,215,31)"/><text x="35.9875%" y="1199.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (4 samples, 0.04%)</title><rect x="35.8943%" y="1173" width="0.0448%" height="15" fill="rgb(221,52,54)"/><text x="36.1443%" y="1183.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (4 samples, 0.04%)</title><rect x="35.8943%" y="1157" width="0.0448%" height="15" fill="rgb(252,129,43)"/><text x="36.1443%" y="1167.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.02%)</title><rect x="35.9167%" y="1141" width="0.0224%" height="15" fill="rgb(248,183,27)"/><text x="36.1667%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="35.9167%" y="1125" width="0.0224%" height="15" fill="rgb(250,0,22)"/><text x="36.1667%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="35.9167%" y="1109" width="0.0224%" height="15" fill="rgb(213,166,10)"/><text x="36.1667%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="35.9167%" y="1093" width="0.0224%" height="15" fill="rgb(207,163,36)"/><text x="36.1667%" y="1103.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="35.9279%" y="1077" width="0.0112%" height="15" fill="rgb(208,122,22)"/><text x="36.1779%" y="1087.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.08%)</title><rect x="35.9391%" y="1189" width="0.0784%" height="15" fill="rgb(207,104,49)"/><text x="36.1891%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="36.1183%" y="1093" width="0.0112%" height="15" fill="rgb(248,211,50)"/><text x="36.3683%" y="1103.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="36.1519%" y="1077" width="0.0224%" height="15" fill="rgb(217,13,45)"/><text x="36.4019%" y="1087.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="36.1631%" y="1061" width="0.0112%" height="15" fill="rgb(211,216,49)"/><text x="36.4131%" y="1071.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (6 samples, 0.07%)</title><rect x="36.1295%" y="1093" width="0.0672%" height="15" fill="rgb(221,58,53)"/><text x="36.3795%" y="1103.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="36.1743%" y="1077" width="0.0224%" height="15" fill="rgb(220,112,41)"/><text x="36.4243%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="36.1967%" y="1093" width="0.0336%" height="15" fill="rgb(236,38,28)"/><text x="36.4467%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="36.2079%" y="1077" width="0.0224%" height="15" fill="rgb(227,195,22)"/><text x="36.4579%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="36.2079%" y="1061" width="0.0224%" height="15" fill="rgb(214,55,33)"/><text x="36.4579%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="36.2191%" y="1045" width="0.0112%" height="15" fill="rgb(248,80,13)"/><text x="36.4691%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="36.2191%" y="1029" width="0.0112%" height="15" fill="rgb(238,52,6)"/><text x="36.4691%" y="1039.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (22 samples, 0.25%)</title><rect x="36.0175%" y="1173" width="0.2464%" height="15" fill="rgb(224,198,47)"/><text x="36.2675%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.19%)</title><rect x="36.0735%" y="1157" width="0.1904%" height="15" fill="rgb(233,171,20)"/><text x="36.3235%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16 samples, 0.18%)</title><rect x="36.0847%" y="1141" width="0.1792%" height="15" fill="rgb(241,30,25)"/><text x="36.3347%" y="1151.50"></text></g><g><title>alloc::slice::hack::to_vec (16 samples, 0.18%)</title><rect x="36.0847%" y="1125" width="0.1792%" height="15" fill="rgb(207,171,38)"/><text x="36.3347%" y="1135.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16 samples, 0.18%)</title><rect x="36.0847%" y="1109" width="0.1792%" height="15" fill="rgb(234,70,1)"/><text x="36.3347%" y="1119.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3 samples, 0.03%)</title><rect x="36.2303%" y="1093" width="0.0336%" height="15" fill="rgb(232,178,18)"/><text x="36.4803%" y="1103.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="36.2415%" y="1077" width="0.0224%" height="15" fill="rgb(241,78,40)"/><text x="36.4915%" y="1087.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (50 samples, 0.56%)</title><rect x="35.7375%" y="1221" width="0.5600%" height="15" fill="rgb(222,35,25)"/><text x="35.9875%" y="1231.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (50 samples, 0.56%)</title><rect x="35.7375%" y="1205" width="0.5600%" height="15" fill="rgb(207,92,16)"/><text x="35.9875%" y="1215.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_var::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S,model::rho_types::Par&gt; for model::rho_types::Var&gt;::evaluate::{{closure}} (25 samples, 0.28%)</title><rect x="36.0175%" y="1189" width="0.2800%" height="15" fill="rgb(216,59,51)"/><text x="36.2675%" y="1199.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="36.2639%" y="1173" width="0.0336%" height="15" fill="rgb(213,80,28)"/><text x="36.5139%" y="1183.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (2 samples, 0.02%)</title><rect x="36.2975%" y="1221" width="0.0224%" height="15" fill="rgb(220,93,7)"/><text x="36.5475%" y="1231.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="36.2975%" y="1205" width="0.0224%" height="15" fill="rgb(225,24,44)"/><text x="36.5475%" y="1215.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (2 samples, 0.02%)</title><rect x="36.3199%" y="1221" width="0.0224%" height="15" fill="rgb(243,74,40)"/><text x="36.5699%" y="1231.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (2 samples, 0.02%)</title><rect x="36.3199%" y="1205" width="0.0224%" height="15" fill="rgb(228,39,7)"/><text x="36.5699%" y="1215.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="36.3199%" y="1189" width="0.0224%" height="15" fill="rgb(227,79,8)"/><text x="36.5699%" y="1199.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.08%)</title><rect x="36.3423%" y="1221" width="0.0784%" height="15" fill="rgb(236,58,11)"/><text x="36.5923%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::expr::ExprInstance&gt;&gt; (1 samples, 0.01%)</title><rect x="36.4207%" y="1221" width="0.0112%" height="15" fill="rgb(249,63,35)"/><text x="36.6707%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::expr::ExprInstance&gt; (1 samples, 0.01%)</title><rect x="36.4207%" y="1205" width="0.0112%" height="15" fill="rgb(252,114,16)"/><text x="36.6707%" y="1215.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="36.4319%" y="1141" width="0.0112%" height="15" fill="rgb(254,151,24)"/><text x="36.6819%" y="1151.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="36.4431%" y="1141" width="0.0112%" height="15" fill="rgb(253,54,39)"/><text x="36.6931%" y="1151.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="36.4431%" y="1125" width="0.0112%" height="15" fill="rgb(243,25,45)"/><text x="36.6931%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;model::rho_types::Par,model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (3 samples, 0.03%)</title><rect x="36.4319%" y="1221" width="0.0336%" height="15" fill="rgb(234,134,9)"/><text x="36.6819%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;model::rho_types::Par,model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (3 samples, 0.03%)</title><rect x="36.4319%" y="1205" width="0.0336%" height="15" fill="rgb(227,166,31)"/><text x="36.6819%" y="1215.50"></text></g><g><title>alloc::alloc::box_free (3 samples, 0.03%)</title><rect x="36.4319%" y="1189" width="0.0336%" height="15" fill="rgb(245,143,41)"/><text x="36.6819%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.03%)</title><rect x="36.4319%" y="1173" width="0.0336%" height="15" fill="rgb(238,181,32)"/><text x="36.6819%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.03%)</title><rect x="36.4319%" y="1157" width="0.0336%" height="15" fill="rgb(224,113,18)"/><text x="36.6819%" y="1167.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="36.4543%" y="1141" width="0.0112%" height="15" fill="rgb(240,229,28)"/><text x="36.7043%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Connective&gt;&gt; (1 samples, 0.01%)</title><rect x="36.4766%" y="1205" width="0.0112%" height="15" fill="rgb(250,185,3)"/><text x="36.7266%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="36.4766%" y="1189" width="0.0112%" height="15" fill="rgb(212,59,25)"/><text x="36.7266%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Connective]&gt; (1 samples, 0.01%)</title><rect x="36.4766%" y="1173" width="0.0112%" height="15" fill="rgb(221,87,20)"/><text x="36.7266%" y="1183.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="36.4878%" y="1125" width="0.0112%" height="15" fill="rgb(213,74,28)"/><text x="36.7378%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (4 samples, 0.04%)</title><rect x="36.4654%" y="1221" width="0.0448%" height="15" fill="rgb(224,132,34)"/><text x="36.7154%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (2 samples, 0.02%)</title><rect x="36.4878%" y="1205" width="0.0224%" height="15" fill="rgb(222,101,24)"/><text x="36.7378%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (2 samples, 0.02%)</title><rect x="36.4878%" y="1189" width="0.0224%" height="15" fill="rgb(254,142,4)"/><text x="36.7378%" y="1199.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="36.4878%" y="1173" width="0.0224%" height="15" fill="rgb(230,229,49)"/><text x="36.7378%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="36.4878%" y="1157" width="0.0224%" height="15" fill="rgb(238,70,47)"/><text x="36.7378%" y="1167.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="36.4878%" y="1141" width="0.0224%" height="15" fill="rgb(231,160,17)"/><text x="36.7378%" y="1151.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="36.4990%" y="1125" width="0.0112%" height="15" fill="rgb(218,68,53)"/><text x="36.7490%" y="1135.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="36.4990%" y="1109" width="0.0112%" height="15" fill="rgb(236,111,10)"/><text x="36.7490%" y="1119.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="36.5102%" y="1125" width="0.0112%" height="15" fill="rgb(224,34,41)"/><text x="36.7602%" y="1135.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression::{{closure}} (76 samples, 0.85%)</title><rect x="35.6815%" y="1285" width="0.8512%" height="15" fill="rgb(241,118,19)"/><text x="35.9315%" y="1295.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (76 samples, 0.85%)</title><rect x="35.6815%" y="1269" width="0.8512%" height="15" fill="rgb(238,129,25)"/><text x="35.9315%" y="1279.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (76 samples, 0.85%)</title><rect x="35.6815%" y="1253" width="0.8512%" height="15" fill="rgb(238,22,31)"/><text x="35.9315%" y="1263.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate::{{closure}} (76 samples, 0.85%)</title><rect x="35.6815%" y="1237" width="0.8512%" height="15" fill="rgb(222,174,48)"/><text x="35.9315%" y="1247.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_var::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S,model::rho_types::Par&gt; for model::rho_types::Var&gt;::evaluate (2 samples, 0.02%)</title><rect x="36.5102%" y="1221" width="0.0224%" height="15" fill="rgb(206,152,40)"/><text x="36.7602%" y="1231.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (2 samples, 0.02%)</title><rect x="36.5102%" y="1205" width="0.0224%" height="15" fill="rgb(218,99,54)"/><text x="36.7602%" y="1215.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.02%)</title><rect x="36.5102%" y="1189" width="0.0224%" height="15" fill="rgb(220,174,26)"/><text x="36.7602%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="36.5102%" y="1173" width="0.0224%" height="15" fill="rgb(245,116,9)"/><text x="36.7602%" y="1183.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="36.5102%" y="1157" width="0.0224%" height="15" fill="rgb(209,72,35)"/><text x="36.7602%" y="1167.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="36.5102%" y="1141" width="0.0224%" height="15" fill="rgb(226,126,21)"/><text x="36.7602%" y="1151.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="36.5214%" y="1125" width="0.0112%" height="15" fill="rgb(227,192,1)"/><text x="36.7714%" y="1135.50"></text></g><g><title>[libc-2.31.so] (15 samples, 0.17%)</title><rect x="36.5886%" y="1221" width="0.1680%" height="15" fill="rgb(237,180,29)"/><text x="36.8386%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (5 samples, 0.06%)</title><rect x="36.7566%" y="1221" width="0.0560%" height="15" fill="rgb(230,197,35)"/><text x="37.0066%" y="1231.50"></text></g><g><title>core::ptr::read (5 samples, 0.06%)</title><rect x="36.7566%" y="1205" width="0.0560%" height="15" fill="rgb(246,193,31)"/><text x="37.0066%" y="1215.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.06%)</title><rect x="36.7566%" y="1189" width="0.0560%" height="15" fill="rgb(241,36,4)"/><text x="37.0066%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="36.8126%" y="1221" width="0.0112%" height="15" fill="rgb(241,130,17)"/><text x="37.0626%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (1 samples, 0.01%)</title><rect x="36.8126%" y="1205" width="0.0112%" height="15" fill="rgb(206,137,32)"/><text x="37.0626%" y="1215.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.01%)</title><rect x="36.8126%" y="1189" width="0.0112%" height="15" fill="rgb(237,228,51)"/><text x="37.0626%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="36.8126%" y="1173" width="0.0112%" height="15" fill="rgb(243,6,42)"/><text x="37.0626%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="36.8126%" y="1157" width="0.0112%" height="15" fill="rgb(251,74,28)"/><text x="37.0626%" y="1167.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="36.8126%" y="1141" width="0.0112%" height="15" fill="rgb(218,20,49)"/><text x="37.0626%" y="1151.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.04%)</title><rect x="36.8238%" y="1189" width="0.0448%" height="15" fill="rgb(238,28,14)"/><text x="37.0738%" y="1199.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression::{{closure}} (32 samples, 0.36%)</title><rect x="36.5326%" y="1237" width="0.3584%" height="15" fill="rgb(229,40,46)"/><text x="36.7826%" y="1247.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (6 samples, 0.07%)</title><rect x="36.8238%" y="1221" width="0.0672%" height="15" fill="rgb(244,195,20)"/><text x="37.0738%" y="1231.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (6 samples, 0.07%)</title><rect x="36.8238%" y="1205" width="0.0672%" height="15" fill="rgb(253,56,35)"/><text x="37.0738%" y="1215.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.02%)</title><rect x="36.8686%" y="1189" width="0.0224%" height="15" fill="rgb(210,149,44)"/><text x="37.1186%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="36.8686%" y="1173" width="0.0224%" height="15" fill="rgb(240,135,12)"/><text x="37.1186%" y="1183.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="36.8686%" y="1157" width="0.0224%" height="15" fill="rgb(251,24,50)"/><text x="37.1186%" y="1167.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="36.8686%" y="1141" width="0.0224%" height="15" fill="rgb(243,200,47)"/><text x="37.1186%" y="1151.50"></text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="36.8686%" y="1125" width="0.0224%" height="15" fill="rgb(224,166,26)"/><text x="37.1186%" y="1135.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate::{{closure}} (110 samples, 1.23%)</title><rect x="35.6815%" y="1333" width="1.2319%" height="15" fill="rgb(233,0,47)"/><text x="35.9315%" y="1343.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (110 samples, 1.23%)</title><rect x="35.6815%" y="1317" width="1.2319%" height="15" fill="rgb(253,80,5)"/><text x="35.9315%" y="1327.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (110 samples, 1.23%)</title><rect x="35.6815%" y="1301" width="1.2319%" height="15" fill="rgb(214,133,25)"/><text x="35.9315%" y="1311.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::eval_eplus::&lt;impl rho_runtime::interpreter::reduce::eval_expression::AsyncExprInstanceEvaluator&lt;S&gt; for model::rho_types::EPlus&gt;::evaluate::{{closure}} (34 samples, 0.38%)</title><rect x="36.5326%" y="1285" width="0.3808%" height="15" fill="rgb(209,27,14)"/><text x="36.7826%" y="1295.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (34 samples, 0.38%)</title><rect x="36.5326%" y="1269" width="0.3808%" height="15" fill="rgb(219,102,51)"/><text x="36.7826%" y="1279.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 0.38%)</title><rect x="36.5326%" y="1253" width="0.3808%" height="15" fill="rgb(237,18,16)"/><text x="36.7826%" y="1263.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="36.8910%" y="1237" width="0.0224%" height="15" fill="rgb(241,85,17)"/><text x="37.1410%" y="1247.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="36.9134%" y="1253" width="0.0448%" height="15" fill="rgb(236,90,42)"/><text x="37.1634%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (4 samples, 0.04%)</title><rect x="36.9134%" y="1237" width="0.0448%" height="15" fill="rgb(249,57,21)"/><text x="37.1634%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_add (4 samples, 0.04%)</title><rect x="36.9134%" y="1221" width="0.0448%" height="15" fill="rgb(243,12,36)"/><text x="37.1634%" y="1231.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="36.9582%" y="1141" width="0.0224%" height="15" fill="rgb(253,128,47)"/><text x="37.2082%" y="1151.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="36.9918%" y="1109" width="0.0112%" height="15" fill="rgb(207,33,20)"/><text x="37.2418%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="37.0254%" y="1013" width="0.0112%" height="15" fill="rgb(233,215,35)"/><text x="37.2754%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="37.0254%" y="997" width="0.0112%" height="15" fill="rgb(249,188,52)"/><text x="37.2754%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="37.0254%" y="981" width="0.0112%" height="15" fill="rgb(225,12,32)"/><text x="37.2754%" y="991.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="37.0366%" y="1013" width="0.0448%" height="15" fill="rgb(247,98,14)"/><text x="37.2866%" y="1023.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="37.0478%" y="997" width="0.0336%" height="15" fill="rgb(247,219,48)"/><text x="37.2978%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.06%)</title><rect x="37.0814%" y="1013" width="0.0560%" height="15" fill="rgb(253,60,48)"/><text x="37.3314%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="37.1038%" y="997" width="0.0336%" height="15" fill="rgb(245,15,52)"/><text x="37.3538%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.03%)</title><rect x="37.1038%" y="981" width="0.0336%" height="15" fill="rgb(220,133,28)"/><text x="37.3538%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="37.1150%" y="965" width="0.0224%" height="15" fill="rgb(217,180,4)"/><text x="37.3650%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="37.1150%" y="949" width="0.0224%" height="15" fill="rgb(251,24,1)"/><text x="37.3650%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.13%)</title><rect x="37.0254%" y="1077" width="0.1344%" height="15" fill="rgb(212,185,49)"/><text x="37.2754%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.13%)</title><rect x="37.0254%" y="1061" width="0.1344%" height="15" fill="rgb(215,175,22)"/><text x="37.2754%" y="1071.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.13%)</title><rect x="37.0254%" y="1045" width="0.1344%" height="15" fill="rgb(250,205,14)"/><text x="37.2754%" y="1055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.13%)</title><rect x="37.0254%" y="1029" width="0.1344%" height="15" fill="rgb(225,211,22)"/><text x="37.2754%" y="1039.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2 samples, 0.02%)</title><rect x="37.1374%" y="1013" width="0.0224%" height="15" fill="rgb(251,179,42)"/><text x="37.3874%" y="1023.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="37.1486%" y="997" width="0.0112%" height="15" fill="rgb(208,216,51)"/><text x="37.3986%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.21%)</title><rect x="36.9582%" y="1157" width="0.2128%" height="15" fill="rgb(235,36,11)"/><text x="37.2082%" y="1167.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (17 samples, 0.19%)</title><rect x="36.9806%" y="1141" width="0.1904%" height="15" fill="rgb(213,189,28)"/><text x="37.2306%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (17 samples, 0.19%)</title><rect x="36.9806%" y="1125" width="0.1904%" height="15" fill="rgb(227,203,42)"/><text x="37.2306%" y="1135.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (15 samples, 0.17%)</title><rect x="37.0030%" y="1109" width="0.1680%" height="15" fill="rgb(244,72,36)"/><text x="37.2530%" y="1119.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (15 samples, 0.17%)</title><rect x="37.0030%" y="1093" width="0.1680%" height="15" fill="rgb(213,53,17)"/><text x="37.2530%" y="1103.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="37.1598%" y="1077" width="0.0112%" height="15" fill="rgb(207,167,3)"/><text x="37.4098%" y="1087.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="37.1598%" y="1061" width="0.0112%" height="15" fill="rgb(216,98,30)"/><text x="37.4098%" y="1071.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="37.1598%" y="1045" width="0.0112%" height="15" fill="rgb(236,123,15)"/><text x="37.4098%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="37.1598%" y="1029" width="0.0112%" height="15" fill="rgb(248,81,50)"/><text x="37.4098%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="37.1598%" y="1013" width="0.0112%" height="15" fill="rgb(214,120,4)"/><text x="37.4098%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="37.1598%" y="997" width="0.0112%" height="15" fill="rgb(208,179,34)"/><text x="37.4098%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="37.1598%" y="981" width="0.0112%" height="15" fill="rgb(227,140,7)"/><text x="37.4098%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="37.1598%" y="965" width="0.0112%" height="15" fill="rgb(214,22,6)"/><text x="37.4098%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="37.1598%" y="949" width="0.0112%" height="15" fill="rgb(207,137,27)"/><text x="37.4098%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="37.1598%" y="933" width="0.0112%" height="15" fill="rgb(210,8,46)"/><text x="37.4098%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (21 samples, 0.24%)</title><rect x="36.9582%" y="1205" width="0.2352%" height="15" fill="rgb(240,16,54)"/><text x="37.2082%" y="1215.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (21 samples, 0.24%)</title><rect x="36.9582%" y="1189" width="0.2352%" height="15" fill="rgb(211,209,29)"/><text x="37.2082%" y="1199.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (21 samples, 0.24%)</title><rect x="36.9582%" y="1173" width="0.2352%" height="15" fill="rgb(226,228,24)"/><text x="37.2082%" y="1183.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="37.1710%" y="1157" width="0.0224%" height="15" fill="rgb(222,84,9)"/><text x="37.4210%" y="1167.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="37.1710%" y="1141" width="0.0224%" height="15" fill="rgb(234,203,30)"/><text x="37.4210%" y="1151.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::clone::Clone&gt;::clone (22 samples, 0.25%)</title><rect x="36.9582%" y="1237" width="0.2464%" height="15" fill="rgb(238,109,14)"/><text x="37.2082%" y="1247.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::convert::From&lt;&amp;[&lt;A as smallvec::Array&gt;::Item]&gt;&gt;::from (22 samples, 0.25%)</title><rect x="36.9582%" y="1221" width="0.2464%" height="15" fill="rgb(233,206,34)"/><text x="37.2082%" y="1231.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.01%)</title><rect x="37.1934%" y="1205" width="0.0112%" height="15" fill="rgb(220,167,47)"/><text x="37.4434%" y="1215.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="37.1934%" y="1189" width="0.0112%" height="15" fill="rgb(238,105,10)"/><text x="37.4434%" y="1199.50"></text></g><g><title>&lt;rho_runtime::interpreter::reduce::environment::Env&lt;T&gt; as core::clone::Clone&gt;::clone (26 samples, 0.29%)</title><rect x="36.9582%" y="1253" width="0.2912%" height="15" fill="rgb(213,227,17)"/><text x="37.2082%" y="1263.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.04%)</title><rect x="37.2046%" y="1237" width="0.0448%" height="15" fill="rgb(217,132,38)"/><text x="37.4546%" y="1247.50"></text></g><g><title>core::future::from_generator (7 samples, 0.08%)</title><rect x="37.2494%" y="1253" width="0.0784%" height="15" fill="rgb(242,146,4)"/><text x="37.4994%" y="1263.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.07%)</title><rect x="37.2606%" y="1237" width="0.0672%" height="15" fill="rgb(212,61,9)"/><text x="37.5106%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.01%)</title><rect x="37.3502%" y="1237" width="0.0112%" height="15" fill="rgb(247,126,22)"/><text x="37.6002%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="37.3502%" y="1221" width="0.0112%" height="15" fill="rgb(220,196,2)"/><text x="37.6002%" y="1231.50"></text></g><g><title>crossbeam_queue::seg_queue::SegQueue&lt;T&gt;::push (4 samples, 0.04%)</title><rect x="37.3278%" y="1253" width="0.0448%" height="15" fill="rgb(208,46,4)"/><text x="37.5778%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.01%)</title><rect x="37.3614%" y="1237" width="0.0112%" height="15" fill="rgb(252,104,46)"/><text x="37.6114%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.01%)</title><rect x="37.3614%" y="1221" width="0.0112%" height="15" fill="rgb(237,152,48)"/><text x="37.6114%" y="1231.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="37.3726%" y="1237" width="0.0224%" height="15" fill="rgb(221,59,37)"/><text x="37.6226%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::spawner::Spawner&gt; (6 samples, 0.07%)</title><rect x="37.3950%" y="1237" width="0.0672%" height="15" fill="rgb(209,202,51)"/><text x="37.6450%" y="1247.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (55 samples, 0.62%)</title><rect x="36.9134%" y="1317" width="0.6160%" height="15" fill="rgb(228,81,30)"/><text x="37.1634%" y="1327.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (55 samples, 0.62%)</title><rect x="36.9134%" y="1301" width="0.6160%" height="15" fill="rgb(227,42,39)"/><text x="37.1634%" y="1311.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate::{{closure}} (55 samples, 0.62%)</title><rect x="36.9134%" y="1285" width="0.6160%" height="15" fill="rgb(221,26,2)"/><text x="37.1634%" y="1295.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation (55 samples, 0.62%)</title><rect x="36.9134%" y="1269" width="0.6160%" height="15" fill="rgb(254,61,31)"/><text x="37.1634%" y="1279.50"></text></g><g><title>tokio::task::spawn::spawn (14 samples, 0.16%)</title><rect x="37.3726%" y="1253" width="0.1568%" height="15" fill="rgb(222,173,38)"/><text x="37.6226%" y="1263.50"></text></g><g><title>tokio::runtime::context::spawn_handle (6 samples, 0.07%)</title><rect x="37.4622%" y="1237" width="0.0672%" height="15" fill="rgb(218,50,12)"/><text x="37.7122%" y="1247.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.07%)</title><rect x="37.4622%" y="1221" width="0.0672%" height="15" fill="rgb(223,88,40)"/><text x="37.7122%" y="1231.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.07%)</title><rect x="37.4622%" y="1205" width="0.0672%" height="15" fill="rgb(237,54,19)"/><text x="37.7122%" y="1215.50"></text></g><g><title>tokio::runtime::context::spawn_handle::{{closure}} (6 samples, 0.07%)</title><rect x="37.4622%" y="1189" width="0.0672%" height="15" fill="rgb(251,129,25)"/><text x="37.7122%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.07%)</title><rect x="37.4622%" y="1173" width="0.0672%" height="15" fill="rgb(238,97,19)"/><text x="37.7122%" y="1183.50"></text></g><g><title>tokio::runtime::context::spawn_handle::{{closure}}::{{closure}} (6 samples, 0.07%)</title><rect x="37.4622%" y="1157" width="0.0672%" height="15" fill="rgb(240,169,18)"/><text x="37.7122%" y="1167.50"></text></g><g><title>&lt;tokio::runtime::spawner::Spawner as core::clone::Clone&gt;::clone (6 samples, 0.07%)</title><rect x="37.4622%" y="1141" width="0.0672%" height="15" fill="rgb(230,187,49)"/><text x="37.7122%" y="1151.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="37.5518%" y="1269" width="0.0224%" height="15" fill="rgb(209,44,26)"/><text x="37.8018%" y="1279.50"></text></g><g><title>core::ptr::read (2 samples, 0.02%)</title><rect x="37.5518%" y="1253" width="0.0224%" height="15" fill="rgb(244,0,6)"/><text x="37.8018%" y="1263.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="37.5518%" y="1237" width="0.0224%" height="15" fill="rgb(248,18,21)"/><text x="37.8018%" y="1247.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.11%)</title><rect x="37.5742%" y="1269" width="0.1120%" height="15" fill="rgb(245,180,19)"/><text x="37.8242%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (3 samples, 0.03%)</title><rect x="37.6862%" y="1269" width="0.0336%" height="15" fill="rgb(252,118,36)"/><text x="37.9362%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.03%)</title><rect x="37.6862%" y="1253" width="0.0336%" height="15" fill="rgb(210,224,19)"/><text x="37.9362%" y="1263.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.03%)</title><rect x="37.6862%" y="1237" width="0.0336%" height="15" fill="rgb(218,30,24)"/><text x="37.9362%" y="1247.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="37.6862%" y="1221" width="0.0336%" height="15" fill="rgb(219,75,50)"/><text x="37.9362%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="37.7198%" y="1205" width="0.0112%" height="15" fill="rgb(234,72,50)"/><text x="37.9698%" y="1215.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="37.7198%" y="1189" width="0.0112%" height="15" fill="rgb(219,100,48)"/><text x="37.9698%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="37.7198%" y="1173" width="0.0112%" height="15" fill="rgb(253,5,41)"/><text x="37.9698%" y="1183.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="37.7198%" y="1157" width="0.0112%" height="15" fill="rgb(247,181,11)"/><text x="37.9698%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.02%)</title><rect x="37.7198%" y="1269" width="0.0224%" height="15" fill="rgb(222,223,25)"/><text x="37.9698%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="37.7198%" y="1253" width="0.0224%" height="15" fill="rgb(214,198,28)"/><text x="37.9698%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="37.7198%" y="1237" width="0.0224%" height="15" fill="rgb(230,46,43)"/><text x="37.9698%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="37.7198%" y="1221" width="0.0224%" height="15" fill="rgb(233,65,53)"/><text x="37.9698%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (1 samples, 0.01%)</title><rect x="37.7310%" y="1205" width="0.0112%" height="15" fill="rgb(221,121,27)"/><text x="37.9810%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;model::rho_types::Expr&gt;&gt; (2 samples, 0.02%)</title><rect x="37.7422%" y="1269" width="0.0224%" height="15" fill="rgb(247,70,47)"/><text x="37.9922%" y="1279.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="37.7422%" y="1253" width="0.0224%" height="15" fill="rgb(228,85,35)"/><text x="37.9922%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;model::rho_types::Expr,alloc::alloc::Global&gt;&gt; (2 samples, 0.02%)</title><rect x="37.7422%" y="1237" width="0.0224%" height="15" fill="rgb(209,50,18)"/><text x="37.9922%" y="1247.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="37.7422%" y="1221" width="0.0224%" height="15" fill="rgb(250,19,35)"/><text x="37.9922%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (2 samples, 0.02%)</title><rect x="37.7422%" y="1205" width="0.0224%" height="15" fill="rgb(253,107,29)"/><text x="37.9922%" y="1215.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="37.7422%" y="1189" width="0.0224%" height="15" fill="rgb(252,179,29)"/><text x="37.9922%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="37.7422%" y="1173" width="0.0224%" height="15" fill="rgb(238,194,6)"/><text x="37.9922%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="37.7422%" y="1157" width="0.0224%" height="15" fill="rgb(238,164,29)"/><text x="37.9922%" y="1167.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="37.7422%" y="1141" width="0.0224%" height="15" fill="rgb(224,25,9)"/><text x="37.9922%" y="1151.50"></text></g><g><title>&lt;model::locally_free::ExprInstanceLocallyFree as model::locally_free::HasLocallyFree&lt;model::rho_types::expr::ExprInstance&gt;&gt;::locally_free (1 samples, 0.01%)</title><rect x="37.7758%" y="1253" width="0.0112%" height="15" fill="rgb(244,153,23)"/><text x="38.0258%" y="1263.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="37.7870%" y="1253" width="0.0224%" height="15" fill="rgb(212,203,14)"/><text x="38.0370%" y="1263.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_match::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Match&gt;::evaluate::{{closure}} (83 samples, 0.93%)</title><rect x="36.9134%" y="1333" width="0.9296%" height="15" fill="rgb(220,164,20)"/><text x="37.1634%" y="1343.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute (28 samples, 0.31%)</title><rect x="37.5294%" y="1317" width="0.3136%" height="15" fill="rgb(222,203,48)"/><text x="37.7794%" y="1327.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute_no_sort (28 samples, 0.31%)</title><rect x="37.5294%" y="1301" width="0.3136%" height="15" fill="rgb(215,159,22)"/><text x="37.7794%" y="1311.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::substitute_expressions_in_par (28 samples, 0.31%)</title><rect x="37.5294%" y="1285" width="0.3136%" height="15" fill="rgb(216,183,47)"/><text x="37.7794%" y="1295.50"></text></g><g><title>model::rho_types::Par::append_expr (7 samples, 0.08%)</title><rect x="37.7646%" y="1269" width="0.0784%" height="15" fill="rgb(229,195,25)"/><text x="38.0146%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.03%)</title><rect x="37.8094%" y="1253" width="0.0336%" height="15" fill="rgb(224,132,51)"/><text x="38.0594%" y="1263.50"></text></g><g><title>core::ptr::write (3 samples, 0.03%)</title><rect x="37.8094%" y="1237" width="0.0336%" height="15" fill="rgb(240,63,7)"/><text x="38.0594%" y="1247.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="37.8094%" y="1221" width="0.0336%" height="15" fill="rgb(249,182,41)"/><text x="38.0594%" y="1231.50"></text></g><g><title>tokio::runtime::task::joinable (17 samples, 0.19%)</title><rect x="37.8542%" y="1253" width="0.1904%" height="15" fill="rgb(243,47,26)"/><text x="38.1042%" y="1263.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (17 samples, 0.19%)</title><rect x="37.8542%" y="1237" width="0.1904%" height="15" fill="rgb(233,48,2)"/><text x="38.1042%" y="1247.50"></text></g><g><title>[libc-2.31.so] (17 samples, 0.19%)</title><rect x="37.8542%" y="1221" width="0.1904%" height="15" fill="rgb(244,165,34)"/><text x="38.1042%" y="1231.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate::{{closure}} (31 samples, 0.35%)</title><rect x="37.8430%" y="1333" width="0.3472%" height="15" fill="rgb(207,89,7)"/><text x="38.0930%" y="1343.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation (31 samples, 0.35%)</title><rect x="37.8430%" y="1317" width="0.3472%" height="15" fill="rgb(244,117,36)"/><text x="38.0930%" y="1327.50"></text></g><g><title>tokio::task::spawn::spawn (31 samples, 0.35%)</title><rect x="37.8430%" y="1301" width="0.3472%" height="15" fill="rgb(226,144,34)"/><text x="38.0930%" y="1311.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (31 samples, 0.35%)</title><rect x="37.8430%" y="1285" width="0.3472%" height="15" fill="rgb(213,23,19)"/><text x="38.0930%" y="1295.50"></text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (31 samples, 0.35%)</title><rect x="37.8430%" y="1269" width="0.3472%" height="15" fill="rgb(217,75,12)"/><text x="38.0930%" y="1279.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (13 samples, 0.15%)</title><rect x="38.0446%" y="1253" width="0.1456%" height="15" fill="rgb(224,159,17)"/><text x="38.2946%" y="1263.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (12 samples, 0.13%)</title><rect x="38.0558%" y="1237" width="0.1344%" height="15" fill="rgb(217,118,1)"/><text x="38.3058%" y="1247.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="38.1678%" y="1221" width="0.0224%" height="15" fill="rgb(232,180,48)"/><text x="38.4178%" y="1231.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="38.1678%" y="1205" width="0.0224%" height="15" fill="rgb(230,27,33)"/><text x="38.4178%" y="1215.50"></text></g><g><title>tokio::runtime::thread_pool::worker::CURRENT::FOO::__getit (2 samples, 0.02%)</title><rect x="38.1678%" y="1189" width="0.0224%" height="15" fill="rgb(205,31,21)"/><text x="38.4178%" y="1199.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (2 samples, 0.02%)</title><rect x="38.1678%" y="1173" width="0.0224%" height="15" fill="rgb(253,59,4)"/><text x="38.4178%" y="1183.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (2 samples, 0.02%)</title><rect x="38.1678%" y="1157" width="0.0224%" height="15" fill="rgb(224,201,9)"/><text x="38.4178%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="38.1678%" y="1141" width="0.0224%" height="15" fill="rgb(229,206,30)"/><text x="38.4178%" y="1151.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="38.2462%" y="1221" width="0.0224%" height="15" fill="rgb(212,67,47)"/><text x="38.4962%" y="1231.50"></text></g><g><title>tokio::park::thread::wake (3 samples, 0.03%)</title><rect x="38.2686%" y="1221" width="0.0336%" height="15" fill="rgb(211,96,50)"/><text x="38.5186%" y="1231.50"></text></g><g><title>tokio::park::thread::Inner::unpark (3 samples, 0.03%)</title><rect x="38.2686%" y="1205" width="0.0336%" height="15" fill="rgb(252,114,18)"/><text x="38.5186%" y="1215.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::notify_one (3 samples, 0.03%)</title><rect x="38.2686%" y="1189" width="0.0336%" height="15" fill="rgb(223,58,37)"/><text x="38.5186%" y="1199.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one (3 samples, 0.03%)</title><rect x="38.2686%" y="1173" width="0.0336%" height="15" fill="rgb(237,70,4)"/><text x="38.5186%" y="1183.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (3 samples, 0.03%)</title><rect x="38.2686%" y="1157" width="0.0336%" height="15" fill="rgb(244,85,46)"/><text x="38.5186%" y="1167.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (3 samples, 0.03%)</title><rect x="38.2686%" y="1141" width="0.0336%" height="15" fill="rgb(223,39,52)"/><text x="38.5186%" y="1151.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (3 samples, 0.03%)</title><rect x="38.2686%" y="1125" width="0.0336%" height="15" fill="rgb(218,200,14)"/><text x="38.5186%" y="1135.50"></text></g><g><title>syscall (3 samples, 0.03%)</title><rect x="38.2686%" y="1109" width="0.0336%" height="15" fill="rgb(208,171,16)"/><text x="38.5186%" y="1119.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="38.2686%" y="1093" width="0.0336%" height="15" fill="rgb(234,200,18)"/><text x="38.5186%" y="1103.50"></text></g><g><title>tokio::coop::poll_proceed (2 samples, 0.02%)</title><rect x="38.3134%" y="1157" width="0.0224%" height="15" fill="rgb(228,45,11)"/><text x="38.5634%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="38.3134%" y="1141" width="0.0224%" height="15" fill="rgb(237,182,11)"/><text x="38.5634%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="38.3134%" y="1125" width="0.0224%" height="15" fill="rgb(241,175,49)"/><text x="38.5634%" y="1135.50"></text></g><g><title>tokio::coop::CURRENT::__getit (2 samples, 0.02%)</title><rect x="38.3134%" y="1109" width="0.0224%" height="15" fill="rgb(247,38,35)"/><text x="38.5634%" y="1119.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (2 samples, 0.02%)</title><rect x="38.3134%" y="1093" width="0.0224%" height="15" fill="rgb(228,39,49)"/><text x="38.5634%" y="1103.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="38.3246%" y="1077" width="0.0112%" height="15" fill="rgb(226,101,26)"/><text x="38.5746%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="38.3246%" y="1061" width="0.0112%" height="15" fill="rgb(206,141,19)"/><text x="38.5746%" y="1071.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (4 samples, 0.04%)</title><rect x="38.3134%" y="1173" width="0.0448%" height="15" fill="rgb(211,200,13)"/><text x="38.5634%" y="1183.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::poll_acquire (2 samples, 0.02%)</title><rect x="38.3358%" y="1157" width="0.0224%" height="15" fill="rgb(241,121,6)"/><text x="38.5858%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="38.3470%" y="1141" width="0.0112%" height="15" fill="rgb(234,221,29)"/><text x="38.5970%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="38.3470%" y="1125" width="0.0112%" height="15" fill="rgb(229,136,5)"/><text x="38.5970%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::batch_semaphore::Acquire&gt; (1 samples, 0.01%)</title><rect x="38.3582%" y="1173" width="0.0112%" height="15" fill="rgb(238,36,11)"/><text x="38.6082%" y="1183.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="38.3582%" y="1157" width="0.0112%" height="15" fill="rgb(251,55,41)"/><text x="38.6082%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9 samples, 0.10%)</title><rect x="38.3022%" y="1205" width="0.1008%" height="15" fill="rgb(242,34,40)"/><text x="38.5522%" y="1215.50"></text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::reserve::{{closure}} (9 samples, 0.10%)</title><rect x="38.3022%" y="1189" width="0.1008%" height="15" fill="rgb(215,42,17)"/><text x="38.5522%" y="1199.50"></text></g><g><title>tokio::sync::batch_semaphore::Semaphore::acquire (3 samples, 0.03%)</title><rect x="38.3694%" y="1173" width="0.0336%" height="15" fill="rgb(207,44,46)"/><text x="38.6194%" y="1183.50"></text></g><g><title>tokio::sync::batch_semaphore::Acquire::new (3 samples, 0.03%)</title><rect x="38.3694%" y="1157" width="0.0336%" height="15" fill="rgb(211,206,28)"/><text x="38.6194%" y="1167.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="38.4030%" y="1205" width="0.0112%" height="15" fill="rgb(237,167,16)"/><text x="38.6530%" y="1215.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="38.4142%" y="1189" width="0.0112%" height="15" fill="rgb(233,66,6)"/><text x="38.6642%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::park::thread::Inner&gt;&gt; (4 samples, 0.04%)</title><rect x="38.4254%" y="1173" width="0.0448%" height="15" fill="rgb(246,123,29)"/><text x="38.6754%" y="1183.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="38.4254%" y="1157" width="0.0448%" height="15" fill="rgb(209,62,40)"/><text x="38.6754%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="38.4590%" y="1141" width="0.0112%" height="15" fill="rgb(218,4,25)"/><text x="38.7090%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="38.4590%" y="1125" width="0.0112%" height="15" fill="rgb(253,91,49)"/><text x="38.7090%" y="1135.50"></text></g><g><title>core::mem::drop (4 samples, 0.04%)</title><rect x="38.4702%" y="1157" width="0.0448%" height="15" fill="rgb(228,155,29)"/><text x="38.7202%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,()&gt;&gt; (4 samples, 0.04%)</title><rect x="38.4702%" y="1141" width="0.0448%" height="15" fill="rgb(243,57,37)"/><text x="38.7202%" y="1151.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="38.4702%" y="1125" width="0.0448%" height="15" fill="rgb(244,167,17)"/><text x="38.7202%" y="1135.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (4 samples, 0.04%)</title><rect x="38.4702%" y="1109" width="0.0448%" height="15" fill="rgb(207,181,38)"/><text x="38.7202%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (4 samples, 0.04%)</title><rect x="38.4702%" y="1093" width="0.0448%" height="15" fill="rgb(211,8,23)"/><text x="38.7202%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.04%)</title><rect x="38.4702%" y="1077" width="0.0448%" height="15" fill="rgb(235,11,44)"/><text x="38.7202%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (3 samples, 0.03%)</title><rect x="38.5150%" y="1157" width="0.0336%" height="15" fill="rgb(248,18,52)"/><text x="38.7650%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_swap (3 samples, 0.03%)</title><rect x="38.5150%" y="1141" width="0.0336%" height="15" fill="rgb(208,4,7)"/><text x="38.7650%" y="1151.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (474 samples, 5.31%)</title><rect x="38.5597%" y="1093" width="5.3085%" height="15" fill="rgb(240,17,39)"/><text x="38.8097%" y="1103.50">&lt;parki..</text></g><g><title>syscall (473 samples, 5.30%)</title><rect x="38.5709%" y="1077" width="5.2973%" height="15" fill="rgb(207,170,3)"/><text x="38.8209%" y="1087.50">syscall</text></g><g><title>[unknown] (468 samples, 5.24%)</title><rect x="38.6269%" y="1061" width="5.2413%" height="15" fill="rgb(236,100,52)"/><text x="38.8769%" y="1071.50">[unkno..</text></g><g><title>[unknown] (466 samples, 5.22%)</title><rect x="38.6493%" y="1045" width="5.2189%" height="15" fill="rgb(246,78,51)"/><text x="38.8993%" y="1055.50">[unkno..</text></g><g><title>[unknown] (462 samples, 5.17%)</title><rect x="38.6941%" y="1029" width="5.1742%" height="15" fill="rgb(211,17,15)"/><text x="38.9441%" y="1039.50">[unkno..</text></g><g><title>[unknown] (461 samples, 5.16%)</title><rect x="38.7053%" y="1013" width="5.1630%" height="15" fill="rgb(209,59,46)"/><text x="38.9553%" y="1023.50">[unkno..</text></g><g><title>[unknown] (459 samples, 5.14%)</title><rect x="38.7277%" y="997" width="5.1406%" height="15" fill="rgb(210,92,25)"/><text x="38.9777%" y="1007.50">[unkno..</text></g><g><title>[unknown] (401 samples, 4.49%)</title><rect x="39.3773%" y="981" width="4.4910%" height="15" fill="rgb(238,174,52)"/><text x="39.6273%" y="991.50">[unkn..</text></g><g><title>[unknown] (376 samples, 4.21%)</title><rect x="39.6573%" y="965" width="4.2110%" height="15" fill="rgb(230,73,7)"/><text x="39.9073%" y="975.50">[unkn..</text></g><g><title>[unknown] (344 samples, 3.85%)</title><rect x="40.0157%" y="949" width="3.8526%" height="15" fill="rgb(243,124,40)"/><text x="40.2657%" y="959.50">[unk..</text></g><g><title>[unknown] (282 samples, 3.16%)</title><rect x="40.7100%" y="933" width="3.1582%" height="15" fill="rgb(244,170,11)"/><text x="40.9600%" y="943.50">[un..</text></g><g><title>[unknown] (157 samples, 1.76%)</title><rect x="42.1100%" y="917" width="1.7583%" height="15" fill="rgb(207,114,54)"/><text x="42.3600%" y="927.50"></text></g><g><title>[unknown] (71 samples, 0.80%)</title><rect x="43.0731%" y="901" width="0.7952%" height="15" fill="rgb(205,42,20)"/><text x="43.3231%" y="911.50"></text></g><g><title>[unknown] (29 samples, 0.32%)</title><rect x="43.5435%" y="885" width="0.3248%" height="15" fill="rgb(230,30,28)"/><text x="43.7935%" y="895.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="43.8235%" y="869" width="0.0448%" height="15" fill="rgb(205,73,54)"/><text x="44.0735%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (16 samples, 0.18%)</title><rect x="43.8683%" y="1093" width="0.1792%" height="15" fill="rgb(254,227,23)"/><text x="44.1183%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_load (16 samples, 0.18%)</title><rect x="43.8683%" y="1077" width="0.1792%" height="15" fill="rgb(228,202,34)"/><text x="44.1183%" y="1087.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (5 samples, 0.06%)</title><rect x="44.0475%" y="1093" width="0.0560%" height="15" fill="rgb(222,225,37)"/><text x="44.2975%" y="1103.50"></text></g><g><title>std::time::Instant::now (4 samples, 0.04%)</title><rect x="44.0587%" y="1077" width="0.0448%" height="15" fill="rgb(221,14,54)"/><text x="44.3087%" y="1087.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (4 samples, 0.04%)</title><rect x="44.0587%" y="1061" width="0.0448%" height="15" fill="rgb(254,102,2)"/><text x="44.3087%" y="1071.50"></text></g><g><title>std::sys::unix::time::inner::now (4 samples, 0.04%)</title><rect x="44.0587%" y="1045" width="0.0448%" height="15" fill="rgb(232,104,17)"/><text x="44.3087%" y="1055.50"></text></g><g><title>__clock_gettime (4 samples, 0.04%)</title><rect x="44.0587%" y="1029" width="0.0448%" height="15" fill="rgb(250,220,14)"/><text x="44.3087%" y="1039.50"></text></g><g><title>__vdso_clock_gettime (4 samples, 0.04%)</title><rect x="44.0587%" y="1013" width="0.0448%" height="15" fill="rgb(241,158,9)"/><text x="44.3087%" y="1023.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (19 samples, 0.21%)</title><rect x="44.1035%" y="1093" width="0.2128%" height="15" fill="rgb(246,9,43)"/><text x="44.3535%" y="1103.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (19 samples, 0.21%)</title><rect x="44.1035%" y="1077" width="0.2128%" height="15" fill="rgb(206,73,33)"/><text x="44.3535%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (19 samples, 0.21%)</title><rect x="44.1035%" y="1061" width="0.2128%" height="15" fill="rgb(222,79,8)"/><text x="44.3535%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (19 samples, 0.21%)</title><rect x="44.1035%" y="1045" width="0.2128%" height="15" fill="rgb(234,8,54)"/><text x="44.3535%" y="1055.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::notify_one (529 samples, 5.92%)</title><rect x="38.5485%" y="1157" width="5.9245%" height="15" fill="rgb(209,134,38)"/><text x="38.7985%" y="1167.50">tokio::l..</text></g><g><title>parking_lot::condvar::Condvar::notify_one (529 samples, 5.92%)</title><rect x="38.5485%" y="1141" width="5.9245%" height="15" fill="rgb(230,127,29)"/><text x="38.7985%" y="1151.50">parking_..</text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (529 samples, 5.92%)</title><rect x="38.5485%" y="1125" width="5.9245%" height="15" fill="rgb(242,44,41)"/><text x="38.7985%" y="1135.50">parking_..</text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (529 samples, 5.92%)</title><rect x="38.5485%" y="1109" width="5.9245%" height="15" fill="rgb(222,56,43)"/><text x="38.7985%" y="1119.50">parking_..</text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (14 samples, 0.16%)</title><rect x="44.3163%" y="1093" width="0.1568%" height="15" fill="rgb(238,39,47)"/><text x="44.5663%" y="1103.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (14 samples, 0.16%)</title><rect x="44.3163%" y="1077" width="0.1568%" height="15" fill="rgb(226,79,43)"/><text x="44.5663%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (14 samples, 0.16%)</title><rect x="44.3163%" y="1061" width="0.1568%" height="15" fill="rgb(242,105,53)"/><text x="44.5663%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_sub (14 samples, 0.16%)</title><rect x="44.3163%" y="1045" width="0.1568%" height="15" fill="rgb(251,132,46)"/><text x="44.5663%" y="1055.50"></text></g><g><title>tokio::park::thread::wake (541 samples, 6.06%)</title><rect x="38.4254%" y="1189" width="6.0589%" height="15" fill="rgb(231,77,14)"/><text x="38.6754%" y="1199.50">tokio::p..</text></g><g><title>tokio::park::thread::Inner::unpark (537 samples, 6.01%)</title><rect x="38.4702%" y="1173" width="6.0141%" height="15" fill="rgb(240,135,9)"/><text x="38.7202%" y="1183.50">tokio::p..</text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="44.4731%" y="1157" width="0.0112%" height="15" fill="rgb(248,109,14)"/><text x="44.7231%" y="1167.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.01%)</title><rect x="44.4731%" y="1141" width="0.0112%" height="15" fill="rgb(227,146,52)"/><text x="44.7231%" y="1151.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.01%)</title><rect x="44.4731%" y="1125" width="0.0112%" height="15" fill="rgb(232,54,3)"/><text x="44.7231%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.01%)</title><rect x="44.4731%" y="1109" width="0.0112%" height="15" fill="rgb(229,201,43)"/><text x="44.7231%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="44.4731%" y="1093" width="0.0112%" height="15" fill="rgb(252,161,33)"/><text x="44.7231%" y="1103.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.04%)</title><rect x="44.4843%" y="1157" width="0.0448%" height="15" fill="rgb(226,146,40)"/><text x="44.7343%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (15 samples, 0.17%)</title><rect x="44.5291%" y="1141" width="0.1680%" height="15" fill="rgb(219,47,25)"/><text x="44.7791%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_add (15 samples, 0.17%)</title><rect x="44.5291%" y="1125" width="0.1680%" height="15" fill="rgb(250,135,13)"/><text x="44.7791%" y="1135.50"></text></g><g><title>&lt;tokio::sync::mpsc::block::Values&lt;T&gt; as core::ops::index::Index&lt;usize&gt;&gt;::index (1 samples, 0.01%)</title><rect x="44.6971%" y="1125" width="0.0112%" height="15" fill="rgb(219,229,18)"/><text x="44.9471%" y="1135.50"></text></g><g><title>core::array::&lt;impl core::ops::index::Index&lt;I&gt; for [T: N]&gt;::index (1 samples, 0.01%)</title><rect x="44.6971%" y="1109" width="0.0112%" height="15" fill="rgb(217,152,27)"/><text x="44.9471%" y="1119.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.01%)</title><rect x="44.6971%" y="1093" width="0.0112%" height="15" fill="rgb(225,71,47)"/><text x="44.9471%" y="1103.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.01%)</title><rect x="44.6971%" y="1077" width="0.0112%" height="15" fill="rgb(220,139,14)"/><text x="44.9471%" y="1087.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.01%)</title><rect x="44.7083%" y="1125" width="0.0112%" height="15" fill="rgb(247,54,32)"/><text x="44.9583%" y="1135.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="44.7083%" y="1109" width="0.0112%" height="15" fill="rgb(252,131,39)"/><text x="44.9583%" y="1119.50"></text></g><g><title>tokio::sync::mpsc::chan::Tx&lt;T,S&gt;::send (43 samples, 0.48%)</title><rect x="44.4843%" y="1189" width="0.4816%" height="15" fill="rgb(210,108,39)"/><text x="44.7343%" y="1199.50"></text></g><g><title>tokio::sync::mpsc::chan::Chan&lt;T,S&gt;::send (43 samples, 0.48%)</title><rect x="44.4843%" y="1173" width="0.4816%" height="15" fill="rgb(205,23,29)"/><text x="44.7343%" y="1183.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::push (39 samples, 0.44%)</title><rect x="44.5291%" y="1157" width="0.4368%" height="15" fill="rgb(246,139,46)"/><text x="44.7791%" y="1167.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::write (24 samples, 0.27%)</title><rect x="44.6971%" y="1141" width="0.2688%" height="15" fill="rgb(250,81,26)"/><text x="44.9471%" y="1151.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::set_ready (22 samples, 0.25%)</title><rect x="44.7195%" y="1125" width="0.2464%" height="15" fill="rgb(214,104,7)"/><text x="44.9695%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (22 samples, 0.25%)</title><rect x="44.7195%" y="1109" width="0.2464%" height="15" fill="rgb(233,189,8)"/><text x="44.9695%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_or (22 samples, 0.25%)</title><rect x="44.7195%" y="1093" width="0.2464%" height="15" fill="rgb(228,141,17)"/><text x="44.9695%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_and (1 samples, 0.01%)</title><rect x="44.9658%" y="1157" width="0.0112%" height="15" fill="rgb(247,157,1)"/><text x="45.2158%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_and (1 samples, 0.01%)</title><rect x="44.9658%" y="1141" width="0.0112%" height="15" fill="rgb(249,225,5)"/><text x="45.2158%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (602 samples, 6.74%)</title><rect x="38.2462%" y="1237" width="6.7421%" height="15" fill="rgb(242,55,13)"/><text x="38.4962%" y="1247.50">&lt;core::fu..</text></g><g><title>tokio::sync::mpsc::bounded::Sender&lt;T&gt;::send::{{closure}} (597 samples, 6.69%)</title><rect x="38.3022%" y="1221" width="6.6861%" height="15" fill="rgb(230,49,50)"/><text x="38.5522%" y="1231.50">tokio::sy..</text></g><g><title>tokio::sync::mpsc::bounded::Permit&lt;T&gt;::send (587 samples, 6.57%)</title><rect x="38.4142%" y="1205" width="6.5741%" height="15" fill="rgb(241,111,38)"/><text x="38.6642%" y="1215.50">tokio::sy..</text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::wake (2 samples, 0.02%)</title><rect x="44.9658%" y="1189" width="0.0224%" height="15" fill="rgb(252,155,4)"/><text x="45.2158%" y="1199.50"></text></g><g><title>tokio::sync::task::atomic_waker::AtomicWaker::take_waker (2 samples, 0.02%)</title><rect x="44.9658%" y="1173" width="0.0224%" height="15" fill="rgb(212,69,32)"/><text x="45.2158%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.01%)</title><rect x="44.9770%" y="1157" width="0.0112%" height="15" fill="rgb(243,107,47)"/><text x="45.2270%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.01%)</title><rect x="44.9770%" y="1141" width="0.0112%" height="15" fill="rgb(247,130,12)"/><text x="45.2270%" y="1151.50"></text></g><g><title>&lt;blake3::Hasher as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="44.9882%" y="1221" width="0.0112%" height="15" fill="rgb(233,74,16)"/><text x="45.2382%" y="1231.50"></text></g><g><title>blake3::Hasher::new (1 samples, 0.01%)</title><rect x="44.9882%" y="1205" width="0.0112%" height="15" fill="rgb(208,58,18)"/><text x="45.2382%" y="1215.50"></text></g><g><title>blake3::Hasher::new_internal (1 samples, 0.01%)</title><rect x="44.9882%" y="1189" width="0.0112%" height="15" fill="rgb(242,225,1)"/><text x="45.2382%" y="1199.50"></text></g><g><title>blake3::platform::Platform::detect (1 samples, 0.01%)</title><rect x="44.9882%" y="1173" width="0.0112%" height="15" fill="rgb(249,39,40)"/><text x="45.2382%" y="1183.50"></text></g><g><title>blake3::platform::avx512_detected (1 samples, 0.01%)</title><rect x="44.9882%" y="1157" width="0.0112%" height="15" fill="rgb(207,72,44)"/><text x="45.2382%" y="1167.50"></text></g><g><title>std::std_detect::detect::arch::__is_feature_detected::avx512f (1 samples, 0.01%)</title><rect x="44.9882%" y="1141" width="0.0112%" height="15" fill="rgb(215,193,12)"/><text x="45.2382%" y="1151.50"></text></g><g><title>std::std_detect::detect::check_for (1 samples, 0.01%)</title><rect x="44.9882%" y="1125" width="0.0112%" height="15" fill="rgb(248,41,39)"/><text x="45.2382%" y="1135.50"></text></g><g><title>std::std_detect::detect::cache::test (1 samples, 0.01%)</title><rect x="44.9882%" y="1109" width="0.0112%" height="15" fill="rgb(253,85,4)"/><text x="45.2382%" y="1119.50"></text></g><g><title>std::std_detect::detect::cache::Cache::test (1 samples, 0.01%)</title><rect x="44.9882%" y="1093" width="0.0112%" height="15" fill="rgb(243,70,31)"/><text x="45.2382%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="44.9882%" y="1077" width="0.0112%" height="15" fill="rgb(253,195,26)"/><text x="45.2382%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="44.9882%" y="1061" width="0.0112%" height="15" fill="rgb(243,42,11)"/><text x="45.2382%" y="1071.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::news_score (4 samples, 0.04%)</title><rect x="45.0218%" y="1173" width="0.0448%" height="15" fill="rgb(239,66,17)"/><text x="45.2718%" y="1183.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::matches_score (3 samples, 0.03%)</title><rect x="45.0330%" y="1157" width="0.0336%" height="15" fill="rgb(217,132,21)"/><text x="45.2830%" y="1167.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::bundles_score (3 samples, 0.03%)</title><rect x="45.0330%" y="1141" width="0.0336%" height="15" fill="rgb(252,202,21)"/><text x="45.2830%" y="1151.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::connectives_score (3 samples, 0.03%)</title><rect x="45.0330%" y="1125" width="0.0336%" height="15" fill="rgb(233,98,36)"/><text x="45.2830%" y="1135.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::unforgeables_score (3 samples, 0.03%)</title><rect x="45.0330%" y="1109" width="0.0336%" height="15" fill="rgb(216,153,54)"/><text x="45.2830%" y="1119.50"></text></g><g><title>model::ordering::sort_unforgeable::&lt;impl model::ordering::Scorable for &amp;model::rho_types::GUnforgeable&gt;::score_tree_iter (3 samples, 0.03%)</title><rect x="45.0330%" y="1093" width="0.0336%" height="15" fill="rgb(250,99,7)"/><text x="45.2830%" y="1103.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::receives_score (2 samples, 0.02%)</title><rect x="45.0666%" y="1173" width="0.0224%" height="15" fill="rgb(207,56,50)"/><text x="45.3166%" y="1183.50"></text></g><g><title>&lt;model::ordering::ScoreTreeIter as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.09%)</title><rect x="45.0106%" y="1205" width="0.0896%" height="15" fill="rgb(244,61,34)"/><text x="45.2606%" y="1215.50"></text></g><g><title>&lt;model::ordering::sort_par::ParScoreTreeIter as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.09%)</title><rect x="45.0106%" y="1189" width="0.0896%" height="15" fill="rgb(241,50,38)"/><text x="45.2606%" y="1199.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::sends_score (1 samples, 0.01%)</title><rect x="45.0890%" y="1173" width="0.0112%" height="15" fill="rgb(212,166,30)"/><text x="45.3390%" y="1183.50"></text></g><g><title>core::array::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T: N]&gt;::index_mut (2 samples, 0.02%)</title><rect x="45.1562%" y="1125" width="0.0224%" height="15" fill="rgb(249,127,32)"/><text x="45.4062%" y="1135.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (2 samples, 0.02%)</title><rect x="45.1562%" y="1109" width="0.0224%" height="15" fill="rgb(209,103,0)"/><text x="45.4062%" y="1119.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.02%)</title><rect x="45.1562%" y="1093" width="0.0224%" height="15" fill="rgb(238,209,51)"/><text x="45.4062%" y="1103.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.01%)</title><rect x="45.1674%" y="1077" width="0.0112%" height="15" fill="rgb(237,56,23)"/><text x="45.4174%" y="1087.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.01%)</title><rect x="45.1674%" y="1061" width="0.0112%" height="15" fill="rgb(215,153,46)"/><text x="45.4174%" y="1071.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="45.1674%" y="1045" width="0.0112%" height="15" fill="rgb(224,49,31)"/><text x="45.4174%" y="1055.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="45.1674%" y="1029" width="0.0112%" height="15" fill="rgb(250,18,42)"/><text x="45.4174%" y="1039.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.01%)</title><rect x="45.1786%" y="1125" width="0.0112%" height="15" fill="rgb(215,176,39)"/><text x="45.4286%" y="1135.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="45.1786%" y="1109" width="0.0112%" height="15" fill="rgb(223,77,29)"/><text x="45.4286%" y="1119.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="45.1786%" y="1093" width="0.0112%" height="15" fill="rgb(234,94,52)"/><text x="45.4286%" y="1103.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash::traverse (9 samples, 0.10%)</title><rect x="45.1002%" y="1205" width="0.1008%" height="15" fill="rgb(220,154,50)"/><text x="45.3502%" y="1215.50"></text></g><g><title>blake3::Hasher::update (6 samples, 0.07%)</title><rect x="45.1338%" y="1189" width="0.0672%" height="15" fill="rgb(212,11,10)"/><text x="45.3838%" y="1199.50"></text></g><g><title>blake3::Hasher::update_with_join (6 samples, 0.07%)</title><rect x="45.1338%" y="1173" width="0.0672%" height="15" fill="rgb(205,166,19)"/><text x="45.3838%" y="1183.50"></text></g><g><title>blake3::ChunkState::update (5 samples, 0.06%)</title><rect x="45.1450%" y="1157" width="0.0560%" height="15" fill="rgb(244,198,16)"/><text x="45.3950%" y="1167.50"></text></g><g><title>blake3::ChunkState::fill_buf (5 samples, 0.06%)</title><rect x="45.1450%" y="1141" width="0.0560%" height="15" fill="rgb(219,69,12)"/><text x="45.3950%" y="1151.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.01%)</title><rect x="45.1898%" y="1125" width="0.0112%" height="15" fill="rgb(245,30,7)"/><text x="45.4398%" y="1135.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.01%)</title><rect x="45.1898%" y="1109" width="0.0112%" height="15" fill="rgb(218,221,48)"/><text x="45.4398%" y="1119.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="45.1898%" y="1093" width="0.0112%" height="15" fill="rgb(216,66,15)"/><text x="45.4398%" y="1103.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="45.1898%" y="1077" width="0.0112%" height="15" fill="rgb(226,122,50)"/><text x="45.4398%" y="1087.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="45.1898%" y="1061" width="0.0112%" height="15" fill="rgb(239,156,16)"/><text x="45.4398%" y="1071.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.01%)</title><rect x="45.1898%" y="1045" width="0.0112%" height="15" fill="rgb(224,27,38)"/><text x="45.4398%" y="1055.50"></text></g><g><title>blake3::ChunkState::len (2 samples, 0.02%)</title><rect x="45.2122%" y="1173" width="0.0224%" height="15" fill="rgb(224,39,27)"/><text x="45.4622%" y="1183.50"></text></g><g><title>core::array::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T: N]&gt;::index_mut (1 samples, 0.01%)</title><rect x="45.2458%" y="1141" width="0.0112%" height="15" fill="rgb(215,92,29)"/><text x="45.4958%" y="1151.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.01%)</title><rect x="45.2458%" y="1125" width="0.0112%" height="15" fill="rgb(207,159,16)"/><text x="45.4958%" y="1135.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.01%)</title><rect x="45.2458%" y="1109" width="0.0112%" height="15" fill="rgb(238,163,47)"/><text x="45.4958%" y="1119.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.01%)</title><rect x="45.2458%" y="1093" width="0.0112%" height="15" fill="rgb(219,91,49)"/><text x="45.4958%" y="1103.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.01%)</title><rect x="45.2458%" y="1077" width="0.0112%" height="15" fill="rgb(227,167,31)"/><text x="45.4958%" y="1087.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="45.2458%" y="1061" width="0.0112%" height="15" fill="rgb(234,80,54)"/><text x="45.4958%" y="1071.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="45.2458%" y="1045" width="0.0112%" height="15" fill="rgb(212,114,2)"/><text x="45.4958%" y="1055.50"></text></g><g><title>blake3::ChunkState::update (3 samples, 0.03%)</title><rect x="45.2346%" y="1173" width="0.0336%" height="15" fill="rgb(234,50,24)"/><text x="45.4846%" y="1183.50"></text></g><g><title>blake3::ChunkState::fill_buf (2 samples, 0.02%)</title><rect x="45.2458%" y="1157" width="0.0224%" height="15" fill="rgb(221,68,8)"/><text x="45.4958%" y="1167.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.01%)</title><rect x="45.2570%" y="1141" width="0.0112%" height="15" fill="rgb(254,180,31)"/><text x="45.5070%" y="1151.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="45.2570%" y="1125" width="0.0112%" height="15" fill="rgb(247,130,50)"/><text x="45.5070%" y="1135.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="45.2570%" y="1109" width="0.0112%" height="15" fill="rgb(211,109,4)"/><text x="45.5070%" y="1119.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash::traverse (25 samples, 0.28%)</title><rect x="44.9994%" y="1221" width="0.2800%" height="15" fill="rgb(238,50,21)"/><text x="45.2494%" y="1231.50"></text></g><g><title>blake3::Hasher::update (7 samples, 0.08%)</title><rect x="45.2010%" y="1205" width="0.0784%" height="15" fill="rgb(225,57,45)"/><text x="45.4510%" y="1215.50"></text></g><g><title>blake3::Hasher::update_with_join (7 samples, 0.08%)</title><rect x="45.2010%" y="1189" width="0.0784%" height="15" fill="rgb(209,196,50)"/><text x="45.4510%" y="1199.50"></text></g><g><title>blake3::Hasher::merge_cv_stack (1 samples, 0.01%)</title><rect x="45.2682%" y="1173" width="0.0112%" height="15" fill="rgb(242,140,13)"/><text x="45.5182%" y="1183.50"></text></g><g><title>core::num::&lt;impl u64&gt;::count_ones (1 samples, 0.01%)</title><rect x="45.2682%" y="1157" width="0.0112%" height="15" fill="rgb(217,111,7)"/><text x="45.5182%" y="1167.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash (27 samples, 0.30%)</title><rect x="44.9882%" y="1237" width="0.3024%" height="15" fill="rgb(253,193,51)"/><text x="45.2382%" y="1247.50"></text></g><g><title>blake3::Hasher::finalize (1 samples, 0.01%)</title><rect x="45.2794%" y="1221" width="0.0112%" height="15" fill="rgb(252,70,29)"/><text x="45.5294%" y="1231.50"></text></g><g><title>blake3::Hasher::final_output (1 samples, 0.01%)</title><rect x="45.2794%" y="1205" width="0.0112%" height="15" fill="rgb(232,127,12)"/><text x="45.5294%" y="1215.50"></text></g><g><title>blake3::ChunkState::output (1 samples, 0.01%)</title><rect x="45.2794%" y="1189" width="0.0112%" height="15" fill="rgb(211,180,21)"/><text x="45.5294%" y="1199.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="45.2906%" y="1205" width="0.0448%" height="15" fill="rgb(229,72,13)"/><text x="45.5406%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (4 samples, 0.04%)</title><rect x="45.2906%" y="1189" width="0.0448%" height="15" fill="rgb(240,211,49)"/><text x="45.5406%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_add (4 samples, 0.04%)</title><rect x="45.2906%" y="1173" width="0.0448%" height="15" fill="rgb(219,149,40)"/><text x="45.5406%" y="1183.50"></text></g><g><title>&lt;tokio::sync::mpsc::bounded::Sender&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.07%)</title><rect x="45.2906%" y="1237" width="0.0672%" height="15" fill="rgb(210,127,46)"/><text x="45.5406%" y="1247.50"></text></g><g><title>&lt;tokio::sync::mpsc::chan::Tx&lt;T,S&gt; as core::clone::Clone&gt;::clone (6 samples, 0.07%)</title><rect x="45.2906%" y="1221" width="0.0672%" height="15" fill="rgb(220,106,7)"/><text x="45.5406%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.02%)</title><rect x="45.3354%" y="1205" width="0.0224%" height="15" fill="rgb(249,31,22)"/><text x="45.5854%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.02%)</title><rect x="45.3354%" y="1189" width="0.0224%" height="15" fill="rgb(253,1,49)"/><text x="45.5854%" y="1199.50"></text></g><g><title>[libc-2.31.so] (25 samples, 0.28%)</title><rect x="45.3578%" y="1237" width="0.2800%" height="15" fill="rgb(227,144,33)"/><text x="45.6078%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_utils::sync::sharded_lock::ShardedLockReadGuard&lt;tokio::sync::mpsc::bounded::Sender&lt;rho_runtime::storage::coordinator::PendingTask&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="45.6378%" y="1237" width="0.0112%" height="15" fill="rgb(249,163,44)"/><text x="45.8878%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;()&gt;&gt; (1 samples, 0.01%)</title><rect x="45.6378%" y="1221" width="0.0112%" height="15" fill="rgb(234,15,39)"/><text x="45.8878%" y="1231.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="45.6378%" y="1205" width="0.0112%" height="15" fill="rgb(207,66,16)"/><text x="45.8878%" y="1215.50"></text></g><g><title>std::sys_common::rwlock::RWLock::read_unlock (1 samples, 0.01%)</title><rect x="45.6378%" y="1189" width="0.0112%" height="15" fill="rgb(233,112,24)"/><text x="45.8878%" y="1199.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (1 samples, 0.01%)</title><rect x="45.6378%" y="1173" width="0.0112%" height="15" fill="rgb(230,90,22)"/><text x="45.8878%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="45.6378%" y="1157" width="0.0112%" height="15" fill="rgb(229,61,13)"/><text x="45.8878%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="45.6378%" y="1141" width="0.0112%" height="15" fill="rgb(225,57,24)"/><text x="45.8878%" y="1151.50"></text></g><g><title>&lt;tokio::sync::mpsc::chan::Tx&lt;T,S&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.16%)</title><rect x="45.6490%" y="1205" width="0.1568%" height="15" fill="rgb(208,169,48)"/><text x="45.8990%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (13 samples, 0.15%)</title><rect x="45.6602%" y="1189" width="0.1456%" height="15" fill="rgb(244,218,51)"/><text x="45.9102%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_sub (13 samples, 0.15%)</title><rect x="45.6602%" y="1173" width="0.1456%" height="15" fill="rgb(214,148,10)"/><text x="45.9102%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::mpsc::bounded::Sender&lt;rho_runtime::storage::coordinator::PendingTask&gt;&gt; (15 samples, 0.17%)</title><rect x="45.6490%" y="1237" width="0.1680%" height="15" fill="rgb(225,174,27)"/><text x="45.8990%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::mpsc::chan::Tx&lt;rho_runtime::storage::coordinator::PendingTask,(tokio::sync::batch_semaphore::Semaphore,usize)&gt;&gt; (15 samples, 0.17%)</title><rect x="45.6490%" y="1221" width="0.1680%" height="15" fill="rgb(230,96,26)"/><text x="45.8990%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::mpsc::chan::Chan&lt;rho_runtime::storage::coordinator::PendingTask,(tokio::sync::batch_semaphore::Semaphore,usize)&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="45.8058%" y="1205" width="0.0112%" height="15" fill="rgb(232,10,30)"/><text x="46.0558%" y="1215.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="45.8058%" y="1189" width="0.0112%" height="15" fill="rgb(222,8,50)"/><text x="46.0558%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="45.8058%" y="1173" width="0.0112%" height="15" fill="rgb(213,81,27)"/><text x="46.0558%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="45.8058%" y="1157" width="0.0112%" height="15" fill="rgb(245,50,10)"/><text x="46.0558%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::oneshot::Receiver&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="45.8170%" y="1237" width="0.0112%" height="15" fill="rgb(216,100,18)"/><text x="46.0670%" y="1247.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="45.8170%" y="1221" width="0.0112%" height="15" fill="rgb(236,147,54)"/><text x="46.0670%" y="1231.50"></text></g><g><title>crossbeam_utils::sync::sharded_lock::current_index (1 samples, 0.01%)</title><rect x="45.8282%" y="1221" width="0.0112%" height="15" fill="rgb(205,143,26)"/><text x="46.0782%" y="1231.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="45.8282%" y="1205" width="0.0112%" height="15" fill="rgb(236,26,9)"/><text x="46.0782%" y="1215.50"></text></g><g><title>crossbeam_utils::sync::sharded_lock::ShardedLock&lt;T&gt;::read (6 samples, 0.07%)</title><rect x="45.8282%" y="1237" width="0.0672%" height="15" fill="rgb(221,165,53)"/><text x="46.0782%" y="1247.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (5 samples, 0.06%)</title><rect x="45.8394%" y="1221" width="0.0560%" height="15" fill="rgb(214,110,17)"/><text x="46.0894%" y="1231.50"></text></g><g><title>std::sys_common::rwlock::RWLock::read (4 samples, 0.04%)</title><rect x="45.8506%" y="1205" width="0.0448%" height="15" fill="rgb(237,197,12)"/><text x="46.1006%" y="1215.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (4 samples, 0.04%)</title><rect x="45.8506%" y="1189" width="0.0448%" height="15" fill="rgb(205,84,17)"/><text x="46.1006%" y="1199.50"></text></g><g><title>__GI___pthread_rwlock_rdlock (4 samples, 0.04%)</title><rect x="45.8506%" y="1173" width="0.0448%" height="15" fill="rgb(237,18,45)"/><text x="46.1006%" y="1183.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.08%)</title><rect x="45.8954%" y="1221" width="0.0784%" height="15" fill="rgb(221,87,14)"/><text x="46.1454%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (7 samples, 0.08%)</title><rect x="45.8954%" y="1205" width="0.0784%" height="15" fill="rgb(238,186,15)"/><text x="46.1454%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_add (7 samples, 0.08%)</title><rect x="45.8954%" y="1189" width="0.0784%" height="15" fill="rgb(208,115,11)"/><text x="46.1454%" y="1199.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="45.9738%" y="1205" width="0.0224%" height="15" fill="rgb(254,175,0)"/><text x="46.2238%" y="1215.50"></text></g><g><title>__libc_malloc (15 samples, 0.17%)</title><rect x="45.9962%" y="1141" width="0.1680%" height="15" fill="rgb(227,24,42)"/><text x="46.2462%" y="1151.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.09%)</title><rect x="46.0746%" y="1125" width="0.0896%" height="15" fill="rgb(223,211,37)"/><text x="46.3246%" y="1135.50"></text></g><g><title>&lt;rho_runtime::storage::coordinator::AsyncStore as rho_runtime::storage::Storage&gt;::produce::{{closure}} (713 samples, 7.99%)</title><rect x="38.1902%" y="1253" width="7.9852%" height="15" fill="rgb(235,49,27)"/><text x="38.4402%" y="1263.50">&lt;rho_runtim..</text></g><g><title>tokio::sync::oneshot::channel (25 samples, 0.28%)</title><rect x="45.8954%" y="1237" width="0.2800%" height="15" fill="rgb(254,97,51)"/><text x="46.1454%" y="1247.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (18 samples, 0.20%)</title><rect x="45.9738%" y="1221" width="0.2016%" height="15" fill="rgb(249,51,40)"/><text x="46.2238%" y="1231.50"></text></g><g><title>alloc::alloc::exchange_malloc (16 samples, 0.18%)</title><rect x="45.9962%" y="1205" width="0.1792%" height="15" fill="rgb(210,128,45)"/><text x="46.2462%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.18%)</title><rect x="45.9962%" y="1189" width="0.1792%" height="15" fill="rgb(224,137,50)"/><text x="46.2462%" y="1199.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.18%)</title><rect x="45.9962%" y="1173" width="0.1792%" height="15" fill="rgb(242,15,9)"/><text x="46.2462%" y="1183.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.18%)</title><rect x="45.9962%" y="1157" width="0.1792%" height="15" fill="rgb(233,187,41)"/><text x="46.2462%" y="1167.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="46.1642%" y="1141" width="0.0112%" height="15" fill="rgb(227,2,29)"/><text x="46.4142%" y="1151.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (715 samples, 8.01%)</title><rect x="38.1902%" y="1285" width="8.0076%" height="15" fill="rgb(222,70,3)"/><text x="38.4402%" y="1295.50">&lt;core::pin:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (715 samples, 8.01%)</title><rect x="38.1902%" y="1269" width="8.0076%" height="15" fill="rgb(213,11,42)"/><text x="38.4402%" y="1279.50">&lt;core::futu..</text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="46.1754%" y="1253" width="0.0224%" height="15" fill="rgb(225,150,9)"/><text x="46.4254%" y="1263.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (722 samples, 8.09%)</title><rect x="38.1902%" y="1317" width="8.0860%" height="15" fill="rgb(230,162,45)"/><text x="38.4402%" y="1327.50">&lt;core::futu..</text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::produce::{{closure}} (722 samples, 8.09%)</title><rect x="38.1902%" y="1301" width="8.0860%" height="15" fill="rgb(222,14,52)"/><text x="38.4402%" y="1311.50">rho_runtime..</text></g><g><title>&lt;rho_runtime::storage::coordinator::AsyncStore as rho_runtime::storage::Storage&gt;::produce (7 samples, 0.08%)</title><rect x="46.1978%" y="1285" width="0.0784%" height="15" fill="rgb(254,198,14)"/><text x="46.4478%" y="1295.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (7 samples, 0.08%)</title><rect x="46.1978%" y="1269" width="0.0784%" height="15" fill="rgb(220,217,30)"/><text x="46.4478%" y="1279.50"></text></g><g><title>alloc::alloc::exchange_malloc (7 samples, 0.08%)</title><rect x="46.1978%" y="1253" width="0.0784%" height="15" fill="rgb(215,146,41)"/><text x="46.4478%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.08%)</title><rect x="46.1978%" y="1237" width="0.0784%" height="15" fill="rgb(217,27,36)"/><text x="46.4478%" y="1247.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.08%)</title><rect x="46.1978%" y="1221" width="0.0784%" height="15" fill="rgb(219,218,39)"/><text x="46.4478%" y="1231.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.08%)</title><rect x="46.1978%" y="1205" width="0.0784%" height="15" fill="rgb(219,4,42)"/><text x="46.4478%" y="1215.50"></text></g><g><title>__libc_malloc (7 samples, 0.08%)</title><rect x="46.1978%" y="1189" width="0.0784%" height="15" fill="rgb(249,119,36)"/><text x="46.4478%" y="1199.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.08%)</title><rect x="46.1978%" y="1173" width="0.0784%" height="15" fill="rgb(209,23,33)"/><text x="46.4478%" y="1183.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.08%)</title><rect x="46.1978%" y="1157" width="0.0784%" height="15" fill="rgb(211,10,0)"/><text x="46.4478%" y="1167.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_nested_expressions (26 samples, 0.29%)</title><rect x="46.2762%" y="1317" width="0.2912%" height="15" fill="rgb(208,99,37)"/><text x="46.5262%" y="1327.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (26 samples, 0.29%)</title><rect x="46.2762%" y="1301" width="0.2912%" height="15" fill="rgb(213,132,31)"/><text x="46.5262%" y="1311.50"></text></g><g><title>alloc::alloc::exchange_malloc (26 samples, 0.29%)</title><rect x="46.2762%" y="1285" width="0.2912%" height="15" fill="rgb(243,129,40)"/><text x="46.5262%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (26 samples, 0.29%)</title><rect x="46.2762%" y="1269" width="0.2912%" height="15" fill="rgb(210,66,33)"/><text x="46.5262%" y="1279.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (26 samples, 0.29%)</title><rect x="46.2762%" y="1253" width="0.2912%" height="15" fill="rgb(209,189,4)"/><text x="46.5262%" y="1263.50"></text></g><g><title>alloc::alloc::alloc (26 samples, 0.29%)</title><rect x="46.2762%" y="1237" width="0.2912%" height="15" fill="rgb(214,107,37)"/><text x="46.5262%" y="1247.50"></text></g><g><title>__libc_malloc (26 samples, 0.29%)</title><rect x="46.2762%" y="1221" width="0.2912%" height="15" fill="rgb(245,88,54)"/><text x="46.5262%" y="1231.50"></text></g><g><title>[libc-2.31.so] (26 samples, 0.29%)</title><rect x="46.2762%" y="1205" width="0.2912%" height="15" fill="rgb(205,146,20)"/><text x="46.5262%" y="1215.50"></text></g><g><title>[libc-2.31.so] (26 samples, 0.29%)</title><rect x="46.2762%" y="1189" width="0.2912%" height="15" fill="rgb(220,161,25)"/><text x="46.5262%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="46.5674%" y="1317" width="0.0112%" height="15" fill="rgb(215,152,15)"/><text x="46.8174%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (1 samples, 0.01%)</title><rect x="46.5674%" y="1301" width="0.0112%" height="15" fill="rgb(233,192,44)"/><text x="46.8174%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;rho_runtime::storage::coordinator::AsyncStore&gt;&gt;::evaluate_nested_expressions::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="46.5674%" y="1285" width="0.0112%" height="15" fill="rgb(240,170,46)"/><text x="46.8174%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;rho_runtime::storage::coordinator::AsyncStore&gt;&gt;::evaluate_nested_expressions::{{closure}}&gt; (1 samples, 0.01%)</title><rect x="46.5674%" y="1269" width="0.0112%" height="15" fill="rgb(207,104,33)"/><text x="46.8174%" y="1279.50"></text></g><g><title>model::ordering::sort_par::&lt;impl model::ordering::Sortable for model::rho_types::Par&gt;::sort (2 samples, 0.02%)</title><rect x="46.5786%" y="1301" width="0.0224%" height="15" fill="rgb(219,21,39)"/><text x="46.8286%" y="1311.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by (2 samples, 0.02%)</title><rect x="46.5786%" y="1285" width="0.0224%" height="15" fill="rgb(214,133,29)"/><text x="46.8286%" y="1295.50"></text></g><g><title>alloc::slice::merge_sort (2 samples, 0.02%)</title><rect x="46.5786%" y="1269" width="0.0224%" height="15" fill="rgb(226,93,6)"/><text x="46.8286%" y="1279.50"></text></g><g><title>model::bitset::BitSet&lt;B&gt;::truncate (3 samples, 0.03%)</title><rect x="46.6010%" y="1285" width="0.0336%" height="15" fill="rgb(252,222,34)"/><text x="46.8510%" y="1295.50"></text></g><g><title>bit_vec::BitVec&lt;B&gt;::truncate (3 samples, 0.03%)</title><rect x="46.6010%" y="1269" width="0.0336%" height="15" fill="rgb(252,92,48)"/><text x="46.8510%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (2 samples, 0.02%)</title><rect x="46.6122%" y="1253" width="0.0224%" height="15" fill="rgb(245,223,24)"/><text x="46.8622%" y="1263.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="46.6570%" y="1269" width="0.0112%" height="15" fill="rgb(205,176,3)"/><text x="46.9070%" y="1279.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="46.6570%" y="1253" width="0.0112%" height="15" fill="rgb(235,151,15)"/><text x="46.9070%" y="1263.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="46.6570%" y="1237" width="0.0112%" height="15" fill="rgb(237,209,11)"/><text x="46.9070%" y="1247.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.07%)</title><rect x="46.6682%" y="1269" width="0.0672%" height="15" fill="rgb(243,227,24)"/><text x="46.9182%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.02%)</title><rect x="46.7354%" y="1253" width="0.0224%" height="15" fill="rgb(239,193,16)"/><text x="46.9854%" y="1263.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="46.7354%" y="1237" width="0.0224%" height="15" fill="rgb(231,27,9)"/><text x="46.9854%" y="1247.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="46.7354%" y="1221" width="0.0224%" height="15" fill="rgb(219,169,10)"/><text x="46.9854%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (3 samples, 0.03%)</title><rect x="46.7354%" y="1269" width="0.0336%" height="15" fill="rgb(244,229,43)"/><text x="46.9854%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.01%)</title><rect x="46.7578%" y="1253" width="0.0112%" height="15" fill="rgb(254,38,20)"/><text x="47.0078%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.01%)</title><rect x="46.7690%" y="1269" width="0.0112%" height="15" fill="rgb(250,47,30)"/><text x="47.0190%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="46.7690%" y="1253" width="0.0112%" height="15" fill="rgb(224,124,36)"/><text x="47.0190%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="46.7690%" y="1237" width="0.0112%" height="15" fill="rgb(246,68,51)"/><text x="47.0190%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="46.7690%" y="1221" width="0.0112%" height="15" fill="rgb(253,43,49)"/><text x="47.0190%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="46.7690%" y="1205" width="0.0112%" height="15" fill="rgb(219,54,36)"/><text x="47.0190%" y="1215.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="46.7690%" y="1189" width="0.0112%" height="15" fill="rgb(227,133,34)"/><text x="47.0190%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="46.7690%" y="1173" width="0.0112%" height="15" fill="rgb(247,227,15)"/><text x="47.0190%" y="1183.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="46.7690%" y="1157" width="0.0112%" height="15" fill="rgb(229,96,14)"/><text x="47.0190%" y="1167.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.04%)</title><rect x="46.7802%" y="1141" width="0.0448%" height="15" fill="rgb(220,79,17)"/><text x="47.0302%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;model::rho_types::Expr&gt;&gt; (6 samples, 0.07%)</title><rect x="46.7802%" y="1269" width="0.0672%" height="15" fill="rgb(205,131,53)"/><text x="47.0302%" y="1279.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.07%)</title><rect x="46.7802%" y="1253" width="0.0672%" height="15" fill="rgb(209,50,29)"/><text x="47.0302%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;model::rho_types::Expr,alloc::alloc::Global&gt;&gt; (6 samples, 0.07%)</title><rect x="46.7802%" y="1237" width="0.0672%" height="15" fill="rgb(245,86,46)"/><text x="47.0302%" y="1247.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.07%)</title><rect x="46.7802%" y="1221" width="0.0672%" height="15" fill="rgb(235,66,46)"/><text x="47.0302%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (6 samples, 0.07%)</title><rect x="46.7802%" y="1205" width="0.0672%" height="15" fill="rgb(232,148,31)"/><text x="47.0302%" y="1215.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.07%)</title><rect x="46.7802%" y="1189" width="0.0672%" height="15" fill="rgb(217,149,8)"/><text x="47.0302%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.07%)</title><rect x="46.7802%" y="1173" width="0.0672%" height="15" fill="rgb(209,183,11)"/><text x="47.0302%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.07%)</title><rect x="46.7802%" y="1157" width="0.0672%" height="15" fill="rgb(208,55,20)"/><text x="47.0302%" y="1167.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="46.8250%" y="1141" width="0.0224%" height="15" fill="rgb(218,39,14)"/><text x="47.0750%" y="1151.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="46.8474%" y="1253" width="0.0112%" height="15" fill="rgb(216,169,33)"/><text x="47.0974%" y="1263.50"></text></g><g><title>model::rho_types::Par::append_expr (2 samples, 0.02%)</title><rect x="46.8474%" y="1269" width="0.0224%" height="15" fill="rgb(233,80,24)"/><text x="47.0974%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="46.8586%" y="1253" width="0.0112%" height="15" fill="rgb(213,179,31)"/><text x="47.1086%" y="1263.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="46.8586%" y="1237" width="0.0112%" height="15" fill="rgb(209,19,5)"/><text x="47.1086%" y="1247.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="46.8586%" y="1221" width="0.0112%" height="15" fill="rgb(219,18,35)"/><text x="47.1086%" y="1231.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_send::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Send&gt;::evaluate::{{closure}} (776 samples, 8.69%)</title><rect x="38.1902%" y="1333" width="8.6908%" height="15" fill="rgb(209,169,16)"/><text x="38.4402%" y="1343.50">rho_runtime:..</text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute (27 samples, 0.30%)</title><rect x="46.5786%" y="1317" width="0.3024%" height="15" fill="rgb(245,90,51)"/><text x="46.8286%" y="1327.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute_no_sort (25 samples, 0.28%)</title><rect x="46.6010%" y="1301" width="0.2800%" height="15" fill="rgb(220,99,45)"/><text x="46.8510%" y="1311.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::substitute_expressions_in_par (22 samples, 0.25%)</title><rect x="46.6346%" y="1285" width="0.2464%" height="15" fill="rgb(249,89,25)"/><text x="46.8846%" y="1295.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_expr::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Expr&gt;::substitute_no_sort (1 samples, 0.01%)</title><rect x="46.8698%" y="1269" width="0.0112%" height="15" fill="rgb(239,193,0)"/><text x="47.1198%" y="1279.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (1 samples, 0.01%)</title><rect x="46.8921%" y="1301" width="0.0112%" height="15" fill="rgb(231,126,1)"/><text x="47.1421%" y="1311.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="46.8921%" y="1285" width="0.0112%" height="15" fill="rgb(243,166,3)"/><text x="47.1421%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.03%)</title><rect x="47.0265%" y="1029" width="0.0336%" height="15" fill="rgb(223,22,34)"/><text x="47.2765%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="47.0601%" y="933" width="0.0112%" height="15" fill="rgb(251,52,51)"/><text x="47.3101%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="47.0601%" y="917" width="0.0112%" height="15" fill="rgb(221,165,28)"/><text x="47.3101%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.07%)</title><rect x="47.0153%" y="1045" width="0.0672%" height="15" fill="rgb(218,121,47)"/><text x="47.2653%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="47.0601%" y="1029" width="0.0224%" height="15" fill="rgb(209,120,9)"/><text x="47.3101%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="47.0601%" y="1013" width="0.0224%" height="15" fill="rgb(236,68,12)"/><text x="47.3101%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="47.0601%" y="997" width="0.0224%" height="15" fill="rgb(225,194,26)"/><text x="47.3101%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="47.0601%" y="981" width="0.0224%" height="15" fill="rgb(231,84,39)"/><text x="47.3101%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="47.0601%" y="965" width="0.0224%" height="15" fill="rgb(210,11,45)"/><text x="47.3101%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="47.0601%" y="949" width="0.0224%" height="15" fill="rgb(224,54,52)"/><text x="47.3101%" y="959.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="47.0713%" y="933" width="0.0112%" height="15" fill="rgb(238,102,14)"/><text x="47.3213%" y="943.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1 samples, 0.01%)</title><rect x="47.0713%" y="917" width="0.0112%" height="15" fill="rgb(243,160,52)"/><text x="47.3213%" y="927.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.01%)</title><rect x="47.0713%" y="901" width="0.0112%" height="15" fill="rgb(216,114,19)"/><text x="47.3213%" y="911.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.01%)</title><rect x="47.0713%" y="885" width="0.0112%" height="15" fill="rgb(244,166,37)"/><text x="47.3213%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.04%)</title><rect x="47.0937%" y="885" width="0.0448%" height="15" fill="rgb(246,29,44)"/><text x="47.3437%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.04%)</title><rect x="47.0937%" y="869" width="0.0448%" height="15" fill="rgb(215,56,53)"/><text x="47.3437%" y="879.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.04%)</title><rect x="47.0937%" y="853" width="0.0448%" height="15" fill="rgb(217,60,2)"/><text x="47.3437%" y="863.50"></text></g><g><title>__libc_malloc (4 samples, 0.04%)</title><rect x="47.0937%" y="837" width="0.0448%" height="15" fill="rgb(207,26,24)"/><text x="47.3437%" y="847.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="47.1273%" y="821" width="0.0112%" height="15" fill="rgb(252,210,15)"/><text x="47.3773%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.06%)</title><rect x="47.0937%" y="933" width="0.0560%" height="15" fill="rgb(253,209,26)"/><text x="47.3437%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.06%)</title><rect x="47.0937%" y="917" width="0.0560%" height="15" fill="rgb(238,170,14)"/><text x="47.3437%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.06%)</title><rect x="47.0937%" y="901" width="0.0560%" height="15" fill="rgb(216,178,15)"/><text x="47.3437%" y="911.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="47.1385%" y="885" width="0.0112%" height="15" fill="rgb(250,197,2)"/><text x="47.3885%" y="895.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1 samples, 0.01%)</title><rect x="47.1385%" y="869" width="0.0112%" height="15" fill="rgb(212,70,42)"/><text x="47.3885%" y="879.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (19 samples, 0.21%)</title><rect x="46.9481%" y="1061" width="0.2128%" height="15" fill="rgb(227,213,9)"/><text x="47.1981%" y="1071.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.08%)</title><rect x="47.0825%" y="1045" width="0.0784%" height="15" fill="rgb(245,99,25)"/><text x="47.3325%" y="1055.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (6 samples, 0.07%)</title><rect x="47.0937%" y="1029" width="0.0672%" height="15" fill="rgb(250,82,29)"/><text x="47.3437%" y="1039.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (6 samples, 0.07%)</title><rect x="47.0937%" y="1013" width="0.0672%" height="15" fill="rgb(241,226,54)"/><text x="47.3437%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.07%)</title><rect x="47.0937%" y="997" width="0.0672%" height="15" fill="rgb(221,99,41)"/><text x="47.3437%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.07%)</title><rect x="47.0937%" y="981" width="0.0672%" height="15" fill="rgb(213,90,21)"/><text x="47.3437%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.07%)</title><rect x="47.0937%" y="965" width="0.0672%" height="15" fill="rgb(205,208,24)"/><text x="47.3437%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.07%)</title><rect x="47.0937%" y="949" width="0.0672%" height="15" fill="rgb(246,31,12)"/><text x="47.3437%" y="959.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="47.1497%" y="933" width="0.0112%" height="15" fill="rgb(213,154,6)"/><text x="47.3997%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="47.1497%" y="917" width="0.0112%" height="15" fill="rgb(222,163,29)"/><text x="47.3997%" y="927.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="47.1497%" y="901" width="0.0112%" height="15" fill="rgb(227,201,8)"/><text x="47.3997%" y="911.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (27 samples, 0.30%)</title><rect x="46.9481%" y="1077" width="0.3024%" height="15" fill="rgb(233,9,32)"/><text x="47.1981%" y="1087.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.09%)</title><rect x="47.1609%" y="1061" width="0.0896%" height="15" fill="rgb(217,54,24)"/><text x="47.4109%" y="1071.50"></text></g><g><title>&lt;model::rho_types::MatchCase as core::clone::Clone&gt;::clone (31 samples, 0.35%)</title><rect x="46.9257%" y="1093" width="0.3472%" height="15" fill="rgb(235,192,0)"/><text x="47.1757%" y="1103.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="47.2505%" y="1077" width="0.0224%" height="15" fill="rgb(235,45,9)"/><text x="47.5005%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (32 samples, 0.36%)</title><rect x="46.9257%" y="1157" width="0.3584%" height="15" fill="rgb(246,42,40)"/><text x="47.1757%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (32 samples, 0.36%)</title><rect x="46.9257%" y="1141" width="0.3584%" height="15" fill="rgb(248,111,24)"/><text x="47.1757%" y="1151.50"></text></g><g><title>alloc::slice::hack::to_vec (32 samples, 0.36%)</title><rect x="46.9257%" y="1125" width="0.3584%" height="15" fill="rgb(249,65,22)"/><text x="47.1757%" y="1135.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (32 samples, 0.36%)</title><rect x="46.9257%" y="1109" width="0.3584%" height="15" fill="rgb(238,111,51)"/><text x="47.1757%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="47.2729%" y="1093" width="0.0112%" height="15" fill="rgb(250,118,22)"/><text x="47.5229%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="47.2729%" y="1077" width="0.0112%" height="15" fill="rgb(234,84,26)"/><text x="47.5229%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="47.2729%" y="1061" width="0.0112%" height="15" fill="rgb(243,172,12)"/><text x="47.5229%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="47.2729%" y="1045" width="0.0112%" height="15" fill="rgb(236,150,49)"/><text x="47.5229%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="47.2729%" y="1029" width="0.0112%" height="15" fill="rgb(225,197,26)"/><text x="47.5229%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="47.2729%" y="1013" width="0.0112%" height="15" fill="rgb(214,17,42)"/><text x="47.5229%" y="1023.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="47.2729%" y="997" width="0.0112%" height="15" fill="rgb(224,165,40)"/><text x="47.5229%" y="1007.50"></text></g><g><title>__libc_malloc (7 samples, 0.08%)</title><rect x="47.2841%" y="949" width="0.0784%" height="15" fill="rgb(246,100,4)"/><text x="47.5341%" y="959.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="47.3513%" y="933" width="0.0112%" height="15" fill="rgb(222,103,0)"/><text x="47.6013%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.09%)</title><rect x="47.2841%" y="997" width="0.0896%" height="15" fill="rgb(227,189,26)"/><text x="47.5341%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.09%)</title><rect x="47.2841%" y="981" width="0.0896%" height="15" fill="rgb(214,202,17)"/><text x="47.5341%" y="991.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.09%)</title><rect x="47.2841%" y="965" width="0.0896%" height="15" fill="rgb(229,111,3)"/><text x="47.5341%" y="975.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="47.3625%" y="949" width="0.0112%" height="15" fill="rgb(229,172,15)"/><text x="47.6125%" y="959.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="47.3625%" y="933" width="0.0112%" height="15" fill="rgb(230,224,35)"/><text x="47.6125%" y="943.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (9 samples, 0.10%)</title><rect x="47.2841%" y="1141" width="0.1008%" height="15" fill="rgb(251,141,6)"/><text x="47.5341%" y="1151.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (9 samples, 0.10%)</title><rect x="47.2841%" y="1125" width="0.1008%" height="15" fill="rgb(225,208,6)"/><text x="47.5341%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.10%)</title><rect x="47.2841%" y="1109" width="0.1008%" height="15" fill="rgb(246,181,16)"/><text x="47.5341%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.10%)</title><rect x="47.2841%" y="1093" width="0.1008%" height="15" fill="rgb(227,129,36)"/><text x="47.5341%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.10%)</title><rect x="47.2841%" y="1077" width="0.1008%" height="15" fill="rgb(248,117,24)"/><text x="47.5341%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.10%)</title><rect x="47.2841%" y="1061" width="0.1008%" height="15" fill="rgb(214,185,35)"/><text x="47.5341%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.10%)</title><rect x="47.2841%" y="1045" width="0.1008%" height="15" fill="rgb(236,150,34)"/><text x="47.5341%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.10%)</title><rect x="47.2841%" y="1029" width="0.1008%" height="15" fill="rgb(243,228,27)"/><text x="47.5341%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.10%)</title><rect x="47.2841%" y="1013" width="0.1008%" height="15" fill="rgb(245,77,44)"/><text x="47.5341%" y="1023.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="47.3737%" y="997" width="0.0112%" height="15" fill="rgb(235,214,42)"/><text x="47.6237%" y="1007.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1 samples, 0.01%)</title><rect x="47.3737%" y="981" width="0.0112%" height="15" fill="rgb(221,74,3)"/><text x="47.6237%" y="991.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.01%)</title><rect x="47.3737%" y="965" width="0.0112%" height="15" fill="rgb(206,121,29)"/><text x="47.6237%" y="975.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.01%)</title><rect x="47.3737%" y="949" width="0.0112%" height="15" fill="rgb(249,131,53)"/><text x="47.6237%" y="959.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="47.4073%" y="917" width="0.0112%" height="15" fill="rgb(236,170,29)"/><text x="47.6573%" y="927.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="47.3849%" y="1141" width="0.0448%" height="15" fill="rgb(247,96,15)"/><text x="47.6349%" y="1151.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="47.3961%" y="1125" width="0.0336%" height="15" fill="rgb(211,210,7)"/><text x="47.6461%" y="1135.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="47.4073%" y="1109" width="0.0224%" height="15" fill="rgb(240,88,50)"/><text x="47.6573%" y="1119.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="47.4073%" y="1093" width="0.0224%" height="15" fill="rgb(209,229,26)"/><text x="47.6573%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="47.4073%" y="1077" width="0.0224%" height="15" fill="rgb(210,68,23)"/><text x="47.6573%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="47.4073%" y="1061" width="0.0224%" height="15" fill="rgb(229,180,13)"/><text x="47.6573%" y="1071.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="47.4073%" y="1045" width="0.0224%" height="15" fill="rgb(236,53,44)"/><text x="47.6573%" y="1055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="47.4073%" y="1029" width="0.0224%" height="15" fill="rgb(244,214,29)"/><text x="47.6573%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="47.4073%" y="1013" width="0.0224%" height="15" fill="rgb(220,75,29)"/><text x="47.6573%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="47.4073%" y="997" width="0.0224%" height="15" fill="rgb(214,183,37)"/><text x="47.6573%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="47.4073%" y="981" width="0.0224%" height="15" fill="rgb(239,117,29)"/><text x="47.6573%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="47.4073%" y="965" width="0.0224%" height="15" fill="rgb(237,171,35)"/><text x="47.6573%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="47.4073%" y="949" width="0.0224%" height="15" fill="rgb(229,178,53)"/><text x="47.6573%" y="959.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="47.4073%" y="933" width="0.0224%" height="15" fill="rgb(210,102,19)"/><text x="47.6573%" y="943.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="47.4185%" y="917" width="0.0112%" height="15" fill="rgb(235,127,22)"/><text x="47.6685%" y="927.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="47.4185%" y="901" width="0.0112%" height="15" fill="rgb(244,31,31)"/><text x="47.6685%" y="911.50"></text></g><g><title>&lt;model::rho_types::Match as core::clone::Clone&gt;::clone (48 samples, 0.54%)</title><rect x="46.9145%" y="1173" width="0.5376%" height="15" fill="rgb(231,43,21)"/><text x="47.1645%" y="1183.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (15 samples, 0.17%)</title><rect x="47.2841%" y="1157" width="0.1680%" height="15" fill="rgb(217,131,35)"/><text x="47.5341%" y="1167.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="47.4297%" y="1141" width="0.0224%" height="15" fill="rgb(221,149,4)"/><text x="47.6797%" y="1151.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="47.4409%" y="1125" width="0.0112%" height="15" fill="rgb(232,170,28)"/><text x="47.6909%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="47.4409%" y="1109" width="0.0112%" height="15" fill="rgb(238,56,10)"/><text x="47.6909%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="47.4409%" y="1093" width="0.0112%" height="15" fill="rgb(235,196,14)"/><text x="47.6909%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="47.4409%" y="1077" width="0.0112%" height="15" fill="rgb(216,45,48)"/><text x="47.6909%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.01%)</title><rect x="47.4521%" y="1173" width="0.0112%" height="15" fill="rgb(238,213,17)"/><text x="47.7021%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.04%)</title><rect x="47.4745%" y="1125" width="0.0448%" height="15" fill="rgb(212,13,2)"/><text x="47.7245%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.04%)</title><rect x="47.4745%" y="1109" width="0.0448%" height="15" fill="rgb(240,114,20)"/><text x="47.7245%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.04%)</title><rect x="47.4745%" y="1093" width="0.0448%" height="15" fill="rgb(228,41,40)"/><text x="47.7245%" y="1103.50"></text></g><g><title>__libc_malloc (3 samples, 0.03%)</title><rect x="47.4857%" y="1077" width="0.0336%" height="15" fill="rgb(244,132,35)"/><text x="47.7357%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.08%)</title><rect x="47.4633%" y="1173" width="0.0784%" height="15" fill="rgb(253,189,4)"/><text x="47.7133%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.07%)</title><rect x="47.4745%" y="1157" width="0.0672%" height="15" fill="rgb(224,37,19)"/><text x="47.7245%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.07%)</title><rect x="47.4745%" y="1141" width="0.0672%" height="15" fill="rgb(235,223,18)"/><text x="47.7245%" y="1151.50"></text></g><g><title>core::alloc::layout::Layout::array (2 samples, 0.02%)</title><rect x="47.5193%" y="1125" width="0.0224%" height="15" fill="rgb(235,163,25)"/><text x="47.7693%" y="1135.50"></text></g><g><title>core::alloc::layout::Layout::repeat (2 samples, 0.02%)</title><rect x="47.5193%" y="1109" width="0.0224%" height="15" fill="rgb(217,145,28)"/><text x="47.7693%" y="1119.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.01%)</title><rect x="47.5305%" y="1093" width="0.0112%" height="15" fill="rgb(223,223,32)"/><text x="47.7805%" y="1103.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.01%)</title><rect x="47.5305%" y="1077" width="0.0112%" height="15" fill="rgb(227,189,39)"/><text x="47.7805%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (58 samples, 0.65%)</title><rect x="46.9033%" y="1237" width="0.6496%" height="15" fill="rgb(248,10,22)"/><text x="47.1533%" y="1247.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (58 samples, 0.65%)</title><rect x="46.9033%" y="1221" width="0.6496%" height="15" fill="rgb(248,46,39)"/><text x="47.1533%" y="1231.50"></text></g><g><title>alloc::slice::hack::to_vec (58 samples, 0.65%)</title><rect x="46.9033%" y="1205" width="0.6496%" height="15" fill="rgb(248,113,48)"/><text x="47.1533%" y="1215.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (58 samples, 0.65%)</title><rect x="46.9033%" y="1189" width="0.6496%" height="15" fill="rgb(245,16,25)"/><text x="47.1533%" y="1199.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="47.5417%" y="1173" width="0.0112%" height="15" fill="rgb(249,152,16)"/><text x="47.7917%" y="1183.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="47.5417%" y="1157" width="0.0112%" height="15" fill="rgb(250,16,1)"/><text x="47.7917%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.09%)</title><rect x="47.5529%" y="1125" width="0.0896%" height="15" fill="rgb(249,138,3)"/><text x="47.8029%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.09%)</title><rect x="47.5529%" y="1109" width="0.0896%" height="15" fill="rgb(227,71,41)"/><text x="47.8029%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.09%)</title><rect x="47.5529%" y="1093" width="0.0896%" height="15" fill="rgb(209,184,23)"/><text x="47.8029%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.09%)</title><rect x="47.5529%" y="1077" width="0.0896%" height="15" fill="rgb(223,215,31)"/><text x="47.8029%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.09%)</title><rect x="47.5529%" y="1061" width="0.0896%" height="15" fill="rgb(210,146,28)"/><text x="47.8029%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.09%)</title><rect x="47.5529%" y="1045" width="0.0896%" height="15" fill="rgb(209,183,41)"/><text x="47.8029%" y="1055.50"></text></g><g><title>__libc_malloc (8 samples, 0.09%)</title><rect x="47.5529%" y="1029" width="0.0896%" height="15" fill="rgb(209,224,45)"/><text x="47.8029%" y="1039.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.06%)</title><rect x="47.5865%" y="1013" width="0.0560%" height="15" fill="rgb(224,209,51)"/><text x="47.8365%" y="1023.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="47.6313%" y="997" width="0.0112%" height="15" fill="rgb(223,17,39)"/><text x="47.8813%" y="1007.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (67 samples, 0.75%)</title><rect x="46.9033%" y="1253" width="0.7504%" height="15" fill="rgb(234,204,37)"/><text x="47.1533%" y="1263.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.10%)</title><rect x="47.5529%" y="1237" width="0.1008%" height="15" fill="rgb(236,120,5)"/><text x="47.8029%" y="1247.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (9 samples, 0.10%)</title><rect x="47.5529%" y="1221" width="0.1008%" height="15" fill="rgb(248,97,27)"/><text x="47.8029%" y="1231.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (9 samples, 0.10%)</title><rect x="47.5529%" y="1205" width="0.1008%" height="15" fill="rgb(240,66,17)"/><text x="47.8029%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.10%)</title><rect x="47.5529%" y="1189" width="0.1008%" height="15" fill="rgb(210,79,3)"/><text x="47.8029%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.10%)</title><rect x="47.5529%" y="1173" width="0.1008%" height="15" fill="rgb(214,176,27)"/><text x="47.8029%" y="1183.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.10%)</title><rect x="47.5529%" y="1157" width="0.1008%" height="15" fill="rgb(235,185,3)"/><text x="47.8029%" y="1167.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.10%)</title><rect x="47.5529%" y="1141" width="0.1008%" height="15" fill="rgb(227,24,12)"/><text x="47.8029%" y="1151.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="47.6425%" y="1125" width="0.0112%" height="15" fill="rgb(252,169,48)"/><text x="47.8925%" y="1135.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="47.6425%" y="1109" width="0.0112%" height="15" fill="rgb(212,65,1)"/><text x="47.8925%" y="1119.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="47.6425%" y="1093" width="0.0112%" height="15" fill="rgb(242,39,24)"/><text x="47.8925%" y="1103.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (70 samples, 0.78%)</title><rect x="46.9033%" y="1269" width="0.7840%" height="15" fill="rgb(249,32,23)"/><text x="47.1533%" y="1279.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="47.6537%" y="1253" width="0.0336%" height="15" fill="rgb(251,195,23)"/><text x="47.9037%" y="1263.50"></text></g><g><title>&lt;rho_runtime::storage::TaggedContinuation as core::clone::Clone&gt;::clone (71 samples, 0.80%)</title><rect x="46.9033%" y="1301" width="0.7952%" height="15" fill="rgb(236,174,8)"/><text x="47.1533%" y="1311.50"></text></g><g><title>&lt;model::rho_types::ParWithRandom as core::clone::Clone&gt;::clone (71 samples, 0.80%)</title><rect x="46.9033%" y="1285" width="0.7952%" height="15" fill="rgb(220,197,8)"/><text x="47.1533%" y="1295.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="47.6873%" y="1269" width="0.0112%" height="15" fill="rgb(240,108,37)"/><text x="47.9373%" y="1279.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.09%)</title><rect x="47.6985%" y="1301" width="0.0896%" height="15" fill="rgb(232,176,24)"/><text x="47.9485%" y="1311.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="47.7881%" y="1285" width="0.0112%" height="15" fill="rgb(243,35,29)"/><text x="48.0381%" y="1295.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="47.7993%" y="1285" width="0.0112%" height="15" fill="rgb(210,37,18)"/><text x="48.0493%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (1 samples, 0.01%)</title><rect x="47.8105%" y="1269" width="0.0112%" height="15" fill="rgb(224,184,40)"/><text x="48.0605%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="47.8105%" y="1253" width="0.0112%" height="15" fill="rgb(236,39,29)"/><text x="48.0605%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Expr]&gt; (1 samples, 0.01%)</title><rect x="47.8105%" y="1237" width="0.0112%" height="15" fill="rgb(232,48,39)"/><text x="48.0605%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;(blake3::Hash,model::rho_types::Par)&gt; (5 samples, 0.06%)</title><rect x="47.7881%" y="1301" width="0.0560%" height="15" fill="rgb(236,34,42)"/><text x="48.0381%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (3 samples, 0.03%)</title><rect x="47.8105%" y="1285" width="0.0336%" height="15" fill="rgb(243,106,37)"/><text x="48.0605%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::GUnforgeable&gt;&gt; (2 samples, 0.02%)</title><rect x="47.8217%" y="1269" width="0.0224%" height="15" fill="rgb(218,96,6)"/><text x="48.0717%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="47.8217%" y="1253" width="0.0224%" height="15" fill="rgb(235,130,12)"/><text x="48.0717%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::GUnforgeable]&gt; (2 samples, 0.02%)</title><rect x="47.8217%" y="1237" width="0.0224%" height="15" fill="rgb(231,95,0)"/><text x="48.0717%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::GUnforgeable&gt; (2 samples, 0.02%)</title><rect x="47.8217%" y="1221" width="0.0224%" height="15" fill="rgb(228,12,23)"/><text x="48.0717%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::g_unforgeable::UnfInstance&gt;&gt; (2 samples, 0.02%)</title><rect x="47.8217%" y="1205" width="0.0224%" height="15" fill="rgb(216,12,1)"/><text x="48.0717%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::g_unforgeable::UnfInstance&gt; (2 samples, 0.02%)</title><rect x="47.8217%" y="1189" width="0.0224%" height="15" fill="rgb(219,59,3)"/><text x="48.0717%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::GPrivate&gt; (2 samples, 0.02%)</title><rect x="47.8217%" y="1173" width="0.0224%" height="15" fill="rgb(215,208,46)"/><text x="48.0717%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (2 samples, 0.02%)</title><rect x="47.8217%" y="1157" width="0.0224%" height="15" fill="rgb(254,224,29)"/><text x="48.0717%" y="1167.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="47.8217%" y="1141" width="0.0224%" height="15" fill="rgb(232,14,29)"/><text x="48.0717%" y="1151.50"></text></g><g><title>bytes::bytes::shared_drop (1 samples, 0.01%)</title><rect x="47.8329%" y="1125" width="0.0112%" height="15" fill="rgb(208,45,52)"/><text x="48.0829%" y="1135.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (1 samples, 0.01%)</title><rect x="47.8329%" y="1109" width="0.0112%" height="15" fill="rgb(234,191,28)"/><text x="48.0829%" y="1119.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (1 samples, 0.01%)</title><rect x="47.8329%" y="1093" width="0.0112%" height="15" fill="rgb(244,67,43)"/><text x="48.0829%" y="1103.50"></text></g><g><title>bytes::bytes::release_shared (1 samples, 0.01%)</title><rect x="47.8329%" y="1077" width="0.0112%" height="15" fill="rgb(236,189,24)"/><text x="48.0829%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="47.8329%" y="1061" width="0.0112%" height="15" fill="rgb(239,214,33)"/><text x="48.0829%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="47.8329%" y="1045" width="0.0112%" height="15" fill="rgb(226,176,41)"/><text x="48.0829%" y="1055.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::push (2 samples, 0.02%)</title><rect x="47.8441%" y="1301" width="0.0224%" height="15" fill="rgb(248,47,8)"/><text x="48.0941%" y="1311.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="47.8441%" y="1285" width="0.0224%" height="15" fill="rgb(218,81,44)"/><text x="48.0941%" y="1295.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="47.8441%" y="1269" width="0.0224%" height="15" fill="rgb(213,98,6)"/><text x="48.0941%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt;&gt; (4 samples, 0.04%)</title><rect x="47.8665%" y="1285" width="0.0448%" height="15" fill="rgb(222,85,22)"/><text x="48.1165%" y="1295.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="47.8665%" y="1269" width="0.0448%" height="15" fill="rgb(239,46,39)"/><text x="48.1165%" y="1279.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4 samples, 0.04%)</title><rect x="47.8665%" y="1253" width="0.0448%" height="15" fill="rgb(237,12,29)"/><text x="48.1165%" y="1263.50"></text></g><g><title>core::sync::atomic::atomic_sub (4 samples, 0.04%)</title><rect x="47.8665%" y="1237" width="0.0448%" height="15" fill="rgb(214,77,8)"/><text x="48.1165%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::oneshot::Sender&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="47.9113%" y="1285" width="0.0112%" height="15" fill="rgb(217,168,37)"/><text x="48.1613%" y="1295.50"></text></g><g><title>&lt;tokio::sync::oneshot::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="47.9113%" y="1269" width="0.0112%" height="15" fill="rgb(221,217,23)"/><text x="48.1613%" y="1279.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (7 samples, 0.08%)</title><rect x="47.9225%" y="1285" width="0.0784%" height="15" fill="rgb(243,229,36)"/><text x="48.1725%" y="1295.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send::{{closure}} (7 samples, 0.08%)</title><rect x="47.9225%" y="1269" width="0.0784%" height="15" fill="rgb(251,163,40)"/><text x="48.1725%" y="1279.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.08%)</title><rect x="47.9225%" y="1253" width="0.0784%" height="15" fill="rgb(237,222,12)"/><text x="48.1725%" y="1263.50"></text></g><g><title>tokio::sync::oneshot::State::set_complete (5 samples, 0.06%)</title><rect x="48.0009%" y="1269" width="0.0560%" height="15" fill="rgb(248,132,6)"/><text x="48.2509%" y="1279.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (5 samples, 0.06%)</title><rect x="48.0009%" y="1253" width="0.0560%" height="15" fill="rgb(227,167,50)"/><text x="48.2509%" y="1263.50"></text></g><g><title>core::sync::atomic::atomic_or (5 samples, 0.06%)</title><rect x="48.0009%" y="1237" width="0.0560%" height="15" fill="rgb(242,84,37)"/><text x="48.2509%" y="1247.50"></text></g><g><title>rho_runtime::storage::transit::Transit::produce (107 samples, 1.20%)</title><rect x="46.8809%" y="1317" width="1.1983%" height="15" fill="rgb(212,4,50)"/><text x="47.1309%" y="1327.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (19 samples, 0.21%)</title><rect x="47.8665%" y="1301" width="0.2128%" height="15" fill="rgb(230,228,32)"/><text x="48.1165%" y="1311.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::complete (7 samples, 0.08%)</title><rect x="48.0009%" y="1285" width="0.0784%" height="15" fill="rgb(248,217,23)"/><text x="48.2509%" y="1295.50"></text></g><g><title>tokio::sync::oneshot::Task::with_task (2 samples, 0.02%)</title><rect x="48.0569%" y="1269" width="0.0224%" height="15" fill="rgb(238,197,32)"/><text x="48.3069%" y="1279.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="48.0569%" y="1253" width="0.0224%" height="15" fill="rgb(236,106,1)"/><text x="48.3069%" y="1263.50"></text></g><g><title>tokio::sync::oneshot::Task::with_task::{{closure}} (2 samples, 0.02%)</title><rect x="48.0569%" y="1237" width="0.0224%" height="15" fill="rgb(219,228,13)"/><text x="48.3069%" y="1247.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.02%)</title><rect x="48.0569%" y="1221" width="0.0224%" height="15" fill="rgb(238,30,35)"/><text x="48.3069%" y="1231.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (2 samples, 0.02%)</title><rect x="48.0569%" y="1205" width="0.0224%" height="15" fill="rgb(236,70,23)"/><text x="48.3069%" y="1215.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (2 samples, 0.02%)</title><rect x="48.0569%" y="1189" width="0.0224%" height="15" fill="rgb(249,104,48)"/><text x="48.3069%" y="1199.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_ref (2 samples, 0.02%)</title><rect x="48.0569%" y="1173" width="0.0224%" height="15" fill="rgb(254,117,50)"/><text x="48.3069%" y="1183.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::schedule (2 samples, 0.02%)</title><rect x="48.0569%" y="1157" width="0.0224%" height="15" fill="rgb(223,152,4)"/><text x="48.3069%" y="1167.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="48.0569%" y="1141" width="0.0224%" height="15" fill="rgb(245,6,2)"/><text x="48.3069%" y="1151.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::schedule::{{closure}} (2 samples, 0.02%)</title><rect x="48.0569%" y="1125" width="0.0224%" height="15" fill="rgb(249,150,24)"/><text x="48.3069%" y="1135.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::schedule (2 samples, 0.02%)</title><rect x="48.0569%" y="1109" width="0.0224%" height="15" fill="rgb(228,185,42)"/><text x="48.3069%" y="1119.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (1 samples, 0.01%)</title><rect x="48.0681%" y="1093" width="0.0112%" height="15" fill="rgb(226,39,33)"/><text x="48.3181%" y="1103.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="48.0681%" y="1077" width="0.0112%" height="15" fill="rgb(221,166,19)"/><text x="48.3181%" y="1087.50"></text></g><g><title>[libc-2.31.so] (16 samples, 0.18%)</title><rect x="48.0793%" y="1269" width="0.1792%" height="15" fill="rgb(209,109,2)"/><text x="48.3293%" y="1279.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (25 samples, 0.28%)</title><rect x="48.0793%" y="1301" width="0.2800%" height="15" fill="rgb(252,216,26)"/><text x="48.3293%" y="1311.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send::{{closure}} (25 samples, 0.28%)</title><rect x="48.0793%" y="1285" width="0.2800%" height="15" fill="rgb(227,173,36)"/><text x="48.3293%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;rho_runtime::storage::transit::Transit&gt;&gt; (9 samples, 0.10%)</title><rect x="48.2585%" y="1269" width="0.1008%" height="15" fill="rgb(209,90,7)"/><text x="48.5085%" y="1279.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,830 samples, 20.50%)</title><rect x="28.6034%" y="1349" width="20.4950%" height="15" fill="rgb(250,194,11)"/><text x="28.8534%" y="1359.50">&lt;core::future::from_generator::G..</text></g><g><title>rho_runtime::storage::coordinator::Coordinator::handle_produce::{{closure}} (198 samples, 2.22%)</title><rect x="46.8809%" y="1333" width="2.2175%" height="15" fill="rgb(220,72,50)"/><text x="47.1309%" y="1343.50">r..</text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (91 samples, 1.02%)</title><rect x="48.0793%" y="1317" width="1.0192%" height="15" fill="rgb(222,106,48)"/><text x="48.3293%" y="1327.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::complete (66 samples, 0.74%)</title><rect x="48.3593%" y="1301" width="0.7392%" height="15" fill="rgb(216,220,45)"/><text x="48.6093%" y="1311.50"></text></g><g><title>tokio::sync::oneshot::State::set_complete (66 samples, 0.74%)</title><rect x="48.3593%" y="1285" width="0.7392%" height="15" fill="rgb(234,112,18)"/><text x="48.6093%" y="1295.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (66 samples, 0.74%)</title><rect x="48.3593%" y="1269" width="0.7392%" height="15" fill="rgb(206,179,9)"/><text x="48.6093%" y="1279.50"></text></g><g><title>core::sync::atomic::atomic_or (66 samples, 0.74%)</title><rect x="48.3593%" y="1253" width="0.7392%" height="15" fill="rgb(215,115,40)"/><text x="48.6093%" y="1263.50"></text></g><g><title>&lt;model::locally_free::ExprInstanceLocallyFree as model::locally_free::HasLocallyFree&lt;model::rho_types::expr::ExprInstance&gt;&gt;::connective_used (1 samples, 0.01%)</title><rect x="49.0984%" y="1349" width="0.0112%" height="15" fill="rgb(222,69,34)"/><text x="49.3484%" y="1359.50"></text></g><g><title>&lt;model::locally_free::ExprInstanceLocallyFree as model::locally_free::HasLocallyFree&lt;model::rho_types::expr::ExprInstance&gt;&gt;::locally_free (1 samples, 0.01%)</title><rect x="49.1096%" y="1349" width="0.0112%" height="15" fill="rgb(209,161,10)"/><text x="49.3596%" y="1359.50"></text></g><g><title>&lt;model::ordering::ScoreTreeIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="49.1208%" y="1349" width="0.0224%" height="15" fill="rgb(217,6,38)"/><text x="49.3708%" y="1359.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="49.1432%" y="1349" width="0.0448%" height="15" fill="rgb(229,229,48)"/><text x="49.3932%" y="1359.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash::traverse (1 samples, 0.01%)</title><rect x="49.1880%" y="1349" width="0.0112%" height="15" fill="rgb(225,21,28)"/><text x="49.4380%" y="1359.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="49.1992%" y="709" width="0.0112%" height="15" fill="rgb(206,33,13)"/><text x="49.4492%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="49.1992%" y="693" width="0.0112%" height="15" fill="rgb(242,178,17)"/><text x="49.4492%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="49.1992%" y="677" width="0.0112%" height="15" fill="rgb(220,162,5)"/><text x="49.4492%" y="687.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="49.2328%" y="677" width="0.0112%" height="15" fill="rgb(210,33,43)"/><text x="49.4828%" y="687.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="49.2216%" y="693" width="0.0336%" height="15" fill="rgb(216,116,54)"/><text x="49.4716%" y="703.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="49.2440%" y="677" width="0.0112%" height="15" fill="rgb(249,92,24)"/><text x="49.4940%" y="687.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (6 samples, 0.07%)</title><rect x="49.2104%" y="709" width="0.0672%" height="15" fill="rgb(231,189,14)"/><text x="49.4604%" y="719.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="49.2552%" y="693" width="0.0224%" height="15" fill="rgb(230,8,41)"/><text x="49.5052%" y="703.50"></text></g><g><title>__libc_malloc (5 samples, 0.06%)</title><rect x="49.2888%" y="613" width="0.0560%" height="15" fill="rgb(249,7,27)"/><text x="49.5388%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.08%)</title><rect x="49.2776%" y="709" width="0.0784%" height="15" fill="rgb(232,86,5)"/><text x="49.5276%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.08%)</title><rect x="49.2776%" y="693" width="0.0784%" height="15" fill="rgb(224,175,18)"/><text x="49.5276%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.08%)</title><rect x="49.2776%" y="677" width="0.0784%" height="15" fill="rgb(220,129,12)"/><text x="49.5276%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.08%)</title><rect x="49.2776%" y="661" width="0.0784%" height="15" fill="rgb(210,19,36)"/><text x="49.5276%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.08%)</title><rect x="49.2776%" y="645" width="0.0784%" height="15" fill="rgb(219,96,14)"/><text x="49.5276%" y="655.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.08%)</title><rect x="49.2776%" y="629" width="0.0784%" height="15" fill="rgb(249,106,1)"/><text x="49.5276%" y="639.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="49.3448%" y="613" width="0.0112%" height="15" fill="rgb(249,155,20)"/><text x="49.5948%" y="623.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="49.3448%" y="597" width="0.0112%" height="15" fill="rgb(244,168,9)"/><text x="49.5948%" y="607.50"></text></g><g><title>&lt;rho_runtime::storage::TaggedContinuation as core::clone::Clone&gt;::clone (19 samples, 0.21%)</title><rect x="49.1992%" y="1349" width="0.2128%" height="15" fill="rgb(216,23,50)"/><text x="49.4492%" y="1359.50"></text></g><g><title>&lt;model::rho_types::ParWithRandom as core::clone::Clone&gt;::clone (19 samples, 0.21%)</title><rect x="49.1992%" y="1333" width="0.2128%" height="15" fill="rgb(224,219,20)"/><text x="49.4492%" y="1343.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (19 samples, 0.21%)</title><rect x="49.1992%" y="1317" width="0.2128%" height="15" fill="rgb(222,156,15)"/><text x="49.4492%" y="1327.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (19 samples, 0.21%)</title><rect x="49.1992%" y="1301" width="0.2128%" height="15" fill="rgb(231,97,17)"/><text x="49.4492%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 0.21%)</title><rect x="49.1992%" y="1285" width="0.2128%" height="15" fill="rgb(218,70,48)"/><text x="49.4492%" y="1295.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19 samples, 0.21%)</title><rect x="49.1992%" y="1269" width="0.2128%" height="15" fill="rgb(212,196,52)"/><text x="49.4492%" y="1279.50"></text></g><g><title>alloc::slice::hack::to_vec (19 samples, 0.21%)</title><rect x="49.1992%" y="1253" width="0.2128%" height="15" fill="rgb(243,203,18)"/><text x="49.4492%" y="1263.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19 samples, 0.21%)</title><rect x="49.1992%" y="1237" width="0.2128%" height="15" fill="rgb(252,125,41)"/><text x="49.4492%" y="1247.50"></text></g><g><title>&lt;model::rho_types::Match as core::clone::Clone&gt;::clone (19 samples, 0.21%)</title><rect x="49.1992%" y="1221" width="0.2128%" height="15" fill="rgb(223,180,33)"/><text x="49.4492%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 0.21%)</title><rect x="49.1992%" y="1205" width="0.2128%" height="15" fill="rgb(254,159,46)"/><text x="49.4492%" y="1215.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19 samples, 0.21%)</title><rect x="49.1992%" y="1189" width="0.2128%" height="15" fill="rgb(254,38,10)"/><text x="49.4492%" y="1199.50"></text></g><g><title>alloc::slice::hack::to_vec (19 samples, 0.21%)</title><rect x="49.1992%" y="1173" width="0.2128%" height="15" fill="rgb(208,217,32)"/><text x="49.4492%" y="1183.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19 samples, 0.21%)</title><rect x="49.1992%" y="1157" width="0.2128%" height="15" fill="rgb(221,120,13)"/><text x="49.4492%" y="1167.50"></text></g><g><title>&lt;model::rho_types::MatchCase as core::clone::Clone&gt;::clone (19 samples, 0.21%)</title><rect x="49.1992%" y="1141" width="0.2128%" height="15" fill="rgb(246,54,52)"/><text x="49.4492%" y="1151.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (19 samples, 0.21%)</title><rect x="49.1992%" y="1125" width="0.2128%" height="15" fill="rgb(242,34,25)"/><text x="49.4492%" y="1135.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (19 samples, 0.21%)</title><rect x="49.1992%" y="1109" width="0.2128%" height="15" fill="rgb(247,209,9)"/><text x="49.4492%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 0.21%)</title><rect x="49.1992%" y="1093" width="0.2128%" height="15" fill="rgb(228,71,26)"/><text x="49.4492%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19 samples, 0.21%)</title><rect x="49.1992%" y="1077" width="0.2128%" height="15" fill="rgb(222,145,49)"/><text x="49.4492%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (19 samples, 0.21%)</title><rect x="49.1992%" y="1061" width="0.2128%" height="15" fill="rgb(218,121,17)"/><text x="49.4492%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19 samples, 0.21%)</title><rect x="49.1992%" y="1045" width="0.2128%" height="15" fill="rgb(244,50,7)"/><text x="49.4492%" y="1055.50"></text></g><g><title>&lt;model::rho_types::Send as core::clone::Clone&gt;::clone (19 samples, 0.21%)</title><rect x="49.1992%" y="1029" width="0.2128%" height="15" fill="rgb(246,229,37)"/><text x="49.4492%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 0.21%)</title><rect x="49.1992%" y="1013" width="0.2128%" height="15" fill="rgb(225,18,5)"/><text x="49.4492%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19 samples, 0.21%)</title><rect x="49.1992%" y="997" width="0.2128%" height="15" fill="rgb(213,204,8)"/><text x="49.4492%" y="1007.50"></text></g><g><title>alloc::slice::hack::to_vec (19 samples, 0.21%)</title><rect x="49.1992%" y="981" width="0.2128%" height="15" fill="rgb(238,103,6)"/><text x="49.4492%" y="991.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19 samples, 0.21%)</title><rect x="49.1992%" y="965" width="0.2128%" height="15" fill="rgb(222,25,35)"/><text x="49.4492%" y="975.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (19 samples, 0.21%)</title><rect x="49.1992%" y="949" width="0.2128%" height="15" fill="rgb(213,203,35)"/><text x="49.4492%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 0.21%)</title><rect x="49.1992%" y="933" width="0.2128%" height="15" fill="rgb(221,79,53)"/><text x="49.4492%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19 samples, 0.21%)</title><rect x="49.1992%" y="917" width="0.2128%" height="15" fill="rgb(243,200,35)"/><text x="49.4492%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (19 samples, 0.21%)</title><rect x="49.1992%" y="901" width="0.2128%" height="15" fill="rgb(248,60,25)"/><text x="49.4492%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19 samples, 0.21%)</title><rect x="49.1992%" y="885" width="0.2128%" height="15" fill="rgb(227,53,46)"/><text x="49.4492%" y="895.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (19 samples, 0.21%)</title><rect x="49.1992%" y="869" width="0.2128%" height="15" fill="rgb(216,120,32)"/><text x="49.4492%" y="879.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (19 samples, 0.21%)</title><rect x="49.1992%" y="853" width="0.2128%" height="15" fill="rgb(220,134,1)"/><text x="49.4492%" y="863.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (19 samples, 0.21%)</title><rect x="49.1992%" y="837" width="0.2128%" height="15" fill="rgb(237,168,5)"/><text x="49.4492%" y="847.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (19 samples, 0.21%)</title><rect x="49.1992%" y="821" width="0.2128%" height="15" fill="rgb(231,100,33)"/><text x="49.4492%" y="831.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (19 samples, 0.21%)</title><rect x="49.1992%" y="805" width="0.2128%" height="15" fill="rgb(236,177,47)"/><text x="49.4492%" y="815.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (19 samples, 0.21%)</title><rect x="49.1992%" y="789" width="0.2128%" height="15" fill="rgb(235,7,49)"/><text x="49.4492%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 0.21%)</title><rect x="49.1992%" y="773" width="0.2128%" height="15" fill="rgb(232,119,22)"/><text x="49.4492%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19 samples, 0.21%)</title><rect x="49.1992%" y="757" width="0.2128%" height="15" fill="rgb(254,73,53)"/><text x="49.4492%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (19 samples, 0.21%)</title><rect x="49.1992%" y="741" width="0.2128%" height="15" fill="rgb(251,35,20)"/><text x="49.4492%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19 samples, 0.21%)</title><rect x="49.1992%" y="725" width="0.2128%" height="15" fill="rgb(241,119,20)"/><text x="49.4492%" y="735.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (5 samples, 0.06%)</title><rect x="49.3560%" y="709" width="0.0560%" height="15" fill="rgb(207,102,14)"/><text x="49.6060%" y="719.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="49.3896%" y="693" width="0.0224%" height="15" fill="rgb(248,201,50)"/><text x="49.6396%" y="703.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (2 samples, 0.02%)</title><rect x="49.4120%" y="1349" width="0.0224%" height="15" fill="rgb(222,185,44)"/><text x="49.6620%" y="1359.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="49.4344%" y="1349" width="0.0336%" height="15" fill="rgb(218,107,18)"/><text x="49.6844%" y="1359.50"></text></g><g><title>__rust_probestack (1 samples, 0.01%)</title><rect x="49.4680%" y="789" width="0.0112%" height="15" fill="rgb(237,177,39)"/><text x="49.7180%" y="799.50"></text></g><g><title>&lt;rho_runtime::interpreter::reduce::environment::Env&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="49.4792%" y="757" width="0.0336%" height="15" fill="rgb(246,69,6)"/><text x="49.7292%" y="767.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="49.4792%" y="741" width="0.0336%" height="15" fill="rgb(234,208,37)"/><text x="49.7292%" y="751.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::convert::From&lt;&amp;[&lt;A as smallvec::Array&gt;::Item]&gt;&gt;::from (3 samples, 0.03%)</title><rect x="49.4792%" y="725" width="0.0336%" height="15" fill="rgb(225,4,6)"/><text x="49.7292%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.03%)</title><rect x="49.4792%" y="709" width="0.0336%" height="15" fill="rgb(233,45,0)"/><text x="49.7292%" y="719.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (3 samples, 0.03%)</title><rect x="49.4792%" y="693" width="0.0336%" height="15" fill="rgb(226,136,5)"/><text x="49.7292%" y="703.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (3 samples, 0.03%)</title><rect x="49.4792%" y="677" width="0.0336%" height="15" fill="rgb(211,91,47)"/><text x="49.7292%" y="687.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="49.4904%" y="661" width="0.0224%" height="15" fill="rgb(242,88,51)"/><text x="49.7404%" y="671.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="49.4904%" y="645" width="0.0224%" height="15" fill="rgb(230,91,28)"/><text x="49.7404%" y="655.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.07%)</title><rect x="49.4680%" y="1349" width="0.0672%" height="15" fill="rgb(254,186,29)"/><text x="49.7180%" y="1359.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (6 samples, 0.07%)</title><rect x="49.4680%" y="1333" width="0.0672%" height="15" fill="rgb(238,6,4)"/><text x="49.7180%" y="1343.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (6 samples, 0.07%)</title><rect x="49.4680%" y="1317" width="0.0672%" height="15" fill="rgb(221,151,16)"/><text x="49.7180%" y="1327.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (6 samples, 0.07%)</title><rect x="49.4680%" y="1301" width="0.0672%" height="15" fill="rgb(251,143,52)"/><text x="49.7180%" y="1311.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (6 samples, 0.07%)</title><rect x="49.4680%" y="1285" width="0.0672%" height="15" fill="rgb(206,90,15)"/><text x="49.7180%" y="1295.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.07%)</title><rect x="49.4680%" y="1269" width="0.0672%" height="15" fill="rgb(218,35,8)"/><text x="49.7180%" y="1279.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (6 samples, 0.07%)</title><rect x="49.4680%" y="1253" width="0.0672%" height="15" fill="rgb(239,215,6)"/><text x="49.7180%" y="1263.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (6 samples, 0.07%)</title><rect x="49.4680%" y="1237" width="0.0672%" height="15" fill="rgb(245,116,39)"/><text x="49.7180%" y="1247.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (6 samples, 0.07%)</title><rect x="49.4680%" y="1221" width="0.0672%" height="15" fill="rgb(242,65,28)"/><text x="49.7180%" y="1231.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (6 samples, 0.07%)</title><rect x="49.4680%" y="1205" width="0.0672%" height="15" fill="rgb(252,132,53)"/><text x="49.7180%" y="1215.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (6 samples, 0.07%)</title><rect x="49.4680%" y="1189" width="0.0672%" height="15" fill="rgb(224,159,50)"/><text x="49.7180%" y="1199.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (6 samples, 0.07%)</title><rect x="49.4680%" y="1173" width="0.0672%" height="15" fill="rgb(224,93,4)"/><text x="49.7180%" y="1183.50"></text></g><g><title>tokio::coop::budget (6 samples, 0.07%)</title><rect x="49.4680%" y="1157" width="0.0672%" height="15" fill="rgb(208,81,34)"/><text x="49.7180%" y="1167.50"></text></g><g><title>tokio::coop::with_budget (6 samples, 0.07%)</title><rect x="49.4680%" y="1141" width="0.0672%" height="15" fill="rgb(233,92,54)"/><text x="49.7180%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.07%)</title><rect x="49.4680%" y="1125" width="0.0672%" height="15" fill="rgb(237,21,14)"/><text x="49.7180%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.07%)</title><rect x="49.4680%" y="1109" width="0.0672%" height="15" fill="rgb(249,128,51)"/><text x="49.7180%" y="1119.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (6 samples, 0.07%)</title><rect x="49.4680%" y="1093" width="0.0672%" height="15" fill="rgb(223,129,24)"/><text x="49.7180%" y="1103.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (6 samples, 0.07%)</title><rect x="49.4680%" y="1077" width="0.0672%" height="15" fill="rgb(231,168,25)"/><text x="49.7180%" y="1087.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (6 samples, 0.07%)</title><rect x="49.4680%" y="1061" width="0.0672%" height="15" fill="rgb(224,39,20)"/><text x="49.7180%" y="1071.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (6 samples, 0.07%)</title><rect x="49.4680%" y="1045" width="0.0672%" height="15" fill="rgb(225,152,53)"/><text x="49.7180%" y="1055.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (6 samples, 0.07%)</title><rect x="49.4680%" y="1029" width="0.0672%" height="15" fill="rgb(252,17,24)"/><text x="49.7180%" y="1039.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (6 samples, 0.07%)</title><rect x="49.4680%" y="1013" width="0.0672%" height="15" fill="rgb(250,114,30)"/><text x="49.7180%" y="1023.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (6 samples, 0.07%)</title><rect x="49.4680%" y="997" width="0.0672%" height="15" fill="rgb(229,5,4)"/><text x="49.7180%" y="1007.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.07%)</title><rect x="49.4680%" y="981" width="0.0672%" height="15" fill="rgb(225,176,49)"/><text x="49.7180%" y="991.50"></text></g><g><title>std::panicking::try (6 samples, 0.07%)</title><rect x="49.4680%" y="965" width="0.0672%" height="15" fill="rgb(224,221,49)"/><text x="49.7180%" y="975.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.07%)</title><rect x="49.4680%" y="949" width="0.0672%" height="15" fill="rgb(253,169,27)"/><text x="49.7180%" y="959.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.07%)</title><rect x="49.4680%" y="933" width="0.0672%" height="15" fill="rgb(211,206,16)"/><text x="49.7180%" y="943.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (6 samples, 0.07%)</title><rect x="49.4680%" y="917" width="0.0672%" height="15" fill="rgb(244,87,35)"/><text x="49.7180%" y="927.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (6 samples, 0.07%)</title><rect x="49.4680%" y="901" width="0.0672%" height="15" fill="rgb(246,28,10)"/><text x="49.7180%" y="911.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (6 samples, 0.07%)</title><rect x="49.4680%" y="885" width="0.0672%" height="15" fill="rgb(229,12,44)"/><text x="49.7180%" y="895.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (6 samples, 0.07%)</title><rect x="49.4680%" y="869" width="0.0672%" height="15" fill="rgb(210,145,37)"/><text x="49.7180%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.07%)</title><rect x="49.4680%" y="853" width="0.0672%" height="15" fill="rgb(227,112,52)"/><text x="49.7180%" y="863.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation::{{closure}} (6 samples, 0.07%)</title><rect x="49.4680%" y="837" width="0.0672%" height="15" fill="rgb(238,155,34)"/><text x="49.7180%" y="847.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (6 samples, 0.07%)</title><rect x="49.4680%" y="821" width="0.0672%" height="15" fill="rgb(239,226,36)"/><text x="49.7180%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.07%)</title><rect x="49.4680%" y="805" width="0.0672%" height="15" fill="rgb(230,16,23)"/><text x="49.7180%" y="815.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate::{{closure}} (5 samples, 0.06%)</title><rect x="49.4792%" y="789" width="0.0560%" height="15" fill="rgb(236,171,36)"/><text x="49.7292%" y="799.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation (5 samples, 0.06%)</title><rect x="49.4792%" y="773" width="0.0560%" height="15" fill="rgb(221,22,14)"/><text x="49.7292%" y="783.50"></text></g><g><title>crossbeam_queue::seg_queue::SegQueue&lt;T&gt;::push (2 samples, 0.02%)</title><rect x="49.5128%" y="757" width="0.0224%" height="15" fill="rgb(242,43,11)"/><text x="49.7628%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.01%)</title><rect x="49.5240%" y="741" width="0.0112%" height="15" fill="rgb(232,69,23)"/><text x="49.7740%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="49.5240%" y="725" width="0.0112%" height="15" fill="rgb(216,180,54)"/><text x="49.7740%" y="735.50"></text></g><g><title>&lt;tokio::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="49.5352%" y="1349" width="0.0112%" height="15" fill="rgb(216,5,24)"/><text x="49.7852%" y="1359.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="49.5464%" y="1349" width="0.0112%" height="15" fill="rgb(225,89,9)"/><text x="49.7964%" y="1359.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="49.5576%" y="1349" width="0.0112%" height="15" fill="rgb(243,75,33)"/><text x="49.8076%" y="1359.50"></text></g><g><title>[libc-2.31.so] (24 samples, 0.27%)</title><rect x="49.5800%" y="1333" width="0.2688%" height="15" fill="rgb(247,141,45)"/><text x="49.8300%" y="1343.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="49.8488%" y="1333" width="0.0112%" height="15" fill="rgb(232,177,36)"/><text x="50.0988%" y="1343.50"></text></g><g><title>[libc-2.31.so] (12 samples, 0.13%)</title><rect x="49.8600%" y="1285" width="0.1344%" height="15" fill="rgb(219,125,36)"/><text x="50.1100%" y="1295.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.03%)</title><rect x="49.9944%" y="1285" width="0.0336%" height="15" fill="rgb(227,94,9)"/><text x="50.2444%" y="1295.50"></text></g><g><title>core::mem::drop (3 samples, 0.03%)</title><rect x="49.9944%" y="1269" width="0.0336%" height="15" fill="rgb(240,34,52)"/><text x="50.2444%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;tokio::sync::oneshot::Inner&lt;rho_runtime::storage::transit::Transit&gt;&gt;&gt; (3 samples, 0.03%)</title><rect x="49.9944%" y="1253" width="0.0336%" height="15" fill="rgb(216,45,12)"/><text x="50.2444%" y="1263.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="49.9944%" y="1237" width="0.0336%" height="15" fill="rgb(246,21,19)"/><text x="50.2444%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.03%)</title><rect x="49.9944%" y="1221" width="0.0336%" height="15" fill="rgb(213,98,42)"/><text x="50.2444%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.03%)</title><rect x="49.9944%" y="1205" width="0.0336%" height="15" fill="rgb(250,136,47)"/><text x="50.2444%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;rho_runtime::storage::transit::Transit&gt;&gt;&gt;&gt; (26 samples, 0.29%)</title><rect x="49.8600%" y="1333" width="0.2912%" height="15" fill="rgb(251,124,27)"/><text x="50.1100%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;rho_runtime::storage::transit::Transit&gt;&gt;&gt; (26 samples, 0.29%)</title><rect x="49.8600%" y="1317" width="0.2912%" height="15" fill="rgb(229,180,14)"/><text x="50.1100%" y="1327.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.29%)</title><rect x="49.8600%" y="1301" width="0.2912%" height="15" fill="rgb(245,216,25)"/><text x="50.1100%" y="1311.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (11 samples, 0.12%)</title><rect x="50.0280%" y="1285" width="0.1232%" height="15" fill="rgb(251,43,5)"/><text x="50.2780%" y="1295.50"></text></g><g><title>core::sync::atomic::atomic_sub (11 samples, 0.12%)</title><rect x="50.0280%" y="1269" width="0.1232%" height="15" fill="rgb(250,128,24)"/><text x="50.2780%" y="1279.50"></text></g><g><title>&lt;tokio::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="50.2296%" y="1317" width="0.0112%" height="15" fill="rgb(217,117,27)"/><text x="50.4796%" y="1327.50"></text></g><g><title>[libc-2.31.so] (13 samples, 0.15%)</title><rect x="50.2408%" y="1317" width="0.1456%" height="15" fill="rgb(245,147,4)"/><text x="50.4908%" y="1327.50"></text></g><g><title>tokio::coop::poll_proceed (4 samples, 0.04%)</title><rect x="50.3864%" y="1317" width="0.0448%" height="15" fill="rgb(242,201,35)"/><text x="50.6364%" y="1327.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.04%)</title><rect x="50.3864%" y="1301" width="0.0448%" height="15" fill="rgb(218,181,1)"/><text x="50.6364%" y="1311.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.04%)</title><rect x="50.3864%" y="1285" width="0.0448%" height="15" fill="rgb(222,6,29)"/><text x="50.6364%" y="1295.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (4 samples, 0.04%)</title><rect x="50.3864%" y="1269" width="0.0448%" height="15" fill="rgb(208,186,3)"/><text x="50.6364%" y="1279.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (3 samples, 0.03%)</title><rect x="50.3976%" y="1253" width="0.0336%" height="15" fill="rgb(216,36,26)"/><text x="50.6476%" y="1263.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (3 samples, 0.03%)</title><rect x="50.3976%" y="1237" width="0.0336%" height="15" fill="rgb(248,201,23)"/><text x="50.6476%" y="1247.50"></text></g><g><title>core::mem::replace (3 samples, 0.03%)</title><rect x="50.3976%" y="1221" width="0.0336%" height="15" fill="rgb(251,170,31)"/><text x="50.6476%" y="1231.50"></text></g><g><title>core::mem::swap (3 samples, 0.03%)</title><rect x="50.3976%" y="1205" width="0.0336%" height="15" fill="rgb(207,110,25)"/><text x="50.6476%" y="1215.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (3 samples, 0.03%)</title><rect x="50.3976%" y="1189" width="0.0336%" height="15" fill="rgb(250,54,15)"/><text x="50.6476%" y="1199.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.03%)</title><rect x="50.3976%" y="1173" width="0.0336%" height="15" fill="rgb(227,68,33)"/><text x="50.6476%" y="1183.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="50.4312%" y="1237" width="0.0112%" height="15" fill="rgb(238,34,41)"/><text x="50.6812%" y="1247.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (108 samples, 1.21%)</title><rect x="49.5688%" y="1349" width="1.2095%" height="15" fill="rgb(220,11,15)"/><text x="49.8188%" y="1359.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::poll_recv (56 samples, 0.63%)</title><rect x="50.1512%" y="1333" width="0.6272%" height="15" fill="rgb(246,111,35)"/><text x="50.4012%" y="1343.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::consume_value (31 samples, 0.35%)</title><rect x="50.4312%" y="1317" width="0.3472%" height="15" fill="rgb(209,88,53)"/><text x="50.6812%" y="1327.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (31 samples, 0.35%)</title><rect x="50.4312%" y="1301" width="0.3472%" height="15" fill="rgb(231,185,47)"/><text x="50.6812%" y="1311.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::consume_value::{{closure}} (31 samples, 0.35%)</title><rect x="50.4312%" y="1285" width="0.3472%" height="15" fill="rgb(233,154,1)"/><text x="50.6812%" y="1295.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (31 samples, 0.35%)</title><rect x="50.4312%" y="1269" width="0.3472%" height="15" fill="rgb(225,15,46)"/><text x="50.6812%" y="1279.50"></text></g><g><title>core::mem::take (31 samples, 0.35%)</title><rect x="50.4312%" y="1253" width="0.3472%" height="15" fill="rgb(211,135,41)"/><text x="50.6812%" y="1263.50"></text></g><g><title>core::mem::replace (30 samples, 0.34%)</title><rect x="50.4424%" y="1237" width="0.3360%" height="15" fill="rgb(208,54,0)"/><text x="50.6924%" y="1247.50"></text></g><g><title>core::mem::swap (30 samples, 0.34%)</title><rect x="50.4424%" y="1221" width="0.3360%" height="15" fill="rgb(244,136,14)"/><text x="50.6924%" y="1231.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (30 samples, 0.34%)</title><rect x="50.4424%" y="1205" width="0.3360%" height="15" fill="rgb(241,56,14)"/><text x="50.6924%" y="1215.50"></text></g><g><title>core::ptr::swap_nonoverlapping (30 samples, 0.34%)</title><rect x="50.4424%" y="1189" width="0.3360%" height="15" fill="rgb(205,80,24)"/><text x="50.6924%" y="1199.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (30 samples, 0.34%)</title><rect x="50.4424%" y="1173" width="0.3360%" height="15" fill="rgb(220,57,4)"/><text x="50.6924%" y="1183.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (25 samples, 0.28%)</title><rect x="50.4984%" y="1157" width="0.2800%" height="15" fill="rgb(226,193,50)"/><text x="50.7484%" y="1167.50"></text></g><g><title>[libc-2.31.so] (43 samples, 0.48%)</title><rect x="50.7784%" y="1349" width="0.4816%" height="15" fill="rgb(231,168,22)"/><text x="51.0284%" y="1359.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="51.2487%" y="1333" width="0.0112%" height="15" fill="rgb(254,215,14)"/><text x="51.4987%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="51.2487%" y="1317" width="0.0112%" height="15" fill="rgb(211,115,16)"/><text x="51.4987%" y="1327.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="51.2487%" y="1301" width="0.0112%" height="15" fill="rgb(236,210,16)"/><text x="51.4987%" y="1311.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="51.2487%" y="1285" width="0.0112%" height="15" fill="rgb(221,94,12)"/><text x="51.4987%" y="1295.50"></text></g><g><title>__clock_gettime (1 samples, 0.01%)</title><rect x="51.2599%" y="1349" width="0.0112%" height="15" fill="rgb(235,218,49)"/><text x="51.5099%" y="1359.50"></text></g><g><title>__libc_malloc (6 samples, 0.07%)</title><rect x="51.2711%" y="1349" width="0.0672%" height="15" fill="rgb(217,114,14)"/><text x="51.5211%" y="1359.50"></text></g><g><title>__rdl_alloc (5 samples, 0.06%)</title><rect x="51.3383%" y="1349" width="0.0560%" height="15" fill="rgb(216,145,22)"/><text x="51.5883%" y="1359.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.03%)</title><rect x="51.3607%" y="1333" width="0.0336%" height="15" fill="rgb(217,112,39)"/><text x="51.6107%" y="1343.50"></text></g><g><title>__rust_probestack (2 samples, 0.02%)</title><rect x="51.3943%" y="1349" width="0.0224%" height="15" fill="rgb(225,85,32)"/><text x="51.6443%" y="1359.50"></text></g><g><title>__sched_yield (1 samples, 0.01%)</title><rect x="51.4167%" y="1349" width="0.0112%" height="15" fill="rgb(245,209,47)"/><text x="51.6667%" y="1359.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="51.4279%" y="1349" width="0.0112%" height="15" fill="rgb(218,220,15)"/><text x="51.6779%" y="1359.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="51.4391%" y="1349" width="0.0224%" height="15" fill="rgb(222,202,31)"/><text x="51.6891%" y="1359.50"></text></g><g><title>alloc::slice::merge_sort (4 samples, 0.04%)</title><rect x="51.4615%" y="1349" width="0.0448%" height="15" fill="rgb(243,203,4)"/><text x="51.7115%" y="1359.50"></text></g><g><title>blake3::ChunkState::update (2 samples, 0.02%)</title><rect x="51.5063%" y="1349" width="0.0224%" height="15" fill="rgb(237,92,17)"/><text x="51.7563%" y="1359.50"></text></g><g><title>blake3::ChunkState::fill_buf (1 samples, 0.01%)</title><rect x="51.5175%" y="1333" width="0.0112%" height="15" fill="rgb(231,119,7)"/><text x="51.7675%" y="1343.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.01%)</title><rect x="51.5175%" y="1317" width="0.0112%" height="15" fill="rgb(237,82,41)"/><text x="51.7675%" y="1327.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="51.5175%" y="1301" width="0.0112%" height="15" fill="rgb(226,81,48)"/><text x="51.7675%" y="1311.50"></text></g><g><title>blake3::Hasher::merge_cv_stack (5 samples, 0.06%)</title><rect x="51.5287%" y="1349" width="0.0560%" height="15" fill="rgb(234,70,51)"/><text x="51.7787%" y="1359.50"></text></g><g><title>core::num::&lt;impl u64&gt;::count_ones (5 samples, 0.06%)</title><rect x="51.5287%" y="1333" width="0.0560%" height="15" fill="rgb(251,86,4)"/><text x="51.7787%" y="1343.50"></text></g><g><title>blake3::Hasher::update (5 samples, 0.06%)</title><rect x="51.5847%" y="1349" width="0.0560%" height="15" fill="rgb(244,144,28)"/><text x="51.8347%" y="1359.50"></text></g><g><title>blake3_compress_in_place_avx512 (11 samples, 0.12%)</title><rect x="51.6407%" y="1349" width="0.1232%" height="15" fill="rgb(232,161,39)"/><text x="51.8907%" y="1359.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="51.7639%" y="1349" width="0.0224%" height="15" fill="rgb(247,34,51)"/><text x="52.0139%" y="1359.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (1 samples, 0.01%)</title><rect x="51.7863%" y="1349" width="0.0112%" height="15" fill="rgb(225,132,2)"/><text x="52.0363%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::expr::ExprInstance&gt;&gt; (2 samples, 0.02%)</title><rect x="51.7975%" y="1349" width="0.0224%" height="15" fill="rgb(209,159,44)"/><text x="52.0475%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Expr&gt; (1 samples, 0.01%)</title><rect x="51.8199%" y="1349" width="0.0112%" height="15" fill="rgb(251,214,1)"/><text x="52.0699%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (3 samples, 0.03%)</title><rect x="51.8311%" y="1349" width="0.0336%" height="15" fill="rgb(247,84,47)"/><text x="52.0811%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (2 samples, 0.02%)</title><rect x="51.8423%" y="1333" width="0.0224%" height="15" fill="rgb(240,111,43)"/><text x="52.0923%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (2 samples, 0.02%)</title><rect x="51.8423%" y="1317" width="0.0224%" height="15" fill="rgb(215,214,35)"/><text x="52.0923%" y="1327.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="51.8423%" y="1301" width="0.0224%" height="15" fill="rgb(248,207,23)"/><text x="52.0923%" y="1311.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="51.8423%" y="1285" width="0.0224%" height="15" fill="rgb(214,186,4)"/><text x="52.0923%" y="1295.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="51.8423%" y="1269" width="0.0224%" height="15" fill="rgb(220,133,22)"/><text x="52.0923%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Par&gt;&gt; (1 samples, 0.01%)</title><rect x="51.8647%" y="1333" width="0.0112%" height="15" fill="rgb(239,134,19)"/><text x="52.1147%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="51.8647%" y="1317" width="0.0112%" height="15" fill="rgb(250,140,9)"/><text x="52.1147%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Par]&gt; (1 samples, 0.01%)</title><rect x="51.8647%" y="1301" width="0.0112%" height="15" fill="rgb(225,59,14)"/><text x="52.1147%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Send&gt; (2 samples, 0.02%)</title><rect x="51.8647%" y="1349" width="0.0224%" height="15" fill="rgb(214,152,51)"/><text x="52.1147%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::bitset::BitSet&gt;&gt; (1 samples, 0.01%)</title><rect x="51.8759%" y="1333" width="0.0112%" height="15" fill="rgb(251,227,43)"/><text x="52.1259%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::bitset::BitSet&gt; (1 samples, 0.01%)</title><rect x="51.8759%" y="1317" width="0.0112%" height="15" fill="rgb(241,96,17)"/><text x="52.1259%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;bit_vec::BitVec&gt; (1 samples, 0.01%)</title><rect x="51.8759%" y="1301" width="0.0112%" height="15" fill="rgb(234,198,43)"/><text x="52.1259%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u32&gt;&gt; (1 samples, 0.01%)</title><rect x="51.8759%" y="1285" width="0.0112%" height="15" fill="rgb(220,108,29)"/><text x="52.1259%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u32&gt;&gt; (1 samples, 0.01%)</title><rect x="51.8759%" y="1269" width="0.0112%" height="15" fill="rgb(226,163,33)"/><text x="52.1259%" y="1279.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="51.8759%" y="1253" width="0.0112%" height="15" fill="rgb(205,194,45)"/><text x="52.1259%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="51.8759%" y="1237" width="0.0112%" height="15" fill="rgb(206,143,44)"/><text x="52.1259%" y="1247.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="51.8759%" y="1221" width="0.0112%" height="15" fill="rgb(236,136,36)"/><text x="52.1259%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::expr::ExprInstance&gt; (1 samples, 0.01%)</title><rect x="51.8871%" y="1349" width="0.0112%" height="15" fill="rgb(249,172,42)"/><text x="52.1371%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Send&gt;::{{closure}}&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="51.8983%" y="1349" width="0.0224%" height="15" fill="rgb(216,139,23)"/><text x="52.1483%" y="1359.50"></text></g><g><title>model::rho_types::Par::append_expr (4 samples, 0.04%)</title><rect x="51.9207%" y="1349" width="0.0448%" height="15" fill="rgb(207,166,20)"/><text x="52.1707%" y="1359.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (3 samples, 0.03%)</title><rect x="51.9655%" y="1349" width="0.0336%" height="15" fill="rgb(210,209,22)"/><text x="52.2155%" y="1359.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (3 samples, 0.03%)</title><rect x="51.9991%" y="1349" width="0.0336%" height="15" fill="rgb(232,118,20)"/><text x="52.2491%" y="1359.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="52.0663%" y="1333" width="0.0224%" height="15" fill="rgb(238,113,42)"/><text x="52.3163%" y="1343.50"></text></g><g><title>core::ptr::read (2 samples, 0.02%)</title><rect x="52.0663%" y="1317" width="0.0224%" height="15" fill="rgb(231,42,5)"/><text x="52.3163%" y="1327.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="52.0663%" y="1301" width="0.0224%" height="15" fill="rgb(243,166,24)"/><text x="52.3163%" y="1311.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.10%)</title><rect x="52.0887%" y="1317" width="0.1008%" height="15" fill="rgb(237,226,12)"/><text x="52.3387%" y="1327.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (10 samples, 0.11%)</title><rect x="52.0887%" y="1333" width="0.1120%" height="15" fill="rgb(229,133,24)"/><text x="52.3387%" y="1343.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::len (1 samples, 0.01%)</title><rect x="52.1895%" y="1317" width="0.0112%" height="15" fill="rgb(238,33,43)"/><text x="52.4395%" y="1327.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple (1 samples, 0.01%)</title><rect x="52.1895%" y="1301" width="0.0112%" height="15" fill="rgb(227,59,38)"/><text x="52.4395%" y="1311.50"></text></g><g><title>[libc-2.31.so] (20 samples, 0.22%)</title><rect x="52.2007%" y="1333" width="0.2240%" height="15" fill="rgb(230,97,0)"/><text x="52.4507%" y="1343.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="52.4359%" y="1253" width="0.0224%" height="15" fill="rgb(250,173,50)"/><text x="52.6859%" y="1263.50"></text></g><g><title>core::ptr::read (2 samples, 0.02%)</title><rect x="52.4359%" y="1237" width="0.0224%" height="15" fill="rgb(240,15,50)"/><text x="52.6859%" y="1247.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="52.4359%" y="1221" width="0.0224%" height="15" fill="rgb(221,93,22)"/><text x="52.6859%" y="1231.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="52.4583%" y="1253" width="0.0112%" height="15" fill="rgb(245,180,53)"/><text x="52.7083%" y="1263.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.06%)</title><rect x="52.4247%" y="1285" width="0.0560%" height="15" fill="rgb(231,88,51)"/><text x="52.6747%" y="1295.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.06%)</title><rect x="52.4247%" y="1269" width="0.0560%" height="15" fill="rgb(240,58,21)"/><text x="52.6747%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::into_iter::IntoIter&lt;model::rho_types::Par&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="52.4695%" y="1253" width="0.0112%" height="15" fill="rgb(237,21,10)"/><text x="52.7195%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;model::rho_types::Par&gt;&gt; (1 samples, 0.01%)</title><rect x="52.4695%" y="1237" width="0.0112%" height="15" fill="rgb(218,43,11)"/><text x="52.7195%" y="1247.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="52.4695%" y="1221" width="0.0112%" height="15" fill="rgb(218,221,29)"/><text x="52.7195%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;model::rho_types::Par,alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="52.4695%" y="1205" width="0.0112%" height="15" fill="rgb(214,118,42)"/><text x="52.7195%" y="1215.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="52.4695%" y="1189" width="0.0112%" height="15" fill="rgb(251,200,26)"/><text x="52.7195%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Par&gt;&gt; (1 samples, 0.01%)</title><rect x="52.4695%" y="1173" width="0.0112%" height="15" fill="rgb(237,101,39)"/><text x="52.7195%" y="1183.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="52.4695%" y="1157" width="0.0112%" height="15" fill="rgb(251,117,11)"/><text x="52.7195%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="52.4695%" y="1141" width="0.0112%" height="15" fill="rgb(216,223,23)"/><text x="52.7195%" y="1151.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="52.4695%" y="1125" width="0.0112%" height="15" fill="rgb(251,54,12)"/><text x="52.7195%" y="1135.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="52.4695%" y="1109" width="0.0112%" height="15" fill="rgb(254,176,54)"/><text x="52.7195%" y="1119.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.04%)</title><rect x="52.4807%" y="1285" width="0.0448%" height="15" fill="rgb(210,32,8)"/><text x="52.7307%" y="1295.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (10 samples, 0.11%)</title><rect x="52.4247%" y="1301" width="0.1120%" height="15" fill="rgb(235,52,38)"/><text x="52.6747%" y="1311.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="52.5255%" y="1285" width="0.0112%" height="15" fill="rgb(231,4,44)"/><text x="52.7755%" y="1295.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="52.5255%" y="1269" width="0.0112%" height="15" fill="rgb(249,2,32)"/><text x="52.7755%" y="1279.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (12 samples, 0.13%)</title><rect x="52.4247%" y="1333" width="0.1344%" height="15" fill="rgb(224,65,26)"/><text x="52.6747%" y="1343.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (12 samples, 0.13%)</title><rect x="52.4247%" y="1317" width="0.1344%" height="15" fill="rgb(250,73,40)"/><text x="52.6747%" y="1327.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="52.5367%" y="1301" width="0.0224%" height="15" fill="rgb(253,177,16)"/><text x="52.7867%" y="1311.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="52.5591%" y="1269" width="0.0224%" height="15" fill="rgb(217,32,34)"/><text x="52.8091%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;rho_runtime::interpreter::reduce::environment::Env&gt; (3 samples, 0.03%)</title><rect x="52.5591%" y="1333" width="0.0336%" height="15" fill="rgb(212,7,10)"/><text x="52.8091%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[model::rho_types::Par: 6]&gt;&gt; (3 samples, 0.03%)</title><rect x="52.5591%" y="1317" width="0.0336%" height="15" fill="rgb(245,89,8)"/><text x="52.8091%" y="1327.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="52.5591%" y="1301" width="0.0336%" height="15" fill="rgb(237,16,53)"/><text x="52.8091%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Par]&gt; (3 samples, 0.03%)</title><rect x="52.5591%" y="1285" width="0.0336%" height="15" fill="rgb(250,204,30)"/><text x="52.8091%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (1 samples, 0.01%)</title><rect x="52.5815%" y="1269" width="0.0112%" height="15" fill="rgb(208,77,27)"/><text x="52.8315%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (1 samples, 0.01%)</title><rect x="52.5815%" y="1253" width="0.0112%" height="15" fill="rgb(250,204,28)"/><text x="52.8315%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (1 samples, 0.01%)</title><rect x="52.5815%" y="1237" width="0.0112%" height="15" fill="rgb(244,63,21)"/><text x="52.8315%" y="1247.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="52.5815%" y="1221" width="0.0112%" height="15" fill="rgb(236,85,44)"/><text x="52.8315%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="52.5815%" y="1205" width="0.0112%" height="15" fill="rgb(215,98,4)"/><text x="52.8315%" y="1215.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="52.5815%" y="1189" width="0.0112%" height="15" fill="rgb(235,38,11)"/><text x="52.8315%" y="1199.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="52.5815%" y="1173" width="0.0112%" height="15" fill="rgb(254,186,25)"/><text x="52.8315%" y="1183.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.07%)</title><rect x="52.6039%" y="1317" width="0.0672%" height="15" fill="rgb(225,55,31)"/><text x="52.8539%" y="1327.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (6 samples, 0.07%)</title><rect x="52.6039%" y="1301" width="0.0672%" height="15" fill="rgb(211,15,21)"/><text x="52.8539%" y="1311.50"></text></g><g><title>core::sync::atomic::atomic_add (6 samples, 0.07%)</title><rect x="52.6039%" y="1285" width="0.0672%" height="15" fill="rgb(215,187,41)"/><text x="52.8539%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="52.7495%" y="1125" width="0.0224%" height="15" fill="rgb(248,69,32)"/><text x="52.9995%" y="1135.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="52.7943%" y="1077" width="0.0224%" height="15" fill="rgb(252,102,52)"/><text x="53.0443%" y="1087.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="52.8055%" y="1061" width="0.0112%" height="15" fill="rgb(253,140,32)"/><text x="53.0555%" y="1071.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="52.8055%" y="1045" width="0.0112%" height="15" fill="rgb(216,56,42)"/><text x="53.0555%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.01%)</title><rect x="52.8167%" y="1077" width="0.0112%" height="15" fill="rgb(216,184,14)"/><text x="53.0667%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (27 samples, 0.30%)</title><rect x="52.8503%" y="1029" width="0.3024%" height="15" fill="rgb(237,187,27)"/><text x="53.1003%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (27 samples, 0.30%)</title><rect x="52.8503%" y="1013" width="0.3024%" height="15" fill="rgb(219,65,3)"/><text x="53.1003%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (26 samples, 0.29%)</title><rect x="52.8615%" y="997" width="0.2912%" height="15" fill="rgb(245,83,25)"/><text x="53.1115%" y="1007.50"></text></g><g><title>__libc_malloc (26 samples, 0.29%)</title><rect x="52.8615%" y="981" width="0.2912%" height="15" fill="rgb(214,205,45)"/><text x="53.1115%" y="991.50"></text></g><g><title>[libc-2.31.so] (19 samples, 0.21%)</title><rect x="52.9399%" y="965" width="0.2128%" height="15" fill="rgb(241,20,18)"/><text x="53.1899%" y="975.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.04%)</title><rect x="53.1079%" y="949" width="0.0448%" height="15" fill="rgb(232,163,23)"/><text x="53.3579%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (30 samples, 0.34%)</title><rect x="52.8279%" y="1077" width="0.3360%" height="15" fill="rgb(214,5,46)"/><text x="53.0779%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (28 samples, 0.31%)</title><rect x="52.8503%" y="1061" width="0.3136%" height="15" fill="rgb(229,78,17)"/><text x="53.1003%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (28 samples, 0.31%)</title><rect x="52.8503%" y="1045" width="0.3136%" height="15" fill="rgb(248,89,10)"/><text x="53.1003%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (1 samples, 0.01%)</title><rect x="53.1526%" y="1029" width="0.0112%" height="15" fill="rgb(248,54,15)"/><text x="53.4026%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.52%)</title><rect x="52.6823%" y="1221" width="0.5152%" height="15" fill="rgb(223,116,6)"/><text x="52.9323%" y="1231.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (46 samples, 0.52%)</title><rect x="52.6823%" y="1205" width="0.5152%" height="15" fill="rgb(205,125,38)"/><text x="52.9323%" y="1215.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (46 samples, 0.52%)</title><rect x="52.6823%" y="1189" width="0.5152%" height="15" fill="rgb(251,78,38)"/><text x="52.9323%" y="1199.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (43 samples, 0.48%)</title><rect x="52.7159%" y="1173" width="0.4816%" height="15" fill="rgb(253,78,28)"/><text x="52.9659%" y="1183.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (43 samples, 0.48%)</title><rect x="52.7159%" y="1157" width="0.4816%" height="15" fill="rgb(209,120,3)"/><text x="52.9659%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (40 samples, 0.45%)</title><rect x="52.7495%" y="1141" width="0.4480%" height="15" fill="rgb(238,229,9)"/><text x="52.9995%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (38 samples, 0.43%)</title><rect x="52.7719%" y="1125" width="0.4256%" height="15" fill="rgb(253,159,18)"/><text x="53.0219%" y="1135.50"></text></g><g><title>alloc::slice::hack::to_vec (38 samples, 0.43%)</title><rect x="52.7719%" y="1109" width="0.4256%" height="15" fill="rgb(244,42,34)"/><text x="53.0219%" y="1119.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (38 samples, 0.43%)</title><rect x="52.7719%" y="1093" width="0.4256%" height="15" fill="rgb(224,8,7)"/><text x="53.0219%" y="1103.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3 samples, 0.03%)</title><rect x="53.1638%" y="1077" width="0.0336%" height="15" fill="rgb(210,201,45)"/><text x="53.4138%" y="1087.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="53.1638%" y="1061" width="0.0336%" height="15" fill="rgb(252,185,21)"/><text x="53.4138%" y="1071.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::clone::Clone&gt;::clone (50 samples, 0.56%)</title><rect x="52.6711%" y="1301" width="0.5600%" height="15" fill="rgb(223,131,1)"/><text x="52.9211%" y="1311.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::convert::From&lt;&amp;[&lt;A as smallvec::Array&gt;::Item]&gt;&gt;::from (50 samples, 0.56%)</title><rect x="52.6711%" y="1285" width="0.5600%" height="15" fill="rgb(245,141,16)"/><text x="52.9211%" y="1295.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (50 samples, 0.56%)</title><rect x="52.6711%" y="1269" width="0.5600%" height="15" fill="rgb(229,55,45)"/><text x="52.9211%" y="1279.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (50 samples, 0.56%)</title><rect x="52.6711%" y="1253" width="0.5600%" height="15" fill="rgb(208,92,15)"/><text x="52.9211%" y="1263.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (49 samples, 0.55%)</title><rect x="52.6823%" y="1237" width="0.5488%" height="15" fill="rgb(234,185,47)"/><text x="52.9323%" y="1247.50"></text></g><g><title>core::ptr::write (3 samples, 0.03%)</title><rect x="53.1974%" y="1221" width="0.0336%" height="15" fill="rgb(253,104,50)"/><text x="53.4474%" y="1231.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="53.1974%" y="1205" width="0.0336%" height="15" fill="rgb(205,70,7)"/><text x="53.4474%" y="1215.50"></text></g><g><title>&lt;rho_runtime::interpreter::reduce::environment::Env&lt;T&gt; as core::clone::Clone&gt;::clone (54 samples, 0.60%)</title><rect x="52.6711%" y="1317" width="0.6048%" height="15" fill="rgb(240,178,43)"/><text x="52.9211%" y="1327.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.04%)</title><rect x="53.2310%" y="1301" width="0.0448%" height="15" fill="rgb(214,112,2)"/><text x="53.4810%" y="1311.50"></text></g><g><title>core::future::from_generator (8 samples, 0.09%)</title><rect x="53.2758%" y="1317" width="0.0896%" height="15" fill="rgb(206,46,17)"/><text x="53.5258%" y="1327.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.09%)</title><rect x="53.2758%" y="1301" width="0.0896%" height="15" fill="rgb(225,220,16)"/><text x="53.5258%" y="1311.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="53.3766%" y="1301" width="0.0112%" height="15" fill="rgb(238,65,40)"/><text x="53.6266%" y="1311.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="53.3766%" y="1285" width="0.0112%" height="15" fill="rgb(230,151,21)"/><text x="53.6266%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="53.3766%" y="1269" width="0.0112%" height="15" fill="rgb(218,58,49)"/><text x="53.6266%" y="1279.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="53.3766%" y="1253" width="0.0112%" height="15" fill="rgb(219,179,14)"/><text x="53.6266%" y="1263.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="53.3766%" y="1237" width="0.0112%" height="15" fill="rgb(223,72,1)"/><text x="53.6266%" y="1247.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="53.3766%" y="1221" width="0.0112%" height="15" fill="rgb(238,126,10)"/><text x="53.6266%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (2 samples, 0.02%)</title><rect x="53.3878%" y="1301" width="0.0224%" height="15" fill="rgb(224,206,38)"/><text x="53.6378%" y="1311.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.02%)</title><rect x="53.3878%" y="1285" width="0.0224%" height="15" fill="rgb(212,201,54)"/><text x="53.6378%" y="1295.50"></text></g><g><title>crossbeam_queue::seg_queue::SegQueue&lt;T&gt;::push (6 samples, 0.07%)</title><rect x="53.3654%" y="1317" width="0.0672%" height="15" fill="rgb(218,154,48)"/><text x="53.6154%" y="1327.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (2 samples, 0.02%)</title><rect x="53.4102%" y="1301" width="0.0224%" height="15" fill="rgb(232,93,24)"/><text x="53.6602%" y="1311.50"></text></g><g><title>core::sync::atomic::atomic_or (2 samples, 0.02%)</title><rect x="53.4102%" y="1285" width="0.0224%" height="15" fill="rgb(245,30,21)"/><text x="53.6602%" y="1295.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.04%)</title><rect x="53.4438%" y="1301" width="0.0448%" height="15" fill="rgb(242,148,29)"/><text x="53.6938%" y="1311.50"></text></g><g><title>tokio::runtime::context::spawn_handle (9 samples, 0.10%)</title><rect x="53.4886%" y="1301" width="0.1008%" height="15" fill="rgb(244,153,54)"/><text x="53.7386%" y="1311.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (9 samples, 0.10%)</title><rect x="53.4886%" y="1285" width="0.1008%" height="15" fill="rgb(252,87,22)"/><text x="53.7386%" y="1295.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9 samples, 0.10%)</title><rect x="53.4886%" y="1269" width="0.1008%" height="15" fill="rgb(210,51,29)"/><text x="53.7386%" y="1279.50"></text></g><g><title>tokio::runtime::context::spawn_handle::{{closure}} (9 samples, 0.10%)</title><rect x="53.4886%" y="1253" width="0.1008%" height="15" fill="rgb(242,136,47)"/><text x="53.7386%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (9 samples, 0.10%)</title><rect x="53.4886%" y="1237" width="0.1008%" height="15" fill="rgb(238,68,4)"/><text x="53.7386%" y="1247.50"></text></g><g><title>tokio::runtime::context::spawn_handle::{{closure}}::{{closure}} (9 samples, 0.10%)</title><rect x="53.4886%" y="1221" width="0.1008%" height="15" fill="rgb(242,161,30)"/><text x="53.7386%" y="1231.50"></text></g><g><title>&lt;tokio::runtime::spawner::Spawner as core::clone::Clone&gt;::clone (9 samples, 0.10%)</title><rect x="53.4886%" y="1205" width="0.1008%" height="15" fill="rgb(218,58,44)"/><text x="53.7386%" y="1215.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.09%)</title><rect x="53.6006%" y="1237" width="0.0896%" height="15" fill="rgb(252,125,32)"/><text x="53.8506%" y="1247.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.08%)</title><rect x="53.6902%" y="1221" width="0.0784%" height="15" fill="rgb(219,178,0)"/><text x="53.9402%" y="1231.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.06%)</title><rect x="53.7686%" y="1205" width="0.0560%" height="15" fill="rgb(213,152,7)"/><text x="54.0186%" y="1215.50"></text></g><g><title>tokio::runtime::task::joinable (27 samples, 0.30%)</title><rect x="53.6006%" y="1269" width="0.3024%" height="15" fill="rgb(249,109,34)"/><text x="53.8506%" y="1279.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (27 samples, 0.30%)</title><rect x="53.6006%" y="1253" width="0.3024%" height="15" fill="rgb(232,96,21)"/><text x="53.8506%" y="1263.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (19 samples, 0.21%)</title><rect x="53.6902%" y="1237" width="0.2128%" height="15" fill="rgb(228,27,39)"/><text x="53.9402%" y="1247.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (12 samples, 0.13%)</title><rect x="53.7686%" y="1221" width="0.1344%" height="15" fill="rgb(211,182,52)"/><text x="54.0186%" y="1231.50"></text></g><g><title>alloc::alloc::exchange_malloc (7 samples, 0.08%)</title><rect x="53.8246%" y="1205" width="0.0784%" height="15" fill="rgb(234,178,38)"/><text x="54.0746%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.08%)</title><rect x="53.8246%" y="1189" width="0.0784%" height="15" fill="rgb(221,111,3)"/><text x="54.0746%" y="1199.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.08%)</title><rect x="53.8246%" y="1173" width="0.0784%" height="15" fill="rgb(228,175,21)"/><text x="54.0746%" y="1183.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.08%)</title><rect x="53.8246%" y="1157" width="0.0784%" height="15" fill="rgb(228,174,43)"/><text x="54.0746%" y="1167.50"></text></g><g><title>__libc_malloc (7 samples, 0.08%)</title><rect x="53.8246%" y="1141" width="0.0784%" height="15" fill="rgb(211,191,0)"/><text x="54.0746%" y="1151.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="53.8694%" y="1125" width="0.0336%" height="15" fill="rgb(253,117,3)"/><text x="54.1194%" y="1135.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation (122 samples, 1.37%)</title><rect x="52.5927%" y="1333" width="1.3663%" height="15" fill="rgb(241,127,19)"/><text x="52.8427%" y="1343.50"></text></g><g><title>tokio::task::spawn::spawn (47 samples, 0.53%)</title><rect x="53.4326%" y="1317" width="0.5264%" height="15" fill="rgb(218,103,12)"/><text x="53.6826%" y="1327.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (33 samples, 0.37%)</title><rect x="53.5894%" y="1301" width="0.3696%" height="15" fill="rgb(236,214,43)"/><text x="53.8394%" y="1311.50"></text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (32 samples, 0.36%)</title><rect x="53.6006%" y="1285" width="0.3584%" height="15" fill="rgb(244,144,19)"/><text x="53.8506%" y="1295.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (5 samples, 0.06%)</title><rect x="53.9030%" y="1269" width="0.0560%" height="15" fill="rgb(246,188,10)"/><text x="54.1530%" y="1279.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (5 samples, 0.06%)</title><rect x="53.9030%" y="1253" width="0.0560%" height="15" fill="rgb(212,193,33)"/><text x="54.1530%" y="1263.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (1 samples, 0.01%)</title><rect x="53.9478%" y="1237" width="0.0112%" height="15" fill="rgb(241,51,29)"/><text x="54.1978%" y="1247.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::handle_comm_events (176 samples, 1.97%)</title><rect x="52.0327%" y="1349" width="1.9711%" height="15" fill="rgb(211,58,19)"/><text x="52.2827%" y="1359.50">r..</text></g><g><title>rho_runtime::interpreter::reduce::environment::Env&lt;T&gt;::create (4 samples, 0.04%)</title><rect x="53.9590%" y="1333" width="0.0448%" height="15" fill="rgb(229,111,26)"/><text x="54.2090%" y="1343.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.04%)</title><rect x="53.9590%" y="1317" width="0.0448%" height="15" fill="rgb(213,115,40)"/><text x="54.2090%" y="1327.50"></text></g><g><title>&lt;rho_runtime::interpreter::reduce::environment::Env&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="54.0038%" y="1333" width="0.0112%" height="15" fill="rgb(209,56,44)"/><text x="54.2538%" y="1343.50"></text></g><g><title>[libc-2.31.so] (20 samples, 0.22%)</title><rect x="54.0150%" y="1237" width="0.2240%" height="15" fill="rgb(230,108,32)"/><text x="54.2650%" y="1247.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.12%)</title><rect x="54.2390%" y="1221" width="0.1232%" height="15" fill="rgb(216,165,31)"/><text x="54.4890%" y="1231.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation (46 samples, 0.52%)</title><rect x="54.0038%" y="1349" width="0.5152%" height="15" fill="rgb(218,122,21)"/><text x="54.2538%" y="1359.50"></text></g><g><title>tokio::task::spawn::spawn (45 samples, 0.50%)</title><rect x="54.0150%" y="1333" width="0.5040%" height="15" fill="rgb(223,224,47)"/><text x="54.2650%" y="1343.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (45 samples, 0.50%)</title><rect x="54.0150%" y="1317" width="0.5040%" height="15" fill="rgb(238,102,44)"/><text x="54.2650%" y="1327.50"></text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (45 samples, 0.50%)</title><rect x="54.0150%" y="1301" width="0.5040%" height="15" fill="rgb(236,46,40)"/><text x="54.2650%" y="1311.50"></text></g><g><title>tokio::runtime::task::joinable (45 samples, 0.50%)</title><rect x="54.0150%" y="1285" width="0.5040%" height="15" fill="rgb(247,202,50)"/><text x="54.2650%" y="1295.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (45 samples, 0.50%)</title><rect x="54.0150%" y="1269" width="0.5040%" height="15" fill="rgb(209,99,20)"/><text x="54.2650%" y="1279.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (45 samples, 0.50%)</title><rect x="54.0150%" y="1253" width="0.5040%" height="15" fill="rgb(252,27,34)"/><text x="54.2650%" y="1263.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (25 samples, 0.28%)</title><rect x="54.2390%" y="1237" width="0.2800%" height="15" fill="rgb(215,206,23)"/><text x="54.4890%" y="1247.50"></text></g><g><title>alloc::alloc::exchange_malloc (14 samples, 0.16%)</title><rect x="54.3622%" y="1221" width="0.1568%" height="15" fill="rgb(212,135,36)"/><text x="54.6122%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.16%)</title><rect x="54.3622%" y="1205" width="0.1568%" height="15" fill="rgb(240,189,1)"/><text x="54.6122%" y="1215.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.16%)</title><rect x="54.3622%" y="1189" width="0.1568%" height="15" fill="rgb(242,56,20)"/><text x="54.6122%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.16%)</title><rect x="54.3622%" y="1173" width="0.1568%" height="15" fill="rgb(247,132,33)"/><text x="54.6122%" y="1183.50"></text></g><g><title>__libc_malloc (14 samples, 0.16%)</title><rect x="54.3622%" y="1157" width="0.1568%" height="15" fill="rgb(208,149,11)"/><text x="54.6122%" y="1167.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.04%)</title><rect x="54.4742%" y="1141" width="0.0448%" height="15" fill="rgb(211,33,11)"/><text x="54.7242%" y="1151.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="54.5078%" y="1125" width="0.0112%" height="15" fill="rgb(221,29,38)"/><text x="54.7578%" y="1135.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate::{{closure}}::relop (1 samples, 0.01%)</title><rect x="54.5190%" y="1349" width="0.0112%" height="15" fill="rgb(206,182,49)"/><text x="54.7690%" y="1359.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute_no_sort (1 samples, 0.01%)</title><rect x="54.5302%" y="1349" width="0.0112%" height="15" fill="rgb(216,140,1)"/><text x="54.7802%" y="1359.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::substitute_expressions_in_par (2 samples, 0.02%)</title><rect x="54.5414%" y="1349" width="0.0224%" height="15" fill="rgb(232,57,40)"/><text x="54.7914%" y="1359.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="54.6198%" y="1013" width="0.0224%" height="15" fill="rgb(224,186,18)"/><text x="54.8698%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="54.6310%" y="997" width="0.0112%" height="15" fill="rgb(215,121,11)"/><text x="54.8810%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="54.6310%" y="981" width="0.0112%" height="15" fill="rgb(245,147,10)"/><text x="54.8810%" y="991.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="54.6758%" y="997" width="0.0336%" height="15" fill="rgb(238,153,13)"/><text x="54.9258%" y="1007.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="54.6870%" y="981" width="0.0224%" height="15" fill="rgb(233,108,0)"/><text x="54.9370%" y="991.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (8 samples, 0.09%)</title><rect x="54.6422%" y="1013" width="0.0896%" height="15" fill="rgb(212,157,17)"/><text x="54.8922%" y="1023.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="54.7094%" y="997" width="0.0224%" height="15" fill="rgb(225,213,38)"/><text x="54.9594%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="54.7990%" y="901" width="0.0112%" height="15" fill="rgb(248,16,11)"/><text x="55.0490%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="54.8438%" y="853" width="0.0112%" height="15" fill="rgb(241,33,4)"/><text x="55.0938%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="54.8438%" y="837" width="0.0112%" height="15" fill="rgb(222,26,43)"/><text x="55.0938%" y="847.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="54.8438%" y="821" width="0.0112%" height="15" fill="rgb(243,29,36)"/><text x="55.0938%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="54.9782%" y="741" width="0.0112%" height="15" fill="rgb(241,9,27)"/><text x="55.2282%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="55.0006%" y="693" width="0.0224%" height="15" fill="rgb(205,117,26)"/><text x="55.2506%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.01%)</title><rect x="55.0230%" y="693" width="0.0112%" height="15" fill="rgb(209,80,39)"/><text x="55.2730%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="55.0454%" y="645" width="0.0112%" height="15" fill="rgb(239,155,6)"/><text x="55.2954%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="55.0454%" y="629" width="0.0112%" height="15" fill="rgb(212,104,12)"/><text x="55.2954%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.09%)</title><rect x="54.9782%" y="757" width="0.0896%" height="15" fill="rgb(234,204,3)"/><text x="55.2282%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.08%)</title><rect x="54.9894%" y="741" width="0.0784%" height="15" fill="rgb(251,218,7)"/><text x="55.2394%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.08%)</title><rect x="54.9894%" y="725" width="0.0784%" height="15" fill="rgb(221,81,32)"/><text x="55.2394%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.08%)</title><rect x="54.9894%" y="709" width="0.0784%" height="15" fill="rgb(214,152,26)"/><text x="55.2394%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="55.0342%" y="693" width="0.0336%" height="15" fill="rgb(223,22,3)"/><text x="55.2842%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="55.0454%" y="677" width="0.0224%" height="15" fill="rgb(207,174,7)"/><text x="55.2954%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="55.0454%" y="661" width="0.0224%" height="15" fill="rgb(224,19,52)"/><text x="55.2954%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (1 samples, 0.01%)</title><rect x="55.0566%" y="645" width="0.0112%" height="15" fill="rgb(228,24,14)"/><text x="55.3066%" y="655.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (24 samples, 0.27%)</title><rect x="54.8662%" y="773" width="0.2688%" height="15" fill="rgb(230,153,43)"/><text x="55.1162%" y="783.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.07%)</title><rect x="55.0678%" y="757" width="0.0672%" height="15" fill="rgb(231,106,12)"/><text x="55.3178%" y="767.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="55.1126%" y="741" width="0.0224%" height="15" fill="rgb(215,92,2)"/><text x="55.3626%" y="751.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="55.1126%" y="725" width="0.0224%" height="15" fill="rgb(249,143,25)"/><text x="55.3626%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="55.1126%" y="709" width="0.0224%" height="15" fill="rgb(252,7,35)"/><text x="55.3626%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="55.1126%" y="693" width="0.0224%" height="15" fill="rgb(216,69,40)"/><text x="55.3626%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="55.1126%" y="677" width="0.0224%" height="15" fill="rgb(240,36,33)"/><text x="55.3626%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="55.1126%" y="661" width="0.0224%" height="15" fill="rgb(231,128,14)"/><text x="55.3626%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="55.1126%" y="645" width="0.0224%" height="15" fill="rgb(245,143,14)"/><text x="55.3626%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="55.1126%" y="629" width="0.0224%" height="15" fill="rgb(222,130,28)"/><text x="55.3626%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="55.1126%" y="613" width="0.0224%" height="15" fill="rgb(212,10,48)"/><text x="55.3626%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="55.1126%" y="597" width="0.0224%" height="15" fill="rgb(254,118,45)"/><text x="55.3626%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="55.1126%" y="581" width="0.0224%" height="15" fill="rgb(228,6,45)"/><text x="55.3626%" y="591.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="55.1126%" y="565" width="0.0224%" height="15" fill="rgb(241,18,35)"/><text x="55.3626%" y="575.50"></text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="55.1126%" y="549" width="0.0224%" height="15" fill="rgb(227,214,53)"/><text x="55.3626%" y="559.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (26 samples, 0.29%)</title><rect x="54.8662%" y="789" width="0.2912%" height="15" fill="rgb(224,107,51)"/><text x="55.1162%" y="799.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="55.1350%" y="773" width="0.0224%" height="15" fill="rgb(248,60,28)"/><text x="55.3850%" y="783.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (28 samples, 0.31%)</title><rect x="54.8662%" y="821" width="0.3136%" height="15" fill="rgb(249,101,23)"/><text x="55.1162%" y="831.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (28 samples, 0.31%)</title><rect x="54.8662%" y="805" width="0.3136%" height="15" fill="rgb(228,51,19)"/><text x="55.1162%" y="815.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="55.1574%" y="789" width="0.0224%" height="15" fill="rgb(213,20,6)"/><text x="55.4074%" y="799.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (32 samples, 0.36%)</title><rect x="54.8550%" y="837" width="0.3584%" height="15" fill="rgb(212,124,10)"/><text x="55.1050%" y="847.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="55.1798%" y="821" width="0.0336%" height="15" fill="rgb(248,3,40)"/><text x="55.4298%" y="831.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (36 samples, 0.40%)</title><rect x="54.8550%" y="853" width="0.4032%" height="15" fill="rgb(223,178,23)"/><text x="55.1050%" y="863.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.04%)</title><rect x="55.2133%" y="837" width="0.0448%" height="15" fill="rgb(240,132,45)"/><text x="55.4633%" y="847.50"></text></g><g><title>__libc_malloc (8 samples, 0.09%)</title><rect x="55.2805%" y="757" width="0.0896%" height="15" fill="rgb(245,164,36)"/><text x="55.5305%" y="767.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.06%)</title><rect x="55.3141%" y="741" width="0.0560%" height="15" fill="rgb(231,188,53)"/><text x="55.5641%" y="751.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="55.3589%" y="725" width="0.0112%" height="15" fill="rgb(237,198,39)"/><text x="55.6089%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.12%)</title><rect x="55.2581%" y="853" width="0.1232%" height="15" fill="rgb(223,120,35)"/><text x="55.5081%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (11 samples, 0.12%)</title><rect x="55.2581%" y="837" width="0.1232%" height="15" fill="rgb(253,107,49)"/><text x="55.5081%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.12%)</title><rect x="55.2581%" y="821" width="0.1232%" height="15" fill="rgb(216,44,31)"/><text x="55.5081%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.10%)</title><rect x="55.2805%" y="805" width="0.1008%" height="15" fill="rgb(253,87,21)"/><text x="55.5305%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.10%)</title><rect x="55.2805%" y="789" width="0.1008%" height="15" fill="rgb(226,18,2)"/><text x="55.5305%" y="799.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.10%)</title><rect x="55.2805%" y="773" width="0.1008%" height="15" fill="rgb(216,8,46)"/><text x="55.5305%" y="783.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="55.3701%" y="757" width="0.0112%" height="15" fill="rgb(226,140,39)"/><text x="55.6201%" y="767.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="55.3701%" y="741" width="0.0112%" height="15" fill="rgb(221,194,54)"/><text x="55.6201%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (59 samples, 0.66%)</title><rect x="54.7990%" y="917" width="0.6608%" height="15" fill="rgb(213,92,11)"/><text x="55.0490%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (58 samples, 0.65%)</title><rect x="54.8102%" y="901" width="0.6496%" height="15" fill="rgb(229,162,46)"/><text x="55.0602%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (58 samples, 0.65%)</title><rect x="54.8102%" y="885" width="0.6496%" height="15" fill="rgb(214,111,36)"/><text x="55.0602%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (58 samples, 0.65%)</title><rect x="54.8102%" y="869" width="0.6496%" height="15" fill="rgb(207,6,21)"/><text x="55.0602%" y="879.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (7 samples, 0.08%)</title><rect x="55.3813%" y="853" width="0.0784%" height="15" fill="rgb(213,127,38)"/><text x="55.6313%" y="863.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.06%)</title><rect x="55.4037%" y="837" width="0.0560%" height="15" fill="rgb(238,118,32)"/><text x="55.6537%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="55.4597%" y="853" width="0.0112%" height="15" fill="rgb(240,139,39)"/><text x="55.7097%" y="863.50"></text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="55.4709%" y="709" width="0.0224%" height="15" fill="rgb(235,10,37)"/><text x="55.7209%" y="719.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="55.4821%" y="693" width="0.0112%" height="15" fill="rgb(249,171,38)"/><text x="55.7321%" y="703.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="55.4933%" y="709" width="0.0112%" height="15" fill="rgb(242,144,32)"/><text x="55.7433%" y="719.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="55.4933%" y="693" width="0.0112%" height="15" fill="rgb(217,117,21)"/><text x="55.7433%" y="703.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (69 samples, 0.77%)</title><rect x="54.7430%" y="933" width="0.7728%" height="15" fill="rgb(249,87,1)"/><text x="54.9930%" y="943.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="55.4597%" y="917" width="0.0560%" height="15" fill="rgb(248,196,48)"/><text x="55.7097%" y="927.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="55.4597%" y="901" width="0.0560%" height="15" fill="rgb(251,206,33)"/><text x="55.7097%" y="911.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="55.4597%" y="885" width="0.0560%" height="15" fill="rgb(232,141,28)"/><text x="55.7097%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="55.4597%" y="869" width="0.0560%" height="15" fill="rgb(209,167,14)"/><text x="55.7097%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.04%)</title><rect x="55.4709%" y="853" width="0.0448%" height="15" fill="rgb(225,11,50)"/><text x="55.7209%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.04%)</title><rect x="55.4709%" y="837" width="0.0448%" height="15" fill="rgb(209,50,20)"/><text x="55.7209%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.04%)</title><rect x="55.4709%" y="821" width="0.0448%" height="15" fill="rgb(212,17,46)"/><text x="55.7209%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.04%)</title><rect x="55.4709%" y="805" width="0.0448%" height="15" fill="rgb(216,101,39)"/><text x="55.7209%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.04%)</title><rect x="55.4709%" y="789" width="0.0448%" height="15" fill="rgb(212,228,48)"/><text x="55.7209%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.04%)</title><rect x="55.4709%" y="773" width="0.0448%" height="15" fill="rgb(250,6,50)"/><text x="55.7209%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.04%)</title><rect x="55.4709%" y="757" width="0.0448%" height="15" fill="rgb(250,160,48)"/><text x="55.7209%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.04%)</title><rect x="55.4709%" y="741" width="0.0448%" height="15" fill="rgb(244,216,33)"/><text x="55.7209%" y="751.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.04%)</title><rect x="55.4709%" y="725" width="0.0448%" height="15" fill="rgb(207,157,5)"/><text x="55.7209%" y="735.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="55.5045%" y="709" width="0.0112%" height="15" fill="rgb(228,199,8)"/><text x="55.7545%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="55.5157%" y="933" width="0.0336%" height="15" fill="rgb(227,80,20)"/><text x="55.7657%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="55.5157%" y="917" width="0.0336%" height="15" fill="rgb(222,9,33)"/><text x="55.7657%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.03%)</title><rect x="55.5157%" y="901" width="0.0336%" height="15" fill="rgb(239,44,28)"/><text x="55.7657%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.03%)</title><rect x="55.5157%" y="885" width="0.0336%" height="15" fill="rgb(249,187,43)"/><text x="55.7657%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.03%)</title><rect x="55.5157%" y="869" width="0.0336%" height="15" fill="rgb(216,141,28)"/><text x="55.7657%" y="879.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.03%)</title><rect x="55.5157%" y="853" width="0.0336%" height="15" fill="rgb(230,154,53)"/><text x="55.7657%" y="863.50"></text></g><g><title>__libc_malloc (3 samples, 0.03%)</title><rect x="55.5157%" y="837" width="0.0336%" height="15" fill="rgb(227,82,4)"/><text x="55.7657%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (76 samples, 0.85%)</title><rect x="54.7430%" y="997" width="0.8512%" height="15" fill="rgb(220,107,16)"/><text x="54.9930%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (76 samples, 0.85%)</title><rect x="54.7430%" y="981" width="0.8512%" height="15" fill="rgb(207,187,2)"/><text x="54.9930%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (76 samples, 0.85%)</title><rect x="54.7430%" y="965" width="0.8512%" height="15" fill="rgb(210,162,52)"/><text x="54.9930%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (76 samples, 0.85%)</title><rect x="54.7430%" y="949" width="0.8512%" height="15" fill="rgb(217,216,49)"/><text x="54.9930%" y="959.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (4 samples, 0.04%)</title><rect x="55.5493%" y="933" width="0.0448%" height="15" fill="rgb(218,146,49)"/><text x="55.7993%" y="943.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.04%)</title><rect x="55.5493%" y="917" width="0.0448%" height="15" fill="rgb(216,55,40)"/><text x="55.7993%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="55.5941%" y="885" width="0.0112%" height="15" fill="rgb(208,196,21)"/><text x="55.8441%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="55.5941%" y="869" width="0.0112%" height="15" fill="rgb(242,117,42)"/><text x="55.8441%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="55.5941%" y="853" width="0.0112%" height="15" fill="rgb(210,11,23)"/><text x="55.8441%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="55.5941%" y="837" width="0.0112%" height="15" fill="rgb(217,110,2)"/><text x="55.8441%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="55.5941%" y="821" width="0.0112%" height="15" fill="rgb(229,77,54)"/><text x="55.8441%" y="831.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="55.5941%" y="805" width="0.0112%" height="15" fill="rgb(218,53,16)"/><text x="55.8441%" y="815.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="55.5941%" y="789" width="0.0112%" height="15" fill="rgb(215,38,13)"/><text x="55.8441%" y="799.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="55.5941%" y="773" width="0.0112%" height="15" fill="rgb(235,42,18)"/><text x="55.8441%" y="783.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="55.5941%" y="981" width="0.0336%" height="15" fill="rgb(219,66,54)"/><text x="55.8441%" y="991.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="55.5941%" y="965" width="0.0336%" height="15" fill="rgb(222,205,4)"/><text x="55.8441%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="55.5941%" y="949" width="0.0336%" height="15" fill="rgb(227,213,46)"/><text x="55.8441%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.03%)</title><rect x="55.5941%" y="933" width="0.0336%" height="15" fill="rgb(250,145,42)"/><text x="55.8441%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.03%)</title><rect x="55.5941%" y="917" width="0.0336%" height="15" fill="rgb(219,15,2)"/><text x="55.8441%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.03%)</title><rect x="55.5941%" y="901" width="0.0336%" height="15" fill="rgb(231,181,52)"/><text x="55.8441%" y="911.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.02%)</title><rect x="55.6053%" y="885" width="0.0224%" height="15" fill="rgb(235,1,42)"/><text x="55.8553%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="55.6053%" y="869" width="0.0224%" height="15" fill="rgb(249,88,27)"/><text x="55.8553%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.03%)</title><rect x="55.6613%" y="949" width="0.0336%" height="15" fill="rgb(235,145,16)"/><text x="55.9113%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.7173%" y="901" width="0.0112%" height="15" fill="rgb(237,114,19)"/><text x="55.9673%" y="911.50"></text></g><g><title>&lt;model::rho_types::GUnforgeable as core::clone::Clone&gt;::clone (9 samples, 0.10%)</title><rect x="55.7285%" y="901" width="0.1008%" height="15" fill="rgb(238,51,50)"/><text x="55.9785%" y="911.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.10%)</title><rect x="55.7285%" y="885" width="0.1008%" height="15" fill="rgb(205,194,25)"/><text x="55.9785%" y="895.50"></text></g><g><title>&lt;model::rho_types::g_unforgeable::UnfInstance as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="55.8069%" y="869" width="0.0224%" height="15" fill="rgb(215,203,17)"/><text x="56.0569%" y="879.50"></text></g><g><title>&lt;model::rho_types::GPrivate as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="55.8069%" y="853" width="0.0224%" height="15" fill="rgb(233,112,49)"/><text x="56.0569%" y="863.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="55.8069%" y="837" width="0.0224%" height="15" fill="rgb(241,130,26)"/><text x="56.0569%" y="847.50"></text></g><g><title>bytes::bytes::shared_clone (2 samples, 0.02%)</title><rect x="55.8069%" y="821" width="0.0224%" height="15" fill="rgb(252,223,19)"/><text x="56.0569%" y="831.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (2 samples, 0.02%)</title><rect x="55.8069%" y="805" width="0.0224%" height="15" fill="rgb(211,95,25)"/><text x="56.0569%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.02%)</title><rect x="55.8069%" y="789" width="0.0224%" height="15" fill="rgb(251,182,27)"/><text x="56.0569%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.02%)</title><rect x="55.8069%" y="773" width="0.0224%" height="15" fill="rgb(238,24,4)"/><text x="56.0569%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="55.8293%" y="853" width="0.0112%" height="15" fill="rgb(224,220,25)"/><text x="56.0793%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="55.8293%" y="837" width="0.0112%" height="15" fill="rgb(239,133,26)"/><text x="56.0793%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (3 samples, 0.03%)</title><rect x="55.8405%" y="853" width="0.0336%" height="15" fill="rgb(211,94,48)"/><text x="56.0905%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.07%)</title><rect x="55.8293%" y="901" width="0.0672%" height="15" fill="rgb(239,87,6)"/><text x="56.0793%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.07%)</title><rect x="55.8293%" y="885" width="0.0672%" height="15" fill="rgb(227,62,0)"/><text x="56.0793%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.07%)</title><rect x="55.8293%" y="869" width="0.0672%" height="15" fill="rgb(211,226,4)"/><text x="56.0793%" y="879.50"></text></g><g><title>core::alloc::layout::Layout::array (2 samples, 0.02%)</title><rect x="55.8741%" y="853" width="0.0224%" height="15" fill="rgb(253,38,52)"/><text x="56.1241%" y="863.50"></text></g><g><title>core::alloc::layout::Layout::repeat (2 samples, 0.02%)</title><rect x="55.8741%" y="837" width="0.0224%" height="15" fill="rgb(229,126,40)"/><text x="56.1241%" y="847.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (2 samples, 0.02%)</title><rect x="55.8741%" y="821" width="0.0224%" height="15" fill="rgb(229,165,44)"/><text x="56.1241%" y="831.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (2 samples, 0.02%)</title><rect x="55.8741%" y="805" width="0.0224%" height="15" fill="rgb(247,95,47)"/><text x="56.1241%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (23 samples, 0.26%)</title><rect x="55.6501%" y="965" width="0.2576%" height="15" fill="rgb(216,140,30)"/><text x="55.9001%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19 samples, 0.21%)</title><rect x="55.6949%" y="949" width="0.2128%" height="15" fill="rgb(246,214,8)"/><text x="55.9449%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (19 samples, 0.21%)</title><rect x="55.6949%" y="933" width="0.2128%" height="15" fill="rgb(227,224,15)"/><text x="55.9449%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19 samples, 0.21%)</title><rect x="55.6949%" y="917" width="0.2128%" height="15" fill="rgb(233,175,4)"/><text x="55.9449%" y="927.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="55.8965%" y="901" width="0.0112%" height="15" fill="rgb(221,66,45)"/><text x="56.1465%" y="911.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (30 samples, 0.34%)</title><rect x="55.6277%" y="981" width="0.3360%" height="15" fill="rgb(221,178,18)"/><text x="55.8777%" y="991.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="55.9077%" y="965" width="0.0560%" height="15" fill="rgb(213,81,29)"/><text x="56.1577%" y="975.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="55.9077%" y="949" width="0.0560%" height="15" fill="rgb(220,89,49)"/><text x="56.1577%" y="959.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="55.9077%" y="933" width="0.0560%" height="15" fill="rgb(227,60,33)"/><text x="56.1577%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="55.9077%" y="917" width="0.0560%" height="15" fill="rgb(205,113,12)"/><text x="56.1577%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.06%)</title><rect x="55.9077%" y="901" width="0.0560%" height="15" fill="rgb(211,32,1)"/><text x="56.1577%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.06%)</title><rect x="55.9077%" y="885" width="0.0560%" height="15" fill="rgb(246,2,12)"/><text x="56.1577%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.06%)</title><rect x="55.9077%" y="869" width="0.0560%" height="15" fill="rgb(243,37,27)"/><text x="56.1577%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.06%)</title><rect x="55.9077%" y="853" width="0.0560%" height="15" fill="rgb(248,211,31)"/><text x="56.1577%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.06%)</title><rect x="55.9077%" y="837" width="0.0560%" height="15" fill="rgb(242,146,47)"/><text x="56.1577%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.06%)</title><rect x="55.9077%" y="821" width="0.0560%" height="15" fill="rgb(206,70,20)"/><text x="56.1577%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.06%)</title><rect x="55.9077%" y="805" width="0.0560%" height="15" fill="rgb(215,10,51)"/><text x="56.1577%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.06%)</title><rect x="55.9077%" y="789" width="0.0560%" height="15" fill="rgb(243,178,53)"/><text x="56.1577%" y="799.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.06%)</title><rect x="55.9077%" y="773" width="0.0560%" height="15" fill="rgb(233,221,20)"/><text x="56.1577%" y="783.50"></text></g><g><title>__libc_malloc (5 samples, 0.06%)</title><rect x="55.9077%" y="757" width="0.0560%" height="15" fill="rgb(218,95,35)"/><text x="56.1577%" y="767.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="55.9301%" y="741" width="0.0336%" height="15" fill="rgb(229,13,5)"/><text x="56.1801%" y="751.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (34 samples, 0.38%)</title><rect x="55.5941%" y="997" width="0.3808%" height="15" fill="rgb(252,164,30)"/><text x="55.8441%" y="1007.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="55.9637%" y="981" width="0.0112%" height="15" fill="rgb(232,68,36)"/><text x="56.2137%" y="991.50"></text></g><g><title>&lt;model::rho_types::Send as core::clone::Clone&gt;::clone (112 samples, 1.25%)</title><rect x="54.7318%" y="1013" width="1.2543%" height="15" fill="rgb(219,59,54)"/><text x="54.9818%" y="1023.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="55.9749%" y="997" width="0.0112%" height="15" fill="rgb(250,92,33)"/><text x="56.2249%" y="1007.50"></text></g><g><title>__libc_malloc (6 samples, 0.07%)</title><rect x="56.0981%" y="917" width="0.0672%" height="15" fill="rgb(229,162,54)"/><text x="56.3481%" y="927.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="56.1429%" y="901" width="0.0224%" height="15" fill="rgb(244,114,52)"/><text x="56.3929%" y="911.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="56.1541%" y="885" width="0.0112%" height="15" fill="rgb(212,211,43)"/><text x="56.4041%" y="895.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="56.1653%" y="917" width="0.0112%" height="15" fill="rgb(226,147,8)"/><text x="56.4153%" y="927.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="56.1653%" y="901" width="0.0112%" height="15" fill="rgb(226,23,13)"/><text x="56.4153%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.13%)</title><rect x="56.0533%" y="965" width="0.1344%" height="15" fill="rgb(240,63,4)"/><text x="56.3033%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.13%)</title><rect x="56.0533%" y="949" width="0.1344%" height="15" fill="rgb(221,1,32)"/><text x="56.3033%" y="959.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.09%)</title><rect x="56.0981%" y="933" width="0.0896%" height="15" fill="rgb(242,117,10)"/><text x="56.3481%" y="943.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="56.1765%" y="917" width="0.0112%" height="15" fill="rgb(249,172,44)"/><text x="56.4265%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (2 samples, 0.02%)</title><rect x="56.1877%" y="965" width="0.0224%" height="15" fill="rgb(244,46,45)"/><text x="56.4377%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (21 samples, 0.24%)</title><rect x="55.9861%" y="1013" width="0.2352%" height="15" fill="rgb(206,43,17)"/><text x="56.2361%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18 samples, 0.20%)</title><rect x="56.0197%" y="997" width="0.2016%" height="15" fill="rgb(239,218,39)"/><text x="56.2697%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (18 samples, 0.20%)</title><rect x="56.0197%" y="981" width="0.2016%" height="15" fill="rgb(208,169,54)"/><text x="56.2697%" y="991.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="56.2101%" y="965" width="0.0112%" height="15" fill="rgb(247,25,42)"/><text x="56.4601%" y="975.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1 samples, 0.01%)</title><rect x="56.2101%" y="949" width="0.0112%" height="15" fill="rgb(226,23,31)"/><text x="56.4601%" y="959.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.01%)</title><rect x="56.2101%" y="933" width="0.0112%" height="15" fill="rgb(247,16,28)"/><text x="56.4601%" y="943.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.01%)</title><rect x="56.2101%" y="917" width="0.0112%" height="15" fill="rgb(231,147,38)"/><text x="56.4601%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (153 samples, 1.71%)</title><rect x="54.5638%" y="1189" width="1.7135%" height="15" fill="rgb(253,81,48)"/><text x="54.8138%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (153 samples, 1.71%)</title><rect x="54.5638%" y="1173" width="1.7135%" height="15" fill="rgb(249,222,43)"/><text x="54.8138%" y="1183.50"></text></g><g><title>alloc::slice::hack::to_vec (153 samples, 1.71%)</title><rect x="54.5638%" y="1157" width="1.7135%" height="15" fill="rgb(221,3,27)"/><text x="54.8138%" y="1167.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (153 samples, 1.71%)</title><rect x="54.5638%" y="1141" width="1.7135%" height="15" fill="rgb(228,180,5)"/><text x="54.8138%" y="1151.50"></text></g><g><title>&lt;model::rho_types::MatchCase as core::clone::Clone&gt;::clone (153 samples, 1.71%)</title><rect x="54.5638%" y="1125" width="1.7135%" height="15" fill="rgb(227,131,42)"/><text x="54.8138%" y="1135.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (153 samples, 1.71%)</title><rect x="54.5638%" y="1109" width="1.7135%" height="15" fill="rgb(212,3,39)"/><text x="54.8138%" y="1119.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (153 samples, 1.71%)</title><rect x="54.5638%" y="1093" width="1.7135%" height="15" fill="rgb(226,45,5)"/><text x="54.8138%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (153 samples, 1.71%)</title><rect x="54.5638%" y="1077" width="1.7135%" height="15" fill="rgb(215,167,45)"/><text x="54.8138%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (153 samples, 1.71%)</title><rect x="54.5638%" y="1061" width="1.7135%" height="15" fill="rgb(250,218,53)"/><text x="54.8138%" y="1071.50"></text></g><g><title>alloc::slice::hack::to_vec (153 samples, 1.71%)</title><rect x="54.5638%" y="1045" width="1.7135%" height="15" fill="rgb(207,140,0)"/><text x="54.8138%" y="1055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (153 samples, 1.71%)</title><rect x="54.5638%" y="1029" width="1.7135%" height="15" fill="rgb(238,133,51)"/><text x="54.8138%" y="1039.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (5 samples, 0.06%)</title><rect x="56.2213%" y="1013" width="0.0560%" height="15" fill="rgb(218,203,53)"/><text x="56.4713%" y="1023.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.04%)</title><rect x="56.2325%" y="997" width="0.0448%" height="15" fill="rgb(226,184,25)"/><text x="56.4825%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="56.2773%" y="1093" width="0.0112%" height="15" fill="rgb(231,121,21)"/><text x="56.5273%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.03%)</title><rect x="56.4005%" y="981" width="0.0336%" height="15" fill="rgb(251,14,34)"/><text x="56.6505%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="56.4565%" y="933" width="0.0112%" height="15" fill="rgb(249,193,11)"/><text x="56.7065%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="56.4565%" y="917" width="0.0112%" height="15" fill="rgb(220,172,37)"/><text x="56.7065%" y="927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="56.4565%" y="901" width="0.0112%" height="15" fill="rgb(231,229,43)"/><text x="56.7065%" y="911.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="56.5013%" y="917" width="0.0448%" height="15" fill="rgb(250,161,5)"/><text x="56.7513%" y="927.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="56.5237%" y="901" width="0.0224%" height="15" fill="rgb(218,225,18)"/><text x="56.7737%" y="911.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (10 samples, 0.11%)</title><rect x="56.4677%" y="933" width="0.1120%" height="15" fill="rgb(245,45,42)"/><text x="56.7177%" y="943.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="56.5461%" y="917" width="0.0336%" height="15" fill="rgb(211,115,1)"/><text x="56.7961%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.01%)</title><rect x="56.5797%" y="933" width="0.0112%" height="15" fill="rgb(248,133,52)"/><text x="56.8297%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.04%)</title><rect x="56.6357%" y="885" width="0.0448%" height="15" fill="rgb(238,100,21)"/><text x="56.8857%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.04%)</title><rect x="56.6357%" y="869" width="0.0448%" height="15" fill="rgb(247,144,11)"/><text x="56.8857%" y="879.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.03%)</title><rect x="56.6469%" y="853" width="0.0336%" height="15" fill="rgb(206,164,16)"/><text x="56.8969%" y="863.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="56.6693%" y="837" width="0.0112%" height="15" fill="rgb(222,34,3)"/><text x="56.9193%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (2 samples, 0.02%)</title><rect x="56.6805%" y="885" width="0.0224%" height="15" fill="rgb(248,82,4)"/><text x="56.9305%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.12%)</title><rect x="56.5909%" y="933" width="0.1232%" height="15" fill="rgb(228,81,46)"/><text x="56.8409%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.08%)</title><rect x="56.6357%" y="917" width="0.0784%" height="15" fill="rgb(227,67,47)"/><text x="56.8857%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.08%)</title><rect x="56.6357%" y="901" width="0.0784%" height="15" fill="rgb(215,93,53)"/><text x="56.8857%" y="911.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="56.7029%" y="885" width="0.0112%" height="15" fill="rgb(248,194,39)"/><text x="56.9529%" y="895.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1 samples, 0.01%)</title><rect x="56.7029%" y="869" width="0.0112%" height="15" fill="rgb(215,5,19)"/><text x="56.9529%" y="879.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.01%)</title><rect x="56.7029%" y="853" width="0.0112%" height="15" fill="rgb(226,215,51)"/><text x="56.9529%" y="863.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.01%)</title><rect x="56.7029%" y="837" width="0.0112%" height="15" fill="rgb(225,56,26)"/><text x="56.9529%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (34 samples, 0.38%)</title><rect x="56.3781%" y="997" width="0.3808%" height="15" fill="rgb(222,75,29)"/><text x="56.6281%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (29 samples, 0.32%)</title><rect x="56.4341%" y="981" width="0.3248%" height="15" fill="rgb(236,139,6)"/><text x="56.6841%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (28 samples, 0.31%)</title><rect x="56.4453%" y="965" width="0.3136%" height="15" fill="rgb(223,137,36)"/><text x="56.6953%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (28 samples, 0.31%)</title><rect x="56.4453%" y="949" width="0.3136%" height="15" fill="rgb(226,99,2)"/><text x="56.6953%" y="959.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (4 samples, 0.04%)</title><rect x="56.7141%" y="933" width="0.0448%" height="15" fill="rgb(206,133,23)"/><text x="56.9641%" y="943.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="56.7253%" y="917" width="0.0336%" height="15" fill="rgb(243,173,15)"/><text x="56.9753%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="56.7589%" y="837" width="0.0224%" height="15" fill="rgb(228,69,28)"/><text x="57.0089%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="56.7589%" y="821" width="0.0224%" height="15" fill="rgb(212,51,22)"/><text x="57.0089%" y="831.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="56.7589%" y="805" width="0.0224%" height="15" fill="rgb(227,113,0)"/><text x="57.0089%" y="815.50"></text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="56.7589%" y="789" width="0.0224%" height="15" fill="rgb(252,84,27)"/><text x="57.0089%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="56.7589%" y="885" width="0.0336%" height="15" fill="rgb(223,145,39)"/><text x="57.0089%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="56.7589%" y="869" width="0.0336%" height="15" fill="rgb(239,219,30)"/><text x="57.0089%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.03%)</title><rect x="56.7589%" y="853" width="0.0336%" height="15" fill="rgb(224,196,39)"/><text x="57.0089%" y="863.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="56.7813%" y="837" width="0.0112%" height="15" fill="rgb(205,35,43)"/><text x="57.0313%" y="847.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1 samples, 0.01%)</title><rect x="56.7813%" y="821" width="0.0112%" height="15" fill="rgb(228,201,21)"/><text x="57.0313%" y="831.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.01%)</title><rect x="56.7813%" y="805" width="0.0112%" height="15" fill="rgb(237,118,16)"/><text x="57.0313%" y="815.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.01%)</title><rect x="56.7813%" y="789" width="0.0112%" height="15" fill="rgb(241,17,19)"/><text x="57.0313%" y="799.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (44 samples, 0.49%)</title><rect x="56.3109%" y="1061" width="0.4928%" height="15" fill="rgb(214,10,25)"/><text x="56.5609%" y="1071.50"></text></g><g><title>&lt;model::rho_types::ELt as core::clone::Clone&gt;::clone (44 samples, 0.49%)</title><rect x="56.3109%" y="1045" width="0.4928%" height="15" fill="rgb(238,37,29)"/><text x="56.5609%" y="1055.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (44 samples, 0.49%)</title><rect x="56.3109%" y="1029" width="0.4928%" height="15" fill="rgb(253,83,25)"/><text x="56.5609%" y="1039.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (44 samples, 0.49%)</title><rect x="56.3109%" y="1013" width="0.4928%" height="15" fill="rgb(234,192,12)"/><text x="56.5609%" y="1023.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="56.7589%" y="997" width="0.0448%" height="15" fill="rgb(241,216,45)"/><text x="57.0089%" y="1007.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="56.7589%" y="981" width="0.0448%" height="15" fill="rgb(242,22,33)"/><text x="57.0089%" y="991.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="56.7589%" y="965" width="0.0448%" height="15" fill="rgb(231,105,49)"/><text x="57.0089%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="56.7589%" y="949" width="0.0448%" height="15" fill="rgb(218,204,15)"/><text x="57.0089%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.04%)</title><rect x="56.7589%" y="933" width="0.0448%" height="15" fill="rgb(235,138,41)"/><text x="57.0089%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.04%)</title><rect x="56.7589%" y="917" width="0.0448%" height="15" fill="rgb(246,0,9)"/><text x="57.0089%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.04%)</title><rect x="56.7589%" y="901" width="0.0448%" height="15" fill="rgb(210,74,4)"/><text x="57.0089%" y="911.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="56.7925%" y="885" width="0.0112%" height="15" fill="rgb(250,60,41)"/><text x="57.0425%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="56.7925%" y="869" width="0.0112%" height="15" fill="rgb(220,115,12)"/><text x="57.0425%" y="879.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="56.7925%" y="853" width="0.0112%" height="15" fill="rgb(237,100,13)"/><text x="57.0425%" y="863.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (46 samples, 0.52%)</title><rect x="56.2997%" y="1077" width="0.5152%" height="15" fill="rgb(213,55,26)"/><text x="56.5497%" y="1087.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="56.8037%" y="1061" width="0.0112%" height="15" fill="rgb(216,17,4)"/><text x="57.0537%" y="1071.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (49 samples, 0.55%)</title><rect x="56.2885%" y="1093" width="0.5488%" height="15" fill="rgb(220,153,47)"/><text x="56.5385%" y="1103.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="56.8149%" y="1077" width="0.0224%" height="15" fill="rgb(215,131,9)"/><text x="57.0649%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="56.8485%" y="1045" width="0.0112%" height="15" fill="rgb(233,46,42)"/><text x="57.0985%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="56.8485%" y="1029" width="0.0112%" height="15" fill="rgb(226,86,7)"/><text x="57.0985%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="56.8485%" y="1013" width="0.0112%" height="15" fill="rgb(239,226,21)"/><text x="57.0985%" y="1023.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="56.8485%" y="997" width="0.0112%" height="15" fill="rgb(244,137,22)"/><text x="57.0985%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="56.8373%" y="1093" width="0.0336%" height="15" fill="rgb(211,139,35)"/><text x="57.0873%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="56.8485%" y="1077" width="0.0224%" height="15" fill="rgb(214,62,50)"/><text x="57.0985%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="56.8485%" y="1061" width="0.0224%" height="15" fill="rgb(212,113,44)"/><text x="57.0985%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (1 samples, 0.01%)</title><rect x="56.8597%" y="1045" width="0.0112%" height="15" fill="rgb(226,150,43)"/><text x="57.1097%" y="1055.50"></text></g><g><title>rho_runtime::storage::transit::Transit::produce (214 samples, 2.40%)</title><rect x="54.5638%" y="1349" width="2.3967%" height="15" fill="rgb(250,71,37)"/><text x="54.8138%" y="1359.50">rh..</text></g><g><title>&lt;rho_runtime::storage::TaggedContinuation as core::clone::Clone&gt;::clone (214 samples, 2.40%)</title><rect x="54.5638%" y="1333" width="2.3967%" height="15" fill="rgb(219,76,19)"/><text x="54.8138%" y="1343.50">&lt;r..</text></g><g><title>&lt;model::rho_types::ParWithRandom as core::clone::Clone&gt;::clone (214 samples, 2.40%)</title><rect x="54.5638%" y="1317" width="2.3967%" height="15" fill="rgb(250,39,11)"/><text x="54.8138%" y="1327.50">&lt;m..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (214 samples, 2.40%)</title><rect x="54.5638%" y="1301" width="2.3967%" height="15" fill="rgb(230,64,31)"/><text x="54.8138%" y="1311.50">&lt;c..</text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (214 samples, 2.40%)</title><rect x="54.5638%" y="1285" width="2.3967%" height="15" fill="rgb(208,222,23)"/><text x="54.8138%" y="1295.50">&lt;m..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (214 samples, 2.40%)</title><rect x="54.5638%" y="1269" width="2.3967%" height="15" fill="rgb(227,125,18)"/><text x="54.8138%" y="1279.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (214 samples, 2.40%)</title><rect x="54.5638%" y="1253" width="2.3967%" height="15" fill="rgb(234,210,9)"/><text x="54.8138%" y="1263.50">al..</text></g><g><title>alloc::slice::hack::to_vec (214 samples, 2.40%)</title><rect x="54.5638%" y="1237" width="2.3967%" height="15" fill="rgb(217,127,24)"/><text x="54.8138%" y="1247.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (214 samples, 2.40%)</title><rect x="54.5638%" y="1221" width="2.3967%" height="15" fill="rgb(239,141,48)"/><text x="54.8138%" y="1231.50">&lt;T..</text></g><g><title>&lt;model::rho_types::Match as core::clone::Clone&gt;::clone (214 samples, 2.40%)</title><rect x="54.5638%" y="1205" width="2.3967%" height="15" fill="rgb(227,109,8)"/><text x="54.8138%" y="1215.50">&lt;m..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (61 samples, 0.68%)</title><rect x="56.2773%" y="1189" width="0.6832%" height="15" fill="rgb(235,184,23)"/><text x="56.5273%" y="1199.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (61 samples, 0.68%)</title><rect x="56.2773%" y="1173" width="0.6832%" height="15" fill="rgb(227,226,48)"/><text x="56.5273%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (61 samples, 0.68%)</title><rect x="56.2773%" y="1157" width="0.6832%" height="15" fill="rgb(206,150,11)"/><text x="56.5273%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (61 samples, 0.68%)</title><rect x="56.2773%" y="1141" width="0.6832%" height="15" fill="rgb(254,2,33)"/><text x="56.5273%" y="1151.50"></text></g><g><title>alloc::slice::hack::to_vec (61 samples, 0.68%)</title><rect x="56.2773%" y="1125" width="0.6832%" height="15" fill="rgb(243,160,20)"/><text x="56.5273%" y="1135.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (61 samples, 0.68%)</title><rect x="56.2773%" y="1109" width="0.6832%" height="15" fill="rgb(218,208,30)"/><text x="56.5273%" y="1119.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (8 samples, 0.09%)</title><rect x="56.8709%" y="1093" width="0.0896%" height="15" fill="rgb(224,120,49)"/><text x="57.1209%" y="1103.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="56.9381%" y="1077" width="0.0224%" height="15" fill="rgb(246,12,2)"/><text x="57.1881%" y="1087.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_reserve (5 samples, 0.06%)</title><rect x="56.9605%" y="1349" width="0.0560%" height="15" fill="rgb(236,117,3)"/><text x="57.2105%" y="1359.50"></text></g><g><title>[libc-2.31.so] (12 samples, 0.13%)</title><rect x="57.0165%" y="485" width="0.1344%" height="15" fill="rgb(216,128,52)"/><text x="57.2665%" y="495.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::drop_future_or_output (13 samples, 0.15%)</title><rect x="57.0165%" y="549" width="0.1456%" height="15" fill="rgb(246,145,19)"/><text x="57.2665%" y="559.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::set_stage (13 samples, 0.15%)</title><rect x="57.0165%" y="533" width="0.1456%" height="15" fill="rgb(222,11,46)"/><text x="57.2665%" y="543.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (13 samples, 0.15%)</title><rect x="57.0165%" y="517" width="0.1456%" height="15" fill="rgb(245,82,36)"/><text x="57.2665%" y="527.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::set_stage::{{closure}} (13 samples, 0.15%)</title><rect x="57.0165%" y="501" width="0.1456%" height="15" fill="rgb(250,73,51)"/><text x="57.2665%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Par&gt;::{{closure}}&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="57.1509%" y="485" width="0.0112%" height="15" fill="rgb(221,189,23)"/><text x="57.4009%" y="495.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (9 samples, 0.10%)</title><rect x="57.1621%" y="549" width="0.1008%" height="15" fill="rgb(210,33,7)"/><text x="57.4121%" y="559.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (9 samples, 0.10%)</title><rect x="57.1621%" y="533" width="0.1008%" height="15" fill="rgb(210,107,22)"/><text x="57.4121%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (8 samples, 0.09%)</title><rect x="57.1733%" y="517" width="0.0896%" height="15" fill="rgb(222,116,37)"/><text x="57.4233%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_sub (8 samples, 0.09%)</title><rect x="57.1733%" y="501" width="0.0896%" height="15" fill="rgb(254,17,48)"/><text x="57.4233%" y="511.50"></text></g><g><title>rho_runtime::run::{{closure}}::{{closure}} (24 samples, 0.27%)</title><rect x="57.0165%" y="693" width="0.2688%" height="15" fill="rgb(224,36,32)"/><text x="57.2665%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.27%)</title><rect x="57.0165%" y="677" width="0.2688%" height="15" fill="rgb(232,90,46)"/><text x="57.2665%" y="687.50"></text></g><g><title>rho_runtime::test::{{closure}} (24 samples, 0.27%)</title><rect x="57.0165%" y="661" width="0.2688%" height="15" fill="rgb(241,66,40)"/><text x="57.2665%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.27%)</title><rect x="57.0165%" y="645" width="0.2688%" height="15" fill="rgb(249,184,29)"/><text x="57.2665%" y="655.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::evaludate::{{closure}} (24 samples, 0.27%)</title><rect x="57.0165%" y="629" width="0.2688%" height="15" fill="rgb(231,181,1)"/><text x="57.2665%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::join::JoinHandle&lt;core::result::Result&lt;(),model::rho_types::ExecutionError&gt;&gt;&gt; (24 samples, 0.27%)</title><rect x="57.0165%" y="613" width="0.2688%" height="15" fill="rgb(224,94,2)"/><text x="57.2665%" y="623.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.27%)</title><rect x="57.0165%" y="597" width="0.2688%" height="15" fill="rgb(229,170,15)"/><text x="57.2665%" y="607.50"></text></g><g><title>tokio::runtime::task::raw::drop_join_handle_slow (24 samples, 0.27%)</title><rect x="57.0165%" y="581" width="0.2688%" height="15" fill="rgb(240,127,35)"/><text x="57.2665%" y="591.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (24 samples, 0.27%)</title><rect x="57.0165%" y="565" width="0.2688%" height="15" fill="rgb(248,196,34)"/><text x="57.2665%" y="575.50"></text></g><g><title>tokio::runtime::task::state::State::unset_join_interested (2 samples, 0.02%)</title><rect x="57.2629%" y="549" width="0.0224%" height="15" fill="rgb(236,137,7)"/><text x="57.5129%" y="559.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update (2 samples, 0.02%)</title><rect x="57.2629%" y="533" width="0.0224%" height="15" fill="rgb(235,127,16)"/><text x="57.5129%" y="543.50"></text></g><g><title>tokio::runtime::task::state::State::load (2 samples, 0.02%)</title><rect x="57.2629%" y="517" width="0.0224%" height="15" fill="rgb(250,192,54)"/><text x="57.5129%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.02%)</title><rect x="57.2629%" y="501" width="0.0224%" height="15" fill="rgb(218,98,20)"/><text x="57.5129%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="57.2629%" y="485" width="0.0224%" height="15" fill="rgb(230,176,47)"/><text x="57.5129%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (25 samples, 0.28%)</title><rect x="57.0165%" y="709" width="0.2800%" height="15" fill="rgb(244,2,33)"/><text x="57.2665%" y="719.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::handle_install::{{closure}} (1 samples, 0.01%)</title><rect x="57.2853%" y="693" width="0.0112%" height="15" fill="rgb(231,100,17)"/><text x="57.5353%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="57.2853%" y="677" width="0.0112%" height="15" fill="rgb(245,23,12)"/><text x="57.5353%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="57.2853%" y="661" width="0.0112%" height="15" fill="rgb(249,55,22)"/><text x="57.5353%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="57.2853%" y="645" width="0.0112%" height="15" fill="rgb(207,134,9)"/><text x="57.5353%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="57.2853%" y="629" width="0.0112%" height="15" fill="rgb(218,134,0)"/><text x="57.5353%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="57.2853%" y="613" width="0.0112%" height="15" fill="rgb(213,212,33)"/><text x="57.5353%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="57.2853%" y="597" width="0.0112%" height="15" fill="rgb(252,106,18)"/><text x="57.5353%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="57.2853%" y="581" width="0.0112%" height="15" fill="rgb(208,126,42)"/><text x="57.5353%" y="591.50"></text></g><g><title>&lt;rho_runtime::interpreter::reduce::environment::Env&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.07%)</title><rect x="57.2964%" y="581" width="0.0672%" height="15" fill="rgb(246,175,29)"/><text x="57.5464%" y="591.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.07%)</title><rect x="57.2964%" y="565" width="0.0672%" height="15" fill="rgb(215,13,50)"/><text x="57.5464%" y="575.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (36 samples, 0.40%)</title><rect x="57.0165%" y="1349" width="0.4032%" height="15" fill="rgb(216,172,15)"/><text x="57.2665%" y="1359.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (36 samples, 0.40%)</title><rect x="57.0165%" y="1333" width="0.4032%" height="15" fill="rgb(212,103,13)"/><text x="57.2665%" y="1343.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (36 samples, 0.40%)</title><rect x="57.0165%" y="1317" width="0.4032%" height="15" fill="rgb(231,171,36)"/><text x="57.2665%" y="1327.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (36 samples, 0.40%)</title><rect x="57.0165%" y="1301" width="0.4032%" height="15" fill="rgb(250,123,20)"/><text x="57.2665%" y="1311.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (36 samples, 0.40%)</title><rect x="57.0165%" y="1285" width="0.4032%" height="15" fill="rgb(212,53,50)"/><text x="57.2665%" y="1295.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (36 samples, 0.40%)</title><rect x="57.0165%" y="1269" width="0.4032%" height="15" fill="rgb(243,54,12)"/><text x="57.2665%" y="1279.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (36 samples, 0.40%)</title><rect x="57.0165%" y="1253" width="0.4032%" height="15" fill="rgb(234,101,34)"/><text x="57.2665%" y="1263.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (36 samples, 0.40%)</title><rect x="57.0165%" y="1237" width="0.4032%" height="15" fill="rgb(254,67,22)"/><text x="57.2665%" y="1247.50"></text></g><g><title>std::panic::catch_unwind (36 samples, 0.40%)</title><rect x="57.0165%" y="1221" width="0.4032%" height="15" fill="rgb(250,35,47)"/><text x="57.2665%" y="1231.50"></text></g><g><title>std::panicking::try (36 samples, 0.40%)</title><rect x="57.0165%" y="1205" width="0.4032%" height="15" fill="rgb(226,126,38)"/><text x="57.2665%" y="1215.50"></text></g><g><title>std::panicking::try::do_call (36 samples, 0.40%)</title><rect x="57.0165%" y="1189" width="0.4032%" height="15" fill="rgb(216,138,53)"/><text x="57.2665%" y="1199.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (36 samples, 0.40%)</title><rect x="57.0165%" y="1173" width="0.4032%" height="15" fill="rgb(246,199,43)"/><text x="57.2665%" y="1183.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (36 samples, 0.40%)</title><rect x="57.0165%" y="1157" width="0.4032%" height="15" fill="rgb(232,125,11)"/><text x="57.2665%" y="1167.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (36 samples, 0.40%)</title><rect x="57.0165%" y="1141" width="0.4032%" height="15" fill="rgb(218,219,45)"/><text x="57.2665%" y="1151.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (36 samples, 0.40%)</title><rect x="57.0165%" y="1125" width="0.4032%" height="15" fill="rgb(216,102,54)"/><text x="57.2665%" y="1135.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (36 samples, 0.40%)</title><rect x="57.0165%" y="1109" width="0.4032%" height="15" fill="rgb(250,228,7)"/><text x="57.2665%" y="1119.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (36 samples, 0.40%)</title><rect x="57.0165%" y="1093" width="0.4032%" height="15" fill="rgb(226,125,25)"/><text x="57.2665%" y="1103.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (36 samples, 0.40%)</title><rect x="57.0165%" y="1077" width="0.4032%" height="15" fill="rgb(224,165,27)"/><text x="57.2665%" y="1087.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (36 samples, 0.40%)</title><rect x="57.0165%" y="1061" width="0.4032%" height="15" fill="rgb(233,86,3)"/><text x="57.2665%" y="1071.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (36 samples, 0.40%)</title><rect x="57.0165%" y="1045" width="0.4032%" height="15" fill="rgb(228,116,20)"/><text x="57.2665%" y="1055.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (36 samples, 0.40%)</title><rect x="57.0165%" y="1029" width="0.4032%" height="15" fill="rgb(209,192,17)"/><text x="57.2665%" y="1039.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (36 samples, 0.40%)</title><rect x="57.0165%" y="1013" width="0.4032%" height="15" fill="rgb(224,88,34)"/><text x="57.2665%" y="1023.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (36 samples, 0.40%)</title><rect x="57.0165%" y="997" width="0.4032%" height="15" fill="rgb(233,38,6)"/><text x="57.2665%" y="1007.50"></text></g><g><title>tokio::coop::budget (36 samples, 0.40%)</title><rect x="57.0165%" y="981" width="0.4032%" height="15" fill="rgb(212,59,30)"/><text x="57.2665%" y="991.50"></text></g><g><title>tokio::coop::with_budget (36 samples, 0.40%)</title><rect x="57.0165%" y="965" width="0.4032%" height="15" fill="rgb(213,80,3)"/><text x="57.2665%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (36 samples, 0.40%)</title><rect x="57.0165%" y="949" width="0.4032%" height="15" fill="rgb(251,178,7)"/><text x="57.2665%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (36 samples, 0.40%)</title><rect x="57.0165%" y="933" width="0.4032%" height="15" fill="rgb(213,154,26)"/><text x="57.2665%" y="943.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (36 samples, 0.40%)</title><rect x="57.0165%" y="917" width="0.4032%" height="15" fill="rgb(238,165,49)"/><text x="57.2665%" y="927.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (36 samples, 0.40%)</title><rect x="57.0165%" y="901" width="0.4032%" height="15" fill="rgb(248,91,46)"/><text x="57.2665%" y="911.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (36 samples, 0.40%)</title><rect x="57.0165%" y="885" width="0.4032%" height="15" fill="rgb(244,21,52)"/><text x="57.2665%" y="895.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (36 samples, 0.40%)</title><rect x="57.0165%" y="869" width="0.4032%" height="15" fill="rgb(247,122,20)"/><text x="57.2665%" y="879.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (36 samples, 0.40%)</title><rect x="57.0165%" y="853" width="0.4032%" height="15" fill="rgb(218,27,9)"/><text x="57.2665%" y="863.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (36 samples, 0.40%)</title><rect x="57.0165%" y="837" width="0.4032%" height="15" fill="rgb(246,7,6)"/><text x="57.2665%" y="847.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (36 samples, 0.40%)</title><rect x="57.0165%" y="821" width="0.4032%" height="15" fill="rgb(227,135,54)"/><text x="57.2665%" y="831.50"></text></g><g><title>std::panic::catch_unwind (36 samples, 0.40%)</title><rect x="57.0165%" y="805" width="0.4032%" height="15" fill="rgb(247,14,11)"/><text x="57.2665%" y="815.50"></text></g><g><title>std::panicking::try (36 samples, 0.40%)</title><rect x="57.0165%" y="789" width="0.4032%" height="15" fill="rgb(206,149,34)"/><text x="57.2665%" y="799.50"></text></g><g><title>std::panicking::try::do_call (36 samples, 0.40%)</title><rect x="57.0165%" y="773" width="0.4032%" height="15" fill="rgb(227,228,4)"/><text x="57.2665%" y="783.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (36 samples, 0.40%)</title><rect x="57.0165%" y="757" width="0.4032%" height="15" fill="rgb(238,218,28)"/><text x="57.2665%" y="767.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (36 samples, 0.40%)</title><rect x="57.0165%" y="741" width="0.4032%" height="15" fill="rgb(252,86,40)"/><text x="57.2665%" y="751.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (36 samples, 0.40%)</title><rect x="57.0165%" y="725" width="0.4032%" height="15" fill="rgb(251,225,11)"/><text x="57.2665%" y="735.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (11 samples, 0.12%)</title><rect x="57.2964%" y="709" width="0.1232%" height="15" fill="rgb(206,46,49)"/><text x="57.5464%" y="719.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (11 samples, 0.12%)</title><rect x="57.2964%" y="693" width="0.1232%" height="15" fill="rgb(245,128,24)"/><text x="57.5464%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.12%)</title><rect x="57.2964%" y="677" width="0.1232%" height="15" fill="rgb(219,177,34)"/><text x="57.5464%" y="687.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation::{{closure}} (11 samples, 0.12%)</title><rect x="57.2964%" y="661" width="0.1232%" height="15" fill="rgb(218,60,48)"/><text x="57.5464%" y="671.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (11 samples, 0.12%)</title><rect x="57.2964%" y="645" width="0.1232%" height="15" fill="rgb(221,11,5)"/><text x="57.5464%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.12%)</title><rect x="57.2964%" y="629" width="0.1232%" height="15" fill="rgb(220,148,13)"/><text x="57.5464%" y="639.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate::{{closure}} (11 samples, 0.12%)</title><rect x="57.2964%" y="613" width="0.1232%" height="15" fill="rgb(210,16,3)"/><text x="57.5464%" y="623.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation (11 samples, 0.12%)</title><rect x="57.2964%" y="597" width="0.1232%" height="15" fill="rgb(236,80,2)"/><text x="57.5464%" y="607.50"></text></g><g><title>core::future::from_generator (5 samples, 0.06%)</title><rect x="57.3636%" y="581" width="0.0560%" height="15" fill="rgb(239,129,19)"/><text x="57.6136%" y="591.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.06%)</title><rect x="57.3636%" y="565" width="0.0560%" height="15" fill="rgb(220,106,35)"/><text x="57.6136%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="57.4196%" y="1349" width="0.0112%" height="15" fill="rgb(252,139,45)"/><text x="57.6696%" y="1359.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="57.4196%" y="1333" width="0.0112%" height="15" fill="rgb(229,8,36)"/><text x="57.6696%" y="1343.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (1 samples, 0.01%)</title><rect x="57.4196%" y="1317" width="0.0112%" height="15" fill="rgb(230,126,33)"/><text x="57.6696%" y="1327.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (1 samples, 0.01%)</title><rect x="57.4196%" y="1301" width="0.0112%" height="15" fill="rgb(239,140,21)"/><text x="57.6696%" y="1311.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (1 samples, 0.01%)</title><rect x="57.4196%" y="1285" width="0.0112%" height="15" fill="rgb(254,104,9)"/><text x="57.6696%" y="1295.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (1 samples, 0.01%)</title><rect x="57.4196%" y="1269" width="0.0112%" height="15" fill="rgb(239,52,14)"/><text x="57.6696%" y="1279.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1 samples, 0.01%)</title><rect x="57.4196%" y="1253" width="0.0112%" height="15" fill="rgb(208,227,44)"/><text x="57.6696%" y="1263.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1 samples, 0.01%)</title><rect x="57.4196%" y="1237" width="0.0112%" height="15" fill="rgb(246,18,19)"/><text x="57.6696%" y="1247.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (1 samples, 0.01%)</title><rect x="57.4196%" y="1221" width="0.0112%" height="15" fill="rgb(235,228,25)"/><text x="57.6696%" y="1231.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.01%)</title><rect x="57.4196%" y="1205" width="0.0112%" height="15" fill="rgb(240,156,20)"/><text x="57.6696%" y="1215.50"></text></g><g><title>std::panicking::try (1 samples, 0.01%)</title><rect x="57.4196%" y="1189" width="0.0112%" height="15" fill="rgb(224,8,20)"/><text x="57.6696%" y="1199.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.01%)</title><rect x="57.4196%" y="1173" width="0.0112%" height="15" fill="rgb(214,12,52)"/><text x="57.6696%" y="1183.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.01%)</title><rect x="57.4196%" y="1157" width="0.0112%" height="15" fill="rgb(211,220,47)"/><text x="57.6696%" y="1167.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (1 samples, 0.01%)</title><rect x="57.4196%" y="1141" width="0.0112%" height="15" fill="rgb(250,173,5)"/><text x="57.6696%" y="1151.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (1 samples, 0.01%)</title><rect x="57.4196%" y="1125" width="0.0112%" height="15" fill="rgb(250,125,52)"/><text x="57.6696%" y="1135.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.01%)</title><rect x="57.4196%" y="1109" width="0.0112%" height="15" fill="rgb(209,133,18)"/><text x="57.6696%" y="1119.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (1 samples, 0.01%)</title><rect x="57.4196%" y="1093" width="0.0112%" height="15" fill="rgb(216,173,22)"/><text x="57.6696%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="57.4196%" y="1077" width="0.0112%" height="15" fill="rgb(205,3,22)"/><text x="57.6696%" y="1087.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation::{{closure}} (1 samples, 0.01%)</title><rect x="57.4196%" y="1061" width="0.0112%" height="15" fill="rgb(248,22,20)"/><text x="57.6696%" y="1071.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="57.4196%" y="1045" width="0.0112%" height="15" fill="rgb(233,6,29)"/><text x="57.6696%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="57.4196%" y="1029" width="0.0112%" height="15" fill="rgb(240,22,54)"/><text x="57.6696%" y="1039.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate::{{closure}} (1 samples, 0.01%)</title><rect x="57.4196%" y="1013" width="0.0112%" height="15" fill="rgb(231,133,32)"/><text x="57.6696%" y="1023.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation (1 samples, 0.01%)</title><rect x="57.4196%" y="997" width="0.0112%" height="15" fill="rgb(248,193,4)"/><text x="57.6696%" y="1007.50"></text></g><g><title>&lt;rho_runtime::interpreter::reduce::environment::Env&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="57.4196%" y="981" width="0.0112%" height="15" fill="rgb(211,178,46)"/><text x="57.6696%" y="991.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="57.4196%" y="965" width="0.0112%" height="15" fill="rgb(224,5,42)"/><text x="57.6696%" y="975.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::convert::From&lt;&amp;[&lt;A as smallvec::Array&gt;::Item]&gt;&gt;::from (1 samples, 0.01%)</title><rect x="57.4196%" y="949" width="0.0112%" height="15" fill="rgb(239,176,25)"/><text x="57.6696%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="57.4196%" y="933" width="0.0112%" height="15" fill="rgb(245,187,50)"/><text x="57.6696%" y="943.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="57.4196%" y="917" width="0.0112%" height="15" fill="rgb(248,24,15)"/><text x="57.6696%" y="927.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="57.4196%" y="901" width="0.0112%" height="15" fill="rgb(205,166,13)"/><text x="57.6696%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="57.4196%" y="885" width="0.0112%" height="15" fill="rgb(208,114,23)"/><text x="57.6696%" y="895.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (1 samples, 0.01%)</title><rect x="57.4196%" y="869" width="0.0112%" height="15" fill="rgb(239,127,18)"/><text x="57.6696%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="57.4196%" y="853" width="0.0112%" height="15" fill="rgb(219,154,28)"/><text x="57.6696%" y="863.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (1 samples, 0.01%)</title><rect x="57.4196%" y="837" width="0.0112%" height="15" fill="rgb(225,157,23)"/><text x="57.6696%" y="847.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="57.4196%" y="821" width="0.0112%" height="15" fill="rgb(219,8,6)"/><text x="57.6696%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="57.4196%" y="805" width="0.0112%" height="15" fill="rgb(212,47,6)"/><text x="57.6696%" y="815.50"></text></g><g><title>tokio::coop::CURRENT::__getit (2 samples, 0.02%)</title><rect x="57.4308%" y="1349" width="0.0224%" height="15" fill="rgb(224,190,4)"/><text x="57.6808%" y="1359.50"></text></g><g><title>tokio::coop::RestoreOnPending::made_progress (1 samples, 0.01%)</title><rect x="57.4532%" y="1349" width="0.0112%" height="15" fill="rgb(239,183,29)"/><text x="57.7032%" y="1359.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3 samples, 0.03%)</title><rect x="57.4644%" y="1349" width="0.0336%" height="15" fill="rgb(213,57,7)"/><text x="57.7144%" y="1359.50"></text></g><g><title>rho_runtime::run::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="57.4980%" y="725" width="0.0112%" height="15" fill="rgb(216,148,1)"/><text x="57.7480%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="57.4980%" y="709" width="0.0112%" height="15" fill="rgb(236,182,29)"/><text x="57.7480%" y="719.50"></text></g><g><title>rho_runtime::test::{{closure}} (1 samples, 0.01%)</title><rect x="57.4980%" y="693" width="0.0112%" height="15" fill="rgb(244,120,48)"/><text x="57.7480%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="57.4980%" y="677" width="0.0112%" height="15" fill="rgb(206,71,34)"/><text x="57.7480%" y="687.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::evaludate::{{closure}} (1 samples, 0.01%)</title><rect x="57.4980%" y="661" width="0.0112%" height="15" fill="rgb(242,32,6)"/><text x="57.7480%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::join::JoinHandle&lt;core::result::Result&lt;(),model::rho_types::ExecutionError&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="57.4980%" y="645" width="0.0112%" height="15" fill="rgb(241,35,3)"/><text x="57.7480%" y="655.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="57.4980%" y="629" width="0.0112%" height="15" fill="rgb(222,62,19)"/><text x="57.7480%" y="639.50"></text></g><g><title>tokio::runtime::task::raw::drop_join_handle_slow (1 samples, 0.01%)</title><rect x="57.4980%" y="613" width="0.0112%" height="15" fill="rgb(223,110,41)"/><text x="57.7480%" y="623.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (1 samples, 0.01%)</title><rect x="57.4980%" y="597" width="0.0112%" height="15" fill="rgb(208,224,4)"/><text x="57.7480%" y="607.50"></text></g><g><title>tokio::runtime::task::state::State::unset_join_interested (1 samples, 0.01%)</title><rect x="57.4980%" y="581" width="0.0112%" height="15" fill="rgb(241,137,19)"/><text x="57.7480%" y="591.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update (1 samples, 0.01%)</title><rect x="57.4980%" y="565" width="0.0112%" height="15" fill="rgb(244,24,17)"/><text x="57.7480%" y="575.50"></text></g><g><title>tokio::runtime::task::state::State::load (1 samples, 0.01%)</title><rect x="57.4980%" y="549" width="0.0112%" height="15" fill="rgb(245,178,49)"/><text x="57.7480%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="57.4980%" y="533" width="0.0112%" height="15" fill="rgb(219,160,38)"/><text x="57.7480%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="57.4980%" y="517" width="0.0112%" height="15" fill="rgb(228,137,14)"/><text x="57.7480%" y="527.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (35 samples, 0.39%)</title><rect x="57.4980%" y="1349" width="0.3920%" height="15" fill="rgb(237,134,11)"/><text x="57.7480%" y="1359.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (35 samples, 0.39%)</title><rect x="57.4980%" y="1333" width="0.3920%" height="15" fill="rgb(211,126,44)"/><text x="57.7480%" y="1343.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (35 samples, 0.39%)</title><rect x="57.4980%" y="1317" width="0.3920%" height="15" fill="rgb(226,171,33)"/><text x="57.7480%" y="1327.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (35 samples, 0.39%)</title><rect x="57.4980%" y="1301" width="0.3920%" height="15" fill="rgb(253,99,13)"/><text x="57.7480%" y="1311.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (35 samples, 0.39%)</title><rect x="57.4980%" y="1285" width="0.3920%" height="15" fill="rgb(244,48,7)"/><text x="57.7480%" y="1295.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (35 samples, 0.39%)</title><rect x="57.4980%" y="1269" width="0.3920%" height="15" fill="rgb(244,217,54)"/><text x="57.7480%" y="1279.50"></text></g><g><title>std::panic::catch_unwind (35 samples, 0.39%)</title><rect x="57.4980%" y="1253" width="0.3920%" height="15" fill="rgb(224,15,18)"/><text x="57.7480%" y="1263.50"></text></g><g><title>std::panicking::try (35 samples, 0.39%)</title><rect x="57.4980%" y="1237" width="0.3920%" height="15" fill="rgb(244,99,12)"/><text x="57.7480%" y="1247.50"></text></g><g><title>std::panicking::try::do_call (35 samples, 0.39%)</title><rect x="57.4980%" y="1221" width="0.3920%" height="15" fill="rgb(233,226,8)"/><text x="57.7480%" y="1231.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (35 samples, 0.39%)</title><rect x="57.4980%" y="1205" width="0.3920%" height="15" fill="rgb(229,211,3)"/><text x="57.7480%" y="1215.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (35 samples, 0.39%)</title><rect x="57.4980%" y="1189" width="0.3920%" height="15" fill="rgb(216,140,21)"/><text x="57.7480%" y="1199.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (35 samples, 0.39%)</title><rect x="57.4980%" y="1173" width="0.3920%" height="15" fill="rgb(234,122,30)"/><text x="57.7480%" y="1183.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (35 samples, 0.39%)</title><rect x="57.4980%" y="1157" width="0.3920%" height="15" fill="rgb(236,25,46)"/><text x="57.7480%" y="1167.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (35 samples, 0.39%)</title><rect x="57.4980%" y="1141" width="0.3920%" height="15" fill="rgb(217,52,54)"/><text x="57.7480%" y="1151.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (35 samples, 0.39%)</title><rect x="57.4980%" y="1125" width="0.3920%" height="15" fill="rgb(222,29,26)"/><text x="57.7480%" y="1135.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (35 samples, 0.39%)</title><rect x="57.4980%" y="1109" width="0.3920%" height="15" fill="rgb(216,177,29)"/><text x="57.7480%" y="1119.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (35 samples, 0.39%)</title><rect x="57.4980%" y="1093" width="0.3920%" height="15" fill="rgb(247,136,51)"/><text x="57.7480%" y="1103.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (35 samples, 0.39%)</title><rect x="57.4980%" y="1077" width="0.3920%" height="15" fill="rgb(231,47,47)"/><text x="57.7480%" y="1087.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (35 samples, 0.39%)</title><rect x="57.4980%" y="1061" width="0.3920%" height="15" fill="rgb(211,192,36)"/><text x="57.7480%" y="1071.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (35 samples, 0.39%)</title><rect x="57.4980%" y="1045" width="0.3920%" height="15" fill="rgb(229,156,32)"/><text x="57.7480%" y="1055.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (35 samples, 0.39%)</title><rect x="57.4980%" y="1029" width="0.3920%" height="15" fill="rgb(248,213,20)"/><text x="57.7480%" y="1039.50"></text></g><g><title>tokio::coop::budget (35 samples, 0.39%)</title><rect x="57.4980%" y="1013" width="0.3920%" height="15" fill="rgb(217,64,7)"/><text x="57.7480%" y="1023.50"></text></g><g><title>tokio::coop::with_budget (35 samples, 0.39%)</title><rect x="57.4980%" y="997" width="0.3920%" height="15" fill="rgb(232,142,8)"/><text x="57.7480%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (35 samples, 0.39%)</title><rect x="57.4980%" y="981" width="0.3920%" height="15" fill="rgb(224,92,44)"/><text x="57.7480%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (35 samples, 0.39%)</title><rect x="57.4980%" y="965" width="0.3920%" height="15" fill="rgb(214,169,17)"/><text x="57.7480%" y="975.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (35 samples, 0.39%)</title><rect x="57.4980%" y="949" width="0.3920%" height="15" fill="rgb(210,59,37)"/><text x="57.7480%" y="959.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (35 samples, 0.39%)</title><rect x="57.4980%" y="933" width="0.3920%" height="15" fill="rgb(214,116,48)"/><text x="57.7480%" y="943.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (35 samples, 0.39%)</title><rect x="57.4980%" y="917" width="0.3920%" height="15" fill="rgb(244,191,6)"/><text x="57.7480%" y="927.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (35 samples, 0.39%)</title><rect x="57.4980%" y="901" width="0.3920%" height="15" fill="rgb(241,50,52)"/><text x="57.7480%" y="911.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (35 samples, 0.39%)</title><rect x="57.4980%" y="885" width="0.3920%" height="15" fill="rgb(236,75,39)"/><text x="57.7480%" y="895.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (35 samples, 0.39%)</title><rect x="57.4980%" y="869" width="0.3920%" height="15" fill="rgb(236,99,0)"/><text x="57.7480%" y="879.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (35 samples, 0.39%)</title><rect x="57.4980%" y="853" width="0.3920%" height="15" fill="rgb(207,202,15)"/><text x="57.7480%" y="863.50"></text></g><g><title>std::panic::catch_unwind (35 samples, 0.39%)</title><rect x="57.4980%" y="837" width="0.3920%" height="15" fill="rgb(233,207,14)"/><text x="57.7480%" y="847.50"></text></g><g><title>std::panicking::try (35 samples, 0.39%)</title><rect x="57.4980%" y="821" width="0.3920%" height="15" fill="rgb(226,27,51)"/><text x="57.7480%" y="831.50"></text></g><g><title>std::panicking::try::do_call (35 samples, 0.39%)</title><rect x="57.4980%" y="805" width="0.3920%" height="15" fill="rgb(206,104,42)"/><text x="57.7480%" y="815.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (35 samples, 0.39%)</title><rect x="57.4980%" y="789" width="0.3920%" height="15" fill="rgb(212,225,4)"/><text x="57.7480%" y="799.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (35 samples, 0.39%)</title><rect x="57.4980%" y="773" width="0.3920%" height="15" fill="rgb(233,96,42)"/><text x="57.7480%" y="783.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (35 samples, 0.39%)</title><rect x="57.4980%" y="757" width="0.3920%" height="15" fill="rgb(229,21,32)"/><text x="57.7480%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (35 samples, 0.39%)</title><rect x="57.4980%" y="741" width="0.3920%" height="15" fill="rgb(226,216,24)"/><text x="57.7480%" y="751.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::handle_produce::{{closure}} (34 samples, 0.38%)</title><rect x="57.5092%" y="725" width="0.3808%" height="15" fill="rgb(221,163,17)"/><text x="57.7592%" y="735.50"></text></g><g><title>[libc-2.31.so] (29 samples, 0.32%)</title><rect x="57.5652%" y="709" width="0.3248%" height="15" fill="rgb(216,216,42)"/><text x="57.8152%" y="719.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::steal_into (8 samples, 0.09%)</title><rect x="57.8900%" y="1349" width="0.0896%" height="15" fill="rgb(240,118,7)"/><text x="58.1400%" y="1359.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (3 samples, 0.03%)</title><rect x="57.9796%" y="1349" width="0.0336%" height="15" fill="rgb(221,67,37)"/><text x="58.2296%" y="1359.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::try_read_output (1 samples, 0.01%)</title><rect x="58.0132%" y="1349" width="0.0112%" height="15" fill="rgb(241,32,44)"/><text x="58.2632%" y="1359.50"></text></g><g><title>tokio::runtime::task::harness::can_read_output (3 samples, 0.03%)</title><rect x="58.0244%" y="1349" width="0.0336%" height="15" fill="rgb(235,204,43)"/><text x="58.2744%" y="1359.50"></text></g><g><title>__rust_probestack (1 samples, 0.01%)</title><rect x="58.1028%" y="1109" width="0.0112%" height="15" fill="rgb(213,116,10)"/><text x="58.3528%" y="1119.50"></text></g><g><title>[libc-2.31.so] (27 samples, 0.30%)</title><rect x="58.3044%" y="1045" width="0.3024%" height="15" fill="rgb(239,15,48)"/><text x="58.5544%" y="1055.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::take_output (100 samples, 1.12%)</title><rect x="58.1140%" y="1109" width="1.1199%" height="15" fill="rgb(207,123,36)"/><text x="58.3640%" y="1119.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (100 samples, 1.12%)</title><rect x="58.1140%" y="1093" width="1.1199%" height="15" fill="rgb(209,103,30)"/><text x="58.3640%" y="1103.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::take_output::{{closure}} (100 samples, 1.12%)</title><rect x="58.1140%" y="1077" width="1.1199%" height="15" fill="rgb(238,100,19)"/><text x="58.3640%" y="1087.50"></text></g><g><title>core::mem::replace (83 samples, 0.93%)</title><rect x="58.3044%" y="1061" width="0.9296%" height="15" fill="rgb(244,30,14)"/><text x="58.5544%" y="1071.50"></text></g><g><title>core::mem::swap (56 samples, 0.63%)</title><rect x="58.6068%" y="1045" width="0.6272%" height="15" fill="rgb(249,174,6)"/><text x="58.8568%" y="1055.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (56 samples, 0.63%)</title><rect x="58.6068%" y="1029" width="0.6272%" height="15" fill="rgb(235,213,41)"/><text x="58.8568%" y="1039.50"></text></g><g><title>core::ptr::swap_nonoverlapping (56 samples, 0.63%)</title><rect x="58.6068%" y="1013" width="0.6272%" height="15" fill="rgb(213,118,6)"/><text x="58.8568%" y="1023.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (56 samples, 0.63%)</title><rect x="58.6068%" y="997" width="0.6272%" height="15" fill="rgb(235,44,51)"/><text x="58.8568%" y="1007.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (49 samples, 0.55%)</title><rect x="58.6852%" y="981" width="0.5488%" height="15" fill="rgb(217,9,53)"/><text x="58.9352%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (3 samples, 0.03%)</title><rect x="59.2788%" y="1045" width="0.0336%" height="15" fill="rgb(237,172,34)"/><text x="59.5288%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (3 samples, 0.03%)</title><rect x="59.2788%" y="1029" width="0.0336%" height="15" fill="rgb(206,206,11)"/><text x="59.5288%" y="1039.50"></text></g><g><title>tokio::runtime::task::harness::set_join_waker (4 samples, 0.04%)</title><rect x="59.2788%" y="1093" width="0.0448%" height="15" fill="rgb(214,149,29)"/><text x="59.5288%" y="1103.50"></text></g><g><title>tokio::runtime::task::state::State::set_join_waker (4 samples, 0.04%)</title><rect x="59.2788%" y="1077" width="0.0448%" height="15" fill="rgb(208,123,3)"/><text x="59.5288%" y="1087.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update (4 samples, 0.04%)</title><rect x="59.2788%" y="1061" width="0.0448%" height="15" fill="rgb(229,126,4)"/><text x="59.5288%" y="1071.50"></text></g><g><title>tokio::runtime::task::state::State::set_join_waker::{{closure}} (1 samples, 0.01%)</title><rect x="59.3124%" y="1045" width="0.0112%" height="15" fill="rgb(222,92,36)"/><text x="59.5624%" y="1055.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::is_join_interested (1 samples, 0.01%)</title><rect x="59.3124%" y="1029" width="0.0112%" height="15" fill="rgb(216,39,41)"/><text x="59.5624%" y="1039.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::is_complete (1 samples, 0.01%)</title><rect x="59.3236%" y="1093" width="0.0112%" height="15" fill="rgb(253,127,28)"/><text x="59.5736%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (115 samples, 1.29%)</title><rect x="58.0804%" y="1237" width="1.2879%" height="15" fill="rgb(249,152,51)"/><text x="58.3304%" y="1247.50"></text></g><g><title>rho_runtime::run::{{closure}}::{{closure}} (115 samples, 1.29%)</title><rect x="58.0804%" y="1221" width="1.2879%" height="15" fill="rgb(209,123,42)"/><text x="58.3304%" y="1231.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (115 samples, 1.29%)</title><rect x="58.0804%" y="1205" width="1.2879%" height="15" fill="rgb(241,118,22)"/><text x="58.3304%" y="1215.50"></text></g><g><title>rho_runtime::test::{{closure}} (115 samples, 1.29%)</title><rect x="58.0804%" y="1189" width="1.2879%" height="15" fill="rgb(208,25,7)"/><text x="58.3304%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (115 samples, 1.29%)</title><rect x="58.0804%" y="1173" width="1.2879%" height="15" fill="rgb(243,144,39)"/><text x="58.3304%" y="1183.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::evaludate::{{closure}} (115 samples, 1.29%)</title><rect x="58.0804%" y="1157" width="1.2879%" height="15" fill="rgb(250,50,5)"/><text x="58.3304%" y="1167.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (115 samples, 1.29%)</title><rect x="58.0804%" y="1141" width="1.2879%" height="15" fill="rgb(207,67,11)"/><text x="58.3304%" y="1151.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::try_read_output (115 samples, 1.29%)</title><rect x="58.0804%" y="1125" width="1.2879%" height="15" fill="rgb(245,204,40)"/><text x="58.3304%" y="1135.50"></text></g><g><title>tokio::runtime::task::harness::can_read_output (12 samples, 0.13%)</title><rect x="59.2340%" y="1109" width="0.1344%" height="15" fill="rgb(238,228,24)"/><text x="59.4840%" y="1119.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (3 samples, 0.03%)</title><rect x="59.3348%" y="1093" width="0.0336%" height="15" fill="rgb(217,116,22)"/><text x="59.5848%" y="1103.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (3 samples, 0.03%)</title><rect x="59.3348%" y="1077" width="0.0336%" height="15" fill="rgb(234,98,12)"/><text x="59.5848%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3 samples, 0.03%)</title><rect x="59.3348%" y="1061" width="0.0336%" height="15" fill="rgb(242,170,50)"/><text x="59.5848%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.03%)</title><rect x="59.3348%" y="1045" width="0.0336%" height="15" fill="rgb(235,7,5)"/><text x="59.5848%" y="1055.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="59.4803%" y="1077" width="0.0112%" height="15" fill="rgb(241,114,28)"/><text x="59.7303%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (2 samples, 0.02%)</title><rect x="59.4915%" y="1077" width="0.0224%" height="15" fill="rgb(246,112,42)"/><text x="59.7415%" y="1087.50"></text></g><g><title>core::ptr::read (2 samples, 0.02%)</title><rect x="59.4915%" y="1061" width="0.0224%" height="15" fill="rgb(248,228,14)"/><text x="59.7415%" y="1071.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="59.4915%" y="1045" width="0.0224%" height="15" fill="rgb(208,133,18)"/><text x="59.7415%" y="1055.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (6 samples, 0.07%)</title><rect x="59.4579%" y="1125" width="0.0672%" height="15" fill="rgb(207,35,49)"/><text x="59.7079%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.07%)</title><rect x="59.4579%" y="1109" width="0.0672%" height="15" fill="rgb(205,68,36)"/><text x="59.7079%" y="1119.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate::{{closure}} (6 samples, 0.07%)</title><rect x="59.4579%" y="1093" width="0.0672%" height="15" fill="rgb(245,62,40)"/><text x="59.7079%" y="1103.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::may_raise_aborted_error (1 samples, 0.01%)</title><rect x="59.5139%" y="1077" width="0.0112%" height="15" fill="rgb(228,27,24)"/><text x="59.7639%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (1 samples, 0.01%)</title><rect x="59.5139%" y="1061" width="0.0112%" height="15" fill="rgb(253,19,12)"/><text x="59.7639%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="59.5139%" y="1045" width="0.0112%" height="15" fill="rgb(232,28,20)"/><text x="59.7639%" y="1055.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.12%)</title><rect x="59.5251%" y="1093" width="0.1232%" height="15" fill="rgb(218,35,51)"/><text x="59.7751%" y="1103.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_nested_expressions (21 samples, 0.24%)</title><rect x="59.5251%" y="1125" width="0.2352%" height="15" fill="rgb(212,90,40)"/><text x="59.7751%" y="1135.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (21 samples, 0.24%)</title><rect x="59.5251%" y="1109" width="0.2352%" height="15" fill="rgb(220,172,12)"/><text x="59.7751%" y="1119.50"></text></g><g><title>alloc::alloc::exchange_malloc (10 samples, 0.11%)</title><rect x="59.6483%" y="1093" width="0.1120%" height="15" fill="rgb(226,159,20)"/><text x="59.8983%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.11%)</title><rect x="59.6483%" y="1077" width="0.1120%" height="15" fill="rgb(234,205,16)"/><text x="59.8983%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.11%)</title><rect x="59.6483%" y="1061" width="0.1120%" height="15" fill="rgb(207,9,39)"/><text x="59.8983%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.11%)</title><rect x="59.6483%" y="1045" width="0.1120%" height="15" fill="rgb(249,143,15)"/><text x="59.8983%" y="1055.50"></text></g><g><title>__libc_malloc (10 samples, 0.11%)</title><rect x="59.6483%" y="1029" width="0.1120%" height="15" fill="rgb(253,133,29)"/><text x="59.8983%" y="1039.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.07%)</title><rect x="59.6931%" y="1013" width="0.0672%" height="15" fill="rgb(221,187,0)"/><text x="59.9431%" y="1023.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="59.7491%" y="997" width="0.0112%" height="15" fill="rgb(205,204,26)"/><text x="59.9991%" y="1007.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="59.7603%" y="1125" width="0.0224%" height="15" fill="rgb(224,68,54)"/><text x="60.0103%" y="1135.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="59.7827%" y="1125" width="0.0112%" height="15" fill="rgb(209,67,4)"/><text x="60.0327%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (4 samples, 0.04%)</title><rect x="59.7939%" y="1125" width="0.0448%" height="15" fill="rgb(228,229,18)"/><text x="60.0439%" y="1135.50"></text></g><g><title>core::mem::take (4 samples, 0.04%)</title><rect x="59.7939%" y="1109" width="0.0448%" height="15" fill="rgb(231,89,13)"/><text x="60.0439%" y="1119.50"></text></g><g><title>core::mem::replace (4 samples, 0.04%)</title><rect x="59.7939%" y="1093" width="0.0448%" height="15" fill="rgb(210,182,18)"/><text x="60.0439%" y="1103.50"></text></g><g><title>core::mem::swap (3 samples, 0.03%)</title><rect x="59.8051%" y="1077" width="0.0336%" height="15" fill="rgb(240,105,2)"/><text x="60.0551%" y="1087.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (3 samples, 0.03%)</title><rect x="59.8051%" y="1061" width="0.0336%" height="15" fill="rgb(207,170,50)"/><text x="60.0551%" y="1071.50"></text></g><g><title>core::ptr::swap_nonoverlapping (3 samples, 0.03%)</title><rect x="59.8051%" y="1045" width="0.0336%" height="15" fill="rgb(232,133,24)"/><text x="60.0551%" y="1055.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (3 samples, 0.03%)</title><rect x="59.8051%" y="1029" width="0.0336%" height="15" fill="rgb(235,166,27)"/><text x="60.0551%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.03%)</title><rect x="59.8051%" y="1013" width="0.0336%" height="15" fill="rgb(209,19,13)"/><text x="60.0551%" y="1023.50"></text></g><g><title>alloc::alloc::box_free (5 samples, 0.06%)</title><rect x="59.8387%" y="1093" width="0.0560%" height="15" fill="rgb(226,79,39)"/><text x="60.0887%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.06%)</title><rect x="59.8387%" y="1077" width="0.0560%" height="15" fill="rgb(222,163,10)"/><text x="60.0887%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.06%)</title><rect x="59.8387%" y="1061" width="0.0560%" height="15" fill="rgb(214,44,19)"/><text x="60.0887%" y="1071.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.06%)</title><rect x="59.8387%" y="1045" width="0.0560%" height="15" fill="rgb(210,217,13)"/><text x="60.0887%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (6 samples, 0.07%)</title><rect x="59.8387%" y="1125" width="0.0672%" height="15" fill="rgb(237,61,54)"/><text x="60.0887%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (6 samples, 0.07%)</title><rect x="59.8387%" y="1109" width="0.0672%" height="15" fill="rgb(226,184,24)"/><text x="60.0887%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;rho_runtime::storage::coordinator::AsyncStore&gt;&gt;::evaluate_nested_expressions::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="59.8947%" y="1093" width="0.0112%" height="15" fill="rgb(223,226,4)"/><text x="60.1447%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;rho_runtime::storage::coordinator::AsyncStore&gt;&gt;::evaluate_nested_expressions::{{closure}}&gt; (1 samples, 0.01%)</title><rect x="59.8947%" y="1077" width="0.0112%" height="15" fill="rgb(210,26,41)"/><text x="60.1447%" y="1087.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="59.9171%" y="1029" width="0.0336%" height="15" fill="rgb(220,221,6)"/><text x="60.1671%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (5 samples, 0.06%)</title><rect x="59.9059%" y="1125" width="0.0560%" height="15" fill="rgb(225,89,49)"/><text x="60.1559%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Send&gt;&gt; (5 samples, 0.06%)</title><rect x="59.9059%" y="1109" width="0.0560%" height="15" fill="rgb(218,70,45)"/><text x="60.1559%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Send&gt;&gt; (5 samples, 0.06%)</title><rect x="59.9059%" y="1093" width="0.0560%" height="15" fill="rgb(238,166,21)"/><text x="60.1559%" y="1103.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.06%)</title><rect x="59.9059%" y="1077" width="0.0560%" height="15" fill="rgb(224,141,44)"/><text x="60.1559%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.06%)</title><rect x="59.9059%" y="1061" width="0.0560%" height="15" fill="rgb(230,12,49)"/><text x="60.1559%" y="1071.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.04%)</title><rect x="59.9171%" y="1045" width="0.0448%" height="15" fill="rgb(212,174,12)"/><text x="60.1671%" y="1055.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="59.9507%" y="1029" width="0.0112%" height="15" fill="rgb(246,67,9)"/><text x="60.2007%" y="1039.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate (2 samples, 0.02%)</title><rect x="59.9619%" y="1125" width="0.0224%" height="15" fill="rgb(239,35,23)"/><text x="60.2119%" y="1135.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (2 samples, 0.02%)</title><rect x="59.9619%" y="1109" width="0.0224%" height="15" fill="rgb(211,167,0)"/><text x="60.2119%" y="1119.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.02%)</title><rect x="59.9619%" y="1093" width="0.0224%" height="15" fill="rgb(225,119,45)"/><text x="60.2119%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="59.9619%" y="1077" width="0.0224%" height="15" fill="rgb(210,162,6)"/><text x="60.2119%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="59.9619%" y="1061" width="0.0224%" height="15" fill="rgb(208,118,35)"/><text x="60.2119%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="59.9619%" y="1045" width="0.0224%" height="15" fill="rgb(239,4,53)"/><text x="60.2119%" y="1055.50"></text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="59.9619%" y="1029" width="0.0224%" height="15" fill="rgb(213,130,21)"/><text x="60.2119%" y="1039.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_match::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Match&gt;::evaluate::{{closure}} (59 samples, 0.66%)</title><rect x="59.3684%" y="1141" width="0.6608%" height="15" fill="rgb(235,148,0)"/><text x="59.6184%" y="1151.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute (4 samples, 0.04%)</title><rect x="59.9843%" y="1125" width="0.0448%" height="15" fill="rgb(244,224,18)"/><text x="60.2343%" y="1135.50"></text></g><g><title>model::ordering::sort_par::&lt;impl model::ordering::Sortable for model::rho_types::Par&gt;::sort (3 samples, 0.03%)</title><rect x="59.9955%" y="1109" width="0.0336%" height="15" fill="rgb(211,214,4)"/><text x="60.2455%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by (2 samples, 0.02%)</title><rect x="60.0067%" y="1093" width="0.0224%" height="15" fill="rgb(206,119,25)"/><text x="60.2567%" y="1103.50"></text></g><g><title>alloc::slice::merge_sort (2 samples, 0.02%)</title><rect x="60.0067%" y="1077" width="0.0224%" height="15" fill="rgb(243,93,47)"/><text x="60.2567%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="60.0291%" y="917" width="0.0112%" height="15" fill="rgb(224,194,6)"/><text x="60.2791%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="60.0403%" y="869" width="0.0112%" height="15" fill="rgb(243,229,6)"/><text x="60.2903%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="60.0403%" y="853" width="0.0112%" height="15" fill="rgb(207,23,50)"/><text x="60.2903%" y="863.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="60.0403%" y="837" width="0.0112%" height="15" fill="rgb(253,192,32)"/><text x="60.2903%" y="847.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="60.0627%" y="837" width="0.0112%" height="15" fill="rgb(213,21,6)"/><text x="60.3127%" y="847.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="60.0627%" y="853" width="0.0336%" height="15" fill="rgb(243,151,13)"/><text x="60.3127%" y="863.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="60.0739%" y="837" width="0.0224%" height="15" fill="rgb(233,165,41)"/><text x="60.3239%" y="847.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (9 samples, 0.10%)</title><rect x="60.0515%" y="869" width="0.1008%" height="15" fill="rgb(246,176,45)"/><text x="60.3015%" y="879.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.06%)</title><rect x="60.0963%" y="853" width="0.0560%" height="15" fill="rgb(217,170,52)"/><text x="60.3463%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.01%)</title><rect x="60.1523%" y="869" width="0.0112%" height="15" fill="rgb(214,203,54)"/><text x="60.4023%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="60.1635%" y="869" width="0.0224%" height="15" fill="rgb(248,215,49)"/><text x="60.4135%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="60.1635%" y="853" width="0.0224%" height="15" fill="rgb(208,46,10)"/><text x="60.4135%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="60.1635%" y="837" width="0.0224%" height="15" fill="rgb(254,5,31)"/><text x="60.4135%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (1 samples, 0.01%)</title><rect x="60.1747%" y="821" width="0.0112%" height="15" fill="rgb(222,104,33)"/><text x="60.4247%" y="831.50"></text></g><g><title>&lt;rho_runtime::interpreter::reduce::environment::Env&lt;T&gt; as core::clone::Clone&gt;::clone (17 samples, 0.19%)</title><rect x="60.0291%" y="1109" width="0.1904%" height="15" fill="rgb(248,49,16)"/><text x="60.2791%" y="1119.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.19%)</title><rect x="60.0291%" y="1093" width="0.1904%" height="15" fill="rgb(232,198,41)"/><text x="60.2791%" y="1103.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::convert::From&lt;&amp;[&lt;A as smallvec::Array&gt;::Item]&gt;&gt;::from (17 samples, 0.19%)</title><rect x="60.0291%" y="1077" width="0.1904%" height="15" fill="rgb(214,125,3)"/><text x="60.2791%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (17 samples, 0.19%)</title><rect x="60.0291%" y="1061" width="0.1904%" height="15" fill="rgb(229,220,28)"/><text x="60.2791%" y="1071.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (17 samples, 0.19%)</title><rect x="60.0291%" y="1045" width="0.1904%" height="15" fill="rgb(222,64,37)"/><text x="60.2791%" y="1055.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (17 samples, 0.19%)</title><rect x="60.0291%" y="1029" width="0.1904%" height="15" fill="rgb(249,184,13)"/><text x="60.2791%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.19%)</title><rect x="60.0291%" y="1013" width="0.1904%" height="15" fill="rgb(252,176,6)"/><text x="60.2791%" y="1023.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (17 samples, 0.19%)</title><rect x="60.0291%" y="997" width="0.1904%" height="15" fill="rgb(228,153,7)"/><text x="60.2791%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (17 samples, 0.19%)</title><rect x="60.0291%" y="981" width="0.1904%" height="15" fill="rgb(242,193,5)"/><text x="60.2791%" y="991.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (17 samples, 0.19%)</title><rect x="60.0291%" y="965" width="0.1904%" height="15" fill="rgb(232,140,9)"/><text x="60.2791%" y="975.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (17 samples, 0.19%)</title><rect x="60.0291%" y="949" width="0.1904%" height="15" fill="rgb(213,222,16)"/><text x="60.2791%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.19%)</title><rect x="60.0291%" y="933" width="0.1904%" height="15" fill="rgb(222,75,50)"/><text x="60.2791%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16 samples, 0.18%)</title><rect x="60.0403%" y="917" width="0.1792%" height="15" fill="rgb(205,180,2)"/><text x="60.2903%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (16 samples, 0.18%)</title><rect x="60.0403%" y="901" width="0.1792%" height="15" fill="rgb(216,34,7)"/><text x="60.2903%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16 samples, 0.18%)</title><rect x="60.0403%" y="885" width="0.1792%" height="15" fill="rgb(253,16,32)"/><text x="60.2903%" y="895.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3 samples, 0.03%)</title><rect x="60.1859%" y="869" width="0.0336%" height="15" fill="rgb(208,97,28)"/><text x="60.4359%" y="879.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="60.2083%" y="853" width="0.0112%" height="15" fill="rgb(225,92,11)"/><text x="60.4583%" y="863.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.04%)</title><rect x="60.2195%" y="1093" width="0.0448%" height="15" fill="rgb(243,38,12)"/><text x="60.4695%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::spawner::Spawner&gt; (2 samples, 0.02%)</title><rect x="60.2643%" y="1093" width="0.0224%" height="15" fill="rgb(208,139,16)"/><text x="60.5143%" y="1103.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (1 samples, 0.01%)</title><rect x="60.2867%" y="1045" width="0.0112%" height="15" fill="rgb(227,24,9)"/><text x="60.5367%" y="1055.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="60.2867%" y="1029" width="0.0112%" height="15" fill="rgb(206,62,11)"/><text x="60.5367%" y="1039.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (87 samples, 0.97%)</title><rect x="59.3684%" y="1237" width="0.9744%" height="15" fill="rgb(228,134,27)"/><text x="59.6184%" y="1247.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (87 samples, 0.97%)</title><rect x="59.3684%" y="1221" width="0.9744%" height="15" fill="rgb(205,55,33)"/><text x="59.6184%" y="1231.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (87 samples, 0.97%)</title><rect x="59.3684%" y="1205" width="0.9744%" height="15" fill="rgb(243,75,43)"/><text x="59.6184%" y="1215.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation::{{closure}} (87 samples, 0.97%)</title><rect x="59.3684%" y="1189" width="0.9744%" height="15" fill="rgb(223,27,42)"/><text x="59.6184%" y="1199.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (87 samples, 0.97%)</title><rect x="59.3684%" y="1173" width="0.9744%" height="15" fill="rgb(232,189,33)"/><text x="59.6184%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (87 samples, 0.97%)</title><rect x="59.3684%" y="1157" width="0.9744%" height="15" fill="rgb(210,9,39)"/><text x="59.6184%" y="1167.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate::{{closure}} (28 samples, 0.31%)</title><rect x="60.0291%" y="1141" width="0.3136%" height="15" fill="rgb(242,85,26)"/><text x="60.2791%" y="1151.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation (28 samples, 0.31%)</title><rect x="60.0291%" y="1125" width="0.3136%" height="15" fill="rgb(248,44,4)"/><text x="60.2791%" y="1135.50"></text></g><g><title>tokio::task::spawn::spawn (11 samples, 0.12%)</title><rect x="60.2195%" y="1109" width="0.1232%" height="15" fill="rgb(250,96,46)"/><text x="60.4695%" y="1119.50"></text></g><g><title>tokio::runtime::context::spawn_handle (5 samples, 0.06%)</title><rect x="60.2867%" y="1093" width="0.0560%" height="15" fill="rgb(229,116,26)"/><text x="60.5367%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.06%)</title><rect x="60.2867%" y="1077" width="0.0560%" height="15" fill="rgb(246,94,34)"/><text x="60.5367%" y="1087.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.06%)</title><rect x="60.2867%" y="1061" width="0.0560%" height="15" fill="rgb(251,73,21)"/><text x="60.5367%" y="1071.50"></text></g><g><title>tokio::runtime::context::spawn_handle::{{closure}} (4 samples, 0.04%)</title><rect x="60.2979%" y="1045" width="0.0448%" height="15" fill="rgb(254,121,25)"/><text x="60.5479%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.04%)</title><rect x="60.2979%" y="1029" width="0.0448%" height="15" fill="rgb(215,161,49)"/><text x="60.5479%" y="1039.50"></text></g><g><title>tokio::runtime::context::spawn_handle::{{closure}}::{{closure}} (4 samples, 0.04%)</title><rect x="60.2979%" y="1013" width="0.0448%" height="15" fill="rgb(221,43,13)"/><text x="60.5479%" y="1023.50"></text></g><g><title>&lt;tokio::runtime::spawner::Spawner as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="60.2979%" y="997" width="0.0448%" height="15" fill="rgb(249,5,37)"/><text x="60.5479%" y="1007.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (205 samples, 2.30%)</title><rect x="58.0580%" y="1349" width="2.2959%" height="15" fill="rgb(226,25,44)"/><text x="58.3080%" y="1359.50">t..</text></g><g><title>std::panic::catch_unwind (204 samples, 2.28%)</title><rect x="58.0692%" y="1333" width="2.2847%" height="15" fill="rgb(238,189,16)"/><text x="58.3192%" y="1343.50">s..</text></g><g><title>std::panicking::try (204 samples, 2.28%)</title><rect x="58.0692%" y="1317" width="2.2847%" height="15" fill="rgb(251,186,8)"/><text x="58.3192%" y="1327.50">s..</text></g><g><title>std::panicking::try::do_call (204 samples, 2.28%)</title><rect x="58.0692%" y="1301" width="2.2847%" height="15" fill="rgb(254,34,31)"/><text x="58.3192%" y="1311.50">s..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (204 samples, 2.28%)</title><rect x="58.0692%" y="1285" width="2.2847%" height="15" fill="rgb(225,215,27)"/><text x="58.3192%" y="1295.50">&lt;..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (204 samples, 2.28%)</title><rect x="58.0692%" y="1269" width="2.2847%" height="15" fill="rgb(221,192,48)"/><text x="58.3192%" y="1279.50">t..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (204 samples, 2.28%)</title><rect x="58.0692%" y="1253" width="2.2847%" height="15" fill="rgb(219,137,20)"/><text x="58.3192%" y="1263.50">t..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::drop_future_or_output (1 samples, 0.01%)</title><rect x="60.3427%" y="1237" width="0.0112%" height="15" fill="rgb(219,84,11)"/><text x="60.5927%" y="1247.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::set_stage (1 samples, 0.01%)</title><rect x="60.3427%" y="1221" width="0.0112%" height="15" fill="rgb(224,10,23)"/><text x="60.5927%" y="1231.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.01%)</title><rect x="60.3427%" y="1205" width="0.0112%" height="15" fill="rgb(248,22,39)"/><text x="60.5927%" y="1215.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::set_stage::{{closure}} (1 samples, 0.01%)</title><rect x="60.3427%" y="1189" width="0.0112%" height="15" fill="rgb(212,154,20)"/><text x="60.5927%" y="1199.50"></text></g><g><title>tokio::runtime::task::raw::drop_join_handle_slow (3 samples, 0.03%)</title><rect x="60.3539%" y="1349" width="0.0336%" height="15" fill="rgb(236,199,50)"/><text x="60.6039%" y="1359.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (2 samples, 0.02%)</title><rect x="60.3651%" y="1333" width="0.0224%" height="15" fill="rgb(211,9,17)"/><text x="60.6151%" y="1343.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (2 samples, 0.02%)</title><rect x="60.3651%" y="1317" width="0.0224%" height="15" fill="rgb(243,216,36)"/><text x="60.6151%" y="1327.50"></text></g><g><title>alloc::slice::merge_sort (1 samples, 0.01%)</title><rect x="60.3763%" y="1301" width="0.0112%" height="15" fill="rgb(250,2,10)"/><text x="60.6263%" y="1311.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::is_join_interested (1 samples, 0.01%)</title><rect x="60.3875%" y="1349" width="0.0112%" height="15" fill="rgb(226,50,48)"/><text x="60.6375%" y="1359.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (2 samples, 0.02%)</title><rect x="60.3987%" y="1349" width="0.0224%" height="15" fill="rgb(243,81,16)"/><text x="60.6487%" y="1359.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (1 samples, 0.01%)</title><rect x="60.4211%" y="1349" width="0.0112%" height="15" fill="rgb(250,14,2)"/><text x="60.6711%" y="1359.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (4 samples, 0.04%)</title><rect x="60.4323%" y="1349" width="0.0448%" height="15" fill="rgb(233,135,29)"/><text x="60.6823%" y="1359.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::release (1 samples, 0.01%)</title><rect x="60.4771%" y="1349" width="0.0112%" height="15" fill="rgb(224,64,43)"/><text x="60.7271%" y="1359.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::schedule (3 samples, 0.03%)</title><rect x="60.4883%" y="1349" width="0.0336%" height="15" fill="rgb(238,84,13)"/><text x="60.7383%" y="1359.50"></text></g><g><title>tokio::runtime::thread_pool::worker::CURRENT::FOO::__getit (1 samples, 0.01%)</title><rect x="60.5219%" y="1349" width="0.0112%" height="15" fill="rgb(253,48,26)"/><text x="60.7719%" y="1359.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="60.5443%" y="773" width="0.0224%" height="15" fill="rgb(205,223,31)"/><text x="60.7943%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="60.5891%" y="741" width="0.0224%" height="15" fill="rgb(221,41,32)"/><text x="60.8391%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="60.5891%" y="725" width="0.0224%" height="15" fill="rgb(213,158,31)"/><text x="60.8391%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="60.6003%" y="709" width="0.0112%" height="15" fill="rgb(245,126,43)"/><text x="60.8503%" y="719.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (8 samples, 0.09%)</title><rect x="60.5331%" y="1349" width="0.0896%" height="15" fill="rgb(227,7,22)"/><text x="60.7831%" y="1359.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (8 samples, 0.09%)</title><rect x="60.5331%" y="1333" width="0.0896%" height="15" fill="rgb(252,90,44)"/><text x="60.7831%" y="1343.50"></text></g><g><title>tokio::coop::budget (8 samples, 0.09%)</title><rect x="60.5331%" y="1317" width="0.0896%" height="15" fill="rgb(253,91,0)"/><text x="60.7831%" y="1327.50"></text></g><g><title>tokio::coop::with_budget (8 samples, 0.09%)</title><rect x="60.5331%" y="1301" width="0.0896%" height="15" fill="rgb(252,175,49)"/><text x="60.7831%" y="1311.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8 samples, 0.09%)</title><rect x="60.5331%" y="1285" width="0.0896%" height="15" fill="rgb(246,150,1)"/><text x="60.7831%" y="1295.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8 samples, 0.09%)</title><rect x="60.5331%" y="1269" width="0.0896%" height="15" fill="rgb(241,192,25)"/><text x="60.7831%" y="1279.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (8 samples, 0.09%)</title><rect x="60.5331%" y="1253" width="0.0896%" height="15" fill="rgb(239,187,11)"/><text x="60.7831%" y="1263.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (8 samples, 0.09%)</title><rect x="60.5331%" y="1237" width="0.0896%" height="15" fill="rgb(218,202,51)"/><text x="60.7831%" y="1247.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (8 samples, 0.09%)</title><rect x="60.5331%" y="1221" width="0.0896%" height="15" fill="rgb(225,176,8)"/><text x="60.7831%" y="1231.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (8 samples, 0.09%)</title><rect x="60.5331%" y="1205" width="0.0896%" height="15" fill="rgb(219,122,41)"/><text x="60.7831%" y="1215.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (8 samples, 0.09%)</title><rect x="60.5331%" y="1189" width="0.0896%" height="15" fill="rgb(248,140,20)"/><text x="60.7831%" y="1199.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (8 samples, 0.09%)</title><rect x="60.5331%" y="1173" width="0.0896%" height="15" fill="rgb(245,41,37)"/><text x="60.7831%" y="1183.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (8 samples, 0.09%)</title><rect x="60.5331%" y="1157" width="0.0896%" height="15" fill="rgb(235,82,39)"/><text x="60.7831%" y="1167.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.09%)</title><rect x="60.5331%" y="1141" width="0.0896%" height="15" fill="rgb(230,108,42)"/><text x="60.7831%" y="1151.50"></text></g><g><title>std::panicking::try (8 samples, 0.09%)</title><rect x="60.5331%" y="1125" width="0.0896%" height="15" fill="rgb(215,150,50)"/><text x="60.7831%" y="1135.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 0.09%)</title><rect x="60.5331%" y="1109" width="0.0896%" height="15" fill="rgb(233,212,5)"/><text x="60.7831%" y="1119.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (8 samples, 0.09%)</title><rect x="60.5331%" y="1093" width="0.0896%" height="15" fill="rgb(245,80,22)"/><text x="60.7831%" y="1103.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (8 samples, 0.09%)</title><rect x="60.5331%" y="1077" width="0.0896%" height="15" fill="rgb(238,129,16)"/><text x="60.7831%" y="1087.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (8 samples, 0.09%)</title><rect x="60.5331%" y="1061" width="0.0896%" height="15" fill="rgb(240,19,0)"/><text x="60.7831%" y="1071.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (8 samples, 0.09%)</title><rect x="60.5331%" y="1045" width="0.0896%" height="15" fill="rgb(232,42,35)"/><text x="60.7831%" y="1055.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (8 samples, 0.09%)</title><rect x="60.5331%" y="1029" width="0.0896%" height="15" fill="rgb(223,130,24)"/><text x="60.7831%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.09%)</title><rect x="60.5331%" y="1013" width="0.0896%" height="15" fill="rgb(237,16,22)"/><text x="60.7831%" y="1023.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation::{{closure}} (8 samples, 0.09%)</title><rect x="60.5331%" y="997" width="0.0896%" height="15" fill="rgb(248,192,20)"/><text x="60.7831%" y="1007.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (8 samples, 0.09%)</title><rect x="60.5331%" y="981" width="0.0896%" height="15" fill="rgb(233,167,2)"/><text x="60.7831%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.09%)</title><rect x="60.5331%" y="965" width="0.0896%" height="15" fill="rgb(252,71,44)"/><text x="60.7831%" y="975.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate::{{closure}} (8 samples, 0.09%)</title><rect x="60.5331%" y="949" width="0.0896%" height="15" fill="rgb(238,37,47)"/><text x="60.7831%" y="959.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation (8 samples, 0.09%)</title><rect x="60.5331%" y="933" width="0.0896%" height="15" fill="rgb(214,202,54)"/><text x="60.7831%" y="943.50"></text></g><g><title>&lt;rho_runtime::interpreter::reduce::environment::Env&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.09%)</title><rect x="60.5331%" y="917" width="0.0896%" height="15" fill="rgb(254,165,40)"/><text x="60.7831%" y="927.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.09%)</title><rect x="60.5331%" y="901" width="0.0896%" height="15" fill="rgb(246,173,38)"/><text x="60.7831%" y="911.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::convert::From&lt;&amp;[&lt;A as smallvec::Array&gt;::Item]&gt;&gt;::from (8 samples, 0.09%)</title><rect x="60.5331%" y="885" width="0.0896%" height="15" fill="rgb(215,3,27)"/><text x="60.7831%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.09%)</title><rect x="60.5331%" y="869" width="0.0896%" height="15" fill="rgb(239,169,51)"/><text x="60.7831%" y="879.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (8 samples, 0.09%)</title><rect x="60.5331%" y="853" width="0.0896%" height="15" fill="rgb(212,5,25)"/><text x="60.7831%" y="863.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (8 samples, 0.09%)</title><rect x="60.5331%" y="837" width="0.0896%" height="15" fill="rgb(243,45,17)"/><text x="60.7831%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.09%)</title><rect x="60.5331%" y="821" width="0.0896%" height="15" fill="rgb(242,97,9)"/><text x="60.7831%" y="831.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (8 samples, 0.09%)</title><rect x="60.5331%" y="805" width="0.0896%" height="15" fill="rgb(228,71,31)"/><text x="60.7831%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8 samples, 0.09%)</title><rect x="60.5331%" y="789" width="0.0896%" height="15" fill="rgb(252,184,16)"/><text x="60.7831%" y="799.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (5 samples, 0.06%)</title><rect x="60.5667%" y="773" width="0.0560%" height="15" fill="rgb(236,169,46)"/><text x="60.8167%" y="783.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="60.5667%" y="757" width="0.0560%" height="15" fill="rgb(207,17,47)"/><text x="60.8167%" y="767.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="60.6115%" y="741" width="0.0112%" height="15" fill="rgb(206,201,28)"/><text x="60.8615%" y="751.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="60.6115%" y="725" width="0.0112%" height="15" fill="rgb(224,184,23)"/><text x="60.8615%" y="735.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="60.6115%" y="709" width="0.0112%" height="15" fill="rgb(208,139,48)"/><text x="60.8615%" y="719.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (1 samples, 0.01%)</title><rect x="60.6227%" y="1349" width="0.0112%" height="15" fill="rgb(208,130,10)"/><text x="60.8727%" y="1359.50"></text></g><g><title>__sched_yield (2 samples, 0.02%)</title><rect x="60.7683%" y="1333" width="0.0224%" height="15" fill="rgb(211,213,45)"/><text x="61.0183%" y="1343.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="60.7683%" y="1317" width="0.0224%" height="15" fill="rgb(235,100,30)"/><text x="61.0183%" y="1327.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="60.7683%" y="1301" width="0.0224%" height="15" fill="rgb(206,144,31)"/><text x="61.0183%" y="1311.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="60.7683%" y="1285" width="0.0224%" height="15" fill="rgb(224,200,26)"/><text x="61.0183%" y="1295.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="60.7683%" y="1269" width="0.0224%" height="15" fill="rgb(247,104,53)"/><text x="61.0183%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="60.7795%" y="1253" width="0.0112%" height="15" fill="rgb(220,14,17)"/><text x="61.0295%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="60.7795%" y="1237" width="0.0112%" height="15" fill="rgb(230,140,40)"/><text x="61.0295%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="60.7795%" y="1221" width="0.0112%" height="15" fill="rgb(229,2,41)"/><text x="61.0295%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="60.7795%" y="1205" width="0.0112%" height="15" fill="rgb(232,89,16)"/><text x="61.0295%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="60.7795%" y="1189" width="0.0112%" height="15" fill="rgb(247,59,52)"/><text x="61.0295%" y="1199.50"></text></g><g><title>tokio::sync::mpsc::list::Tx&lt;T&gt;::find_block (15 samples, 0.17%)</title><rect x="60.6339%" y="1349" width="0.1680%" height="15" fill="rgb(226,110,21)"/><text x="60.8839%" y="1359.50"></text></g><g><title>tokio::sync::mpsc::block::Block&lt;T&gt;::tx_release (1 samples, 0.01%)</title><rect x="60.7907%" y="1333" width="0.0112%" height="15" fill="rgb(224,176,43)"/><text x="61.0407%" y="1343.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.01%)</title><rect x="60.7907%" y="1317" width="0.0112%" height="15" fill="rgb(221,73,6)"/><text x="61.0407%" y="1327.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.01%)</title><rect x="60.7907%" y="1301" width="0.0112%" height="15" fill="rgb(232,78,19)"/><text x="61.0407%" y="1311.50"></text></g><g><title>tokio::sync::oneshot::State::is_rx_task_set (1 samples, 0.01%)</title><rect x="60.8019%" y="1349" width="0.0112%" height="15" fill="rgb(233,112,48)"/><text x="61.0519%" y="1359.50"></text></g><g><title>tokio::sync::oneshot::State::is_tx_task_set (1 samples, 0.01%)</title><rect x="60.8131%" y="1349" width="0.0112%" height="15" fill="rgb(243,131,47)"/><text x="61.0631%" y="1359.50"></text></g><g><title>tokio::sync::oneshot::State::load (1 samples, 0.01%)</title><rect x="60.8243%" y="1349" width="0.0112%" height="15" fill="rgb(226,51,1)"/><text x="61.0743%" y="1359.50"></text></g><g><title>[unknown] (2,924 samples, 32.75%)</title><rect x="28.0995%" y="1365" width="32.7472%" height="15" fill="rgb(247,58,7)"/><text x="28.3495%" y="1375.50">[unknown]</text></g><g><title>tokio::sync::oneshot::Task::set_task (1 samples, 0.01%)</title><rect x="60.8355%" y="1349" width="0.0112%" height="15" fill="rgb(209,7,32)"/><text x="61.0855%" y="1359.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="60.8467%" y="1365" width="0.0112%" height="15" fill="rgb(209,39,41)"/><text x="61.0967%" y="1375.50"></text></g><g><title>alloc::slice::merge_sort (1 samples, 0.01%)</title><rect x="60.8579%" y="1365" width="0.0112%" height="15" fill="rgb(226,182,46)"/><text x="61.1079%" y="1375.50"></text></g><g><title>anon.559f3639b53aab27d50be2c5c9127678.129.llvm.15794184779910166883 (1 samples, 0.01%)</title><rect x="60.8691%" y="1365" width="0.0112%" height="15" fill="rgb(230,219,10)"/><text x="61.1191%" y="1375.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="60.8691%" y="1349" width="0.0112%" height="15" fill="rgb(227,175,30)"/><text x="61.1191%" y="1359.50"></text></g><g><title>anon.92bdd7158b348ec6a53a3806ba8785d2.39.llvm.10134101596241962889 (1 samples, 0.01%)</title><rect x="60.8803%" y="1365" width="0.0112%" height="15" fill="rgb(217,2,50)"/><text x="61.1303%" y="1375.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (1 samples, 0.01%)</title><rect x="60.8803%" y="1349" width="0.0112%" height="15" fill="rgb(229,160,0)"/><text x="61.1303%" y="1359.50"></text></g><g><title>anon.c55acc8c63e1b94af5529338c5583af3.57.llvm.18082355846333990039 (2 samples, 0.02%)</title><rect x="60.8915%" y="1365" width="0.0224%" height="15" fill="rgb(207,78,37)"/><text x="61.1415%" y="1375.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (2 samples, 0.02%)</title><rect x="60.8915%" y="1349" width="0.0224%" height="15" fill="rgb(225,57,0)"/><text x="61.1415%" y="1359.50"></text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (2 samples, 0.02%)</title><rect x="60.8915%" y="1333" width="0.0224%" height="15" fill="rgb(232,154,2)"/><text x="61.1415%" y="1343.50"></text></g><g><title>tokio::runtime::task::joinable (1 samples, 0.01%)</title><rect x="60.9027%" y="1317" width="0.0112%" height="15" fill="rgb(241,212,25)"/><text x="61.1527%" y="1327.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (1 samples, 0.01%)</title><rect x="60.9027%" y="1301" width="0.0112%" height="15" fill="rgb(226,69,20)"/><text x="61.1527%" y="1311.50"></text></g><g><title>__call_tls_dtors (1 samples, 0.01%)</title><rect x="60.9139%" y="1333" width="0.0112%" height="15" fill="rgb(247,184,54)"/><text x="61.1639%" y="1343.50"></text></g><g><title>prctl (1 samples, 0.01%)</title><rect x="60.9251%" y="1253" width="0.0112%" height="15" fill="rgb(210,145,0)"/><text x="61.1751%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="60.9251%" y="1237" width="0.0112%" height="15" fill="rgb(253,82,12)"/><text x="61.1751%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="60.9251%" y="1221" width="0.0112%" height="15" fill="rgb(245,42,11)"/><text x="61.1751%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="60.9251%" y="1205" width="0.0112%" height="15" fill="rgb(219,147,32)"/><text x="61.1751%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="60.9251%" y="1189" width="0.0112%" height="15" fill="rgb(246,12,7)"/><text x="61.1751%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="60.9251%" y="1173" width="0.0112%" height="15" fill="rgb(243,50,9)"/><text x="61.1751%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="60.9251%" y="1157" width="0.0112%" height="15" fill="rgb(219,149,6)"/><text x="61.1751%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="60.9251%" y="1141" width="0.0112%" height="15" fill="rgb(241,51,42)"/><text x="61.1751%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="60.9251%" y="1125" width="0.0112%" height="15" fill="rgb(226,128,27)"/><text x="61.1751%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="60.9251%" y="1109" width="0.0112%" height="15" fill="rgb(244,144,4)"/><text x="61.1751%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="60.9251%" y="1093" width="0.0112%" height="15" fill="rgb(221,4,13)"/><text x="61.1751%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="60.9251%" y="1077" width="0.0112%" height="15" fill="rgb(208,170,28)"/><text x="61.1751%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="60.9251%" y="1061" width="0.0112%" height="15" fill="rgb(226,131,13)"/><text x="61.1751%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="60.9251%" y="1045" width="0.0112%" height="15" fill="rgb(215,72,41)"/><text x="61.1751%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="60.9251%" y="1029" width="0.0112%" height="15" fill="rgb(243,108,20)"/><text x="61.1751%" y="1039.50"></text></g><g><title>core::mem::drop (1 samples, 0.01%)</title><rect x="60.9363%" y="1125" width="0.0112%" height="15" fill="rgb(230,189,17)"/><text x="61.1863%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::blocking::pool::Shared&gt;&gt; (1 samples, 0.01%)</title><rect x="60.9363%" y="1109" width="0.0112%" height="15" fill="rgb(220,50,17)"/><text x="61.1863%" y="1119.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="60.9363%" y="1093" width="0.0112%" height="15" fill="rgb(248,152,48)"/><text x="61.1863%" y="1103.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.01%)</title><rect x="60.9363%" y="1077" width="0.0112%" height="15" fill="rgb(244,91,11)"/><text x="61.1863%" y="1087.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (1 samples, 0.01%)</title><rect x="60.9363%" y="1061" width="0.0112%" height="15" fill="rgb(220,157,5)"/><text x="61.1863%" y="1071.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_one (1 samples, 0.01%)</title><rect x="60.9363%" y="1045" width="0.0112%" height="15" fill="rgb(253,137,8)"/><text x="61.1863%" y="1055.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (1 samples, 0.01%)</title><rect x="60.9363%" y="1029" width="0.0112%" height="15" fill="rgb(217,137,51)"/><text x="61.1863%" y="1039.50"></text></g><g><title>syscall (1 samples, 0.01%)</title><rect x="60.9363%" y="1013" width="0.0112%" height="15" fill="rgb(218,209,53)"/><text x="61.1863%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="60.9363%" y="997" width="0.0112%" height="15" fill="rgb(249,137,25)"/><text x="61.1863%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="60.9363%" y="981" width="0.0112%" height="15" fill="rgb(239,155,26)"/><text x="61.1863%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="60.9363%" y="965" width="0.0112%" height="15" fill="rgb(227,85,46)"/><text x="61.1863%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="60.9363%" y="949" width="0.0112%" height="15" fill="rgb(251,107,43)"/><text x="61.1863%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="60.9363%" y="933" width="0.0112%" height="15" fill="rgb(234,170,33)"/><text x="61.1863%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="60.9363%" y="917" width="0.0112%" height="15" fill="rgb(206,29,35)"/><text x="61.1863%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="60.9363%" y="901" width="0.0112%" height="15" fill="rgb(227,138,25)"/><text x="61.1863%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="60.9363%" y="885" width="0.0112%" height="15" fill="rgb(249,131,35)"/><text x="61.1863%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="60.9363%" y="869" width="0.0112%" height="15" fill="rgb(239,6,40)"/><text x="61.1863%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="60.9363%" y="853" width="0.0112%" height="15" fill="rgb(246,136,47)"/><text x="61.1863%" y="863.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait_timeout (7 samples, 0.08%)</title><rect x="60.9475%" y="1125" width="0.0784%" height="15" fill="rgb(253,58,26)"/><text x="61.1975%" y="1135.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_for (7 samples, 0.08%)</title><rect x="60.9475%" y="1109" width="0.0784%" height="15" fill="rgb(237,141,10)"/><text x="61.1975%" y="1119.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (7 samples, 0.08%)</title><rect x="60.9475%" y="1093" width="0.0784%" height="15" fill="rgb(234,156,12)"/><text x="61.1975%" y="1103.50"></text></g><g><title>parking_lot_core::parking_lot::park (7 samples, 0.08%)</title><rect x="60.9475%" y="1077" width="0.0784%" height="15" fill="rgb(243,224,36)"/><text x="61.1975%" y="1087.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (7 samples, 0.08%)</title><rect x="60.9475%" y="1061" width="0.0784%" height="15" fill="rgb(205,229,51)"/><text x="61.1975%" y="1071.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (7 samples, 0.08%)</title><rect x="60.9475%" y="1045" width="0.0784%" height="15" fill="rgb(223,189,4)"/><text x="61.1975%" y="1055.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park_until (7 samples, 0.08%)</title><rect x="60.9475%" y="1029" width="0.0784%" height="15" fill="rgb(249,167,54)"/><text x="61.1975%" y="1039.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (7 samples, 0.08%)</title><rect x="60.9475%" y="1013" width="0.0784%" height="15" fill="rgb(218,34,28)"/><text x="61.1975%" y="1023.50"></text></g><g><title>syscall (7 samples, 0.08%)</title><rect x="60.9475%" y="997" width="0.0784%" height="15" fill="rgb(232,109,42)"/><text x="61.1975%" y="1007.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="60.9475%" y="981" width="0.0784%" height="15" fill="rgb(248,214,46)"/><text x="61.1975%" y="991.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="60.9475%" y="965" width="0.0784%" height="15" fill="rgb(244,216,40)"/><text x="61.1975%" y="975.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="60.9475%" y="949" width="0.0784%" height="15" fill="rgb(231,226,31)"/><text x="61.1975%" y="959.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="60.9475%" y="933" width="0.0784%" height="15" fill="rgb(238,38,43)"/><text x="61.1975%" y="943.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="60.9475%" y="917" width="0.0784%" height="15" fill="rgb(208,88,43)"/><text x="61.1975%" y="927.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="60.9475%" y="901" width="0.0784%" height="15" fill="rgb(205,136,37)"/><text x="61.1975%" y="911.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="60.9475%" y="885" width="0.0784%" height="15" fill="rgb(237,34,14)"/><text x="61.1975%" y="895.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="60.9475%" y="869" width="0.0784%" height="15" fill="rgb(236,193,44)"/><text x="61.1975%" y="879.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="60.9587%" y="853" width="0.0672%" height="15" fill="rgb(231,48,10)"/><text x="61.2087%" y="863.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="60.9587%" y="837" width="0.0672%" height="15" fill="rgb(213,141,34)"/><text x="61.2087%" y="847.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="60.9587%" y="821" width="0.0672%" height="15" fill="rgb(249,130,34)"/><text x="61.2087%" y="831.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="60.9587%" y="805" width="0.0672%" height="15" fill="rgb(219,42,41)"/><text x="61.2087%" y="815.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="60.9587%" y="789" width="0.0672%" height="15" fill="rgb(224,100,54)"/><text x="61.2087%" y="799.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="60.9699%" y="773" width="0.0560%" height="15" fill="rgb(229,200,27)"/><text x="61.2199%" y="783.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (10 samples, 0.11%)</title><rect x="61.0259%" y="1125" width="0.1120%" height="15" fill="rgb(217,118,10)"/><text x="61.2759%" y="1135.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (10 samples, 0.11%)</title><rect x="61.0259%" y="1109" width="0.1120%" height="15" fill="rgb(206,22,3)"/><text x="61.2759%" y="1119.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (10 samples, 0.11%)</title><rect x="61.0259%" y="1093" width="0.1120%" height="15" fill="rgb(232,163,46)"/><text x="61.2759%" y="1103.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (10 samples, 0.11%)</title><rect x="61.0259%" y="1077" width="0.1120%" height="15" fill="rgb(206,95,13)"/><text x="61.2759%" y="1087.50"></text></g><g><title>parking_lot_core::parking_lot::park (10 samples, 0.11%)</title><rect x="61.0259%" y="1061" width="0.1120%" height="15" fill="rgb(253,154,18)"/><text x="61.2759%" y="1071.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (10 samples, 0.11%)</title><rect x="61.0259%" y="1045" width="0.1120%" height="15" fill="rgb(219,32,23)"/><text x="61.2759%" y="1055.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (10 samples, 0.11%)</title><rect x="61.0259%" y="1029" width="0.1120%" height="15" fill="rgb(230,191,45)"/><text x="61.2759%" y="1039.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (10 samples, 0.11%)</title><rect x="61.0259%" y="1013" width="0.1120%" height="15" fill="rgb(229,64,36)"/><text x="61.2759%" y="1023.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (10 samples, 0.11%)</title><rect x="61.0259%" y="997" width="0.1120%" height="15" fill="rgb(205,129,25)"/><text x="61.2759%" y="1007.50"></text></g><g><title>syscall (10 samples, 0.11%)</title><rect x="61.0259%" y="981" width="0.1120%" height="15" fill="rgb(254,112,7)"/><text x="61.2759%" y="991.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="61.0259%" y="965" width="0.1120%" height="15" fill="rgb(226,53,48)"/><text x="61.2759%" y="975.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="61.0259%" y="949" width="0.1120%" height="15" fill="rgb(214,153,38)"/><text x="61.2759%" y="959.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="61.0259%" y="933" width="0.1120%" height="15" fill="rgb(243,101,7)"/><text x="61.2759%" y="943.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="61.0259%" y="917" width="0.1120%" height="15" fill="rgb(240,140,22)"/><text x="61.2759%" y="927.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="61.0259%" y="901" width="0.1120%" height="15" fill="rgb(235,114,2)"/><text x="61.2759%" y="911.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="61.0259%" y="885" width="0.1120%" height="15" fill="rgb(242,59,12)"/><text x="61.2759%" y="895.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="61.0259%" y="869" width="0.1120%" height="15" fill="rgb(252,134,9)"/><text x="61.2759%" y="879.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="61.0259%" y="853" width="0.1120%" height="15" fill="rgb(236,4,44)"/><text x="61.2759%" y="863.50"></text></g><g><title>[unknown] (10 samples, 0.11%)</title><rect x="61.0259%" y="837" width="0.1120%" height="15" fill="rgb(254,172,41)"/><text x="61.2759%" y="847.50"></text></g><g><title>[unknown] (8 samples, 0.09%)</title><rect x="61.0483%" y="821" width="0.0896%" height="15" fill="rgb(244,63,20)"/><text x="61.2983%" y="831.50"></text></g><g><title>[unknown] (8 samples, 0.09%)</title><rect x="61.0483%" y="805" width="0.0896%" height="15" fill="rgb(250,73,31)"/><text x="61.2983%" y="815.50"></text></g><g><title>[unknown] (8 samples, 0.09%)</title><rect x="61.0483%" y="789" width="0.0896%" height="15" fill="rgb(241,38,36)"/><text x="61.2983%" y="799.50"></text></g><g><title>[unknown] (8 samples, 0.09%)</title><rect x="61.0483%" y="773" width="0.0896%" height="15" fill="rgb(245,211,2)"/><text x="61.2983%" y="783.50"></text></g><g><title>[unknown] (8 samples, 0.09%)</title><rect x="61.0483%" y="757" width="0.0896%" height="15" fill="rgb(206,120,28)"/><text x="61.2983%" y="767.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (1 samples, 0.01%)</title><rect x="61.3283%" y="805" width="0.0112%" height="15" fill="rgb(211,59,34)"/><text x="61.5783%" y="815.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.01%)</title><rect x="61.3283%" y="789" width="0.0112%" height="15" fill="rgb(233,168,5)"/><text x="61.5783%" y="799.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.01%)</title><rect x="61.3283%" y="773" width="0.0112%" height="15" fill="rgb(234,33,13)"/><text x="61.5783%" y="783.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.01%)</title><rect x="61.3283%" y="757" width="0.0112%" height="15" fill="rgb(231,150,26)"/><text x="61.5783%" y="767.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.01%)</title><rect x="61.3283%" y="741" width="0.0112%" height="15" fill="rgb(217,191,4)"/><text x="61.5783%" y="751.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.01%)</title><rect x="61.3283%" y="725" width="0.0112%" height="15" fill="rgb(246,198,38)"/><text x="61.5783%" y="735.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="61.3283%" y="709" width="0.0112%" height="15" fill="rgb(245,64,37)"/><text x="61.5783%" y="719.50"></text></g><g><title>core::mem::swap (1 samples, 0.01%)</title><rect x="61.3283%" y="693" width="0.0112%" height="15" fill="rgb(250,30,36)"/><text x="61.5783%" y="703.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.01%)</title><rect x="61.3283%" y="677" width="0.0112%" height="15" fill="rgb(217,86,53)"/><text x="61.5783%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="61.3283%" y="661" width="0.0112%" height="15" fill="rgb(228,157,16)"/><text x="61.5783%" y="671.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::is_closed (1 samples, 0.01%)</title><rect x="61.3395%" y="789" width="0.0112%" height="15" fill="rgb(217,59,31)"/><text x="61.5895%" y="799.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="61.3395%" y="773" width="0.0112%" height="15" fill="rgb(237,138,41)"/><text x="61.5895%" y="783.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.01%)</title><rect x="61.3395%" y="757" width="0.0112%" height="15" fill="rgb(227,91,49)"/><text x="61.5895%" y="767.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.01%)</title><rect x="61.3395%" y="741" width="0.0112%" height="15" fill="rgb(247,21,44)"/><text x="61.5895%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.01%)</title><rect x="61.3395%" y="725" width="0.0112%" height="15" fill="rgb(219,210,51)"/><text x="61.5895%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="61.3395%" y="709" width="0.0112%" height="15" fill="rgb(209,140,6)"/><text x="61.5895%" y="719.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::maintenance (5 samples, 0.06%)</title><rect x="61.3171%" y="821" width="0.0560%" height="15" fill="rgb(221,188,24)"/><text x="61.5671%" y="831.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::maintenance (3 samples, 0.03%)</title><rect x="61.3395%" y="805" width="0.0336%" height="15" fill="rgb(232,154,20)"/><text x="61.5895%" y="815.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::drain_pending_drop (2 samples, 0.02%)</title><rect x="61.3507%" y="789" width="0.0224%" height="15" fill="rgb(244,137,50)"/><text x="61.6007%" y="799.50"></text></g><g><title>tokio::runtime::task::stack::TransferStack&lt;T&gt;::drain (2 samples, 0.02%)</title><rect x="61.3507%" y="773" width="0.0224%" height="15" fill="rgb(225,185,43)"/><text x="61.6007%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::swap (2 samples, 0.02%)</title><rect x="61.3507%" y="757" width="0.0224%" height="15" fill="rgb(213,205,38)"/><text x="61.6007%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_swap (2 samples, 0.02%)</title><rect x="61.3507%" y="741" width="0.0224%" height="15" fill="rgb(236,73,12)"/><text x="61.6007%" y="751.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="61.6082%" y="805" width="0.0224%" height="15" fill="rgb(235,219,13)"/><text x="61.8582%" y="815.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="61.6754%" y="757" width="0.0112%" height="15" fill="rgb(218,59,36)"/><text x="61.9254%" y="767.50"></text></g><g><title>__sched_yield (523 samples, 5.86%)</title><rect x="61.6866%" y="757" width="5.8573%" height="15" fill="rgb(205,110,39)"/><text x="61.9366%" y="767.50">__sched..</text></g><g><title>[unknown] (491 samples, 5.50%)</title><rect x="62.0450%" y="741" width="5.4989%" height="15" fill="rgb(218,206,42)"/><text x="62.2950%" y="751.50">[unknow..</text></g><g><title>[unknown] (428 samples, 4.79%)</title><rect x="62.7506%" y="725" width="4.7934%" height="15" fill="rgb(248,125,24)"/><text x="63.0006%" y="735.50">[unkno..</text></g><g><title>[unknown] (414 samples, 4.64%)</title><rect x="62.9074%" y="709" width="4.6366%" height="15" fill="rgb(242,28,27)"/><text x="63.1574%" y="719.50">[unkn..</text></g><g><title>[unknown] (407 samples, 4.56%)</title><rect x="62.9858%" y="693" width="4.5582%" height="15" fill="rgb(216,228,15)"/><text x="63.2358%" y="703.50">[unkn..</text></g><g><title>[unknown] (368 samples, 4.12%)</title><rect x="63.4226%" y="677" width="4.1214%" height="15" fill="rgb(235,116,46)"/><text x="63.6726%" y="687.50">[unk..</text></g><g><title>[unknown] (353 samples, 3.95%)</title><rect x="63.5905%" y="661" width="3.9534%" height="15" fill="rgb(224,18,32)"/><text x="63.8405%" y="671.50">[unk..</text></g><g><title>[unknown] (239 samples, 2.68%)</title><rect x="64.8673%" y="645" width="2.6767%" height="15" fill="rgb(252,5,12)"/><text x="65.1173%" y="655.50">[u..</text></g><g><title>[unknown] (183 samples, 2.05%)</title><rect x="65.4945%" y="629" width="2.0495%" height="15" fill="rgb(251,36,5)"/><text x="65.7445%" y="639.50">[..</text></g><g><title>[unknown] (115 samples, 1.29%)</title><rect x="66.2560%" y="613" width="1.2879%" height="15" fill="rgb(217,53,14)"/><text x="66.5060%" y="623.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="67.5104%" y="597" width="0.0336%" height="15" fill="rgb(215,86,45)"/><text x="67.7604%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (18 samples, 0.20%)</title><rect x="67.5440%" y="757" width="0.2016%" height="15" fill="rgb(242,169,11)"/><text x="67.7940%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (18 samples, 0.20%)</title><rect x="67.5440%" y="741" width="0.2016%" height="15" fill="rgb(211,213,45)"/><text x="67.7940%" y="751.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (8 samples, 0.09%)</title><rect x="67.7455%" y="757" width="0.0896%" height="15" fill="rgb(205,88,11)"/><text x="67.9955%" y="767.50"></text></g><g><title>parking_lot_core::parking_lot::park (8 samples, 0.09%)</title><rect x="67.7455%" y="741" width="0.0896%" height="15" fill="rgb(252,69,26)"/><text x="67.9955%" y="751.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (8 samples, 0.09%)</title><rect x="67.7455%" y="725" width="0.0896%" height="15" fill="rgb(246,123,37)"/><text x="67.9955%" y="735.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (8 samples, 0.09%)</title><rect x="67.7455%" y="709" width="0.0896%" height="15" fill="rgb(212,205,5)"/><text x="67.9955%" y="719.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (8 samples, 0.09%)</title><rect x="67.7455%" y="693" width="0.0896%" height="15" fill="rgb(253,148,0)"/><text x="67.9955%" y="703.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (8 samples, 0.09%)</title><rect x="67.7455%" y="677" width="0.0896%" height="15" fill="rgb(239,22,4)"/><text x="67.9955%" y="687.50"></text></g><g><title>syscall (8 samples, 0.09%)</title><rect x="67.7455%" y="661" width="0.0896%" height="15" fill="rgb(226,26,53)"/><text x="67.9955%" y="671.50"></text></g><g><title>[unknown] (8 samples, 0.09%)</title><rect x="67.7455%" y="645" width="0.0896%" height="15" fill="rgb(225,229,45)"/><text x="67.9955%" y="655.50"></text></g><g><title>std::thread::yield_now (6 samples, 0.07%)</title><rect x="67.8351%" y="757" width="0.0672%" height="15" fill="rgb(220,60,37)"/><text x="68.0851%" y="767.50"></text></g><g><title>std::sys::unix::thread::Thread::yield_now (6 samples, 0.07%)</title><rect x="67.8351%" y="741" width="0.0672%" height="15" fill="rgb(217,180,35)"/><text x="68.0851%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,()&gt;&gt; (11 samples, 0.12%)</title><rect x="67.9023%" y="741" width="0.1232%" height="15" fill="rgb(229,7,53)"/><text x="68.1523%" y="751.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.12%)</title><rect x="67.9023%" y="725" width="0.1232%" height="15" fill="rgb(254,137,3)"/><text x="68.1523%" y="735.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (11 samples, 0.12%)</title><rect x="67.9023%" y="709" width="0.1232%" height="15" fill="rgb(215,140,41)"/><text x="68.1523%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (10 samples, 0.11%)</title><rect x="67.9135%" y="693" width="0.1120%" height="15" fill="rgb(250,80,15)"/><text x="68.1635%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (10 samples, 0.11%)</title><rect x="67.9135%" y="677" width="0.1120%" height="15" fill="rgb(252,191,6)"/><text x="68.1635%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (33 samples, 0.37%)</title><rect x="68.0255%" y="741" width="0.3696%" height="15" fill="rgb(246,217,18)"/><text x="68.2755%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (33 samples, 0.37%)</title><rect x="68.0255%" y="725" width="0.3696%" height="15" fill="rgb(223,93,7)"/><text x="68.2755%" y="735.50"></text></g><g><title>__sched_yield (5 samples, 0.06%)</title><rect x="68.3951%" y="709" width="0.0560%" height="15" fill="rgb(225,55,52)"/><text x="68.6451%" y="719.50"></text></g><g><title>[unknown] (5 samples, 0.06%)</title><rect x="68.3951%" y="693" width="0.0560%" height="15" fill="rgb(240,31,24)"/><text x="68.6451%" y="703.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (9 samples, 0.10%)</title><rect x="68.4511%" y="693" width="0.1008%" height="15" fill="rgb(205,56,52)"/><text x="68.7011%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (9 samples, 0.10%)</title><rect x="68.4511%" y="677" width="0.1008%" height="15" fill="rgb(246,146,12)"/><text x="68.7011%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (9 samples, 0.10%)</title><rect x="68.4511%" y="661" width="0.1008%" height="15" fill="rgb(239,84,36)"/><text x="68.7011%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (52 samples, 0.58%)</title><rect x="68.5631%" y="629" width="0.5824%" height="15" fill="rgb(207,41,40)"/><text x="68.8131%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_load (52 samples, 0.58%)</title><rect x="68.5631%" y="613" width="0.5824%" height="15" fill="rgb(241,179,25)"/><text x="68.8131%" y="623.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (1,062 samples, 11.89%)</title><rect x="68.5631%" y="645" width="11.8938%" height="15" fill="rgb(210,0,34)"/><text x="68.8131%" y="655.50">&lt;parking_lot_core:..</text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (1,010 samples, 11.31%)</title><rect x="69.1455%" y="629" width="11.3115%" height="15" fill="rgb(225,217,29)"/><text x="69.3955%" y="639.50">parking_lot_core:..</text></g><g><title>syscall (1,010 samples, 11.31%)</title><rect x="69.1455%" y="613" width="11.3115%" height="15" fill="rgb(216,191,38)"/><text x="69.3955%" y="623.50">syscall</text></g><g><title>[unknown] (1,002 samples, 11.22%)</title><rect x="69.2351%" y="597" width="11.2219%" height="15" fill="rgb(232,140,52)"/><text x="69.4851%" y="607.50">[unknown]</text></g><g><title>[unknown] (958 samples, 10.73%)</title><rect x="69.7279%" y="581" width="10.7291%" height="15" fill="rgb(223,158,51)"/><text x="69.9779%" y="591.50">[unknown]</text></g><g><title>[unknown] (944 samples, 10.57%)</title><rect x="69.8846%" y="565" width="10.5723%" height="15" fill="rgb(235,29,51)"/><text x="70.1346%" y="575.50">[unknown]</text></g><g><title>[unknown] (922 samples, 10.33%)</title><rect x="70.1310%" y="549" width="10.3259%" height="15" fill="rgb(215,181,18)"/><text x="70.3810%" y="559.50">[unknown]</text></g><g><title>[unknown] (904 samples, 10.12%)</title><rect x="70.3326%" y="533" width="10.1243%" height="15" fill="rgb(227,125,34)"/><text x="70.5826%" y="543.50">[unknown]</text></g><g><title>[unknown] (852 samples, 9.54%)</title><rect x="70.9150%" y="517" width="9.5419%" height="15" fill="rgb(230,197,49)"/><text x="71.1650%" y="527.50">[unknown]</text></g><g><title>[unknown] (748 samples, 8.38%)</title><rect x="72.0797%" y="501" width="8.3772%" height="15" fill="rgb(239,141,16)"/><text x="72.3297%" y="511.50">[unknown]</text></g><g><title>[unknown] (692 samples, 7.75%)</title><rect x="72.7069%" y="485" width="7.7500%" height="15" fill="rgb(225,105,43)"/><text x="72.9569%" y="495.50">[unknown]</text></g><g><title>[unknown] (614 samples, 6.88%)</title><rect x="73.5805%" y="469" width="6.8765%" height="15" fill="rgb(214,131,14)"/><text x="73.8305%" y="479.50">[unknown]</text></g><g><title>[unknown] (502 samples, 5.62%)</title><rect x="74.8348%" y="453" width="5.6221%" height="15" fill="rgb(229,177,11)"/><text x="75.0848%" y="463.50">[unknow..</text></g><g><title>[unknown] (409 samples, 4.58%)</title><rect x="75.8764%" y="437" width="4.5806%" height="15" fill="rgb(231,180,14)"/><text x="76.1264%" y="447.50">[unkn..</text></g><g><title>[unknown] (343 samples, 3.84%)</title><rect x="76.6155%" y="421" width="3.8414%" height="15" fill="rgb(232,88,2)"/><text x="76.8655%" y="431.50">[unk..</text></g><g><title>[unknown] (228 samples, 2.55%)</title><rect x="77.9035%" y="405" width="2.5535%" height="15" fill="rgb(205,220,8)"/><text x="78.1535%" y="415.50">[u..</text></g><g><title>[unknown] (176 samples, 1.97%)</title><rect x="78.4858%" y="389" width="1.9711%" height="15" fill="rgb(225,23,53)"/><text x="78.7358%" y="399.50">[..</text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="80.4233%" y="373" width="0.0336%" height="15" fill="rgb(213,62,29)"/><text x="80.6733%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="80.4457%" y="357" width="0.0112%" height="15" fill="rgb(227,75,7)"/><text x="80.6957%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="80.4457%" y="341" width="0.0112%" height="15" fill="rgb(207,105,14)"/><text x="80.6957%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="80.4457%" y="325" width="0.0112%" height="15" fill="rgb(245,62,29)"/><text x="80.6957%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="80.4457%" y="309" width="0.0112%" height="15" fill="rgb(236,202,4)"/><text x="80.6957%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="80.4457%" y="293" width="0.0112%" height="15" fill="rgb(250,67,1)"/><text x="80.6957%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="80.4457%" y="277" width="0.0112%" height="15" fill="rgb(253,115,44)"/><text x="80.6957%" y="287.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.06%)</title><rect x="80.4569%" y="645" width="0.0560%" height="15" fill="rgb(251,139,18)"/><text x="80.7069%" y="655.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal::{{closure}} (5 samples, 0.06%)</title><rect x="80.4569%" y="629" width="0.0560%" height="15" fill="rgb(218,22,32)"/><text x="80.7069%" y="639.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (5 samples, 0.06%)</title><rect x="80.4569%" y="613" width="0.0560%" height="15" fill="rgb(243,53,5)"/><text x="80.7069%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (4 samples, 0.04%)</title><rect x="80.4681%" y="597" width="0.0448%" height="15" fill="rgb(227,56,16)"/><text x="80.7181%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.04%)</title><rect x="80.4681%" y="581" width="0.0448%" height="15" fill="rgb(245,53,0)"/><text x="80.7181%" y="591.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (22 samples, 0.25%)</title><rect x="80.5129%" y="645" width="0.2464%" height="15" fill="rgb(216,170,35)"/><text x="80.7629%" y="655.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (21 samples, 0.24%)</title><rect x="80.5241%" y="629" width="0.2352%" height="15" fill="rgb(211,200,8)"/><text x="80.7741%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (21 samples, 0.24%)</title><rect x="80.5241%" y="613" width="0.2352%" height="15" fill="rgb(228,204,44)"/><text x="80.7741%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (21 samples, 0.24%)</title><rect x="80.5241%" y="597" width="0.2352%" height="15" fill="rgb(214,121,17)"/><text x="80.7741%" y="607.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (1,121 samples, 12.55%)</title><rect x="68.3951%" y="741" width="12.5546%" height="15" fill="rgb(233,64,38)"/><text x="68.6451%" y="751.50">tokio::loom::std::p..</text></g><g><title>parking_lot::condvar::Condvar::wait (1,121 samples, 12.55%)</title><rect x="68.3951%" y="725" width="12.5546%" height="15" fill="rgb(253,54,19)"/><text x="68.6451%" y="735.50">parking_lot::condva..</text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (1,116 samples, 12.50%)</title><rect x="68.4511%" y="709" width="12.4986%" height="15" fill="rgb(253,94,18)"/><text x="68.7011%" y="719.50">parking_lot::condva..</text></g><g><title>parking_lot_core::parking_lot::park (1,107 samples, 12.40%)</title><rect x="68.5519%" y="693" width="12.3978%" height="15" fill="rgb(227,57,52)"/><text x="68.8019%" y="703.50">parking_lot_core::p..</text></g><g><title>parking_lot_core::parking_lot::with_thread_data (1,107 samples, 12.40%)</title><rect x="68.5519%" y="677" width="12.3978%" height="15" fill="rgb(230,228,50)"/><text x="68.8019%" y="687.50">parking_lot_core::p..</text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (1,107 samples, 12.40%)</title><rect x="68.5519%" y="661" width="12.3978%" height="15" fill="rgb(217,205,27)"/><text x="68.8019%" y="671.50">parking_lot_core::p..</text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (17 samples, 0.19%)</title><rect x="80.7593%" y="645" width="0.1904%" height="15" fill="rgb(252,71,50)"/><text x="81.0093%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (15 samples, 0.17%)</title><rect x="80.7817%" y="629" width="0.1680%" height="15" fill="rgb(209,86,4)"/><text x="81.0317%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_sub (15 samples, 0.17%)</title><rect x="80.7817%" y="613" width="0.1680%" height="15" fill="rgb(229,94,0)"/><text x="81.0317%" y="623.50"></text></g><g><title>tokio::runtime::park::Inner::park_condvar (1,169 samples, 13.09%)</title><rect x="67.9023%" y="757" width="13.0922%" height="15" fill="rgb(252,223,21)"/><text x="68.1523%" y="767.50">tokio::runtime::park..</text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (4 samples, 0.04%)</title><rect x="80.9497%" y="741" width="0.0448%" height="15" fill="rgb(230,210,4)"/><text x="81.1997%" y="751.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (4 samples, 0.04%)</title><rect x="80.9497%" y="725" width="0.0448%" height="15" fill="rgb(240,149,38)"/><text x="81.1997%" y="735.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (4 samples, 0.04%)</title><rect x="80.9497%" y="709" width="0.0448%" height="15" fill="rgb(254,105,20)"/><text x="81.1997%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (2 samples, 0.02%)</title><rect x="80.9721%" y="693" width="0.0224%" height="15" fill="rgb(253,87,46)"/><text x="81.2221%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.02%)</title><rect x="80.9721%" y="677" width="0.0224%" height="15" fill="rgb(253,116,33)"/><text x="81.2221%" y="687.50"></text></g><g><title>tokio::runtime::park::Inner::park_driver (1 samples, 0.01%)</title><rect x="80.9945%" y="757" width="0.0112%" height="15" fill="rgb(229,198,5)"/><text x="81.2445%" y="767.50"></text></g><g><title>&lt;tokio::runtime::driver::Driver as tokio::park::Park&gt;::park (1 samples, 0.01%)</title><rect x="80.9945%" y="741" width="0.0112%" height="15" fill="rgb(242,38,37)"/><text x="81.2445%" y="751.50"></text></g><g><title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park (1 samples, 0.01%)</title><rect x="80.9945%" y="725" width="0.0112%" height="15" fill="rgb(242,69,53)"/><text x="81.2445%" y="735.50"></text></g><g><title>&lt;tokio::time::driver::Driver&lt;P&gt; as tokio::park::Park&gt;::park (1 samples, 0.01%)</title><rect x="80.9945%" y="709" width="0.0112%" height="15" fill="rgb(249,80,16)"/><text x="81.2445%" y="719.50"></text></g><g><title>tokio::time::driver::Driver&lt;P&gt;::park_internal (1 samples, 0.01%)</title><rect x="80.9945%" y="693" width="0.0112%" height="15" fill="rgb(206,128,11)"/><text x="81.2445%" y="703.50"></text></g><g><title>tokio::time::driver::&lt;impl tokio::time::driver::handle::Handle&gt;::process (1 samples, 0.01%)</title><rect x="80.9945%" y="677" width="0.0112%" height="15" fill="rgb(212,35,20)"/><text x="81.2445%" y="687.50"></text></g><g><title>tokio::time::driver::&lt;impl tokio::time::driver::handle::Handle&gt;::process_at_time (1 samples, 0.01%)</title><rect x="80.9945%" y="661" width="0.0112%" height="15" fill="rgb(236,79,13)"/><text x="81.2445%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;[core::option::Option&lt;core::task::wake::Waker&gt;: 32]&gt; (1 samples, 0.01%)</title><rect x="80.9945%" y="645" width="0.0112%" height="15" fill="rgb(233,123,3)"/><text x="81.2445%" y="655.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (1,758 samples, 19.69%)</title><rect x="61.6418%" y="789" width="19.6887%" height="15" fill="rgb(214,93,52)"/><text x="61.8918%" y="799.50">&lt;tokio::runtime::park::Parker a..</text></g><g><title>tokio::runtime::park::Inner::park (1,758 samples, 19.69%)</title><rect x="61.6418%" y="773" width="19.6887%" height="15" fill="rgb(251,37,40)"/><text x="61.8918%" y="783.50">tokio::runtime::park::Inner::pa..</text></g><g><title>tokio::util::try_lock::TryLock&lt;T&gt;::try_lock (29 samples, 0.32%)</title><rect x="81.0057%" y="757" width="0.3248%" height="15" fill="rgb(227,80,54)"/><text x="81.2557%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (29 samples, 0.32%)</title><rect x="81.0057%" y="741" width="0.3248%" height="15" fill="rgb(254,48,11)"/><text x="81.2557%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (29 samples, 0.32%)</title><rect x="81.0057%" y="725" width="0.3248%" height="15" fill="rgb(235,193,26)"/><text x="81.2557%" y="735.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.01%)</title><rect x="81.3305%" y="789" width="0.0112%" height="15" fill="rgb(229,99,21)"/><text x="81.5805%" y="799.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.01%)</title><rect x="81.3305%" y="773" width="0.0112%" height="15" fill="rgb(211,140,41)"/><text x="81.5805%" y="783.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.01%)</title><rect x="81.3305%" y="757" width="0.0112%" height="15" fill="rgb(240,227,30)"/><text x="81.5805%" y="767.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.01%)</title><rect x="81.3305%" y="741" width="0.0112%" height="15" fill="rgb(215,224,45)"/><text x="81.5805%" y="751.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.01%)</title><rect x="81.3305%" y="725" width="0.0112%" height="15" fill="rgb(206,123,31)"/><text x="81.5805%" y="735.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="81.3305%" y="709" width="0.0112%" height="15" fill="rgb(210,138,16)"/><text x="81.5805%" y="719.50"></text></g><g><title>core::mem::swap (1 samples, 0.01%)</title><rect x="81.3305%" y="693" width="0.0112%" height="15" fill="rgb(228,57,28)"/><text x="81.5805%" y="703.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.01%)</title><rect x="81.3305%" y="677" width="0.0112%" height="15" fill="rgb(242,170,10)"/><text x="81.5805%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="81.3305%" y="661" width="0.0112%" height="15" fill="rgb(228,214,39)"/><text x="81.5805%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::park::Parker&gt;&gt; (4 samples, 0.04%)</title><rect x="81.3417%" y="789" width="0.0448%" height="15" fill="rgb(218,179,33)"/><text x="81.5917%" y="799.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (14 samples, 0.16%)</title><rect x="81.3865%" y="789" width="0.1568%" height="15" fill="rgb(235,193,39)"/><text x="81.6365%" y="799.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (1,779 samples, 19.92%)</title><rect x="61.6306%" y="805" width="19.9238%" height="15" fill="rgb(219,221,36)"/><text x="61.8806%" y="815.50">tokio::runtime::thread_pool::wo..</text></g><g><title>tokio::runtime::queue::Local&lt;T&gt;::is_stealable (1 samples, 0.01%)</title><rect x="81.5433%" y="789" width="0.0112%" height="15" fill="rgb(248,218,19)"/><text x="81.7933%" y="799.50"></text></g><g><title>tokio::runtime::queue::Inner&lt;T&gt;::is_empty (1 samples, 0.01%)</title><rect x="81.5433%" y="773" width="0.0112%" height="15" fill="rgb(205,50,9)"/><text x="81.7933%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (1 samples, 0.01%)</title><rect x="81.5433%" y="757" width="0.0112%" height="15" fill="rgb(238,81,28)"/><text x="81.7933%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="81.5433%" y="741" width="0.0112%" height="15" fill="rgb(235,110,19)"/><text x="81.7933%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="81.5769%" y="725" width="0.0112%" height="15" fill="rgb(214,7,14)"/><text x="81.8269%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="81.5769%" y="709" width="0.0112%" height="15" fill="rgb(211,77,3)"/><text x="81.8269%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="81.5769%" y="693" width="0.0112%" height="15" fill="rgb(229,5,9)"/><text x="81.8269%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="81.5769%" y="677" width="0.0112%" height="15" fill="rgb(225,90,11)"/><text x="81.8269%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="81.5769%" y="661" width="0.0112%" height="15" fill="rgb(242,56,8)"/><text x="81.8269%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="81.5769%" y="645" width="0.0112%" height="15" fill="rgb(249,212,39)"/><text x="81.8269%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="81.5769%" y="629" width="0.0112%" height="15" fill="rgb(236,90,9)"/><text x="81.8269%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="81.5769%" y="613" width="0.0112%" height="15" fill="rgb(206,88,35)"/><text x="81.8269%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="81.5769%" y="597" width="0.0112%" height="15" fill="rgb(205,126,30)"/><text x="81.8269%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="81.5769%" y="581" width="0.0112%" height="15" fill="rgb(230,176,12)"/><text x="81.8269%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::queue::Pointers&gt;&gt; (9 samples, 0.10%)</title><rect x="81.5545%" y="773" width="0.1008%" height="15" fill="rgb(243,19,9)"/><text x="81.8045%" y="783.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.10%)</title><rect x="81.5545%" y="757" width="0.1008%" height="15" fill="rgb(245,171,17)"/><text x="81.8045%" y="767.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (9 samples, 0.10%)</title><rect x="81.5545%" y="741" width="0.1008%" height="15" fill="rgb(227,52,21)"/><text x="81.8045%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (6 samples, 0.07%)</title><rect x="81.5881%" y="725" width="0.0672%" height="15" fill="rgb(238,69,14)"/><text x="81.8381%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.07%)</title><rect x="81.5881%" y="709" width="0.0672%" height="15" fill="rgb(241,156,39)"/><text x="81.8381%" y="719.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::is_closed (15 samples, 0.17%)</title><rect x="81.5545%" y="789" width="0.1680%" height="15" fill="rgb(212,227,28)"/><text x="81.8045%" y="799.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (6 samples, 0.07%)</title><rect x="81.6553%" y="773" width="0.0672%" height="15" fill="rgb(209,118,27)"/><text x="81.9053%" y="783.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (6 samples, 0.07%)</title><rect x="81.6553%" y="757" width="0.0672%" height="15" fill="rgb(226,102,5)"/><text x="81.9053%" y="767.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (6 samples, 0.07%)</title><rect x="81.6553%" y="741" width="0.0672%" height="15" fill="rgb(223,34,3)"/><text x="81.9053%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (6 samples, 0.07%)</title><rect x="81.6553%" y="725" width="0.0672%" height="15" fill="rgb(221,81,38)"/><text x="81.9053%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (6 samples, 0.07%)</title><rect x="81.6553%" y="709" width="0.0672%" height="15" fill="rgb(236,219,28)"/><text x="81.9053%" y="719.50"></text></g><g><title>&lt;tokio::runtime::task::stack::TransferStack&lt;T&gt;::drain::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="81.7225%" y="773" width="0.0448%" height="15" fill="rgb(213,200,14)"/><text x="81.9725%" y="783.50"></text></g><g><title>tokio::runtime::task::stack::TransferStack&lt;T&gt;::drain (36 samples, 0.40%)</title><rect x="81.7673%" y="773" width="0.4032%" height="15" fill="rgb(240,33,19)"/><text x="82.0173%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::swap (36 samples, 0.40%)</title><rect x="81.7673%" y="757" width="0.4032%" height="15" fill="rgb(233,113,27)"/><text x="82.0173%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_swap (36 samples, 0.40%)</title><rect x="81.7673%" y="741" width="0.4032%" height="15" fill="rgb(220,221,18)"/><text x="82.0173%" y="751.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::maintenance (79 samples, 0.88%)</title><rect x="81.5545%" y="805" width="0.8848%" height="15" fill="rgb(238,92,8)"/><text x="81.8045%" y="815.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::drain_pending_drop (64 samples, 0.72%)</title><rect x="81.7225%" y="789" width="0.7168%" height="15" fill="rgb(222,164,16)"/><text x="81.9725%" y="799.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Worker::remote (24 samples, 0.27%)</title><rect x="82.1705%" y="773" width="0.2688%" height="15" fill="rgb(241,119,3)"/><text x="82.4205%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;usize&gt;&gt;&gt; (8 samples, 0.09%)</title><rect x="82.4392%" y="773" width="0.0896%" height="15" fill="rgb(241,44,8)"/><text x="82.6892%" y="783.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.09%)</title><rect x="82.4392%" y="757" width="0.0896%" height="15" fill="rgb(230,36,40)"/><text x="82.6892%" y="767.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (8 samples, 0.09%)</title><rect x="82.4392%" y="741" width="0.0896%" height="15" fill="rgb(243,16,36)"/><text x="82.6892%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (8 samples, 0.09%)</title><rect x="82.4392%" y="725" width="0.0896%" height="15" fill="rgb(231,4,26)"/><text x="82.6892%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (8 samples, 0.09%)</title><rect x="82.4392%" y="709" width="0.0896%" height="15" fill="rgb(240,9,31)"/><text x="82.6892%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (2 samples, 0.02%)</title><rect x="82.5288%" y="773" width="0.0224%" height="15" fill="rgb(207,173,15)"/><text x="82.7788%" y="783.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (2 samples, 0.02%)</title><rect x="82.5288%" y="757" width="0.0224%" height="15" fill="rgb(224,192,53)"/><text x="82.7788%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (2 samples, 0.02%)</title><rect x="82.5288%" y="741" width="0.0224%" height="15" fill="rgb(223,67,28)"/><text x="82.7788%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="82.5400%" y="725" width="0.0112%" height="15" fill="rgb(211,20,47)"/><text x="82.7900%" y="735.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_from_parked (15 samples, 0.17%)</title><rect x="82.4392%" y="805" width="0.1680%" height="15" fill="rgb(240,228,2)"/><text x="82.6892%" y="815.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::is_parked (15 samples, 0.17%)</title><rect x="82.4392%" y="789" width="0.1680%" height="15" fill="rgb(248,151,12)"/><text x="82.6892%" y="799.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (5 samples, 0.06%)</title><rect x="82.5512%" y="773" width="0.0560%" height="15" fill="rgb(244,8,39)"/><text x="82.8012%" y="783.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (5 samples, 0.06%)</title><rect x="82.5512%" y="757" width="0.0560%" height="15" fill="rgb(222,26,8)"/><text x="82.8012%" y="767.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (5 samples, 0.06%)</title><rect x="82.5512%" y="741" width="0.0560%" height="15" fill="rgb(213,106,44)"/><text x="82.8012%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (4 samples, 0.04%)</title><rect x="82.5624%" y="725" width="0.0448%" height="15" fill="rgb(214,129,20)"/><text x="82.8124%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (4 samples, 0.04%)</title><rect x="82.5624%" y="709" width="0.0448%" height="15" fill="rgb(212,32,13)"/><text x="82.8124%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;usize&gt;&gt;&gt; (11 samples, 0.12%)</title><rect x="82.6072%" y="773" width="0.1232%" height="15" fill="rgb(208,168,33)"/><text x="82.8572%" y="783.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.12%)</title><rect x="82.6072%" y="757" width="0.1232%" height="15" fill="rgb(231,207,8)"/><text x="82.8572%" y="767.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (11 samples, 0.12%)</title><rect x="82.6072%" y="741" width="0.1232%" height="15" fill="rgb(235,219,23)"/><text x="82.8572%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (10 samples, 0.11%)</title><rect x="82.6184%" y="725" width="0.1120%" height="15" fill="rgb(226,216,26)"/><text x="82.8684%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (10 samples, 0.11%)</title><rect x="82.6184%" y="709" width="0.1120%" height="15" fill="rgb(239,137,16)"/><text x="82.8684%" y="719.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (7 samples, 0.08%)</title><rect x="82.7304%" y="773" width="0.0784%" height="15" fill="rgb(207,12,36)"/><text x="82.9804%" y="783.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (7 samples, 0.08%)</title><rect x="82.7304%" y="757" width="0.0784%" height="15" fill="rgb(210,214,24)"/><text x="82.9804%" y="767.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (7 samples, 0.08%)</title><rect x="82.7304%" y="741" width="0.0784%" height="15" fill="rgb(206,56,30)"/><text x="82.9804%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (7 samples, 0.08%)</title><rect x="82.7304%" y="725" width="0.0784%" height="15" fill="rgb(228,143,26)"/><text x="82.9804%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (7 samples, 0.08%)</title><rect x="82.7304%" y="709" width="0.0784%" height="15" fill="rgb(216,218,46)"/><text x="82.9804%" y="719.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::transition_worker_to_parked (23 samples, 0.26%)</title><rect x="82.6072%" y="789" width="0.2576%" height="15" fill="rgb(206,6,19)"/><text x="82.8572%" y="799.50"></text></g><g><title>tokio::runtime::thread_pool::idle::State::dec_num_unparked (5 samples, 0.06%)</title><rect x="82.8088%" y="773" width="0.0560%" height="15" fill="rgb(239,177,51)"/><text x="83.0588%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (5 samples, 0.06%)</title><rect x="82.8088%" y="757" width="0.0560%" height="15" fill="rgb(216,55,25)"/><text x="83.0588%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_sub (5 samples, 0.06%)</title><rect x="82.8088%" y="741" width="0.0560%" height="15" fill="rgb(231,163,29)"/><text x="83.0588%" y="751.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park (1,922 samples, 21.53%)</title><rect x="61.3731%" y="821" width="21.5254%" height="15" fill="rgb(232,149,50)"/><text x="61.6231%" y="831.50">tokio::runtime::thread_pool::worke..</text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_to_parked (26 samples, 0.29%)</title><rect x="82.6072%" y="805" width="0.2912%" height="15" fill="rgb(223,142,48)"/><text x="82.8572%" y="815.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_if_work_pending (3 samples, 0.03%)</title><rect x="82.8648%" y="789" width="0.0336%" height="15" fill="rgb(245,83,23)"/><text x="83.1148%" y="799.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::is_empty (1 samples, 0.01%)</title><rect x="82.8872%" y="773" width="0.0112%" height="15" fill="rgb(224,63,2)"/><text x="83.1372%" y="783.50"></text></g><g><title>tokio::runtime::queue::Inner&lt;T&gt;::is_empty (1 samples, 0.01%)</title><rect x="82.8872%" y="757" width="0.0112%" height="15" fill="rgb(218,65,53)"/><text x="83.1372%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicU16::load (1 samples, 0.01%)</title><rect x="82.8872%" y="741" width="0.0112%" height="15" fill="rgb(221,84,29)"/><text x="83.1372%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="82.8872%" y="725" width="0.0112%" height="15" fill="rgb(234,0,32)"/><text x="83.1372%" y="735.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.01%)</title><rect x="82.8984%" y="805" width="0.0112%" height="15" fill="rgb(206,20,16)"/><text x="83.1484%" y="815.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.01%)</title><rect x="82.8984%" y="789" width="0.0112%" height="15" fill="rgb(244,172,18)"/><text x="83.1484%" y="799.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.01%)</title><rect x="82.8984%" y="773" width="0.0112%" height="15" fill="rgb(254,133,1)"/><text x="83.1484%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;tokio::runtime::thread_pool::worker::Core&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="82.9096%" y="805" width="0.0112%" height="15" fill="rgb(222,206,41)"/><text x="83.1596%" y="815.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (5 samples, 0.06%)</title><rect x="83.1336%" y="709" width="0.0560%" height="15" fill="rgb(212,3,42)"/><text x="83.3836%" y="719.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (5 samples, 0.06%)</title><rect x="83.1336%" y="693" width="0.0560%" height="15" fill="rgb(241,11,4)"/><text x="83.3836%" y="703.50"></text></g><g><title>core::cell::BorrowRefMut::new (5 samples, 0.06%)</title><rect x="83.1336%" y="677" width="0.0560%" height="15" fill="rgb(205,19,26)"/><text x="83.3836%" y="687.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.02%)</title><rect x="83.1672%" y="661" width="0.0224%" height="15" fill="rgb(210,179,32)"/><text x="83.4172%" y="671.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.02%)</title><rect x="83.1672%" y="645" width="0.0224%" height="15" fill="rgb(227,116,49)"/><text x="83.4172%" y="655.50"></text></g><g><title>core::mem::replace (2 samples, 0.02%)</title><rect x="83.1672%" y="629" width="0.0224%" height="15" fill="rgb(211,146,6)"/><text x="83.4172%" y="639.50"></text></g><g><title>core::mem::swap (2 samples, 0.02%)</title><rect x="83.1672%" y="613" width="0.0224%" height="15" fill="rgb(219,44,39)"/><text x="83.4172%" y="623.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.02%)</title><rect x="83.1672%" y="597" width="0.0224%" height="15" fill="rgb(234,128,11)"/><text x="83.4172%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="83.1672%" y="581" width="0.0224%" height="15" fill="rgb(220,183,53)"/><text x="83.4172%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (2 samples, 0.02%)</title><rect x="83.1896%" y="709" width="0.0224%" height="15" fill="rgb(213,219,32)"/><text x="83.4396%" y="719.50"></text></g><g><title>core::mem::take (2 samples, 0.02%)</title><rect x="83.1896%" y="693" width="0.0224%" height="15" fill="rgb(232,156,16)"/><text x="83.4396%" y="703.50"></text></g><g><title>core::mem::replace (2 samples, 0.02%)</title><rect x="83.1896%" y="677" width="0.0224%" height="15" fill="rgb(246,135,34)"/><text x="83.4396%" y="687.50"></text></g><g><title>core::mem::swap (2 samples, 0.02%)</title><rect x="83.1896%" y="661" width="0.0224%" height="15" fill="rgb(241,99,0)"/><text x="83.4396%" y="671.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.02%)</title><rect x="83.1896%" y="645" width="0.0224%" height="15" fill="rgb(222,103,45)"/><text x="83.4396%" y="655.50"></text></g><g><title>core::ptr::read (2 samples, 0.02%)</title><rect x="83.1896%" y="629" width="0.0224%" height="15" fill="rgb(212,57,4)"/><text x="83.4396%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="83.1896%" y="613" width="0.0224%" height="15" fill="rgb(215,68,47)"/><text x="83.4396%" y="623.50"></text></g><g><title>[libc-2.31.so] (13 samples, 0.15%)</title><rect x="83.3688%" y="645" width="0.1456%" height="15" fill="rgb(230,84,2)"/><text x="83.6188%" y="655.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="83.5144%" y="645" width="0.0112%" height="15" fill="rgb(220,102,14)"/><text x="83.7644%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;(),tokio::runtime::task::error::JoinError&gt;&gt; (2 samples, 0.02%)</title><rect x="83.5256%" y="645" width="0.0224%" height="15" fill="rgb(240,10,32)"/><text x="83.7756%" y="655.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::store_output (18 samples, 0.20%)</title><rect x="83.5480%" y="645" width="0.2016%" height="15" fill="rgb(215,47,27)"/><text x="83.7980%" y="655.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::set_stage (18 samples, 0.20%)</title><rect x="83.5480%" y="629" width="0.2016%" height="15" fill="rgb(233,188,43)"/><text x="83.7980%" y="639.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (18 samples, 0.20%)</title><rect x="83.5480%" y="613" width="0.2016%" height="15" fill="rgb(253,190,1)"/><text x="83.7980%" y="623.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::set_stage::{{closure}} (18 samples, 0.20%)</title><rect x="83.5480%" y="597" width="0.2016%" height="15" fill="rgb(206,114,52)"/><text x="83.7980%" y="607.50"></text></g><g><title>[libc-2.31.so] (12 samples, 0.13%)</title><rect x="83.6152%" y="581" width="0.1344%" height="15" fill="rgb(233,120,37)"/><text x="83.8652%" y="591.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (5 samples, 0.06%)</title><rect x="83.7496%" y="645" width="0.0560%" height="15" fill="rgb(214,52,39)"/><text x="83.9996%" y="655.50"></text></g><g><title>core::mem::drop (5 samples, 0.06%)</title><rect x="83.7496%" y="629" width="0.0560%" height="15" fill="rgb(223,80,29)"/><text x="83.9996%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_produce::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (5 samples, 0.06%)</title><rect x="83.7496%" y="613" width="0.0560%" height="15" fill="rgb(230,101,40)"/><text x="83.9996%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_produce::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (5 samples, 0.06%)</title><rect x="83.7496%" y="597" width="0.0560%" height="15" fill="rgb(219,211,8)"/><text x="83.9996%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Core&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_produce::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (5 samples, 0.06%)</title><rect x="83.7496%" y="581" width="0.0560%" height="15" fill="rgb(252,126,28)"/><text x="83.9996%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Scheduler&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (5 samples, 0.06%)</title><rect x="83.7496%" y="565" width="0.0560%" height="15" fill="rgb(215,56,38)"/><text x="83.9996%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (5 samples, 0.06%)</title><rect x="83.7496%" y="549" width="0.0560%" height="15" fill="rgb(249,55,44)"/><text x="83.9996%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (5 samples, 0.06%)</title><rect x="83.7496%" y="533" width="0.0560%" height="15" fill="rgb(220,221,32)"/><text x="83.9996%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (5 samples, 0.06%)</title><rect x="83.7496%" y="517" width="0.0560%" height="15" fill="rgb(212,216,41)"/><text x="83.9996%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt; (5 samples, 0.06%)</title><rect x="83.7496%" y="501" width="0.0560%" height="15" fill="rgb(228,213,43)"/><text x="83.9996%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.06%)</title><rect x="83.7496%" y="485" width="0.0560%" height="15" fill="rgb(211,31,26)"/><text x="83.9996%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (5 samples, 0.06%)</title><rect x="83.7496%" y="469" width="0.0560%" height="15" fill="rgb(229,202,19)"/><text x="83.9996%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (5 samples, 0.06%)</title><rect x="83.7496%" y="453" width="0.0560%" height="15" fill="rgb(229,105,46)"/><text x="83.9996%" y="463.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::is_bound (5 samples, 0.06%)</title><rect x="83.8168%" y="629" width="0.0560%" height="15" fill="rgb(235,108,1)"/><text x="84.0668%" y="639.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (5 samples, 0.06%)</title><rect x="83.8168%" y="613" width="0.0560%" height="15" fill="rgb(245,111,35)"/><text x="84.0668%" y="623.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::is_bound::{{closure}} (5 samples, 0.06%)</title><rect x="83.8168%" y="597" width="0.0560%" height="15" fill="rgb(219,185,31)"/><text x="84.0668%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (5 samples, 0.06%)</title><rect x="83.8168%" y="581" width="0.0560%" height="15" fill="rgb(214,4,43)"/><text x="84.0668%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.01%)</title><rect x="83.9064%" y="549" width="0.0112%" height="15" fill="rgb(235,227,40)"/><text x="84.1564%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.01%)</title><rect x="83.9064%" y="533" width="0.0112%" height="15" fill="rgb(230,88,30)"/><text x="84.1564%" y="543.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Worker::eq (3 samples, 0.03%)</title><rect x="83.9512%" y="533" width="0.0336%" height="15" fill="rgb(216,217,1)"/><text x="84.2012%" y="543.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::release (12 samples, 0.13%)</title><rect x="83.8728%" y="629" width="0.1344%" height="15" fill="rgb(248,139,50)"/><text x="84.1228%" y="639.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (11 samples, 0.12%)</title><rect x="83.8840%" y="613" width="0.1232%" height="15" fill="rgb(233,1,21)"/><text x="84.1340%" y="623.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::release::{{closure}} (11 samples, 0.12%)</title><rect x="83.8840%" y="597" width="0.1232%" height="15" fill="rgb(215,183,12)"/><text x="84.1340%" y="607.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::release (10 samples, 0.11%)</title><rect x="83.8952%" y="581" width="0.1120%" height="15" fill="rgb(229,104,42)"/><text x="84.1452%" y="591.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (9 samples, 0.10%)</title><rect x="83.9064%" y="565" width="0.1008%" height="15" fill="rgb(243,34,48)"/><text x="84.1564%" y="575.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::release::{{closure}} (8 samples, 0.09%)</title><rect x="83.9176%" y="549" width="0.0896%" height="15" fill="rgb(239,11,44)"/><text x="84.1676%" y="559.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (2 samples, 0.02%)</title><rect x="83.9848%" y="533" width="0.0224%" height="15" fill="rgb(231,98,35)"/><text x="84.2348%" y="543.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::ne (1 samples, 0.01%)</title><rect x="83.9960%" y="517" width="0.0112%" height="15" fill="rgb(233,28,25)"/><text x="84.2460%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (10 samples, 0.11%)</title><rect x="84.0072%" y="597" width="0.1120%" height="15" fill="rgb(234,123,11)"/><text x="84.2572%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (10 samples, 0.11%)</title><rect x="84.0072%" y="581" width="0.1120%" height="15" fill="rgb(220,69,3)"/><text x="84.2572%" y="591.50"></text></g><g><title>tokio::runtime::task::harness::SchedulerView&lt;S&gt;::transition_to_terminal (30 samples, 0.34%)</title><rect x="83.8056%" y="645" width="0.3360%" height="15" fill="rgb(214,64,36)"/><text x="84.0556%" y="655.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_terminal (12 samples, 0.13%)</title><rect x="84.0072%" y="629" width="0.1344%" height="15" fill="rgb(211,138,32)"/><text x="84.2572%" y="639.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update (12 samples, 0.13%)</title><rect x="84.0072%" y="613" width="0.1344%" height="15" fill="rgb(213,118,47)"/><text x="84.2572%" y="623.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_terminal::{{closure}} (2 samples, 0.02%)</title><rect x="84.1192%" y="597" width="0.0224%" height="15" fill="rgb(243,124,49)"/><text x="84.3692%" y="607.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::ref_dec (2 samples, 0.02%)</title><rect x="84.1192%" y="581" width="0.0224%" height="15" fill="rgb(221,30,28)"/><text x="84.3692%" y="591.50"></text></g><g><title>tokio::runtime::task::core::Trailer::wake_join (2 samples, 0.02%)</title><rect x="84.1416%" y="629" width="0.0224%" height="15" fill="rgb(246,37,13)"/><text x="84.3916%" y="639.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="84.1416%" y="613" width="0.0224%" height="15" fill="rgb(249,66,14)"/><text x="84.3916%" y="623.50"></text></g><g><title>tokio::runtime::task::core::Trailer::wake_join::{{closure}} (2 samples, 0.02%)</title><rect x="84.1416%" y="597" width="0.0224%" height="15" fill="rgb(213,166,5)"/><text x="84.3916%" y="607.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (2 samples, 0.02%)</title><rect x="84.1416%" y="581" width="0.0224%" height="15" fill="rgb(221,66,24)"/><text x="84.3916%" y="591.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_complete (5 samples, 0.06%)</title><rect x="84.1640%" y="629" width="0.0560%" height="15" fill="rgb(210,132,17)"/><text x="84.4140%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_xor (5 samples, 0.06%)</title><rect x="84.1640%" y="613" width="0.0560%" height="15" fill="rgb(243,202,5)"/><text x="84.4140%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_xor (5 samples, 0.06%)</title><rect x="84.1640%" y="597" width="0.0560%" height="15" fill="rgb(233,70,48)"/><text x="84.4140%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;core::option::Option&lt;alloc::boxed::Box&lt;tokio::runtime::thread_pool::worker::Core&gt;&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="84.2872%" y="485" width="0.0224%" height="15" fill="rgb(238,41,26)"/><text x="84.5372%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (2 samples, 0.02%)</title><rect x="84.2872%" y="469" width="0.0224%" height="15" fill="rgb(241,19,31)"/><text x="84.5372%" y="479.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="84.2872%" y="453" width="0.0224%" height="15" fill="rgb(214,76,10)"/><text x="84.5372%" y="463.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.02%)</title><rect x="84.2872%" y="437" width="0.0224%" height="15" fill="rgb(254,202,22)"/><text x="84.5372%" y="447.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.02%)</title><rect x="84.2872%" y="421" width="0.0224%" height="15" fill="rgb(214,72,24)"/><text x="84.5372%" y="431.50"></text></g><g><title>core::mem::replace (2 samples, 0.02%)</title><rect x="84.2872%" y="405" width="0.0224%" height="15" fill="rgb(221,92,46)"/><text x="84.5372%" y="415.50"></text></g><g><title>core::mem::swap (2 samples, 0.02%)</title><rect x="84.2872%" y="389" width="0.0224%" height="15" fill="rgb(246,13,50)"/><text x="84.5372%" y="399.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.02%)</title><rect x="84.2872%" y="373" width="0.0224%" height="15" fill="rgb(240,165,38)"/><text x="84.5372%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="84.2872%" y="357" width="0.0224%" height="15" fill="rgb(241,24,51)"/><text x="84.5372%" y="367.50"></text></g><g><title>tokio::runtime::queue::Local&lt;T&gt;::push_back (2 samples, 0.02%)</title><rect x="84.3208%" y="469" width="0.0224%" height="15" fill="rgb(227,51,44)"/><text x="84.5708%" y="479.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.01%)</title><rect x="84.3320%" y="453" width="0.0112%" height="15" fill="rgb(231,121,3)"/><text x="84.5820%" y="463.50"></text></g><g><title>tokio::runtime::queue::Local&lt;T&gt;::push_back::{{closure}} (1 samples, 0.01%)</title><rect x="84.3320%" y="437" width="0.0112%" height="15" fill="rgb(245,3,41)"/><text x="84.5820%" y="447.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="84.3320%" y="421" width="0.0112%" height="15" fill="rgb(214,13,26)"/><text x="84.5820%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (13 samples, 0.15%)</title><rect x="84.4887%" y="421" width="0.1456%" height="15" fill="rgb(252,75,11)"/><text x="84.7387%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_swap (13 samples, 0.15%)</title><rect x="84.4887%" y="405" width="0.1456%" height="15" fill="rgb(218,226,17)"/><text x="84.7387%" y="415.50"></text></g><g><title>core::mem::drop (4 samples, 0.04%)</title><rect x="84.6343%" y="405" width="0.0448%" height="15" fill="rgb(248,89,38)"/><text x="84.8843%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,()&gt;&gt; (4 samples, 0.04%)</title><rect x="84.6343%" y="389" width="0.0448%" height="15" fill="rgb(237,73,46)"/><text x="84.8843%" y="399.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="84.6343%" y="373" width="0.0448%" height="15" fill="rgb(242,78,33)"/><text x="84.8843%" y="383.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (4 samples, 0.04%)</title><rect x="84.6343%" y="357" width="0.0448%" height="15" fill="rgb(235,60,3)"/><text x="84.8843%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (4 samples, 0.04%)</title><rect x="84.6343%" y="341" width="0.0448%" height="15" fill="rgb(216,172,19)"/><text x="84.8843%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.04%)</title><rect x="84.6343%" y="325" width="0.0448%" height="15" fill="rgb(227,6,42)"/><text x="84.8843%" y="335.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::notify_one (1 samples, 0.01%)</title><rect x="84.6791%" y="405" width="0.0112%" height="15" fill="rgb(223,207,42)"/><text x="84.9291%" y="415.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one (1 samples, 0.01%)</title><rect x="84.6791%" y="389" width="0.0112%" height="15" fill="rgb(246,138,30)"/><text x="84.9291%" y="399.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (32 samples, 0.36%)</title><rect x="84.3432%" y="453" width="0.3584%" height="15" fill="rgb(251,199,47)"/><text x="84.5932%" y="463.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (19 samples, 0.21%)</title><rect x="84.4887%" y="437" width="0.2128%" height="15" fill="rgb(228,218,44)"/><text x="84.7387%" y="447.50"></text></g><g><title>tokio::runtime::park::Inner::unpark_condvar (6 samples, 0.07%)</title><rect x="84.6343%" y="421" width="0.0672%" height="15" fill="rgb(220,68,6)"/><text x="84.8843%" y="431.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="84.6903%" y="405" width="0.0112%" height="15" fill="rgb(240,60,26)"/><text x="84.9403%" y="415.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.01%)</title><rect x="84.6903%" y="389" width="0.0112%" height="15" fill="rgb(211,200,19)"/><text x="84.9403%" y="399.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.01%)</title><rect x="84.6903%" y="373" width="0.0112%" height="15" fill="rgb(242,145,30)"/><text x="84.9403%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.01%)</title><rect x="84.6903%" y="357" width="0.0112%" height="15" fill="rgb(225,64,13)"/><text x="84.9403%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="84.6903%" y="341" width="0.0112%" height="15" fill="rgb(218,103,35)"/><text x="84.9403%" y="351.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (529 samples, 5.92%)</title><rect x="84.7239%" y="421" width="5.9245%" height="15" fill="rgb(216,93,46)"/><text x="84.9739%" y="431.50">&lt;parking..</text></g><g><title>syscall (529 samples, 5.92%)</title><rect x="84.7239%" y="405" width="5.9245%" height="15" fill="rgb(225,159,27)"/><text x="84.9739%" y="415.50">syscall</text></g><g><title>[unknown] (527 samples, 5.90%)</title><rect x="84.7463%" y="389" width="5.9021%" height="15" fill="rgb(225,204,11)"/><text x="84.9963%" y="399.50">[unknown]</text></g><g><title>[unknown] (514 samples, 5.76%)</title><rect x="84.8919%" y="373" width="5.7565%" height="15" fill="rgb(205,56,4)"/><text x="85.1419%" y="383.50">[unknow..</text></g><g><title>[unknown] (509 samples, 5.70%)</title><rect x="84.9479%" y="357" width="5.7005%" height="15" fill="rgb(206,6,35)"/><text x="85.1979%" y="367.50">[unknow..</text></g><g><title>[unknown] (507 samples, 5.68%)</title><rect x="84.9703%" y="341" width="5.6781%" height="15" fill="rgb(247,73,52)"/><text x="85.2203%" y="351.50">[unknow..</text></g><g><title>[unknown] (502 samples, 5.62%)</title><rect x="85.0263%" y="325" width="5.6221%" height="15" fill="rgb(246,97,4)"/><text x="85.2763%" y="335.50">[unknow..</text></g><g><title>[unknown] (438 samples, 4.91%)</title><rect x="85.7431%" y="309" width="4.9054%" height="15" fill="rgb(212,37,15)"/><text x="85.9931%" y="319.50">[unkno..</text></g><g><title>[unknown] (396 samples, 4.43%)</title><rect x="86.2135%" y="293" width="4.4350%" height="15" fill="rgb(208,130,40)"/><text x="86.4635%" y="303.50">[unkn..</text></g><g><title>[unknown] (352 samples, 3.94%)</title><rect x="86.7062%" y="277" width="3.9422%" height="15" fill="rgb(236,55,29)"/><text x="86.9562%" y="287.50">[unk..</text></g><g><title>[unknown] (286 samples, 3.20%)</title><rect x="87.4454%" y="261" width="3.2030%" height="15" fill="rgb(209,156,45)"/><text x="87.6954%" y="271.50">[un..</text></g><g><title>[unknown] (221 samples, 2.48%)</title><rect x="88.1734%" y="245" width="2.4751%" height="15" fill="rgb(249,107,4)"/><text x="88.4234%" y="255.50">[u..</text></g><g><title>[unknown] (123 samples, 1.38%)</title><rect x="89.2709%" y="229" width="1.3775%" height="15" fill="rgb(227,7,13)"/><text x="89.5209%" y="239.50"></text></g><g><title>[unknown] (41 samples, 0.46%)</title><rect x="90.1893%" y="213" width="0.4592%" height="15" fill="rgb(250,129,14)"/><text x="90.4393%" y="223.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="90.5813%" y="197" width="0.0672%" height="15" fill="rgb(229,92,13)"/><text x="90.8313%" y="207.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (8 samples, 0.09%)</title><rect x="90.6484%" y="421" width="0.0896%" height="15" fill="rgb(245,98,39)"/><text x="90.8984%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_load (8 samples, 0.09%)</title><rect x="90.6484%" y="405" width="0.0896%" height="15" fill="rgb(234,135,48)"/><text x="90.8984%" y="415.50"></text></g><g><title>&lt;std::time::Instant as core::cmp::PartialOrd&gt;::gt (7 samples, 0.08%)</title><rect x="90.7380%" y="405" width="0.0784%" height="15" fill="rgb(230,98,28)"/><text x="90.9880%" y="415.50"></text></g><g><title>&lt;std::sys::unix::time::inner::Instant as core::cmp::PartialOrd&gt;::partial_cmp (7 samples, 0.08%)</title><rect x="90.7380%" y="389" width="0.0784%" height="15" fill="rgb(223,121,0)"/><text x="90.9880%" y="399.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (7 samples, 0.08%)</title><rect x="90.7380%" y="373" width="0.0784%" height="15" fill="rgb(234,173,33)"/><text x="90.9880%" y="383.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (7 samples, 0.08%)</title><rect x="90.7380%" y="357" width="0.0784%" height="15" fill="rgb(245,47,8)"/><text x="90.9880%" y="367.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (3 samples, 0.03%)</title><rect x="90.7828%" y="341" width="0.0336%" height="15" fill="rgb(205,17,20)"/><text x="91.0328%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (2 samples, 0.02%)</title><rect x="90.7940%" y="325" width="0.0224%" height="15" fill="rgb(232,151,16)"/><text x="91.0440%" y="335.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (14 samples, 0.16%)</title><rect x="90.7380%" y="421" width="0.1568%" height="15" fill="rgb(208,30,32)"/><text x="90.9880%" y="431.50"></text></g><g><title>std::time::Instant::now (7 samples, 0.08%)</title><rect x="90.8164%" y="405" width="0.0784%" height="15" fill="rgb(254,26,3)"/><text x="91.0664%" y="415.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (7 samples, 0.08%)</title><rect x="90.8164%" y="389" width="0.0784%" height="15" fill="rgb(240,177,30)"/><text x="91.0664%" y="399.50"></text></g><g><title>std::sys::unix::time::inner::now (7 samples, 0.08%)</title><rect x="90.8164%" y="373" width="0.0784%" height="15" fill="rgb(248,76,44)"/><text x="91.0664%" y="383.50"></text></g><g><title>__clock_gettime (7 samples, 0.08%)</title><rect x="90.8164%" y="357" width="0.0784%" height="15" fill="rgb(241,186,54)"/><text x="91.0664%" y="367.50"></text></g><g><title>__vdso_clock_gettime (7 samples, 0.08%)</title><rect x="90.8164%" y="341" width="0.0784%" height="15" fill="rgb(249,171,29)"/><text x="91.0664%" y="351.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (4 samples, 0.04%)</title><rect x="90.8948%" y="421" width="0.0448%" height="15" fill="rgb(237,151,44)"/><text x="91.1448%" y="431.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (4 samples, 0.04%)</title><rect x="90.8948%" y="405" width="0.0448%" height="15" fill="rgb(228,174,30)"/><text x="91.1448%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (4 samples, 0.04%)</title><rect x="90.8948%" y="389" width="0.0448%" height="15" fill="rgb(252,14,37)"/><text x="91.1448%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (4 samples, 0.04%)</title><rect x="90.8948%" y="373" width="0.0448%" height="15" fill="rgb(207,111,40)"/><text x="91.1448%" y="383.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (565 samples, 6.33%)</title><rect x="84.7015%" y="453" width="6.3277%" height="15" fill="rgb(248,171,54)"/><text x="84.9515%" y="463.50">parking_..</text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (565 samples, 6.33%)</title><rect x="84.7015%" y="437" width="6.3277%" height="15" fill="rgb(211,127,2)"/><text x="84.9515%" y="447.50">parking_..</text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (8 samples, 0.09%)</title><rect x="90.9396%" y="421" width="0.0896%" height="15" fill="rgb(236,87,47)"/><text x="91.1896%" y="431.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (8 samples, 0.09%)</title><rect x="90.9396%" y="405" width="0.0896%" height="15" fill="rgb(223,190,45)"/><text x="91.1896%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (7 samples, 0.08%)</title><rect x="90.9508%" y="389" width="0.0784%" height="15" fill="rgb(215,5,16)"/><text x="91.2008%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (7 samples, 0.08%)</title><rect x="90.9508%" y="373" width="0.0784%" height="15" fill="rgb(252,82,33)"/><text x="91.2008%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (14 samples, 0.16%)</title><rect x="91.0292%" y="437" width="0.1568%" height="15" fill="rgb(247,213,44)"/><text x="91.2792%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;usize&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="91.1860%" y="437" width="0.0224%" height="15" fill="rgb(205,196,44)"/><text x="91.4360%" y="447.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="91.1860%" y="421" width="0.0224%" height="15" fill="rgb(237,96,54)"/><text x="91.4360%" y="431.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (2 samples, 0.02%)</title><rect x="91.1860%" y="405" width="0.0224%" height="15" fill="rgb(230,113,34)"/><text x="91.4360%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (2 samples, 0.02%)</title><rect x="91.1860%" y="389" width="0.0224%" height="15" fill="rgb(221,224,12)"/><text x="91.4360%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.02%)</title><rect x="91.1860%" y="373" width="0.0224%" height="15" fill="rgb(219,112,44)"/><text x="91.4360%" y="383.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (15 samples, 0.17%)</title><rect x="91.2084%" y="437" width="0.1680%" height="15" fill="rgb(210,31,13)"/><text x="91.4584%" y="447.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (15 samples, 0.17%)</title><rect x="91.2084%" y="421" width="0.1680%" height="15" fill="rgb(230,25,16)"/><text x="91.4584%" y="431.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (15 samples, 0.17%)</title><rect x="91.2084%" y="405" width="0.1680%" height="15" fill="rgb(246,108,53)"/><text x="91.4584%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (15 samples, 0.17%)</title><rect x="91.2084%" y="389" width="0.1680%" height="15" fill="rgb(241,172,50)"/><text x="91.4584%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (15 samples, 0.17%)</title><rect x="91.2084%" y="373" width="0.1680%" height="15" fill="rgb(235,141,10)"/><text x="91.4584%" y="383.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::notify_should_wakeup (52 samples, 0.58%)</title><rect x="91.3764%" y="437" width="0.5824%" height="15" fill="rgb(220,174,43)"/><text x="91.6264%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (52 samples, 0.58%)</title><rect x="91.3764%" y="421" width="0.5824%" height="15" fill="rgb(215,181,40)"/><text x="91.6264%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_add (52 samples, 0.58%)</title><rect x="91.3764%" y="405" width="0.5824%" height="15" fill="rgb(230,97,2)"/><text x="91.6264%" y="415.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::schedule (694 samples, 7.77%)</title><rect x="84.2200%" y="597" width="7.7724%" height="15" fill="rgb(211,25,27)"/><text x="84.4700%" y="607.50">tokio::runt..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (694 samples, 7.77%)</title><rect x="84.2200%" y="581" width="7.7724%" height="15" fill="rgb(230,87,26)"/><text x="84.4700%" y="591.50">tokio::loom..</text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::schedule::{{closure}} (694 samples, 7.77%)</title><rect x="84.2200%" y="565" width="7.7724%" height="15" fill="rgb(227,160,17)"/><text x="84.4700%" y="575.50">tokio::runt..</text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::schedule (694 samples, 7.77%)</title><rect x="84.2200%" y="549" width="7.7724%" height="15" fill="rgb(244,85,34)"/><text x="84.4700%" y="559.50">tokio::runt..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (693 samples, 7.76%)</title><rect x="84.2312%" y="533" width="7.7612%" height="15" fill="rgb(207,70,0)"/><text x="84.4812%" y="543.50">tokio::runt..</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (690 samples, 7.73%)</title><rect x="84.2648%" y="517" width="7.7276%" height="15" fill="rgb(223,129,7)"/><text x="84.5148%" y="527.50">tokio::macr..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (688 samples, 7.71%)</title><rect x="84.2872%" y="501" width="7.7052%" height="15" fill="rgb(246,105,7)"/><text x="84.5372%" y="511.50">tokio::runt..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule_local (686 samples, 7.68%)</title><rect x="84.3096%" y="485" width="7.6828%" height="15" fill="rgb(215,154,42)"/><text x="84.5596%" y="495.50">tokio::runt..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (683 samples, 7.65%)</title><rect x="84.3432%" y="469" width="7.6492%" height="15" fill="rgb(220,215,30)"/><text x="84.5932%" y="479.50">tokio::run..</text></g><g><title>tokio::runtime::thread_pool::idle::Idle::worker_to_notify (86 samples, 0.96%)</title><rect x="91.0292%" y="453" width="0.9632%" height="15" fill="rgb(228,81,51)"/><text x="91.2792%" y="463.50"></text></g><g><title>tokio::runtime::thread_pool::idle::State::unpark_one (3 samples, 0.03%)</title><rect x="91.9588%" y="437" width="0.0336%" height="15" fill="rgb(247,71,54)"/><text x="92.2088%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3 samples, 0.03%)</title><rect x="91.9588%" y="421" width="0.0336%" height="15" fill="rgb(234,176,34)"/><text x="92.2088%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.03%)</title><rect x="91.9588%" y="405" width="0.0336%" height="15" fill="rgb(241,103,54)"/><text x="92.2088%" y="415.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (779 samples, 8.72%)</title><rect x="83.3688%" y="661" width="8.7244%" height="15" fill="rgb(228,22,34)"/><text x="83.6188%" y="671.50">tokio::runti..</text></g><g><title>tokio::runtime::task::harness::transition_to_complete (710 samples, 7.95%)</title><rect x="84.1416%" y="645" width="7.9516%" height="15" fill="rgb(241,179,48)"/><text x="84.3916%" y="655.50">tokio::runt..</text></g><g><title>tokio::runtime::task::waker::wake_by_ref (703 samples, 7.87%)</title><rect x="84.2200%" y="629" width="7.8732%" height="15" fill="rgb(235,167,37)"/><text x="84.4700%" y="639.50">tokio::runt..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_ref (703 samples, 7.87%)</title><rect x="84.2200%" y="613" width="7.8732%" height="15" fill="rgb(213,109,30)"/><text x="84.4700%" y="623.50">tokio::runt..</text></g><g><title>tokio::runtime::task::state::State::transition_to_notified (9 samples, 0.10%)</title><rect x="91.9924%" y="597" width="0.1008%" height="15" fill="rgb(222,172,16)"/><text x="92.2424%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (9 samples, 0.10%)</title><rect x="91.9924%" y="581" width="0.1008%" height="15" fill="rgb(233,192,5)"/><text x="92.2424%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_or (9 samples, 0.10%)</title><rect x="91.9924%" y="565" width="0.1008%" height="15" fill="rgb(247,189,41)"/><text x="92.2424%" y="575.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::scheduler_view (1 samples, 0.01%)</title><rect x="92.1156%" y="645" width="0.0112%" height="15" fill="rgb(218,134,47)"/><text x="92.3656%" y="655.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::core (1 samples, 0.01%)</title><rect x="92.1156%" y="629" width="0.0112%" height="15" fill="rgb(216,29,3)"/><text x="92.3656%" y="639.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2 samples, 0.02%)</title><rect x="92.1268%" y="613" width="0.0224%" height="15" fill="rgb(246,140,12)"/><text x="92.3768%" y="623.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::bind_scheduler::{{closure}} (2 samples, 0.02%)</title><rect x="92.1268%" y="597" width="0.0224%" height="15" fill="rgb(230,136,11)"/><text x="92.3768%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="92.1380%" y="581" width="0.0112%" height="15" fill="rgb(247,22,47)"/><text x="92.3880%" y="591.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 0.13%)</title><rect x="92.1492%" y="581" width="0.1344%" height="15" fill="rgb(218,84,22)"/><text x="92.3992%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (12 samples, 0.13%)</title><rect x="92.1492%" y="565" width="0.1344%" height="15" fill="rgb(216,87,39)"/><text x="92.3992%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_add (12 samples, 0.13%)</title><rect x="92.1492%" y="549" width="0.1344%" height="15" fill="rgb(221,178,8)"/><text x="92.3992%" y="559.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::bind_scheduler (15 samples, 0.17%)</title><rect x="92.1268%" y="629" width="0.1680%" height="15" fill="rgb(230,42,11)"/><text x="92.3768%" y="639.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (13 samples, 0.15%)</title><rect x="92.1492%" y="613" width="0.1456%" height="15" fill="rgb(237,229,4)"/><text x="92.3992%" y="623.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::bind::{{closure}} (13 samples, 0.15%)</title><rect x="92.1492%" y="597" width="0.1456%" height="15" fill="rgb(222,31,33)"/><text x="92.3992%" y="607.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (1 samples, 0.01%)</title><rect x="92.2836%" y="581" width="0.0112%" height="15" fill="rgb(210,17,39)"/><text x="92.5336%" y="591.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="92.2836%" y="565" width="0.0112%" height="15" fill="rgb(244,93,20)"/><text x="92.5336%" y="575.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::is_bound (1 samples, 0.01%)</title><rect x="92.2948%" y="629" width="0.0112%" height="15" fill="rgb(210,40,47)"/><text x="92.5448%" y="639.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="92.2948%" y="613" width="0.0112%" height="15" fill="rgb(239,211,47)"/><text x="92.5448%" y="623.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::is_bound::{{closure}} (1 samples, 0.01%)</title><rect x="92.2948%" y="597" width="0.0112%" height="15" fill="rgb(251,223,49)"/><text x="92.5448%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.01%)</title><rect x="92.2948%" y="581" width="0.0112%" height="15" fill="rgb(221,149,5)"/><text x="92.5448%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (14 samples, 0.16%)</title><rect x="92.3284%" y="597" width="0.1568%" height="15" fill="rgb(219,224,51)"/><text x="92.5784%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (14 samples, 0.16%)</title><rect x="92.3284%" y="581" width="0.1568%" height="15" fill="rgb(223,7,8)"/><text x="92.5784%" y="591.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::ref_inc (2 samples, 0.02%)</title><rect x="92.4852%" y="581" width="0.0224%" height="15" fill="rgb(241,217,22)"/><text x="92.7352%" y="591.50"></text></g><g><title>tokio::runtime::task::harness::SchedulerView&lt;S&gt;::transition_to_running (36 samples, 0.40%)</title><rect x="92.1268%" y="645" width="0.4032%" height="15" fill="rgb(248,209,0)"/><text x="92.3768%" y="655.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (20 samples, 0.22%)</title><rect x="92.3060%" y="629" width="0.2240%" height="15" fill="rgb(217,205,4)"/><text x="92.5560%" y="639.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update (20 samples, 0.22%)</title><rect x="92.3060%" y="613" width="0.2240%" height="15" fill="rgb(228,124,39)"/><text x="92.5560%" y="623.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running::{{closure}} (4 samples, 0.04%)</title><rect x="92.4852%" y="597" width="0.0448%" height="15" fill="rgb(250,116,42)"/><text x="92.7352%" y="607.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::unset_notified (2 samples, 0.02%)</title><rect x="92.5076%" y="581" width="0.0224%" height="15" fill="rgb(223,202,9)"/><text x="92.7576%" y="591.50"></text></g><g><title>__rust_probestack (1 samples, 0.01%)</title><rect x="92.7763%" y="517" width="0.0112%" height="15" fill="rgb(242,222,40)"/><text x="93.0263%" y="527.50"></text></g><g><title>tokio::coop::poll_proceed (8 samples, 0.09%)</title><rect x="92.9331%" y="421" width="0.0896%" height="15" fill="rgb(229,99,46)"/><text x="93.1831%" y="431.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8 samples, 0.09%)</title><rect x="92.9331%" y="405" width="0.0896%" height="15" fill="rgb(225,56,46)"/><text x="93.1831%" y="415.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8 samples, 0.09%)</title><rect x="92.9331%" y="389" width="0.0896%" height="15" fill="rgb(227,94,5)"/><text x="93.1831%" y="399.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (8 samples, 0.09%)</title><rect x="92.9331%" y="373" width="0.0896%" height="15" fill="rgb(205,112,38)"/><text x="93.1831%" y="383.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (8 samples, 0.09%)</title><rect x="92.9331%" y="357" width="0.0896%" height="15" fill="rgb(231,133,46)"/><text x="93.1831%" y="367.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (8 samples, 0.09%)</title><rect x="92.9331%" y="341" width="0.0896%" height="15" fill="rgb(217,16,9)"/><text x="93.1831%" y="351.50"></text></g><g><title>core::mem::replace (8 samples, 0.09%)</title><rect x="92.9331%" y="325" width="0.0896%" height="15" fill="rgb(249,173,9)"/><text x="93.1831%" y="335.50"></text></g><g><title>core::mem::swap (8 samples, 0.09%)</title><rect x="92.9331%" y="309" width="0.0896%" height="15" fill="rgb(205,163,53)"/><text x="93.1831%" y="319.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (8 samples, 0.09%)</title><rect x="92.9331%" y="293" width="0.0896%" height="15" fill="rgb(217,54,41)"/><text x="93.1831%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.09%)</title><rect x="92.9331%" y="277" width="0.0896%" height="15" fill="rgb(228,216,12)"/><text x="93.1831%" y="287.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::try_read_output (1 samples, 0.01%)</title><rect x="93.0227%" y="421" width="0.0112%" height="15" fill="rgb(244,228,15)"/><text x="93.2727%" y="431.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.12%)</title><rect x="92.9331%" y="437" width="0.1232%" height="15" fill="rgb(221,176,53)"/><text x="93.1831%" y="447.50"></text></g><g><title>tokio::runtime::task::raw::try_read_output (2 samples, 0.02%)</title><rect x="93.0339%" y="421" width="0.0224%" height="15" fill="rgb(205,94,34)"/><text x="93.2839%" y="431.50"></text></g><g><title>[libc-2.31.so] (16 samples, 0.18%)</title><rect x="93.0563%" y="405" width="0.1792%" height="15" fill="rgb(213,110,48)"/><text x="93.3063%" y="415.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.04%)</title><rect x="93.1907%" y="389" width="0.0448%" height="15" fill="rgb(236,142,28)"/><text x="93.4407%" y="399.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="93.2355%" y="405" width="0.0112%" height="15" fill="rgb(225,135,29)"/><text x="93.4855%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Core&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Match&gt;::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="93.2467%" y="341" width="0.0112%" height="15" fill="rgb(252,45,31)"/><text x="93.4967%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Scheduler&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="93.2467%" y="325" width="0.0112%" height="15" fill="rgb(211,187,50)"/><text x="93.4967%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="93.2467%" y="309" width="0.0112%" height="15" fill="rgb(229,109,7)"/><text x="93.4967%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="93.2467%" y="293" width="0.0112%" height="15" fill="rgb(251,131,51)"/><text x="93.4967%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="93.2467%" y="277" width="0.0112%" height="15" fill="rgb(251,180,35)"/><text x="93.4967%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt; (1 samples, 0.01%)</title><rect x="93.2467%" y="261" width="0.0112%" height="15" fill="rgb(211,46,32)"/><text x="93.4967%" y="271.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="93.2467%" y="245" width="0.0112%" height="15" fill="rgb(248,123,17)"/><text x="93.4967%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="93.2467%" y="229" width="0.0112%" height="15" fill="rgb(227,141,18)"/><text x="93.4967%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="93.2467%" y="213" width="0.0112%" height="15" fill="rgb(216,102,9)"/><text x="93.4967%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Match&gt;::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="93.2467%" y="373" width="0.0224%" height="15" fill="rgb(253,47,13)"/><text x="93.4967%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Match&gt;::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="93.2467%" y="357" width="0.0224%" height="15" fill="rgb(226,93,23)"/><text x="93.4967%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Trailer&gt; (1 samples, 0.01%)</title><rect x="93.2579%" y="341" width="0.0112%" height="15" fill="rgb(247,104,17)"/><text x="93.5079%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="93.2579%" y="325" width="0.0112%" height="15" fill="rgb(233,203,26)"/><text x="93.5079%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="93.2579%" y="309" width="0.0112%" height="15" fill="rgb(244,98,49)"/><text x="93.5079%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (1 samples, 0.01%)</title><rect x="93.2579%" y="293" width="0.0112%" height="15" fill="rgb(235,134,22)"/><text x="93.5079%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (1 samples, 0.01%)</title><rect x="93.2579%" y="277" width="0.0112%" height="15" fill="rgb(221,70,32)"/><text x="93.5079%" y="287.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="93.2579%" y="261" width="0.0112%" height="15" fill="rgb(238,15,50)"/><text x="93.5079%" y="271.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (1 samples, 0.01%)</title><rect x="93.2579%" y="245" width="0.0112%" height="15" fill="rgb(215,221,48)"/><text x="93.5079%" y="255.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (1 samples, 0.01%)</title><rect x="93.2579%" y="229" width="0.0112%" height="15" fill="rgb(236,73,3)"/><text x="93.5079%" y="239.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (1 samples, 0.01%)</title><rect x="93.2579%" y="213" width="0.0112%" height="15" fill="rgb(250,107,11)"/><text x="93.5079%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="93.2579%" y="197" width="0.0112%" height="15" fill="rgb(242,39,14)"/><text x="93.5079%" y="207.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="93.2579%" y="181" width="0.0112%" height="15" fill="rgb(248,164,37)"/><text x="93.5079%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Core&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Par&gt;::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="93.2691%" y="341" width="0.0224%" height="15" fill="rgb(217,60,12)"/><text x="93.5191%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Scheduler&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="93.2691%" y="325" width="0.0224%" height="15" fill="rgb(240,125,29)"/><text x="93.5191%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="93.2691%" y="309" width="0.0224%" height="15" fill="rgb(208,207,28)"/><text x="93.5191%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="93.2691%" y="293" width="0.0224%" height="15" fill="rgb(209,159,27)"/><text x="93.5191%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="93.2691%" y="277" width="0.0224%" height="15" fill="rgb(251,176,53)"/><text x="93.5191%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt; (2 samples, 0.02%)</title><rect x="93.2691%" y="261" width="0.0224%" height="15" fill="rgb(211,85,7)"/><text x="93.5191%" y="271.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="93.2691%" y="245" width="0.0224%" height="15" fill="rgb(216,64,54)"/><text x="93.5191%" y="255.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.02%)</title><rect x="93.2691%" y="229" width="0.0224%" height="15" fill="rgb(217,54,24)"/><text x="93.5191%" y="239.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.02%)</title><rect x="93.2691%" y="213" width="0.0224%" height="15" fill="rgb(208,206,53)"/><text x="93.5191%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Par&gt;::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (3 samples, 0.03%)</title><rect x="93.2691%" y="373" width="0.0336%" height="15" fill="rgb(251,74,39)"/><text x="93.5191%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Par&gt;::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (3 samples, 0.03%)</title><rect x="93.2691%" y="357" width="0.0336%" height="15" fill="rgb(226,47,5)"/><text x="93.5191%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Trailer&gt; (1 samples, 0.01%)</title><rect x="93.2915%" y="341" width="0.0112%" height="15" fill="rgb(234,111,33)"/><text x="93.5415%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="93.2915%" y="325" width="0.0112%" height="15" fill="rgb(251,14,10)"/><text x="93.5415%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="93.2915%" y="309" width="0.0112%" height="15" fill="rgb(232,43,0)"/><text x="93.5415%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (1 samples, 0.01%)</title><rect x="93.2915%" y="293" width="0.0112%" height="15" fill="rgb(222,68,43)"/><text x="93.5415%" y="303.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (6 samples, 0.07%)</title><rect x="93.2467%" y="405" width="0.0672%" height="15" fill="rgb(217,24,23)"/><text x="93.4967%" y="415.50"></text></g><g><title>core::mem::drop (6 samples, 0.07%)</title><rect x="93.2467%" y="389" width="0.0672%" height="15" fill="rgb(229,209,14)"/><text x="93.4967%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Send&gt;::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="93.3027%" y="373" width="0.0112%" height="15" fill="rgb(250,149,48)"/><text x="93.5527%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Send&gt;::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="93.3027%" y="357" width="0.0112%" height="15" fill="rgb(210,120,37)"/><text x="93.5527%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Trailer&gt; (1 samples, 0.01%)</title><rect x="93.3027%" y="341" width="0.0112%" height="15" fill="rgb(210,21,8)"/><text x="93.5527%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="93.3027%" y="325" width="0.0112%" height="15" fill="rgb(243,145,7)"/><text x="93.5527%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="93.3027%" y="309" width="0.0112%" height="15" fill="rgb(238,178,32)"/><text x="93.5527%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (1 samples, 0.01%)</title><rect x="93.3027%" y="293" width="0.0112%" height="15" fill="rgb(222,4,10)"/><text x="93.5527%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (1 samples, 0.01%)</title><rect x="93.3027%" y="277" width="0.0112%" height="15" fill="rgb(239,7,37)"/><text x="93.5527%" y="287.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="93.3027%" y="261" width="0.0112%" height="15" fill="rgb(215,31,37)"/><text x="93.5527%" y="271.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (1 samples, 0.01%)</title><rect x="93.3027%" y="245" width="0.0112%" height="15" fill="rgb(224,83,33)"/><text x="93.5527%" y="255.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (1 samples, 0.01%)</title><rect x="93.3027%" y="229" width="0.0112%" height="15" fill="rgb(239,55,3)"/><text x="93.5527%" y="239.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (1 samples, 0.01%)</title><rect x="93.3027%" y="213" width="0.0112%" height="15" fill="rgb(247,92,11)"/><text x="93.5527%" y="223.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="93.3027%" y="197" width="0.0112%" height="15" fill="rgb(239,200,7)"/><text x="93.5527%" y="207.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="93.3027%" y="181" width="0.0112%" height="15" fill="rgb(227,115,8)"/><text x="93.5527%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::join::JoinHandle&lt;core::result::Result&lt;(),model::rho_types::ExecutionError&gt;&gt;&gt; (25 samples, 0.28%)</title><rect x="93.0563%" y="437" width="0.2800%" height="15" fill="rgb(215,189,27)"/><text x="93.3063%" y="447.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.28%)</title><rect x="93.0563%" y="421" width="0.2800%" height="15" fill="rgb(251,216,39)"/><text x="93.3063%" y="431.50"></text></g><g><title>tokio::runtime::task::state::State::drop_join_handle_fast (2 samples, 0.02%)</title><rect x="93.3139%" y="405" width="0.0224%" height="15" fill="rgb(207,29,47)"/><text x="93.5639%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (2 samples, 0.02%)</title><rect x="93.3139%" y="389" width="0.0224%" height="15" fill="rgb(210,71,34)"/><text x="93.5639%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.02%)</title><rect x="93.3139%" y="373" width="0.0224%" height="15" fill="rgb(253,217,51)"/><text x="93.5639%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.01%)</title><rect x="93.3363%" y="421" width="0.0112%" height="15" fill="rgb(222,117,46)"/><text x="93.5863%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="93.3363%" y="405" width="0.0112%" height="15" fill="rgb(226,132,6)"/><text x="93.5863%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (6 samples, 0.07%)</title><rect x="93.3475%" y="421" width="0.0672%" height="15" fill="rgb(254,145,51)"/><text x="93.5975%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (6 samples, 0.07%)</title><rect x="93.3475%" y="405" width="0.0672%" height="15" fill="rgb(231,199,27)"/><text x="93.5975%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (3 samples, 0.03%)</title><rect x="93.4147%" y="421" width="0.0336%" height="15" fill="rgb(245,158,14)"/><text x="93.6647%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_or (3 samples, 0.03%)</title><rect x="93.4147%" y="405" width="0.0336%" height="15" fill="rgb(240,113,14)"/><text x="93.6647%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (5 samples, 0.06%)</title><rect x="93.4483%" y="421" width="0.0560%" height="15" fill="rgb(210,20,13)"/><text x="93.6983%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.06%)</title><rect x="93.4483%" y="405" width="0.0560%" height="15" fill="rgb(241,144,13)"/><text x="93.6983%" y="415.50"></text></g><g><title>core::sync::atomic::fence (7 samples, 0.08%)</title><rect x="93.5043%" y="421" width="0.0784%" height="15" fill="rgb(235,43,34)"/><text x="93.7543%" y="431.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (73 samples, 0.82%)</title><rect x="92.7763%" y="533" width="0.8176%" height="15" fill="rgb(208,36,20)"/><text x="93.0263%" y="543.50"></text></g><g><title>rho_runtime::run::{{closure}}::{{closure}} (72 samples, 0.81%)</title><rect x="92.7875%" y="517" width="0.8064%" height="15" fill="rgb(239,204,10)"/><text x="93.0375%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (66 samples, 0.74%)</title><rect x="92.8547%" y="501" width="0.7392%" height="15" fill="rgb(217,84,43)"/><text x="93.1047%" y="511.50"></text></g><g><title>rho_runtime::test::{{closure}} (66 samples, 0.74%)</title><rect x="92.8547%" y="485" width="0.7392%" height="15" fill="rgb(241,170,50)"/><text x="93.1047%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (61 samples, 0.68%)</title><rect x="92.9107%" y="469" width="0.6832%" height="15" fill="rgb(226,205,29)"/><text x="93.1607%" y="479.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::evaludate::{{closure}} (60 samples, 0.67%)</title><rect x="92.9219%" y="453" width="0.6720%" height="15" fill="rgb(233,113,1)"/><text x="93.1719%" y="463.50"></text></g><g><title>crossbeam_queue::seg_queue::SegQueue&lt;T&gt;::pop (23 samples, 0.26%)</title><rect x="93.3363%" y="437" width="0.2576%" height="15" fill="rgb(253,98,13)"/><text x="93.5863%" y="447.50"></text></g><g><title>crossbeam_queue::seg_queue::Block&lt;T&gt;::destroy (1 samples, 0.01%)</title><rect x="93.5827%" y="421" width="0.0112%" height="15" fill="rgb(211,115,12)"/><text x="93.8327%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="93.5827%" y="405" width="0.0112%" height="15" fill="rgb(208,12,16)"/><text x="93.8327%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="93.5827%" y="389" width="0.0112%" height="15" fill="rgb(237,193,54)"/><text x="93.8327%" y="399.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="93.7731%" y="421" width="0.0336%" height="15" fill="rgb(243,22,42)"/><text x="94.0231%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (5 samples, 0.06%)</title><rect x="93.8067%" y="421" width="0.0560%" height="15" fill="rgb(233,151,36)"/><text x="94.0567%" y="431.50"></text></g><g><title>core::ptr::read (5 samples, 0.06%)</title><rect x="93.8067%" y="405" width="0.0560%" height="15" fill="rgb(237,57,45)"/><text x="94.0567%" y="415.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.06%)</title><rect x="93.8067%" y="389" width="0.0560%" height="15" fill="rgb(221,88,17)"/><text x="94.0567%" y="399.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (11 samples, 0.12%)</title><rect x="93.7507%" y="469" width="0.1232%" height="15" fill="rgb(230,79,15)"/><text x="94.0007%" y="479.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.12%)</title><rect x="93.7507%" y="453" width="0.1232%" height="15" fill="rgb(213,57,13)"/><text x="94.0007%" y="463.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate::{{closure}} (11 samples, 0.12%)</title><rect x="93.7507%" y="437" width="0.1232%" height="15" fill="rgb(222,116,39)"/><text x="94.0007%" y="447.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::may_raise_aborted_error (1 samples, 0.01%)</title><rect x="93.8627%" y="421" width="0.0112%" height="15" fill="rgb(245,107,2)"/><text x="94.1127%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (1 samples, 0.01%)</title><rect x="93.8627%" y="405" width="0.0112%" height="15" fill="rgb(238,1,10)"/><text x="94.1127%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="93.8627%" y="389" width="0.0112%" height="15" fill="rgb(249,4,48)"/><text x="94.1127%" y="399.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.06%)</title><rect x="93.8739%" y="469" width="0.0560%" height="15" fill="rgb(223,151,18)"/><text x="94.1239%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;&gt;&gt; (3 samples, 0.03%)</title><rect x="93.9299%" y="469" width="0.0336%" height="15" fill="rgb(227,65,43)"/><text x="94.1799%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="93.9299%" y="453" width="0.0336%" height="15" fill="rgb(218,40,45)"/><text x="94.1799%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.03%)</title><rect x="93.9299%" y="437" width="0.0336%" height="15" fill="rgb(252,121,31)"/><text x="94.1799%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.03%)</title><rect x="93.9299%" y="421" width="0.0336%" height="15" fill="rgb(219,158,43)"/><text x="94.1799%" y="431.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="93.9747%" y="389" width="0.0224%" height="15" fill="rgb(231,162,42)"/><text x="94.2247%" y="399.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.02%)</title><rect x="93.9971%" y="389" width="0.0224%" height="15" fill="rgb(217,179,25)"/><text x="94.2471%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.02%)</title><rect x="93.9971%" y="373" width="0.0224%" height="15" fill="rgb(206,212,31)"/><text x="94.2471%" y="383.50"></text></g><g><title>alloc::alloc::box_free (6 samples, 0.07%)</title><rect x="93.9747%" y="437" width="0.0672%" height="15" fill="rgb(235,144,12)"/><text x="94.2247%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.07%)</title><rect x="93.9747%" y="421" width="0.0672%" height="15" fill="rgb(213,51,10)"/><text x="94.2247%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.07%)</title><rect x="93.9747%" y="405" width="0.0672%" height="15" fill="rgb(231,145,14)"/><text x="94.2247%" y="415.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="94.0195%" y="389" width="0.0224%" height="15" fill="rgb(235,15,28)"/><text x="94.2695%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (8 samples, 0.09%)</title><rect x="93.9635%" y="469" width="0.0896%" height="15" fill="rgb(237,206,10)"/><text x="94.2135%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (8 samples, 0.09%)</title><rect x="93.9635%" y="453" width="0.0896%" height="15" fill="rgb(236,227,27)"/><text x="94.2135%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::reduce::eval_match::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;rho_runtime::storage::coordinator::AsyncStore&gt; for model::rho_types::Match&gt;::evaluate::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="94.0419%" y="437" width="0.0112%" height="15" fill="rgb(246,83,35)"/><text x="94.2919%" y="447.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.04%)</title><rect x="94.0755%" y="373" width="0.0448%" height="15" fill="rgb(220,136,24)"/><text x="94.3255%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="94.1203%" y="341" width="0.0112%" height="15" fill="rgb(217,3,25)"/><text x="94.3703%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Bundle]&gt; (1 samples, 0.01%)</title><rect x="94.1203%" y="325" width="0.0112%" height="15" fill="rgb(239,24,14)"/><text x="94.3703%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Bundle&gt;&gt; (2 samples, 0.02%)</title><rect x="94.1203%" y="357" width="0.0224%" height="15" fill="rgb(244,16,53)"/><text x="94.3703%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Bundle&gt;&gt; (1 samples, 0.01%)</title><rect x="94.1315%" y="341" width="0.0112%" height="15" fill="rgb(208,175,44)"/><text x="94.3815%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="94.1315%" y="325" width="0.0112%" height="15" fill="rgb(252,18,48)"/><text x="94.3815%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="94.1315%" y="309" width="0.0112%" height="15" fill="rgb(234,199,32)"/><text x="94.3815%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Connective&gt;&gt; (1 samples, 0.01%)</title><rect x="94.1427%" y="357" width="0.0112%" height="15" fill="rgb(225,77,54)"/><text x="94.3927%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="94.1427%" y="341" width="0.0112%" height="15" fill="rgb(225,42,25)"/><text x="94.3927%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Connective]&gt; (1 samples, 0.01%)</title><rect x="94.1427%" y="325" width="0.0112%" height="15" fill="rgb(242,227,46)"/><text x="94.3927%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="94.1539%" y="341" width="0.0224%" height="15" fill="rgb(246,197,35)"/><text x="94.4039%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Expr]&gt; (2 samples, 0.02%)</title><rect x="94.1539%" y="325" width="0.0224%" height="15" fill="rgb(215,159,26)"/><text x="94.4039%" y="335.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="94.1875%" y="277" width="0.0112%" height="15" fill="rgb(212,194,50)"/><text x="94.4375%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (5 samples, 0.06%)</title><rect x="94.1539%" y="357" width="0.0560%" height="15" fill="rgb(246,132,1)"/><text x="94.4039%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (3 samples, 0.03%)</title><rect x="94.1763%" y="341" width="0.0336%" height="15" fill="rgb(217,71,7)"/><text x="94.4263%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="94.1763%" y="325" width="0.0336%" height="15" fill="rgb(252,59,32)"/><text x="94.4263%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.03%)</title><rect x="94.1763%" y="309" width="0.0336%" height="15" fill="rgb(253,204,25)"/><text x="94.4263%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="94.1875%" y="293" width="0.0224%" height="15" fill="rgb(232,21,16)"/><text x="94.4375%" y="303.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="94.1987%" y="277" width="0.0112%" height="15" fill="rgb(248,90,29)"/><text x="94.4487%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::GUnforgeable&gt;&gt; (1 samples, 0.01%)</title><rect x="94.2099%" y="357" width="0.0112%" height="15" fill="rgb(249,223,7)"/><text x="94.4599%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::GUnforgeable&gt;&gt; (1 samples, 0.01%)</title><rect x="94.2099%" y="341" width="0.0112%" height="15" fill="rgb(231,119,42)"/><text x="94.4599%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="94.2099%" y="325" width="0.0112%" height="15" fill="rgb(215,41,35)"/><text x="94.4599%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="94.2099%" y="309" width="0.0112%" height="15" fill="rgb(220,44,45)"/><text x="94.4599%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Match&gt;&gt; (1 samples, 0.01%)</title><rect x="94.2211%" y="357" width="0.0112%" height="15" fill="rgb(253,197,36)"/><text x="94.4711%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Match&gt;&gt; (1 samples, 0.01%)</title><rect x="94.2211%" y="341" width="0.0112%" height="15" fill="rgb(245,225,54)"/><text x="94.4711%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="94.2211%" y="325" width="0.0112%" height="15" fill="rgb(239,94,37)"/><text x="94.4711%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="94.2211%" y="309" width="0.0112%" height="15" fill="rgb(242,217,10)"/><text x="94.4711%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::New&gt;&gt; (1 samples, 0.01%)</title><rect x="94.2323%" y="357" width="0.0112%" height="15" fill="rgb(250,193,7)"/><text x="94.4823%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::New&gt;&gt; (1 samples, 0.01%)</title><rect x="94.2323%" y="341" width="0.0112%" height="15" fill="rgb(230,104,19)"/><text x="94.4823%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="94.2323%" y="325" width="0.0112%" height="15" fill="rgb(230,181,4)"/><text x="94.4823%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="94.2323%" y="309" width="0.0112%" height="15" fill="rgb(216,219,49)"/><text x="94.4823%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Receive&gt;&gt; (1 samples, 0.01%)</title><rect x="94.2435%" y="357" width="0.0112%" height="15" fill="rgb(254,144,0)"/><text x="94.4935%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="94.2435%" y="341" width="0.0112%" height="15" fill="rgb(205,209,38)"/><text x="94.4935%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Receive]&gt; (1 samples, 0.01%)</title><rect x="94.2435%" y="325" width="0.0112%" height="15" fill="rgb(240,21,42)"/><text x="94.4935%" y="335.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.07%)</title><rect x="94.2547%" y="309" width="0.0672%" height="15" fill="rgb(241,132,3)"/><text x="94.5047%" y="319.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="94.3331%" y="245" width="0.0336%" height="15" fill="rgb(225,14,2)"/><text x="94.5831%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.06%)</title><rect x="94.3219%" y="277" width="0.0560%" height="15" fill="rgb(210,141,35)"/><text x="94.5719%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Par]&gt; (5 samples, 0.06%)</title><rect x="94.3219%" y="261" width="0.0560%" height="15" fill="rgb(251,14,44)"/><text x="94.5719%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (1 samples, 0.01%)</title><rect x="94.3667%" y="245" width="0.0112%" height="15" fill="rgb(247,48,18)"/><text x="94.6167%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Bundle&gt;&gt; (1 samples, 0.01%)</title><rect x="94.3667%" y="229" width="0.0112%" height="15" fill="rgb(225,0,40)"/><text x="94.6167%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Bundle&gt;&gt; (1 samples, 0.01%)</title><rect x="94.3667%" y="213" width="0.0112%" height="15" fill="rgb(221,31,33)"/><text x="94.6167%" y="223.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="94.3667%" y="197" width="0.0112%" height="15" fill="rgb(237,42,40)"/><text x="94.6167%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="94.3667%" y="181" width="0.0112%" height="15" fill="rgb(233,51,29)"/><text x="94.6167%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Par&gt;&gt; (6 samples, 0.07%)</title><rect x="94.3219%" y="293" width="0.0672%" height="15" fill="rgb(226,58,20)"/><text x="94.5719%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Par&gt;&gt; (1 samples, 0.01%)</title><rect x="94.3779%" y="277" width="0.0112%" height="15" fill="rgb(208,98,7)"/><text x="94.6279%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="94.3779%" y="261" width="0.0112%" height="15" fill="rgb(228,143,44)"/><text x="94.6279%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="94.3779%" y="245" width="0.0112%" height="15" fill="rgb(246,55,38)"/><text x="94.6279%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="94.3779%" y="229" width="0.0112%" height="15" fill="rgb(247,87,16)"/><text x="94.6279%" y="239.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="94.3779%" y="213" width="0.0112%" height="15" fill="rgb(234,129,42)"/><text x="94.6279%" y="223.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.07%)</title><rect x="94.3891%" y="277" width="0.0672%" height="15" fill="rgb(220,82,16)"/><text x="94.6391%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="94.4563%" y="245" width="0.0448%" height="15" fill="rgb(211,88,4)"/><text x="94.7063%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::GUnforgeable]&gt; (4 samples, 0.04%)</title><rect x="94.4563%" y="229" width="0.0448%" height="15" fill="rgb(248,151,21)"/><text x="94.7063%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::GUnforgeable&gt; (4 samples, 0.04%)</title><rect x="94.4563%" y="213" width="0.0448%" height="15" fill="rgb(238,163,6)"/><text x="94.7063%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::g_unforgeable::UnfInstance&gt;&gt; (4 samples, 0.04%)</title><rect x="94.4563%" y="197" width="0.0448%" height="15" fill="rgb(209,183,11)"/><text x="94.7063%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::g_unforgeable::UnfInstance&gt; (3 samples, 0.03%)</title><rect x="94.4675%" y="181" width="0.0336%" height="15" fill="rgb(219,37,20)"/><text x="94.7175%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::GPrivate&gt; (3 samples, 0.03%)</title><rect x="94.4675%" y="165" width="0.0336%" height="15" fill="rgb(210,158,4)"/><text x="94.7175%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (3 samples, 0.03%)</title><rect x="94.4675%" y="149" width="0.0336%" height="15" fill="rgb(221,167,53)"/><text x="94.7175%" y="159.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="94.4675%" y="133" width="0.0336%" height="15" fill="rgb(237,151,45)"/><text x="94.7175%" y="143.50"></text></g><g><title>bytes::bytes::shared_drop (3 samples, 0.03%)</title><rect x="94.4675%" y="117" width="0.0336%" height="15" fill="rgb(231,39,3)"/><text x="94.7175%" y="127.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (3 samples, 0.03%)</title><rect x="94.4675%" y="101" width="0.0336%" height="15" fill="rgb(212,167,28)"/><text x="94.7175%" y="111.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (3 samples, 0.03%)</title><rect x="94.4675%" y="85" width="0.0336%" height="15" fill="rgb(232,178,8)"/><text x="94.7175%" y="95.50"></text></g><g><title>bytes::bytes::release_shared (3 samples, 0.03%)</title><rect x="94.4675%" y="69" width="0.0336%" height="15" fill="rgb(225,151,20)"/><text x="94.7175%" y="79.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.03%)</title><rect x="94.4675%" y="53" width="0.0336%" height="15" fill="rgb(238,3,37)"/><text x="94.7175%" y="63.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.03%)</title><rect x="94.4675%" y="37" width="0.0336%" height="15" fill="rgb(251,147,42)"/><text x="94.7175%" y="47.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::GUnforgeable&gt;&gt; (5 samples, 0.06%)</title><rect x="94.4563%" y="261" width="0.0560%" height="15" fill="rgb(208,173,10)"/><text x="94.7063%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::GUnforgeable&gt;&gt; (1 samples, 0.01%)</title><rect x="94.5011%" y="245" width="0.0112%" height="15" fill="rgb(246,225,4)"/><text x="94.7511%" y="255.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="94.5011%" y="229" width="0.0112%" height="15" fill="rgb(248,102,6)"/><text x="94.7511%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="94.5011%" y="213" width="0.0112%" height="15" fill="rgb(232,6,21)"/><text x="94.7511%" y="223.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="94.5011%" y="197" width="0.0112%" height="15" fill="rgb(221,179,22)"/><text x="94.7511%" y="207.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="94.5011%" y="181" width="0.0112%" height="15" fill="rgb(252,50,20)"/><text x="94.7511%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.27%)</title><rect x="94.2547%" y="341" width="0.2688%" height="15" fill="rgb(222,56,38)"/><text x="94.5047%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Send]&gt; (24 samples, 0.27%)</title><rect x="94.2547%" y="325" width="0.2688%" height="15" fill="rgb(206,193,29)"/><text x="94.5047%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Send&gt; (18 samples, 0.20%)</title><rect x="94.3219%" y="309" width="0.2016%" height="15" fill="rgb(239,192,45)"/><text x="94.5719%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::Par&gt;&gt; (12 samples, 0.13%)</title><rect x="94.3891%" y="293" width="0.1344%" height="15" fill="rgb(254,18,36)"/><text x="94.6391%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (6 samples, 0.07%)</title><rect x="94.4563%" y="277" width="0.0672%" height="15" fill="rgb(221,127,11)"/><text x="94.7063%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Receive&gt;&gt; (1 samples, 0.01%)</title><rect x="94.5123%" y="261" width="0.0112%" height="15" fill="rgb(234,146,35)"/><text x="94.7623%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Receive&gt;&gt; (1 samples, 0.01%)</title><rect x="94.5123%" y="245" width="0.0112%" height="15" fill="rgb(254,201,37)"/><text x="94.7623%" y="255.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="94.5123%" y="229" width="0.0112%" height="15" fill="rgb(211,202,23)"/><text x="94.7623%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="94.5123%" y="213" width="0.0112%" height="15" fill="rgb(237,91,2)"/><text x="94.7623%" y="223.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="94.5235%" y="277" width="0.0224%" height="15" fill="rgb(226,228,36)"/><text x="94.7735%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.50%)</title><rect x="94.0531%" y="437" width="0.5040%" height="15" fill="rgb(213,63,50)"/><text x="94.3031%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::MatchCase]&gt; (45 samples, 0.50%)</title><rect x="94.0531%" y="421" width="0.5040%" height="15" fill="rgb(235,194,19)"/><text x="94.3031%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::MatchCase&gt; (45 samples, 0.50%)</title><rect x="94.0531%" y="405" width="0.5040%" height="15" fill="rgb(207,204,18)"/><text x="94.3031%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::Par&gt;&gt; (45 samples, 0.50%)</title><rect x="94.0531%" y="389" width="0.5040%" height="15" fill="rgb(248,8,7)"/><text x="94.3031%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (39 samples, 0.44%)</title><rect x="94.1203%" y="373" width="0.4368%" height="15" fill="rgb(223,145,47)"/><text x="94.3703%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Send&gt;&gt; (27 samples, 0.30%)</title><rect x="94.2547%" y="357" width="0.3024%" height="15" fill="rgb(228,84,11)"/><text x="94.5047%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Send&gt;&gt; (3 samples, 0.03%)</title><rect x="94.5235%" y="341" width="0.0336%" height="15" fill="rgb(218,76,45)"/><text x="94.7735%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="94.5235%" y="325" width="0.0336%" height="15" fill="rgb(223,80,15)"/><text x="94.7735%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.03%)</title><rect x="94.5235%" y="309" width="0.0336%" height="15" fill="rgb(219,218,33)"/><text x="94.7735%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.03%)</title><rect x="94.5235%" y="293" width="0.0336%" height="15" fill="rgb(208,51,11)"/><text x="94.7735%" y="303.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="94.5459%" y="277" width="0.0112%" height="15" fill="rgb(229,165,39)"/><text x="94.7959%" y="287.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="94.5571%" y="373" width="0.0112%" height="15" fill="rgb(241,100,24)"/><text x="94.8071%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::MatchCase&gt;&gt; (47 samples, 0.53%)</title><rect x="94.0531%" y="453" width="0.5264%" height="15" fill="rgb(228,14,23)"/><text x="94.3031%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::MatchCase&gt;&gt; (2 samples, 0.02%)</title><rect x="94.5571%" y="437" width="0.0224%" height="15" fill="rgb(247,116,52)"/><text x="94.8071%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="94.5571%" y="421" width="0.0224%" height="15" fill="rgb(216,149,33)"/><text x="94.8071%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="94.5571%" y="405" width="0.0224%" height="15" fill="rgb(238,142,29)"/><text x="94.8071%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="94.5571%" y="389" width="0.0224%" height="15" fill="rgb(224,83,40)"/><text x="94.8071%" y="399.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="94.5683%" y="373" width="0.0112%" height="15" fill="rgb(234,165,11)"/><text x="94.8183%" y="383.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="94.5795%" y="437" width="0.0224%" height="15" fill="rgb(215,96,23)"/><text x="94.8295%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="94.6019%" y="405" width="0.0112%" height="15" fill="rgb(233,179,26)"/><text x="94.8519%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Expr]&gt; (1 samples, 0.01%)</title><rect x="94.6019%" y="389" width="0.0112%" height="15" fill="rgb(225,129,33)"/><text x="94.8519%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Match&gt; (51 samples, 0.57%)</title><rect x="94.0531%" y="469" width="0.5712%" height="15" fill="rgb(237,49,13)"/><text x="94.3031%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::Par&gt;&gt; (4 samples, 0.04%)</title><rect x="94.5795%" y="453" width="0.0448%" height="15" fill="rgb(211,3,31)"/><text x="94.8295%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (2 samples, 0.02%)</title><rect x="94.6019%" y="437" width="0.0224%" height="15" fill="rgb(216,152,19)"/><text x="94.8519%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (2 samples, 0.02%)</title><rect x="94.6019%" y="421" width="0.0224%" height="15" fill="rgb(251,121,35)"/><text x="94.8519%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (1 samples, 0.01%)</title><rect x="94.6131%" y="405" width="0.0112%" height="15" fill="rgb(210,217,47)"/><text x="94.8631%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="94.6131%" y="389" width="0.0112%" height="15" fill="rgb(244,116,22)"/><text x="94.8631%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="94.6131%" y="373" width="0.0112%" height="15" fill="rgb(228,17,21)"/><text x="94.8631%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="94.6131%" y="357" width="0.0112%" height="15" fill="rgb(240,149,34)"/><text x="94.8631%" y="367.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="94.6131%" y="341" width="0.0112%" height="15" fill="rgb(208,125,47)"/><text x="94.8631%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Bundle&gt;&gt; (1 samples, 0.01%)</title><rect x="94.6243%" y="453" width="0.0112%" height="15" fill="rgb(249,186,39)"/><text x="94.8743%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Bundle&gt;&gt; (1 samples, 0.01%)</title><rect x="94.6243%" y="437" width="0.0112%" height="15" fill="rgb(240,220,33)"/><text x="94.8743%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="94.6243%" y="421" width="0.0112%" height="15" fill="rgb(243,110,23)"/><text x="94.8743%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="94.6243%" y="405" width="0.0112%" height="15" fill="rgb(219,163,46)"/><text x="94.8743%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::GUnforgeable&gt;&gt; (1 samples, 0.01%)</title><rect x="94.6355%" y="453" width="0.0112%" height="15" fill="rgb(216,126,30)"/><text x="94.8855%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="94.6355%" y="437" width="0.0112%" height="15" fill="rgb(208,139,11)"/><text x="94.8855%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::GUnforgeable]&gt; (1 samples, 0.01%)</title><rect x="94.6355%" y="421" width="0.0112%" height="15" fill="rgb(213,118,36)"/><text x="94.8855%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="94.6467%" y="437" width="0.0112%" height="15" fill="rgb(226,43,17)"/><text x="94.8967%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Match]&gt; (1 samples, 0.01%)</title><rect x="94.6467%" y="421" width="0.0112%" height="15" fill="rgb(254,217,4)"/><text x="94.8967%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Match&gt;&gt; (2 samples, 0.02%)</title><rect x="94.6467%" y="453" width="0.0224%" height="15" fill="rgb(210,134,47)"/><text x="94.8967%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Match&gt;&gt; (1 samples, 0.01%)</title><rect x="94.6579%" y="437" width="0.0112%" height="15" fill="rgb(237,24,49)"/><text x="94.9079%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="94.6579%" y="421" width="0.0112%" height="15" fill="rgb(251,39,46)"/><text x="94.9079%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="94.6579%" y="405" width="0.0112%" height="15" fill="rgb(251,220,3)"/><text x="94.9079%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="94.6579%" y="389" width="0.0112%" height="15" fill="rgb(228,105,12)"/><text x="94.9079%" y="399.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="94.6579%" y="373" width="0.0112%" height="15" fill="rgb(215,196,1)"/><text x="94.9079%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (5 samples, 0.06%)</title><rect x="94.6243%" y="469" width="0.0560%" height="15" fill="rgb(214,33,39)"/><text x="94.8743%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Send&gt;&gt; (1 samples, 0.01%)</title><rect x="94.6691%" y="453" width="0.0112%" height="15" fill="rgb(220,19,52)"/><text x="94.9191%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="94.6691%" y="437" width="0.0112%" height="15" fill="rgb(221,78,38)"/><text x="94.9191%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="94.6691%" y="421" width="0.0112%" height="15" fill="rgb(253,30,16)"/><text x="94.9191%" y="431.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="94.6803%" y="373" width="0.0112%" height="15" fill="rgb(242,65,0)"/><text x="94.9303%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Par&gt;&gt; (3 samples, 0.03%)</title><rect x="94.6803%" y="453" width="0.0336%" height="15" fill="rgb(235,201,12)"/><text x="94.9303%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Par&gt;&gt; (3 samples, 0.03%)</title><rect x="94.6803%" y="437" width="0.0336%" height="15" fill="rgb(233,161,9)"/><text x="94.9303%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="94.6803%" y="421" width="0.0336%" height="15" fill="rgb(241,207,41)"/><text x="94.9303%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.03%)</title><rect x="94.6803%" y="405" width="0.0336%" height="15" fill="rgb(212,69,46)"/><text x="94.9303%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.03%)</title><rect x="94.6803%" y="389" width="0.0336%" height="15" fill="rgb(239,69,45)"/><text x="94.9303%" y="399.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="94.6915%" y="373" width="0.0224%" height="15" fill="rgb(242,117,48)"/><text x="94.9415%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Send&gt; (4 samples, 0.04%)</title><rect x="94.6803%" y="469" width="0.0448%" height="15" fill="rgb(228,41,36)"/><text x="94.9303%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::Par&gt;&gt; (1 samples, 0.01%)</title><rect x="94.7139%" y="453" width="0.0112%" height="15" fill="rgb(212,3,32)"/><text x="94.9639%" y="463.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.06%)</title><rect x="94.7587%" y="309" width="0.0560%" height="15" fill="rgb(233,41,49)"/><text x="95.0087%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (8 samples, 0.09%)</title><rect x="94.7587%" y="389" width="0.0896%" height="15" fill="rgb(252,170,49)"/><text x="95.0087%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (8 samples, 0.09%)</title><rect x="94.7587%" y="373" width="0.0896%" height="15" fill="rgb(229,53,26)"/><text x="95.0087%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.09%)</title><rect x="94.7587%" y="357" width="0.0896%" height="15" fill="rgb(217,157,12)"/><text x="95.0087%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.09%)</title><rect x="94.7587%" y="341" width="0.0896%" height="15" fill="rgb(227,17,9)"/><text x="95.0087%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.09%)</title><rect x="94.7587%" y="325" width="0.0896%" height="15" fill="rgb(218,84,12)"/><text x="95.0087%" y="335.50"></text></g><g><title>cfree (3 samples, 0.03%)</title><rect x="94.8146%" y="309" width="0.0336%" height="15" fill="rgb(212,79,24)"/><text x="95.0646%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Receive&gt;&gt; (1 samples, 0.01%)</title><rect x="94.8482%" y="389" width="0.0112%" height="15" fill="rgb(217,222,37)"/><text x="95.0982%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="94.8482%" y="373" width="0.0112%" height="15" fill="rgb(246,208,8)"/><text x="95.0982%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Receive]&gt; (1 samples, 0.01%)</title><rect x="94.8482%" y="357" width="0.0112%" height="15" fill="rgb(244,133,10)"/><text x="95.0982%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;rho_runtime::interpreter::reduce::environment::Env&gt; (13 samples, 0.15%)</title><rect x="94.7251%" y="469" width="0.1456%" height="15" fill="rgb(209,219,41)"/><text x="94.9751%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[model::rho_types::Par: 6]&gt;&gt; (13 samples, 0.15%)</title><rect x="94.7251%" y="453" width="0.1456%" height="15" fill="rgb(253,175,45)"/><text x="94.9751%" y="463.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.15%)</title><rect x="94.7251%" y="437" width="0.1456%" height="15" fill="rgb(235,100,37)"/><text x="94.9751%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Par]&gt; (12 samples, 0.13%)</title><rect x="94.7363%" y="421" width="0.1344%" height="15" fill="rgb(225,87,19)"/><text x="94.9863%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (12 samples, 0.13%)</title><rect x="94.7363%" y="405" width="0.1344%" height="15" fill="rgb(217,152,17)"/><text x="94.9863%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Send&gt;&gt; (1 samples, 0.01%)</title><rect x="94.8594%" y="389" width="0.0112%" height="15" fill="rgb(235,72,13)"/><text x="95.1094%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Send&gt;&gt; (1 samples, 0.01%)</title><rect x="94.8594%" y="373" width="0.0112%" height="15" fill="rgb(233,140,18)"/><text x="95.1094%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="94.8594%" y="357" width="0.0112%" height="15" fill="rgb(207,212,28)"/><text x="95.1094%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="94.8594%" y="341" width="0.0112%" height="15" fill="rgb(220,130,25)"/><text x="95.1094%" y="351.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="94.8706%" y="437" width="0.0224%" height="15" fill="rgb(205,55,34)"/><text x="95.1206%" y="447.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_match::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Match&gt;::evaluate (3 samples, 0.03%)</title><rect x="94.8706%" y="469" width="0.0336%" height="15" fill="rgb(237,54,35)"/><text x="95.1206%" y="479.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (3 samples, 0.03%)</title><rect x="94.8706%" y="453" width="0.0336%" height="15" fill="rgb(208,67,23)"/><text x="95.1206%" y="463.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="94.8930%" y="437" width="0.0112%" height="15" fill="rgb(206,207,50)"/><text x="95.1430%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="94.8930%" y="421" width="0.0112%" height="15" fill="rgb(213,211,42)"/><text x="95.1430%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="94.8930%" y="405" width="0.0112%" height="15" fill="rgb(252,197,50)"/><text x="95.1430%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="94.8930%" y="389" width="0.0112%" height="15" fill="rgb(251,211,41)"/><text x="95.1430%" y="399.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="94.8930%" y="373" width="0.0112%" height="15" fill="rgb(229,211,5)"/><text x="95.1430%" y="383.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate (1 samples, 0.01%)</title><rect x="94.9042%" y="469" width="0.0112%" height="15" fill="rgb(239,36,31)"/><text x="95.1542%" y="479.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1 samples, 0.01%)</title><rect x="94.9042%" y="453" width="0.0112%" height="15" fill="rgb(248,67,31)"/><text x="95.1542%" y="463.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="94.9042%" y="437" width="0.0112%" height="15" fill="rgb(249,55,44)"/><text x="95.1542%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="94.9042%" y="421" width="0.0112%" height="15" fill="rgb(216,82,12)"/><text x="95.1542%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="94.9042%" y="405" width="0.0112%" height="15" fill="rgb(242,174,1)"/><text x="95.1542%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="94.9042%" y="389" width="0.0112%" height="15" fill="rgb(208,120,29)"/><text x="95.1542%" y="399.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="94.9042%" y="373" width="0.0112%" height="15" fill="rgb(221,105,43)"/><text x="95.1542%" y="383.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="94.9154%" y="437" width="0.0224%" height="15" fill="rgb(234,124,22)"/><text x="95.1654%" y="447.50"></text></g><g><title>__libc_malloc (2 samples, 0.02%)</title><rect x="94.9378%" y="373" width="0.0224%" height="15" fill="rgb(212,23,30)"/><text x="95.1878%" y="383.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (119 samples, 1.33%)</title><rect x="93.6387%" y="501" width="1.3327%" height="15" fill="rgb(219,122,53)"/><text x="93.8887%" y="511.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation::{{closure}} (117 samples, 1.31%)</title><rect x="93.6611%" y="485" width="1.3103%" height="15" fill="rgb(248,84,24)"/><text x="93.9111%" y="495.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_send::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Send&gt;::evaluate (5 samples, 0.06%)</title><rect x="94.9154%" y="469" width="0.0560%" height="15" fill="rgb(245,115,18)"/><text x="95.1654%" y="479.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (5 samples, 0.06%)</title><rect x="94.9154%" y="453" width="0.0560%" height="15" fill="rgb(227,176,51)"/><text x="95.1654%" y="463.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.03%)</title><rect x="94.9378%" y="437" width="0.0336%" height="15" fill="rgb(229,63,42)"/><text x="95.1878%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.03%)</title><rect x="94.9378%" y="421" width="0.0336%" height="15" fill="rgb(247,202,24)"/><text x="95.1878%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.03%)</title><rect x="94.9378%" y="405" width="0.0336%" height="15" fill="rgb(244,173,20)"/><text x="95.1878%" y="415.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.03%)</title><rect x="94.9378%" y="389" width="0.0336%" height="15" fill="rgb(242,81,47)"/><text x="95.1878%" y="399.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="94.9602%" y="373" width="0.0112%" height="15" fill="rgb(231,185,54)"/><text x="95.2102%" y="383.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (124 samples, 1.39%)</title><rect x="93.5939%" y="533" width="1.3887%" height="15" fill="rgb(243,55,32)"/><text x="93.8439%" y="543.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (121 samples, 1.36%)</title><rect x="93.6275%" y="517" width="1.3551%" height="15" fill="rgb(208,167,19)"/><text x="93.8775%" y="527.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::new_unchecked (1 samples, 0.01%)</title><rect x="94.9714%" y="501" width="0.0112%" height="15" fill="rgb(231,72,35)"/><text x="95.2214%" y="511.50"></text></g><g><title>[libc-2.31.so] (24 samples, 0.27%)</title><rect x="94.9826%" y="469" width="0.2688%" height="15" fill="rgb(250,173,51)"/><text x="95.2326%" y="479.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (229 samples, 2.56%)</title><rect x="92.6980%" y="581" width="2.5647%" height="15" fill="rgb(209,5,22)"/><text x="92.9480%" y="591.50">&lt;s..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (229 samples, 2.56%)</title><rect x="92.6980%" y="565" width="2.5647%" height="15" fill="rgb(250,174,19)"/><text x="92.9480%" y="575.50">to..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (229 samples, 2.56%)</title><rect x="92.6980%" y="549" width="2.5647%" height="15" fill="rgb(217,3,49)"/><text x="92.9480%" y="559.50">to..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::drop_future_or_output (25 samples, 0.28%)</title><rect x="94.9826%" y="533" width="0.2800%" height="15" fill="rgb(218,225,5)"/><text x="95.2326%" y="543.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::set_stage (25 samples, 0.28%)</title><rect x="94.9826%" y="517" width="0.2800%" height="15" fill="rgb(236,89,11)"/><text x="95.2326%" y="527.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (25 samples, 0.28%)</title><rect x="94.9826%" y="501" width="0.2800%" height="15" fill="rgb(206,33,28)"/><text x="95.2326%" y="511.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::set_stage::{{closure}} (25 samples, 0.28%)</title><rect x="94.9826%" y="485" width="0.2800%" height="15" fill="rgb(241,56,42)"/><text x="95.2326%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_produce::{{closure}}&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="95.2514%" y="469" width="0.0112%" height="15" fill="rgb(222,44,11)"/><text x="95.5014%" y="479.50"></text></g><g><title>std::panic::catch_unwind (230 samples, 2.58%)</title><rect x="92.6980%" y="629" width="2.5759%" height="15" fill="rgb(234,111,20)"/><text x="92.9480%" y="639.50">st..</text></g><g><title>std::panicking::try (230 samples, 2.58%)</title><rect x="92.6980%" y="613" width="2.5759%" height="15" fill="rgb(237,77,6)"/><text x="92.9480%" y="623.50">st..</text></g><g><title>std::panicking::try::do_call (230 samples, 2.58%)</title><rect x="92.6980%" y="597" width="2.5759%" height="15" fill="rgb(235,111,23)"/><text x="92.9480%" y="607.50">st..</text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="95.2626%" y="581" width="0.0112%" height="15" fill="rgb(251,135,29)"/><text x="95.5126%" y="591.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (286 samples, 3.20%)</title><rect x="92.0932%" y="661" width="3.2030%" height="15" fill="rgb(217,57,1)"/><text x="92.3432%" y="671.50">tok..</text></g><g><title>tokio::runtime::task::harness::poll_future (247 samples, 2.77%)</title><rect x="92.5300%" y="645" width="2.7663%" height="15" fill="rgb(249,119,31)"/><text x="92.7800%" y="655.50">to..</text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (2 samples, 0.02%)</title><rect x="95.2738%" y="629" width="0.0224%" height="15" fill="rgb(233,164,33)"/><text x="95.5238%" y="639.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update (2 samples, 0.02%)</title><rect x="95.2738%" y="613" width="0.0224%" height="15" fill="rgb(250,217,43)"/><text x="95.5238%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="95.2850%" y="597" width="0.0112%" height="15" fill="rgb(232,154,50)"/><text x="95.5350%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="95.2850%" y="581" width="0.0112%" height="15" fill="rgb(227,190,8)"/><text x="95.5350%" y="591.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1,080 samples, 12.10%)</title><rect x="83.2120%" y="677" width="12.0954%" height="15" fill="rgb(209,217,32)"/><text x="83.4620%" y="687.50">tokio::runtime::ta..</text></g><g><title>tokio::runtime::task::harness::poll_future (1 samples, 0.01%)</title><rect x="95.2962%" y="661" width="0.0112%" height="15" fill="rgb(243,203,50)"/><text x="95.5462%" y="671.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="95.2962%" y="645" width="0.0112%" height="15" fill="rgb(232,152,27)"/><text x="95.5462%" y="655.50"></text></g><g><title>tokio::coop::budget (1,110 samples, 12.43%)</title><rect x="82.9208%" y="805" width="12.4314%" height="15" fill="rgb(240,34,29)"/><text x="83.1708%" y="815.50">tokio::coop::budget</text></g><g><title>tokio::coop::with_budget (1,110 samples, 12.43%)</title><rect x="82.9208%" y="789" width="12.4314%" height="15" fill="rgb(215,185,52)"/><text x="83.1708%" y="799.50">tokio::coop::with_b..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,110 samples, 12.43%)</title><rect x="82.9208%" y="773" width="12.4314%" height="15" fill="rgb(240,89,49)"/><text x="83.1708%" y="783.50">std::thread::local:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,103 samples, 12.35%)</title><rect x="82.9992%" y="757" width="12.3530%" height="15" fill="rgb(225,12,52)"/><text x="83.2492%" y="767.50">std::thread::local..</text></g><g><title>tokio::coop::with_budget::{{closure}} (1,102 samples, 12.34%)</title><rect x="83.0104%" y="741" width="12.3418%" height="15" fill="rgb(239,128,45)"/><text x="83.2604%" y="751.50">tokio::coop::with_..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (1,102 samples, 12.34%)</title><rect x="83.0104%" y="725" width="12.3418%" height="15" fill="rgb(211,78,47)"/><text x="83.2604%" y="735.50">tokio::runtime::th..</text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (1,084 samples, 12.14%)</title><rect x="83.2120%" y="709" width="12.1402%" height="15" fill="rgb(232,31,21)"/><text x="83.4620%" y="719.50">tokio::runtime::ta..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (1,084 samples, 12.14%)</title><rect x="83.2120%" y="693" width="12.1402%" height="15" fill="rgb(222,168,14)"/><text x="83.4620%" y="703.50">tokio::runtime::ta..</text></g><g><title>tokio::runtime::task::raw::poll (4 samples, 0.04%)</title><rect x="95.3074%" y="677" width="0.0448%" height="15" fill="rgb(209,128,24)"/><text x="95.5574%" y="687.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::transition_worker_from_searching (2 samples, 0.02%)</title><rect x="95.3634%" y="773" width="0.0224%" height="15" fill="rgb(249,35,13)"/><text x="95.6134%" y="783.50"></text></g><g><title>tokio::runtime::thread_pool::idle::State::dec_num_searching (2 samples, 0.02%)</title><rect x="95.3634%" y="757" width="0.0224%" height="15" fill="rgb(218,7,2)"/><text x="95.6134%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.02%)</title><rect x="95.3634%" y="741" width="0.0224%" height="15" fill="rgb(238,107,27)"/><text x="95.6134%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.02%)</title><rect x="95.3634%" y="725" width="0.0224%" height="15" fill="rgb(217,88,38)"/><text x="95.6134%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (8 samples, 0.09%)</title><rect x="95.3970%" y="725" width="0.0896%" height="15" fill="rgb(230,207,0)"/><text x="95.6470%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_swap (8 samples, 0.09%)</title><rect x="95.3970%" y="709" width="0.0896%" height="15" fill="rgb(249,64,54)"/><text x="95.6470%" y="719.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (11 samples, 0.12%)</title><rect x="95.3858%" y="757" width="0.1232%" height="15" fill="rgb(231,7,11)"/><text x="95.6358%" y="767.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (11 samples, 0.12%)</title><rect x="95.3858%" y="741" width="0.1232%" height="15" fill="rgb(205,149,21)"/><text x="95.6358%" y="751.50"></text></g><g><title>tokio::runtime::park::Inner::unpark_condvar (2 samples, 0.02%)</title><rect x="95.4866%" y="725" width="0.0224%" height="15" fill="rgb(215,126,34)"/><text x="95.7366%" y="735.50"></text></g><g><title>core::mem::drop (2 samples, 0.02%)</title><rect x="95.4866%" y="709" width="0.0224%" height="15" fill="rgb(241,132,45)"/><text x="95.7366%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,()&gt;&gt; (2 samples, 0.02%)</title><rect x="95.4866%" y="693" width="0.0224%" height="15" fill="rgb(252,69,32)"/><text x="95.7366%" y="703.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="95.4866%" y="677" width="0.0224%" height="15" fill="rgb(232,204,19)"/><text x="95.7366%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (2 samples, 0.02%)</title><rect x="95.4866%" y="661" width="0.0224%" height="15" fill="rgb(249,15,47)"/><text x="95.7366%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.01%)</title><rect x="95.4978%" y="645" width="0.0112%" height="15" fill="rgb(209,227,23)"/><text x="95.7478%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="95.4978%" y="629" width="0.0112%" height="15" fill="rgb(248,92,24)"/><text x="95.7478%" y="639.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.01%)</title><rect x="95.5314%" y="709" width="0.0112%" height="15" fill="rgb(247,59,2)"/><text x="95.7814%" y="719.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.01%)</title><rect x="95.5314%" y="693" width="0.0112%" height="15" fill="rgb(221,30,5)"/><text x="95.7814%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::now (1 samples, 0.01%)</title><rect x="95.5314%" y="677" width="0.0112%" height="15" fill="rgb(208,108,53)"/><text x="95.7814%" y="687.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (1 samples, 0.01%)</title><rect x="95.5314%" y="661" width="0.0112%" height="15" fill="rgb(211,183,26)"/><text x="95.7814%" y="671.50"></text></g><g><title>parking_lot_core::parking_lot::park (1 samples, 0.01%)</title><rect x="95.5314%" y="645" width="0.0112%" height="15" fill="rgb(232,132,4)"/><text x="95.7814%" y="655.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (1 samples, 0.01%)</title><rect x="95.5314%" y="629" width="0.0112%" height="15" fill="rgb(253,128,37)"/><text x="95.7814%" y="639.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (1 samples, 0.01%)</title><rect x="95.5314%" y="613" width="0.0112%" height="15" fill="rgb(221,58,24)"/><text x="95.7814%" y="623.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (1 samples, 0.01%)</title><rect x="95.5314%" y="597" width="0.0112%" height="15" fill="rgb(230,54,45)"/><text x="95.7814%" y="607.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (1 samples, 0.01%)</title><rect x="95.5314%" y="581" width="0.0112%" height="15" fill="rgb(254,21,18)"/><text x="95.7814%" y="591.50"></text></g><g><title>syscall (1 samples, 0.01%)</title><rect x="95.5314%" y="565" width="0.0112%" height="15" fill="rgb(221,108,0)"/><text x="95.7814%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="95.5314%" y="549" width="0.0112%" height="15" fill="rgb(206,95,1)"/><text x="95.7814%" y="559.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (247 samples, 2.77%)</title><rect x="95.5202%" y="725" width="2.7663%" height="15" fill="rgb(237,52,5)"/><text x="95.7702%" y="735.50">&lt;p..</text></g><g><title>syscall (245 samples, 2.74%)</title><rect x="95.5426%" y="709" width="2.7439%" height="15" fill="rgb(218,150,34)"/><text x="95.7926%" y="719.50">sy..</text></g><g><title>[unknown] (243 samples, 2.72%)</title><rect x="95.5650%" y="693" width="2.7215%" height="15" fill="rgb(235,194,28)"/><text x="95.8150%" y="703.50">[u..</text></g><g><title>[unknown] (236 samples, 2.64%)</title><rect x="95.6434%" y="677" width="2.6431%" height="15" fill="rgb(245,92,18)"/><text x="95.8934%" y="687.50">[u..</text></g><g><title>[unknown] (234 samples, 2.62%)</title><rect x="95.6658%" y="661" width="2.6207%" height="15" fill="rgb(253,203,53)"/><text x="95.9158%" y="671.50">[u..</text></g><g><title>[unknown] (232 samples, 2.60%)</title><rect x="95.6882%" y="645" width="2.5983%" height="15" fill="rgb(249,185,47)"/><text x="95.9382%" y="655.50">[u..</text></g><g><title>[unknown] (231 samples, 2.59%)</title><rect x="95.6994%" y="629" width="2.5871%" height="15" fill="rgb(252,194,52)"/><text x="95.9494%" y="639.50">[u..</text></g><g><title>[unknown] (197 samples, 2.21%)</title><rect x="96.0802%" y="613" width="2.2063%" height="15" fill="rgb(210,53,36)"/><text x="96.3302%" y="623.50">[..</text></g><g><title>[unknown] (173 samples, 1.94%)</title><rect x="96.3490%" y="597" width="1.9375%" height="15" fill="rgb(237,37,25)"/><text x="96.5990%" y="607.50">[..</text></g><g><title>[unknown] (148 samples, 1.66%)</title><rect x="96.6290%" y="581" width="1.6575%" height="15" fill="rgb(242,116,27)"/><text x="96.8790%" y="591.50"></text></g><g><title>[unknown] (108 samples, 1.21%)</title><rect x="97.0769%" y="565" width="1.2095%" height="15" fill="rgb(213,185,26)"/><text x="97.3269%" y="575.50"></text></g><g><title>[unknown] (77 samples, 0.86%)</title><rect x="97.4241%" y="549" width="0.8624%" height="15" fill="rgb(225,204,8)"/><text x="97.6741%" y="559.50"></text></g><g><title>[unknown] (47 samples, 0.53%)</title><rect x="97.7601%" y="533" width="0.5264%" height="15" fill="rgb(254,111,37)"/><text x="98.0101%" y="543.50"></text></g><g><title>[unknown] (18 samples, 0.20%)</title><rect x="98.0849%" y="517" width="0.2016%" height="15" fill="rgb(242,35,9)"/><text x="98.3349%" y="527.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="98.2417%" y="501" width="0.0448%" height="15" fill="rgb(232,138,49)"/><text x="98.4917%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (6 samples, 0.07%)</title><rect x="98.2865%" y="725" width="0.0672%" height="15" fill="rgb(247,56,4)"/><text x="98.5365%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.07%)</title><rect x="98.2865%" y="709" width="0.0672%" height="15" fill="rgb(226,179,17)"/><text x="98.5365%" y="719.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (4 samples, 0.04%)</title><rect x="98.3537%" y="725" width="0.0448%" height="15" fill="rgb(216,163,45)"/><text x="98.6037%" y="735.50"></text></g><g><title>std::time::Instant::now (4 samples, 0.04%)</title><rect x="98.3537%" y="709" width="0.0448%" height="15" fill="rgb(211,157,3)"/><text x="98.6037%" y="719.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (4 samples, 0.04%)</title><rect x="98.3537%" y="693" width="0.0448%" height="15" fill="rgb(234,44,20)"/><text x="98.6037%" y="703.50"></text></g><g><title>std::sys::unix::time::inner::now (4 samples, 0.04%)</title><rect x="98.3537%" y="677" width="0.0448%" height="15" fill="rgb(254,138,23)"/><text x="98.6037%" y="687.50"></text></g><g><title>__clock_gettime (4 samples, 0.04%)</title><rect x="98.3537%" y="661" width="0.0448%" height="15" fill="rgb(206,119,39)"/><text x="98.6037%" y="671.50"></text></g><g><title>__vdso_clock_gettime (4 samples, 0.04%)</title><rect x="98.3537%" y="645" width="0.0448%" height="15" fill="rgb(231,105,52)"/><text x="98.6037%" y="655.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (3 samples, 0.03%)</title><rect x="98.3985%" y="725" width="0.0336%" height="15" fill="rgb(250,20,5)"/><text x="98.6485%" y="735.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (3 samples, 0.03%)</title><rect x="98.3985%" y="709" width="0.0336%" height="15" fill="rgb(215,198,30)"/><text x="98.6485%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (3 samples, 0.03%)</title><rect x="98.3985%" y="693" width="0.0336%" height="15" fill="rgb(246,142,8)"/><text x="98.6485%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.03%)</title><rect x="98.3985%" y="677" width="0.0336%" height="15" fill="rgb(243,26,38)"/><text x="98.6485%" y="687.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (267 samples, 2.99%)</title><rect x="95.5090%" y="757" width="2.9903%" height="15" fill="rgb(205,133,28)"/><text x="95.7590%" y="767.50">par..</text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (267 samples, 2.99%)</title><rect x="95.5090%" y="741" width="2.9903%" height="15" fill="rgb(212,34,0)"/><text x="95.7590%" y="751.50">par..</text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (6 samples, 0.07%)</title><rect x="98.4321%" y="725" width="0.0672%" height="15" fill="rgb(251,226,22)"/><text x="98.6821%" y="735.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (6 samples, 0.07%)</title><rect x="98.4321%" y="709" width="0.0672%" height="15" fill="rgb(252,119,9)"/><text x="98.6821%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (6 samples, 0.07%)</title><rect x="98.4321%" y="693" width="0.0672%" height="15" fill="rgb(213,150,50)"/><text x="98.6821%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_sub (6 samples, 0.07%)</title><rect x="98.4321%" y="677" width="0.0672%" height="15" fill="rgb(212,24,39)"/><text x="98.6821%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.01%)</title><rect x="98.4993%" y="741" width="0.0112%" height="15" fill="rgb(213,46,39)"/><text x="98.7493%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;usize&gt;&gt;&gt; (3 samples, 0.03%)</title><rect x="98.5105%" y="741" width="0.0336%" height="15" fill="rgb(239,106,12)"/><text x="98.7605%" y="751.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="98.5105%" y="725" width="0.0336%" height="15" fill="rgb(249,229,21)"/><text x="98.7605%" y="735.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (3 samples, 0.03%)</title><rect x="98.5105%" y="709" width="0.0336%" height="15" fill="rgb(212,158,3)"/><text x="98.7605%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (3 samples, 0.03%)</title><rect x="98.5105%" y="693" width="0.0336%" height="15" fill="rgb(253,26,48)"/><text x="98.7605%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (3 samples, 0.03%)</title><rect x="98.5105%" y="677" width="0.0336%" height="15" fill="rgb(238,178,20)"/><text x="98.7605%" y="687.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (2 samples, 0.02%)</title><rect x="98.5441%" y="741" width="0.0224%" height="15" fill="rgb(208,86,15)"/><text x="98.7941%" y="751.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.02%)</title><rect x="98.5441%" y="725" width="0.0224%" height="15" fill="rgb(239,42,53)"/><text x="98.7941%" y="735.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.02%)</title><rect x="98.5441%" y="709" width="0.0224%" height="15" fill="rgb(245,226,8)"/><text x="98.7941%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (2 samples, 0.02%)</title><rect x="98.5441%" y="693" width="0.0224%" height="15" fill="rgb(216,176,32)"/><text x="98.7941%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.02%)</title><rect x="98.5441%" y="677" width="0.0224%" height="15" fill="rgb(231,186,21)"/><text x="98.7941%" y="687.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::notify_should_wakeup (5 samples, 0.06%)</title><rect x="98.5665%" y="741" width="0.0560%" height="15" fill="rgb(205,95,49)"/><text x="98.8165%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (4 samples, 0.04%)</title><rect x="98.5777%" y="725" width="0.0448%" height="15" fill="rgb(217,145,8)"/><text x="98.8277%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_add (4 samples, 0.04%)</title><rect x="98.5777%" y="709" width="0.0448%" height="15" fill="rgb(239,144,48)"/><text x="98.8277%" y="719.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (1,407 samples, 15.76%)</title><rect x="82.8984%" y="821" width="15.7576%" height="15" fill="rgb(214,189,23)"/><text x="83.1484%" y="831.50">tokio::runtime::thread_p..</text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_from_searching (295 samples, 3.30%)</title><rect x="95.3522%" y="805" width="3.3038%" height="15" fill="rgb(229,157,17)"/><text x="95.6022%" y="815.50">tok..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::transition_worker_from_searching (294 samples, 3.29%)</title><rect x="95.3634%" y="789" width="3.2926%" height="15" fill="rgb(230,5,48)"/><text x="95.6134%" y="799.50">tok..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (292 samples, 3.27%)</title><rect x="95.3858%" y="773" width="3.2702%" height="15" fill="rgb(224,156,48)"/><text x="95.6358%" y="783.50">tok..</text></g><g><title>tokio::runtime::thread_pool::idle::Idle::worker_to_notify (14 samples, 0.16%)</title><rect x="98.4993%" y="757" width="0.1568%" height="15" fill="rgb(223,14,29)"/><text x="98.7493%" y="767.50"></text></g><g><title>tokio::runtime::thread_pool::idle::State::unpark_one (3 samples, 0.03%)</title><rect x="98.6225%" y="741" width="0.0336%" height="15" fill="rgb(229,96,36)"/><text x="98.8725%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3 samples, 0.03%)</title><rect x="98.6225%" y="725" width="0.0336%" height="15" fill="rgb(231,102,53)"/><text x="98.8725%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.03%)</title><rect x="98.6225%" y="709" width="0.0336%" height="15" fill="rgb(210,77,38)"/><text x="98.8725%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::queue::Pointers&gt;&gt; (4 samples, 0.04%)</title><rect x="98.8465%" y="757" width="0.0448%" height="15" fill="rgb(235,131,6)"/><text x="99.0965%" y="767.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="98.8465%" y="741" width="0.0448%" height="15" fill="rgb(252,55,38)"/><text x="99.0965%" y="751.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (4 samples, 0.04%)</title><rect x="98.8465%" y="725" width="0.0448%" height="15" fill="rgb(246,38,14)"/><text x="99.0965%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (4 samples, 0.04%)</title><rect x="98.8465%" y="709" width="0.0448%" height="15" fill="rgb(242,27,5)"/><text x="99.0965%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.04%)</title><rect x="98.8465%" y="693" width="0.0448%" height="15" fill="rgb(228,65,35)"/><text x="99.0965%" y="703.50"></text></g><g><title>tokio::loom::std::atomic_usize::AtomicUsize::unsync_load (1 samples, 0.01%)</title><rect x="98.8913%" y="757" width="0.0112%" height="15" fill="rgb(245,93,11)"/><text x="99.1413%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (13 samples, 0.15%)</title><rect x="98.8353%" y="805" width="0.1456%" height="15" fill="rgb(213,1,31)"/><text x="99.0853%" y="815.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_task::{{closure}} (12 samples, 0.13%)</title><rect x="98.8465%" y="789" width="0.1344%" height="15" fill="rgb(237,205,14)"/><text x="99.0965%" y="799.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::pop (12 samples, 0.13%)</title><rect x="98.8465%" y="773" width="0.1344%" height="15" fill="rgb(232,118,45)"/><text x="99.0965%" y="783.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::is_empty (7 samples, 0.08%)</title><rect x="98.9025%" y="757" width="0.0784%" height="15" fill="rgb(218,5,6)"/><text x="99.1525%" y="767.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::len (7 samples, 0.08%)</title><rect x="98.9025%" y="741" width="0.0784%" height="15" fill="rgb(251,87,51)"/><text x="99.1525%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (7 samples, 0.08%)</title><rect x="98.9025%" y="725" width="0.0784%" height="15" fill="rgb(207,225,20)"/><text x="99.1525%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (7 samples, 0.08%)</title><rect x="98.9025%" y="709" width="0.0784%" height="15" fill="rgb(222,78,54)"/><text x="99.1525%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (3 samples, 0.03%)</title><rect x="98.9920%" y="741" width="0.0336%" height="15" fill="rgb(232,85,16)"/><text x="99.2420%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (3 samples, 0.03%)</title><rect x="98.9920%" y="725" width="0.0336%" height="15" fill="rgb(244,25,33)"/><text x="99.2420%" y="735.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_task (35 samples, 0.39%)</title><rect x="98.6561%" y="821" width="0.3920%" height="15" fill="rgb(233,24,36)"/><text x="98.9061%" y="831.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_local_task (6 samples, 0.07%)</title><rect x="98.9808%" y="805" width="0.0672%" height="15" fill="rgb(253,49,54)"/><text x="99.2308%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (6 samples, 0.07%)</title><rect x="98.9808%" y="789" width="0.0672%" height="15" fill="rgb(245,12,22)"/><text x="99.2308%" y="799.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_local_task::{{closure}} (6 samples, 0.07%)</title><rect x="98.9808%" y="773" width="0.0672%" height="15" fill="rgb(253,141,28)"/><text x="99.2308%" y="783.50"></text></g><g><title>tokio::runtime::queue::Local&lt;T&gt;::pop (6 samples, 0.07%)</title><rect x="98.9808%" y="757" width="0.0672%" height="15" fill="rgb(225,207,27)"/><text x="99.2308%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (2 samples, 0.02%)</title><rect x="99.0256%" y="741" width="0.0224%" height="15" fill="rgb(220,84,2)"/><text x="99.2756%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="99.0256%" y="725" width="0.0224%" height="15" fill="rgb(224,37,37)"/><text x="99.2756%" y="735.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.01%)</title><rect x="99.2496%" y="805" width="0.0112%" height="15" fill="rgb(220,143,18)"/><text x="99.4996%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.01%)</title><rect x="99.2496%" y="789" width="0.0112%" height="15" fill="rgb(210,88,33)"/><text x="99.4996%" y="799.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::pop (2 samples, 0.02%)</title><rect x="99.2608%" y="805" width="0.0224%" height="15" fill="rgb(219,87,51)"/><text x="99.5108%" y="815.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::is_empty (2 samples, 0.02%)</title><rect x="99.2608%" y="789" width="0.0224%" height="15" fill="rgb(211,7,35)"/><text x="99.5108%" y="799.50"></text></g><g><title>core::num::&lt;impl u16&gt;::wrapping_sub (3 samples, 0.03%)</title><rect x="99.2832%" y="789" width="0.0336%" height="15" fill="rgb(232,77,2)"/><text x="99.5332%" y="799.50"></text></g><g><title>tokio::loom::std::atomic_u16::AtomicU16::unsync_load (1 samples, 0.01%)</title><rect x="99.3168%" y="789" width="0.0112%" height="15" fill="rgb(249,94,25)"/><text x="99.5668%" y="799.50"></text></g><g><title>core::num::&lt;impl u16&gt;::wrapping_sub (1 samples, 0.01%)</title><rect x="99.4960%" y="773" width="0.0112%" height="15" fill="rgb(215,112,2)"/><text x="99.7460%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (13 samples, 0.15%)</title><rect x="99.5072%" y="773" width="0.1456%" height="15" fill="rgb(226,115,48)"/><text x="99.7572%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.15%)</title><rect x="99.5072%" y="757" width="0.1456%" height="15" fill="rgb(249,196,10)"/><text x="99.7572%" y="767.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::steal_into (34 samples, 0.38%)</title><rect x="99.2832%" y="805" width="0.3808%" height="15" fill="rgb(237,109,14)"/><text x="99.5332%" y="815.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::steal_into2 (30 samples, 0.34%)</title><rect x="99.3280%" y="789" width="0.3360%" height="15" fill="rgb(217,103,53)"/><text x="99.5780%" y="799.50"></text></g><g><title>tokio::runtime::queue::unpack (1 samples, 0.01%)</title><rect x="99.6528%" y="773" width="0.0112%" height="15" fill="rgb(244,137,9)"/><text x="99.9028%" y="783.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::steal_work (68 samples, 0.76%)</title><rect x="99.0480%" y="821" width="0.7616%" height="15" fill="rgb(227,201,3)"/><text x="99.2980%" y="831.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_to_searching (13 samples, 0.15%)</title><rect x="99.6640%" y="805" width="0.1456%" height="15" fill="rgb(243,94,6)"/><text x="99.9140%" y="815.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::transition_worker_to_searching (13 samples, 0.15%)</title><rect x="99.6640%" y="789" width="0.1456%" height="15" fill="rgb(235,118,5)"/><text x="99.9140%" y="799.50"></text></g><g><title>tokio::runtime::thread_pool::idle::State::inc_num_searching (12 samples, 0.13%)</title><rect x="99.6752%" y="773" width="0.1344%" height="15" fill="rgb(247,10,30)"/><text x="99.9252%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (12 samples, 0.13%)</title><rect x="99.6752%" y="757" width="0.1344%" height="15" fill="rgb(205,26,28)"/><text x="99.9252%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_add (12 samples, 0.13%)</title><rect x="99.6752%" y="741" width="0.1344%" height="15" fill="rgb(206,99,35)"/><text x="99.9252%" y="751.50"></text></g><g><title>std::panic::catch_unwind (3,473 samples, 38.90%)</title><rect x="60.9363%" y="1253" width="38.8957%" height="15" fill="rgb(238,130,40)"/><text x="61.1863%" y="1263.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (3,473 samples, 38.90%)</title><rect x="60.9363%" y="1237" width="38.8957%" height="15" fill="rgb(224,126,31)"/><text x="61.1863%" y="1247.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (3,473 samples, 38.90%)</title><rect x="60.9363%" y="1221" width="38.8957%" height="15" fill="rgb(254,105,17)"/><text x="61.1863%" y="1231.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,473 samples, 38.90%)</title><rect x="60.9363%" y="1205" width="38.8957%" height="15" fill="rgb(216,87,36)"/><text x="61.1863%" y="1215.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (3,473 samples, 38.90%)</title><rect x="60.9363%" y="1189" width="38.8957%" height="15" fill="rgb(240,21,12)"/><text x="61.1863%" y="1199.50">std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3,473 samples, 38.90%)</title><rect x="60.9363%" y="1173" width="38.8957%" height="15" fill="rgb(245,192,34)"/><text x="61.1863%" y="1183.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (3,473 samples, 38.90%)</title><rect x="60.9363%" y="1157" width="38.8957%" height="15" fill="rgb(226,100,49)"/><text x="61.1863%" y="1167.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closur..</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (3,473 samples, 38.90%)</title><rect x="60.9363%" y="1141" width="38.8957%" height="15" fill="rgb(245,188,27)"/><text x="61.1863%" y="1151.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (3,455 samples, 38.69%)</title><rect x="61.1379%" y="1125" width="38.6941%" height="15" fill="rgb(212,170,8)"/><text x="61.3879%" y="1135.50">tokio::runtime::task::Notified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (3,455 samples, 38.69%)</title><rect x="61.1379%" y="1109" width="38.6941%" height="15" fill="rgb(217,113,29)"/><text x="61.3879%" y="1119.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (3,455 samples, 38.69%)</title><rect x="61.1379%" y="1093" width="38.6941%" height="15" fill="rgb(237,30,3)"/><text x="61.3879%" y="1103.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (3,455 samples, 38.69%)</title><rect x="61.1379%" y="1077" width="38.6941%" height="15" fill="rgb(227,19,28)"/><text x="61.3879%" y="1087.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (3,455 samples, 38.69%)</title><rect x="61.1379%" y="1061" width="38.6941%" height="15" fill="rgb(239,172,45)"/><text x="61.3879%" y="1071.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (3,455 samples, 38.69%)</title><rect x="61.1379%" y="1045" width="38.6941%" height="15" fill="rgb(254,55,39)"/><text x="61.3879%" y="1055.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (3,455 samples, 38.69%)</title><rect x="61.1379%" y="1029" width="38.6941%" height="15" fill="rgb(249,208,12)"/><text x="61.3879%" y="1039.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (3,455 samples, 38.69%)</title><rect x="61.1379%" y="1013" width="38.6941%" height="15" fill="rgb(240,52,13)"/><text x="61.3879%" y="1023.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,455 samples, 38.69%)</title><rect x="61.1379%" y="997" width="38.6941%" height="15" fill="rgb(252,149,13)"/><text x="61.3879%" y="1007.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (3,455 samples, 38.69%)</title><rect x="61.1379%" y="981" width="38.6941%" height="15" fill="rgb(232,81,48)"/><text x="61.3879%" y="991.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (3,455 samples, 38.69%)</title><rect x="61.1379%" y="965" width="38.6941%" height="15" fill="rgb(222,144,2)"/><text x="61.3879%" y="975.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3,455 samples, 38.69%)</title><rect x="61.1379%" y="949" width="38.6941%" height="15" fill="rgb(216,81,32)"/><text x="61.3879%" y="959.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (3,455 samples, 38.69%)</title><rect x="61.1379%" y="933" width="38.6941%" height="15" fill="rgb(244,78,51)"/><text x="61.3879%" y="943.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}}</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (3,455 samples, 38.69%)</title><rect x="61.1379%" y="917" width="38.6941%" height="15" fill="rgb(217,66,21)"/><text x="61.3879%" y="927.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::futur..</text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (3,455 samples, 38.69%)</title><rect x="61.1379%" y="901" width="38.6941%" height="15" fill="rgb(247,101,42)"/><text x="61.3879%" y="911.50">tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}</text></g><g><title>tokio::runtime::thread_pool::worker::run (3,455 samples, 38.69%)</title><rect x="61.1379%" y="885" width="38.6941%" height="15" fill="rgb(227,81,39)"/><text x="61.3879%" y="895.50">tokio::runtime::thread_pool::worker::run</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (3,455 samples, 38.69%)</title><rect x="61.1379%" y="869" width="38.6941%" height="15" fill="rgb(220,223,44)"/><text x="61.3879%" y="879.50">tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (3,455 samples, 38.69%)</title><rect x="61.1379%" y="853" width="38.6941%" height="15" fill="rgb(205,218,2)"/><text x="61.3879%" y="863.50">tokio::runtime::thread_pool::worker::run::{{closure}}</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (3,455 samples, 38.69%)</title><rect x="61.1379%" y="837" width="38.6941%" height="15" fill="rgb(212,207,28)"/><text x="61.3879%" y="847.50">tokio::runtime::thread_pool::worker::Context::run</text></g><g><title>tokio::runtime::thread_pool::worker::Core::tick (2 samples, 0.02%)</title><rect x="99.8096%" y="821" width="0.0224%" height="15" fill="rgb(224,12,41)"/><text x="100.0596%" y="831.50"></text></g><g><title>core::num::&lt;impl u8&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="99.8208%" y="805" width="0.0112%" height="15" fill="rgb(216,118,12)"/><text x="100.0708%" y="815.50"></text></g><g><title>__libc_malloc (1 samples, 0.01%)</title><rect x="99.8320%" y="1221" width="0.0112%" height="15" fill="rgb(252,97,46)"/><text x="100.0820%" y="1231.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="99.8320%" y="1205" width="0.0112%" height="15" fill="rgb(244,206,19)"/><text x="100.0820%" y="1215.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="99.8320%" y="1189" width="0.0112%" height="15" fill="rgb(231,84,31)"/><text x="100.0820%" y="1199.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="99.8320%" y="1173" width="0.0112%" height="15" fill="rgb(244,133,0)"/><text x="100.0820%" y="1183.50"></text></g><g><title>mmap64 (1 samples, 0.01%)</title><rect x="99.8320%" y="1157" width="0.0112%" height="15" fill="rgb(223,15,50)"/><text x="100.0820%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8320%" y="1141" width="0.0112%" height="15" fill="rgb(250,118,49)"/><text x="100.0820%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8320%" y="1125" width="0.0112%" height="15" fill="rgb(248,25,38)"/><text x="100.0820%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8320%" y="1109" width="0.0112%" height="15" fill="rgb(215,70,14)"/><text x="100.0820%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8320%" y="1093" width="0.0112%" height="15" fill="rgb(215,28,15)"/><text x="100.0820%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8320%" y="1077" width="0.0112%" height="15" fill="rgb(243,6,28)"/><text x="100.0820%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8320%" y="1061" width="0.0112%" height="15" fill="rgb(222,130,1)"/><text x="100.0820%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8320%" y="1045" width="0.0112%" height="15" fill="rgb(236,166,44)"/><text x="100.0820%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8320%" y="1029" width="0.0112%" height="15" fill="rgb(221,108,14)"/><text x="100.0820%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8320%" y="1013" width="0.0112%" height="15" fill="rgb(252,3,45)"/><text x="100.0820%" y="1023.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3,476 samples, 38.93%)</title><rect x="60.9251%" y="1317" width="38.9293%" height="15" fill="rgb(237,68,30)"/><text x="61.1751%" y="1327.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3,476 samples, 38.93%)</title><rect x="60.9251%" y="1301" width="38.9293%" height="15" fill="rgb(211,79,22)"/><text x="61.1751%" y="1311.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (3,476 samples, 38.93%)</title><rect x="60.9251%" y="1285" width="38.9293%" height="15" fill="rgb(252,185,21)"/><text x="61.1751%" y="1295.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (3,476 samples, 38.93%)</title><rect x="60.9251%" y="1269" width="38.9293%" height="15" fill="rgb(225,189,26)"/><text x="61.1751%" y="1279.50">std::thread::Builder::spawn_unchecked::{{closure}}</text></g><g><title>std::sys::unix::thread::guard::current (2 samples, 0.02%)</title><rect x="99.8320%" y="1253" width="0.0224%" height="15" fill="rgb(241,30,40)"/><text x="100.0820%" y="1263.50"></text></g><g><title>pthread_getattr_np (2 samples, 0.02%)</title><rect x="99.8320%" y="1237" width="0.0224%" height="15" fill="rgb(235,215,44)"/><text x="100.0820%" y="1247.50"></text></g><g><title>__pthread_getaffinity_new (1 samples, 0.01%)</title><rect x="99.8432%" y="1221" width="0.0112%" height="15" fill="rgb(205,8,29)"/><text x="100.0932%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8432%" y="1205" width="0.0112%" height="15" fill="rgb(241,137,42)"/><text x="100.0932%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8432%" y="1189" width="0.0112%" height="15" fill="rgb(237,155,2)"/><text x="100.0932%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8432%" y="1173" width="0.0112%" height="15" fill="rgb(245,29,42)"/><text x="100.0932%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8432%" y="1157" width="0.0112%" height="15" fill="rgb(234,101,35)"/><text x="100.0932%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8432%" y="1141" width="0.0112%" height="15" fill="rgb(228,64,37)"/><text x="100.0932%" y="1151.50"></text></g><g><title>clone (3,478 samples, 38.95%)</title><rect x="60.9139%" y="1365" width="38.9517%" height="15" fill="rgb(217,214,36)"/><text x="61.1639%" y="1375.50">clone</text></g><g><title>start_thread (3,478 samples, 38.95%)</title><rect x="60.9139%" y="1349" width="38.9517%" height="15" fill="rgb(243,70,3)"/><text x="61.1639%" y="1359.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (3,477 samples, 38.94%)</title><rect x="60.9251%" y="1333" width="38.9405%" height="15" fill="rgb(253,158,52)"/><text x="61.1751%" y="1343.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>core::ptr::drop_in_place&lt;std::sys::unix::stack_overflow::Handler&gt; (1 samples, 0.01%)</title><rect x="99.8544%" y="1317" width="0.0112%" height="15" fill="rgb(234,111,54)"/><text x="100.1044%" y="1327.50"></text></g><g><title>&lt;std::sys::unix::stack_overflow::Handler as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="99.8544%" y="1301" width="0.0112%" height="15" fill="rgb(217,70,32)"/><text x="100.1044%" y="1311.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::drop_handler (1 samples, 0.01%)</title><rect x="99.8544%" y="1285" width="0.0112%" height="15" fill="rgb(234,18,33)"/><text x="100.1044%" y="1295.50"></text></g><g><title>__munmap (1 samples, 0.01%)</title><rect x="99.8544%" y="1269" width="0.0112%" height="15" fill="rgb(234,12,49)"/><text x="100.1044%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8544%" y="1253" width="0.0112%" height="15" fill="rgb(236,10,21)"/><text x="100.1044%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8544%" y="1237" width="0.0112%" height="15" fill="rgb(248,182,45)"/><text x="100.1044%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8544%" y="1221" width="0.0112%" height="15" fill="rgb(217,95,36)"/><text x="100.1044%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8544%" y="1205" width="0.0112%" height="15" fill="rgb(212,110,31)"/><text x="100.1044%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8544%" y="1189" width="0.0112%" height="15" fill="rgb(206,32,53)"/><text x="100.1044%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8544%" y="1173" width="0.0112%" height="15" fill="rgb(246,141,37)"/><text x="100.1044%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8544%" y="1157" width="0.0112%" height="15" fill="rgb(219,16,7)"/><text x="100.1044%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.8544%" y="1141" width="0.0112%" height="15" fill="rgb(230,205,45)"/><text x="100.1044%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::CoreStage&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Par&gt;::{{closure}}&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="99.8656%" y="1365" width="0.0112%" height="15" fill="rgb(231,43,49)"/><text x="100.1156%" y="1375.50"></text></g><g><title>tokio::runtime::task::core::Trailer::wake_join (8 samples, 0.09%)</title><rect x="99.8768%" y="1365" width="0.0896%" height="15" fill="rgb(212,106,34)"/><text x="100.1268%" y="1375.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::release (1 samples, 0.01%)</title><rect x="99.9664%" y="1365" width="0.0112%" height="15" fill="rgb(206,83,17)"/><text x="100.2164%" y="1375.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule_local (1 samples, 0.01%)</title><rect x="99.9776%" y="1365" width="0.0112%" height="15" fill="rgb(244,154,49)"/><text x="100.2276%" y="1375.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (1 samples, 0.01%)</title><rect x="99.9776%" y="1349" width="0.0112%" height="15" fill="rgb(244,149,49)"/><text x="100.2276%" y="1359.50"></text></g><g><title>all (8,929 samples, 100%)</title><rect x="0.0000%" y="1397" width="100.0000%" height="15" fill="rgb(227,134,18)"/><text x="0.2500%" y="1407.50"></text></g><g><title>tokio-runtime-w (6,700 samples, 75.04%)</title><rect x="24.9636%" y="1381" width="75.0364%" height="15" fill="rgb(237,116,36)"/><text x="25.2136%" y="1391.50">tokio-runtime-w</text></g><g><title>tokio::task::spawn::spawn (1 samples, 0.01%)</title><rect x="99.9888%" y="1365" width="0.0112%" height="15" fill="rgb(205,129,40)"/><text x="100.2388%" y="1375.50"></text></g></svg></svg>