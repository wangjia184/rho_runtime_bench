<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1270" onload="init(evt)" viewBox="0 0 1200 1270" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1270" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1253.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1253.00"> </text><svg id="frames" x="10" width="1180"><g><title>perf (5 samples, 0.01%)</title><rect x="0.0000%" y="1205" width="0.0117%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="1215.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="0.0000%" y="1189" width="0.0117%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="1199.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="0.0000%" y="1173" width="0.0117%" height="15" fill="rgb(221,193,54)"/><text x="0.2500%" y="1183.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="0.0000%" y="1157" width="0.0117%" height="15" fill="rgb(248,212,6)"/><text x="0.2500%" y="1167.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="0.0000%" y="1141" width="0.0117%" height="15" fill="rgb(208,68,35)"/><text x="0.2500%" y="1151.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="0.0000%" y="1125" width="0.0117%" height="15" fill="rgb(232,128,0)"/><text x="0.2500%" y="1135.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="0.0000%" y="1109" width="0.0117%" height="15" fill="rgb(207,160,47)"/><text x="0.2500%" y="1119.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="0.0000%" y="1093" width="0.0117%" height="15" fill="rgb(228,23,34)"/><text x="0.2500%" y="1103.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="0.0000%" y="1077" width="0.0117%" height="15" fill="rgb(218,30,26)"/><text x="0.2500%" y="1087.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="0.0000%" y="1061" width="0.0117%" height="15" fill="rgb(220,122,19)"/><text x="0.2500%" y="1071.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="0.0000%" y="1045" width="0.0117%" height="15" fill="rgb(250,228,42)"/><text x="0.2500%" y="1055.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="0.0000%" y="1029" width="0.0117%" height="15" fill="rgb(240,193,28)"/><text x="0.2500%" y="1039.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="0.0000%" y="1013" width="0.0117%" height="15" fill="rgb(216,20,37)"/><text x="0.2500%" y="1023.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="0.0000%" y="997" width="0.0117%" height="15" fill="rgb(206,188,39)"/><text x="0.2500%" y="1007.50"></text></g><g><title>&lt;tokio::sync::notify::Notified as core::future::future::Future&gt;::poll (6 samples, 0.01%)</title><rect x="0.0140%" y="1173" width="0.0140%" height="15" fill="rgb(217,207,13)"/><text x="0.2640%" y="1183.50"></text></g><g><title>jemallocator::layout_to_flags (6 samples, 0.01%)</title><rect x="0.0492%" y="1173" width="0.0140%" height="15" fill="rgb(231,73,38)"/><text x="0.2992%" y="1183.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (8 samples, 0.02%)</title><rect x="0.0702%" y="1173" width="0.0187%" height="15" fill="rgb(225,20,46)"/><text x="0.3202%" y="1183.50"></text></g><g><title>tokio::park::thread::Inner::park (42 samples, 0.10%)</title><rect x="0.1030%" y="1173" width="0.0983%" height="15" fill="rgb(210,31,41)"/><text x="0.3530%" y="1183.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (39 samples, 0.09%)</title><rect x="0.1100%" y="1157" width="0.0913%" height="15" fill="rgb(221,200,47)"/><text x="0.3600%" y="1167.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (39 samples, 0.09%)</title><rect x="0.1100%" y="1141" width="0.0913%" height="15" fill="rgb(226,26,5)"/><text x="0.3600%" y="1151.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (36 samples, 0.08%)</title><rect x="0.1170%" y="1125" width="0.0843%" height="15" fill="rgb(249,33,26)"/><text x="0.3670%" y="1135.50"></text></g><g><title>parking_lot_core::parking_lot::park (36 samples, 0.08%)</title><rect x="0.1170%" y="1109" width="0.0843%" height="15" fill="rgb(235,183,28)"/><text x="0.3670%" y="1119.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (36 samples, 0.08%)</title><rect x="0.1170%" y="1093" width="0.0843%" height="15" fill="rgb(221,5,38)"/><text x="0.3670%" y="1103.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (36 samples, 0.08%)</title><rect x="0.1170%" y="1077" width="0.0843%" height="15" fill="rgb(247,18,42)"/><text x="0.3670%" y="1087.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (36 samples, 0.08%)</title><rect x="0.1170%" y="1061" width="0.0843%" height="15" fill="rgb(241,131,45)"/><text x="0.3670%" y="1071.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (36 samples, 0.08%)</title><rect x="0.1170%" y="1045" width="0.0843%" height="15" fill="rgb(249,31,29)"/><text x="0.3670%" y="1055.50"></text></g><g><title>syscall (36 samples, 0.08%)</title><rect x="0.1170%" y="1029" width="0.0843%" height="15" fill="rgb(225,111,53)"/><text x="0.3670%" y="1039.50"></text></g><g><title>[unknown] (36 samples, 0.08%)</title><rect x="0.1170%" y="1013" width="0.0843%" height="15" fill="rgb(238,160,17)"/><text x="0.3670%" y="1023.50"></text></g><g><title>tokio::runtime::enter::Enter::block_on (56 samples, 0.13%)</title><rect x="0.2013%" y="1173" width="0.1311%" height="15" fill="rgb(214,148,48)"/><text x="0.4513%" y="1183.50"></text></g><g><title>tokio::park::thread::CachedParkThread::block_on (56 samples, 0.13%)</title><rect x="0.2013%" y="1157" width="0.1311%" height="15" fill="rgb(232,36,49)"/><text x="0.4513%" y="1167.50"></text></g><g><title>tokio::coop::budget (55 samples, 0.13%)</title><rect x="0.2036%" y="1141" width="0.1287%" height="15" fill="rgb(209,103,24)"/><text x="0.4536%" y="1151.50"></text></g><g><title>tokio::coop::with_budget (11 samples, 0.03%)</title><rect x="0.3066%" y="1125" width="0.0257%" height="15" fill="rgb(229,88,8)"/><text x="0.5566%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (11 samples, 0.03%)</title><rect x="0.3066%" y="1109" width="0.0257%" height="15" fill="rgb(213,181,19)"/><text x="0.5566%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11 samples, 0.03%)</title><rect x="0.3066%" y="1093" width="0.0257%" height="15" fill="rgb(254,191,54)"/><text x="0.5566%" y="1103.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (7 samples, 0.02%)</title><rect x="0.3160%" y="1077" width="0.0164%" height="15" fill="rgb(241,83,37)"/><text x="0.5660%" y="1087.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (8 samples, 0.02%)</title><rect x="0.3324%" y="1173" width="0.0187%" height="15" fill="rgb(233,36,39)"/><text x="0.5824%" y="1183.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (7 samples, 0.02%)</title><rect x="0.3347%" y="1157" width="0.0164%" height="15" fill="rgb(226,3,54)"/><text x="0.5847%" y="1167.50"></text></g><g><title>alloc::alloc::exchange_malloc (5 samples, 0.01%)</title><rect x="0.3394%" y="1141" width="0.0117%" height="15" fill="rgb(245,192,40)"/><text x="0.5894%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.01%)</title><rect x="0.3394%" y="1125" width="0.0117%" height="15" fill="rgb(238,167,29)"/><text x="0.5894%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.01%)</title><rect x="0.3394%" y="1109" width="0.0117%" height="15" fill="rgb(232,182,51)"/><text x="0.5894%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.01%)</title><rect x="0.3394%" y="1093" width="0.0117%" height="15" fill="rgb(231,60,39)"/><text x="0.5894%" y="1103.50"></text></g><g><title>[[stack]] (147 samples, 0.34%)</title><rect x="0.0117%" y="1189" width="0.3441%" height="15" fill="rgb(208,69,12)"/><text x="0.2617%" y="1199.50"></text></g><g><title>&lt;T as core::convert::TryFrom&lt;U&gt;&gt;::try_from (6 samples, 0.01%)</title><rect x="0.3558%" y="1173" width="0.0140%" height="15" fill="rgb(235,93,37)"/><text x="0.6058%" y="1183.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="0.3698%" y="1173" width="0.0117%" height="15" fill="rgb(213,116,39)"/><text x="0.6198%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.02%)</title><rect x="0.3815%" y="1173" width="0.0187%" height="15" fill="rgb(222,207,29)"/><text x="0.6315%" y="1183.50"></text></g><g><title>&lt;tokio::park::thread::CachedParkThread as tokio::park::Park&gt;::park (25 samples, 0.06%)</title><rect x="0.4026%" y="1173" width="0.0585%" height="15" fill="rgb(206,96,30)"/><text x="0.6526%" y="1183.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.02%)</title><rect x="0.4658%" y="1173" width="0.0234%" height="15" fill="rgb(218,138,4)"/><text x="0.7158%" y="1183.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (7 samples, 0.02%)</title><rect x="0.4728%" y="1157" width="0.0164%" height="15" fill="rgb(250,191,14)"/><text x="0.7228%" y="1167.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (7 samples, 0.02%)</title><rect x="0.4728%" y="1141" width="0.0164%" height="15" fill="rgb(239,60,40)"/><text x="0.7228%" y="1151.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (12 samples, 0.03%)</title><rect x="0.5009%" y="1173" width="0.0281%" height="15" fill="rgb(206,27,48)"/><text x="0.7509%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::join::JoinHandle&lt;()&gt;&gt; (15 samples, 0.04%)</title><rect x="0.5571%" y="1157" width="0.0351%" height="15" fill="rgb(225,35,8)"/><text x="0.8071%" y="1167.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.04%)</title><rect x="0.5571%" y="1141" width="0.0351%" height="15" fill="rgb(250,213,24)"/><text x="0.8071%" y="1151.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::handle_produce (29 samples, 0.07%)</title><rect x="0.5384%" y="1173" width="0.0679%" height="15" fill="rgb(247,123,22)"/><text x="0.7884%" y="1183.50"></text></g><g><title>tokio::sync::oneshot::channel (6 samples, 0.01%)</title><rect x="0.5922%" y="1157" width="0.0140%" height="15" fill="rgb(231,138,38)"/><text x="0.8422%" y="1167.50"></text></g><g><title>std::time::Instant::now (6 samples, 0.01%)</title><rect x="0.6062%" y="1173" width="0.0140%" height="15" fill="rgb(231,145,46)"/><text x="0.8562%" y="1183.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (6 samples, 0.01%)</title><rect x="0.6062%" y="1157" width="0.0140%" height="15" fill="rgb(251,118,11)"/><text x="0.8562%" y="1167.50"></text></g><g><title>std::sys::unix::time::inner::now (6 samples, 0.01%)</title><rect x="0.6062%" y="1141" width="0.0140%" height="15" fill="rgb(217,147,25)"/><text x="0.8562%" y="1151.50"></text></g><g><title>syscall (27 samples, 0.06%)</title><rect x="0.6203%" y="1173" width="0.0632%" height="15" fill="rgb(247,81,37)"/><text x="0.8703%" y="1183.50"></text></g><g><title>tokio::coop::Budget::initial (9 samples, 0.02%)</title><rect x="0.6835%" y="1173" width="0.0211%" height="15" fill="rgb(209,12,38)"/><text x="0.9335%" y="1183.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::header (5 samples, 0.01%)</title><rect x="0.7233%" y="1173" width="0.0117%" height="15" fill="rgb(227,1,9)"/><text x="0.9733%" y="1183.50"></text></g><g><title>[anon] (182 samples, 0.43%)</title><rect x="0.3558%" y="1189" width="0.4260%" height="15" fill="rgb(248,47,43)"/><text x="0.6058%" y="1199.50"></text></g><g><title>tokio::task::spawn::spawn (13 samples, 0.03%)</title><rect x="0.7514%" y="1173" width="0.0304%" height="15" fill="rgb(221,10,30)"/><text x="1.0014%" y="1183.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.02%)</title><rect x="0.7818%" y="1189" width="0.0211%" height="15" fill="rgb(210,229,1)"/><text x="1.0318%" y="1199.50"></text></g><g><title>[rho_runtime] (11 samples, 0.03%)</title><rect x="0.8029%" y="1189" width="0.0257%" height="15" fill="rgb(222,148,37)"/><text x="1.0529%" y="1199.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (11 samples, 0.03%)</title><rect x="0.8029%" y="1173" width="0.0257%" height="15" fill="rgb(234,67,33)"/><text x="1.0529%" y="1183.50"></text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (11 samples, 0.03%)</title><rect x="0.8029%" y="1157" width="0.0257%" height="15" fill="rgb(247,98,35)"/><text x="1.0529%" y="1167.50"></text></g><g><title>tokio::runtime::task::joinable (7 samples, 0.02%)</title><rect x="0.8122%" y="1141" width="0.0164%" height="15" fill="rgb(247,138,52)"/><text x="1.0622%" y="1151.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (7 samples, 0.02%)</title><rect x="0.8122%" y="1125" width="0.0164%" height="15" fill="rgb(213,79,30)"/><text x="1.0622%" y="1135.50"></text></g><g><title>core::future::from_generator (30 samples, 0.07%)</title><rect x="1.1306%" y="1093" width="0.0702%" height="15" fill="rgb(246,177,23)"/><text x="1.3806%" y="1103.50"></text></g><g><title>[libc-2.31.so] (28 samples, 0.07%)</title><rect x="1.1352%" y="1077" width="0.0655%" height="15" fill="rgb(230,62,27)"/><text x="1.3852%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;rho_runtime::storage::coordinator::TransitPort&gt;&gt;&gt; (25 samples, 0.06%)</title><rect x="1.2008%" y="1093" width="0.0585%" height="15" fill="rgb(216,154,8)"/><text x="1.4508%" y="1103.50"></text></g><g><title>tokio::task::spawn::spawn (21 samples, 0.05%)</title><rect x="1.2101%" y="1077" width="0.0492%" height="15" fill="rgb(244,35,45)"/><text x="1.4601%" y="1087.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (21 samples, 0.05%)</title><rect x="1.2101%" y="1061" width="0.0492%" height="15" fill="rgb(251,115,12)"/><text x="1.4601%" y="1071.50"></text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (21 samples, 0.05%)</title><rect x="1.2101%" y="1045" width="0.0492%" height="15" fill="rgb(240,54,50)"/><text x="1.4601%" y="1055.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (21 samples, 0.05%)</title><rect x="1.2101%" y="1029" width="0.0492%" height="15" fill="rgb(233,84,52)"/><text x="1.4601%" y="1039.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (21 samples, 0.05%)</title><rect x="1.2101%" y="1013" width="0.0492%" height="15" fill="rgb(207,117,47)"/><text x="1.4601%" y="1023.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (21 samples, 0.05%)</title><rect x="1.2101%" y="997" width="0.0492%" height="15" fill="rgb(249,43,39)"/><text x="1.4601%" y="1007.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (21 samples, 0.05%)</title><rect x="1.2101%" y="981" width="0.0492%" height="15" fill="rgb(209,38,44)"/><text x="1.4601%" y="991.50"></text></g><g><title>syscall (21 samples, 0.05%)</title><rect x="1.2101%" y="965" width="0.0492%" height="15" fill="rgb(236,212,23)"/><text x="1.4601%" y="975.50"></text></g><g><title>[unknown] (21 samples, 0.05%)</title><rect x="1.2101%" y="949" width="0.0492%" height="15" fill="rgb(242,79,21)"/><text x="1.4601%" y="959.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::header (11 samples, 0.03%)</title><rect x="1.3412%" y="1061" width="0.0257%" height="15" fill="rgb(211,96,35)"/><text x="1.5912%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::join::JoinHandle&lt;()&gt;&gt; (76 samples, 0.18%)</title><rect x="1.2593%" y="1093" width="0.1779%" height="15" fill="rgb(253,215,40)"/><text x="1.5093%" y="1103.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (76 samples, 0.18%)</title><rect x="1.2593%" y="1077" width="0.1779%" height="15" fill="rgb(211,81,21)"/><text x="1.5093%" y="1087.50"></text></g><g><title>tokio::runtime::task::state::State::drop_join_handle_fast (30 samples, 0.07%)</title><rect x="1.3670%" y="1061" width="0.0702%" height="15" fill="rgb(208,190,38)"/><text x="1.6170%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (29 samples, 0.07%)</title><rect x="1.3693%" y="1045" width="0.0679%" height="15" fill="rgb(235,213,38)"/><text x="1.6193%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (29 samples, 0.07%)</title><rect x="1.3693%" y="1029" width="0.0679%" height="15" fill="rgb(237,122,38)"/><text x="1.6193%" y="1039.50"></text></g><g><title>&lt;usize as core::ops::bit::BitXor&gt;::bitxor (15 samples, 0.04%)</title><rect x="1.5566%" y="933" width="0.0351%" height="15" fill="rgb(244,218,35)"/><text x="1.8066%" y="943.50"></text></g><g><title>hashbrown::map::make_hash (39 samples, 0.09%)</title><rect x="1.5566%" y="1045" width="0.0913%" height="15" fill="rgb(240,68,47)"/><text x="1.8066%" y="1055.50"></text></g><g><title>&lt;blake3::Hash as core::hash::Hash&gt;::hash (39 samples, 0.09%)</title><rect x="1.5566%" y="1029" width="0.0913%" height="15" fill="rgb(210,16,53)"/><text x="1.8066%" y="1039.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (39 samples, 0.09%)</title><rect x="1.5566%" y="1013" width="0.0913%" height="15" fill="rgb(235,124,12)"/><text x="1.8066%" y="1023.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (39 samples, 0.09%)</title><rect x="1.5566%" y="997" width="0.0913%" height="15" fill="rgb(224,169,11)"/><text x="1.8066%" y="1007.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (39 samples, 0.09%)</title><rect x="1.5566%" y="981" width="0.0913%" height="15" fill="rgb(250,166,2)"/><text x="1.8066%" y="991.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write (39 samples, 0.09%)</title><rect x="1.5566%" y="965" width="0.0913%" height="15" fill="rgb(242,216,29)"/><text x="1.8066%" y="975.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (39 samples, 0.09%)</title><rect x="1.5566%" y="949" width="0.0913%" height="15" fill="rgb(230,116,27)"/><text x="1.8066%" y="959.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_mul (20 samples, 0.05%)</title><rect x="1.6010%" y="933" width="0.0468%" height="15" fill="rgb(228,99,48)"/><text x="1.8510%" y="943.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (6 samples, 0.01%)</title><rect x="1.6596%" y="997" width="0.0140%" height="15" fill="rgb(253,11,6)"/><text x="1.9096%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.04%)</title><rect x="1.6549%" y="1013" width="0.0375%" height="15" fill="rgb(247,143,39)"/><text x="1.9049%" y="1023.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (8 samples, 0.02%)</title><rect x="1.6736%" y="997" width="0.0187%" height="15" fill="rgb(236,97,10)"/><text x="1.9236%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.05%)</title><rect x="1.6549%" y="1029" width="0.0538%" height="15" fill="rgb(233,208,19)"/><text x="1.9049%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::bucket (7 samples, 0.02%)</title><rect x="1.6923%" y="1013" width="0.0164%" height="15" fill="rgb(216,164,2)"/><text x="1.9423%" y="1023.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (7 samples, 0.02%)</title><rect x="1.6923%" y="997" width="0.0164%" height="15" fill="rgb(220,129,5)"/><text x="1.9423%" y="1007.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (7 samples, 0.02%)</title><rect x="1.6923%" y="981" width="0.0164%" height="15" fill="rgb(242,17,10)"/><text x="1.9423%" y="991.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (19 samples, 0.04%)</title><rect x="1.7274%" y="997" width="0.0445%" height="15" fill="rgb(242,107,0)"/><text x="1.9774%" y="1007.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (19 samples, 0.04%)</title><rect x="1.7274%" y="981" width="0.0445%" height="15" fill="rgb(251,28,31)"/><text x="1.9774%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (19 samples, 0.04%)</title><rect x="1.7274%" y="965" width="0.0445%" height="15" fill="rgb(233,223,10)"/><text x="1.9774%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::iter_hash (27 samples, 0.06%)</title><rect x="1.7134%" y="1029" width="0.0632%" height="15" fill="rgb(215,21,27)"/><text x="1.9634%" y="1039.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T&gt;::new (27 samples, 0.06%)</title><rect x="1.7134%" y="1013" width="0.0632%" height="15" fill="rgb(232,23,21)"/><text x="1.9634%" y="1023.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry (140 samples, 0.33%)</title><rect x="1.5542%" y="1061" width="0.3277%" height="15" fill="rgb(244,5,23)"/><text x="1.8042%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (100 samples, 0.23%)</title><rect x="1.6479%" y="1045" width="0.2341%" height="15" fill="rgb(226,81,46)"/><text x="1.8979%" y="1055.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry::{{closure}} (45 samples, 0.11%)</title><rect x="1.7766%" y="1029" width="0.1053%" height="15" fill="rgb(247,70,30)"/><text x="2.0266%" y="1039.50"></text></g><g><title>&lt;blake3::Hash as core::cmp::PartialEq&gt;::eq (45 samples, 0.11%)</title><rect x="1.7766%" y="1013" width="0.1053%" height="15" fill="rgb(212,68,19)"/><text x="2.0266%" y="1023.50"></text></g><g><title>constant_time_eq::constant_time_eq_32 (45 samples, 0.11%)</title><rect x="1.7766%" y="997" width="0.1053%" height="15" fill="rgb(240,187,13)"/><text x="2.0266%" y="1007.50"></text></g><g><title>constant_time_eq::constant_time_ne_32 (45 samples, 0.11%)</title><rect x="1.7766%" y="981" width="0.1053%" height="15" fill="rgb(223,113,26)"/><text x="2.0266%" y="991.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::get_or_create_transit_port (193 samples, 0.45%)</title><rect x="1.4372%" y="1093" width="0.4518%" height="15" fill="rgb(206,192,2)"/><text x="1.6872%" y="1103.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (145 samples, 0.34%)</title><rect x="1.5496%" y="1077" width="0.3394%" height="15" fill="rgb(241,108,4)"/><text x="1.7996%" y="1087.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (437 samples, 1.02%)</title><rect x="1.8890%" y="1077" width="1.0229%" height="15" fill="rgb(247,173,49)"/><text x="2.1390%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (432 samples, 1.01%)</title><rect x="1.9007%" y="1061" width="1.0112%" height="15" fill="rgb(224,114,35)"/><text x="2.1507%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_add (432 samples, 1.01%)</title><rect x="1.9007%" y="1045" width="1.0112%" height="15" fill="rgb(245,159,27)"/><text x="2.1507%" y="1055.50"></text></g><g><title>[libc-2.31.so] (313 samples, 0.73%)</title><rect x="2.9189%" y="1061" width="0.7326%" height="15" fill="rgb(245,172,44)"/><text x="3.1689%" y="1071.50"></text></g><g><title>__rg_alloc (7 samples, 0.02%)</title><rect x="3.6515%" y="997" width="0.0164%" height="15" fill="rgb(236,23,11)"/><text x="3.9015%" y="1007.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (7 samples, 0.02%)</title><rect x="3.6515%" y="981" width="0.0164%" height="15" fill="rgb(205,117,38)"/><text x="3.9015%" y="991.50"></text></g><g><title>extent_sn_comp (7 samples, 0.02%)</title><rect x="3.9137%" y="773" width="0.0164%" height="15" fill="rgb(237,72,25)"/><text x="4.1637%" y="783.50"></text></g><g><title>extent_sn_get (6 samples, 0.01%)</title><rect x="3.9160%" y="757" width="0.0140%" height="15" fill="rgb(244,70,9)"/><text x="4.1660%" y="767.50"></text></g><g><title>arena_bin_slabs_nonfull_tryget (78 samples, 0.18%)</title><rect x="3.7568%" y="821" width="0.1826%" height="15" fill="rgb(217,125,39)"/><text x="4.0068%" y="831.50"></text></g><g><title>_rjem_je_extent_heap_remove_first (77 samples, 0.18%)</title><rect x="3.7592%" y="805" width="0.1802%" height="15" fill="rgb(235,36,10)"/><text x="4.0092%" y="815.50"></text></g><g><title>extent_snad_comp (13 samples, 0.03%)</title><rect x="3.9090%" y="789" width="0.0304%" height="15" fill="rgb(251,123,47)"/><text x="4.1590%" y="799.50"></text></g><g><title>extent_recycle_extract (5 samples, 0.01%)</title><rect x="3.9418%" y="773" width="0.0117%" height="15" fill="rgb(221,13,13)"/><text x="4.1918%" y="783.50"></text></g><g><title>arena_slab_alloc (8 samples, 0.02%)</title><rect x="3.9394%" y="821" width="0.0187%" height="15" fill="rgb(238,131,9)"/><text x="4.1894%" y="831.50"></text></g><g><title>_rjem_je_extents_alloc (8 samples, 0.02%)</title><rect x="3.9394%" y="805" width="0.0187%" height="15" fill="rgb(211,50,8)"/><text x="4.1894%" y="815.50"></text></g><g><title>extent_recycle (8 samples, 0.02%)</title><rect x="3.9394%" y="789" width="0.0187%" height="15" fill="rgb(245,182,24)"/><text x="4.1894%" y="799.50"></text></g><g><title>arena_bin_nonfull_slab_get (88 samples, 0.21%)</title><rect x="3.7568%" y="837" width="0.2060%" height="15" fill="rgb(242,14,37)"/><text x="4.0068%" y="847.50"></text></g><g><title>arena_slab_reg_alloc (5 samples, 0.01%)</title><rect x="3.9699%" y="837" width="0.0117%" height="15" fill="rgb(246,228,12)"/><text x="4.2199%" y="847.50"></text></g><g><title>arena_bin_malloc_hard (103 samples, 0.24%)</title><rect x="3.7428%" y="853" width="0.2411%" height="15" fill="rgb(213,55,15)"/><text x="3.9928%" y="863.50"></text></g><g><title>arena_decay_tick (11 samples, 0.03%)</title><rect x="3.9839%" y="853" width="0.0257%" height="15" fill="rgb(209,9,3)"/><text x="4.2339%" y="863.50"></text></g><g><title>arena_decay_ticks (11 samples, 0.03%)</title><rect x="3.9839%" y="837" width="0.0257%" height="15" fill="rgb(230,59,30)"/><text x="4.2339%" y="847.50"></text></g><g><title>ticker_ticks (11 samples, 0.03%)</title><rect x="3.9839%" y="821" width="0.0257%" height="15" fill="rgb(209,121,21)"/><text x="4.2339%" y="831.50"></text></g><g><title>bitmap_set (10 samples, 0.02%)</title><rect x="4.0143%" y="821" width="0.0234%" height="15" fill="rgb(220,109,13)"/><text x="4.2643%" y="831.50"></text></g><g><title>bitmap_sfu (20 samples, 0.05%)</title><rect x="4.0143%" y="837" width="0.0468%" height="15" fill="rgb(232,18,1)"/><text x="4.2643%" y="847.50"></text></g><g><title>ffs_lu (10 samples, 0.02%)</title><rect x="4.0377%" y="821" width="0.0234%" height="15" fill="rgb(215,41,42)"/><text x="4.2877%" y="831.50"></text></g><g><title>arena_slab_reg_alloc (25 samples, 0.06%)</title><rect x="4.0096%" y="853" width="0.0585%" height="15" fill="rgb(224,123,36)"/><text x="4.2596%" y="863.50"></text></g><g><title>malloc_mutex_lock (34 samples, 0.08%)</title><rect x="4.0752%" y="853" width="0.0796%" height="15" fill="rgb(240,125,3)"/><text x="4.3252%" y="863.50"></text></g><g><title>malloc_mutex_trylock_final (34 samples, 0.08%)</title><rect x="4.0752%" y="837" width="0.0796%" height="15" fill="rgb(205,98,50)"/><text x="4.3252%" y="847.50"></text></g><g><title>__GI___pthread_mutex_trylock (33 samples, 0.08%)</title><rect x="4.0775%" y="821" width="0.0772%" height="15" fill="rgb(205,185,37)"/><text x="4.3275%" y="831.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (194 samples, 0.45%)</title><rect x="3.7077%" y="869" width="0.4541%" height="15" fill="rgb(238,207,15)"/><text x="3.9577%" y="879.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (195 samples, 0.46%)</title><rect x="3.7077%" y="885" width="0.4564%" height="15" fill="rgb(213,199,42)"/><text x="3.9577%" y="895.50"></text></g><g><title>imalloc_no_sample (211 samples, 0.49%)</title><rect x="3.6936%" y="949" width="0.4939%" height="15" fill="rgb(235,201,11)"/><text x="3.9436%" y="959.50"></text></g><g><title>iallocztm (207 samples, 0.48%)</title><rect x="3.7030%" y="933" width="0.4845%" height="15" fill="rgb(207,46,11)"/><text x="3.9530%" y="943.50"></text></g><g><title>arena_malloc (207 samples, 0.48%)</title><rect x="3.7030%" y="917" width="0.4845%" height="15" fill="rgb(241,35,35)"/><text x="3.9530%" y="927.50"></text></g><g><title>tcache_alloc_small (206 samples, 0.48%)</title><rect x="3.7054%" y="901" width="0.4822%" height="15" fill="rgb(243,32,47)"/><text x="3.9554%" y="911.50"></text></g><g><title>tcache_event (5 samples, 0.01%)</title><rect x="4.1758%" y="885" width="0.0117%" height="15" fill="rgb(247,202,23)"/><text x="4.4258%" y="895.50"></text></g><g><title>ticker_tick (5 samples, 0.01%)</title><rect x="4.1758%" y="869" width="0.0117%" height="15" fill="rgb(219,102,11)"/><text x="4.4258%" y="879.50"></text></g><g><title>ticker_ticks (5 samples, 0.01%)</title><rect x="4.1758%" y="853" width="0.0117%" height="15" fill="rgb(243,110,44)"/><text x="4.4258%" y="863.50"></text></g><g><title>imalloc_body (219 samples, 0.51%)</title><rect x="3.6913%" y="965" width="0.5126%" height="15" fill="rgb(222,74,54)"/><text x="3.9413%" y="975.50"></text></g><g><title>sz_size2index (5 samples, 0.01%)</title><rect x="4.1922%" y="949" width="0.0117%" height="15" fill="rgb(216,99,12)"/><text x="4.4422%" y="959.50"></text></g><g><title>tokio::sync::oneshot::channel (993 samples, 2.32%)</title><rect x="1.8890%" y="1093" width="2.3243%" height="15" fill="rgb(226,22,26)"/><text x="2.1390%" y="1103.50">t..</text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (556 samples, 1.30%)</title><rect x="2.9118%" y="1077" width="1.3014%" height="15" fill="rgb(217,163,10)"/><text x="3.1618%" y="1087.50"></text></g><g><title>alloc::alloc::exchange_malloc (240 samples, 0.56%)</title><rect x="3.6515%" y="1061" width="0.5618%" height="15" fill="rgb(213,25,53)"/><text x="3.9015%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (240 samples, 0.56%)</title><rect x="3.6515%" y="1045" width="0.5618%" height="15" fill="rgb(252,105,26)"/><text x="3.9015%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (240 samples, 0.56%)</title><rect x="3.6515%" y="1029" width="0.5618%" height="15" fill="rgb(220,39,43)"/><text x="3.9015%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (240 samples, 0.56%)</title><rect x="3.6515%" y="1013" width="0.5618%" height="15" fill="rgb(229,68,48)"/><text x="3.9015%" y="1023.50"></text></g><g><title>_rjem_mallocx (232 samples, 0.54%)</title><rect x="3.6702%" y="997" width="0.5430%" height="15" fill="rgb(252,8,32)"/><text x="3.9202%" y="1007.50"></text></g><g><title>imalloc (223 samples, 0.52%)</title><rect x="3.6913%" y="981" width="0.5220%" height="15" fill="rgb(223,20,43)"/><text x="3.9413%" y="991.50"></text></g><g><title>[libc-2.31.so] (21 samples, 0.05%)</title><rect x="4.2741%" y="1077" width="0.0492%" height="15" fill="rgb(229,81,49)"/><text x="4.5241%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::spawner::Spawner&gt; (45 samples, 0.11%)</title><rect x="4.3256%" y="1077" width="0.1053%" height="15" fill="rgb(236,28,36)"/><text x="4.5756%" y="1087.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (5 samples, 0.01%)</title><rect x="4.4310%" y="1029" width="0.0117%" height="15" fill="rgb(249,185,26)"/><text x="4.6810%" y="1039.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (5 samples, 0.01%)</title><rect x="4.4310%" y="1013" width="0.0117%" height="15" fill="rgb(249,174,33)"/><text x="4.6810%" y="1023.50"></text></g><g><title>tokio::runtime::context::spawn_handle (110 samples, 0.26%)</title><rect x="4.4310%" y="1077" width="0.2575%" height="15" fill="rgb(233,201,37)"/><text x="4.6810%" y="1087.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (110 samples, 0.26%)</title><rect x="4.4310%" y="1061" width="0.2575%" height="15" fill="rgb(221,78,26)"/><text x="4.6810%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (110 samples, 0.26%)</title><rect x="4.4310%" y="1045" width="0.2575%" height="15" fill="rgb(250,127,30)"/><text x="4.6810%" y="1055.50"></text></g><g><title>tokio::runtime::context::spawn_handle::{{closure}} (105 samples, 0.25%)</title><rect x="4.4427%" y="1029" width="0.2458%" height="15" fill="rgb(230,49,44)"/><text x="4.6927%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (102 samples, 0.24%)</title><rect x="4.4497%" y="1013" width="0.2388%" height="15" fill="rgb(229,67,23)"/><text x="4.6997%" y="1023.50"></text></g><g><title>tokio::runtime::context::spawn_handle::{{closure}}::{{closure}} (101 samples, 0.24%)</title><rect x="4.4520%" y="997" width="0.2364%" height="15" fill="rgb(249,83,47)"/><text x="4.7020%" y="1007.50"></text></g><g><title>&lt;tokio::runtime::spawner::Spawner as core::clone::Clone&gt;::clone (101 samples, 0.24%)</title><rect x="4.4520%" y="981" width="0.2364%" height="15" fill="rgb(215,43,3)"/><text x="4.7020%" y="991.50"></text></g><g><title>[libc-2.31.so] (44 samples, 0.10%)</title><rect x="4.7025%" y="1013" width="0.1030%" height="15" fill="rgb(238,154,13)"/><text x="4.9525%" y="1023.50"></text></g><g><title>[libc-2.31.so] (34 samples, 0.08%)</title><rect x="4.8125%" y="997" width="0.0796%" height="15" fill="rgb(219,56,2)"/><text x="5.0625%" y="1007.50"></text></g><g><title>[libc-2.31.so] (22 samples, 0.05%)</title><rect x="4.9132%" y="981" width="0.0515%" height="15" fill="rgb(233,0,4)"/><text x="5.1632%" y="991.50"></text></g><g><title>__rg_alloc (11 samples, 0.03%)</title><rect x="4.9647%" y="917" width="0.0257%" height="15" fill="rgb(235,30,7)"/><text x="5.2147%" y="927.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (11 samples, 0.03%)</title><rect x="4.9647%" y="901" width="0.0257%" height="15" fill="rgb(250,79,13)"/><text x="5.2147%" y="911.50"></text></g><g><title>jemallocator::layout_to_flags (5 samples, 0.01%)</title><rect x="4.9787%" y="885" width="0.0117%" height="15" fill="rgb(211,146,34)"/><text x="5.2287%" y="895.50"></text></g><g><title>__rust_alloc (5 samples, 0.01%)</title><rect x="4.9904%" y="917" width="0.0117%" height="15" fill="rgb(228,22,38)"/><text x="5.2404%" y="927.50"></text></g><g><title>dynamic_opts_init (7 samples, 0.02%)</title><rect x="5.0185%" y="901" width="0.0164%" height="15" fill="rgb(235,168,5)"/><text x="5.2685%" y="911.50"></text></g><g><title>arena_bin_slabs_nonfull_tryget (14 samples, 0.03%)</title><rect x="5.0630%" y="741" width="0.0328%" height="15" fill="rgb(221,155,16)"/><text x="5.3130%" y="751.50"></text></g><g><title>_rjem_je_extent_heap_remove_first (13 samples, 0.03%)</title><rect x="5.0653%" y="725" width="0.0304%" height="15" fill="rgb(215,215,53)"/><text x="5.3153%" y="735.50"></text></g><g><title>arena_bin_nonfull_slab_get (22 samples, 0.05%)</title><rect x="5.0630%" y="757" width="0.0515%" height="15" fill="rgb(223,4,10)"/><text x="5.3130%" y="767.50"></text></g><g><title>arena_slab_alloc (8 samples, 0.02%)</title><rect x="5.0957%" y="741" width="0.0187%" height="15" fill="rgb(234,103,6)"/><text x="5.3457%" y="751.50"></text></g><g><title>_rjem_je_extents_alloc (7 samples, 0.02%)</title><rect x="5.0981%" y="725" width="0.0164%" height="15" fill="rgb(227,97,0)"/><text x="5.3481%" y="735.50"></text></g><g><title>extent_recycle (6 samples, 0.01%)</title><rect x="5.1004%" y="709" width="0.0140%" height="15" fill="rgb(234,150,53)"/><text x="5.3504%" y="719.50"></text></g><g><title>arena_bin_malloc_hard (23 samples, 0.05%)</title><rect x="5.0630%" y="773" width="0.0538%" height="15" fill="rgb(228,201,54)"/><text x="5.3130%" y="783.50"></text></g><g><title>bitmap_set (20 samples, 0.05%)</title><rect x="5.1238%" y="741" width="0.0468%" height="15" fill="rgb(222,22,37)"/><text x="5.3738%" y="751.50"></text></g><g><title>bitmap_sfu (29 samples, 0.07%)</title><rect x="5.1191%" y="757" width="0.0679%" height="15" fill="rgb(237,53,32)"/><text x="5.3691%" y="767.50"></text></g><g><title>ffs_lu (7 samples, 0.02%)</title><rect x="5.1706%" y="741" width="0.0164%" height="15" fill="rgb(233,25,53)"/><text x="5.4206%" y="751.50"></text></g><g><title>arena_slab_reg_alloc (30 samples, 0.07%)</title><rect x="5.1191%" y="773" width="0.0702%" height="15" fill="rgb(210,40,34)"/><text x="5.3691%" y="783.50"></text></g><g><title>extent_nfree_get (5 samples, 0.01%)</title><rect x="5.1894%" y="773" width="0.0117%" height="15" fill="rgb(241,220,44)"/><text x="5.4394%" y="783.50"></text></g><g><title>malloc_mutex_lock (5 samples, 0.01%)</title><rect x="5.2011%" y="773" width="0.0117%" height="15" fill="rgb(235,28,35)"/><text x="5.4511%" y="783.50"></text></g><g><title>malloc_mutex_trylock_final (5 samples, 0.01%)</title><rect x="5.2011%" y="757" width="0.0117%" height="15" fill="rgb(210,56,17)"/><text x="5.4511%" y="767.50"></text></g><g><title>__GI___pthread_mutex_trylock (5 samples, 0.01%)</title><rect x="5.2011%" y="741" width="0.0117%" height="15" fill="rgb(224,130,29)"/><text x="5.4511%" y="751.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (68 samples, 0.16%)</title><rect x="5.0559%" y="805" width="0.1592%" height="15" fill="rgb(235,212,8)"/><text x="5.3059%" y="815.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (68 samples, 0.16%)</title><rect x="5.0559%" y="789" width="0.1592%" height="15" fill="rgb(223,33,50)"/><text x="5.3059%" y="799.50"></text></g><g><title>imalloc_no_sample (84 samples, 0.20%)</title><rect x="5.0419%" y="869" width="0.1966%" height="15" fill="rgb(219,149,13)"/><text x="5.2919%" y="879.50"></text></g><g><title>iallocztm (80 samples, 0.19%)</title><rect x="5.0513%" y="853" width="0.1873%" height="15" fill="rgb(250,156,29)"/><text x="5.3013%" y="863.50"></text></g><g><title>arena_malloc (80 samples, 0.19%)</title><rect x="5.0513%" y="837" width="0.1873%" height="15" fill="rgb(216,193,19)"/><text x="5.3013%" y="847.50"></text></g><g><title>tcache_alloc_small (78 samples, 0.18%)</title><rect x="5.0559%" y="821" width="0.1826%" height="15" fill="rgb(216,135,14)"/><text x="5.3059%" y="831.50"></text></g><g><title>tcache_event (6 samples, 0.01%)</title><rect x="5.2245%" y="805" width="0.0140%" height="15" fill="rgb(241,47,5)"/><text x="5.4745%" y="815.50"></text></g><g><title>ticker_tick (6 samples, 0.01%)</title><rect x="5.2245%" y="789" width="0.0140%" height="15" fill="rgb(233,42,35)"/><text x="5.4745%" y="799.50"></text></g><g><title>ticker_ticks (6 samples, 0.01%)</title><rect x="5.2245%" y="773" width="0.0140%" height="15" fill="rgb(231,13,6)"/><text x="5.4745%" y="783.50"></text></g><g><title>imalloc_body (91 samples, 0.21%)</title><rect x="5.0349%" y="885" width="0.2130%" height="15" fill="rgb(207,181,40)"/><text x="5.2849%" y="895.50"></text></g><g><title>tokio::runtime::task::joinable (234 samples, 0.55%)</title><rect x="4.7025%" y="1045" width="0.5477%" height="15" fill="rgb(254,173,49)"/><text x="4.9525%" y="1055.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (234 samples, 0.55%)</title><rect x="4.7025%" y="1029" width="0.5477%" height="15" fill="rgb(221,1,38)"/><text x="4.9525%" y="1039.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (190 samples, 0.44%)</title><rect x="4.8055%" y="1013" width="0.4447%" height="15" fill="rgb(206,124,46)"/><text x="5.0555%" y="1023.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (153 samples, 0.36%)</title><rect x="4.8921%" y="997" width="0.3581%" height="15" fill="rgb(249,21,11)"/><text x="5.1421%" y="1007.50"></text></g><g><title>alloc::alloc::exchange_malloc (122 samples, 0.29%)</title><rect x="4.9647%" y="981" width="0.2856%" height="15" fill="rgb(222,201,40)"/><text x="5.2147%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (122 samples, 0.29%)</title><rect x="4.9647%" y="965" width="0.2856%" height="15" fill="rgb(235,61,29)"/><text x="5.2147%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (122 samples, 0.29%)</title><rect x="4.9647%" y="949" width="0.2856%" height="15" fill="rgb(219,207,3)"/><text x="5.2147%" y="959.50"></text></g><g><title>alloc::alloc::alloc (122 samples, 0.29%)</title><rect x="4.9647%" y="933" width="0.2856%" height="15" fill="rgb(222,56,46)"/><text x="5.2147%" y="943.50"></text></g><g><title>_rjem_mallocx (106 samples, 0.25%)</title><rect x="5.0021%" y="917" width="0.2481%" height="15" fill="rgb(239,76,54)"/><text x="5.2521%" y="927.50"></text></g><g><title>imalloc (92 samples, 0.22%)</title><rect x="5.0349%" y="901" width="0.2153%" height="15" fill="rgb(231,124,27)"/><text x="5.2849%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (228 samples, 0.53%)</title><rect x="5.4445%" y="997" width="0.5337%" height="15" fill="rgb(249,195,6)"/><text x="5.6945%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_swap (228 samples, 0.53%)</title><rect x="5.4445%" y="981" width="0.5337%" height="15" fill="rgb(237,174,47)"/><text x="5.6945%" y="991.50"></text></g><g><title>core::mem::drop (20 samples, 0.05%)</title><rect x="5.9782%" y="981" width="0.0468%" height="15" fill="rgb(206,201,31)"/><text x="6.2282%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,()&gt;&gt; (20 samples, 0.05%)</title><rect x="5.9782%" y="965" width="0.0468%" height="15" fill="rgb(231,57,52)"/><text x="6.2282%" y="975.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.05%)</title><rect x="5.9782%" y="949" width="0.0468%" height="15" fill="rgb(248,177,22)"/><text x="6.2282%" y="959.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (20 samples, 0.05%)</title><rect x="5.9782%" y="933" width="0.0468%" height="15" fill="rgb(215,211,37)"/><text x="6.2282%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (20 samples, 0.05%)</title><rect x="5.9782%" y="917" width="0.0468%" height="15" fill="rgb(241,128,51)"/><text x="6.2282%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (20 samples, 0.05%)</title><rect x="5.9782%" y="901" width="0.0468%" height="15" fill="rgb(227,165,31)"/><text x="6.2282%" y="911.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (351 samples, 0.82%)</title><rect x="5.2596%" y="1029" width="0.8216%" height="15" fill="rgb(228,167,24)"/><text x="5.5096%" y="1039.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (286 samples, 0.67%)</title><rect x="5.4117%" y="1013" width="0.6694%" height="15" fill="rgb(228,143,12)"/><text x="5.6617%" y="1023.50"></text></g><g><title>tokio::runtime::park::Inner::unpark_condvar (44 samples, 0.10%)</title><rect x="5.9782%" y="997" width="0.1030%" height="15" fill="rgb(249,149,8)"/><text x="6.2282%" y="1007.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (22 samples, 0.05%)</title><rect x="6.0297%" y="981" width="0.0515%" height="15" fill="rgb(243,35,44)"/><text x="6.2797%" y="991.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (22 samples, 0.05%)</title><rect x="6.0297%" y="965" width="0.0515%" height="15" fill="rgb(246,89,9)"/><text x="6.2797%" y="975.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (22 samples, 0.05%)</title><rect x="6.0297%" y="949" width="0.0515%" height="15" fill="rgb(233,213,13)"/><text x="6.2797%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (21 samples, 0.05%)</title><rect x="6.0320%" y="933" width="0.0492%" height="15" fill="rgb(233,141,41)"/><text x="6.2820%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (21 samples, 0.05%)</title><rect x="6.0320%" y="917" width="0.0492%" height="15" fill="rgb(239,167,4)"/><text x="6.2820%" y="927.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (5,290 samples, 12.38%)</title><rect x="6.1327%" y="997" width="12.3824%" height="15" fill="rgb(209,217,16)"/><text x="6.3827%" y="1007.50">&lt;parking_lot_core:..</text></g><g><title>syscall (5,275 samples, 12.35%)</title><rect x="6.1678%" y="981" width="12.3473%" height="15" fill="rgb(219,88,35)"/><text x="6.4178%" y="991.50">syscall</text></g><g><title>[unknown] (5,219 samples, 12.22%)</title><rect x="6.2989%" y="965" width="12.2162%" height="15" fill="rgb(220,193,23)"/><text x="6.5489%" y="975.50">[unknown]</text></g><g><title>[unknown] (5,113 samples, 11.97%)</title><rect x="6.5470%" y="949" width="11.9681%" height="15" fill="rgb(230,90,52)"/><text x="6.7970%" y="959.50">[unknown]</text></g><g><title>[unknown] (5,088 samples, 11.91%)</title><rect x="6.6055%" y="933" width="11.9096%" height="15" fill="rgb(252,106,19)"/><text x="6.8555%" y="943.50">[unknown]</text></g><g><title>[unknown] (5,061 samples, 11.85%)</title><rect x="6.6687%" y="917" width="11.8464%" height="15" fill="rgb(206,74,20)"/><text x="6.9187%" y="927.50">[unknown]</text></g><g><title>[unknown] (5,030 samples, 11.77%)</title><rect x="6.7413%" y="901" width="11.7738%" height="15" fill="rgb(230,138,44)"/><text x="6.9913%" y="911.50">[unknown]</text></g><g><title>[unknown] (4,411 samples, 10.32%)</title><rect x="8.1902%" y="885" width="10.3249%" height="15" fill="rgb(235,182,43)"/><text x="8.4402%" y="895.50">[unknown]</text></g><g><title>[unknown] (4,061 samples, 9.51%)</title><rect x="9.0094%" y="869" width="9.5056%" height="15" fill="rgb(242,16,51)"/><text x="9.2594%" y="879.50">[unknown]</text></g><g><title>[unknown] (3,625 samples, 8.49%)</title><rect x="10.0300%" y="853" width="8.4851%" height="15" fill="rgb(248,9,4)"/><text x="10.2800%" y="863.50">[unknown]</text></g><g><title>[unknown] (3,194 samples, 7.48%)</title><rect x="11.0388%" y="837" width="7.4762%" height="15" fill="rgb(210,31,22)"/><text x="11.2888%" y="847.50">[unknown]</text></g><g><title>[unknown] (2,288 samples, 5.36%)</title><rect x="13.1595%" y="821" width="5.3556%" height="15" fill="rgb(239,54,39)"/><text x="13.4095%" y="831.50">[unknow..</text></g><g><title>[unknown] (1,306 samples, 3.06%)</title><rect x="15.4581%" y="805" width="3.0570%" height="15" fill="rgb(230,99,41)"/><text x="15.7081%" y="815.50">[un..</text></g><g><title>[unknown] (389 samples, 0.91%)</title><rect x="17.6045%" y="789" width="0.9105%" height="15" fill="rgb(253,106,12)"/><text x="17.8545%" y="799.50"></text></g><g><title>[unknown] (87 samples, 0.20%)</title><rect x="18.3114%" y="773" width="0.2036%" height="15" fill="rgb(213,46,41)"/><text x="18.5614%" y="783.50"></text></g><g><title>[unknown] (6 samples, 0.01%)</title><rect x="18.5010%" y="757" width="0.0140%" height="15" fill="rgb(215,133,35)"/><text x="18.7510%" y="767.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (9 samples, 0.02%)</title><rect x="18.5151%" y="997" width="0.0211%" height="15" fill="rgb(213,28,5)"/><text x="18.7651%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (204 samples, 0.48%)</title><rect x="18.5572%" y="997" width="0.4775%" height="15" fill="rgb(215,77,49)"/><text x="18.8072%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_load (204 samples, 0.48%)</title><rect x="18.5572%" y="981" width="0.4775%" height="15" fill="rgb(248,100,22)"/><text x="18.8072%" y="991.50"></text></g><g><title>&lt;std::time::Instant as core::cmp::PartialOrd&gt;::gt (13 samples, 0.03%)</title><rect x="19.0511%" y="981" width="0.0304%" height="15" fill="rgb(208,67,9)"/><text x="19.3011%" y="991.50"></text></g><g><title>&lt;std::sys::unix::time::inner::Instant as core::cmp::PartialOrd&gt;::partial_cmp (13 samples, 0.03%)</title><rect x="19.0511%" y="965" width="0.0304%" height="15" fill="rgb(219,133,21)"/><text x="19.3011%" y="975.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (13 samples, 0.03%)</title><rect x="19.0511%" y="949" width="0.0304%" height="15" fill="rgb(246,46,29)"/><text x="19.3011%" y="959.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (13 samples, 0.03%)</title><rect x="19.0511%" y="933" width="0.0304%" height="15" fill="rgb(246,185,52)"/><text x="19.3011%" y="943.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (13 samples, 0.03%)</title><rect x="19.0511%" y="917" width="0.0304%" height="15" fill="rgb(252,136,11)"/><text x="19.3011%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (5 samples, 0.01%)</title><rect x="19.0698%" y="901" width="0.0117%" height="15" fill="rgb(219,138,53)"/><text x="19.3198%" y="911.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (109 samples, 0.26%)</title><rect x="19.0347%" y="997" width="0.2551%" height="15" fill="rgb(211,51,23)"/><text x="19.2847%" y="1007.50"></text></g><g><title>std::time::Instant::now (87 samples, 0.20%)</title><rect x="19.0862%" y="981" width="0.2036%" height="15" fill="rgb(247,221,28)"/><text x="19.3362%" y="991.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (87 samples, 0.20%)</title><rect x="19.0862%" y="965" width="0.2036%" height="15" fill="rgb(251,222,45)"/><text x="19.3362%" y="975.50"></text></g><g><title>std::sys::unix::time::inner::now (87 samples, 0.20%)</title><rect x="19.0862%" y="949" width="0.2036%" height="15" fill="rgb(217,162,53)"/><text x="19.3362%" y="959.50"></text></g><g><title>__clock_gettime (82 samples, 0.19%)</title><rect x="19.0979%" y="933" width="0.1919%" height="15" fill="rgb(229,93,14)"/><text x="19.3479%" y="943.50"></text></g><g><title>__vdso_clock_gettime (75 samples, 0.18%)</title><rect x="19.1143%" y="917" width="0.1756%" height="15" fill="rgb(209,67,49)"/><text x="19.3643%" y="927.50"></text></g><g><title>parking_lot_core::parking_lot::hash (5 samples, 0.01%)</title><rect x="19.3413%" y="981" width="0.0117%" height="15" fill="rgb(213,87,29)"/><text x="19.5913%" y="991.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (122 samples, 0.29%)</title><rect x="19.2898%" y="997" width="0.2856%" height="15" fill="rgb(205,151,52)"/><text x="19.5398%" y="1007.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (95 samples, 0.22%)</title><rect x="19.3530%" y="981" width="0.2224%" height="15" fill="rgb(253,215,39)"/><text x="19.6030%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (92 samples, 0.22%)</title><rect x="19.3600%" y="965" width="0.2153%" height="15" fill="rgb(221,220,41)"/><text x="19.6100%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (92 samples, 0.22%)</title><rect x="19.3600%" y="949" width="0.2153%" height="15" fill="rgb(218,133,21)"/><text x="19.6100%" y="959.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (5,997 samples, 14.04%)</title><rect x="6.0812%" y="1029" width="14.0373%" height="15" fill="rgb(221,193,43)"/><text x="6.3312%" y="1039.50">parking_lot::condvar:..</text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (5,987 samples, 14.01%)</title><rect x="6.1046%" y="1013" width="14.0139%" height="15" fill="rgb(240,128,52)"/><text x="6.3546%" y="1023.50">parking_lot_core::par..</text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (232 samples, 0.54%)</title><rect x="19.5754%" y="997" width="0.5430%" height="15" fill="rgb(253,114,12)"/><text x="19.8254%" y="1007.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (232 samples, 0.54%)</title><rect x="19.5754%" y="981" width="0.5430%" height="15" fill="rgb(215,223,47)"/><text x="19.8254%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (232 samples, 0.54%)</title><rect x="19.5754%" y="965" width="0.5430%" height="15" fill="rgb(248,225,23)"/><text x="19.8254%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_sub (232 samples, 0.54%)</title><rect x="19.5754%" y="949" width="0.5430%" height="15" fill="rgb(250,108,0)"/><text x="19.8254%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::queue::Pointers&gt;&gt; (43 samples, 0.10%)</title><rect x="20.1442%" y="981" width="0.1007%" height="15" fill="rgb(228,208,7)"/><text x="20.3942%" y="991.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 0.10%)</title><rect x="20.1442%" y="965" width="0.1007%" height="15" fill="rgb(244,45,10)"/><text x="20.3942%" y="975.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (43 samples, 0.10%)</title><rect x="20.1442%" y="949" width="0.1007%" height="15" fill="rgb(207,125,25)"/><text x="20.3942%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (43 samples, 0.10%)</title><rect x="20.1442%" y="933" width="0.1007%" height="15" fill="rgb(210,195,18)"/><text x="20.3942%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (43 samples, 0.10%)</title><rect x="20.1442%" y="917" width="0.1007%" height="15" fill="rgb(249,80,12)"/><text x="20.3942%" y="927.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::push (352 samples, 0.82%)</title><rect x="20.1325%" y="997" width="0.8239%" height="15" fill="rgb(221,65,9)"/><text x="20.3825%" y="1007.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (304 samples, 0.71%)</title><rect x="20.2448%" y="981" width="0.7116%" height="15" fill="rgb(235,49,36)"/><text x="20.4948%" y="991.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (304 samples, 0.71%)</title><rect x="20.2448%" y="965" width="0.7116%" height="15" fill="rgb(225,32,20)"/><text x="20.4948%" y="975.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (304 samples, 0.71%)</title><rect x="20.2448%" y="949" width="0.7116%" height="15" fill="rgb(215,141,46)"/><text x="20.4948%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (302 samples, 0.71%)</title><rect x="20.2495%" y="933" width="0.7069%" height="15" fill="rgb(250,160,47)"/><text x="20.4995%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (302 samples, 0.71%)</title><rect x="20.2495%" y="917" width="0.7069%" height="15" fill="rgb(216,222,40)"/><text x="20.4995%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (177 samples, 0.41%)</title><rect x="20.9658%" y="965" width="0.4143%" height="15" fill="rgb(234,217,39)"/><text x="21.2158%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;usize&gt;&gt;&gt; (26 samples, 0.06%)</title><rect x="21.3801%" y="965" width="0.0609%" height="15" fill="rgb(207,178,40)"/><text x="21.6301%" y="975.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.06%)</title><rect x="21.3801%" y="949" width="0.0609%" height="15" fill="rgb(221,136,13)"/><text x="21.6301%" y="959.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (26 samples, 0.06%)</title><rect x="21.3801%" y="933" width="0.0609%" height="15" fill="rgb(249,199,10)"/><text x="21.6301%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (26 samples, 0.06%)</title><rect x="21.3801%" y="917" width="0.0609%" height="15" fill="rgb(249,222,13)"/><text x="21.6301%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (26 samples, 0.06%)</title><rect x="21.3801%" y="901" width="0.0609%" height="15" fill="rgb(244,185,38)"/><text x="21.6301%" y="911.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (27 samples, 0.06%)</title><rect x="21.4409%" y="965" width="0.0632%" height="15" fill="rgb(236,202,9)"/><text x="21.6909%" y="975.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (27 samples, 0.06%)</title><rect x="21.4409%" y="949" width="0.0632%" height="15" fill="rgb(250,229,37)"/><text x="21.6909%" y="959.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (27 samples, 0.06%)</title><rect x="21.4409%" y="933" width="0.0632%" height="15" fill="rgb(206,174,23)"/><text x="21.6909%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (24 samples, 0.06%)</title><rect x="21.4480%" y="917" width="0.0562%" height="15" fill="rgb(211,33,43)"/><text x="21.6980%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (24 samples, 0.06%)</title><rect x="21.4480%" y="901" width="0.0562%" height="15" fill="rgb(245,58,50)"/><text x="21.6980%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (153 samples, 0.36%)</title><rect x="21.5112%" y="949" width="0.3581%" height="15" fill="rgb(244,68,36)"/><text x="21.7612%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_add (153 samples, 0.36%)</title><rect x="21.5112%" y="933" width="0.3581%" height="15" fill="rgb(232,229,15)"/><text x="21.7612%" y="943.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::notify_should_wakeup (157 samples, 0.37%)</title><rect x="21.5041%" y="965" width="0.3675%" height="15" fill="rgb(254,30,23)"/><text x="21.7541%" y="975.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,955 samples, 20.96%)</title><rect x="0.9854%" y="1173" width="20.9611%" height="15" fill="rgb(235,160,14)"/><text x="1.2354%" y="1183.50">&lt;core::future::from_generator::Ge..</text></g><g><title>rho_runtime::run::{{closure}} (8,942 samples, 20.93%)</title><rect x="1.0159%" y="1157" width="20.9307%" height="15" fill="rgb(212,155,44)"/><text x="1.2659%" y="1167.50">rho_runtime::run::{{closure}}</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8,942 samples, 20.93%)</title><rect x="1.0159%" y="1141" width="20.9307%" height="15" fill="rgb(226,2,50)"/><text x="1.2659%" y="1151.50">&lt;core::future::from_generator::Ge..</text></g><g><title>rho_runtime::storage::coordinator::Coordinator::run::{{closure}} (8,942 samples, 20.93%)</title><rect x="1.0159%" y="1125" width="20.9307%" height="15" fill="rgb(234,177,6)"/><text x="1.2659%" y="1135.50">rho_runtime::storage::coordinator..</text></g><g><title>rho_runtime::storage::coordinator::Coordinator::handle_produce (8,929 samples, 20.90%)</title><rect x="1.0463%" y="1109" width="20.9002%" height="15" fill="rgb(217,24,9)"/><text x="1.2963%" y="1119.50">rho_runtime::storage::coordinator..</text></g><g><title>tokio::task::spawn::spawn (7,576 samples, 17.73%)</title><rect x="4.2133%" y="1093" width="17.7333%" height="15" fill="rgb(220,13,46)"/><text x="4.4633%" y="1103.50">tokio::task::spawn::spawn</text></g><g><title>tokio::runtime::spawner::Spawner::spawn (7,373 samples, 17.26%)</title><rect x="4.6885%" y="1077" width="17.2581%" height="15" fill="rgb(239,221,27)"/><text x="4.9385%" y="1087.50">tokio::runtime::spawner::Sp..</text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (7,371 samples, 17.25%)</title><rect x="4.6931%" y="1061" width="17.2534%" height="15" fill="rgb(222,198,25)"/><text x="4.9431%" y="1071.50">tokio::runtime::thread_pool..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (7,133 samples, 16.70%)</title><rect x="5.2502%" y="1045" width="16.6963%" height="15" fill="rgb(211,99,13)"/><text x="5.5002%" y="1055.50">tokio::runtime::thread_poo..</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (781 samples, 1.83%)</title><rect x="20.1184%" y="1029" width="1.8281%" height="15" fill="rgb(232,111,31)"/><text x="20.3684%" y="1039.50">t..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (777 samples, 1.82%)</title><rect x="20.1278%" y="1013" width="1.8187%" height="15" fill="rgb(245,82,37)"/><text x="20.3778%" y="1023.50">t..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (423 samples, 0.99%)</title><rect x="20.9564%" y="997" width="0.9901%" height="15" fill="rgb(227,149,46)"/><text x="21.2064%" y="1007.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::worker_to_notify (419 samples, 0.98%)</title><rect x="20.9658%" y="981" width="0.9808%" height="15" fill="rgb(218,36,50)"/><text x="21.2158%" y="991.50"></text></g><g><title>tokio::runtime::thread_pool::idle::State::unpark_one (32 samples, 0.07%)</title><rect x="21.8716%" y="965" width="0.0749%" height="15" fill="rgb(226,80,48)"/><text x="22.1216%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (32 samples, 0.07%)</title><rect x="21.8716%" y="949" width="0.0749%" height="15" fill="rgb(238,224,15)"/><text x="22.1216%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_add (32 samples, 0.07%)</title><rect x="21.8716%" y="933" width="0.0749%" height="15" fill="rgb(241,136,10)"/><text x="22.1216%" y="943.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.03%)</title><rect x="21.9653%" y="1173" width="0.0257%" height="15" fill="rgb(208,32,45)"/><text x="22.2153%" y="1183.50"></text></g><g><title>[unknown] (23 samples, 0.05%)</title><rect x="21.9910%" y="1173" width="0.0538%" height="15" fill="rgb(207,135,9)"/><text x="22.2410%" y="1183.50"></text></g><g><title>[unknown] (23 samples, 0.05%)</title><rect x="21.9910%" y="1157" width="0.0538%" height="15" fill="rgb(206,86,44)"/><text x="22.2410%" y="1167.50"></text></g><g><title>[unknown] (23 samples, 0.05%)</title><rect x="21.9910%" y="1141" width="0.0538%" height="15" fill="rgb(245,177,15)"/><text x="22.2410%" y="1151.50"></text></g><g><title>[unknown] (23 samples, 0.05%)</title><rect x="21.9910%" y="1125" width="0.0538%" height="15" fill="rgb(206,64,50)"/><text x="22.2410%" y="1135.50"></text></g><g><title>[unknown] (23 samples, 0.05%)</title><rect x="21.9910%" y="1109" width="0.0538%" height="15" fill="rgb(234,36,40)"/><text x="22.2410%" y="1119.50"></text></g><g><title>[unknown] (23 samples, 0.05%)</title><rect x="21.9910%" y="1093" width="0.0538%" height="15" fill="rgb(213,64,8)"/><text x="22.2410%" y="1103.50"></text></g><g><title>[unknown] (23 samples, 0.05%)</title><rect x="21.9910%" y="1077" width="0.0538%" height="15" fill="rgb(210,75,36)"/><text x="22.2410%" y="1087.50"></text></g><g><title>[unknown] (23 samples, 0.05%)</title><rect x="21.9910%" y="1061" width="0.0538%" height="15" fill="rgb(229,88,21)"/><text x="22.2410%" y="1071.50"></text></g><g><title>[unknown] (23 samples, 0.05%)</title><rect x="21.9910%" y="1045" width="0.0538%" height="15" fill="rgb(252,204,47)"/><text x="22.2410%" y="1055.50"></text></g><g><title>[unknown] (23 samples, 0.05%)</title><rect x="21.9910%" y="1029" width="0.0538%" height="15" fill="rgb(208,77,27)"/><text x="22.2410%" y="1039.50"></text></g><g><title>[unknown] (16 samples, 0.04%)</title><rect x="22.0074%" y="1013" width="0.0375%" height="15" fill="rgb(221,76,26)"/><text x="22.2574%" y="1023.50"></text></g><g><title>[unknown] (14 samples, 0.03%)</title><rect x="22.0121%" y="997" width="0.0328%" height="15" fill="rgb(225,139,18)"/><text x="22.2621%" y="1007.50"></text></g><g><title>[unknown] (13 samples, 0.03%)</title><rect x="22.0144%" y="981" width="0.0304%" height="15" fill="rgb(230,137,11)"/><text x="22.2644%" y="991.50"></text></g><g><title>[unknown] (9 samples, 0.02%)</title><rect x="22.0238%" y="965" width="0.0211%" height="15" fill="rgb(212,28,1)"/><text x="22.2738%" y="975.50"></text></g><g><title>[unknown] (7 samples, 0.02%)</title><rect x="22.0285%" y="949" width="0.0164%" height="15" fill="rgb(248,164,17)"/><text x="22.2785%" y="959.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="22.0331%" y="933" width="0.0117%" height="15" fill="rgb(222,171,42)"/><text x="22.2831%" y="943.50"></text></g><g><title>__rust_probestack (14 samples, 0.03%)</title><rect x="22.0519%" y="1173" width="0.0328%" height="15" fill="rgb(243,84,45)"/><text x="22.3019%" y="1183.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (9 samples, 0.02%)</title><rect x="22.0940%" y="1173" width="0.0211%" height="15" fill="rgb(252,49,23)"/><text x="22.3440%" y="1183.50"></text></g><g><title>parking_lot_core::parking_lot::park (7 samples, 0.02%)</title><rect x="22.0987%" y="1157" width="0.0164%" height="15" fill="rgb(215,19,7)"/><text x="22.3487%" y="1167.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (7 samples, 0.02%)</title><rect x="22.0987%" y="1141" width="0.0164%" height="15" fill="rgb(238,81,41)"/><text x="22.3487%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.01%)</title><rect x="22.1010%" y="1125" width="0.0140%" height="15" fill="rgb(210,199,37)"/><text x="22.3510%" y="1135.50"></text></g><g><title>__rust_probestack (37 samples, 0.09%)</title><rect x="22.1244%" y="981" width="0.0866%" height="15" fill="rgb(244,192,49)"/><text x="22.3744%" y="991.50"></text></g><g><title>[libc-2.31.so] (210 samples, 0.49%)</title><rect x="22.8571%" y="933" width="0.4916%" height="15" fill="rgb(226,211,11)"/><text x="23.1071%" y="943.50"></text></g><g><title>[libc-2.31.so] (38 samples, 0.09%)</title><rect x="23.3908%" y="917" width="0.0889%" height="15" fill="rgb(236,162,54)"/><text x="23.6408%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (89 samples, 0.21%)</title><rect x="23.4797%" y="917" width="0.2083%" height="15" fill="rgb(220,229,9)"/><text x="23.7297%" y="927.50"></text></g><g><title>core::ptr::read (89 samples, 0.21%)</title><rect x="23.4797%" y="901" width="0.2083%" height="15" fill="rgb(250,87,22)"/><text x="23.7297%" y="911.50"></text></g><g><title>[libc-2.31.so] (87 samples, 0.20%)</title><rect x="23.4844%" y="885" width="0.2036%" height="15" fill="rgb(239,43,17)"/><text x="23.7344%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (33 samples, 0.08%)</title><rect x="23.6880%" y="917" width="0.0772%" height="15" fill="rgb(231,177,25)"/><text x="23.9380%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (33 samples, 0.08%)</title><rect x="23.6880%" y="901" width="0.0772%" height="15" fill="rgb(219,179,1)"/><text x="23.9380%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (250 samples, 0.59%)</title><rect x="23.7653%" y="917" width="0.5852%" height="15" fill="rgb(238,219,53)"/><text x="24.0153%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_load (245 samples, 0.57%)</title><rect x="23.7770%" y="901" width="0.5735%" height="15" fill="rgb(232,167,36)"/><text x="24.0270%" y="911.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::pop (463 samples, 1.08%)</title><rect x="23.3556%" y="933" width="1.0838%" height="15" fill="rgb(244,19,51)"/><text x="23.6056%" y="943.50"></text></g><g><title>core::sync::atomic::fence (38 samples, 0.09%)</title><rect x="24.3505%" y="917" width="0.0889%" height="15" fill="rgb(224,6,22)"/><text x="24.6005%" y="927.50"></text></g><g><title>rho_runtime::main (998 samples, 2.34%)</title><rect x="22.1151%" y="1173" width="2.3360%" height="15" fill="rgb(224,145,5)"/><text x="22.3651%" y="1183.50">r..</text></g><g><title>tokio::runtime::Runtime::block_on (998 samples, 2.34%)</title><rect x="22.1151%" y="1157" width="2.3360%" height="15" fill="rgb(234,130,49)"/><text x="22.3651%" y="1167.50">t..</text></g><g><title>tokio::runtime::thread_pool::ThreadPool::block_on (998 samples, 2.34%)</title><rect x="22.1151%" y="1141" width="2.3360%" height="15" fill="rgb(254,6,2)"/><text x="22.3651%" y="1151.50">t..</text></g><g><title>tokio::runtime::enter::Enter::block_on (998 samples, 2.34%)</title><rect x="22.1151%" y="1125" width="2.3360%" height="15" fill="rgb(208,96,46)"/><text x="22.3651%" y="1135.50">t..</text></g><g><title>tokio::park::thread::CachedParkThread::block_on (998 samples, 2.34%)</title><rect x="22.1151%" y="1109" width="2.3360%" height="15" fill="rgb(239,3,39)"/><text x="22.3651%" y="1119.50">t..</text></g><g><title>tokio::coop::budget (998 samples, 2.34%)</title><rect x="22.1151%" y="1093" width="2.3360%" height="15" fill="rgb(233,210,1)"/><text x="22.3651%" y="1103.50">t..</text></g><g><title>tokio::coop::with_budget (998 samples, 2.34%)</title><rect x="22.1151%" y="1077" width="2.3360%" height="15" fill="rgb(244,137,37)"/><text x="22.3651%" y="1087.50">t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (998 samples, 2.34%)</title><rect x="22.1151%" y="1061" width="2.3360%" height="15" fill="rgb(240,136,2)"/><text x="22.3651%" y="1071.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (998 samples, 2.34%)</title><rect x="22.1151%" y="1045" width="2.3360%" height="15" fill="rgb(239,18,37)"/><text x="22.3651%" y="1055.50">s..</text></g><g><title>tokio::coop::with_budget::{{closure}} (998 samples, 2.34%)</title><rect x="22.1151%" y="1029" width="2.3360%" height="15" fill="rgb(218,185,22)"/><text x="22.3651%" y="1039.50">t..</text></g><g><title>tokio::park::thread::CachedParkThread::block_on::{{closure}} (998 samples, 2.34%)</title><rect x="22.1151%" y="1013" width="2.3360%" height="15" fill="rgb(225,218,4)"/><text x="22.3651%" y="1023.50">t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (998 samples, 2.34%)</title><rect x="22.1151%" y="997" width="2.3360%" height="15" fill="rgb(230,182,32)"/><text x="22.3651%" y="1007.50">&lt;..</text></g><g><title>rho_runtime::run::{{closure}} (957 samples, 2.24%)</title><rect x="22.2110%" y="981" width="2.2401%" height="15" fill="rgb(242,56,43)"/><text x="22.4610%" y="991.50">r..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (935 samples, 2.19%)</title><rect x="22.2625%" y="965" width="2.1886%" height="15" fill="rgb(233,99,24)"/><text x="22.5125%" y="975.50">&lt;..</text></g><g><title>rho_runtime::storage::coordinator::Coordinator::run::{{closure}} (935 samples, 2.19%)</title><rect x="22.2625%" y="949" width="2.1886%" height="15" fill="rgb(234,209,42)"/><text x="22.5125%" y="959.50">r..</text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (29 samples, 0.07%)</title><rect x="24.5026%" y="933" width="0.0679%" height="15" fill="rgb(227,7,12)"/><text x="24.7526%" y="943.50"></text></g><g><title>tokio::park::thread::clone (28 samples, 0.07%)</title><rect x="24.5049%" y="917" width="0.0655%" height="15" fill="rgb(245,203,43)"/><text x="24.7549%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (28 samples, 0.07%)</title><rect x="24.5049%" y="901" width="0.0655%" height="15" fill="rgb(238,205,33)"/><text x="24.7549%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (27 samples, 0.06%)</title><rect x="24.5073%" y="885" width="0.0632%" height="15" fill="rgb(231,56,7)"/><text x="24.7573%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_add (27 samples, 0.06%)</title><rect x="24.5073%" y="869" width="0.0632%" height="15" fill="rgb(244,186,29)"/><text x="24.7573%" y="879.50"></text></g><g><title>core::mem::drop (272 samples, 0.64%)</title><rect x="24.5775%" y="933" width="0.6367%" height="15" fill="rgb(234,111,31)"/><text x="24.8275%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::util::linked_list::LinkedList&lt;tokio::sync::notify::Waiter,tokio::sync::notify::Waiter&gt;&gt;&gt; (272 samples, 0.64%)</title><rect x="24.5775%" y="917" width="0.6367%" height="15" fill="rgb(241,149,10)"/><text x="24.8275%" y="927.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (272 samples, 0.64%)</title><rect x="24.5775%" y="901" width="0.6367%" height="15" fill="rgb(249,206,44)"/><text x="24.8275%" y="911.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (272 samples, 0.64%)</title><rect x="24.5775%" y="885" width="0.6367%" height="15" fill="rgb(251,153,30)"/><text x="24.8275%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (271 samples, 0.63%)</title><rect x="24.5798%" y="869" width="0.6343%" height="15" fill="rgb(239,152,38)"/><text x="24.8298%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (271 samples, 0.63%)</title><rect x="24.5798%" y="853" width="0.6343%" height="15" fill="rgb(249,139,47)"/><text x="24.8298%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::util::linked_list::LinkedList&lt;tokio::sync::notify::Waiter,tokio::sync::notify::Waiter&gt;&gt;&gt; (36 samples, 0.08%)</title><rect x="25.2212%" y="933" width="0.0843%" height="15" fill="rgb(244,64,35)"/><text x="25.4712%" y="943.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.08%)</title><rect x="25.2212%" y="917" width="0.0843%" height="15" fill="rgb(216,46,15)"/><text x="25.4712%" y="927.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (35 samples, 0.08%)</title><rect x="25.2235%" y="901" width="0.0819%" height="15" fill="rgb(250,74,19)"/><text x="25.4735%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (35 samples, 0.08%)</title><rect x="25.2235%" y="885" width="0.0819%" height="15" fill="rgb(249,42,33)"/><text x="25.4735%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (35 samples, 0.08%)</title><rect x="25.2235%" y="869" width="0.0819%" height="15" fill="rgb(242,149,17)"/><text x="25.4735%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (62 samples, 0.15%)</title><rect x="25.3055%" y="933" width="0.1451%" height="15" fill="rgb(244,29,21)"/><text x="25.5555%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (62 samples, 0.15%)</title><rect x="25.3055%" y="917" width="0.1451%" height="15" fill="rgb(220,130,37)"/><text x="25.5555%" y="927.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (68 samples, 0.16%)</title><rect x="25.4506%" y="933" width="0.1592%" height="15" fill="rgb(211,67,2)"/><text x="25.7006%" y="943.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (68 samples, 0.16%)</title><rect x="25.4506%" y="917" width="0.1592%" height="15" fill="rgb(235,68,52)"/><text x="25.7006%" y="927.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (68 samples, 0.16%)</title><rect x="25.4506%" y="901" width="0.1592%" height="15" fill="rgb(246,142,3)"/><text x="25.7006%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (66 samples, 0.15%)</title><rect x="25.4553%" y="885" width="0.1545%" height="15" fill="rgb(241,25,7)"/><text x="25.7053%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (66 samples, 0.15%)</title><rect x="25.4553%" y="869" width="0.1545%" height="15" fill="rgb(242,119,39)"/><text x="25.7053%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (496 samples, 1.16%)</title><rect x="24.4675%" y="981" width="1.1610%" height="15" fill="rgb(241,98,45)"/><text x="24.7175%" y="991.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::run::{{closure}} (496 samples, 1.16%)</title><rect x="24.4675%" y="965" width="1.1610%" height="15" fill="rgb(254,28,30)"/><text x="24.7175%" y="975.50"></text></g><g><title>&lt;tokio::sync::notify::Notified as core::future::future::Future&gt;::poll (496 samples, 1.16%)</title><rect x="24.4675%" y="949" width="1.1610%" height="15" fill="rgb(241,142,54)"/><text x="24.7175%" y="959.50"></text></g><g><title>tokio::runtime::Runtime::block_on (555 samples, 1.30%)</title><rect x="24.4675%" y="1173" width="1.2991%" height="15" fill="rgb(222,85,15)"/><text x="24.7175%" y="1183.50"></text></g><g><title>tokio::runtime::thread_pool::ThreadPool::block_on (555 samples, 1.30%)</title><rect x="24.4675%" y="1157" width="1.2991%" height="15" fill="rgb(210,85,47)"/><text x="24.7175%" y="1167.50"></text></g><g><title>tokio::runtime::enter::Enter::block_on (555 samples, 1.30%)</title><rect x="24.4675%" y="1141" width="1.2991%" height="15" fill="rgb(224,206,25)"/><text x="24.7175%" y="1151.50"></text></g><g><title>tokio::park::thread::CachedParkThread::block_on (555 samples, 1.30%)</title><rect x="24.4675%" y="1125" width="1.2991%" height="15" fill="rgb(243,201,19)"/><text x="24.7175%" y="1135.50"></text></g><g><title>tokio::coop::budget (555 samples, 1.30%)</title><rect x="24.4675%" y="1109" width="1.2991%" height="15" fill="rgb(236,59,4)"/><text x="24.7175%" y="1119.50"></text></g><g><title>tokio::coop::with_budget (555 samples, 1.30%)</title><rect x="24.4675%" y="1093" width="1.2991%" height="15" fill="rgb(254,179,45)"/><text x="24.7175%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (555 samples, 1.30%)</title><rect x="24.4675%" y="1077" width="1.2991%" height="15" fill="rgb(226,14,10)"/><text x="24.7175%" y="1087.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (555 samples, 1.30%)</title><rect x="24.4675%" y="1061" width="1.2991%" height="15" fill="rgb(244,27,41)"/><text x="24.7175%" y="1071.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (555 samples, 1.30%)</title><rect x="24.4675%" y="1045" width="1.2991%" height="15" fill="rgb(235,35,32)"/><text x="24.7175%" y="1055.50"></text></g><g><title>tokio::park::thread::CachedParkThread::block_on::{{closure}} (555 samples, 1.30%)</title><rect x="24.4675%" y="1029" width="1.2991%" height="15" fill="rgb(218,68,31)"/><text x="24.7175%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (555 samples, 1.30%)</title><rect x="24.4675%" y="1013" width="1.2991%" height="15" fill="rgb(207,120,37)"/><text x="24.7175%" y="1023.50"></text></g><g><title>rho_runtime::run::{{closure}} (555 samples, 1.30%)</title><rect x="24.4675%" y="997" width="1.2991%" height="15" fill="rgb(227,98,0)"/><text x="24.7175%" y="1007.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::create (59 samples, 0.14%)</title><rect x="25.6285%" y="981" width="0.1381%" height="15" fill="rgb(207,7,3)"/><text x="25.8785%" y="991.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::new (59 samples, 0.14%)</title><rect x="25.6285%" y="965" width="0.1381%" height="15" fill="rgb(206,98,19)"/><text x="25.8785%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (59 samples, 0.14%)</title><rect x="25.6285%" y="949" width="0.1381%" height="15" fill="rgb(217,5,26)"/><text x="25.8785%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[I]&gt; as core::iter::traits::collect::FromIterator&lt;I&gt;&gt;::from_iter (59 samples, 0.14%)</title><rect x="25.6285%" y="933" width="0.1381%" height="15" fill="rgb(235,190,38)"/><text x="25.8785%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (59 samples, 0.14%)</title><rect x="25.6285%" y="917" width="0.1381%" height="15" fill="rgb(247,86,24)"/><text x="25.8785%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (59 samples, 0.14%)</title><rect x="25.6285%" y="901" width="0.1381%" height="15" fill="rgb(205,101,16)"/><text x="25.8785%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (59 samples, 0.14%)</title><rect x="25.6285%" y="885" width="0.1381%" height="15" fill="rgb(246,168,33)"/><text x="25.8785%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (59 samples, 0.14%)</title><rect x="25.6285%" y="869" width="0.1381%" height="15" fill="rgb(231,114,1)"/><text x="25.8785%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (59 samples, 0.14%)</title><rect x="25.6285%" y="853" width="0.1381%" height="15" fill="rgb(207,184,53)"/><text x="25.8785%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (59 samples, 0.14%)</title><rect x="25.6285%" y="837" width="0.1381%" height="15" fill="rgb(224,95,51)"/><text x="25.8785%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (59 samples, 0.14%)</title><rect x="25.6285%" y="821" width="0.1381%" height="15" fill="rgb(212,188,45)"/><text x="25.8785%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (59 samples, 0.14%)</title><rect x="25.6285%" y="805" width="0.1381%" height="15" fill="rgb(223,154,38)"/><text x="25.8785%" y="815.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (59 samples, 0.14%)</title><rect x="25.6285%" y="789" width="0.1381%" height="15" fill="rgb(251,22,52)"/><text x="25.8785%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (59 samples, 0.14%)</title><rect x="25.6285%" y="773" width="0.1381%" height="15" fill="rgb(229,209,22)"/><text x="25.8785%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (59 samples, 0.14%)</title><rect x="25.6285%" y="757" width="0.1381%" height="15" fill="rgb(234,138,34)"/><text x="25.8785%" y="767.50"></text></g><g><title>core::ptr::write (59 samples, 0.14%)</title><rect x="25.6285%" y="741" width="0.1381%" height="15" fill="rgb(212,95,11)"/><text x="25.8785%" y="751.50"></text></g><g><title>[unknown] (53 samples, 0.12%)</title><rect x="25.6425%" y="725" width="0.1241%" height="15" fill="rgb(240,179,47)"/><text x="25.8925%" y="735.50"></text></g><g><title>[unknown] (48 samples, 0.11%)</title><rect x="25.6542%" y="709" width="0.1124%" height="15" fill="rgb(240,163,11)"/><text x="25.9042%" y="719.50"></text></g><g><title>[unknown] (46 samples, 0.11%)</title><rect x="25.6589%" y="693" width="0.1077%" height="15" fill="rgb(236,37,12)"/><text x="25.9089%" y="703.50"></text></g><g><title>[unknown] (45 samples, 0.11%)</title><rect x="25.6613%" y="677" width="0.1053%" height="15" fill="rgb(232,164,16)"/><text x="25.9113%" y="687.50"></text></g><g><title>[unknown] (44 samples, 0.10%)</title><rect x="25.6636%" y="661" width="0.1030%" height="15" fill="rgb(244,205,15)"/><text x="25.9136%" y="671.50"></text></g><g><title>[unknown] (41 samples, 0.10%)</title><rect x="25.6706%" y="645" width="0.0960%" height="15" fill="rgb(223,117,47)"/><text x="25.9206%" y="655.50"></text></g><g><title>[unknown] (38 samples, 0.09%)</title><rect x="25.6776%" y="629" width="0.0889%" height="15" fill="rgb(244,107,35)"/><text x="25.9276%" y="639.50"></text></g><g><title>[unknown] (32 samples, 0.07%)</title><rect x="25.6917%" y="613" width="0.0749%" height="15" fill="rgb(205,140,8)"/><text x="25.9417%" y="623.50"></text></g><g><title>[unknown] (18 samples, 0.04%)</title><rect x="25.7245%" y="597" width="0.0421%" height="15" fill="rgb(228,84,46)"/><text x="25.9745%" y="607.50"></text></g><g><title>[unknown] (15 samples, 0.04%)</title><rect x="25.7315%" y="581" width="0.0351%" height="15" fill="rgb(254,188,9)"/><text x="25.9815%" y="591.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::worker_to_notify (5 samples, 0.01%)</title><rect x="25.7806%" y="1173" width="0.0117%" height="15" fill="rgb(206,112,54)"/><text x="26.0306%" y="1183.50"></text></g><g><title>[unknown] (10,670 samples, 24.98%)</title><rect x="0.8286%" y="1189" width="24.9754%" height="15" fill="rgb(216,84,49)"/><text x="1.0786%" y="1199.50">[unknown]</text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,()&gt;&gt; (27 samples, 0.06%)</title><rect x="26.0990%" y="837" width="0.0632%" height="15" fill="rgb(214,194,35)"/><text x="26.3490%" y="847.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.06%)</title><rect x="26.0990%" y="821" width="0.0632%" height="15" fill="rgb(249,28,3)"/><text x="26.3490%" y="831.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (27 samples, 0.06%)</title><rect x="26.0990%" y="805" width="0.0632%" height="15" fill="rgb(222,56,52)"/><text x="26.3490%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (26 samples, 0.06%)</title><rect x="26.1013%" y="789" width="0.0609%" height="15" fill="rgb(245,217,50)"/><text x="26.3513%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (26 samples, 0.06%)</title><rect x="26.1013%" y="773" width="0.0609%" height="15" fill="rgb(213,201,24)"/><text x="26.3513%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (159 samples, 0.37%)</title><rect x="26.1622%" y="837" width="0.3722%" height="15" fill="rgb(248,116,28)"/><text x="26.4122%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (159 samples, 0.37%)</title><rect x="26.1622%" y="821" width="0.3722%" height="15" fill="rgb(219,72,43)"/><text x="26.4122%" y="831.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (58 samples, 0.14%)</title><rect x="26.5390%" y="789" width="0.1358%" height="15" fill="rgb(209,138,14)"/><text x="26.7890%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (57 samples, 0.13%)</title><rect x="26.5414%" y="773" width="0.1334%" height="15" fill="rgb(222,18,33)"/><text x="26.7914%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (57 samples, 0.13%)</title><rect x="26.5414%" y="757" width="0.1334%" height="15" fill="rgb(213,199,7)"/><text x="26.7914%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;parking_lot_core::parking_lot::ThreadData&gt;&gt; (5 samples, 0.01%)</title><rect x="26.6748%" y="757" width="0.0117%" height="15" fill="rgb(250,110,10)"/><text x="26.9248%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (297 samples, 0.70%)</title><rect x="26.7169%" y="725" width="0.6952%" height="15" fill="rgb(248,123,6)"/><text x="26.9669%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (297 samples, 0.70%)</title><rect x="26.7169%" y="709" width="0.6952%" height="15" fill="rgb(206,91,31)"/><text x="26.9669%" y="719.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (5,031 samples, 11.78%)</title><rect x="26.7169%" y="741" width="11.7761%" height="15" fill="rgb(211,154,13)"/><text x="26.9669%" y="751.50">&lt;parking_lot_core..</text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (4,734 samples, 11.08%)</title><rect x="27.4121%" y="725" width="11.0809%" height="15" fill="rgb(225,148,7)"/><text x="27.6621%" y="735.50">parking_lot_core..</text></g><g><title>syscall (4,730 samples, 11.07%)</title><rect x="27.4215%" y="709" width="11.0716%" height="15" fill="rgb(220,160,43)"/><text x="27.6715%" y="719.50">syscall</text></g><g><title>[unknown] (4,636 samples, 10.85%)</title><rect x="27.6415%" y="693" width="10.8516%" height="15" fill="rgb(213,52,39)"/><text x="27.8915%" y="703.50">[unknown]</text></g><g><title>[unknown] (4,393 samples, 10.28%)</title><rect x="28.2103%" y="677" width="10.2828%" height="15" fill="rgb(243,137,7)"/><text x="28.4603%" y="687.50">[unknown]</text></g><g><title>[unknown] (4,309 samples, 10.09%)</title><rect x="28.4069%" y="661" width="10.0861%" height="15" fill="rgb(230,79,13)"/><text x="28.6569%" y="671.50">[unknown]</text></g><g><title>[unknown] (4,214 samples, 9.86%)</title><rect x="28.6293%" y="645" width="9.8638%" height="15" fill="rgb(247,105,23)"/><text x="28.8793%" y="655.50">[unknown]</text></g><g><title>[unknown] (4,096 samples, 9.59%)</title><rect x="28.9055%" y="629" width="9.5876%" height="15" fill="rgb(223,179,41)"/><text x="29.1555%" y="639.50">[unknown]</text></g><g><title>[unknown] (3,816 samples, 8.93%)</title><rect x="29.5609%" y="613" width="8.9322%" height="15" fill="rgb(218,9,34)"/><text x="29.8109%" y="623.50">[unknown]</text></g><g><title>[unknown] (3,373 samples, 7.90%)</title><rect x="30.5978%" y="597" width="7.8952%" height="15" fill="rgb(222,106,8)"/><text x="30.8478%" y="607.50">[unknown]</text></g><g><title>[unknown] (3,068 samples, 7.18%)</title><rect x="31.3117%" y="581" width="7.1813%" height="15" fill="rgb(211,220,0)"/><text x="31.5617%" y="591.50">[unknown]</text></g><g><title>[unknown] (2,731 samples, 6.39%)</title><rect x="32.1006%" y="565" width="6.3925%" height="15" fill="rgb(229,52,16)"/><text x="32.3506%" y="575.50">[unknown]</text></g><g><title>[unknown] (2,005 samples, 4.69%)</title><rect x="33.7999%" y="549" width="4.6931%" height="15" fill="rgb(212,155,18)"/><text x="34.0499%" y="559.50">[unkn..</text></g><g><title>[unknown] (1,338 samples, 3.13%)</title><rect x="35.3612%" y="533" width="3.1319%" height="15" fill="rgb(242,21,14)"/><text x="35.6112%" y="543.50">[un..</text></g><g><title>[unknown] (909 samples, 2.13%)</title><rect x="36.3653%" y="517" width="2.1277%" height="15" fill="rgb(222,19,48)"/><text x="36.6153%" y="527.50">[..</text></g><g><title>[unknown] (474 samples, 1.11%)</title><rect x="37.3835%" y="501" width="1.1095%" height="15" fill="rgb(232,45,27)"/><text x="37.6335%" y="511.50"></text></g><g><title>[unknown] (309 samples, 0.72%)</title><rect x="37.7698%" y="485" width="0.7233%" height="15" fill="rgb(249,103,42)"/><text x="38.0198%" y="495.50"></text></g><g><title>[unknown] (9 samples, 0.02%)</title><rect x="38.4720%" y="469" width="0.0211%" height="15" fill="rgb(246,81,33)"/><text x="38.7220%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="38.4813%" y="453" width="0.0117%" height="15" fill="rgb(252,33,42)"/><text x="38.7313%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="38.4813%" y="437" width="0.0117%" height="15" fill="rgb(209,212,41)"/><text x="38.7313%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="38.4813%" y="421" width="0.0117%" height="15" fill="rgb(207,154,6)"/><text x="38.7313%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="38.4813%" y="405" width="0.0117%" height="15" fill="rgb(223,64,47)"/><text x="38.7313%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="38.4813%" y="389" width="0.0117%" height="15" fill="rgb(211,161,38)"/><text x="38.7313%" y="399.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (5 samples, 0.01%)</title><rect x="38.4930%" y="741" width="0.0117%" height="15" fill="rgb(219,138,40)"/><text x="38.7430%" y="751.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (5 samples, 0.01%)</title><rect x="38.4930%" y="725" width="0.0117%" height="15" fill="rgb(241,228,46)"/><text x="38.7430%" y="735.50"></text></g><g><title>core::mem::replace (5 samples, 0.01%)</title><rect x="38.4930%" y="709" width="0.0117%" height="15" fill="rgb(223,209,38)"/><text x="38.7430%" y="719.50"></text></g><g><title>core::mem::swap (5 samples, 0.01%)</title><rect x="38.4930%" y="693" width="0.0117%" height="15" fill="rgb(236,164,45)"/><text x="38.7430%" y="703.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (5 samples, 0.01%)</title><rect x="38.4930%" y="677" width="0.0117%" height="15" fill="rgb(231,15,5)"/><text x="38.7430%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.01%)</title><rect x="38.4930%" y="661" width="0.0117%" height="15" fill="rgb(252,35,15)"/><text x="38.7430%" y="671.50"></text></g><g><title>core::ops::function::FnOnce::call_once (24 samples, 0.06%)</title><rect x="38.5048%" y="741" width="0.0562%" height="15" fill="rgb(248,181,18)"/><text x="38.7548%" y="751.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal::{{closure}} (24 samples, 0.06%)</title><rect x="38.5048%" y="725" width="0.0562%" height="15" fill="rgb(233,39,42)"/><text x="38.7548%" y="735.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (24 samples, 0.06%)</title><rect x="38.5048%" y="709" width="0.0562%" height="15" fill="rgb(238,110,33)"/><text x="38.7548%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (23 samples, 0.05%)</title><rect x="38.5071%" y="693" width="0.0538%" height="15" fill="rgb(233,195,10)"/><text x="38.7571%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (23 samples, 0.05%)</title><rect x="38.5071%" y="677" width="0.0538%" height="15" fill="rgb(254,105,3)"/><text x="38.7571%" y="687.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (62 samples, 0.15%)</title><rect x="38.5609%" y="741" width="0.1451%" height="15" fill="rgb(221,225,9)"/><text x="38.8109%" y="751.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (56 samples, 0.13%)</title><rect x="38.5750%" y="725" width="0.1311%" height="15" fill="rgb(224,227,45)"/><text x="38.8250%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (55 samples, 0.13%)</title><rect x="38.5773%" y="709" width="0.1287%" height="15" fill="rgb(229,198,43)"/><text x="38.8273%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (55 samples, 0.13%)</title><rect x="38.5773%" y="693" width="0.1287%" height="15" fill="rgb(206,209,35)"/><text x="38.8273%" y="703.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (5,278 samples, 12.35%)</title><rect x="26.6865%" y="757" width="12.3543%" height="15" fill="rgb(245,195,53)"/><text x="26.9365%" y="767.50">parking_lot_core::..</text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (143 samples, 0.33%)</title><rect x="38.7061%" y="741" width="0.3347%" height="15" fill="rgb(240,92,26)"/><text x="38.9561%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (142 samples, 0.33%)</title><rect x="38.7084%" y="725" width="0.3324%" height="15" fill="rgb(207,40,23)"/><text x="38.9584%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_sub (142 samples, 0.33%)</title><rect x="38.7084%" y="709" width="0.3324%" height="15" fill="rgb(223,111,35)"/><text x="38.9584%" y="719.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (5,347 samples, 12.52%)</title><rect x="26.5343%" y="837" width="12.5158%" height="15" fill="rgb(229,147,28)"/><text x="26.7843%" y="847.50">tokio::loom::std::p..</text></g><g><title>parking_lot::condvar::Condvar::wait (5,347 samples, 12.52%)</title><rect x="26.5343%" y="821" width="12.5158%" height="15" fill="rgb(211,29,28)"/><text x="26.7843%" y="831.50">parking_lot::condva..</text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (5,347 samples, 12.52%)</title><rect x="26.5343%" y="805" width="12.5158%" height="15" fill="rgb(228,72,33)"/><text x="26.7843%" y="815.50">parking_lot::condva..</text></g><g><title>parking_lot_core::parking_lot::park (5,287 samples, 12.38%)</title><rect x="26.6748%" y="789" width="12.3754%" height="15" fill="rgb(205,214,31)"/><text x="26.9248%" y="799.50">parking_lot_core::..</text></g><g><title>parking_lot_core::parking_lot::with_thread_data (5,287 samples, 12.38%)</title><rect x="26.6748%" y="773" width="12.3754%" height="15" fill="rgb(224,111,15)"/><text x="26.9248%" y="783.50">parking_lot_core::..</text></g><g><title>&lt;tokio::park::thread::CachedParkThread as tokio::park::Park&gt;::park (5,602 samples, 13.11%)</title><rect x="26.0217%" y="933" width="13.1127%" height="15" fill="rgb(253,21,26)"/><text x="26.2717%" y="943.50">&lt;tokio::park::thread..</text></g><g><title>tokio::park::thread::CachedParkThread::with_current (5,602 samples, 13.11%)</title><rect x="26.0217%" y="917" width="13.1127%" height="15" fill="rgb(245,139,43)"/><text x="26.2717%" y="927.50">tokio::park::thread:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5,602 samples, 13.11%)</title><rect x="26.0217%" y="901" width="13.1127%" height="15" fill="rgb(252,170,7)"/><text x="26.2717%" y="911.50">std::thread::local::..</text></g><g><title>tokio::park::thread::CachedParkThread::with_current::{{closure}} (5,598 samples, 13.10%)</title><rect x="26.0311%" y="885" width="13.1033%" height="15" fill="rgb(231,118,14)"/><text x="26.2811%" y="895.50">tokio::park::thread:..</text></g><g><title>&lt;tokio::park::thread::CachedParkThread as tokio::park::Park&gt;::park::{{closure}} (5,598 samples, 13.10%)</title><rect x="26.0311%" y="869" width="13.1033%" height="15" fill="rgb(238,83,0)"/><text x="26.2811%" y="879.50">&lt;tokio::park::thread..</text></g><g><title>tokio::park::thread::Inner::park (5,575 samples, 13.05%)</title><rect x="26.0849%" y="853" width="13.0495%" height="15" fill="rgb(221,39,39)"/><text x="26.3349%" y="863.50">tokio::park::thread:..</text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (36 samples, 0.08%)</title><rect x="39.0501%" y="837" width="0.0843%" height="15" fill="rgb(222,119,46)"/><text x="39.3001%" y="847.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (36 samples, 0.08%)</title><rect x="39.0501%" y="821" width="0.0843%" height="15" fill="rgb(222,165,49)"/><text x="39.3001%" y="831.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (36 samples, 0.08%)</title><rect x="39.0501%" y="805" width="0.0843%" height="15" fill="rgb(219,113,52)"/><text x="39.3001%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (32 samples, 0.07%)</title><rect x="39.0595%" y="789" width="0.0749%" height="15" fill="rgb(214,7,15)"/><text x="39.3095%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (32 samples, 0.07%)</title><rect x="39.0595%" y="773" width="0.0749%" height="15" fill="rgb(235,32,4)"/><text x="39.3095%" y="783.50"></text></g><g><title>tokio::coop::Budget::initial (26 samples, 0.06%)</title><rect x="39.1344%" y="917" width="0.0609%" height="15" fill="rgb(238,90,54)"/><text x="39.3844%" y="927.50"></text></g><g><title>tokio::coop::CURRENT::__getit (11 samples, 0.03%)</title><rect x="39.1953%" y="869" width="0.0257%" height="15" fill="rgb(213,208,19)"/><text x="39.4453%" y="879.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (11 samples, 0.03%)</title><rect x="39.1953%" y="853" width="0.0257%" height="15" fill="rgb(233,156,4)"/><text x="39.4453%" y="863.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (10 samples, 0.02%)</title><rect x="39.1976%" y="837" width="0.0234%" height="15" fill="rgb(207,194,5)"/><text x="39.4476%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (10 samples, 0.02%)</title><rect x="39.1976%" y="821" width="0.0234%" height="15" fill="rgb(206,111,30)"/><text x="39.4476%" y="831.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (8 samples, 0.02%)</title><rect x="39.2280%" y="853" width="0.0187%" height="15" fill="rgb(243,70,54)"/><text x="39.4780%" y="863.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (8 samples, 0.02%)</title><rect x="39.2280%" y="837" width="0.0187%" height="15" fill="rgb(242,28,8)"/><text x="39.4780%" y="847.50"></text></g><g><title>core::mem::replace (8 samples, 0.02%)</title><rect x="39.2280%" y="821" width="0.0187%" height="15" fill="rgb(219,106,18)"/><text x="39.4780%" y="831.50"></text></g><g><title>core::mem::swap (8 samples, 0.02%)</title><rect x="39.2280%" y="805" width="0.0187%" height="15" fill="rgb(244,222,10)"/><text x="39.4780%" y="815.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (8 samples, 0.02%)</title><rect x="39.2280%" y="789" width="0.0187%" height="15" fill="rgb(236,179,52)"/><text x="39.4780%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.02%)</title><rect x="39.2280%" y="773" width="0.0187%" height="15" fill="rgb(213,23,39)"/><text x="39.4780%" y="783.50"></text></g><g><title>std::panic::catch_unwind (5,744 samples, 13.45%)</title><rect x="25.8111%" y="1125" width="13.4451%" height="15" fill="rgb(238,48,10)"/><text x="26.0611%" y="1135.50">std::panic::catch_un..</text></g><g><title>std::panicking::try (5,744 samples, 13.45%)</title><rect x="25.8111%" y="1109" width="13.4451%" height="15" fill="rgb(251,196,23)"/><text x="26.0611%" y="1119.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (5,744 samples, 13.45%)</title><rect x="25.8111%" y="1093" width="13.4451%" height="15" fill="rgb(250,152,24)"/><text x="26.0611%" y="1103.50">std::panicking::try:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (5,744 samples, 13.45%)</title><rect x="25.8111%" y="1077" width="13.4451%" height="15" fill="rgb(209,150,17)"/><text x="26.0611%" y="1087.50">core::ops::function:..</text></g><g><title>std::rt::lang_start::{{closure}} (5,744 samples, 13.45%)</title><rect x="25.8111%" y="1061" width="13.4451%" height="15" fill="rgb(234,202,34)"/><text x="26.0611%" y="1071.50">std::rt::lang_start:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5,744 samples, 13.45%)</title><rect x="25.8111%" y="1045" width="13.4451%" height="15" fill="rgb(253,148,53)"/><text x="26.0611%" y="1055.50">std::sys_common::bac..</text></g><g><title>core::ops::function::FnOnce::call_once (5,744 samples, 13.45%)</title><rect x="25.8111%" y="1029" width="13.4451%" height="15" fill="rgb(218,129,16)"/><text x="26.0611%" y="1039.50">core::ops::function:..</text></g><g><title>rho_runtime::main (5,744 samples, 13.45%)</title><rect x="25.8111%" y="1013" width="13.4451%" height="15" fill="rgb(216,85,19)"/><text x="26.0611%" y="1023.50">rho_runtime::main</text></g><g><title>tokio::runtime::Runtime::block_on (5,744 samples, 13.45%)</title><rect x="25.8111%" y="997" width="13.4451%" height="15" fill="rgb(235,228,7)"/><text x="26.0611%" y="1007.50">tokio::runtime::Runt..</text></g><g><title>tokio::runtime::thread_pool::ThreadPool::block_on (5,744 samples, 13.45%)</title><rect x="25.8111%" y="981" width="13.4451%" height="15" fill="rgb(245,175,0)"/><text x="26.0611%" y="991.50">tokio::runtime::thre..</text></g><g><title>tokio::runtime::enter::Enter::block_on (5,744 samples, 13.45%)</title><rect x="25.8111%" y="965" width="13.4451%" height="15" fill="rgb(208,168,36)"/><text x="26.0611%" y="975.50">tokio::runtime::ente..</text></g><g><title>tokio::park::thread::CachedParkThread::block_on (5,744 samples, 13.45%)</title><rect x="25.8111%" y="949" width="13.4451%" height="15" fill="rgb(246,171,24)"/><text x="26.0611%" y="959.50">tokio::park::thread:..</text></g><g><title>tokio::coop::budget (52 samples, 0.12%)</title><rect x="39.1344%" y="933" width="0.1217%" height="15" fill="rgb(215,142,24)"/><text x="39.3844%" y="943.50"></text></g><g><title>tokio::coop::with_budget (26 samples, 0.06%)</title><rect x="39.1953%" y="917" width="0.0609%" height="15" fill="rgb(250,187,7)"/><text x="39.4453%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (26 samples, 0.06%)</title><rect x="39.1953%" y="901" width="0.0609%" height="15" fill="rgb(228,66,33)"/><text x="39.4453%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (26 samples, 0.06%)</title><rect x="39.1953%" y="885" width="0.0609%" height="15" fill="rgb(234,215,21)"/><text x="39.4453%" y="895.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (15 samples, 0.04%)</title><rect x="39.2210%" y="869" width="0.0351%" height="15" fill="rgb(222,191,20)"/><text x="39.4710%" y="879.50"></text></g><g><title>_start (5,745 samples, 13.45%)</title><rect x="25.8111%" y="1189" width="13.4474%" height="15" fill="rgb(245,79,54)"/><text x="26.0611%" y="1199.50">_start</text></g><g><title>__libc_start_main (5,745 samples, 13.45%)</title><rect x="25.8111%" y="1173" width="13.4474%" height="15" fill="rgb(240,10,37)"/><text x="26.0611%" y="1183.50">__libc_start_main</text></g><g><title>main (5,745 samples, 13.45%)</title><rect x="25.8111%" y="1157" width="13.4474%" height="15" fill="rgb(214,192,32)"/><text x="26.0611%" y="1167.50">main</text></g><g><title>std::rt::lang_start_internal (5,745 samples, 13.45%)</title><rect x="25.8111%" y="1141" width="13.4474%" height="15" fill="rgb(209,36,54)"/><text x="26.0611%" y="1151.50">std::rt::lang_start_..</text></g><g><title>anon.ff7fd81b8d6f221f67d075658d85a514.57.llvm.13947084464035088480 (9 samples, 0.02%)</title><rect x="39.2585%" y="1189" width="0.0211%" height="15" fill="rgb(220,10,11)"/><text x="39.5085%" y="1199.50"></text></g><g><title>tokio::runtime::thread_pool::worker::CURRENT::FOO::__getit (9 samples, 0.02%)</title><rect x="39.2585%" y="1173" width="0.0211%" height="15" fill="rgb(221,106,17)"/><text x="39.5085%" y="1183.50"></text></g><g><title>[unknown] (44 samples, 0.10%)</title><rect x="39.2795%" y="1173" width="0.1030%" height="15" fill="rgb(251,142,44)"/><text x="39.5295%" y="1183.50"></text></g><g><title>[unknown] (44 samples, 0.10%)</title><rect x="39.2795%" y="1157" width="0.1030%" height="15" fill="rgb(238,13,15)"/><text x="39.5295%" y="1167.50"></text></g><g><title>[unknown] (44 samples, 0.10%)</title><rect x="39.2795%" y="1141" width="0.1030%" height="15" fill="rgb(208,107,27)"/><text x="39.5295%" y="1151.50"></text></g><g><title>[unknown] (41 samples, 0.10%)</title><rect x="39.2866%" y="1125" width="0.0960%" height="15" fill="rgb(205,136,37)"/><text x="39.5366%" y="1135.50"></text></g><g><title>[unknown] (41 samples, 0.10%)</title><rect x="39.2866%" y="1109" width="0.0960%" height="15" fill="rgb(250,205,27)"/><text x="39.5366%" y="1119.50"></text></g><g><title>[unknown] (41 samples, 0.10%)</title><rect x="39.2866%" y="1093" width="0.0960%" height="15" fill="rgb(210,80,43)"/><text x="39.5366%" y="1103.50"></text></g><g><title>[unknown] (41 samples, 0.10%)</title><rect x="39.2866%" y="1077" width="0.0960%" height="15" fill="rgb(247,160,36)"/><text x="39.5366%" y="1087.50"></text></g><g><title>[unknown] (41 samples, 0.10%)</title><rect x="39.2866%" y="1061" width="0.0960%" height="15" fill="rgb(234,13,49)"/><text x="39.5366%" y="1071.50"></text></g><g><title>clone (45 samples, 0.11%)</title><rect x="39.2795%" y="1189" width="0.1053%" height="15" fill="rgb(234,122,0)"/><text x="39.5295%" y="1199.50"></text></g><g><title>rho_runtime (16,835 samples, 39.41%)</title><rect x="0.0117%" y="1205" width="39.4059%" height="15" fill="rgb(207,146,38)"/><text x="0.2617%" y="1215.50">rho_runtime</text></g><g><title>tokio::runtime::spawner::Spawner::spawn (9 samples, 0.02%)</title><rect x="39.3966%" y="1189" width="0.0211%" height="15" fill="rgb(207,177,25)"/><text x="39.6466%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="39.4808%" y="1173" width="0.0140%" height="15" fill="rgb(211,178,42)"/><text x="39.7308%" y="1183.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.01%)</title><rect x="39.4808%" y="1157" width="0.0140%" height="15" fill="rgb(230,69,54)"/><text x="39.7308%" y="1167.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.01%)</title><rect x="39.4808%" y="1141" width="0.0140%" height="15" fill="rgb(214,135,41)"/><text x="39.7308%" y="1151.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (25 samples, 0.06%)</title><rect x="39.4434%" y="1189" width="0.0585%" height="15" fill="rgb(237,67,25)"/><text x="39.6934%" y="1199.50"></text></g><g><title>[[stack]] (5 samples, 0.01%)</title><rect x="39.5113%" y="1189" width="0.0117%" height="15" fill="rgb(222,189,50)"/><text x="39.7613%" y="1199.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (26 samples, 0.06%)</title><rect x="39.6798%" y="1157" width="0.0609%" height="15" fill="rgb(245,148,34)"/><text x="39.9298%" y="1167.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (19 samples, 0.04%)</title><rect x="39.6962%" y="1141" width="0.0445%" height="15" fill="rgb(222,29,6)"/><text x="39.9462%" y="1151.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="39.7289%" y="1125" width="0.0117%" height="15" fill="rgb(221,189,43)"/><text x="39.9789%" y="1135.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (111 samples, 0.26%)</title><rect x="39.5230%" y="1173" width="0.2598%" height="15" fill="rgb(207,36,27)"/><text x="39.7730%" y="1183.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (13 samples, 0.03%)</title><rect x="39.7524%" y="1157" width="0.0304%" height="15" fill="rgb(217,90,24)"/><text x="40.0024%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (10 samples, 0.02%)</title><rect x="39.8811%" y="1157" width="0.0234%" height="15" fill="rgb(224,66,35)"/><text x="40.1311%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (59 samples, 0.14%)</title><rect x="39.7828%" y="1173" width="0.1381%" height="15" fill="rgb(221,13,50)"/><text x="40.0328%" y="1183.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.02%)</title><rect x="39.9045%" y="1157" width="0.0164%" height="15" fill="rgb(236,68,49)"/><text x="40.1545%" y="1167.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.02%)</title><rect x="39.9045%" y="1141" width="0.0164%" height="15" fill="rgb(229,146,28)"/><text x="40.1545%" y="1151.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.02%)</title><rect x="39.9045%" y="1125" width="0.0164%" height="15" fill="rgb(225,31,38)"/><text x="40.1545%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (5 samples, 0.01%)</title><rect x="40.0637%" y="1141" width="0.0117%" height="15" fill="rgb(250,208,3)"/><text x="40.3137%" y="1151.50"></text></g><g><title>core::ptr::read (5 samples, 0.01%)</title><rect x="40.0637%" y="1125" width="0.0117%" height="15" fill="rgb(246,54,23)"/><text x="40.3137%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (7 samples, 0.02%)</title><rect x="40.0754%" y="1141" width="0.0164%" height="15" fill="rgb(243,76,11)"/><text x="40.3254%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (7 samples, 0.02%)</title><rect x="40.0754%" y="1125" width="0.0164%" height="15" fill="rgb(245,21,50)"/><text x="40.3254%" y="1135.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression::{{closure}} (31 samples, 0.07%)</title><rect x="40.0332%" y="1157" width="0.0726%" height="15" fill="rgb(228,9,43)"/><text x="40.2832%" y="1167.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (6 samples, 0.01%)</title><rect x="40.0918%" y="1141" width="0.0140%" height="15" fill="rgb(208,100,47)"/><text x="40.3418%" y="1151.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (6 samples, 0.01%)</title><rect x="40.0918%" y="1125" width="0.0140%" height="15" fill="rgb(232,26,8)"/><text x="40.3418%" y="1135.50"></text></g><g><title>alloc::alloc::exchange_malloc (5 samples, 0.01%)</title><rect x="40.0941%" y="1109" width="0.0117%" height="15" fill="rgb(216,166,38)"/><text x="40.3441%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.01%)</title><rect x="40.0941%" y="1093" width="0.0117%" height="15" fill="rgb(251,202,51)"/><text x="40.3441%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.01%)</title><rect x="40.0941%" y="1077" width="0.0117%" height="15" fill="rgb(254,216,34)"/><text x="40.3441%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.01%)</title><rect x="40.0941%" y="1061" width="0.0117%" height="15" fill="rgb(251,32,27)"/><text x="40.3441%" y="1071.50"></text></g><g><title>&lt;rho_runtime::storage::coordinator::AsyncStore as rho_runtime::storage::Storage&gt;::produce::{{closure}} (7 samples, 0.02%)</title><rect x="40.1058%" y="1157" width="0.0164%" height="15" fill="rgb(208,127,28)"/><text x="40.3558%" y="1167.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::eval_eplus::&lt;impl rho_runtime::interpreter::reduce::eval_expression::AsyncExprInstanceEvaluator&lt;S&gt; for model::rho_types::EPlus&gt;::evaluate::{{closure}} (12 samples, 0.03%)</title><rect x="40.1315%" y="1157" width="0.0281%" height="15" fill="rgb(224,137,22)"/><text x="40.3815%" y="1167.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate::{{closure}} (33 samples, 0.08%)</title><rect x="40.1596%" y="1157" width="0.0772%" height="15" fill="rgb(254,70,32)"/><text x="40.4096%" y="1167.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_match::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Match&gt;::evaluate::{{closure}} (9 samples, 0.02%)</title><rect x="40.2369%" y="1157" width="0.0211%" height="15" fill="rgb(229,75,37)"/><text x="40.4869%" y="1167.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate::{{closure}} (11 samples, 0.03%)</title><rect x="40.2579%" y="1157" width="0.0257%" height="15" fill="rgb(252,64,23)"/><text x="40.5079%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (7 samples, 0.02%)</title><rect x="40.3165%" y="1141" width="0.0164%" height="15" fill="rgb(232,162,48)"/><text x="40.5665%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (7 samples, 0.02%)</title><rect x="40.3165%" y="1125" width="0.0164%" height="15" fill="rgb(246,160,12)"/><text x="40.5665%" y="1135.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_send::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Send&gt;::evaluate::{{closure}} (22 samples, 0.05%)</title><rect x="40.2837%" y="1157" width="0.0515%" height="15" fill="rgb(247,166,0)"/><text x="40.5337%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (180 samples, 0.42%)</title><rect x="39.9209%" y="1173" width="0.4213%" height="15" fill="rgb(249,219,21)"/><text x="40.1709%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.03%)</title><rect x="40.4312%" y="1157" width="0.0328%" height="15" fill="rgb(205,209,3)"/><text x="40.6812%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14 samples, 0.03%)</title><rect x="40.4312%" y="1141" width="0.0328%" height="15" fill="rgb(243,44,1)"/><text x="40.6812%" y="1151.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.03%)</title><rect x="40.4312%" y="1125" width="0.0328%" height="15" fill="rgb(206,159,16)"/><text x="40.6812%" y="1135.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (56 samples, 0.13%)</title><rect x="40.3446%" y="1173" width="0.1311%" height="15" fill="rgb(244,77,30)"/><text x="40.5946%" y="1183.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="40.4639%" y="1157" width="0.0117%" height="15" fill="rgb(218,69,12)"/><text x="40.7139%" y="1167.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="40.4639%" y="1141" width="0.0117%" height="15" fill="rgb(212,87,7)"/><text x="40.7139%" y="1151.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="40.4639%" y="1125" width="0.0117%" height="15" fill="rgb(245,114,25)"/><text x="40.7139%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="40.4639%" y="1109" width="0.0117%" height="15" fill="rgb(210,61,42)"/><text x="40.7139%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.01%)</title><rect x="40.4639%" y="1093" width="0.0117%" height="15" fill="rgb(211,52,33)"/><text x="40.7139%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.01%)</title><rect x="40.4639%" y="1077" width="0.0117%" height="15" fill="rgb(234,58,33)"/><text x="40.7139%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.01%)</title><rect x="40.4639%" y="1061" width="0.0117%" height="15" fill="rgb(220,115,36)"/><text x="40.7139%" y="1071.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash::traverse (5 samples, 0.01%)</title><rect x="40.4756%" y="1173" width="0.0117%" height="15" fill="rgb(243,153,54)"/><text x="40.7256%" y="1183.50"></text></g><g><title>&lt;rho_runtime::storage::TaggedContinuation as core::clone::Clone&gt;::clone (11 samples, 0.03%)</title><rect x="40.4873%" y="1173" width="0.0257%" height="15" fill="rgb(251,47,18)"/><text x="40.7373%" y="1183.50"></text></g><g><title>&lt;model::rho_types::ParWithRandom as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="40.4920%" y="1157" width="0.0211%" height="15" fill="rgb(242,102,42)"/><text x="40.7420%" y="1167.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="40.5014%" y="1141" width="0.0117%" height="15" fill="rgb(234,31,38)"/><text x="40.7514%" y="1151.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="40.5014%" y="1125" width="0.0117%" height="15" fill="rgb(221,117,51)"/><text x="40.7514%" y="1135.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (11 samples, 0.03%)</title><rect x="40.5178%" y="1173" width="0.0257%" height="15" fill="rgb(212,20,18)"/><text x="40.7678%" y="1183.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (7 samples, 0.02%)</title><rect x="40.5435%" y="1173" width="0.0164%" height="15" fill="rgb(245,133,36)"/><text x="40.7935%" y="1183.50"></text></g><g><title>tokio::runtime::park::Inner::park (5 samples, 0.01%)</title><rect x="40.5482%" y="1157" width="0.0117%" height="15" fill="rgb(212,6,19)"/><text x="40.7982%" y="1167.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.04%)</title><rect x="40.5599%" y="1173" width="0.0375%" height="15" fill="rgb(218,1,36)"/><text x="40.8099%" y="1183.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::poll_recv (13 samples, 0.03%)</title><rect x="40.5669%" y="1157" width="0.0304%" height="15" fill="rgb(246,84,54)"/><text x="40.8169%" y="1167.50"></text></g><g><title>[libc-2.31.so] (21 samples, 0.05%)</title><rect x="40.5974%" y="1173" width="0.0492%" height="15" fill="rgb(242,110,6)"/><text x="40.8474%" y="1183.50"></text></g><g><title>__rg_alloc (23 samples, 0.05%)</title><rect x="40.6512%" y="1173" width="0.0538%" height="15" fill="rgb(214,47,5)"/><text x="40.9012%" y="1183.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (23 samples, 0.05%)</title><rect x="40.6512%" y="1157" width="0.0538%" height="15" fill="rgb(218,159,25)"/><text x="40.9012%" y="1167.50"></text></g><g><title>__rg_dealloc (41 samples, 0.10%)</title><rect x="40.7050%" y="1173" width="0.0960%" height="15" fill="rgb(215,211,28)"/><text x="40.9550%" y="1183.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (39 samples, 0.09%)</title><rect x="40.7097%" y="1157" width="0.0913%" height="15" fill="rgb(238,59,32)"/><text x="40.9597%" y="1167.50"></text></g><g><title>__rust_probestack (9 samples, 0.02%)</title><rect x="40.8010%" y="1173" width="0.0211%" height="15" fill="rgb(226,82,3)"/><text x="41.0510%" y="1183.50"></text></g><g><title>_rjem_mallocx (14 samples, 0.03%)</title><rect x="40.8291%" y="1173" width="0.0328%" height="15" fill="rgb(240,164,32)"/><text x="41.0791%" y="1183.50"></text></g><g><title>_rjem_sdallocx (5 samples, 0.01%)</title><rect x="40.8619%" y="1173" width="0.0117%" height="15" fill="rgb(232,46,7)"/><text x="41.1119%" y="1183.50"></text></g><g><title>alloc::slice::merge_sort (15 samples, 0.04%)</title><rect x="40.8806%" y="1173" width="0.0351%" height="15" fill="rgb(229,129,53)"/><text x="41.1306%" y="1183.50"></text></g><g><title>blake3::Hasher::finalize (5 samples, 0.01%)</title><rect x="40.9204%" y="1173" width="0.0117%" height="15" fill="rgb(234,188,29)"/><text x="41.1704%" y="1183.50"></text></g><g><title>blake3::Hasher::update (12 samples, 0.03%)</title><rect x="40.9321%" y="1173" width="0.0281%" height="15" fill="rgb(246,141,4)"/><text x="41.1821%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (15 samples, 0.04%)</title><rect x="40.9976%" y="1173" width="0.0351%" height="15" fill="rgb(229,23,39)"/><text x="41.2476%" y="1183.50"></text></g><g><title>jemallocator::layout_to_flags (14 samples, 0.03%)</title><rect x="41.0491%" y="1173" width="0.0328%" height="15" fill="rgb(206,12,3)"/><text x="41.2991%" y="1183.50"></text></g><g><title>model::ordering::sort_par::&lt;impl model::ordering::Sortable for model::rho_types::Par&gt;::sort (15 samples, 0.04%)</title><rect x="41.0819%" y="1173" width="0.0351%" height="15" fill="rgb(252,226,20)"/><text x="41.3319%" y="1183.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by (12 samples, 0.03%)</title><rect x="41.0889%" y="1157" width="0.0281%" height="15" fill="rgb(216,123,35)"/><text x="41.3389%" y="1167.50"></text></g><g><title>model::rho_types::Par::append_expr (8 samples, 0.02%)</title><rect x="41.1193%" y="1173" width="0.0187%" height="15" fill="rgb(212,68,40)"/><text x="41.3693%" y="1183.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (8 samples, 0.02%)</title><rect x="41.1381%" y="1173" width="0.0187%" height="15" fill="rgb(254,125,32)"/><text x="41.3881%" y="1183.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute_no_sort (5 samples, 0.01%)</title><rect x="41.1802%" y="1173" width="0.0117%" height="15" fill="rgb(253,97,22)"/><text x="41.4302%" y="1183.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::substitute_expressions_in_par (15 samples, 0.04%)</title><rect x="41.1919%" y="1173" width="0.0351%" height="15" fill="rgb(241,101,14)"/><text x="41.4419%" y="1183.50"></text></g><g><title>rho_runtime::storage::transit::Transit::produce (6 samples, 0.01%)</title><rect x="41.2270%" y="1173" width="0.0140%" height="15" fill="rgb(238,103,29)"/><text x="41.4770%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.01%)</title><rect x="41.2410%" y="1173" width="0.0140%" height="15" fill="rgb(233,195,47)"/><text x="41.4910%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.01%)</title><rect x="41.2410%" y="1157" width="0.0140%" height="15" fill="rgb(246,218,30)"/><text x="41.4910%" y="1167.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (6 samples, 0.01%)</title><rect x="41.2410%" y="1141" width="0.0140%" height="15" fill="rgb(219,145,47)"/><text x="41.4910%" y="1151.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (6 samples, 0.01%)</title><rect x="41.2410%" y="1125" width="0.0140%" height="15" fill="rgb(243,12,26)"/><text x="41.4910%" y="1135.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (6 samples, 0.01%)</title><rect x="41.2410%" y="1109" width="0.0140%" height="15" fill="rgb(214,87,16)"/><text x="41.4910%" y="1119.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (6 samples, 0.01%)</title><rect x="41.2410%" y="1093" width="0.0140%" height="15" fill="rgb(208,99,42)"/><text x="41.4910%" y="1103.50"></text></g><g><title>syscall (22 samples, 0.05%)</title><rect x="41.2598%" y="1173" width="0.0515%" height="15" fill="rgb(253,99,2)"/><text x="41.5098%" y="1183.50"></text></g><g><title>[unknown] (9 samples, 0.02%)</title><rect x="41.2902%" y="1157" width="0.0211%" height="15" fill="rgb(220,168,23)"/><text x="41.5402%" y="1167.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (8 samples, 0.02%)</title><rect x="41.3206%" y="1173" width="0.0187%" height="15" fill="rgb(242,38,24)"/><text x="41.5706%" y="1183.50"></text></g><g><title>tokio::runtime::task::harness::SchedulerView&lt;S&gt;::transition_to_terminal (7 samples, 0.02%)</title><rect x="41.3230%" y="1157" width="0.0164%" height="15" fill="rgb(225,182,9)"/><text x="41.5730%" y="1167.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (6 samples, 0.01%)</title><rect x="41.3464%" y="1173" width="0.0140%" height="15" fill="rgb(243,178,37)"/><text x="41.5964%" y="1183.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (10 samples, 0.02%)</title><rect x="41.3862%" y="1173" width="0.0234%" height="15" fill="rgb(232,139,19)"/><text x="41.6362%" y="1183.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (11 samples, 0.03%)</title><rect x="41.4096%" y="1173" width="0.0257%" height="15" fill="rgb(225,201,24)"/><text x="41.6596%" y="1183.50"></text></g><g><title>[anon] (830 samples, 1.94%)</title><rect x="39.5230%" y="1189" width="1.9428%" height="15" fill="rgb(221,47,46)"/><text x="39.7730%" y="1199.50">[..</text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (9 samples, 0.02%)</title><rect x="41.4447%" y="1173" width="0.0211%" height="15" fill="rgb(249,23,13)"/><text x="41.6947%" y="1183.50"></text></g><g><title>[libc-2.31.so] (28 samples, 0.07%)</title><rect x="41.4658%" y="1189" width="0.0655%" height="15" fill="rgb(219,9,5)"/><text x="41.7158%" y="1199.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (59 samples, 0.14%)</title><rect x="41.6577%" y="1173" width="0.1381%" height="15" fill="rgb(254,171,16)"/><text x="41.9077%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (55 samples, 0.13%)</title><rect x="41.7958%" y="1173" width="0.1287%" height="15" fill="rgb(230,171,20)"/><text x="42.0458%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.01%)</title><rect x="41.9128%" y="1157" width="0.0117%" height="15" fill="rgb(210,71,41)"/><text x="42.1628%" y="1167.50"></text></g><g><title>[libc-2.31.so] (65 samples, 0.15%)</title><rect x="42.2124%" y="1045" width="0.1521%" height="15" fill="rgb(206,173,20)"/><text x="42.4624%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (18 samples, 0.04%)</title><rect x="42.3646%" y="1045" width="0.0421%" height="15" fill="rgb(233,88,34)"/><text x="42.6146%" y="1055.50"></text></g><g><title>core::ptr::read (18 samples, 0.04%)</title><rect x="42.3646%" y="1029" width="0.0421%" height="15" fill="rgb(223,209,46)"/><text x="42.6146%" y="1039.50"></text></g><g><title>[libc-2.31.so] (18 samples, 0.04%)</title><rect x="42.3646%" y="1013" width="0.0421%" height="15" fill="rgb(250,43,18)"/><text x="42.6146%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (17 samples, 0.04%)</title><rect x="42.4067%" y="1045" width="0.0398%" height="15" fill="rgb(208,13,10)"/><text x="42.6567%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (17 samples, 0.04%)</title><rect x="42.4067%" y="1029" width="0.0398%" height="15" fill="rgb(212,200,36)"/><text x="42.6567%" y="1039.50"></text></g><g><title>alloc::alloc::box_free (17 samples, 0.04%)</title><rect x="42.4067%" y="1013" width="0.0398%" height="15" fill="rgb(225,90,30)"/><text x="42.6567%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.04%)</title><rect x="42.4091%" y="997" width="0.0375%" height="15" fill="rgb(236,182,39)"/><text x="42.6591%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.04%)</title><rect x="42.4091%" y="981" width="0.0375%" height="15" fill="rgb(212,144,35)"/><text x="42.6591%" y="991.50"></text></g><g><title>_rjem_sdallocx (12 samples, 0.03%)</title><rect x="42.4184%" y="965" width="0.0281%" height="15" fill="rgb(228,63,44)"/><text x="42.6684%" y="975.50"></text></g><g><title>isfree (8 samples, 0.02%)</title><rect x="42.4278%" y="949" width="0.0187%" height="15" fill="rgb(228,109,6)"/><text x="42.6778%" y="959.50"></text></g><g><title>isdalloct (8 samples, 0.02%)</title><rect x="42.4278%" y="933" width="0.0187%" height="15" fill="rgb(238,117,24)"/><text x="42.6778%" y="943.50"></text></g><g><title>arena_sdalloc (8 samples, 0.02%)</title><rect x="42.4278%" y="917" width="0.0187%" height="15" fill="rgb(242,26,26)"/><text x="42.6778%" y="927.50"></text></g><g><title>tcache_dalloc_small (8 samples, 0.02%)</title><rect x="42.4278%" y="901" width="0.0187%" height="15" fill="rgb(221,92,48)"/><text x="42.6778%" y="911.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.02%)</title><rect x="42.4512%" y="1013" width="0.0211%" height="15" fill="rgb(209,209,32)"/><text x="42.7012%" y="1023.50"></text></g><g><title>imalloc_no_sample (6 samples, 0.01%)</title><rect x="42.4910%" y="901" width="0.0140%" height="15" fill="rgb(221,70,22)"/><text x="42.7410%" y="911.50"></text></g><g><title>imalloc_body (9 samples, 0.02%)</title><rect x="42.4886%" y="917" width="0.0211%" height="15" fill="rgb(248,145,5)"/><text x="42.7386%" y="927.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression::{{closure}} (151 samples, 0.35%)</title><rect x="42.1586%" y="1061" width="0.3534%" height="15" fill="rgb(226,116,26)"/><text x="42.4086%" y="1071.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (28 samples, 0.07%)</title><rect x="42.4465%" y="1045" width="0.0655%" height="15" fill="rgb(244,5,17)"/><text x="42.6965%" y="1055.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (28 samples, 0.07%)</title><rect x="42.4465%" y="1029" width="0.0655%" height="15" fill="rgb(252,159,33)"/><text x="42.6965%" y="1039.50"></text></g><g><title>alloc::alloc::exchange_malloc (17 samples, 0.04%)</title><rect x="42.4723%" y="1013" width="0.0398%" height="15" fill="rgb(206,71,0)"/><text x="42.7223%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.04%)</title><rect x="42.4723%" y="997" width="0.0398%" height="15" fill="rgb(233,118,54)"/><text x="42.7223%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.04%)</title><rect x="42.4723%" y="981" width="0.0398%" height="15" fill="rgb(234,83,48)"/><text x="42.7223%" y="991.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.04%)</title><rect x="42.4723%" y="965" width="0.0398%" height="15" fill="rgb(228,3,54)"/><text x="42.7223%" y="975.50"></text></g><g><title>_rjem_mallocx (12 samples, 0.03%)</title><rect x="42.4840%" y="949" width="0.0281%" height="15" fill="rgb(226,155,13)"/><text x="42.7340%" y="959.50"></text></g><g><title>imalloc (10 samples, 0.02%)</title><rect x="42.4886%" y="933" width="0.0234%" height="15" fill="rgb(241,28,37)"/><text x="42.7386%" y="943.50"></text></g><g><title>[libc-2.31.so] (33 samples, 0.08%)</title><rect x="42.5121%" y="1061" width="0.0772%" height="15" fill="rgb(233,93,10)"/><text x="42.7621%" y="1071.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (18 samples, 0.04%)</title><rect x="42.6361%" y="1045" width="0.0421%" height="15" fill="rgb(225,113,19)"/><text x="42.8861%" y="1055.50"></text></g><g><title>[libc-2.31.so] (17 samples, 0.04%)</title><rect x="42.6385%" y="1029" width="0.0398%" height="15" fill="rgb(241,2,18)"/><text x="42.8885%" y="1039.50"></text></g><g><title>[libc-2.31.so] (29 samples, 0.07%)</title><rect x="42.6923%" y="1013" width="0.0679%" height="15" fill="rgb(228,207,21)"/><text x="42.9423%" y="1023.50"></text></g><g><title>imalloc_no_sample (20 samples, 0.05%)</title><rect x="42.7929%" y="901" width="0.0468%" height="15" fill="rgb(213,211,35)"/><text x="43.0429%" y="911.50"></text></g><g><title>iallocztm (19 samples, 0.04%)</title><rect x="42.7953%" y="885" width="0.0445%" height="15" fill="rgb(209,83,10)"/><text x="43.0453%" y="895.50"></text></g><g><title>arena_malloc (19 samples, 0.04%)</title><rect x="42.7953%" y="869" width="0.0445%" height="15" fill="rgb(209,164,1)"/><text x="43.0453%" y="879.50"></text></g><g><title>tcache_alloc_small (16 samples, 0.04%)</title><rect x="42.8023%" y="853" width="0.0375%" height="15" fill="rgb(213,184,43)"/><text x="43.0523%" y="863.50"></text></g><g><title>cache_bin_alloc_easy (13 samples, 0.03%)</title><rect x="42.8093%" y="837" width="0.0304%" height="15" fill="rgb(231,61,34)"/><text x="43.0593%" y="847.50"></text></g><g><title>imalloc_body (22 samples, 0.05%)</title><rect x="42.7906%" y="917" width="0.0515%" height="15" fill="rgb(235,75,3)"/><text x="43.0406%" y="927.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (71 samples, 0.17%)</title><rect x="42.6782%" y="1045" width="0.1662%" height="15" fill="rgb(220,106,47)"/><text x="42.9282%" y="1055.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (71 samples, 0.17%)</title><rect x="42.6782%" y="1029" width="0.1662%" height="15" fill="rgb(210,196,33)"/><text x="42.9282%" y="1039.50"></text></g><g><title>alloc::alloc::exchange_malloc (36 samples, 0.08%)</title><rect x="42.7602%" y="1013" width="0.0843%" height="15" fill="rgb(229,154,42)"/><text x="43.0102%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (36 samples, 0.08%)</title><rect x="42.7602%" y="997" width="0.0843%" height="15" fill="rgb(228,114,26)"/><text x="43.0102%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (36 samples, 0.08%)</title><rect x="42.7602%" y="981" width="0.0843%" height="15" fill="rgb(208,144,1)"/><text x="43.0102%" y="991.50"></text></g><g><title>alloc::alloc::alloc (36 samples, 0.08%)</title><rect x="42.7602%" y="965" width="0.0843%" height="15" fill="rgb(239,112,37)"/><text x="43.0102%" y="975.50"></text></g><g><title>_rjem_mallocx (30 samples, 0.07%)</title><rect x="42.7742%" y="949" width="0.0702%" height="15" fill="rgb(210,96,50)"/><text x="43.0242%" y="959.50"></text></g><g><title>imalloc (23 samples, 0.05%)</title><rect x="42.7906%" y="933" width="0.0538%" height="15" fill="rgb(222,178,2)"/><text x="43.0406%" y="943.50"></text></g><g><title>[libc-2.31.so] (91 samples, 0.21%)</title><rect x="42.8444%" y="1045" width="0.2130%" height="15" fill="rgb(226,74,18)"/><text x="43.0944%" y="1055.50"></text></g><g><title>isfree (11 samples, 0.03%)</title><rect x="43.0762%" y="949" width="0.0257%" height="15" fill="rgb(225,67,54)"/><text x="43.3262%" y="959.50"></text></g><g><title>isdalloct (11 samples, 0.03%)</title><rect x="43.0762%" y="933" width="0.0257%" height="15" fill="rgb(251,92,32)"/><text x="43.3262%" y="943.50"></text></g><g><title>arena_sdalloc (11 samples, 0.03%)</title><rect x="43.0762%" y="917" width="0.0257%" height="15" fill="rgb(228,149,22)"/><text x="43.3262%" y="927.50"></text></g><g><title>tcache_dalloc_small (8 samples, 0.02%)</title><rect x="43.0832%" y="901" width="0.0187%" height="15" fill="rgb(243,54,13)"/><text x="43.3332%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;model::rho_types::Expr,model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (20 samples, 0.05%)</title><rect x="43.0574%" y="1045" width="0.0468%" height="15" fill="rgb(243,180,28)"/><text x="43.3074%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;model::rho_types::Expr,model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (20 samples, 0.05%)</title><rect x="43.0574%" y="1029" width="0.0468%" height="15" fill="rgb(208,167,24)"/><text x="43.3074%" y="1039.50"></text></g><g><title>alloc::alloc::box_free (20 samples, 0.05%)</title><rect x="43.0574%" y="1013" width="0.0468%" height="15" fill="rgb(245,73,45)"/><text x="43.3074%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.05%)</title><rect x="43.0574%" y="997" width="0.0468%" height="15" fill="rgb(237,203,48)"/><text x="43.3074%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.05%)</title><rect x="43.0574%" y="981" width="0.0468%" height="15" fill="rgb(211,197,16)"/><text x="43.3074%" y="991.50"></text></g><g><title>_rjem_sdallocx (17 samples, 0.04%)</title><rect x="43.0645%" y="965" width="0.0398%" height="15" fill="rgb(243,99,51)"/><text x="43.3145%" y="975.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (408 samples, 0.96%)</title><rect x="42.1539%" y="1093" width="0.9550%" height="15" fill="rgb(215,123,29)"/><text x="42.4039%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (406 samples, 0.95%)</title><rect x="42.1586%" y="1077" width="0.9503%" height="15" fill="rgb(239,186,37)"/><text x="42.4086%" y="1087.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::eval_eplus::&lt;impl rho_runtime::interpreter::reduce::eval_expression::AsyncExprInstanceEvaluator&lt;S&gt; for model::rho_types::EPlus&gt;::evaluate::{{closure}} (222 samples, 0.52%)</title><rect x="42.5893%" y="1061" width="0.5196%" height="15" fill="rgb(252,136,39)"/><text x="42.8393%" y="1071.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (39 samples, 0.09%)</title><rect x="43.1089%" y="1093" width="0.0913%" height="15" fill="rgb(223,213,32)"/><text x="43.3589%" y="1103.50"></text></g><g><title>[libc-2.31.so] (35 samples, 0.08%)</title><rect x="43.1183%" y="1077" width="0.0819%" height="15" fill="rgb(233,115,5)"/><text x="43.3683%" y="1087.50"></text></g><g><title>[libc-2.31.so] (30 samples, 0.07%)</title><rect x="43.2166%" y="1061" width="0.0702%" height="15" fill="rgb(207,226,44)"/><text x="43.4666%" y="1071.50"></text></g><g><title>imalloc_no_sample (7 samples, 0.02%)</title><rect x="43.3056%" y="949" width="0.0164%" height="15" fill="rgb(208,126,0)"/><text x="43.5556%" y="959.50"></text></g><g><title>iallocztm (5 samples, 0.01%)</title><rect x="43.3102%" y="933" width="0.0117%" height="15" fill="rgb(244,66,21)"/><text x="43.5602%" y="943.50"></text></g><g><title>arena_malloc (5 samples, 0.01%)</title><rect x="43.3102%" y="917" width="0.0117%" height="15" fill="rgb(222,97,12)"/><text x="43.5602%" y="927.50"></text></g><g><title>tcache_alloc_small (5 samples, 0.01%)</title><rect x="43.3102%" y="901" width="0.0117%" height="15" fill="rgb(219,213,19)"/><text x="43.5602%" y="911.50"></text></g><g><title>cache_bin_alloc_easy (5 samples, 0.01%)</title><rect x="43.3102%" y="885" width="0.0117%" height="15" fill="rgb(252,169,30)"/><text x="43.5602%" y="895.50"></text></g><g><title>imalloc_body (8 samples, 0.02%)</title><rect x="43.3056%" y="965" width="0.0187%" height="15" fill="rgb(206,32,51)"/><text x="43.5556%" y="975.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (54 samples, 0.13%)</title><rect x="43.2002%" y="1093" width="0.1264%" height="15" fill="rgb(250,172,42)"/><text x="43.4502%" y="1103.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (54 samples, 0.13%)</title><rect x="43.2002%" y="1077" width="0.1264%" height="15" fill="rgb(209,34,43)"/><text x="43.4502%" y="1087.50"></text></g><g><title>alloc::alloc::exchange_malloc (17 samples, 0.04%)</title><rect x="43.2868%" y="1061" width="0.0398%" height="15" fill="rgb(223,11,35)"/><text x="43.5368%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.04%)</title><rect x="43.2868%" y="1045" width="0.0398%" height="15" fill="rgb(251,219,26)"/><text x="43.5368%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.04%)</title><rect x="43.2868%" y="1029" width="0.0398%" height="15" fill="rgb(231,119,3)"/><text x="43.5368%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.04%)</title><rect x="43.2868%" y="1013" width="0.0398%" height="15" fill="rgb(216,97,11)"/><text x="43.5368%" y="1023.50"></text></g><g><title>_rjem_mallocx (12 samples, 0.03%)</title><rect x="43.2985%" y="997" width="0.0281%" height="15" fill="rgb(223,59,9)"/><text x="43.5485%" y="1007.50"></text></g><g><title>imalloc (9 samples, 0.02%)</title><rect x="43.3056%" y="981" width="0.0211%" height="15" fill="rgb(233,93,31)"/><text x="43.5556%" y="991.50"></text></g><g><title>[libc-2.31.so] (74 samples, 0.17%)</title><rect x="43.3266%" y="1093" width="0.1732%" height="15" fill="rgb(239,81,33)"/><text x="43.5766%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Connective&gt;&gt; (6 samples, 0.01%)</title><rect x="43.5069%" y="1061" width="0.0140%" height="15" fill="rgb(213,120,34)"/><text x="43.7569%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (12 samples, 0.03%)</title><rect x="43.5209%" y="1061" width="0.0281%" height="15" fill="rgb(243,49,53)"/><text x="43.7709%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (11 samples, 0.03%)</title><rect x="43.5232%" y="1045" width="0.0257%" height="15" fill="rgb(247,216,33)"/><text x="43.7732%" y="1055.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.03%)</title><rect x="43.5232%" y="1029" width="0.0257%" height="15" fill="rgb(226,26,14)"/><text x="43.7732%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.03%)</title><rect x="43.5232%" y="1013" width="0.0257%" height="15" fill="rgb(215,49,53)"/><text x="43.7732%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.03%)</title><rect x="43.5232%" y="997" width="0.0257%" height="15" fill="rgb(245,162,40)"/><text x="43.7732%" y="1007.50"></text></g><g><title>_rjem_sdallocx (10 samples, 0.02%)</title><rect x="43.5256%" y="981" width="0.0234%" height="15" fill="rgb(229,68,17)"/><text x="43.7756%" y="991.50"></text></g><g><title>isfree (8 samples, 0.02%)</title><rect x="43.5303%" y="965" width="0.0187%" height="15" fill="rgb(213,182,10)"/><text x="43.7803%" y="975.50"></text></g><g><title>isdalloct (8 samples, 0.02%)</title><rect x="43.5303%" y="949" width="0.0187%" height="15" fill="rgb(245,125,30)"/><text x="43.7803%" y="959.50"></text></g><g><title>arena_sdalloc (8 samples, 0.02%)</title><rect x="43.5303%" y="933" width="0.0187%" height="15" fill="rgb(232,202,2)"/><text x="43.7803%" y="943.50"></text></g><g><title>tcache_dalloc_small (5 samples, 0.01%)</title><rect x="43.5373%" y="917" width="0.0117%" height="15" fill="rgb(237,140,51)"/><text x="43.7873%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (28 samples, 0.07%)</title><rect x="43.4998%" y="1077" width="0.0655%" height="15" fill="rgb(236,157,25)"/><text x="43.7498%" y="1087.50"></text></g><g><title>_rjem_sdallocx (9 samples, 0.02%)</title><rect x="43.5794%" y="1029" width="0.0211%" height="15" fill="rgb(219,209,0)"/><text x="43.8294%" y="1039.50"></text></g><g><title>isfree (6 samples, 0.01%)</title><rect x="43.5864%" y="1013" width="0.0140%" height="15" fill="rgb(240,116,54)"/><text x="43.8364%" y="1023.50"></text></g><g><title>isdalloct (6 samples, 0.01%)</title><rect x="43.5864%" y="997" width="0.0140%" height="15" fill="rgb(216,10,36)"/><text x="43.8364%" y="1007.50"></text></g><g><title>arena_sdalloc (6 samples, 0.01%)</title><rect x="43.5864%" y="981" width="0.0140%" height="15" fill="rgb(222,72,44)"/><text x="43.8364%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (14 samples, 0.03%)</title><rect x="43.6075%" y="1013" width="0.0328%" height="15" fill="rgb(232,159,9)"/><text x="43.8575%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (13 samples, 0.03%)</title><rect x="43.6098%" y="997" width="0.0304%" height="15" fill="rgb(210,39,32)"/><text x="43.8598%" y="1007.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.03%)</title><rect x="43.6098%" y="981" width="0.0304%" height="15" fill="rgb(216,194,45)"/><text x="43.8598%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.03%)</title><rect x="43.6098%" y="965" width="0.0304%" height="15" fill="rgb(218,18,35)"/><text x="43.8598%" y="975.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.03%)</title><rect x="43.6122%" y="949" width="0.0281%" height="15" fill="rgb(207,83,51)"/><text x="43.8622%" y="959.50"></text></g><g><title>_rjem_sdallocx (11 samples, 0.03%)</title><rect x="43.6145%" y="933" width="0.0257%" height="15" fill="rgb(225,63,43)"/><text x="43.8645%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::ELt&gt; (35 samples, 0.08%)</title><rect x="43.5724%" y="1061" width="0.0819%" height="15" fill="rgb(207,57,36)"/><text x="43.8224%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::Par&gt;&gt; (35 samples, 0.08%)</title><rect x="43.5724%" y="1045" width="0.0819%" height="15" fill="rgb(216,99,33)"/><text x="43.8224%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (23 samples, 0.05%)</title><rect x="43.6005%" y="1029" width="0.0538%" height="15" fill="rgb(225,42,16)"/><text x="43.8505%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (5 samples, 0.01%)</title><rect x="43.6613%" y="1013" width="0.0117%" height="15" fill="rgb(220,201,45)"/><text x="43.9113%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (5 samples, 0.01%)</title><rect x="43.6613%" y="997" width="0.0117%" height="15" fill="rgb(225,33,4)"/><text x="43.9113%" y="1007.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="43.6613%" y="981" width="0.0117%" height="15" fill="rgb(224,33,50)"/><text x="43.9113%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.01%)</title><rect x="43.6613%" y="965" width="0.0117%" height="15" fill="rgb(246,198,51)"/><text x="43.9113%" y="975.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.01%)</title><rect x="43.6613%" y="949" width="0.0117%" height="15" fill="rgb(205,22,4)"/><text x="43.9113%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::expr::ExprInstance&gt;&gt; (79 samples, 0.18%)</title><rect x="43.4998%" y="1093" width="0.1849%" height="15" fill="rgb(206,3,8)"/><text x="43.7498%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::expr::ExprInstance&gt; (51 samples, 0.12%)</title><rect x="43.5654%" y="1077" width="0.1194%" height="15" fill="rgb(251,23,15)"/><text x="43.8154%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::EPlus&gt; (13 samples, 0.03%)</title><rect x="43.6543%" y="1061" width="0.0304%" height="15" fill="rgb(252,88,28)"/><text x="43.9043%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::Par&gt;&gt; (13 samples, 0.03%)</title><rect x="43.6543%" y="1045" width="0.0304%" height="15" fill="rgb(212,127,14)"/><text x="43.9043%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (11 samples, 0.03%)</title><rect x="43.6590%" y="1029" width="0.0257%" height="15" fill="rgb(247,145,37)"/><text x="43.9090%" y="1039.50"></text></g><g><title>__rg_dealloc (5 samples, 0.01%)</title><rect x="43.6848%" y="1013" width="0.0117%" height="15" fill="rgb(209,117,53)"/><text x="43.9348%" y="1023.50"></text></g><g><title>isfree (20 samples, 0.05%)</title><rect x="43.7105%" y="997" width="0.0468%" height="15" fill="rgb(212,90,42)"/><text x="43.9605%" y="1007.50"></text></g><g><title>isdalloct (20 samples, 0.05%)</title><rect x="43.7105%" y="981" width="0.0468%" height="15" fill="rgb(218,164,37)"/><text x="43.9605%" y="991.50"></text></g><g><title>arena_sdalloc (20 samples, 0.05%)</title><rect x="43.7105%" y="965" width="0.0468%" height="15" fill="rgb(246,65,34)"/><text x="43.9605%" y="975.50"></text></g><g><title>tcache_dalloc_small (14 samples, 0.03%)</title><rect x="43.7245%" y="949" width="0.0328%" height="15" fill="rgb(231,100,33)"/><text x="43.9745%" y="959.50"></text></g><g><title>alloc::alloc::box_free (32 samples, 0.07%)</title><rect x="43.6848%" y="1061" width="0.0749%" height="15" fill="rgb(228,126,14)"/><text x="43.9348%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (32 samples, 0.07%)</title><rect x="43.6848%" y="1045" width="0.0749%" height="15" fill="rgb(215,173,21)"/><text x="43.9348%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (32 samples, 0.07%)</title><rect x="43.6848%" y="1029" width="0.0749%" height="15" fill="rgb(210,6,40)"/><text x="43.9348%" y="1039.50"></text></g><g><title>_rjem_sdallocx (25 samples, 0.06%)</title><rect x="43.7011%" y="1013" width="0.0585%" height="15" fill="rgb(212,48,18)"/><text x="43.9511%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;model::rho_types::Expr,model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (33 samples, 0.08%)</title><rect x="43.6848%" y="1093" width="0.0772%" height="15" fill="rgb(230,214,11)"/><text x="43.9348%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;model::rho_types::Expr,model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (33 samples, 0.08%)</title><rect x="43.6848%" y="1077" width="0.0772%" height="15" fill="rgb(254,105,39)"/><text x="43.9348%" y="1087.50"></text></g><g><title>alloc::alloc::box_free (11 samples, 0.03%)</title><rect x="43.7620%" y="1061" width="0.0257%" height="15" fill="rgb(245,158,5)"/><text x="44.0120%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.02%)</title><rect x="43.7643%" y="1045" width="0.0234%" height="15" fill="rgb(249,208,11)"/><text x="44.0143%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.02%)</title><rect x="43.7643%" y="1029" width="0.0234%" height="15" fill="rgb(210,39,28)"/><text x="44.0143%" y="1039.50"></text></g><g><title>_rjem_sdallocx (7 samples, 0.02%)</title><rect x="43.7714%" y="1013" width="0.0164%" height="15" fill="rgb(211,56,53)"/><text x="44.0214%" y="1023.50"></text></g><g><title>isfree (6 samples, 0.01%)</title><rect x="43.7737%" y="997" width="0.0140%" height="15" fill="rgb(226,201,30)"/><text x="44.0237%" y="1007.50"></text></g><g><title>isdalloct (6 samples, 0.01%)</title><rect x="43.7737%" y="981" width="0.0140%" height="15" fill="rgb(239,101,34)"/><text x="44.0237%" y="991.50"></text></g><g><title>arena_sdalloc (6 samples, 0.01%)</title><rect x="43.7737%" y="965" width="0.0140%" height="15" fill="rgb(226,209,5)"/><text x="44.0237%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;model::rho_types::expr::ExprInstance,model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (12 samples, 0.03%)</title><rect x="43.7620%" y="1093" width="0.0281%" height="15" fill="rgb(250,105,47)"/><text x="44.0120%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;model::rho_types::expr::ExprInstance,model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (12 samples, 0.03%)</title><rect x="43.7620%" y="1077" width="0.0281%" height="15" fill="rgb(230,72,3)"/><text x="44.0120%" y="1087.50"></text></g><g><title>imalloc_body (7 samples, 0.02%)</title><rect x="43.8041%" y="965" width="0.0164%" height="15" fill="rgb(232,218,39)"/><text x="44.0541%" y="975.50"></text></g><g><title>imalloc_no_sample (7 samples, 0.02%)</title><rect x="43.8041%" y="949" width="0.0164%" height="15" fill="rgb(248,166,6)"/><text x="44.0541%" y="959.50"></text></g><g><title>iallocztm (6 samples, 0.01%)</title><rect x="43.8065%" y="933" width="0.0140%" height="15" fill="rgb(247,89,20)"/><text x="44.0565%" y="943.50"></text></g><g><title>arena_malloc (6 samples, 0.01%)</title><rect x="43.8065%" y="917" width="0.0140%" height="15" fill="rgb(248,130,54)"/><text x="44.0565%" y="927.50"></text></g><g><title>tcache_alloc_small (5 samples, 0.01%)</title><rect x="43.8088%" y="901" width="0.0117%" height="15" fill="rgb(234,196,4)"/><text x="44.0588%" y="911.50"></text></g><g><title>cache_bin_alloc_easy (5 samples, 0.01%)</title><rect x="43.8088%" y="885" width="0.0117%" height="15" fill="rgb(250,143,31)"/><text x="44.0588%" y="895.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::eval_eplus::&lt;impl rho_runtime::interpreter::reduce::eval_expression::AsyncExprInstanceEvaluator&lt;S&gt; for model::rho_types::EPlus&gt;::evaluate (14 samples, 0.03%)</title><rect x="43.7901%" y="1093" width="0.0328%" height="15" fill="rgb(211,110,34)"/><text x="44.0401%" y="1103.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (14 samples, 0.03%)</title><rect x="43.7901%" y="1077" width="0.0328%" height="15" fill="rgb(215,124,48)"/><text x="44.0401%" y="1087.50"></text></g><g><title>alloc::alloc::exchange_malloc (9 samples, 0.02%)</title><rect x="43.8018%" y="1061" width="0.0211%" height="15" fill="rgb(216,46,13)"/><text x="44.0518%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.02%)</title><rect x="43.8018%" y="1045" width="0.0211%" height="15" fill="rgb(205,184,25)"/><text x="44.0518%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.02%)</title><rect x="43.8018%" y="1029" width="0.0211%" height="15" fill="rgb(228,1,10)"/><text x="44.0518%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.02%)</title><rect x="43.8018%" y="1013" width="0.0211%" height="15" fill="rgb(213,116,27)"/><text x="44.0518%" y="1023.50"></text></g><g><title>_rjem_mallocx (8 samples, 0.02%)</title><rect x="43.8041%" y="997" width="0.0187%" height="15" fill="rgb(241,95,50)"/><text x="44.0541%" y="1007.50"></text></g><g><title>imalloc (8 samples, 0.02%)</title><rect x="43.8041%" y="981" width="0.0187%" height="15" fill="rgb(238,48,32)"/><text x="44.0541%" y="991.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (759 samples, 1.78%)</title><rect x="42.0767%" y="1141" width="1.7766%" height="15" fill="rgb(235,113,49)"/><text x="42.3267%" y="1151.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (758 samples, 1.77%)</title><rect x="42.0790%" y="1125" width="1.7743%" height="15" fill="rgb(205,127,43)"/><text x="42.3290%" y="1135.50">&lt;..</text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate::{{closure}} (757 samples, 1.77%)</title><rect x="42.0814%" y="1109" width="1.7719%" height="15" fill="rgb(250,162,2)"/><text x="42.3314%" y="1119.50">r..</text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate::{{closure}}::relop (13 samples, 0.03%)</title><rect x="43.8229%" y="1093" width="0.0304%" height="15" fill="rgb(220,13,41)"/><text x="44.0729%" y="1103.50"></text></g><g><title>core::ptr::read (17 samples, 0.04%)</title><rect x="43.8603%" y="1125" width="0.0398%" height="15" fill="rgb(249,221,25)"/><text x="44.1103%" y="1135.50"></text></g><g><title>[libc-2.31.so] (16 samples, 0.04%)</title><rect x="43.8626%" y="1109" width="0.0375%" height="15" fill="rgb(215,208,19)"/><text x="44.1126%" y="1119.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.05%)</title><rect x="43.8533%" y="1141" width="0.0492%" height="15" fill="rgb(236,175,2)"/><text x="44.1033%" y="1151.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.08%)</title><rect x="44.0803%" y="1125" width="0.0796%" height="15" fill="rgb(241,52,2)"/><text x="44.3303%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (30 samples, 0.07%)</title><rect x="44.0897%" y="1109" width="0.0702%" height="15" fill="rgb(248,140,14)"/><text x="44.3397%" y="1119.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (30 samples, 0.07%)</title><rect x="44.0897%" y="1093" width="0.0702%" height="15" fill="rgb(253,22,42)"/><text x="44.3397%" y="1103.50"></text></g><g><title>core::ptr::read (30 samples, 0.07%)</title><rect x="44.0897%" y="1077" width="0.0702%" height="15" fill="rgb(234,61,47)"/><text x="44.3397%" y="1087.50"></text></g><g><title>[libc-2.31.so] (27 samples, 0.06%)</title><rect x="44.0967%" y="1061" width="0.0632%" height="15" fill="rgb(208,226,15)"/><text x="44.3467%" y="1071.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (6 samples, 0.01%)</title><rect x="44.1599%" y="1125" width="0.0140%" height="15" fill="rgb(217,221,4)"/><text x="44.4099%" y="1135.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (6 samples, 0.01%)</title><rect x="44.1599%" y="1109" width="0.0140%" height="15" fill="rgb(212,174,34)"/><text x="44.4099%" y="1119.50"></text></g><g><title>core::ptr::write (24 samples, 0.06%)</title><rect x="44.1763%" y="1125" width="0.0562%" height="15" fill="rgb(253,83,4)"/><text x="44.4263%" y="1135.50"></text></g><g><title>[libc-2.31.so] (22 samples, 0.05%)</title><rect x="44.1810%" y="1109" width="0.0515%" height="15" fill="rgb(250,195,49)"/><text x="44.4310%" y="1119.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (144 samples, 0.34%)</title><rect x="43.9024%" y="1141" width="0.3371%" height="15" fill="rgb(241,192,25)"/><text x="44.1524%" y="1151.50"></text></g><g><title>[libc-2.31.so] (136 samples, 0.32%)</title><rect x="44.2582%" y="1125" width="0.3183%" height="15" fill="rgb(208,124,10)"/><text x="44.5082%" y="1135.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (145 samples, 0.34%)</title><rect x="44.2395%" y="1141" width="0.3394%" height="15" fill="rgb(222,33,0)"/><text x="44.4895%" y="1151.50"></text></g><g><title>[libc-2.31.so] (319 samples, 0.75%)</title><rect x="44.5789%" y="1141" width="0.7467%" height="15" fill="rgb(234,209,28)"/><text x="44.8289%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (5 samples, 0.01%)</title><rect x="45.3279%" y="1125" width="0.0117%" height="15" fill="rgb(224,11,23)"/><text x="45.5779%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (8 samples, 0.02%)</title><rect x="45.3256%" y="1141" width="0.0187%" height="15" fill="rgb(232,99,1)"/><text x="45.5756%" y="1151.50"></text></g><g><title>alloc::alloc::box_free (19 samples, 0.04%)</title><rect x="45.3513%" y="1109" width="0.0445%" height="15" fill="rgb(237,95,45)"/><text x="45.6013%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (19 samples, 0.04%)</title><rect x="45.3513%" y="1093" width="0.0445%" height="15" fill="rgb(208,109,11)"/><text x="45.6013%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.04%)</title><rect x="45.3513%" y="1077" width="0.0445%" height="15" fill="rgb(216,190,48)"/><text x="45.6013%" y="1087.50"></text></g><g><title>_rjem_sdallocx (14 samples, 0.03%)</title><rect x="45.3630%" y="1061" width="0.0328%" height="15" fill="rgb(251,171,36)"/><text x="45.6130%" y="1071.50"></text></g><g><title>isfree (10 samples, 0.02%)</title><rect x="45.3724%" y="1045" width="0.0234%" height="15" fill="rgb(230,62,22)"/><text x="45.6224%" y="1055.50"></text></g><g><title>isdalloct (10 samples, 0.02%)</title><rect x="45.3724%" y="1029" width="0.0234%" height="15" fill="rgb(225,114,35)"/><text x="45.6224%" y="1039.50"></text></g><g><title>arena_sdalloc (10 samples, 0.02%)</title><rect x="45.3724%" y="1013" width="0.0234%" height="15" fill="rgb(215,118,42)"/><text x="45.6224%" y="1023.50"></text></g><g><title>tcache_dalloc_small (7 samples, 0.02%)</title><rect x="45.3794%" y="997" width="0.0164%" height="15" fill="rgb(243,119,21)"/><text x="45.6294%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (25 samples, 0.06%)</title><rect x="45.3443%" y="1141" width="0.0585%" height="15" fill="rgb(252,177,53)"/><text x="45.5943%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (25 samples, 0.06%)</title><rect x="45.3443%" y="1125" width="0.0585%" height="15" fill="rgb(237,209,29)"/><text x="45.5943%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::IntoIter&lt;[model::rho_types::Expr: 5]&gt;&gt; (7 samples, 0.02%)</title><rect x="45.4028%" y="1141" width="0.0164%" height="15" fill="rgb(212,65,23)"/><text x="45.6528%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[model::rho_types::Expr: 5]&gt;&gt; (5 samples, 0.01%)</title><rect x="45.4075%" y="1125" width="0.0117%" height="15" fill="rgb(230,222,46)"/><text x="45.6575%" y="1135.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="45.4075%" y="1109" width="0.0117%" height="15" fill="rgb(215,135,32)"/><text x="45.6575%" y="1119.50"></text></g><g><title>&lt;model::locally_free::ExprInstanceLocallyFree as model::locally_free::HasLocallyFree&lt;model::rho_types::expr::ExprInstance&gt;&gt;::locally_free (5 samples, 0.01%)</title><rect x="45.4333%" y="1125" width="0.0117%" height="15" fill="rgb(246,101,22)"/><text x="45.6833%" y="1135.50"></text></g><g><title>[libc-2.31.so] (27 samples, 0.06%)</title><rect x="45.4450%" y="1125" width="0.0632%" height="15" fill="rgb(206,107,13)"/><text x="45.6950%" y="1135.50"></text></g><g><title>model::rho_types::Par::append_expr (60 samples, 0.14%)</title><rect x="45.4192%" y="1141" width="0.1404%" height="15" fill="rgb(250,100,44)"/><text x="45.6692%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (22 samples, 0.05%)</title><rect x="45.5082%" y="1125" width="0.0515%" height="15" fill="rgb(231,147,38)"/><text x="45.7582%" y="1135.50"></text></g><g><title>core::ptr::write (22 samples, 0.05%)</title><rect x="45.5082%" y="1109" width="0.0515%" height="15" fill="rgb(229,8,40)"/><text x="45.7582%" y="1119.50"></text></g><g><title>[libc-2.31.so] (22 samples, 0.05%)</title><rect x="45.5082%" y="1093" width="0.0515%" height="15" fill="rgb(221,135,30)"/><text x="45.7582%" y="1103.50"></text></g><g><title>[libc-2.31.so] (16 samples, 0.04%)</title><rect x="45.5667%" y="1109" width="0.0375%" height="15" fill="rgb(249,193,18)"/><text x="45.8167%" y="1119.50"></text></g><g><title>imalloc_no_sample (6 samples, 0.01%)</title><rect x="45.6275%" y="997" width="0.0140%" height="15" fill="rgb(209,133,39)"/><text x="45.8775%" y="1007.50"></text></g><g><title>iallocztm (6 samples, 0.01%)</title><rect x="45.6275%" y="981" width="0.0140%" height="15" fill="rgb(232,100,14)"/><text x="45.8775%" y="991.50"></text></g><g><title>arena_malloc (6 samples, 0.01%)</title><rect x="45.6275%" y="965" width="0.0140%" height="15" fill="rgb(224,185,1)"/><text x="45.8775%" y="975.50"></text></g><g><title>tcache_alloc_small (6 samples, 0.01%)</title><rect x="45.6275%" y="949" width="0.0140%" height="15" fill="rgb(223,139,8)"/><text x="45.8775%" y="959.50"></text></g><g><title>imalloc_body (8 samples, 0.02%)</title><rect x="45.6275%" y="1013" width="0.0187%" height="15" fill="rgb(232,213,38)"/><text x="45.8775%" y="1023.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (40 samples, 0.09%)</title><rect x="45.5597%" y="1141" width="0.0936%" height="15" fill="rgb(207,94,22)"/><text x="45.8097%" y="1151.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (40 samples, 0.09%)</title><rect x="45.5597%" y="1125" width="0.0936%" height="15" fill="rgb(219,183,54)"/><text x="45.8097%" y="1135.50"></text></g><g><title>alloc::alloc::exchange_malloc (21 samples, 0.05%)</title><rect x="45.6041%" y="1109" width="0.0492%" height="15" fill="rgb(216,185,54)"/><text x="45.8541%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.05%)</title><rect x="45.6041%" y="1093" width="0.0492%" height="15" fill="rgb(254,217,39)"/><text x="45.8541%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.05%)</title><rect x="45.6041%" y="1077" width="0.0492%" height="15" fill="rgb(240,178,23)"/><text x="45.8541%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.05%)</title><rect x="45.6041%" y="1061" width="0.0492%" height="15" fill="rgb(218,11,47)"/><text x="45.8541%" y="1071.50"></text></g><g><title>_rjem_mallocx (13 samples, 0.03%)</title><rect x="45.6229%" y="1045" width="0.0304%" height="15" fill="rgb(218,51,51)"/><text x="45.8729%" y="1055.50"></text></g><g><title>imalloc (11 samples, 0.03%)</title><rect x="45.6275%" y="1029" width="0.0257%" height="15" fill="rgb(238,126,27)"/><text x="45.8775%" y="1039.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_nested_expressions::{{closure}} (1,552 samples, 3.63%)</title><rect x="42.0252%" y="1157" width="3.6328%" height="15" fill="rgb(249,202,22)"/><text x="42.2752%" y="1167.50">&lt;mod..</text></g><g><title>[libc-2.31.so] (62 samples, 0.15%)</title><rect x="45.6650%" y="1125" width="0.1451%" height="15" fill="rgb(254,195,49)"/><text x="45.9150%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (8 samples, 0.02%)</title><rect x="45.8101%" y="1125" width="0.0187%" height="15" fill="rgb(208,123,14)"/><text x="46.0601%" y="1135.50"></text></g><g><title>__rust_probestack (8 samples, 0.02%)</title><rect x="45.8101%" y="1109" width="0.0187%" height="15" fill="rgb(224,200,8)"/><text x="46.0601%" y="1119.50"></text></g><g><title>_rjem_sdallocx (12 samples, 0.03%)</title><rect x="45.8429%" y="1077" width="0.0281%" height="15" fill="rgb(217,61,36)"/><text x="46.0929%" y="1087.50"></text></g><g><title>isfree (12 samples, 0.03%)</title><rect x="45.8429%" y="1061" width="0.0281%" height="15" fill="rgb(206,35,45)"/><text x="46.0929%" y="1071.50"></text></g><g><title>isdalloct (12 samples, 0.03%)</title><rect x="45.8429%" y="1045" width="0.0281%" height="15" fill="rgb(217,65,33)"/><text x="46.0929%" y="1055.50"></text></g><g><title>arena_sdalloc (12 samples, 0.03%)</title><rect x="45.8429%" y="1029" width="0.0281%" height="15" fill="rgb(222,158,48)"/><text x="46.0929%" y="1039.50"></text></g><g><title>tcache_dalloc_small (8 samples, 0.02%)</title><rect x="45.8523%" y="1013" width="0.0187%" height="15" fill="rgb(254,2,54)"/><text x="46.1023%" y="1023.50"></text></g><g><title>core::mem::drop (7 samples, 0.02%)</title><rect x="45.8757%" y="1061" width="0.0164%" height="15" fill="rgb(250,143,38)"/><text x="46.1257%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;tokio::sync::oneshot::Inner&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt;&gt; (7 samples, 0.02%)</title><rect x="45.8757%" y="1045" width="0.0164%" height="15" fill="rgb(248,25,0)"/><text x="46.1257%" y="1055.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="45.8757%" y="1029" width="0.0164%" height="15" fill="rgb(206,152,27)"/><text x="46.1257%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (6 samples, 0.01%)</title><rect x="45.8780%" y="1013" width="0.0140%" height="15" fill="rgb(240,77,30)"/><text x="46.1280%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_sub (6 samples, 0.01%)</title><rect x="45.8780%" y="997" width="0.0140%" height="15" fill="rgb(231,5,3)"/><text x="46.1280%" y="1007.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (17 samples, 0.04%)</title><rect x="45.8710%" y="1077" width="0.0398%" height="15" fill="rgb(207,226,32)"/><text x="46.1210%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::oneshot::Inner&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt; (8 samples, 0.02%)</title><rect x="45.8920%" y="1061" width="0.0187%" height="15" fill="rgb(222,207,47)"/><text x="46.1420%" y="1071.50"></text></g><g><title>&lt;tokio::sync::oneshot::Inner&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="45.8920%" y="1045" width="0.0187%" height="15" fill="rgb(229,115,45)"/><text x="46.1420%" y="1055.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (8 samples, 0.02%)</title><rect x="45.8920%" y="1029" width="0.0187%" height="15" fill="rgb(224,191,6)"/><text x="46.1420%" y="1039.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (8 samples, 0.02%)</title><rect x="45.8920%" y="1013" width="0.0187%" height="15" fill="rgb(230,227,24)"/><text x="46.1420%" y="1023.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (8 samples, 0.02%)</title><rect x="45.8920%" y="997" width="0.0187%" height="15" fill="rgb(228,80,19)"/><text x="46.1420%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (7 samples, 0.02%)</title><rect x="45.8944%" y="981" width="0.0164%" height="15" fill="rgb(247,229,0)"/><text x="46.1444%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_sub (7 samples, 0.02%)</title><rect x="45.8944%" y="965" width="0.0164%" height="15" fill="rgb(237,194,15)"/><text x="46.1444%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt;&gt;&gt; (57 samples, 0.13%)</title><rect x="45.8288%" y="1125" width="0.1334%" height="15" fill="rgb(219,203,20)"/><text x="46.0788%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt;&gt; (57 samples, 0.13%)</title><rect x="45.8288%" y="1109" width="0.1334%" height="15" fill="rgb(234,128,8)"/><text x="46.0788%" y="1119.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (57 samples, 0.13%)</title><rect x="45.8288%" y="1093" width="0.1334%" height="15" fill="rgb(248,202,8)"/><text x="46.0788%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (22 samples, 0.05%)</title><rect x="45.9108%" y="1077" width="0.0515%" height="15" fill="rgb(206,104,37)"/><text x="46.1608%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_sub (22 samples, 0.05%)</title><rect x="45.9108%" y="1061" width="0.0515%" height="15" fill="rgb(223,8,27)"/><text x="46.1608%" y="1071.50"></text></g><g><title>[libc-2.31.so] (44 samples, 0.10%)</title><rect x="45.9646%" y="1109" width="0.1030%" height="15" fill="rgb(216,217,28)"/><text x="46.2146%" y="1119.50"></text></g><g><title>tokio::coop::CURRENT::__getit (6 samples, 0.01%)</title><rect x="46.0676%" y="1061" width="0.0140%" height="15" fill="rgb(249,199,1)"/><text x="46.3176%" y="1071.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (6 samples, 0.01%)</title><rect x="46.0676%" y="1045" width="0.0140%" height="15" fill="rgb(240,85,17)"/><text x="46.3176%" y="1055.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (7 samples, 0.02%)</title><rect x="46.0863%" y="1045" width="0.0164%" height="15" fill="rgb(206,108,45)"/><text x="46.3363%" y="1055.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (7 samples, 0.02%)</title><rect x="46.0863%" y="1029" width="0.0164%" height="15" fill="rgb(245,210,41)"/><text x="46.3363%" y="1039.50"></text></g><g><title>core::mem::replace (7 samples, 0.02%)</title><rect x="46.0863%" y="1013" width="0.0164%" height="15" fill="rgb(206,13,37)"/><text x="46.3363%" y="1023.50"></text></g><g><title>core::mem::swap (7 samples, 0.02%)</title><rect x="46.0863%" y="997" width="0.0164%" height="15" fill="rgb(250,61,18)"/><text x="46.3363%" y="1007.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (7 samples, 0.02%)</title><rect x="46.0863%" y="981" width="0.0164%" height="15" fill="rgb(235,172,48)"/><text x="46.3363%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.02%)</title><rect x="46.0863%" y="965" width="0.0164%" height="15" fill="rgb(249,201,17)"/><text x="46.3363%" y="975.50"></text></g><g><title>tokio::coop::poll_proceed (18 samples, 0.04%)</title><rect x="46.0676%" y="1109" width="0.0421%" height="15" fill="rgb(219,208,6)"/><text x="46.3176%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (18 samples, 0.04%)</title><rect x="46.0676%" y="1093" width="0.0421%" height="15" fill="rgb(248,31,23)"/><text x="46.3176%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (18 samples, 0.04%)</title><rect x="46.0676%" y="1077" width="0.0421%" height="15" fill="rgb(245,15,42)"/><text x="46.3176%" y="1087.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (12 samples, 0.03%)</title><rect x="46.0816%" y="1061" width="0.0281%" height="15" fill="rgb(222,217,39)"/><text x="46.3316%" y="1071.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::consume_value (49 samples, 0.11%)</title><rect x="46.1097%" y="1109" width="0.1147%" height="15" fill="rgb(210,219,27)"/><text x="46.3597%" y="1119.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (49 samples, 0.11%)</title><rect x="46.1097%" y="1093" width="0.1147%" height="15" fill="rgb(252,166,36)"/><text x="46.3597%" y="1103.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::consume_value::{{closure}} (49 samples, 0.11%)</title><rect x="46.1097%" y="1077" width="0.1147%" height="15" fill="rgb(245,132,34)"/><text x="46.3597%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (49 samples, 0.11%)</title><rect x="46.1097%" y="1061" width="0.1147%" height="15" fill="rgb(236,54,3)"/><text x="46.3597%" y="1071.50"></text></g><g><title>core::mem::take (49 samples, 0.11%)</title><rect x="46.1097%" y="1045" width="0.1147%" height="15" fill="rgb(241,173,43)"/><text x="46.3597%" y="1055.50"></text></g><g><title>core::mem::replace (49 samples, 0.11%)</title><rect x="46.1097%" y="1029" width="0.1147%" height="15" fill="rgb(215,190,9)"/><text x="46.3597%" y="1039.50"></text></g><g><title>core::mem::swap (49 samples, 0.11%)</title><rect x="46.1097%" y="1013" width="0.1147%" height="15" fill="rgb(242,101,16)"/><text x="46.3597%" y="1023.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (49 samples, 0.11%)</title><rect x="46.1097%" y="997" width="0.1147%" height="15" fill="rgb(223,190,21)"/><text x="46.3597%" y="1007.50"></text></g><g><title>core::ptr::swap_nonoverlapping (49 samples, 0.11%)</title><rect x="46.1097%" y="981" width="0.1147%" height="15" fill="rgb(215,228,25)"/><text x="46.3597%" y="991.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (49 samples, 0.11%)</title><rect x="46.1097%" y="965" width="0.1147%" height="15" fill="rgb(225,36,22)"/><text x="46.3597%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (41 samples, 0.10%)</title><rect x="46.1285%" y="949" width="0.0960%" height="15" fill="rgb(251,106,46)"/><text x="46.3785%" y="959.50"></text></g><g><title>tokio::sync::oneshot::State::set_rx_task (10 samples, 0.02%)</title><rect x="46.2338%" y="1109" width="0.0234%" height="15" fill="rgb(208,90,1)"/><text x="46.4838%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (10 samples, 0.02%)</title><rect x="46.2338%" y="1093" width="0.0234%" height="15" fill="rgb(243,10,4)"/><text x="46.4838%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_or (10 samples, 0.02%)</title><rect x="46.2338%" y="1077" width="0.0234%" height="15" fill="rgb(212,137,27)"/><text x="46.4838%" y="1087.50"></text></g><g><title>&lt;rho_runtime::storage::coordinator::AsyncStore as rho_runtime::storage::Storage&gt;::produce::{{closure}} (269 samples, 0.63%)</title><rect x="45.6603%" y="1157" width="0.6297%" height="15" fill="rgb(231,220,49)"/><text x="45.9103%" y="1167.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (269 samples, 0.63%)</title><rect x="45.6603%" y="1141" width="0.6297%" height="15" fill="rgb(237,96,20)"/><text x="45.9103%" y="1151.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::poll_recv (140 samples, 0.33%)</title><rect x="45.9623%" y="1125" width="0.3277%" height="15" fill="rgb(239,229,30)"/><text x="46.2123%" y="1135.50"></text></g><g><title>tokio::sync::oneshot::Task::set_task (14 samples, 0.03%)</title><rect x="46.2572%" y="1109" width="0.0328%" height="15" fill="rgb(219,65,33)"/><text x="46.5072%" y="1119.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (14 samples, 0.03%)</title><rect x="46.2572%" y="1093" width="0.0328%" height="15" fill="rgb(243,134,7)"/><text x="46.5072%" y="1103.50"></text></g><g><title>tokio::sync::oneshot::Task::set_task::{{closure}} (14 samples, 0.03%)</title><rect x="46.2572%" y="1077" width="0.0328%" height="15" fill="rgb(216,177,54)"/><text x="46.5072%" y="1087.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (14 samples, 0.03%)</title><rect x="46.2572%" y="1061" width="0.0328%" height="15" fill="rgb(211,160,20)"/><text x="46.5072%" y="1071.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (11 samples, 0.03%)</title><rect x="46.2642%" y="1045" width="0.0257%" height="15" fill="rgb(239,85,39)"/><text x="46.5142%" y="1055.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (11 samples, 0.03%)</title><rect x="46.2642%" y="1029" width="0.0257%" height="15" fill="rgb(232,125,22)"/><text x="46.5142%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (10 samples, 0.02%)</title><rect x="46.2666%" y="1013" width="0.0234%" height="15" fill="rgb(244,57,34)"/><text x="46.5166%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_add (10 samples, 0.02%)</title><rect x="46.2666%" y="997" width="0.0234%" height="15" fill="rgb(214,203,32)"/><text x="46.5166%" y="1007.50"></text></g><g><title>[libc-2.31.so] (40 samples, 0.09%)</title><rect x="46.3532%" y="997" width="0.0936%" height="15" fill="rgb(207,58,43)"/><text x="46.6032%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (5 samples, 0.01%)</title><rect x="46.4562%" y="997" width="0.0117%" height="15" fill="rgb(215,193,15)"/><text x="46.7062%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (5 samples, 0.01%)</title><rect x="46.4562%" y="981" width="0.0117%" height="15" fill="rgb(232,15,44)"/><text x="46.7062%" y="991.50"></text></g><g><title>alloc::alloc::box_free (5 samples, 0.01%)</title><rect x="46.4562%" y="965" width="0.0117%" height="15" fill="rgb(212,3,48)"/><text x="46.7062%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.01%)</title><rect x="46.4562%" y="949" width="0.0117%" height="15" fill="rgb(218,128,7)"/><text x="46.7062%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.01%)</title><rect x="46.4562%" y="933" width="0.0117%" height="15" fill="rgb(226,216,39)"/><text x="46.7062%" y="943.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.02%)</title><rect x="46.4725%" y="965" width="0.0187%" height="15" fill="rgb(243,47,51)"/><text x="46.7225%" y="975.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression::{{closure}} (77 samples, 0.18%)</title><rect x="46.3274%" y="1013" width="0.1802%" height="15" fill="rgb(241,183,40)"/><text x="46.5774%" y="1023.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (17 samples, 0.04%)</title><rect x="46.4679%" y="997" width="0.0398%" height="15" fill="rgb(231,217,32)"/><text x="46.7179%" y="1007.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (17 samples, 0.04%)</title><rect x="46.4679%" y="981" width="0.0398%" height="15" fill="rgb(229,61,38)"/><text x="46.7179%" y="991.50"></text></g><g><title>alloc::alloc::exchange_malloc (7 samples, 0.02%)</title><rect x="46.4913%" y="965" width="0.0164%" height="15" fill="rgb(225,210,5)"/><text x="46.7413%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.02%)</title><rect x="46.4913%" y="949" width="0.0164%" height="15" fill="rgb(231,79,45)"/><text x="46.7413%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.02%)</title><rect x="46.4913%" y="933" width="0.0164%" height="15" fill="rgb(224,100,7)"/><text x="46.7413%" y="943.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.02%)</title><rect x="46.4913%" y="917" width="0.0164%" height="15" fill="rgb(241,198,18)"/><text x="46.7413%" y="927.50"></text></g><g><title>_rjem_mallocx (5 samples, 0.01%)</title><rect x="46.4960%" y="901" width="0.0117%" height="15" fill="rgb(252,97,53)"/><text x="46.7460%" y="911.50"></text></g><g><title>[libc-2.31.so] (14 samples, 0.03%)</title><rect x="46.5077%" y="1013" width="0.0328%" height="15" fill="rgb(220,88,7)"/><text x="46.7577%" y="1023.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (27 samples, 0.06%)</title><rect x="46.6223%" y="901" width="0.0632%" height="15" fill="rgb(213,176,14)"/><text x="46.8723%" y="911.50"></text></g><g><title>[libc-2.31.so] (12 samples, 0.03%)</title><rect x="46.6575%" y="885" width="0.0281%" height="15" fill="rgb(246,73,7)"/><text x="46.9075%" y="895.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (37 samples, 0.09%)</title><rect x="46.6200%" y="917" width="0.0866%" height="15" fill="rgb(245,64,36)"/><text x="46.8700%" y="927.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.02%)</title><rect x="46.6855%" y="901" width="0.0211%" height="15" fill="rgb(245,80,10)"/><text x="46.9355%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.02%)</title><rect x="46.7277%" y="869" width="0.0187%" height="15" fill="rgb(232,107,50)"/><text x="46.9777%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.02%)</title><rect x="46.7277%" y="853" width="0.0187%" height="15" fill="rgb(253,3,0)"/><text x="46.9777%" y="863.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.02%)</title><rect x="46.7300%" y="837" width="0.0164%" height="15" fill="rgb(212,99,53)"/><text x="46.9800%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (6 samples, 0.01%)</title><rect x="46.7464%" y="869" width="0.0140%" height="15" fill="rgb(249,111,54)"/><text x="46.9964%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (25 samples, 0.06%)</title><rect x="46.7090%" y="917" width="0.0585%" height="15" fill="rgb(249,55,30)"/><text x="46.9590%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (19 samples, 0.04%)</title><rect x="46.7230%" y="901" width="0.0445%" height="15" fill="rgb(237,47,42)"/><text x="46.9730%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (19 samples, 0.04%)</title><rect x="46.7230%" y="885" width="0.0445%" height="15" fill="rgb(211,20,18)"/><text x="46.9730%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (87 samples, 0.20%)</title><rect x="46.6013%" y="981" width="0.2036%" height="15" fill="rgb(231,203,46)"/><text x="46.8513%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (83 samples, 0.19%)</title><rect x="46.6106%" y="965" width="0.1943%" height="15" fill="rgb(237,142,3)"/><text x="46.8606%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (83 samples, 0.19%)</title><rect x="46.6106%" y="949" width="0.1943%" height="15" fill="rgb(241,107,1)"/><text x="46.8606%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (83 samples, 0.19%)</title><rect x="46.6106%" y="933" width="0.1943%" height="15" fill="rgb(229,83,13)"/><text x="46.8606%" y="943.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (16 samples, 0.04%)</title><rect x="46.7675%" y="917" width="0.0375%" height="15" fill="rgb(241,91,40)"/><text x="47.0175%" y="927.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.02%)</title><rect x="46.7839%" y="901" width="0.0211%" height="15" fill="rgb(225,3,45)"/><text x="47.0339%" y="911.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (113 samples, 0.26%)</title><rect x="46.5474%" y="997" width="0.2645%" height="15" fill="rgb(244,223,14)"/><text x="46.7974%" y="1007.50"></text></g><g><title>[libc-2.31.so] (15 samples, 0.04%)</title><rect x="46.8119%" y="997" width="0.0351%" height="15" fill="rgb(224,124,37)"/><text x="47.0619%" y="1007.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (225 samples, 0.53%)</title><rect x="46.3274%" y="1045" width="0.5267%" height="15" fill="rgb(251,171,30)"/><text x="46.5774%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (225 samples, 0.53%)</title><rect x="46.3274%" y="1029" width="0.5267%" height="15" fill="rgb(236,46,54)"/><text x="46.5774%" y="1039.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_var::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S,model::rho_types::Par&gt; for model::rho_types::Var&gt;::evaluate::{{closure}} (134 samples, 0.31%)</title><rect x="46.5404%" y="1013" width="0.3137%" height="15" fill="rgb(245,213,5)"/><text x="46.7904%" y="1023.50"></text></g><g><title>[libc-2.31.so] (15 samples, 0.04%)</title><rect x="46.8611%" y="1013" width="0.0351%" height="15" fill="rgb(230,144,27)"/><text x="47.1111%" y="1023.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (23 samples, 0.05%)</title><rect x="46.8588%" y="1045" width="0.0538%" height="15" fill="rgb(220,86,6)"/><text x="47.1088%" y="1055.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (23 samples, 0.05%)</title><rect x="46.8588%" y="1029" width="0.0538%" height="15" fill="rgb(240,20,13)"/><text x="47.1088%" y="1039.50"></text></g><g><title>alloc::alloc::exchange_malloc (7 samples, 0.02%)</title><rect x="46.8962%" y="1013" width="0.0164%" height="15" fill="rgb(217,89,34)"/><text x="47.1462%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.02%)</title><rect x="46.8962%" y="997" width="0.0164%" height="15" fill="rgb(229,13,5)"/><text x="47.1462%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.02%)</title><rect x="46.8962%" y="981" width="0.0164%" height="15" fill="rgb(244,67,35)"/><text x="47.1462%" y="991.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.02%)</title><rect x="46.8962%" y="965" width="0.0164%" height="15" fill="rgb(221,40,2)"/><text x="47.1462%" y="975.50"></text></g><g><title>[libc-2.31.so] (52 samples, 0.12%)</title><rect x="46.9126%" y="1045" width="0.1217%" height="15" fill="rgb(237,157,21)"/><text x="47.1626%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;model::rho_types::Expr,model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (12 samples, 0.03%)</title><rect x="47.0343%" y="1045" width="0.0281%" height="15" fill="rgb(222,94,11)"/><text x="47.2843%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;model::rho_types::Expr,model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (12 samples, 0.03%)</title><rect x="47.0343%" y="1029" width="0.0281%" height="15" fill="rgb(249,113,6)"/><text x="47.2843%" y="1039.50"></text></g><g><title>alloc::alloc::box_free (12 samples, 0.03%)</title><rect x="47.0343%" y="1013" width="0.0281%" height="15" fill="rgb(238,137,36)"/><text x="47.2843%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.03%)</title><rect x="47.0343%" y="997" width="0.0281%" height="15" fill="rgb(210,102,26)"/><text x="47.2843%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.03%)</title><rect x="47.0343%" y="981" width="0.0281%" height="15" fill="rgb(218,30,30)"/><text x="47.2843%" y="991.50"></text></g><g><title>_rjem_sdallocx (10 samples, 0.02%)</title><rect x="47.0390%" y="965" width="0.0234%" height="15" fill="rgb(214,67,26)"/><text x="47.2890%" y="975.50"></text></g><g><title>isfree (9 samples, 0.02%)</title><rect x="47.0413%" y="949" width="0.0211%" height="15" fill="rgb(251,9,53)"/><text x="47.2913%" y="959.50"></text></g><g><title>isdalloct (9 samples, 0.02%)</title><rect x="47.0413%" y="933" width="0.0211%" height="15" fill="rgb(228,204,25)"/><text x="47.2913%" y="943.50"></text></g><g><title>arena_sdalloc (9 samples, 0.02%)</title><rect x="47.0413%" y="917" width="0.0211%" height="15" fill="rgb(207,153,8)"/><text x="47.2913%" y="927.50"></text></g><g><title>tcache_dalloc_small (8 samples, 0.02%)</title><rect x="47.0437%" y="901" width="0.0187%" height="15" fill="rgb(242,9,16)"/><text x="47.2937%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;model::rho_types::Par,model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (10 samples, 0.02%)</title><rect x="47.0624%" y="1045" width="0.0234%" height="15" fill="rgb(217,211,10)"/><text x="47.3124%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;model::rho_types::Par,model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (10 samples, 0.02%)</title><rect x="47.0624%" y="1029" width="0.0234%" height="15" fill="rgb(219,228,52)"/><text x="47.3124%" y="1039.50"></text></g><g><title>alloc::alloc::box_free (10 samples, 0.02%)</title><rect x="47.0624%" y="1013" width="0.0234%" height="15" fill="rgb(231,92,29)"/><text x="47.3124%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.02%)</title><rect x="47.0624%" y="997" width="0.0234%" height="15" fill="rgb(232,8,23)"/><text x="47.3124%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.02%)</title><rect x="47.0624%" y="981" width="0.0234%" height="15" fill="rgb(216,211,34)"/><text x="47.3124%" y="991.50"></text></g><g><title>_rjem_sdallocx (7 samples, 0.02%)</title><rect x="47.0694%" y="965" width="0.0164%" height="15" fill="rgb(236,151,0)"/><text x="47.3194%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (6 samples, 0.01%)</title><rect x="47.0905%" y="1029" width="0.0140%" height="15" fill="rgb(209,168,3)"/><text x="47.3405%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (6 samples, 0.01%)</title><rect x="47.0905%" y="1013" width="0.0140%" height="15" fill="rgb(208,129,28)"/><text x="47.3405%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="47.0905%" y="997" width="0.0140%" height="15" fill="rgb(229,78,22)"/><text x="47.3405%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.01%)</title><rect x="47.0905%" y="981" width="0.0140%" height="15" fill="rgb(228,187,13)"/><text x="47.3405%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.01%)</title><rect x="47.0905%" y="965" width="0.0140%" height="15" fill="rgb(240,119,24)"/><text x="47.3405%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (10 samples, 0.02%)</title><rect x="47.0858%" y="1045" width="0.0234%" height="15" fill="rgb(209,194,42)"/><text x="47.3358%" y="1055.50"></text></g><g><title>imalloc_body (6 samples, 0.01%)</title><rect x="47.1139%" y="917" width="0.0140%" height="15" fill="rgb(247,200,46)"/><text x="47.3639%" y="927.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::eval_eplus::&lt;impl rho_runtime::interpreter::reduce::eval_expression::AsyncExprInstanceEvaluator&lt;S&gt; for model::rho_types::EPlus&gt;::evaluate::{{closure}} (357 samples, 0.84%)</title><rect x="46.2970%" y="1157" width="0.8356%" height="15" fill="rgb(218,76,16)"/><text x="46.5470%" y="1167.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (357 samples, 0.84%)</title><rect x="46.2970%" y="1141" width="0.8356%" height="15" fill="rgb(225,21,48)"/><text x="46.5470%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (357 samples, 0.84%)</title><rect x="46.2970%" y="1125" width="0.8356%" height="15" fill="rgb(239,223,50)"/><text x="46.5470%" y="1135.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression::{{closure}} (357 samples, 0.84%)</title><rect x="46.2970%" y="1109" width="0.8356%" height="15" fill="rgb(244,45,21)"/><text x="46.5470%" y="1119.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (357 samples, 0.84%)</title><rect x="46.2970%" y="1093" width="0.8356%" height="15" fill="rgb(232,33,43)"/><text x="46.5470%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (357 samples, 0.84%)</title><rect x="46.2970%" y="1077" width="0.8356%" height="15" fill="rgb(209,8,3)"/><text x="46.5470%" y="1087.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate::{{closure}} (355 samples, 0.83%)</title><rect x="46.3017%" y="1061" width="0.8310%" height="15" fill="rgb(214,25,53)"/><text x="46.5517%" y="1071.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_var::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S,model::rho_types::Par&gt; for model::rho_types::Var&gt;::evaluate (10 samples, 0.02%)</title><rect x="47.1092%" y="1045" width="0.0234%" height="15" fill="rgb(254,186,54)"/><text x="47.3592%" y="1055.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (10 samples, 0.02%)</title><rect x="47.1092%" y="1029" width="0.0234%" height="15" fill="rgb(208,174,49)"/><text x="47.3592%" y="1039.50"></text></g><g><title>alloc::alloc::exchange_malloc (10 samples, 0.02%)</title><rect x="47.1092%" y="1013" width="0.0234%" height="15" fill="rgb(233,191,51)"/><text x="47.3592%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.02%)</title><rect x="47.1092%" y="997" width="0.0234%" height="15" fill="rgb(222,134,10)"/><text x="47.3592%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.02%)</title><rect x="47.1092%" y="981" width="0.0234%" height="15" fill="rgb(230,226,20)"/><text x="47.3592%" y="991.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.02%)</title><rect x="47.1092%" y="965" width="0.0234%" height="15" fill="rgb(251,111,25)"/><text x="47.3592%" y="975.50"></text></g><g><title>_rjem_mallocx (9 samples, 0.02%)</title><rect x="47.1116%" y="949" width="0.0211%" height="15" fill="rgb(224,40,46)"/><text x="47.3616%" y="959.50"></text></g><g><title>imalloc (8 samples, 0.02%)</title><rect x="47.1139%" y="933" width="0.0187%" height="15" fill="rgb(236,108,47)"/><text x="47.3639%" y="943.50"></text></g><g><title>[libc-2.31.so] (30 samples, 0.07%)</title><rect x="47.2052%" y="997" width="0.0702%" height="15" fill="rgb(234,93,0)"/><text x="47.4552%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (12 samples, 0.03%)</title><rect x="47.2754%" y="997" width="0.0281%" height="15" fill="rgb(224,213,32)"/><text x="47.5254%" y="1007.50"></text></g><g><title>core::ptr::read (12 samples, 0.03%)</title><rect x="47.2754%" y="981" width="0.0281%" height="15" fill="rgb(251,11,48)"/><text x="47.5254%" y="991.50"></text></g><g><title>[libc-2.31.so] (12 samples, 0.03%)</title><rect x="47.2754%" y="965" width="0.0281%" height="15" fill="rgb(236,173,5)"/><text x="47.5254%" y="975.50"></text></g><g><title>isfree (15 samples, 0.04%)</title><rect x="47.3199%" y="901" width="0.0351%" height="15" fill="rgb(230,95,12)"/><text x="47.5699%" y="911.50"></text></g><g><title>isdalloct (15 samples, 0.04%)</title><rect x="47.3199%" y="885" width="0.0351%" height="15" fill="rgb(232,209,1)"/><text x="47.5699%" y="895.50"></text></g><g><title>arena_sdalloc (15 samples, 0.04%)</title><rect x="47.3199%" y="869" width="0.0351%" height="15" fill="rgb(232,6,1)"/><text x="47.5699%" y="879.50"></text></g><g><title>tcache_dalloc_small (13 samples, 0.03%)</title><rect x="47.3246%" y="853" width="0.0304%" height="15" fill="rgb(210,224,50)"/><text x="47.5746%" y="863.50"></text></g><g><title>alloc::alloc::box_free (23 samples, 0.05%)</title><rect x="47.3035%" y="965" width="0.0538%" height="15" fill="rgb(228,127,35)"/><text x="47.5535%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (23 samples, 0.05%)</title><rect x="47.3035%" y="949" width="0.0538%" height="15" fill="rgb(245,102,45)"/><text x="47.5535%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (23 samples, 0.05%)</title><rect x="47.3035%" y="933" width="0.0538%" height="15" fill="rgb(214,1,49)"/><text x="47.5535%" y="943.50"></text></g><g><title>_rjem_sdallocx (20 samples, 0.05%)</title><rect x="47.3105%" y="917" width="0.0468%" height="15" fill="rgb(226,163,40)"/><text x="47.5605%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (24 samples, 0.06%)</title><rect x="47.3035%" y="997" width="0.0562%" height="15" fill="rgb(239,212,28)"/><text x="47.5535%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (24 samples, 0.06%)</title><rect x="47.3035%" y="981" width="0.0562%" height="15" fill="rgb(220,20,13)"/><text x="47.5535%" y="991.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.02%)</title><rect x="47.3597%" y="965" width="0.0187%" height="15" fill="rgb(210,164,35)"/><text x="47.6097%" y="975.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression::{{closure}} (99 samples, 0.23%)</title><rect x="47.1701%" y="1013" width="0.2317%" height="15" fill="rgb(248,109,41)"/><text x="47.4201%" y="1023.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (18 samples, 0.04%)</title><rect x="47.3597%" y="997" width="0.0421%" height="15" fill="rgb(238,23,50)"/><text x="47.6097%" y="1007.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (18 samples, 0.04%)</title><rect x="47.3597%" y="981" width="0.0421%" height="15" fill="rgb(211,48,49)"/><text x="47.6097%" y="991.50"></text></g><g><title>alloc::alloc::exchange_malloc (10 samples, 0.02%)</title><rect x="47.3784%" y="965" width="0.0234%" height="15" fill="rgb(223,36,21)"/><text x="47.6284%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.02%)</title><rect x="47.3784%" y="949" width="0.0234%" height="15" fill="rgb(207,123,46)"/><text x="47.6284%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.02%)</title><rect x="47.3784%" y="933" width="0.0234%" height="15" fill="rgb(240,218,32)"/><text x="47.6284%" y="943.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.02%)</title><rect x="47.3784%" y="917" width="0.0234%" height="15" fill="rgb(252,5,43)"/><text x="47.6284%" y="927.50"></text></g><g><title>_rjem_mallocx (9 samples, 0.02%)</title><rect x="47.3807%" y="901" width="0.0211%" height="15" fill="rgb(252,84,19)"/><text x="47.6307%" y="911.50"></text></g><g><title>imalloc (5 samples, 0.01%)</title><rect x="47.3901%" y="885" width="0.0117%" height="15" fill="rgb(243,152,39)"/><text x="47.6401%" y="895.50"></text></g><g><title>[libc-2.31.so] (12 samples, 0.03%)</title><rect x="47.4018%" y="1013" width="0.0281%" height="15" fill="rgb(234,160,15)"/><text x="47.6518%" y="1023.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="47.5305%" y="901" width="0.0211%" height="15" fill="rgb(237,34,20)"/><text x="47.7805%" y="911.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (23 samples, 0.05%)</title><rect x="47.5165%" y="917" width="0.0538%" height="15" fill="rgb(229,97,13)"/><text x="47.7665%" y="927.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.02%)</title><rect x="47.5516%" y="901" width="0.0187%" height="15" fill="rgb(234,71,50)"/><text x="47.8016%" y="911.50"></text></g><g><title>imalloc_body (5 samples, 0.01%)</title><rect x="47.6078%" y="789" width="0.0117%" height="15" fill="rgb(253,155,4)"/><text x="47.8578%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.02%)</title><rect x="47.5984%" y="869" width="0.0234%" height="15" fill="rgb(222,185,37)"/><text x="47.8484%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.02%)</title><rect x="47.5984%" y="853" width="0.0234%" height="15" fill="rgb(251,177,13)"/><text x="47.8484%" y="863.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.02%)</title><rect x="47.6031%" y="837" width="0.0187%" height="15" fill="rgb(250,179,40)"/><text x="47.8531%" y="847.50"></text></g><g><title>_rjem_mallocx (6 samples, 0.01%)</title><rect x="47.6078%" y="821" width="0.0140%" height="15" fill="rgb(242,44,2)"/><text x="47.8578%" y="831.50"></text></g><g><title>imalloc (6 samples, 0.01%)</title><rect x="47.6078%" y="805" width="0.0140%" height="15" fill="rgb(216,177,13)"/><text x="47.8578%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (25 samples, 0.06%)</title><rect x="47.5727%" y="917" width="0.0585%" height="15" fill="rgb(216,106,43)"/><text x="47.8227%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20 samples, 0.05%)</title><rect x="47.5844%" y="901" width="0.0468%" height="15" fill="rgb(216,183,2)"/><text x="47.8344%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (20 samples, 0.05%)</title><rect x="47.5844%" y="885" width="0.0468%" height="15" fill="rgb(249,75,3)"/><text x="47.8344%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (68 samples, 0.16%)</title><rect x="47.4884%" y="981" width="0.1592%" height="15" fill="rgb(219,67,39)"/><text x="47.7384%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (66 samples, 0.15%)</title><rect x="47.4931%" y="965" width="0.1545%" height="15" fill="rgb(253,228,2)"/><text x="47.7431%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (66 samples, 0.15%)</title><rect x="47.4931%" y="949" width="0.1545%" height="15" fill="rgb(235,138,27)"/><text x="47.7431%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (66 samples, 0.15%)</title><rect x="47.4931%" y="933" width="0.1545%" height="15" fill="rgb(236,97,51)"/><text x="47.7431%" y="943.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (7 samples, 0.02%)</title><rect x="47.6312%" y="917" width="0.0164%" height="15" fill="rgb(240,80,30)"/><text x="47.8812%" y="927.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (92 samples, 0.22%)</title><rect x="47.4463%" y="997" width="0.2153%" height="15" fill="rgb(230,178,19)"/><text x="47.6963%" y="1007.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="47.6476%" y="981" width="0.0140%" height="15" fill="rgb(210,190,27)"/><text x="47.8976%" y="991.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (221 samples, 0.52%)</title><rect x="47.1677%" y="1045" width="0.5173%" height="15" fill="rgb(222,107,31)"/><text x="47.4177%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (221 samples, 0.52%)</title><rect x="47.1677%" y="1029" width="0.5173%" height="15" fill="rgb(216,127,34)"/><text x="47.4177%" y="1039.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_var::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S,model::rho_types::Par&gt; for model::rho_types::Var&gt;::evaluate::{{closure}} (109 samples, 0.26%)</title><rect x="47.4299%" y="1013" width="0.2551%" height="15" fill="rgb(234,116,52)"/><text x="47.6799%" y="1023.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.02%)</title><rect x="47.6616%" y="997" width="0.0234%" height="15" fill="rgb(222,124,15)"/><text x="47.9116%" y="1007.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (18 samples, 0.04%)</title><rect x="47.6850%" y="1045" width="0.0421%" height="15" fill="rgb(231,179,28)"/><text x="47.9350%" y="1055.50"></text></g><g><title>[libc-2.31.so] (17 samples, 0.04%)</title><rect x="47.6874%" y="1029" width="0.0398%" height="15" fill="rgb(226,93,45)"/><text x="47.9374%" y="1039.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.02%)</title><rect x="47.7272%" y="1013" width="0.0187%" height="15" fill="rgb(215,8,51)"/><text x="47.9772%" y="1023.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (13 samples, 0.03%)</title><rect x="47.7272%" y="1045" width="0.0304%" height="15" fill="rgb(223,106,5)"/><text x="47.9772%" y="1055.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (13 samples, 0.03%)</title><rect x="47.7272%" y="1029" width="0.0304%" height="15" fill="rgb(250,191,5)"/><text x="47.9772%" y="1039.50"></text></g><g><title>alloc::alloc::exchange_malloc (5 samples, 0.01%)</title><rect x="47.7459%" y="1013" width="0.0117%" height="15" fill="rgb(242,132,44)"/><text x="47.9959%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.01%)</title><rect x="47.7459%" y="997" width="0.0117%" height="15" fill="rgb(251,152,29)"/><text x="47.9959%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.01%)</title><rect x="47.7459%" y="981" width="0.0117%" height="15" fill="rgb(218,179,5)"/><text x="47.9959%" y="991.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.01%)</title><rect x="47.7459%" y="965" width="0.0117%" height="15" fill="rgb(227,67,19)"/><text x="47.9959%" y="975.50"></text></g><g><title>[libc-2.31.so] (51 samples, 0.12%)</title><rect x="47.7576%" y="1045" width="0.1194%" height="15" fill="rgb(233,119,31)"/><text x="48.0076%" y="1055.50"></text></g><g><title>alloc::alloc::box_free (18 samples, 0.04%)</title><rect x="47.8770%" y="1013" width="0.0421%" height="15" fill="rgb(241,120,22)"/><text x="48.1270%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (18 samples, 0.04%)</title><rect x="47.8770%" y="997" width="0.0421%" height="15" fill="rgb(224,102,30)"/><text x="48.1270%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (18 samples, 0.04%)</title><rect x="47.8770%" y="981" width="0.0421%" height="15" fill="rgb(210,164,37)"/><text x="48.1270%" y="991.50"></text></g><g><title>_rjem_sdallocx (17 samples, 0.04%)</title><rect x="47.8793%" y="965" width="0.0398%" height="15" fill="rgb(226,191,16)"/><text x="48.1293%" y="975.50"></text></g><g><title>isfree (12 samples, 0.03%)</title><rect x="47.8910%" y="949" width="0.0281%" height="15" fill="rgb(214,40,45)"/><text x="48.1410%" y="959.50"></text></g><g><title>isdalloct (12 samples, 0.03%)</title><rect x="47.8910%" y="933" width="0.0281%" height="15" fill="rgb(244,29,26)"/><text x="48.1410%" y="943.50"></text></g><g><title>arena_sdalloc (12 samples, 0.03%)</title><rect x="47.8910%" y="917" width="0.0281%" height="15" fill="rgb(216,16,5)"/><text x="48.1410%" y="927.50"></text></g><g><title>tcache_dalloc_small (10 samples, 0.02%)</title><rect x="47.8957%" y="901" width="0.0234%" height="15" fill="rgb(249,76,35)"/><text x="48.1457%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;model::rho_types::Expr,model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (19 samples, 0.04%)</title><rect x="47.8770%" y="1045" width="0.0445%" height="15" fill="rgb(207,11,44)"/><text x="48.1270%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;model::rho_types::Expr,model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (19 samples, 0.04%)</title><rect x="47.8770%" y="1029" width="0.0445%" height="15" fill="rgb(228,190,49)"/><text x="48.1270%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;model::rho_types::Par,model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (13 samples, 0.03%)</title><rect x="47.9214%" y="1045" width="0.0304%" height="15" fill="rgb(214,173,12)"/><text x="48.1714%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;model::rho_types::Par,model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (13 samples, 0.03%)</title><rect x="47.9214%" y="1029" width="0.0304%" height="15" fill="rgb(218,26,35)"/><text x="48.1714%" y="1039.50"></text></g><g><title>alloc::alloc::box_free (13 samples, 0.03%)</title><rect x="47.9214%" y="1013" width="0.0304%" height="15" fill="rgb(220,200,19)"/><text x="48.1714%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.03%)</title><rect x="47.9238%" y="997" width="0.0281%" height="15" fill="rgb(239,95,49)"/><text x="48.1738%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.03%)</title><rect x="47.9238%" y="981" width="0.0281%" height="15" fill="rgb(235,85,53)"/><text x="48.1738%" y="991.50"></text></g><g><title>_rjem_sdallocx (10 samples, 0.02%)</title><rect x="47.9285%" y="965" width="0.0234%" height="15" fill="rgb(233,133,31)"/><text x="48.1785%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (8 samples, 0.02%)</title><rect x="47.9566%" y="1029" width="0.0187%" height="15" fill="rgb(218,25,20)"/><text x="48.2066%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (7 samples, 0.02%)</title><rect x="47.9589%" y="1013" width="0.0164%" height="15" fill="rgb(252,210,38)"/><text x="48.2089%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="47.9589%" y="997" width="0.0164%" height="15" fill="rgb(242,134,21)"/><text x="48.2089%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.02%)</title><rect x="47.9589%" y="981" width="0.0164%" height="15" fill="rgb(213,28,48)"/><text x="48.2089%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.02%)</title><rect x="47.9589%" y="965" width="0.0164%" height="15" fill="rgb(250,196,2)"/><text x="48.2089%" y="975.50"></text></g><g><title>_rjem_sdallocx (5 samples, 0.01%)</title><rect x="47.9636%" y="949" width="0.0117%" height="15" fill="rgb(227,5,17)"/><text x="48.2136%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (13 samples, 0.03%)</title><rect x="47.9519%" y="1045" width="0.0304%" height="15" fill="rgb(221,226,24)"/><text x="48.2019%" y="1055.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression::{{closure}} (383 samples, 0.90%)</title><rect x="47.1326%" y="1109" width="0.8965%" height="15" fill="rgb(211,5,48)"/><text x="47.3826%" y="1119.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (383 samples, 0.90%)</title><rect x="47.1326%" y="1093" width="0.8965%" height="15" fill="rgb(219,150,6)"/><text x="47.3826%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (383 samples, 0.90%)</title><rect x="47.1326%" y="1077" width="0.8965%" height="15" fill="rgb(251,46,16)"/><text x="47.3826%" y="1087.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate::{{closure}} (381 samples, 0.89%)</title><rect x="47.1373%" y="1061" width="0.8918%" height="15" fill="rgb(220,204,40)"/><text x="47.3873%" y="1071.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_var::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S,model::rho_types::Par&gt; for model::rho_types::Var&gt;::evaluate (20 samples, 0.05%)</title><rect x="47.9823%" y="1045" width="0.0468%" height="15" fill="rgb(211,85,2)"/><text x="48.2323%" y="1055.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (20 samples, 0.05%)</title><rect x="47.9823%" y="1029" width="0.0468%" height="15" fill="rgb(229,17,7)"/><text x="48.2323%" y="1039.50"></text></g><g><title>alloc::alloc::exchange_malloc (18 samples, 0.04%)</title><rect x="47.9870%" y="1013" width="0.0421%" height="15" fill="rgb(239,72,28)"/><text x="48.2370%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.04%)</title><rect x="47.9870%" y="997" width="0.0421%" height="15" fill="rgb(230,47,54)"/><text x="48.2370%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.04%)</title><rect x="47.9870%" y="981" width="0.0421%" height="15" fill="rgb(214,50,8)"/><text x="48.2370%" y="991.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.04%)</title><rect x="47.9870%" y="965" width="0.0421%" height="15" fill="rgb(216,198,43)"/><text x="48.2370%" y="975.50"></text></g><g><title>_rjem_mallocx (16 samples, 0.04%)</title><rect x="47.9917%" y="949" width="0.0375%" height="15" fill="rgb(234,20,35)"/><text x="48.2417%" y="959.50"></text></g><g><title>imalloc (11 samples, 0.03%)</title><rect x="48.0034%" y="933" width="0.0257%" height="15" fill="rgb(254,45,19)"/><text x="48.2534%" y="943.50"></text></g><g><title>imalloc_body (11 samples, 0.03%)</title><rect x="48.0034%" y="917" width="0.0257%" height="15" fill="rgb(219,14,44)"/><text x="48.2534%" y="927.50"></text></g><g><title>imalloc_no_sample (11 samples, 0.03%)</title><rect x="48.0034%" y="901" width="0.0257%" height="15" fill="rgb(217,220,26)"/><text x="48.2534%" y="911.50"></text></g><g><title>iallocztm (10 samples, 0.02%)</title><rect x="48.0057%" y="885" width="0.0234%" height="15" fill="rgb(213,158,28)"/><text x="48.2557%" y="895.50"></text></g><g><title>arena_malloc (10 samples, 0.02%)</title><rect x="48.0057%" y="869" width="0.0234%" height="15" fill="rgb(252,51,52)"/><text x="48.2557%" y="879.50"></text></g><g><title>tcache_alloc_small (10 samples, 0.02%)</title><rect x="48.0057%" y="853" width="0.0234%" height="15" fill="rgb(246,89,16)"/><text x="48.2557%" y="863.50"></text></g><g><title>cache_bin_alloc_easy (9 samples, 0.02%)</title><rect x="48.0081%" y="837" width="0.0211%" height="15" fill="rgb(216,158,49)"/><text x="48.2581%" y="847.50"></text></g><g><title>[libc-2.31.so] (74 samples, 0.17%)</title><rect x="48.0853%" y="1045" width="0.1732%" height="15" fill="rgb(236,107,19)"/><text x="48.3353%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (27 samples, 0.06%)</title><rect x="48.2608%" y="1045" width="0.0632%" height="15" fill="rgb(228,185,30)"/><text x="48.5108%" y="1055.50"></text></g><g><title>core::ptr::read (27 samples, 0.06%)</title><rect x="48.2608%" y="1029" width="0.0632%" height="15" fill="rgb(246,134,8)"/><text x="48.5108%" y="1039.50"></text></g><g><title>[libc-2.31.so] (27 samples, 0.06%)</title><rect x="48.2608%" y="1013" width="0.0632%" height="15" fill="rgb(214,143,50)"/><text x="48.5108%" y="1023.50"></text></g><g><title>alloc::alloc::box_free (21 samples, 0.05%)</title><rect x="48.3240%" y="1013" width="0.0492%" height="15" fill="rgb(228,75,8)"/><text x="48.5740%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21 samples, 0.05%)</title><rect x="48.3240%" y="997" width="0.0492%" height="15" fill="rgb(207,175,4)"/><text x="48.5740%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (21 samples, 0.05%)</title><rect x="48.3240%" y="981" width="0.0492%" height="15" fill="rgb(205,108,24)"/><text x="48.5740%" y="991.50"></text></g><g><title>_rjem_sdallocx (17 samples, 0.04%)</title><rect x="48.3334%" y="965" width="0.0398%" height="15" fill="rgb(244,120,49)"/><text x="48.5834%" y="975.50"></text></g><g><title>isfree (12 samples, 0.03%)</title><rect x="48.3451%" y="949" width="0.0281%" height="15" fill="rgb(223,47,38)"/><text x="48.5951%" y="959.50"></text></g><g><title>isdalloct (12 samples, 0.03%)</title><rect x="48.3451%" y="933" width="0.0281%" height="15" fill="rgb(229,179,11)"/><text x="48.5951%" y="943.50"></text></g><g><title>arena_sdalloc (12 samples, 0.03%)</title><rect x="48.3451%" y="917" width="0.0281%" height="15" fill="rgb(231,122,1)"/><text x="48.5951%" y="927.50"></text></g><g><title>tcache_dalloc_small (7 samples, 0.02%)</title><rect x="48.3568%" y="901" width="0.0164%" height="15" fill="rgb(245,119,9)"/><text x="48.6068%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (23 samples, 0.05%)</title><rect x="48.3240%" y="1045" width="0.0538%" height="15" fill="rgb(241,163,25)"/><text x="48.5740%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (23 samples, 0.05%)</title><rect x="48.3240%" y="1029" width="0.0538%" height="15" fill="rgb(217,214,3)"/><text x="48.5740%" y="1039.50"></text></g><g><title>[libc-2.31.so] (12 samples, 0.03%)</title><rect x="48.3826%" y="1013" width="0.0281%" height="15" fill="rgb(240,86,28)"/><text x="48.6326%" y="1023.50"></text></g><g><title>imalloc_no_sample (10 samples, 0.02%)</title><rect x="48.4341%" y="901" width="0.0234%" height="15" fill="rgb(215,47,9)"/><text x="48.6841%" y="911.50"></text></g><g><title>iallocztm (8 samples, 0.02%)</title><rect x="48.4387%" y="885" width="0.0187%" height="15" fill="rgb(252,25,45)"/><text x="48.6887%" y="895.50"></text></g><g><title>arena_malloc (8 samples, 0.02%)</title><rect x="48.4387%" y="869" width="0.0187%" height="15" fill="rgb(251,164,9)"/><text x="48.6887%" y="879.50"></text></g><g><title>tcache_alloc_small (7 samples, 0.02%)</title><rect x="48.4411%" y="853" width="0.0164%" height="15" fill="rgb(233,194,0)"/><text x="48.6911%" y="863.50"></text></g><g><title>imalloc_body (17 samples, 0.04%)</title><rect x="48.4270%" y="917" width="0.0398%" height="15" fill="rgb(249,111,24)"/><text x="48.6770%" y="927.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression::{{closure}} (187 samples, 0.44%)</title><rect x="48.0315%" y="1061" width="0.4377%" height="15" fill="rgb(250,223,3)"/><text x="48.2815%" y="1071.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (39 samples, 0.09%)</title><rect x="48.3779%" y="1045" width="0.0913%" height="15" fill="rgb(236,178,37)"/><text x="48.6279%" y="1055.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (39 samples, 0.09%)</title><rect x="48.3779%" y="1029" width="0.0913%" height="15" fill="rgb(241,158,50)"/><text x="48.6279%" y="1039.50"></text></g><g><title>alloc::alloc::exchange_malloc (25 samples, 0.06%)</title><rect x="48.4107%" y="1013" width="0.0585%" height="15" fill="rgb(213,121,41)"/><text x="48.6607%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25 samples, 0.06%)</title><rect x="48.4107%" y="997" width="0.0585%" height="15" fill="rgb(240,92,3)"/><text x="48.6607%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (25 samples, 0.06%)</title><rect x="48.4107%" y="981" width="0.0585%" height="15" fill="rgb(205,123,3)"/><text x="48.6607%" y="991.50"></text></g><g><title>alloc::alloc::alloc (25 samples, 0.06%)</title><rect x="48.4107%" y="965" width="0.0585%" height="15" fill="rgb(205,97,47)"/><text x="48.6607%" y="975.50"></text></g><g><title>_rjem_mallocx (22 samples, 0.05%)</title><rect x="48.4177%" y="949" width="0.0515%" height="15" fill="rgb(247,152,14)"/><text x="48.6677%" y="959.50"></text></g><g><title>imalloc (18 samples, 0.04%)</title><rect x="48.4270%" y="933" width="0.0421%" height="15" fill="rgb(248,195,53)"/><text x="48.6770%" y="943.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (203 samples, 0.48%)</title><rect x="48.0291%" y="1093" width="0.4752%" height="15" fill="rgb(226,201,16)"/><text x="48.2791%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (203 samples, 0.48%)</title><rect x="48.0291%" y="1077" width="0.4752%" height="15" fill="rgb(205,98,0)"/><text x="48.2791%" y="1087.50"></text></g><g><title>[libc-2.31.so] (15 samples, 0.04%)</title><rect x="48.4692%" y="1061" width="0.0351%" height="15" fill="rgb(214,191,48)"/><text x="48.7192%" y="1071.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate::{{closure}} (587 samples, 1.37%)</title><rect x="47.1326%" y="1157" width="1.3740%" height="15" fill="rgb(237,112,39)"/><text x="47.3826%" y="1167.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (587 samples, 1.37%)</title><rect x="47.1326%" y="1141" width="1.3740%" height="15" fill="rgb(247,203,27)"/><text x="47.3826%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (587 samples, 1.37%)</title><rect x="47.1326%" y="1125" width="1.3740%" height="15" fill="rgb(235,124,28)"/><text x="47.3826%" y="1135.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::eval_eplus::&lt;impl rho_runtime::interpreter::reduce::eval_expression::AsyncExprInstanceEvaluator&lt;S&gt; for model::rho_types::EPlus&gt;::evaluate::{{closure}} (204 samples, 0.48%)</title><rect x="48.0291%" y="1109" width="0.4775%" height="15" fill="rgb(208,207,46)"/><text x="48.2791%" y="1119.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.02%)</title><rect x="48.5675%" y="1093" width="0.0211%" height="15" fill="rgb(234,176,4)"/><text x="48.8175%" y="1103.50"></text></g><g><title>_rjem_sdallocx (6 samples, 0.01%)</title><rect x="48.5979%" y="1093" width="0.0140%" height="15" fill="rgb(230,133,28)"/><text x="48.8479%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (18 samples, 0.04%)</title><rect x="48.6120%" y="1093" width="0.0421%" height="15" fill="rgb(211,137,40)"/><text x="48.8620%" y="1103.50"></text></g><g><title>core::ptr::read (16 samples, 0.04%)</title><rect x="48.6166%" y="1077" width="0.0375%" height="15" fill="rgb(254,35,13)"/><text x="48.8666%" y="1087.50"></text></g><g><title>[libc-2.31.so] (15 samples, 0.04%)</title><rect x="48.6190%" y="1061" width="0.0351%" height="15" fill="rgb(225,49,51)"/><text x="48.8690%" y="1071.50"></text></g><g><title>isfree (7 samples, 0.02%)</title><rect x="48.6728%" y="997" width="0.0164%" height="15" fill="rgb(251,10,15)"/><text x="48.9228%" y="1007.50"></text></g><g><title>isdalloct (7 samples, 0.02%)</title><rect x="48.6728%" y="981" width="0.0164%" height="15" fill="rgb(228,207,15)"/><text x="48.9228%" y="991.50"></text></g><g><title>arena_sdalloc (7 samples, 0.02%)</title><rect x="48.6728%" y="965" width="0.0164%" height="15" fill="rgb(241,99,19)"/><text x="48.9228%" y="975.50"></text></g><g><title>tcache_dalloc_small (6 samples, 0.01%)</title><rect x="48.6752%" y="949" width="0.0140%" height="15" fill="rgb(207,104,49)"/><text x="48.9252%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (18 samples, 0.04%)</title><rect x="48.6541%" y="1093" width="0.0421%" height="15" fill="rgb(234,99,18)"/><text x="48.9041%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (18 samples, 0.04%)</title><rect x="48.6541%" y="1077" width="0.0421%" height="15" fill="rgb(213,191,49)"/><text x="48.9041%" y="1087.50"></text></g><g><title>alloc::alloc::box_free (16 samples, 0.04%)</title><rect x="48.6588%" y="1061" width="0.0375%" height="15" fill="rgb(210,226,19)"/><text x="48.9088%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.04%)</title><rect x="48.6588%" y="1045" width="0.0375%" height="15" fill="rgb(229,97,18)"/><text x="48.9088%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.04%)</title><rect x="48.6588%" y="1029" width="0.0375%" height="15" fill="rgb(211,167,15)"/><text x="48.9088%" y="1039.50"></text></g><g><title>_rjem_sdallocx (14 samples, 0.03%)</title><rect x="48.6635%" y="1013" width="0.0328%" height="15" fill="rgb(210,169,34)"/><text x="48.9135%" y="1023.50"></text></g><g><title>isfree (18 samples, 0.04%)</title><rect x="48.7126%" y="981" width="0.0421%" height="15" fill="rgb(241,121,31)"/><text x="48.9626%" y="991.50"></text></g><g><title>isdalloct (18 samples, 0.04%)</title><rect x="48.7126%" y="965" width="0.0421%" height="15" fill="rgb(232,40,11)"/><text x="48.9626%" y="975.50"></text></g><g><title>arena_sdalloc (18 samples, 0.04%)</title><rect x="48.7126%" y="949" width="0.0421%" height="15" fill="rgb(205,86,26)"/><text x="48.9626%" y="959.50"></text></g><g><title>tcache_dalloc_small (17 samples, 0.04%)</title><rect x="48.7149%" y="933" width="0.0398%" height="15" fill="rgb(231,126,28)"/><text x="48.9649%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Par&gt;&gt; (26 samples, 0.06%)</title><rect x="48.6962%" y="1077" width="0.0609%" height="15" fill="rgb(219,221,18)"/><text x="48.9462%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Par&gt;&gt; (26 samples, 0.06%)</title><rect x="48.6962%" y="1061" width="0.0609%" height="15" fill="rgb(211,40,0)"/><text x="48.9462%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.06%)</title><rect x="48.6962%" y="1045" width="0.0609%" height="15" fill="rgb(239,85,43)"/><text x="48.9462%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (26 samples, 0.06%)</title><rect x="48.6962%" y="1029" width="0.0609%" height="15" fill="rgb(231,55,21)"/><text x="48.9462%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (26 samples, 0.06%)</title><rect x="48.6962%" y="1013" width="0.0609%" height="15" fill="rgb(225,184,43)"/><text x="48.9462%" y="1023.50"></text></g><g><title>_rjem_sdallocx (23 samples, 0.05%)</title><rect x="48.7032%" y="997" width="0.0538%" height="15" fill="rgb(251,158,41)"/><text x="48.9532%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Send&gt; (27 samples, 0.06%)</title><rect x="48.6962%" y="1093" width="0.0632%" height="15" fill="rgb(234,159,37)"/><text x="48.9462%" y="1103.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.02%)</title><rect x="48.7664%" y="1061" width="0.0234%" height="15" fill="rgb(216,204,22)"/><text x="49.0164%" y="1071.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (130 samples, 0.30%)</title><rect x="48.5066%" y="1141" width="0.3043%" height="15" fill="rgb(214,17,3)"/><text x="48.7566%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (130 samples, 0.30%)</title><rect x="48.5066%" y="1125" width="0.3043%" height="15" fill="rgb(212,111,17)"/><text x="48.7566%" y="1135.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate::{{closure}} (126 samples, 0.29%)</title><rect x="48.5160%" y="1109" width="0.2949%" height="15" fill="rgb(221,157,24)"/><text x="48.7660%" y="1119.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_send::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Send&gt;::evaluate (20 samples, 0.05%)</title><rect x="48.7641%" y="1093" width="0.0468%" height="15" fill="rgb(252,16,13)"/><text x="49.0141%" y="1103.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (20 samples, 0.05%)</title><rect x="48.7641%" y="1077" width="0.0468%" height="15" fill="rgb(221,62,2)"/><text x="49.0141%" y="1087.50"></text></g><g><title>alloc::alloc::exchange_malloc (9 samples, 0.02%)</title><rect x="48.7899%" y="1061" width="0.0211%" height="15" fill="rgb(247,87,22)"/><text x="49.0399%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.02%)</title><rect x="48.7899%" y="1045" width="0.0211%" height="15" fill="rgb(215,73,9)"/><text x="49.0399%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.02%)</title><rect x="48.7899%" y="1029" width="0.0211%" height="15" fill="rgb(207,175,33)"/><text x="49.0399%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.02%)</title><rect x="48.7899%" y="1013" width="0.0211%" height="15" fill="rgb(243,129,54)"/><text x="49.0399%" y="1023.50"></text></g><g><title>_rjem_mallocx (5 samples, 0.01%)</title><rect x="48.7992%" y="997" width="0.0117%" height="15" fill="rgb(227,119,45)"/><text x="49.0492%" y="1007.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.07%)</title><rect x="48.8320%" y="1093" width="0.0702%" height="15" fill="rgb(205,109,36)"/><text x="49.0820%" y="1103.50"></text></g><g><title>core::ptr::read (29 samples, 0.07%)</title><rect x="48.8343%" y="1077" width="0.0679%" height="15" fill="rgb(205,6,39)"/><text x="49.0843%" y="1087.50"></text></g><g><title>[libc-2.31.so] (27 samples, 0.06%)</title><rect x="48.8390%" y="1061" width="0.0632%" height="15" fill="rgb(221,32,16)"/><text x="49.0890%" y="1071.50"></text></g><g><title>[libc-2.31.so] (49 samples, 0.11%)</title><rect x="48.9022%" y="1093" width="0.1147%" height="15" fill="rgb(228,144,50)"/><text x="49.1522%" y="1103.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (18 samples, 0.04%)</title><rect x="49.0239%" y="1061" width="0.0421%" height="15" fill="rgb(229,201,53)"/><text x="49.2739%" y="1071.50"></text></g><g><title>[libc-2.31.so] (17 samples, 0.04%)</title><rect x="49.0263%" y="1045" width="0.0398%" height="15" fill="rgb(249,153,27)"/><text x="49.2763%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (22 samples, 0.05%)</title><rect x="49.0169%" y="1093" width="0.0515%" height="15" fill="rgb(227,106,25)"/><text x="49.2669%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (22 samples, 0.05%)</title><rect x="49.0169%" y="1077" width="0.0515%" height="15" fill="rgb(230,65,29)"/><text x="49.2669%" y="1087.50"></text></g><g><title>__rg_alloc (7 samples, 0.02%)</title><rect x="49.0707%" y="981" width="0.0164%" height="15" fill="rgb(221,57,46)"/><text x="49.3207%" y="991.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (7 samples, 0.02%)</title><rect x="49.0707%" y="965" width="0.0164%" height="15" fill="rgb(229,161,17)"/><text x="49.3207%" y="975.50"></text></g><g><title>imalloc_no_sample (11 samples, 0.03%)</title><rect x="49.1012%" y="933" width="0.0257%" height="15" fill="rgb(222,213,11)"/><text x="49.3512%" y="943.50"></text></g><g><title>iallocztm (8 samples, 0.02%)</title><rect x="49.1082%" y="917" width="0.0187%" height="15" fill="rgb(235,35,13)"/><text x="49.3582%" y="927.50"></text></g><g><title>arena_malloc (8 samples, 0.02%)</title><rect x="49.1082%" y="901" width="0.0187%" height="15" fill="rgb(233,158,34)"/><text x="49.3582%" y="911.50"></text></g><g><title>tcache_alloc_small (6 samples, 0.01%)</title><rect x="49.1129%" y="885" width="0.0140%" height="15" fill="rgb(215,151,48)"/><text x="49.3629%" y="895.50"></text></g><g><title>cache_bin_alloc_easy (5 samples, 0.01%)</title><rect x="49.1152%" y="869" width="0.0117%" height="15" fill="rgb(229,84,14)"/><text x="49.3652%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (26 samples, 0.06%)</title><rect x="49.0684%" y="1029" width="0.0609%" height="15" fill="rgb(229,68,14)"/><text x="49.3184%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (26 samples, 0.06%)</title><rect x="49.0684%" y="1013" width="0.0609%" height="15" fill="rgb(243,106,26)"/><text x="49.3184%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (26 samples, 0.06%)</title><rect x="49.0684%" y="997" width="0.0609%" height="15" fill="rgb(206,45,38)"/><text x="49.3184%" y="1007.50"></text></g><g><title>_rjem_mallocx (16 samples, 0.04%)</title><rect x="49.0918%" y="981" width="0.0375%" height="15" fill="rgb(226,6,15)"/><text x="49.3418%" y="991.50"></text></g><g><title>imalloc (13 samples, 0.03%)</title><rect x="49.0988%" y="965" width="0.0304%" height="15" fill="rgb(232,22,54)"/><text x="49.3488%" y="975.50"></text></g><g><title>imalloc_body (13 samples, 0.03%)</title><rect x="49.0988%" y="949" width="0.0304%" height="15" fill="rgb(229,222,32)"/><text x="49.3488%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (27 samples, 0.06%)</title><rect x="49.0684%" y="1093" width="0.0632%" height="15" fill="rgb(228,62,29)"/><text x="49.3184%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (27 samples, 0.06%)</title><rect x="49.0684%" y="1077" width="0.0632%" height="15" fill="rgb(251,103,34)"/><text x="49.3184%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (27 samples, 0.06%)</title><rect x="49.0684%" y="1061" width="0.0632%" height="15" fill="rgb(233,12,30)"/><text x="49.3184%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (27 samples, 0.06%)</title><rect x="49.0684%" y="1045" width="0.0632%" height="15" fill="rgb(238,52,0)"/><text x="49.3184%" y="1055.50"></text></g><g><title>__rg_dealloc (7 samples, 0.02%)</title><rect x="49.1363%" y="965" width="0.0164%" height="15" fill="rgb(223,98,5)"/><text x="49.3863%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;model::rho_types::Expr&gt;&gt; (21 samples, 0.05%)</title><rect x="49.1316%" y="1093" width="0.0492%" height="15" fill="rgb(228,75,37)"/><text x="49.3816%" y="1103.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.05%)</title><rect x="49.1316%" y="1077" width="0.0492%" height="15" fill="rgb(205,115,49)"/><text x="49.3816%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;model::rho_types::Expr,alloc::alloc::Global&gt;&gt; (20 samples, 0.05%)</title><rect x="49.1339%" y="1061" width="0.0468%" height="15" fill="rgb(250,154,43)"/><text x="49.3839%" y="1071.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.05%)</title><rect x="49.1339%" y="1045" width="0.0468%" height="15" fill="rgb(226,43,29)"/><text x="49.3839%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (20 samples, 0.05%)</title><rect x="49.1339%" y="1029" width="0.0468%" height="15" fill="rgb(249,228,39)"/><text x="49.3839%" y="1039.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.05%)</title><rect x="49.1339%" y="1013" width="0.0468%" height="15" fill="rgb(216,79,43)"/><text x="49.3839%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.05%)</title><rect x="49.1339%" y="997" width="0.0468%" height="15" fill="rgb(228,95,12)"/><text x="49.3839%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (19 samples, 0.04%)</title><rect x="49.1363%" y="981" width="0.0445%" height="15" fill="rgb(249,221,15)"/><text x="49.3863%" y="991.50"></text></g><g><title>_rjem_sdallocx (11 samples, 0.03%)</title><rect x="49.1550%" y="965" width="0.0257%" height="15" fill="rgb(233,34,13)"/><text x="49.4050%" y="975.50"></text></g><g><title>[libc-2.31.so] (23 samples, 0.05%)</title><rect x="49.2042%" y="1077" width="0.0538%" height="15" fill="rgb(214,103,39)"/><text x="49.4542%" y="1087.50"></text></g><g><title>model::rho_types::Par::append_expr (55 samples, 0.13%)</title><rect x="49.1807%" y="1093" width="0.1287%" height="15" fill="rgb(251,126,39)"/><text x="49.4307%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (22 samples, 0.05%)</title><rect x="49.2580%" y="1077" width="0.0515%" height="15" fill="rgb(214,216,36)"/><text x="49.5080%" y="1087.50"></text></g><g><title>core::ptr::write (21 samples, 0.05%)</title><rect x="49.2603%" y="1061" width="0.0492%" height="15" fill="rgb(220,221,8)"/><text x="49.5103%" y="1071.50"></text></g><g><title>[libc-2.31.so] (20 samples, 0.05%)</title><rect x="49.2627%" y="1045" width="0.0468%" height="15" fill="rgb(240,216,3)"/><text x="49.5127%" y="1055.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_match::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Match&gt;::evaluate::{{closure}} (347 samples, 0.81%)</title><rect x="48.5066%" y="1157" width="0.8122%" height="15" fill="rgb(232,218,17)"/><text x="48.7566%" y="1167.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute (217 samples, 0.51%)</title><rect x="48.8109%" y="1141" width="0.5079%" height="15" fill="rgb(229,163,45)"/><text x="49.0609%" y="1151.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute_no_sort (217 samples, 0.51%)</title><rect x="48.8109%" y="1125" width="0.5079%" height="15" fill="rgb(231,110,42)"/><text x="49.0609%" y="1135.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::substitute_expressions_in_par (217 samples, 0.51%)</title><rect x="48.8109%" y="1109" width="0.5079%" height="15" fill="rgb(208,170,48)"/><text x="49.0609%" y="1119.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (5 samples, 0.01%)</title><rect x="49.4499%" y="1093" width="0.0117%" height="15" fill="rgb(239,116,25)"/><text x="49.6999%" y="1103.50"></text></g><g><title>[libc-2.31.so] (118 samples, 0.28%)</title><rect x="49.4663%" y="1061" width="0.2762%" height="15" fill="rgb(219,200,50)"/><text x="49.7163%" y="1071.50"></text></g><g><title>imalloc_no_sample (5 samples, 0.01%)</title><rect x="49.7472%" y="949" width="0.0117%" height="15" fill="rgb(245,200,0)"/><text x="49.9972%" y="959.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_nested_expressions (130 samples, 0.30%)</title><rect x="49.4616%" y="1093" width="0.3043%" height="15" fill="rgb(245,119,33)"/><text x="49.7116%" y="1103.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (130 samples, 0.30%)</title><rect x="49.4616%" y="1077" width="0.3043%" height="15" fill="rgb(231,125,12)"/><text x="49.7116%" y="1087.50"></text></g><g><title>alloc::alloc::exchange_malloc (10 samples, 0.02%)</title><rect x="49.7425%" y="1061" width="0.0234%" height="15" fill="rgb(216,96,41)"/><text x="49.9925%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.02%)</title><rect x="49.7425%" y="1045" width="0.0234%" height="15" fill="rgb(248,43,45)"/><text x="49.9925%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.02%)</title><rect x="49.7425%" y="1029" width="0.0234%" height="15" fill="rgb(217,222,7)"/><text x="49.9925%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.02%)</title><rect x="49.7425%" y="1013" width="0.0234%" height="15" fill="rgb(233,28,6)"/><text x="49.9925%" y="1023.50"></text></g><g><title>_rjem_mallocx (8 samples, 0.02%)</title><rect x="49.7472%" y="997" width="0.0187%" height="15" fill="rgb(231,218,15)"/><text x="49.9972%" y="1007.50"></text></g><g><title>imalloc (8 samples, 0.02%)</title><rect x="49.7472%" y="981" width="0.0187%" height="15" fill="rgb(226,171,48)"/><text x="49.9972%" y="991.50"></text></g><g><title>imalloc_body (8 samples, 0.02%)</title><rect x="49.7472%" y="965" width="0.0187%" height="15" fill="rgb(235,201,9)"/><text x="49.9972%" y="975.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.02%)</title><rect x="49.7659%" y="1093" width="0.0211%" height="15" fill="rgb(217,80,15)"/><text x="50.0159%" y="1103.50"></text></g><g><title>_rjem_sdallocx (5 samples, 0.01%)</title><rect x="49.7964%" y="1093" width="0.0117%" height="15" fill="rgb(219,152,8)"/><text x="50.0464%" y="1103.50"></text></g><g><title>__rg_dealloc (5 samples, 0.01%)</title><rect x="49.8151%" y="1013" width="0.0117%" height="15" fill="rgb(243,107,38)"/><text x="50.0651%" y="1023.50"></text></g><g><title>sz_size2index_compute (5 samples, 0.01%)</title><rect x="49.8502%" y="933" width="0.0117%" height="15" fill="rgb(231,17,5)"/><text x="50.1002%" y="943.50"></text></g><g><title>sz_size2index (6 samples, 0.01%)</title><rect x="49.8502%" y="949" width="0.0140%" height="15" fill="rgb(209,25,54)"/><text x="50.1002%" y="959.50"></text></g><g><title>isfree (16 samples, 0.04%)</title><rect x="49.8502%" y="997" width="0.0375%" height="15" fill="rgb(219,0,2)"/><text x="50.1002%" y="1007.50"></text></g><g><title>isdalloct (16 samples, 0.04%)</title><rect x="49.8502%" y="981" width="0.0375%" height="15" fill="rgb(246,9,5)"/><text x="50.1002%" y="991.50"></text></g><g><title>arena_sdalloc (16 samples, 0.04%)</title><rect x="49.8502%" y="965" width="0.0375%" height="15" fill="rgb(226,159,4)"/><text x="50.1002%" y="975.50"></text></g><g><title>tcache_dalloc_small (10 samples, 0.02%)</title><rect x="49.8642%" y="949" width="0.0234%" height="15" fill="rgb(219,175,34)"/><text x="50.1142%" y="959.50"></text></g><g><title>alloc::alloc::box_free (33 samples, 0.08%)</title><rect x="49.8151%" y="1061" width="0.0772%" height="15" fill="rgb(236,10,46)"/><text x="50.0651%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (33 samples, 0.08%)</title><rect x="49.8151%" y="1045" width="0.0772%" height="15" fill="rgb(240,211,16)"/><text x="50.0651%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (33 samples, 0.08%)</title><rect x="49.8151%" y="1029" width="0.0772%" height="15" fill="rgb(205,3,43)"/><text x="50.0651%" y="1039.50"></text></g><g><title>_rjem_sdallocx (25 samples, 0.06%)</title><rect x="49.8338%" y="1013" width="0.0585%" height="15" fill="rgb(245,7,22)"/><text x="50.0838%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (34 samples, 0.08%)</title><rect x="49.8151%" y="1093" width="0.0796%" height="15" fill="rgb(239,132,32)"/><text x="50.0651%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (34 samples, 0.08%)</title><rect x="49.8151%" y="1077" width="0.0796%" height="15" fill="rgb(228,202,34)"/><text x="50.0651%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Match&gt;&gt; (5 samples, 0.01%)</title><rect x="49.8970%" y="1077" width="0.0117%" height="15" fill="rgb(254,200,22)"/><text x="50.1470%" y="1087.50"></text></g><g><title>__rg_dealloc (5 samples, 0.01%)</title><rect x="49.9111%" y="997" width="0.0117%" height="15" fill="rgb(219,10,39)"/><text x="50.1611%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (19 samples, 0.04%)</title><rect x="49.8947%" y="1093" width="0.0445%" height="15" fill="rgb(226,210,39)"/><text x="50.1447%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Send&gt;&gt; (13 samples, 0.03%)</title><rect x="49.9087%" y="1077" width="0.0304%" height="15" fill="rgb(208,219,16)"/><text x="50.1587%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Send&gt;&gt; (12 samples, 0.03%)</title><rect x="49.9111%" y="1061" width="0.0281%" height="15" fill="rgb(216,158,51)"/><text x="50.1611%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.03%)</title><rect x="49.9111%" y="1045" width="0.0281%" height="15" fill="rgb(233,14,44)"/><text x="50.1611%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.03%)</title><rect x="49.9111%" y="1029" width="0.0281%" height="15" fill="rgb(237,97,39)"/><text x="50.1611%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.03%)</title><rect x="49.9111%" y="1013" width="0.0281%" height="15" fill="rgb(218,198,43)"/><text x="50.1611%" y="1023.50"></text></g><g><title>_rjem_sdallocx (6 samples, 0.01%)</title><rect x="49.9251%" y="997" width="0.0140%" height="15" fill="rgb(231,104,20)"/><text x="50.1751%" y="1007.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.02%)</title><rect x="49.9462%" y="1061" width="0.0234%" height="15" fill="rgb(254,36,13)"/><text x="50.1962%" y="1071.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate (20 samples, 0.05%)</title><rect x="49.9391%" y="1093" width="0.0468%" height="15" fill="rgb(248,14,50)"/><text x="50.1891%" y="1103.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (20 samples, 0.05%)</title><rect x="49.9391%" y="1077" width="0.0468%" height="15" fill="rgb(217,107,29)"/><text x="50.1891%" y="1087.50"></text></g><g><title>alloc::alloc::exchange_malloc (7 samples, 0.02%)</title><rect x="49.9696%" y="1061" width="0.0164%" height="15" fill="rgb(251,169,33)"/><text x="50.2196%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.02%)</title><rect x="49.9696%" y="1045" width="0.0164%" height="15" fill="rgb(217,108,32)"/><text x="50.2196%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.02%)</title><rect x="49.9696%" y="1029" width="0.0164%" height="15" fill="rgb(219,66,42)"/><text x="50.2196%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.02%)</title><rect x="49.9696%" y="1013" width="0.0164%" height="15" fill="rgb(206,180,7)"/><text x="50.2196%" y="1023.50"></text></g><g><title>_rjem_mallocx (5 samples, 0.01%)</title><rect x="49.9743%" y="997" width="0.0117%" height="15" fill="rgb(208,226,31)"/><text x="50.2243%" y="1007.50"></text></g><g><title>imalloc (5 samples, 0.01%)</title><rect x="49.9743%" y="981" width="0.0117%" height="15" fill="rgb(218,26,49)"/><text x="50.2243%" y="991.50"></text></g><g><title>imalloc_body (5 samples, 0.01%)</title><rect x="49.9743%" y="965" width="0.0117%" height="15" fill="rgb(233,197,48)"/><text x="50.2243%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (9 samples, 0.02%)</title><rect x="49.9906%" y="1061" width="0.0211%" height="15" fill="rgb(252,181,51)"/><text x="50.2406%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (9 samples, 0.02%)</title><rect x="49.9906%" y="1045" width="0.0211%" height="15" fill="rgb(253,90,19)"/><text x="50.2406%" y="1055.50"></text></g><g><title>model::ordering::sort_par::&lt;impl model::ordering::Sortable for model::rho_types::Par&gt;::sort (14 samples, 0.03%)</title><rect x="49.9883%" y="1077" width="0.0328%" height="15" fill="rgb(215,171,30)"/><text x="50.2383%" y="1087.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_match::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Match&gt;::evaluate::{{closure}} (302 samples, 0.71%)</title><rect x="49.3376%" y="1109" width="0.7069%" height="15" fill="rgb(214,222,9)"/><text x="49.5876%" y="1119.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute (25 samples, 0.06%)</title><rect x="49.9860%" y="1093" width="0.0585%" height="15" fill="rgb(223,3,22)"/><text x="50.2360%" y="1103.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute_no_sort (10 samples, 0.02%)</title><rect x="50.0211%" y="1077" width="0.0234%" height="15" fill="rgb(225,196,46)"/><text x="50.2711%" y="1087.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.02%)</title><rect x="50.1592%" y="1045" width="0.0234%" height="15" fill="rgb(209,110,37)"/><text x="50.4092%" y="1055.50"></text></g><g><title>&lt;rho_runtime::storage::coordinator::AsyncStore as rho_runtime::storage::Storage&gt;::produce (29 samples, 0.07%)</title><rect x="50.1592%" y="1061" width="0.0679%" height="15" fill="rgb(249,89,12)"/><text x="50.4092%" y="1071.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (19 samples, 0.04%)</title><rect x="50.1826%" y="1045" width="0.0445%" height="15" fill="rgb(226,27,33)"/><text x="50.4326%" y="1055.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.03%)</title><rect x="50.1990%" y="1029" width="0.0281%" height="15" fill="rgb(213,82,22)"/><text x="50.4490%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.03%)</title><rect x="50.1990%" y="1013" width="0.0281%" height="15" fill="rgb(248,140,0)"/><text x="50.4490%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.03%)</title><rect x="50.1990%" y="997" width="0.0281%" height="15" fill="rgb(228,106,3)"/><text x="50.4490%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.03%)</title><rect x="50.1990%" y="981" width="0.0281%" height="15" fill="rgb(209,23,37)"/><text x="50.4490%" y="991.50"></text></g><g><title>_rjem_mallocx (9 samples, 0.02%)</title><rect x="50.2060%" y="965" width="0.0211%" height="15" fill="rgb(241,93,50)"/><text x="50.4560%" y="975.50"></text></g><g><title>imalloc (5 samples, 0.01%)</title><rect x="50.2153%" y="949" width="0.0117%" height="15" fill="rgb(253,46,43)"/><text x="50.4653%" y="959.50"></text></g><g><title>imalloc_body (5 samples, 0.01%)</title><rect x="50.2153%" y="933" width="0.0117%" height="15" fill="rgb(226,206,43)"/><text x="50.4653%" y="943.50"></text></g><g><title>[libc-2.31.so] (50 samples, 0.12%)</title><rect x="50.2270%" y="1061" width="0.1170%" height="15" fill="rgb(217,54,7)"/><text x="50.4770%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (103 samples, 0.24%)</title><rect x="50.1334%" y="1093" width="0.2411%" height="15" fill="rgb(223,5,52)"/><text x="50.3834%" y="1103.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::produce::{{closure}} (103 samples, 0.24%)</title><rect x="50.1334%" y="1077" width="0.2411%" height="15" fill="rgb(206,52,46)"/><text x="50.3834%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;+core::marker::Send&gt;&gt;&gt; (13 samples, 0.03%)</title><rect x="50.3441%" y="1061" width="0.0304%" height="15" fill="rgb(253,136,11)"/><text x="50.5941%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;+core::marker::Send&gt;&gt; (13 samples, 0.03%)</title><rect x="50.3441%" y="1045" width="0.0304%" height="15" fill="rgb(208,106,33)"/><text x="50.5941%" y="1055.50"></text></g><g><title>alloc::alloc::box_free (13 samples, 0.03%)</title><rect x="50.3441%" y="1029" width="0.0304%" height="15" fill="rgb(206,54,4)"/><text x="50.5941%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.03%)</title><rect x="50.3441%" y="1013" width="0.0304%" height="15" fill="rgb(213,3,15)"/><text x="50.5941%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.03%)</title><rect x="50.3441%" y="997" width="0.0304%" height="15" fill="rgb(252,211,39)"/><text x="50.5941%" y="1007.50"></text></g><g><title>_rjem_sdallocx (11 samples, 0.03%)</title><rect x="50.3488%" y="981" width="0.0257%" height="15" fill="rgb(223,6,36)"/><text x="50.5988%" y="991.50"></text></g><g><title>isfree (9 samples, 0.02%)</title><rect x="50.3534%" y="965" width="0.0211%" height="15" fill="rgb(252,169,45)"/><text x="50.6034%" y="975.50"></text></g><g><title>isdalloct (9 samples, 0.02%)</title><rect x="50.3534%" y="949" width="0.0211%" height="15" fill="rgb(212,48,26)"/><text x="50.6034%" y="959.50"></text></g><g><title>arena_sdalloc (9 samples, 0.02%)</title><rect x="50.3534%" y="933" width="0.0211%" height="15" fill="rgb(251,102,48)"/><text x="50.6034%" y="943.50"></text></g><g><title>tcache_dalloc_small (7 samples, 0.02%)</title><rect x="50.3581%" y="917" width="0.0164%" height="15" fill="rgb(243,208,16)"/><text x="50.6081%" y="927.50"></text></g><g><title>[libc-2.31.so] (163 samples, 0.38%)</title><rect x="50.3909%" y="1061" width="0.3815%" height="15" fill="rgb(219,96,24)"/><text x="50.6409%" y="1071.50"></text></g><g><title>imalloc_no_sample (5 samples, 0.01%)</title><rect x="50.7958%" y="949" width="0.0117%" height="15" fill="rgb(219,33,29)"/><text x="51.0458%" y="959.50"></text></g><g><title>iallocztm (5 samples, 0.01%)</title><rect x="50.7958%" y="933" width="0.0117%" height="15" fill="rgb(223,176,5)"/><text x="51.0458%" y="943.50"></text></g><g><title>arena_malloc (5 samples, 0.01%)</title><rect x="50.7958%" y="917" width="0.0117%" height="15" fill="rgb(228,140,14)"/><text x="51.0458%" y="927.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_nested_expressions (192 samples, 0.45%)</title><rect x="50.3839%" y="1093" width="0.4494%" height="15" fill="rgb(217,179,31)"/><text x="50.6339%" y="1103.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (192 samples, 0.45%)</title><rect x="50.3839%" y="1077" width="0.4494%" height="15" fill="rgb(230,9,30)"/><text x="50.6339%" y="1087.50"></text></g><g><title>alloc::alloc::exchange_malloc (26 samples, 0.06%)</title><rect x="50.7724%" y="1061" width="0.0609%" height="15" fill="rgb(230,136,20)"/><text x="51.0224%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (26 samples, 0.06%)</title><rect x="50.7724%" y="1045" width="0.0609%" height="15" fill="rgb(215,210,22)"/><text x="51.0224%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (26 samples, 0.06%)</title><rect x="50.7724%" y="1029" width="0.0609%" height="15" fill="rgb(218,43,5)"/><text x="51.0224%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (26 samples, 0.06%)</title><rect x="50.7724%" y="1013" width="0.0609%" height="15" fill="rgb(216,11,5)"/><text x="51.0224%" y="1023.50"></text></g><g><title>_rjem_mallocx (24 samples, 0.06%)</title><rect x="50.7771%" y="997" width="0.0562%" height="15" fill="rgb(209,82,29)"/><text x="51.0271%" y="1007.50"></text></g><g><title>imalloc (18 samples, 0.04%)</title><rect x="50.7912%" y="981" width="0.0421%" height="15" fill="rgb(244,115,12)"/><text x="51.0412%" y="991.50"></text></g><g><title>imalloc_body (18 samples, 0.04%)</title><rect x="50.7912%" y="965" width="0.0421%" height="15" fill="rgb(222,82,18)"/><text x="51.0412%" y="975.50"></text></g><g><title>sz_size2index (11 samples, 0.03%)</title><rect x="50.8075%" y="949" width="0.0257%" height="15" fill="rgb(249,227,8)"/><text x="51.0575%" y="959.50"></text></g><g><title>sz_size2index_compute (10 samples, 0.02%)</title><rect x="50.8099%" y="933" width="0.0234%" height="15" fill="rgb(253,141,45)"/><text x="51.0599%" y="943.50"></text></g><g><title>[libc-2.31.so] (38 samples, 0.09%)</title><rect x="50.8333%" y="1093" width="0.0889%" height="15" fill="rgb(234,184,4)"/><text x="51.0833%" y="1103.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.02%)</title><rect x="50.9222%" y="997" width="0.0211%" height="15" fill="rgb(218,194,23)"/><text x="51.1722%" y="1007.50"></text></g><g><title>_rjem_mallocx (5 samples, 0.01%)</title><rect x="50.9316%" y="981" width="0.0117%" height="15" fill="rgb(235,66,41)"/><text x="51.1816%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (12 samples, 0.03%)</title><rect x="50.9222%" y="1061" width="0.0281%" height="15" fill="rgb(245,217,1)"/><text x="51.1722%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (12 samples, 0.03%)</title><rect x="50.9222%" y="1045" width="0.0281%" height="15" fill="rgb(229,91,1)"/><text x="51.1722%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (12 samples, 0.03%)</title><rect x="50.9222%" y="1029" width="0.0281%" height="15" fill="rgb(207,101,30)"/><text x="51.1722%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.03%)</title><rect x="50.9222%" y="1013" width="0.0281%" height="15" fill="rgb(223,82,49)"/><text x="51.1722%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (17 samples, 0.04%)</title><rect x="50.9222%" y="1093" width="0.0398%" height="15" fill="rgb(218,167,17)"/><text x="51.1722%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (17 samples, 0.04%)</title><rect x="50.9222%" y="1077" width="0.0398%" height="15" fill="rgb(208,103,14)"/><text x="51.1722%" y="1087.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.01%)</title><rect x="50.9503%" y="1061" width="0.0117%" height="15" fill="rgb(238,20,8)"/><text x="51.2003%" y="1071.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.01%)</title><rect x="50.9503%" y="1045" width="0.0117%" height="15" fill="rgb(218,80,54)"/><text x="51.2003%" y="1055.50"></text></g><g><title>sz_size2index (5 samples, 0.01%)</title><rect x="50.9995%" y="949" width="0.0117%" height="15" fill="rgb(240,144,17)"/><text x="51.2495%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (25 samples, 0.06%)</title><rect x="50.9714%" y="1093" width="0.0585%" height="15" fill="rgb(245,27,50)"/><text x="51.2214%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (25 samples, 0.06%)</title><rect x="50.9714%" y="1077" width="0.0585%" height="15" fill="rgb(251,51,7)"/><text x="51.2214%" y="1087.50"></text></g><g><title>alloc::alloc::box_free (25 samples, 0.06%)</title><rect x="50.9714%" y="1061" width="0.0585%" height="15" fill="rgb(245,217,29)"/><text x="51.2214%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (23 samples, 0.05%)</title><rect x="50.9761%" y="1045" width="0.0538%" height="15" fill="rgb(221,176,29)"/><text x="51.2261%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (23 samples, 0.05%)</title><rect x="50.9761%" y="1029" width="0.0538%" height="15" fill="rgb(212,180,24)"/><text x="51.2261%" y="1039.50"></text></g><g><title>_rjem_sdallocx (21 samples, 0.05%)</title><rect x="50.9808%" y="1013" width="0.0492%" height="15" fill="rgb(254,24,2)"/><text x="51.2308%" y="1023.50"></text></g><g><title>isfree (13 samples, 0.03%)</title><rect x="50.9995%" y="997" width="0.0304%" height="15" fill="rgb(230,100,2)"/><text x="51.2495%" y="1007.50"></text></g><g><title>isdalloct (13 samples, 0.03%)</title><rect x="50.9995%" y="981" width="0.0304%" height="15" fill="rgb(219,142,25)"/><text x="51.2495%" y="991.50"></text></g><g><title>arena_sdalloc (13 samples, 0.03%)</title><rect x="50.9995%" y="965" width="0.0304%" height="15" fill="rgb(240,73,43)"/><text x="51.2495%" y="975.50"></text></g><g><title>tcache_dalloc_small (8 samples, 0.02%)</title><rect x="51.0112%" y="949" width="0.0187%" height="15" fill="rgb(214,114,15)"/><text x="51.2612%" y="959.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate::{{closure}} (738 samples, 1.73%)</title><rect x="49.3189%" y="1157" width="1.7274%" height="15" fill="rgb(207,130,4)"/><text x="49.5689%" y="1167.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (738 samples, 1.73%)</title><rect x="49.3189%" y="1141" width="1.7274%" height="15" fill="rgb(221,25,40)"/><text x="49.5689%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (738 samples, 1.73%)</title><rect x="49.3189%" y="1125" width="1.7274%" height="15" fill="rgb(241,184,7)"/><text x="49.5689%" y="1135.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_send::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Send&gt;::evaluate::{{closure}} (428 samples, 1.00%)</title><rect x="50.0445%" y="1109" width="1.0018%" height="15" fill="rgb(235,159,4)"/><text x="50.2945%" y="1119.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute (5 samples, 0.01%)</title><rect x="51.0346%" y="1093" width="0.0117%" height="15" fill="rgb(214,87,48)"/><text x="51.2846%" y="1103.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::news_score (13 samples, 0.03%)</title><rect x="51.1774%" y="997" width="0.0304%" height="15" fill="rgb(246,198,24)"/><text x="51.4274%" y="1007.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::matches_score (6 samples, 0.01%)</title><rect x="51.1938%" y="981" width="0.0140%" height="15" fill="rgb(209,66,40)"/><text x="51.4438%" y="991.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::bundles_score (6 samples, 0.01%)</title><rect x="51.1938%" y="965" width="0.0140%" height="15" fill="rgb(233,147,39)"/><text x="51.4438%" y="975.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::connectives_score (6 samples, 0.01%)</title><rect x="51.1938%" y="949" width="0.0140%" height="15" fill="rgb(231,145,52)"/><text x="51.4438%" y="959.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::unforgeables_score (6 samples, 0.01%)</title><rect x="51.1938%" y="933" width="0.0140%" height="15" fill="rgb(206,20,26)"/><text x="51.4438%" y="943.50"></text></g><g><title>model::ordering::sort_unforgeable::&lt;impl model::ordering::Scorable for &amp;model::rho_types::GUnforgeable&gt;::score_tree_iter (5 samples, 0.01%)</title><rect x="51.1961%" y="917" width="0.0117%" height="15" fill="rgb(238,220,4)"/><text x="51.4461%" y="927.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::receives_score (6 samples, 0.01%)</title><rect x="51.2078%" y="997" width="0.0140%" height="15" fill="rgb(252,195,42)"/><text x="51.4578%" y="1007.50"></text></g><g><title>&lt;model::ordering::ScoreTreeIter as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.09%)</title><rect x="51.1352%" y="1029" width="0.0889%" height="15" fill="rgb(209,10,6)"/><text x="51.3852%" y="1039.50"></text></g><g><title>&lt;model::ordering::sort_par::ParScoreTreeIter as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.08%)</title><rect x="51.1423%" y="1013" width="0.0819%" height="15" fill="rgb(229,3,52)"/><text x="51.3923%" y="1023.50"></text></g><g><title>&lt;model::ordering::ScoreTreeIter as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.03%)</title><rect x="51.2382%" y="1013" width="0.0328%" height="15" fill="rgb(253,49,37)"/><text x="51.4882%" y="1023.50"></text></g><g><title>&lt;model::ordering::sort_unforgeable::UnforgeableScoreTreeIter as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="51.2546%" y="997" width="0.0164%" height="15" fill="rgb(240,103,49)"/><text x="51.5046%" y="1007.50"></text></g><g><title>model::ordering::sort_unforgeable::UnforgeableScoreTreeIter::private_body_next (7 samples, 0.02%)</title><rect x="51.2546%" y="981" width="0.0164%" height="15" fill="rgb(250,182,30)"/><text x="51.5046%" y="991.50"></text></g><g><title>core::cmp::min (5 samples, 0.01%)</title><rect x="51.3202%" y="949" width="0.0117%" height="15" fill="rgb(248,8,30)"/><text x="51.5702%" y="959.50"></text></g><g><title>core::cmp::Ord::min (5 samples, 0.01%)</title><rect x="51.3202%" y="933" width="0.0117%" height="15" fill="rgb(237,120,30)"/><text x="51.5702%" y="943.50"></text></g><g><title>core::cmp::min_by (5 samples, 0.01%)</title><rect x="51.3202%" y="917" width="0.0117%" height="15" fill="rgb(221,146,34)"/><text x="51.5702%" y="927.50"></text></g><g><title>blake3::ChunkState::fill_buf (29 samples, 0.07%)</title><rect x="51.3108%" y="965" width="0.0679%" height="15" fill="rgb(242,55,13)"/><text x="51.5608%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (20 samples, 0.05%)</title><rect x="51.3319%" y="949" width="0.0468%" height="15" fill="rgb(242,112,31)"/><text x="51.5819%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (20 samples, 0.05%)</title><rect x="51.3319%" y="933" width="0.0468%" height="15" fill="rgb(249,192,27)"/><text x="51.5819%" y="943.50"></text></g><g><title>[libc-2.31.so] (20 samples, 0.05%)</title><rect x="51.3319%" y="917" width="0.0468%" height="15" fill="rgb(208,204,44)"/><text x="51.5819%" y="927.50"></text></g><g><title>blake3::ChunkState::update (42 samples, 0.10%)</title><rect x="51.2897%" y="981" width="0.0983%" height="15" fill="rgb(208,93,54)"/><text x="51.5397%" y="991.50"></text></g><g><title>blake3::Hasher::update (54 samples, 0.13%)</title><rect x="51.2710%" y="1013" width="0.1264%" height="15" fill="rgb(242,1,31)"/><text x="51.5210%" y="1023.50"></text></g><g><title>blake3::Hasher::update_with_join (54 samples, 0.13%)</title><rect x="51.2710%" y="997" width="0.1264%" height="15" fill="rgb(241,83,25)"/><text x="51.5210%" y="1007.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash::traverse (75 samples, 0.18%)</title><rect x="51.2242%" y="1029" width="0.1756%" height="15" fill="rgb(205,169,50)"/><text x="51.4742%" y="1039.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (15 samples, 0.04%)</title><rect x="51.4629%" y="965" width="0.0351%" height="15" fill="rgb(239,186,37)"/><text x="51.7129%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.04%)</title><rect x="51.4629%" y="949" width="0.0351%" height="15" fill="rgb(205,221,10)"/><text x="51.7129%" y="959.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.03%)</title><rect x="51.4723%" y="933" width="0.0257%" height="15" fill="rgb(218,196,15)"/><text x="51.7223%" y="943.50"></text></g><g><title>blake3::ChunkState::fill_buf (30 samples, 0.07%)</title><rect x="51.4419%" y="981" width="0.0702%" height="15" fill="rgb(218,196,35)"/><text x="51.6919%" y="991.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (6 samples, 0.01%)</title><rect x="51.4981%" y="965" width="0.0140%" height="15" fill="rgb(233,63,24)"/><text x="51.7481%" y="975.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (6 samples, 0.01%)</title><rect x="51.4981%" y="949" width="0.0140%" height="15" fill="rgb(225,8,4)"/><text x="51.7481%" y="959.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (6 samples, 0.01%)</title><rect x="51.4981%" y="933" width="0.0140%" height="15" fill="rgb(234,105,35)"/><text x="51.7481%" y="943.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (6 samples, 0.01%)</title><rect x="51.4981%" y="917" width="0.0140%" height="15" fill="rgb(236,21,32)"/><text x="51.7481%" y="927.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (6 samples, 0.01%)</title><rect x="51.4981%" y="901" width="0.0140%" height="15" fill="rgb(228,109,6)"/><text x="51.7481%" y="911.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (6 samples, 0.01%)</title><rect x="51.4981%" y="885" width="0.0140%" height="15" fill="rgb(229,215,31)"/><text x="51.7481%" y="895.50"></text></g><g><title>blake3::ChunkState::update (41 samples, 0.10%)</title><rect x="51.4232%" y="997" width="0.0960%" height="15" fill="rgb(221,52,54)"/><text x="51.6732%" y="1007.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash::traverse (178 samples, 0.42%)</title><rect x="51.1142%" y="1045" width="0.4166%" height="15" fill="rgb(252,129,43)"/><text x="51.3642%" y="1055.50"></text></g><g><title>blake3::Hasher::update (56 samples, 0.13%)</title><rect x="51.3997%" y="1029" width="0.1311%" height="15" fill="rgb(248,183,27)"/><text x="51.6497%" y="1039.50"></text></g><g><title>blake3::Hasher::update_with_join (56 samples, 0.13%)</title><rect x="51.3997%" y="1013" width="0.1311%" height="15" fill="rgb(250,0,22)"/><text x="51.6497%" y="1023.50"></text></g><g><title>blake3::Hasher::final_output (5 samples, 0.01%)</title><rect x="51.5332%" y="1029" width="0.0117%" height="15" fill="rgb(213,166,10)"/><text x="51.7832%" y="1039.50"></text></g><g><title>blake3::ChunkState::output (5 samples, 0.01%)</title><rect x="51.5332%" y="1013" width="0.0117%" height="15" fill="rgb(207,163,36)"/><text x="51.7832%" y="1023.50"></text></g><g><title>blake3::Hasher::finalize (10 samples, 0.02%)</title><rect x="51.5308%" y="1045" width="0.0234%" height="15" fill="rgb(208,122,22)"/><text x="51.7808%" y="1055.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash (194 samples, 0.45%)</title><rect x="51.1072%" y="1061" width="0.4541%" height="15" fill="rgb(207,104,49)"/><text x="51.3572%" y="1071.50"></text></g><g><title>[libc-2.31.so] (102 samples, 0.24%)</title><rect x="51.5613%" y="1061" width="0.2388%" height="15" fill="rgb(248,211,50)"/><text x="51.8113%" y="1071.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (10 samples, 0.02%)</title><rect x="51.8141%" y="1045" width="0.0234%" height="15" fill="rgb(217,13,45)"/><text x="52.0641%" y="1055.50"></text></g><g><title>core::ptr::write (10 samples, 0.02%)</title><rect x="51.8141%" y="1029" width="0.0234%" height="15" fill="rgb(211,216,49)"/><text x="52.0641%" y="1039.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.02%)</title><rect x="51.8141%" y="1013" width="0.0234%" height="15" fill="rgb(221,58,53)"/><text x="52.0641%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (56 samples, 0.13%)</title><rect x="51.8375%" y="1045" width="0.1311%" height="15" fill="rgb(220,112,41)"/><text x="52.0875%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (56 samples, 0.13%)</title><rect x="51.8375%" y="1029" width="0.1311%" height="15" fill="rgb(236,38,28)"/><text x="52.0875%" y="1039.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::push (100 samples, 0.23%)</title><rect x="51.8024%" y="1061" width="0.2341%" height="15" fill="rgb(227,195,22)"/><text x="52.0524%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (29 samples, 0.07%)</title><rect x="51.9685%" y="1045" width="0.0679%" height="15" fill="rgb(214,55,33)"/><text x="52.2185%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_load (29 samples, 0.07%)</title><rect x="51.9685%" y="1029" width="0.0679%" height="15" fill="rgb(248,80,13)"/><text x="52.2185%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (39 samples, 0.09%)</title><rect x="52.0528%" y="1045" width="0.0913%" height="15" fill="rgb(238,52,6)"/><text x="52.3028%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_load (39 samples, 0.09%)</title><rect x="52.0528%" y="1029" width="0.0913%" height="15" fill="rgb(224,198,47)"/><text x="52.3028%" y="1039.50"></text></g><g><title>core::mem::drop (14 samples, 0.03%)</title><rect x="52.1511%" y="997" width="0.0328%" height="15" fill="rgb(233,171,20)"/><text x="52.4011%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,()&gt;&gt; (14 samples, 0.03%)</title><rect x="52.1511%" y="981" width="0.0328%" height="15" fill="rgb(241,30,25)"/><text x="52.4011%" y="991.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.03%)</title><rect x="52.1511%" y="965" width="0.0328%" height="15" fill="rgb(207,171,38)"/><text x="52.4011%" y="975.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (14 samples, 0.03%)</title><rect x="52.1511%" y="949" width="0.0328%" height="15" fill="rgb(234,70,1)"/><text x="52.4011%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (10 samples, 0.02%)</title><rect x="52.1605%" y="933" width="0.0234%" height="15" fill="rgb(232,178,18)"/><text x="52.4105%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (10 samples, 0.02%)</title><rect x="52.1605%" y="917" width="0.0234%" height="15" fill="rgb(241,78,40)"/><text x="52.4105%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (52 samples, 0.12%)</title><rect x="52.1839%" y="997" width="0.1217%" height="15" fill="rgb(222,35,25)"/><text x="52.4339%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_swap (52 samples, 0.12%)</title><rect x="52.1839%" y="981" width="0.1217%" height="15" fill="rgb(207,92,16)"/><text x="52.4339%" y="991.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (3,380 samples, 7.91%)</title><rect x="52.3243%" y="933" width="7.9116%" height="15" fill="rgb(216,59,51)"/><text x="52.5743%" y="943.50">&lt;parking_lo..</text></g><g><title>syscall (3,377 samples, 7.90%)</title><rect x="52.3314%" y="917" width="7.9046%" height="15" fill="rgb(213,80,28)"/><text x="52.5814%" y="927.50">syscall</text></g><g><title>[unknown] (3,368 samples, 7.88%)</title><rect x="52.3524%" y="901" width="7.8835%" height="15" fill="rgb(220,93,7)"/><text x="52.6024%" y="911.50">[unknown]</text></g><g><title>[unknown] (3,340 samples, 7.82%)</title><rect x="52.4180%" y="885" width="7.8180%" height="15" fill="rgb(225,24,44)"/><text x="52.6680%" y="895.50">[unknown]</text></g><g><title>[unknown] (3,329 samples, 7.79%)</title><rect x="52.4437%" y="869" width="7.7922%" height="15" fill="rgb(243,74,40)"/><text x="52.6937%" y="879.50">[unknown]</text></g><g><title>[unknown] (3,326 samples, 7.79%)</title><rect x="52.4507%" y="853" width="7.7852%" height="15" fill="rgb(228,39,7)"/><text x="52.7007%" y="863.50">[unknown]</text></g><g><title>[unknown] (3,314 samples, 7.76%)</title><rect x="52.4788%" y="837" width="7.7571%" height="15" fill="rgb(227,79,8)"/><text x="52.7288%" y="847.50">[unknown]</text></g><g><title>[unknown] (2,839 samples, 6.65%)</title><rect x="53.5907%" y="821" width="6.6453%" height="15" fill="rgb(236,58,11)"/><text x="53.8407%" y="831.50">[unknown]</text></g><g><title>[unknown] (2,701 samples, 6.32%)</title><rect x="53.9137%" y="805" width="6.3223%" height="15" fill="rgb(249,63,35)"/><text x="54.1637%" y="815.50">[unknown]</text></g><g><title>[unknown] (2,418 samples, 5.66%)</title><rect x="54.5761%" y="789" width="5.6598%" height="15" fill="rgb(252,114,16)"/><text x="54.8261%" y="799.50">[unknow..</text></g><g><title>[unknown] (2,050 samples, 4.80%)</title><rect x="55.4375%" y="773" width="4.7985%" height="15" fill="rgb(254,151,24)"/><text x="55.6875%" y="783.50">[unkno..</text></g><g><title>[unknown] (1,251 samples, 2.93%)</title><rect x="57.3077%" y="757" width="2.9282%" height="15" fill="rgb(253,54,39)"/><text x="57.5577%" y="767.50">[u..</text></g><g><title>[unknown] (506 samples, 1.18%)</title><rect x="59.0515%" y="741" width="1.1844%" height="15" fill="rgb(243,25,45)"/><text x="59.3015%" y="751.50"></text></g><g><title>[unknown] (138 samples, 0.32%)</title><rect x="59.9129%" y="725" width="0.3230%" height="15" fill="rgb(234,134,9)"/><text x="60.1629%" y="735.50"></text></g><g><title>[unknown] (19 samples, 0.04%)</title><rect x="60.1915%" y="709" width="0.0445%" height="15" fill="rgb(227,166,31)"/><text x="60.4415%" y="719.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (5 samples, 0.01%)</title><rect x="60.2359%" y="933" width="0.0117%" height="15" fill="rgb(245,143,41)"/><text x="60.4859%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (153 samples, 0.36%)</title><rect x="60.2570%" y="933" width="0.3581%" height="15" fill="rgb(238,181,32)"/><text x="60.5070%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_load (153 samples, 0.36%)</title><rect x="60.2570%" y="917" width="0.3581%" height="15" fill="rgb(224,113,18)"/><text x="60.5070%" y="927.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (25 samples, 0.06%)</title><rect x="60.6151%" y="933" width="0.0585%" height="15" fill="rgb(240,229,28)"/><text x="60.8651%" y="943.50"></text></g><g><title>std::time::Instant::now (19 samples, 0.04%)</title><rect x="60.6292%" y="917" width="0.0445%" height="15" fill="rgb(250,185,3)"/><text x="60.8792%" y="927.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (19 samples, 0.04%)</title><rect x="60.6292%" y="901" width="0.0445%" height="15" fill="rgb(212,59,25)"/><text x="60.8792%" y="911.50"></text></g><g><title>std::sys::unix::time::inner::now (19 samples, 0.04%)</title><rect x="60.6292%" y="885" width="0.0445%" height="15" fill="rgb(221,87,20)"/><text x="60.8792%" y="895.50"></text></g><g><title>__clock_gettime (19 samples, 0.04%)</title><rect x="60.6292%" y="869" width="0.0445%" height="15" fill="rgb(213,74,28)"/><text x="60.8792%" y="879.50"></text></g><g><title>__vdso_clock_gettime (19 samples, 0.04%)</title><rect x="60.6292%" y="853" width="0.0445%" height="15" fill="rgb(224,132,34)"/><text x="60.8792%" y="863.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (91 samples, 0.21%)</title><rect x="60.6737%" y="933" width="0.2130%" height="15" fill="rgb(222,101,24)"/><text x="60.9237%" y="943.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (88 samples, 0.21%)</title><rect x="60.6807%" y="917" width="0.2060%" height="15" fill="rgb(254,142,4)"/><text x="60.9307%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (87 samples, 0.20%)</title><rect x="60.6830%" y="901" width="0.2036%" height="15" fill="rgb(230,229,49)"/><text x="60.9330%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (87 samples, 0.20%)</title><rect x="60.6830%" y="885" width="0.2036%" height="15" fill="rgb(238,70,47)"/><text x="60.9330%" y="895.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::notify_one (3,740 samples, 8.75%)</title><rect x="52.3056%" y="997" width="8.7543%" height="15" fill="rgb(231,160,17)"/><text x="52.5556%" y="1007.50">tokio::loom:..</text></g><g><title>parking_lot::condvar::Condvar::notify_one (3,740 samples, 8.75%)</title><rect x="52.3056%" y="981" width="8.7543%" height="15" fill="rgb(218,68,53)"/><text x="52.5556%" y="991.50">parking_lot:..</text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (3,740 samples, 8.75%)</title><rect x="52.3056%" y="965" width="8.7543%" height="15" fill="rgb(236,111,10)"/><text x="52.5556%" y="975.50">parking_lot:..</text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (3,738 samples, 8.75%)</title><rect x="52.3103%" y="949" width="8.7496%" height="15" fill="rgb(224,34,41)"/><text x="52.5603%" y="959.50">parking_lot_..</text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (74 samples, 0.17%)</title><rect x="60.8867%" y="933" width="0.1732%" height="15" fill="rgb(241,118,19)"/><text x="61.1367%" y="943.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (74 samples, 0.17%)</title><rect x="60.8867%" y="917" width="0.1732%" height="15" fill="rgb(238,129,25)"/><text x="61.1367%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (71 samples, 0.17%)</title><rect x="60.8937%" y="901" width="0.1662%" height="15" fill="rgb(238,22,31)"/><text x="61.1437%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_sub (71 samples, 0.17%)</title><rect x="60.8937%" y="885" width="0.1662%" height="15" fill="rgb(222,174,48)"/><text x="61.1437%" y="895.50"></text></g><g><title>core::task::wake::Waker::wake (3,816 samples, 8.93%)</title><rect x="52.1441%" y="1045" width="8.9322%" height="15" fill="rgb(206,152,40)"/><text x="52.3941%" y="1055.50">core::task::w..</text></g><g><title>tokio::park::thread::wake (3,816 samples, 8.93%)</title><rect x="52.1441%" y="1029" width="8.9322%" height="15" fill="rgb(218,99,54)"/><text x="52.3941%" y="1039.50">tokio::park::..</text></g><g><title>tokio::park::thread::Inner::unpark (3,813 samples, 8.93%)</title><rect x="52.1511%" y="1013" width="8.9251%" height="15" fill="rgb(220,174,26)"/><text x="52.4011%" y="1023.50">tokio::park::..</text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (7 samples, 0.02%)</title><rect x="61.0599%" y="997" width="0.0164%" height="15" fill="rgb(245,116,9)"/><text x="61.3099%" y="1007.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (7 samples, 0.02%)</title><rect x="61.0599%" y="981" width="0.0164%" height="15" fill="rgb(209,72,35)"/><text x="61.3099%" y="991.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (7 samples, 0.02%)</title><rect x="61.0599%" y="965" width="0.0164%" height="15" fill="rgb(226,126,21)"/><text x="61.3099%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (7 samples, 0.02%)</title><rect x="61.0599%" y="949" width="0.0164%" height="15" fill="rgb(227,192,1)"/><text x="61.3099%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (7 samples, 0.02%)</title><rect x="61.0599%" y="933" width="0.0164%" height="15" fill="rgb(237,180,29)"/><text x="61.3099%" y="943.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (191 samples, 0.45%)</title><rect x="61.0763%" y="1045" width="0.4471%" height="15" fill="rgb(230,197,35)"/><text x="61.3263%" y="1055.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (191 samples, 0.45%)</title><rect x="61.0763%" y="1029" width="0.4471%" height="15" fill="rgb(246,193,31)"/><text x="61.3263%" y="1039.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (191 samples, 0.45%)</title><rect x="61.0763%" y="1013" width="0.4471%" height="15" fill="rgb(241,36,4)"/><text x="61.3263%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (191 samples, 0.45%)</title><rect x="61.0763%" y="997" width="0.4471%" height="15" fill="rgb(241,130,17)"/><text x="61.3263%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (191 samples, 0.45%)</title><rect x="61.0763%" y="981" width="0.4471%" height="15" fill="rgb(206,137,32)"/><text x="61.3263%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (61 samples, 0.14%)</title><rect x="61.5304%" y="1029" width="0.1428%" height="15" fill="rgb(237,228,51)"/><text x="61.7804%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_store (61 samples, 0.14%)</title><rect x="61.5304%" y="1013" width="0.1428%" height="15" fill="rgb(243,6,42)"/><text x="61.7804%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (10 samples, 0.02%)</title><rect x="61.6755%" y="1013" width="0.0234%" height="15" fill="rgb(251,74,28)"/><text x="61.9255%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (10 samples, 0.02%)</title><rect x="61.6755%" y="997" width="0.0234%" height="15" fill="rgb(218,20,49)"/><text x="61.9255%" y="1007.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (28 samples, 0.07%)</title><rect x="61.6731%" y="1029" width="0.0655%" height="15" fill="rgb(238,28,14)"/><text x="61.9231%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (17 samples, 0.04%)</title><rect x="61.6989%" y="1013" width="0.0398%" height="15" fill="rgb(229,40,46)"/><text x="61.9489%" y="1023.50"></text></g><g><title>tokio::sync::notify::Notify::notify_one (4,208 samples, 9.85%)</title><rect x="52.0364%" y="1061" width="9.8497%" height="15" fill="rgb(244,195,20)"/><text x="52.2864%" y="1071.50">tokio::sync::n..</text></g><g><title>tokio::sync::notify::notify_locked (154 samples, 0.36%)</title><rect x="61.5257%" y="1045" width="0.3605%" height="15" fill="rgb(253,56,35)"/><text x="61.7757%" y="1055.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::pop_back (63 samples, 0.15%)</title><rect x="61.7387%" y="1029" width="0.1475%" height="15" fill="rgb(210,149,44)"/><text x="61.9887%" y="1039.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (26 samples, 0.06%)</title><rect x="61.8955%" y="1045" width="0.0609%" height="15" fill="rgb(240,135,12)"/><text x="62.1455%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (24 samples, 0.06%)</title><rect x="61.9002%" y="1029" width="0.0562%" height="15" fill="rgb(251,24,50)"/><text x="62.1502%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_add (24 samples, 0.06%)</title><rect x="61.9002%" y="1013" width="0.0562%" height="15" fill="rgb(243,200,47)"/><text x="62.1502%" y="1023.50"></text></g><g><title>[libc-2.31.so] (21 samples, 0.05%)</title><rect x="61.9611%" y="1029" width="0.0492%" height="15" fill="rgb(224,166,26)"/><text x="62.2111%" y="1039.50"></text></g><g><title>imalloc_body (11 samples, 0.03%)</title><rect x="62.0149%" y="933" width="0.0257%" height="15" fill="rgb(233,0,47)"/><text x="62.2649%" y="943.50"></text></g><g><title>&lt;rho_runtime::storage::coordinator::AsyncStore as rho_runtime::storage::Storage&gt;::produce::{{closure}} (4,696 samples, 10.99%)</title><rect x="51.0510%" y="1077" width="10.9920%" height="15" fill="rgb(253,80,5)"/><text x="51.3010%" y="1087.50">&lt;rho_runtime::st..</text></g><g><title>tokio::sync::oneshot::channel (67 samples, 0.16%)</title><rect x="61.8861%" y="1061" width="0.1568%" height="15" fill="rgb(214,133,25)"/><text x="62.1361%" y="1071.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (37 samples, 0.09%)</title><rect x="61.9564%" y="1045" width="0.0866%" height="15" fill="rgb(209,27,14)"/><text x="62.2064%" y="1055.50"></text></g><g><title>alloc::alloc::exchange_malloc (14 samples, 0.03%)</title><rect x="62.0102%" y="1029" width="0.0328%" height="15" fill="rgb(219,102,51)"/><text x="62.2602%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.03%)</title><rect x="62.0102%" y="1013" width="0.0328%" height="15" fill="rgb(237,18,16)"/><text x="62.2602%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.03%)</title><rect x="62.0102%" y="997" width="0.0328%" height="15" fill="rgb(241,85,17)"/><text x="62.2602%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.03%)</title><rect x="62.0102%" y="981" width="0.0328%" height="15" fill="rgb(236,90,42)"/><text x="62.2602%" y="991.50"></text></g><g><title>_rjem_mallocx (13 samples, 0.03%)</title><rect x="62.0125%" y="965" width="0.0304%" height="15" fill="rgb(249,57,21)"/><text x="62.2625%" y="975.50"></text></g><g><title>imalloc (12 samples, 0.03%)</title><rect x="62.0149%" y="949" width="0.0281%" height="15" fill="rgb(243,12,36)"/><text x="62.2649%" y="959.50"></text></g><g><title>[libc-2.31.so] (21 samples, 0.05%)</title><rect x="62.0430%" y="1077" width="0.0492%" height="15" fill="rgb(253,128,47)"/><text x="62.2930%" y="1087.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (4,723 samples, 11.06%)</title><rect x="51.0463%" y="1109" width="11.0552%" height="15" fill="rgb(207,33,20)"/><text x="51.2963%" y="1119.50">&lt;core::pin::Pin&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,723 samples, 11.06%)</title><rect x="51.0463%" y="1093" width="11.0552%" height="15" fill="rgb(233,215,35)"/><text x="51.2963%" y="1103.50">&lt;core::future::f..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,724 samples, 11.06%)</title><rect x="51.0463%" y="1141" width="11.0575%" height="15" fill="rgb(249,188,52)"/><text x="51.2963%" y="1151.50">&lt;core::future::f..</text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::produce::{{closure}} (4,724 samples, 11.06%)</title><rect x="51.0463%" y="1125" width="11.0575%" height="15" fill="rgb(225,12,32)"/><text x="51.2963%" y="1135.50">rho_runtime::int..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="62.1553%" y="1093" width="0.0140%" height="15" fill="rgb(247,98,14)"/><text x="62.4053%" y="1103.50"></text></g><g><title>core::ptr::read (5 samples, 0.01%)</title><rect x="62.1577%" y="1077" width="0.0117%" height="15" fill="rgb(247,219,48)"/><text x="62.4077%" y="1087.50"></text></g><g><title>[libc-2.31.so] (31 samples, 0.07%)</title><rect x="62.1694%" y="1093" width="0.0726%" height="15" fill="rgb(253,60,48)"/><text x="62.4194%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (13 samples, 0.03%)</title><rect x="62.2419%" y="1093" width="0.0304%" height="15" fill="rgb(245,15,52)"/><text x="62.4919%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (13 samples, 0.03%)</title><rect x="62.2419%" y="1077" width="0.0304%" height="15" fill="rgb(220,133,28)"/><text x="62.4919%" y="1087.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.03%)</title><rect x="62.2443%" y="1061" width="0.0281%" height="15" fill="rgb(217,180,4)"/><text x="62.4943%" y="1071.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.02%)</title><rect x="62.2490%" y="1045" width="0.0234%" height="15" fill="rgb(251,24,1)"/><text x="62.4990%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.03%)</title><rect x="62.2724%" y="1029" width="0.0328%" height="15" fill="rgb(212,185,49)"/><text x="62.5224%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.03%)</title><rect x="62.2724%" y="1013" width="0.0328%" height="15" fill="rgb(215,175,22)"/><text x="62.5224%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.03%)</title><rect x="62.2770%" y="997" width="0.0281%" height="15" fill="rgb(250,205,14)"/><text x="62.5270%" y="1007.50"></text></g><g><title>_rjem_mallocx (9 samples, 0.02%)</title><rect x="62.2841%" y="981" width="0.0211%" height="15" fill="rgb(225,211,22)"/><text x="62.5341%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (15 samples, 0.04%)</title><rect x="62.2724%" y="1093" width="0.0351%" height="15" fill="rgb(251,179,42)"/><text x="62.5224%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15 samples, 0.04%)</title><rect x="62.2724%" y="1077" width="0.0351%" height="15" fill="rgb(208,216,51)"/><text x="62.5224%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15 samples, 0.04%)</title><rect x="62.2724%" y="1061" width="0.0351%" height="15" fill="rgb(235,36,11)"/><text x="62.5224%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (15 samples, 0.04%)</title><rect x="62.2724%" y="1045" width="0.0351%" height="15" fill="rgb(213,189,28)"/><text x="62.5224%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;model::rho_types::Expr&gt;&gt; (7 samples, 0.02%)</title><rect x="62.3075%" y="1093" width="0.0164%" height="15" fill="rgb(227,203,42)"/><text x="62.5575%" y="1103.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="62.3075%" y="1077" width="0.0164%" height="15" fill="rgb(244,72,36)"/><text x="62.5575%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;model::rho_types::Expr,alloc::alloc::Global&gt;&gt; (7 samples, 0.02%)</title><rect x="62.3075%" y="1061" width="0.0164%" height="15" fill="rgb(213,53,17)"/><text x="62.5575%" y="1071.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="62.3075%" y="1045" width="0.0164%" height="15" fill="rgb(207,167,3)"/><text x="62.5575%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (7 samples, 0.02%)</title><rect x="62.3075%" y="1029" width="0.0164%" height="15" fill="rgb(216,98,30)"/><text x="62.5575%" y="1039.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="62.3075%" y="1013" width="0.0164%" height="15" fill="rgb(236,123,15)"/><text x="62.5575%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.02%)</title><rect x="62.3075%" y="997" width="0.0164%" height="15" fill="rgb(248,81,50)"/><text x="62.5575%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.01%)</title><rect x="62.3098%" y="981" width="0.0140%" height="15" fill="rgb(214,120,4)"/><text x="62.5598%" y="991.50"></text></g><g><title>_rjem_sdallocx (5 samples, 0.01%)</title><rect x="62.3122%" y="965" width="0.0117%" height="15" fill="rgb(208,179,34)"/><text x="62.5622%" y="975.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.01%)</title><rect x="62.3332%" y="1077" width="0.0117%" height="15" fill="rgb(227,140,7)"/><text x="62.5832%" y="1087.50"></text></g><g><title>model::rho_types::Par::append_expr (12 samples, 0.03%)</title><rect x="62.3239%" y="1093" width="0.0281%" height="15" fill="rgb(214,22,6)"/><text x="62.5739%" y="1103.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_send::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Send&gt;::evaluate::{{closure}} (4,834 samples, 11.32%)</title><rect x="51.0463%" y="1157" width="11.3150%" height="15" fill="rgb(207,137,27)"/><text x="51.2963%" y="1167.50">rho_runtime::inte..</text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute (107 samples, 0.25%)</title><rect x="62.1109%" y="1141" width="0.2505%" height="15" fill="rgb(210,8,46)"/><text x="62.3609%" y="1151.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute_no_sort (104 samples, 0.24%)</title><rect x="62.1179%" y="1125" width="0.2434%" height="15" fill="rgb(240,16,54)"/><text x="62.3679%" y="1135.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::substitute_expressions_in_par (94 samples, 0.22%)</title><rect x="62.1413%" y="1109" width="0.2200%" height="15" fill="rgb(211,209,29)"/><text x="62.3913%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.01%)</title><rect x="62.4503%" y="1045" width="0.0140%" height="15" fill="rgb(226,228,24)"/><text x="62.7003%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.01%)</title><rect x="62.6024%" y="853" width="0.0140%" height="15" fill="rgb(222,84,9)"/><text x="62.8524%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.04%)</title><rect x="62.6001%" y="869" width="0.0351%" height="15" fill="rgb(234,203,30)"/><text x="62.8501%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.02%)</title><rect x="62.6165%" y="853" width="0.0187%" height="15" fill="rgb(238,109,14)"/><text x="62.8665%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.02%)</title><rect x="62.6165%" y="837" width="0.0187%" height="15" fill="rgb(233,206,34)"/><text x="62.8665%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.02%)</title><rect x="62.6165%" y="821" width="0.0187%" height="15" fill="rgb(220,167,47)"/><text x="62.8665%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.01%)</title><rect x="62.6211%" y="805" width="0.0140%" height="15" fill="rgb(238,105,10)"/><text x="62.8711%" y="815.50"></text></g><g><title>imalloc_no_sample (5 samples, 0.01%)</title><rect x="62.6633%" y="613" width="0.0117%" height="15" fill="rgb(213,227,17)"/><text x="62.9133%" y="623.50"></text></g><g><title>imalloc_body (7 samples, 0.02%)</title><rect x="62.6633%" y="629" width="0.0164%" height="15" fill="rgb(217,132,38)"/><text x="62.9133%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (18 samples, 0.04%)</title><rect x="62.6399%" y="757" width="0.0421%" height="15" fill="rgb(242,146,4)"/><text x="62.8899%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18 samples, 0.04%)</title><rect x="62.6399%" y="741" width="0.0421%" height="15" fill="rgb(212,61,9)"/><text x="62.8899%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (18 samples, 0.04%)</title><rect x="62.6399%" y="725" width="0.0421%" height="15" fill="rgb(247,126,22)"/><text x="62.8899%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.04%)</title><rect x="62.6399%" y="709" width="0.0421%" height="15" fill="rgb(220,196,2)"/><text x="62.8899%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.04%)</title><rect x="62.6399%" y="693" width="0.0421%" height="15" fill="rgb(208,46,4)"/><text x="62.8899%" y="703.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.04%)</title><rect x="62.6399%" y="677" width="0.0421%" height="15" fill="rgb(252,104,46)"/><text x="62.8899%" y="687.50"></text></g><g><title>_rjem_mallocx (13 samples, 0.03%)</title><rect x="62.6516%" y="661" width="0.0304%" height="15" fill="rgb(237,152,48)"/><text x="62.9016%" y="671.50"></text></g><g><title>imalloc (8 samples, 0.02%)</title><rect x="62.6633%" y="645" width="0.0187%" height="15" fill="rgb(221,59,37)"/><text x="62.9133%" y="655.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (81 samples, 0.19%)</title><rect x="62.4994%" y="885" width="0.1896%" height="15" fill="rgb(209,202,51)"/><text x="62.7494%" y="895.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (23 samples, 0.05%)</title><rect x="62.6352%" y="869" width="0.0538%" height="15" fill="rgb(228,81,30)"/><text x="62.8852%" y="879.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (21 samples, 0.05%)</title><rect x="62.6399%" y="853" width="0.0492%" height="15" fill="rgb(227,42,39)"/><text x="62.8899%" y="863.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (21 samples, 0.05%)</title><rect x="62.6399%" y="837" width="0.0492%" height="15" fill="rgb(221,26,2)"/><text x="62.8899%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (21 samples, 0.05%)</title><rect x="62.6399%" y="821" width="0.0492%" height="15" fill="rgb(254,61,31)"/><text x="62.8899%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (21 samples, 0.05%)</title><rect x="62.6399%" y="805" width="0.0492%" height="15" fill="rgb(222,173,38)"/><text x="62.8899%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (21 samples, 0.05%)</title><rect x="62.6399%" y="789" width="0.0492%" height="15" fill="rgb(218,50,12)"/><text x="62.8899%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (21 samples, 0.05%)</title><rect x="62.6399%" y="773" width="0.0492%" height="15" fill="rgb(223,88,40)"/><text x="62.8899%" y="783.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (112 samples, 0.26%)</title><rect x="62.4924%" y="901" width="0.2622%" height="15" fill="rgb(237,54,19)"/><text x="62.7424%" y="911.50"></text></g><g><title>[libc-2.31.so] (28 samples, 0.07%)</title><rect x="62.6890%" y="885" width="0.0655%" height="15" fill="rgb(251,129,25)"/><text x="62.9390%" y="895.50"></text></g><g><title>&lt;model::rho_types::MatchCase as core::clone::Clone&gt;::clone (121 samples, 0.28%)</title><rect x="62.4854%" y="917" width="0.2832%" height="15" fill="rgb(238,97,19)"/><text x="62.7354%" y="927.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.01%)</title><rect x="62.7546%" y="901" width="0.0140%" height="15" fill="rgb(240,169,18)"/><text x="63.0046%" y="911.50"></text></g><g><title>imalloc_no_sample (11 samples, 0.03%)</title><rect x="62.7780%" y="773" width="0.0257%" height="15" fill="rgb(230,187,49)"/><text x="63.0280%" y="783.50"></text></g><g><title>iallocztm (10 samples, 0.02%)</title><rect x="62.7803%" y="757" width="0.0234%" height="15" fill="rgb(209,44,26)"/><text x="63.0303%" y="767.50"></text></g><g><title>arena_malloc (10 samples, 0.02%)</title><rect x="62.7803%" y="741" width="0.0234%" height="15" fill="rgb(244,0,6)"/><text x="63.0303%" y="751.50"></text></g><g><title>tcache_alloc_small (10 samples, 0.02%)</title><rect x="62.7803%" y="725" width="0.0234%" height="15" fill="rgb(248,18,21)"/><text x="63.0303%" y="735.50"></text></g><g><title>cache_bin_alloc_easy (9 samples, 0.02%)</title><rect x="62.7826%" y="709" width="0.0211%" height="15" fill="rgb(245,180,19)"/><text x="63.0326%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.04%)</title><rect x="62.7686%" y="869" width="0.0375%" height="15" fill="rgb(252,118,36)"/><text x="63.0186%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.04%)</title><rect x="62.7686%" y="853" width="0.0375%" height="15" fill="rgb(210,224,19)"/><text x="63.0186%" y="863.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.04%)</title><rect x="62.7686%" y="837" width="0.0375%" height="15" fill="rgb(218,30,24)"/><text x="63.0186%" y="847.50"></text></g><g><title>_rjem_mallocx (15 samples, 0.04%)</title><rect x="62.7709%" y="821" width="0.0351%" height="15" fill="rgb(219,75,50)"/><text x="63.0209%" y="831.50"></text></g><g><title>imalloc (12 samples, 0.03%)</title><rect x="62.7780%" y="805" width="0.0281%" height="15" fill="rgb(234,72,50)"/><text x="63.0280%" y="815.50"></text></g><g><title>imalloc_body (12 samples, 0.03%)</title><rect x="62.7780%" y="789" width="0.0281%" height="15" fill="rgb(219,100,48)"/><text x="63.0280%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17 samples, 0.04%)</title><rect x="62.7686%" y="917" width="0.0398%" height="15" fill="rgb(253,5,41)"/><text x="63.0186%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 0.04%)</title><rect x="62.7686%" y="901" width="0.0398%" height="15" fill="rgb(247,181,11)"/><text x="63.0186%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.04%)</title><rect x="62.7686%" y="885" width="0.0398%" height="15" fill="rgb(222,223,25)"/><text x="63.0186%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (160 samples, 0.37%)</title><rect x="62.4760%" y="981" width="0.3745%" height="15" fill="rgb(214,198,28)"/><text x="62.7260%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (160 samples, 0.37%)</title><rect x="62.4760%" y="965" width="0.3745%" height="15" fill="rgb(230,46,43)"/><text x="62.7260%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (160 samples, 0.37%)</title><rect x="62.4760%" y="949" width="0.3745%" height="15" fill="rgb(233,65,53)"/><text x="62.7260%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (160 samples, 0.37%)</title><rect x="62.4760%" y="933" width="0.3745%" height="15" fill="rgb(221,121,27)"/><text x="62.7260%" y="943.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (18 samples, 0.04%)</title><rect x="62.8084%" y="917" width="0.0421%" height="15" fill="rgb(247,70,47)"/><text x="63.0584%" y="927.50"></text></g><g><title>[libc-2.31.so] (17 samples, 0.04%)</title><rect x="62.8107%" y="901" width="0.0398%" height="15" fill="rgb(228,85,35)"/><text x="63.0607%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 0.02%)</title><rect x="62.8529%" y="869" width="0.0234%" height="15" fill="rgb(209,50,18)"/><text x="63.1029%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.02%)</title><rect x="62.8529%" y="853" width="0.0234%" height="15" fill="rgb(250,19,35)"/><text x="63.1029%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.02%)</title><rect x="62.8529%" y="837" width="0.0234%" height="15" fill="rgb(253,107,29)"/><text x="63.1029%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.02%)</title><rect x="62.8529%" y="821" width="0.0234%" height="15" fill="rgb(252,179,29)"/><text x="63.1029%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.02%)</title><rect x="62.8529%" y="805" width="0.0234%" height="15" fill="rgb(238,194,6)"/><text x="63.1029%" y="815.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.02%)</title><rect x="62.8552%" y="789" width="0.0211%" height="15" fill="rgb(238,164,29)"/><text x="63.1052%" y="799.50"></text></g><g><title>_rjem_mallocx (7 samples, 0.02%)</title><rect x="62.8599%" y="773" width="0.0164%" height="15" fill="rgb(224,25,9)"/><text x="63.1099%" y="783.50"></text></g><g><title>imalloc (6 samples, 0.01%)</title><rect x="62.8622%" y="757" width="0.0140%" height="15" fill="rgb(244,153,23)"/><text x="63.1122%" y="767.50"></text></g><g><title>imalloc_body (6 samples, 0.01%)</title><rect x="62.8622%" y="741" width="0.0140%" height="15" fill="rgb(212,203,14)"/><text x="63.1122%" y="751.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (11 samples, 0.03%)</title><rect x="62.8529%" y="965" width="0.0257%" height="15" fill="rgb(220,164,20)"/><text x="63.1029%" y="975.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (11 samples, 0.03%)</title><rect x="62.8529%" y="949" width="0.0257%" height="15" fill="rgb(222,203,48)"/><text x="63.1029%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.03%)</title><rect x="62.8529%" y="933" width="0.0257%" height="15" fill="rgb(215,159,22)"/><text x="63.1029%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 0.03%)</title><rect x="62.8529%" y="917" width="0.0257%" height="15" fill="rgb(216,183,47)"/><text x="63.1029%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.03%)</title><rect x="62.8529%" y="901" width="0.0257%" height="15" fill="rgb(229,195,25)"/><text x="63.1029%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.03%)</title><rect x="62.8529%" y="885" width="0.0257%" height="15" fill="rgb(224,132,51)"/><text x="63.1029%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (10 samples, 0.02%)</title><rect x="62.8880%" y="933" width="0.0234%" height="15" fill="rgb(240,63,7)"/><text x="63.1380%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.03%)</title><rect x="62.8880%" y="949" width="0.0281%" height="15" fill="rgb(249,182,41)"/><text x="63.1380%" y="959.50"></text></g><g><title>imalloc_no_sample (9 samples, 0.02%)</title><rect x="62.9395%" y="693" width="0.0211%" height="15" fill="rgb(243,47,26)"/><text x="63.1895%" y="703.50"></text></g><g><title>iallocztm (7 samples, 0.02%)</title><rect x="62.9442%" y="677" width="0.0164%" height="15" fill="rgb(233,48,2)"/><text x="63.1942%" y="687.50"></text></g><g><title>arena_malloc (7 samples, 0.02%)</title><rect x="62.9442%" y="661" width="0.0164%" height="15" fill="rgb(244,165,34)"/><text x="63.1942%" y="671.50"></text></g><g><title>tcache_alloc_small (7 samples, 0.02%)</title><rect x="62.9442%" y="645" width="0.0164%" height="15" fill="rgb(207,89,7)"/><text x="63.1942%" y="655.50"></text></g><g><title>cache_bin_alloc_easy (7 samples, 0.02%)</title><rect x="62.9442%" y="629" width="0.0164%" height="15" fill="rgb(244,117,36)"/><text x="63.1942%" y="639.50"></text></g><g><title>imalloc_body (15 samples, 0.04%)</title><rect x="62.9348%" y="709" width="0.0351%" height="15" fill="rgb(226,144,34)"/><text x="63.1848%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.05%)</title><rect x="62.9254%" y="789" width="0.0468%" height="15" fill="rgb(213,23,19)"/><text x="63.1754%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.05%)</title><rect x="62.9254%" y="773" width="0.0468%" height="15" fill="rgb(217,75,12)"/><text x="63.1754%" y="783.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.05%)</title><rect x="62.9254%" y="757" width="0.0468%" height="15" fill="rgb(224,159,17)"/><text x="63.1754%" y="767.50"></text></g><g><title>_rjem_mallocx (17 samples, 0.04%)</title><rect x="62.9324%" y="741" width="0.0398%" height="15" fill="rgb(217,118,1)"/><text x="63.1824%" y="751.50"></text></g><g><title>imalloc (16 samples, 0.04%)</title><rect x="62.9348%" y="725" width="0.0375%" height="15" fill="rgb(232,180,48)"/><text x="63.1848%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (22 samples, 0.05%)</title><rect x="62.9231%" y="837" width="0.0515%" height="15" fill="rgb(230,27,33)"/><text x="63.1731%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (22 samples, 0.05%)</title><rect x="62.9231%" y="821" width="0.0515%" height="15" fill="rgb(205,31,21)"/><text x="63.1731%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (22 samples, 0.05%)</title><rect x="62.9231%" y="805" width="0.0515%" height="15" fill="rgb(253,59,4)"/><text x="63.1731%" y="815.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (46 samples, 0.11%)</title><rect x="62.8786%" y="965" width="0.1077%" height="15" fill="rgb(224,201,9)"/><text x="63.1286%" y="975.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (30 samples, 0.07%)</title><rect x="62.9161%" y="949" width="0.0702%" height="15" fill="rgb(229,206,30)"/><text x="63.1661%" y="959.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (28 samples, 0.07%)</title><rect x="62.9207%" y="933" width="0.0655%" height="15" fill="rgb(212,67,47)"/><text x="63.1707%" y="943.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (28 samples, 0.07%)</title><rect x="62.9207%" y="917" width="0.0655%" height="15" fill="rgb(211,96,50)"/><text x="63.1707%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (28 samples, 0.07%)</title><rect x="62.9207%" y="901" width="0.0655%" height="15" fill="rgb(252,114,18)"/><text x="63.1707%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (27 samples, 0.06%)</title><rect x="62.9231%" y="885" width="0.0632%" height="15" fill="rgb(223,58,37)"/><text x="63.1731%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (27 samples, 0.06%)</title><rect x="62.9231%" y="869" width="0.0632%" height="15" fill="rgb(237,70,4)"/><text x="63.1731%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (27 samples, 0.06%)</title><rect x="62.9231%" y="853" width="0.0632%" height="15" fill="rgb(244,85,46)"/><text x="63.1731%" y="863.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (5 samples, 0.01%)</title><rect x="62.9746%" y="837" width="0.0117%" height="15" fill="rgb(223,39,52)"/><text x="63.2246%" y="847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.01%)</title><rect x="62.9746%" y="821" width="0.0117%" height="15" fill="rgb(218,200,14)"/><text x="63.2246%" y="831.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (66 samples, 0.15%)</title><rect x="62.8505%" y="981" width="0.1545%" height="15" fill="rgb(208,171,16)"/><text x="63.1005%" y="991.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.02%)</title><rect x="62.9863%" y="965" width="0.0187%" height="15" fill="rgb(234,200,18)"/><text x="63.2363%" y="975.50"></text></g><g><title>&lt;model::rho_types::Match as core::clone::Clone&gt;::clone (231 samples, 0.54%)</title><rect x="62.4737%" y="997" width="0.5407%" height="15" fill="rgb(228,45,11)"/><text x="62.7237%" y="1007.50"></text></g><g><title>imalloc_body (11 samples, 0.03%)</title><rect x="63.0331%" y="869" width="0.0257%" height="15" fill="rgb(237,182,11)"/><text x="63.2831%" y="879.50"></text></g><g><title>imalloc_no_sample (10 samples, 0.02%)</title><rect x="63.0354%" y="853" width="0.0234%" height="15" fill="rgb(241,175,49)"/><text x="63.2854%" y="863.50"></text></g><g><title>iallocztm (9 samples, 0.02%)</title><rect x="63.0378%" y="837" width="0.0211%" height="15" fill="rgb(247,38,35)"/><text x="63.2878%" y="847.50"></text></g><g><title>arena_malloc (9 samples, 0.02%)</title><rect x="63.0378%" y="821" width="0.0211%" height="15" fill="rgb(228,39,49)"/><text x="63.2878%" y="831.50"></text></g><g><title>tcache_alloc_small (9 samples, 0.02%)</title><rect x="63.0378%" y="805" width="0.0211%" height="15" fill="rgb(226,101,26)"/><text x="63.2878%" y="815.50"></text></g><g><title>cache_bin_alloc_easy (8 samples, 0.02%)</title><rect x="63.0401%" y="789" width="0.0187%" height="15" fill="rgb(206,141,19)"/><text x="63.2901%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.04%)</title><rect x="63.0237%" y="949" width="0.0375%" height="15" fill="rgb(211,200,13)"/><text x="63.2737%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.04%)</title><rect x="63.0237%" y="933" width="0.0375%" height="15" fill="rgb(241,121,6)"/><text x="63.2737%" y="943.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.03%)</title><rect x="63.0284%" y="917" width="0.0328%" height="15" fill="rgb(234,221,29)"/><text x="63.2784%" y="927.50"></text></g><g><title>_rjem_mallocx (12 samples, 0.03%)</title><rect x="63.0331%" y="901" width="0.0281%" height="15" fill="rgb(229,136,5)"/><text x="63.2831%" y="911.50"></text></g><g><title>imalloc (12 samples, 0.03%)</title><rect x="63.0331%" y="885" width="0.0281%" height="15" fill="rgb(238,36,11)"/><text x="63.2831%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (26 samples, 0.06%)</title><rect x="63.0144%" y="997" width="0.0609%" height="15" fill="rgb(251,55,41)"/><text x="63.2644%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (23 samples, 0.05%)</title><rect x="63.0214%" y="981" width="0.0538%" height="15" fill="rgb(242,34,40)"/><text x="63.2714%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (23 samples, 0.05%)</title><rect x="63.0214%" y="965" width="0.0538%" height="15" fill="rgb(215,42,17)"/><text x="63.2714%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (281 samples, 0.66%)</title><rect x="62.4479%" y="1061" width="0.6577%" height="15" fill="rgb(207,44,46)"/><text x="62.6979%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (274 samples, 0.64%)</title><rect x="62.4643%" y="1045" width="0.6414%" height="15" fill="rgb(211,206,28)"/><text x="62.7143%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (274 samples, 0.64%)</title><rect x="62.4643%" y="1029" width="0.6414%" height="15" fill="rgb(237,167,16)"/><text x="62.7143%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (274 samples, 0.64%)</title><rect x="62.4643%" y="1013" width="0.6414%" height="15" fill="rgb(233,66,6)"/><text x="62.7143%" y="1023.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (13 samples, 0.03%)</title><rect x="63.0752%" y="997" width="0.0304%" height="15" fill="rgb(246,123,29)"/><text x="63.3252%" y="1007.50"></text></g><g><title>[libc-2.31.so] (12 samples, 0.03%)</title><rect x="63.0776%" y="981" width="0.0281%" height="15" fill="rgb(209,62,40)"/><text x="63.3276%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.03%)</title><rect x="63.1080%" y="901" width="0.0257%" height="15" fill="rgb(218,4,25)"/><text x="63.3580%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.03%)</title><rect x="63.1080%" y="885" width="0.0257%" height="15" fill="rgb(253,91,49)"/><text x="63.3580%" y="895.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.03%)</title><rect x="63.1080%" y="869" width="0.0257%" height="15" fill="rgb(228,155,29)"/><text x="63.3580%" y="879.50"></text></g><g><title>_rjem_mallocx (8 samples, 0.02%)</title><rect x="63.1150%" y="853" width="0.0187%" height="15" fill="rgb(243,57,37)"/><text x="63.3650%" y="863.50"></text></g><g><title>imalloc (6 samples, 0.01%)</title><rect x="63.1197%" y="837" width="0.0140%" height="15" fill="rgb(244,167,17)"/><text x="63.3697%" y="847.50"></text></g><g><title>imalloc_body (6 samples, 0.01%)</title><rect x="63.1197%" y="821" width="0.0140%" height="15" fill="rgb(207,181,38)"/><text x="63.3697%" y="831.50"></text></g><g><title>imalloc_no_sample (6 samples, 0.01%)</title><rect x="63.1197%" y="805" width="0.0140%" height="15" fill="rgb(211,8,23)"/><text x="63.3697%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13 samples, 0.03%)</title><rect x="63.1057%" y="949" width="0.0304%" height="15" fill="rgb(235,11,44)"/><text x="63.3557%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.03%)</title><rect x="63.1057%" y="933" width="0.0304%" height="15" fill="rgb(248,18,52)"/><text x="63.3557%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.03%)</title><rect x="63.1080%" y="917" width="0.0281%" height="15" fill="rgb(208,4,7)"/><text x="63.3580%" y="927.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (301 samples, 0.70%)</title><rect x="62.4386%" y="1077" width="0.7046%" height="15" fill="rgb(240,17,39)"/><text x="62.6886%" y="1087.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (16 samples, 0.04%)</title><rect x="63.1057%" y="1061" width="0.0375%" height="15" fill="rgb(207,170,3)"/><text x="63.3557%" y="1071.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (16 samples, 0.04%)</title><rect x="63.1057%" y="1045" width="0.0375%" height="15" fill="rgb(236,100,52)"/><text x="63.3557%" y="1055.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (16 samples, 0.04%)</title><rect x="63.1057%" y="1029" width="0.0375%" height="15" fill="rgb(246,78,51)"/><text x="63.3557%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.04%)</title><rect x="63.1057%" y="1013" width="0.0375%" height="15" fill="rgb(211,17,15)"/><text x="63.3557%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16 samples, 0.04%)</title><rect x="63.1057%" y="997" width="0.0375%" height="15" fill="rgb(209,59,46)"/><text x="63.3557%" y="1007.50"></text></g><g><title>alloc::slice::hack::to_vec (16 samples, 0.04%)</title><rect x="63.1057%" y="981" width="0.0375%" height="15" fill="rgb(210,92,25)"/><text x="63.3557%" y="991.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16 samples, 0.04%)</title><rect x="63.1057%" y="965" width="0.0375%" height="15" fill="rgb(238,174,52)"/><text x="63.3557%" y="975.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (308 samples, 0.72%)</title><rect x="62.4362%" y="1093" width="0.7209%" height="15" fill="rgb(230,73,7)"/><text x="62.6862%" y="1103.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.01%)</title><rect x="63.1431%" y="1077" width="0.0140%" height="15" fill="rgb(243,124,40)"/><text x="63.3931%" y="1087.50"></text></g><g><title>&lt;model::rho_types::ParWithRandom as core::clone::Clone&gt;::clone (310 samples, 0.73%)</title><rect x="62.4362%" y="1109" width="0.7256%" height="15" fill="rgb(244,170,11)"/><text x="62.6862%" y="1119.50"></text></g><g><title>&lt;rho_runtime::storage::TaggedContinuation as core::clone::Clone&gt;::clone (319 samples, 0.75%)</title><rect x="62.4362%" y="1125" width="0.7467%" height="15" fill="rgb(207,114,54)"/><text x="62.6862%" y="1135.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.02%)</title><rect x="63.1618%" y="1109" width="0.0211%" height="15" fill="rgb(205,42,20)"/><text x="63.4118%" y="1119.50"></text></g><g><title>[libc-2.31.so] (68 samples, 0.16%)</title><rect x="63.1852%" y="1125" width="0.1592%" height="15" fill="rgb(230,30,28)"/><text x="63.4352%" y="1135.50"></text></g><g><title>_rjem_sdallocx (5 samples, 0.01%)</title><rect x="63.3491%" y="1109" width="0.0117%" height="15" fill="rgb(205,73,54)"/><text x="63.5991%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.04%)</title><rect x="63.3655%" y="1077" width="0.0398%" height="15" fill="rgb(254,227,23)"/><text x="63.6155%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::GUnforgeable]&gt; (16 samples, 0.04%)</title><rect x="63.3678%" y="1061" width="0.0375%" height="15" fill="rgb(228,202,34)"/><text x="63.6178%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::GUnforgeable&gt; (16 samples, 0.04%)</title><rect x="63.3678%" y="1045" width="0.0375%" height="15" fill="rgb(222,225,37)"/><text x="63.6178%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::g_unforgeable::UnfInstance&gt;&gt; (16 samples, 0.04%)</title><rect x="63.3678%" y="1029" width="0.0375%" height="15" fill="rgb(221,14,54)"/><text x="63.6178%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::g_unforgeable::UnfInstance&gt; (12 samples, 0.03%)</title><rect x="63.3772%" y="1013" width="0.0281%" height="15" fill="rgb(254,102,2)"/><text x="63.6272%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::GPrivate&gt; (12 samples, 0.03%)</title><rect x="63.3772%" y="997" width="0.0281%" height="15" fill="rgb(232,104,17)"/><text x="63.6272%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (12 samples, 0.03%)</title><rect x="63.3772%" y="981" width="0.0281%" height="15" fill="rgb(250,220,14)"/><text x="63.6272%" y="991.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (12 samples, 0.03%)</title><rect x="63.3772%" y="965" width="0.0281%" height="15" fill="rgb(241,158,9)"/><text x="63.6272%" y="975.50"></text></g><g><title>bytes::bytes::shared_drop (11 samples, 0.03%)</title><rect x="63.3795%" y="949" width="0.0257%" height="15" fill="rgb(246,9,43)"/><text x="63.6295%" y="959.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (11 samples, 0.03%)</title><rect x="63.3795%" y="933" width="0.0257%" height="15" fill="rgb(206,73,33)"/><text x="63.6295%" y="943.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (11 samples, 0.03%)</title><rect x="63.3795%" y="917" width="0.0257%" height="15" fill="rgb(222,79,8)"/><text x="63.6295%" y="927.50"></text></g><g><title>bytes::bytes::release_shared (11 samples, 0.03%)</title><rect x="63.3795%" y="901" width="0.0257%" height="15" fill="rgb(234,8,54)"/><text x="63.6295%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (11 samples, 0.03%)</title><rect x="63.3795%" y="885" width="0.0257%" height="15" fill="rgb(209,134,38)"/><text x="63.6295%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_sub (11 samples, 0.03%)</title><rect x="63.3795%" y="869" width="0.0257%" height="15" fill="rgb(230,127,29)"/><text x="63.6295%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.02%)</title><rect x="63.4053%" y="1045" width="0.0234%" height="15" fill="rgb(242,44,41)"/><text x="63.6553%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.02%)</title><rect x="63.4053%" y="1029" width="0.0234%" height="15" fill="rgb(222,56,43)"/><text x="63.6553%" y="1039.50"></text></g><g><title>_rjem_sdallocx (8 samples, 0.02%)</title><rect x="63.4100%" y="1013" width="0.0187%" height="15" fill="rgb(238,39,47)"/><text x="63.6600%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::GUnforgeable&gt;&gt; (28 samples, 0.07%)</title><rect x="63.3655%" y="1093" width="0.0655%" height="15" fill="rgb(226,79,43)"/><text x="63.6155%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::GUnforgeable&gt;&gt; (11 samples, 0.03%)</title><rect x="63.4053%" y="1077" width="0.0257%" height="15" fill="rgb(242,105,53)"/><text x="63.6553%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.03%)</title><rect x="63.4053%" y="1061" width="0.0257%" height="15" fill="rgb(251,132,46)"/><text x="63.6553%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;(blake3::Hash,model::rho_types::Par)&gt; (38 samples, 0.09%)</title><rect x="63.3444%" y="1125" width="0.0889%" height="15" fill="rgb(231,77,14)"/><text x="63.5944%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (31 samples, 0.07%)</title><rect x="63.3608%" y="1109" width="0.0726%" height="15" fill="rgb(240,135,9)"/><text x="63.6108%" y="1119.50"></text></g><g><title>core::ptr::write (8 samples, 0.02%)</title><rect x="63.4404%" y="1109" width="0.0187%" height="15" fill="rgb(248,109,14)"/><text x="63.6904%" y="1119.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.02%)</title><rect x="63.4427%" y="1093" width="0.0164%" height="15" fill="rgb(227,146,52)"/><text x="63.6927%" y="1103.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::push (11 samples, 0.03%)</title><rect x="63.4357%" y="1125" width="0.0257%" height="15" fill="rgb(232,54,3)"/><text x="63.6857%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt;&gt; (8 samples, 0.02%)</title><rect x="63.4614%" y="1109" width="0.0187%" height="15" fill="rgb(229,201,43)"/><text x="63.7114%" y="1119.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="63.4614%" y="1093" width="0.0187%" height="15" fill="rgb(252,161,33)"/><text x="63.7114%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (8 samples, 0.02%)</title><rect x="63.4614%" y="1077" width="0.0187%" height="15" fill="rgb(226,146,40)"/><text x="63.7114%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_sub (8 samples, 0.02%)</title><rect x="63.4614%" y="1061" width="0.0187%" height="15" fill="rgb(219,47,25)"/><text x="63.7114%" y="1071.50"></text></g><g><title>[libc-2.31.so] (35 samples, 0.08%)</title><rect x="63.4825%" y="1077" width="0.0819%" height="15" fill="rgb(250,135,13)"/><text x="63.7325%" y="1087.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (39 samples, 0.09%)</title><rect x="63.4802%" y="1109" width="0.0913%" height="15" fill="rgb(219,229,18)"/><text x="63.7302%" y="1119.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send::{{closure}} (39 samples, 0.09%)</title><rect x="63.4802%" y="1093" width="0.0913%" height="15" fill="rgb(217,152,27)"/><text x="63.7302%" y="1103.50"></text></g><g><title>tokio::sync::oneshot::State::set_complete (21 samples, 0.05%)</title><rect x="63.5715%" y="1093" width="0.0492%" height="15" fill="rgb(225,71,47)"/><text x="63.8215%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (21 samples, 0.05%)</title><rect x="63.5715%" y="1077" width="0.0492%" height="15" fill="rgb(220,139,14)"/><text x="63.8215%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_or (21 samples, 0.05%)</title><rect x="63.5715%" y="1061" width="0.0492%" height="15" fill="rgb(247,54,32)"/><text x="63.8215%" y="1071.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::schedule (10 samples, 0.02%)</title><rect x="63.6230%" y="981" width="0.0234%" height="15" fill="rgb(252,131,39)"/><text x="63.8730%" y="991.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (10 samples, 0.02%)</title><rect x="63.6230%" y="965" width="0.0234%" height="15" fill="rgb(210,108,39)"/><text x="63.8730%" y="975.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::schedule::{{closure}} (10 samples, 0.02%)</title><rect x="63.6230%" y="949" width="0.0234%" height="15" fill="rgb(205,23,29)"/><text x="63.8730%" y="959.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::schedule (10 samples, 0.02%)</title><rect x="63.6230%" y="933" width="0.0234%" height="15" fill="rgb(246,139,46)"/><text x="63.8730%" y="943.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (10 samples, 0.02%)</title><rect x="63.6230%" y="917" width="0.0234%" height="15" fill="rgb(250,81,26)"/><text x="63.8730%" y="927.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (10 samples, 0.02%)</title><rect x="63.6230%" y="901" width="0.0234%" height="15" fill="rgb(214,104,7)"/><text x="63.8730%" y="911.50"></text></g><g><title>rho_runtime::storage::transit::Transit::produce (550 samples, 1.29%)</title><rect x="62.3777%" y="1141" width="1.2874%" height="15" fill="rgb(233,189,8)"/><text x="62.6277%" y="1151.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (87 samples, 0.20%)</title><rect x="63.4614%" y="1125" width="0.2036%" height="15" fill="rgb(228,141,17)"/><text x="63.7114%" y="1135.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::complete (40 samples, 0.09%)</title><rect x="63.5715%" y="1109" width="0.0936%" height="15" fill="rgb(247,157,1)"/><text x="63.8215%" y="1119.50"></text></g><g><title>tokio::sync::oneshot::Task::with_task (19 samples, 0.04%)</title><rect x="63.6206%" y="1093" width="0.0445%" height="15" fill="rgb(249,225,5)"/><text x="63.8706%" y="1103.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (19 samples, 0.04%)</title><rect x="63.6206%" y="1077" width="0.0445%" height="15" fill="rgb(242,55,13)"/><text x="63.8706%" y="1087.50"></text></g><g><title>tokio::sync::oneshot::Task::with_task::{{closure}} (19 samples, 0.04%)</title><rect x="63.6206%" y="1061" width="0.0445%" height="15" fill="rgb(230,49,50)"/><text x="63.8706%" y="1071.50"></text></g><g><title>core::ops::function::FnOnce::call_once (19 samples, 0.04%)</title><rect x="63.6206%" y="1045" width="0.0445%" height="15" fill="rgb(241,111,38)"/><text x="63.8706%" y="1055.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (19 samples, 0.04%)</title><rect x="63.6206%" y="1029" width="0.0445%" height="15" fill="rgb(252,155,4)"/><text x="63.8706%" y="1039.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (19 samples, 0.04%)</title><rect x="63.6206%" y="1013" width="0.0445%" height="15" fill="rgb(212,69,32)"/><text x="63.8706%" y="1023.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_ref (18 samples, 0.04%)</title><rect x="63.6230%" y="997" width="0.0421%" height="15" fill="rgb(243,107,47)"/><text x="63.8730%" y="1007.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified (8 samples, 0.02%)</title><rect x="63.6464%" y="981" width="0.0187%" height="15" fill="rgb(247,130,12)"/><text x="63.8964%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (8 samples, 0.02%)</title><rect x="63.6464%" y="965" width="0.0187%" height="15" fill="rgb(233,74,16)"/><text x="63.8964%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_or (8 samples, 0.02%)</title><rect x="63.6464%" y="949" width="0.0187%" height="15" fill="rgb(208,58,18)"/><text x="63.8964%" y="959.50"></text></g><g><title>[libc-2.31.so] (69 samples, 0.16%)</title><rect x="63.6791%" y="1093" width="0.1615%" height="15" fill="rgb(242,225,1)"/><text x="63.9291%" y="1103.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (174 samples, 0.41%)</title><rect x="63.6768%" y="1125" width="0.4073%" height="15" fill="rgb(249,39,40)"/><text x="63.9268%" y="1135.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send::{{closure}} (174 samples, 0.41%)</title><rect x="63.6768%" y="1109" width="0.4073%" height="15" fill="rgb(207,72,44)"/><text x="63.9268%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;rho_runtime::storage::transit::Transit&gt;&gt; (104 samples, 0.24%)</title><rect x="63.8406%" y="1093" width="0.2434%" height="15" fill="rgb(215,193,12)"/><text x="64.0906%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (10,835 samples, 25.36%)</title><rect x="41.9269%" y="1173" width="25.3616%" height="15" fill="rgb(248,41,39)"/><text x="42.1769%" y="1183.50">&lt;core::future::from_generator::GenFuture..</text></g><g><title>rho_runtime::storage::coordinator::Coordinator::handle_produce::{{closure}} (2,102 samples, 4.92%)</title><rect x="62.3683%" y="1157" width="4.9202%" height="15" fill="rgb(253,85,4)"/><text x="62.6183%" y="1167.50">rho_ru..</text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (1,548 samples, 3.62%)</title><rect x="63.6651%" y="1141" width="3.6234%" height="15" fill="rgb(243,70,31)"/><text x="63.9151%" y="1151.50">toki..</text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::complete (1,369 samples, 3.20%)</title><rect x="64.0841%" y="1125" width="3.2044%" height="15" fill="rgb(253,195,26)"/><text x="64.3341%" y="1135.50">tok..</text></g><g><title>tokio::sync::oneshot::State::set_complete (1,369 samples, 3.20%)</title><rect x="64.0841%" y="1109" width="3.2044%" height="15" fill="rgb(243,42,11)"/><text x="64.3341%" y="1119.50">tok..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1,369 samples, 3.20%)</title><rect x="64.0841%" y="1093" width="3.2044%" height="15" fill="rgb(239,66,17)"/><text x="64.3341%" y="1103.50">cor..</text></g><g><title>core::sync::atomic::atomic_or (1,369 samples, 3.20%)</title><rect x="64.0841%" y="1077" width="3.2044%" height="15" fill="rgb(217,132,21)"/><text x="64.3341%" y="1087.50">cor..</text></g><g><title>&lt;model::ordering::ScoreTreeIter as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.03%)</title><rect x="67.3026%" y="1173" width="0.0257%" height="15" fill="rgb(252,202,21)"/><text x="67.5526%" y="1183.50"></text></g><g><title>&lt;model::ordering::sort_par::ParScoreTreeIter as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="67.3283%" y="1173" width="0.0211%" height="15" fill="rgb(233,98,36)"/><text x="67.5783%" y="1183.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (26 samples, 0.06%)</title><rect x="67.3494%" y="1173" width="0.0609%" height="15" fill="rgb(216,153,54)"/><text x="67.5994%" y="1183.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash::traverse (5 samples, 0.01%)</title><rect x="67.4149%" y="1173" width="0.0117%" height="15" fill="rgb(250,99,7)"/><text x="67.6649%" y="1183.50"></text></g><g><title>[libc-2.31.so] (24 samples, 0.06%)</title><rect x="67.4805%" y="501" width="0.0562%" height="15" fill="rgb(207,56,50)"/><text x="67.7305%" y="511.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (38 samples, 0.09%)</title><rect x="67.4500%" y="517" width="0.0889%" height="15" fill="rgb(244,61,34)"/><text x="67.7000%" y="527.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (55 samples, 0.13%)</title><rect x="67.4383%" y="533" width="0.1287%" height="15" fill="rgb(241,50,38)"/><text x="67.6883%" y="543.50"></text></g><g><title>[libc-2.31.so] (12 samples, 0.03%)</title><rect x="67.5390%" y="517" width="0.0281%" height="15" fill="rgb(212,166,30)"/><text x="67.7890%" y="527.50"></text></g><g><title>imalloc_no_sample (6 samples, 0.01%)</title><rect x="67.5905%" y="389" width="0.0140%" height="15" fill="rgb(249,127,32)"/><text x="67.8405%" y="399.50"></text></g><g><title>iallocztm (5 samples, 0.01%)</title><rect x="67.5928%" y="373" width="0.0117%" height="15" fill="rgb(209,103,0)"/><text x="67.8428%" y="383.50"></text></g><g><title>arena_malloc (5 samples, 0.01%)</title><rect x="67.5928%" y="357" width="0.0117%" height="15" fill="rgb(238,209,51)"/><text x="67.8428%" y="367.50"></text></g><g><title>tcache_alloc_small (5 samples, 0.01%)</title><rect x="67.5928%" y="341" width="0.0117%" height="15" fill="rgb(237,56,23)"/><text x="67.8428%" y="351.50"></text></g><g><title>imalloc_body (8 samples, 0.02%)</title><rect x="67.5905%" y="405" width="0.0187%" height="15" fill="rgb(215,153,46)"/><text x="67.8405%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.04%)</title><rect x="67.5717%" y="485" width="0.0421%" height="15" fill="rgb(224,49,31)"/><text x="67.8217%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.04%)</title><rect x="67.5717%" y="469" width="0.0421%" height="15" fill="rgb(250,18,42)"/><text x="67.8217%" y="479.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.04%)</title><rect x="67.5717%" y="453" width="0.0421%" height="15" fill="rgb(215,176,39)"/><text x="67.8217%" y="463.50"></text></g><g><title>_rjem_mallocx (13 samples, 0.03%)</title><rect x="67.5834%" y="437" width="0.0304%" height="15" fill="rgb(223,77,29)"/><text x="67.8334%" y="447.50"></text></g><g><title>imalloc (10 samples, 0.02%)</title><rect x="67.5905%" y="421" width="0.0234%" height="15" fill="rgb(234,94,52)"/><text x="67.8405%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (23 samples, 0.05%)</title><rect x="67.5671%" y="533" width="0.0538%" height="15" fill="rgb(220,154,50)"/><text x="67.8171%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (22 samples, 0.05%)</title><rect x="67.5694%" y="517" width="0.0515%" height="15" fill="rgb(212,11,10)"/><text x="67.8194%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (22 samples, 0.05%)</title><rect x="67.5694%" y="501" width="0.0515%" height="15" fill="rgb(205,166,19)"/><text x="67.8194%" y="511.50"></text></g><g><title>&lt;rho_runtime::storage::TaggedContinuation as core::clone::Clone&gt;::clone (106 samples, 0.25%)</title><rect x="67.4266%" y="1173" width="0.2481%" height="15" fill="rgb(244,198,16)"/><text x="67.6766%" y="1183.50"></text></g><g><title>&lt;model::rho_types::ParWithRandom as core::clone::Clone&gt;::clone (106 samples, 0.25%)</title><rect x="67.4266%" y="1157" width="0.2481%" height="15" fill="rgb(219,69,12)"/><text x="67.6766%" y="1167.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (106 samples, 0.25%)</title><rect x="67.4266%" y="1141" width="0.2481%" height="15" fill="rgb(245,30,7)"/><text x="67.6766%" y="1151.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (106 samples, 0.25%)</title><rect x="67.4266%" y="1125" width="0.2481%" height="15" fill="rgb(218,221,48)"/><text x="67.6766%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (106 samples, 0.25%)</title><rect x="67.4266%" y="1109" width="0.2481%" height="15" fill="rgb(216,66,15)"/><text x="67.6766%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (106 samples, 0.25%)</title><rect x="67.4266%" y="1093" width="0.2481%" height="15" fill="rgb(226,122,50)"/><text x="67.6766%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (106 samples, 0.25%)</title><rect x="67.4266%" y="1077" width="0.2481%" height="15" fill="rgb(239,156,16)"/><text x="67.6766%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (106 samples, 0.25%)</title><rect x="67.4266%" y="1061" width="0.2481%" height="15" fill="rgb(224,27,38)"/><text x="67.6766%" y="1071.50"></text></g><g><title>&lt;model::rho_types::Match as core::clone::Clone&gt;::clone (106 samples, 0.25%)</title><rect x="67.4266%" y="1045" width="0.2481%" height="15" fill="rgb(224,39,27)"/><text x="67.6766%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (106 samples, 0.25%)</title><rect x="67.4266%" y="1029" width="0.2481%" height="15" fill="rgb(215,92,29)"/><text x="67.6766%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (106 samples, 0.25%)</title><rect x="67.4266%" y="1013" width="0.2481%" height="15" fill="rgb(207,159,16)"/><text x="67.6766%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (106 samples, 0.25%)</title><rect x="67.4266%" y="997" width="0.2481%" height="15" fill="rgb(238,163,47)"/><text x="67.6766%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (106 samples, 0.25%)</title><rect x="67.4266%" y="981" width="0.2481%" height="15" fill="rgb(219,91,49)"/><text x="67.6766%" y="991.50"></text></g><g><title>&lt;model::rho_types::MatchCase as core::clone::Clone&gt;::clone (106 samples, 0.25%)</title><rect x="67.4266%" y="965" width="0.2481%" height="15" fill="rgb(227,167,31)"/><text x="67.6766%" y="975.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (106 samples, 0.25%)</title><rect x="67.4266%" y="949" width="0.2481%" height="15" fill="rgb(234,80,54)"/><text x="67.6766%" y="959.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (106 samples, 0.25%)</title><rect x="67.4266%" y="933" width="0.2481%" height="15" fill="rgb(212,114,2)"/><text x="67.6766%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (106 samples, 0.25%)</title><rect x="67.4266%" y="917" width="0.2481%" height="15" fill="rgb(234,50,24)"/><text x="67.6766%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (106 samples, 0.25%)</title><rect x="67.4266%" y="901" width="0.2481%" height="15" fill="rgb(221,68,8)"/><text x="67.6766%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (106 samples, 0.25%)</title><rect x="67.4266%" y="885" width="0.2481%" height="15" fill="rgb(254,180,31)"/><text x="67.6766%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (106 samples, 0.25%)</title><rect x="67.4266%" y="869" width="0.2481%" height="15" fill="rgb(247,130,50)"/><text x="67.6766%" y="879.50"></text></g><g><title>&lt;model::rho_types::Send as core::clone::Clone&gt;::clone (106 samples, 0.25%)</title><rect x="67.4266%" y="853" width="0.2481%" height="15" fill="rgb(211,109,4)"/><text x="67.6766%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (106 samples, 0.25%)</title><rect x="67.4266%" y="837" width="0.2481%" height="15" fill="rgb(238,50,21)"/><text x="67.6766%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (106 samples, 0.25%)</title><rect x="67.4266%" y="821" width="0.2481%" height="15" fill="rgb(225,57,45)"/><text x="67.6766%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (106 samples, 0.25%)</title><rect x="67.4266%" y="805" width="0.2481%" height="15" fill="rgb(209,196,50)"/><text x="67.6766%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (106 samples, 0.25%)</title><rect x="67.4266%" y="789" width="0.2481%" height="15" fill="rgb(242,140,13)"/><text x="67.6766%" y="799.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (106 samples, 0.25%)</title><rect x="67.4266%" y="773" width="0.2481%" height="15" fill="rgb(217,111,7)"/><text x="67.6766%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (106 samples, 0.25%)</title><rect x="67.4266%" y="757" width="0.2481%" height="15" fill="rgb(253,193,51)"/><text x="67.6766%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (106 samples, 0.25%)</title><rect x="67.4266%" y="741" width="0.2481%" height="15" fill="rgb(252,70,29)"/><text x="67.6766%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (106 samples, 0.25%)</title><rect x="67.4266%" y="725" width="0.2481%" height="15" fill="rgb(232,127,12)"/><text x="67.6766%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (106 samples, 0.25%)</title><rect x="67.4266%" y="709" width="0.2481%" height="15" fill="rgb(211,180,21)"/><text x="67.6766%" y="719.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (106 samples, 0.25%)</title><rect x="67.4266%" y="693" width="0.2481%" height="15" fill="rgb(229,72,13)"/><text x="67.6766%" y="703.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (106 samples, 0.25%)</title><rect x="67.4266%" y="677" width="0.2481%" height="15" fill="rgb(240,211,49)"/><text x="67.6766%" y="687.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (106 samples, 0.25%)</title><rect x="67.4266%" y="661" width="0.2481%" height="15" fill="rgb(219,149,40)"/><text x="67.6766%" y="671.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (106 samples, 0.25%)</title><rect x="67.4266%" y="645" width="0.2481%" height="15" fill="rgb(210,127,46)"/><text x="67.6766%" y="655.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (106 samples, 0.25%)</title><rect x="67.4266%" y="629" width="0.2481%" height="15" fill="rgb(220,106,7)"/><text x="67.6766%" y="639.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (106 samples, 0.25%)</title><rect x="67.4266%" y="613" width="0.2481%" height="15" fill="rgb(249,31,22)"/><text x="67.6766%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (106 samples, 0.25%)</title><rect x="67.4266%" y="597" width="0.2481%" height="15" fill="rgb(253,1,49)"/><text x="67.6766%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (106 samples, 0.25%)</title><rect x="67.4266%" y="581" width="0.2481%" height="15" fill="rgb(227,144,33)"/><text x="67.6766%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (106 samples, 0.25%)</title><rect x="67.4266%" y="565" width="0.2481%" height="15" fill="rgb(249,163,44)"/><text x="67.6766%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (106 samples, 0.25%)</title><rect x="67.4266%" y="549" width="0.2481%" height="15" fill="rgb(234,15,39)"/><text x="67.6766%" y="559.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (23 samples, 0.05%)</title><rect x="67.6209%" y="533" width="0.0538%" height="15" fill="rgb(207,66,16)"/><text x="67.8709%" y="543.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.02%)</title><rect x="67.6513%" y="517" width="0.0234%" height="15" fill="rgb(233,112,24)"/><text x="67.9013%" y="527.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (6 samples, 0.01%)</title><rect x="67.6747%" y="1173" width="0.0140%" height="15" fill="rgb(230,90,22)"/><text x="67.9247%" y="1183.50"></text></g><g><title>[libc-2.31.so] (120 samples, 0.28%)</title><rect x="67.7122%" y="1157" width="0.2809%" height="15" fill="rgb(229,61,13)"/><text x="67.9622%" y="1167.50"></text></g><g><title>arena_bin_lower_slab (18 samples, 0.04%)</title><rect x="68.0422%" y="981" width="0.0421%" height="15" fill="rgb(225,57,24)"/><text x="68.2922%" y="991.50"></text></g><g><title>extent_snad_comp (17 samples, 0.04%)</title><rect x="68.0446%" y="965" width="0.0398%" height="15" fill="rgb(208,169,48)"/><text x="68.2946%" y="975.50"></text></g><g><title>extent_sn_comp (14 samples, 0.03%)</title><rect x="68.0516%" y="949" width="0.0328%" height="15" fill="rgb(244,218,51)"/><text x="68.3016%" y="959.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (47 samples, 0.11%)</title><rect x="68.0258%" y="1013" width="0.1100%" height="15" fill="rgb(214,148,10)"/><text x="68.2758%" y="1023.50"></text></g><g><title>arena_dalloc_bin_locked_impl (46 samples, 0.11%)</title><rect x="68.0282%" y="997" width="0.1077%" height="15" fill="rgb(225,174,27)"/><text x="68.2782%" y="1007.50"></text></g><g><title>arena_slab_reg_dalloc (17 samples, 0.04%)</title><rect x="68.0961%" y="981" width="0.0398%" height="15" fill="rgb(230,96,26)"/><text x="68.3461%" y="991.50"></text></g><g><title>bitmap_unset (13 samples, 0.03%)</title><rect x="68.1054%" y="965" width="0.0304%" height="15" fill="rgb(232,10,30)"/><text x="68.3554%" y="975.50"></text></g><g><title>extent_arena_get (40 samples, 0.09%)</title><rect x="68.1382%" y="1013" width="0.0936%" height="15" fill="rgb(222,8,50)"/><text x="68.3882%" y="1023.50"></text></g><g><title>atomic_load_p (27 samples, 0.06%)</title><rect x="68.1686%" y="997" width="0.0632%" height="15" fill="rgb(213,81,27)"/><text x="68.4186%" y="1007.50"></text></g><g><title>malloc_mutex_lock (33 samples, 0.08%)</title><rect x="68.2412%" y="1013" width="0.0772%" height="15" fill="rgb(245,50,10)"/><text x="68.4912%" y="1023.50"></text></g><g><title>malloc_mutex_trylock_final (33 samples, 0.08%)</title><rect x="68.2412%" y="997" width="0.0772%" height="15" fill="rgb(216,100,18)"/><text x="68.4912%" y="1007.50"></text></g><g><title>__GI___pthread_mutex_trylock (33 samples, 0.08%)</title><rect x="68.2412%" y="981" width="0.0772%" height="15" fill="rgb(236,147,54)"/><text x="68.4912%" y="991.50"></text></g><g><title>isfree (140 samples, 0.33%)</title><rect x="68.0095%" y="1093" width="0.3277%" height="15" fill="rgb(205,143,26)"/><text x="68.2595%" y="1103.50"></text></g><g><title>isdalloct (140 samples, 0.33%)</title><rect x="68.0095%" y="1077" width="0.3277%" height="15" fill="rgb(236,26,9)"/><text x="68.2595%" y="1087.50"></text></g><g><title>arena_sdalloc (140 samples, 0.33%)</title><rect x="68.0095%" y="1061" width="0.3277%" height="15" fill="rgb(221,165,53)"/><text x="68.2595%" y="1071.50"></text></g><g><title>tcache_dalloc_small (140 samples, 0.33%)</title><rect x="68.0095%" y="1045" width="0.3277%" height="15" fill="rgb(214,110,17)"/><text x="68.2595%" y="1055.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (138 samples, 0.32%)</title><rect x="68.0141%" y="1029" width="0.3230%" height="15" fill="rgb(237,197,12)"/><text x="68.2641%" y="1039.50"></text></g><g><title>malloc_mutex_unlock (8 samples, 0.02%)</title><rect x="68.3184%" y="1013" width="0.0187%" height="15" fill="rgb(205,84,17)"/><text x="68.5684%" y="1023.50"></text></g><g><title>__GI___pthread_mutex_unlock (8 samples, 0.02%)</title><rect x="68.3184%" y="997" width="0.0187%" height="15" fill="rgb(237,18,45)"/><text x="68.5684%" y="1007.50"></text></g><g><title>_rjem_sdallocx (145 samples, 0.34%)</title><rect x="68.0001%" y="1109" width="0.3394%" height="15" fill="rgb(221,87,14)"/><text x="68.2501%" y="1119.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (5 samples, 0.01%)</title><rect x="68.3395%" y="1109" width="0.0117%" height="15" fill="rgb(238,186,15)"/><text x="68.5895%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;rho_runtime::storage::transit::Transit&gt;&gt;&gt;&gt; (190 samples, 0.44%)</title><rect x="67.9931%" y="1157" width="0.4447%" height="15" fill="rgb(208,115,11)"/><text x="68.2431%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;rho_runtime::storage::transit::Transit&gt;&gt;&gt; (190 samples, 0.44%)</title><rect x="67.9931%" y="1141" width="0.4447%" height="15" fill="rgb(254,175,0)"/><text x="68.2431%" y="1151.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (190 samples, 0.44%)</title><rect x="67.9931%" y="1125" width="0.4447%" height="15" fill="rgb(227,24,42)"/><text x="68.2431%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (37 samples, 0.09%)</title><rect x="68.3512%" y="1109" width="0.0866%" height="15" fill="rgb(223,211,37)"/><text x="68.6012%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_sub (37 samples, 0.09%)</title><rect x="68.3512%" y="1093" width="0.0866%" height="15" fill="rgb(235,49,27)"/><text x="68.6012%" y="1103.50"></text></g><g><title>[libc-2.31.so] (72 samples, 0.17%)</title><rect x="68.4612%" y="1141" width="0.1685%" height="15" fill="rgb(254,97,51)"/><text x="68.7112%" y="1151.50"></text></g><g><title>tokio::coop::poll_proceed (55 samples, 0.13%)</title><rect x="68.6321%" y="1141" width="0.1287%" height="15" fill="rgb(249,51,40)"/><text x="68.8821%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (55 samples, 0.13%)</title><rect x="68.6321%" y="1125" width="0.1287%" height="15" fill="rgb(210,128,45)"/><text x="68.8821%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (55 samples, 0.13%)</title><rect x="68.6321%" y="1109" width="0.1287%" height="15" fill="rgb(224,137,50)"/><text x="68.8821%" y="1119.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (54 samples, 0.13%)</title><rect x="68.6344%" y="1093" width="0.1264%" height="15" fill="rgb(242,15,9)"/><text x="68.8844%" y="1103.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (53 samples, 0.12%)</title><rect x="68.6368%" y="1077" width="0.1241%" height="15" fill="rgb(233,187,41)"/><text x="68.8868%" y="1087.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (53 samples, 0.12%)</title><rect x="68.6368%" y="1061" width="0.1241%" height="15" fill="rgb(227,2,29)"/><text x="68.8868%" y="1071.50"></text></g><g><title>core::mem::replace (53 samples, 0.12%)</title><rect x="68.6368%" y="1045" width="0.1241%" height="15" fill="rgb(222,70,3)"/><text x="68.8868%" y="1055.50"></text></g><g><title>core::mem::swap (53 samples, 0.12%)</title><rect x="68.6368%" y="1029" width="0.1241%" height="15" fill="rgb(213,11,42)"/><text x="68.8868%" y="1039.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (53 samples, 0.12%)</title><rect x="68.6368%" y="1013" width="0.1241%" height="15" fill="rgb(225,150,9)"/><text x="68.8868%" y="1023.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (53 samples, 0.12%)</title><rect x="68.6368%" y="997" width="0.1241%" height="15" fill="rgb(230,162,45)"/><text x="68.8868%" y="1007.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::consume_value (122 samples, 0.29%)</title><rect x="68.7608%" y="1141" width="0.2856%" height="15" fill="rgb(222,14,52)"/><text x="69.0108%" y="1151.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (122 samples, 0.29%)</title><rect x="68.7608%" y="1125" width="0.2856%" height="15" fill="rgb(254,198,14)"/><text x="69.0108%" y="1135.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::consume_value::{{closure}} (122 samples, 0.29%)</title><rect x="68.7608%" y="1109" width="0.2856%" height="15" fill="rgb(220,217,30)"/><text x="69.0108%" y="1119.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (122 samples, 0.29%)</title><rect x="68.7608%" y="1093" width="0.2856%" height="15" fill="rgb(215,146,41)"/><text x="69.0108%" y="1103.50"></text></g><g><title>core::mem::take (122 samples, 0.29%)</title><rect x="68.7608%" y="1077" width="0.2856%" height="15" fill="rgb(217,27,36)"/><text x="69.0108%" y="1087.50"></text></g><g><title>core::mem::replace (122 samples, 0.29%)</title><rect x="68.7608%" y="1061" width="0.2856%" height="15" fill="rgb(219,218,39)"/><text x="69.0108%" y="1071.50"></text></g><g><title>core::mem::swap (122 samples, 0.29%)</title><rect x="68.7608%" y="1045" width="0.2856%" height="15" fill="rgb(219,4,42)"/><text x="69.0108%" y="1055.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (122 samples, 0.29%)</title><rect x="68.7608%" y="1029" width="0.2856%" height="15" fill="rgb(249,119,36)"/><text x="69.0108%" y="1039.50"></text></g><g><title>core::ptr::swap_nonoverlapping (122 samples, 0.29%)</title><rect x="68.7608%" y="1013" width="0.2856%" height="15" fill="rgb(209,23,33)"/><text x="69.0108%" y="1023.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (122 samples, 0.29%)</title><rect x="68.7608%" y="997" width="0.2856%" height="15" fill="rgb(211,10,0)"/><text x="69.0108%" y="1007.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (107 samples, 0.25%)</title><rect x="68.7959%" y="981" width="0.2505%" height="15" fill="rgb(208,99,37)"/><text x="69.0459%" y="991.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (575 samples, 1.35%)</title><rect x="67.7028%" y="1173" width="1.3459%" height="15" fill="rgb(213,132,31)"/><text x="67.9528%" y="1183.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::poll_recv (261 samples, 0.61%)</title><rect x="68.4378%" y="1157" width="0.6109%" height="15" fill="rgb(243,129,40)"/><text x="68.6878%" y="1167.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="69.2688%" y="1157" width="0.0164%" height="15" fill="rgb(210,66,33)"/><text x="69.5188%" y="1167.50"></text></g><g><title>[libc-2.31.so] (108 samples, 0.25%)</title><rect x="69.0487%" y="1173" width="0.2528%" height="15" fill="rgb(209,189,4)"/><text x="69.2987%" y="1183.50"></text></g><g><title>__rg_alloc (5 samples, 0.01%)</title><rect x="69.3039%" y="1173" width="0.0117%" height="15" fill="rgb(214,107,37)"/><text x="69.5539%" y="1183.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (5 samples, 0.01%)</title><rect x="69.3039%" y="1157" width="0.0117%" height="15" fill="rgb(245,88,54)"/><text x="69.5539%" y="1167.50"></text></g><g><title>__rg_dealloc (13 samples, 0.03%)</title><rect x="69.3156%" y="1173" width="0.0304%" height="15" fill="rgb(205,146,20)"/><text x="69.5656%" y="1183.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (13 samples, 0.03%)</title><rect x="69.3156%" y="1157" width="0.0304%" height="15" fill="rgb(220,161,25)"/><text x="69.5656%" y="1167.50"></text></g><g><title>_rjem_mallocx (10 samples, 0.02%)</title><rect x="69.3577%" y="1173" width="0.0234%" height="15" fill="rgb(215,152,15)"/><text x="69.6077%" y="1183.50"></text></g><g><title>_rjem_sdallocx (19 samples, 0.04%)</title><rect x="69.3811%" y="1173" width="0.0445%" height="15" fill="rgb(233,192,44)"/><text x="69.6311%" y="1183.50"></text></g><g><title>alloc::slice::merge_sort (33 samples, 0.08%)</title><rect x="69.4326%" y="1173" width="0.0772%" height="15" fill="rgb(240,170,46)"/><text x="69.6826%" y="1183.50"></text></g><g><title>blake3::ChunkState::update (25 samples, 0.06%)</title><rect x="69.5122%" y="1173" width="0.0585%" height="15" fill="rgb(207,104,33)"/><text x="69.7622%" y="1183.50"></text></g><g><title>blake3::Hasher::update (13 samples, 0.03%)</title><rect x="69.5824%" y="1173" width="0.0304%" height="15" fill="rgb(219,21,39)"/><text x="69.8324%" y="1183.50"></text></g><g><title>blake3::Hasher::update_with_join (6 samples, 0.01%)</title><rect x="69.5988%" y="1157" width="0.0140%" height="15" fill="rgb(214,133,29)"/><text x="69.8488%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::expr::ExprInstance&gt;&gt; (5 samples, 0.01%)</title><rect x="69.6409%" y="1173" width="0.0117%" height="15" fill="rgb(226,93,6)"/><text x="69.8909%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Expr&gt; (7 samples, 0.02%)</title><rect x="69.6550%" y="1173" width="0.0164%" height="15" fill="rgb(252,222,34)"/><text x="69.9050%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (5 samples, 0.01%)</title><rect x="69.6854%" y="1157" width="0.0117%" height="15" fill="rgb(252,92,48)"/><text x="69.9354%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (18 samples, 0.04%)</title><rect x="69.6760%" y="1173" width="0.0421%" height="15" fill="rgb(245,223,24)"/><text x="69.9260%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::bitset::BitSet&gt;&gt; (6 samples, 0.01%)</title><rect x="69.7041%" y="1157" width="0.0140%" height="15" fill="rgb(205,176,3)"/><text x="69.9541%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::bitset::BitSet&gt; (6 samples, 0.01%)</title><rect x="69.7041%" y="1141" width="0.0140%" height="15" fill="rgb(235,151,15)"/><text x="69.9541%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;bit_vec::BitVec&gt; (6 samples, 0.01%)</title><rect x="69.7041%" y="1125" width="0.0140%" height="15" fill="rgb(237,209,11)"/><text x="69.9541%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u32&gt;&gt; (6 samples, 0.01%)</title><rect x="69.7041%" y="1109" width="0.0140%" height="15" fill="rgb(243,227,24)"/><text x="69.9541%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u32&gt;&gt; (6 samples, 0.01%)</title><rect x="69.7041%" y="1093" width="0.0140%" height="15" fill="rgb(239,193,16)"/><text x="69.9541%" y="1103.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="69.7041%" y="1077" width="0.0140%" height="15" fill="rgb(231,27,9)"/><text x="69.9541%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.01%)</title><rect x="69.7041%" y="1061" width="0.0140%" height="15" fill="rgb(219,169,10)"/><text x="69.9541%" y="1071.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.01%)</title><rect x="69.7041%" y="1045" width="0.0140%" height="15" fill="rgb(244,229,43)"/><text x="69.9541%" y="1055.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (8 samples, 0.02%)</title><rect x="69.7603%" y="1173" width="0.0187%" height="15" fill="rgb(254,38,20)"/><text x="70.0103%" y="1183.50"></text></g><g><title>core::ptr::read (5 samples, 0.01%)</title><rect x="69.8212%" y="1141" width="0.0117%" height="15" fill="rgb(250,47,30)"/><text x="70.0712%" y="1151.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="69.8188%" y="1157" width="0.0164%" height="15" fill="rgb(224,124,36)"/><text x="70.0688%" y="1167.50"></text></g><g><title>[libc-2.31.so] (54 samples, 0.13%)</title><rect x="69.8469%" y="1141" width="0.1264%" height="15" fill="rgb(246,68,51)"/><text x="70.0969%" y="1151.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (61 samples, 0.14%)</title><rect x="69.8352%" y="1157" width="0.1428%" height="15" fill="rgb(253,43,49)"/><text x="70.0852%" y="1167.50"></text></g><g><title>[libc-2.31.so] (83 samples, 0.19%)</title><rect x="69.9780%" y="1157" width="0.1943%" height="15" fill="rgb(219,54,36)"/><text x="70.2280%" y="1167.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="70.2144%" y="1077" width="0.0117%" height="15" fill="rgb(227,133,34)"/><text x="70.4644%" y="1087.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="70.2261%" y="1029" width="0.0117%" height="15" fill="rgb(247,227,15)"/><text x="70.4761%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="70.2261%" y="1077" width="0.0164%" height="15" fill="rgb(229,96,14)"/><text x="70.4761%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (7 samples, 0.02%)</title><rect x="70.2261%" y="1061" width="0.0164%" height="15" fill="rgb(220,79,17)"/><text x="70.4761%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="70.2261%" y="1045" width="0.0164%" height="15" fill="rgb(205,131,53)"/><text x="70.4761%" y="1055.50"></text></g><g><title>[libc-2.31.so] (20 samples, 0.05%)</title><rect x="70.2448%" y="1077" width="0.0468%" height="15" fill="rgb(209,50,29)"/><text x="70.4948%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.11%)</title><rect x="70.2074%" y="1109" width="0.1077%" height="15" fill="rgb(245,86,46)"/><text x="70.4574%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.11%)</title><rect x="70.2074%" y="1093" width="0.1077%" height="15" fill="rgb(235,66,46)"/><text x="70.4574%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::into_iter::IntoIter&lt;model::rho_types::Par&gt;&gt;&gt; (10 samples, 0.02%)</title><rect x="70.2917%" y="1077" width="0.0234%" height="15" fill="rgb(232,148,31)"/><text x="70.5417%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;model::rho_types::Par&gt;&gt; (10 samples, 0.02%)</title><rect x="70.2917%" y="1061" width="0.0234%" height="15" fill="rgb(217,149,8)"/><text x="70.5417%" y="1071.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="70.2917%" y="1045" width="0.0234%" height="15" fill="rgb(209,183,11)"/><text x="70.5417%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;model::rho_types::Par,alloc::alloc::Global&gt;&gt; (10 samples, 0.02%)</title><rect x="70.2917%" y="1029" width="0.0234%" height="15" fill="rgb(208,55,20)"/><text x="70.5417%" y="1039.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="70.2917%" y="1013" width="0.0234%" height="15" fill="rgb(218,39,14)"/><text x="70.5417%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Par&gt;&gt; (10 samples, 0.02%)</title><rect x="70.2917%" y="997" width="0.0234%" height="15" fill="rgb(216,169,33)"/><text x="70.5417%" y="1007.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="70.2917%" y="981" width="0.0234%" height="15" fill="rgb(233,80,24)"/><text x="70.5417%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.02%)</title><rect x="70.2917%" y="965" width="0.0234%" height="15" fill="rgb(213,179,31)"/><text x="70.5417%" y="975.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.02%)</title><rect x="70.2940%" y="949" width="0.0211%" height="15" fill="rgb(209,19,5)"/><text x="70.5440%" y="959.50"></text></g><g><title>_rjem_sdallocx (5 samples, 0.01%)</title><rect x="70.3034%" y="933" width="0.0117%" height="15" fill="rgb(219,18,35)"/><text x="70.5534%" y="943.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.02%)</title><rect x="70.3197%" y="1109" width="0.0211%" height="15" fill="rgb(209,169,16)"/><text x="70.5697%" y="1119.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (71 samples, 0.17%)</title><rect x="70.1910%" y="1125" width="0.1662%" height="15" fill="rgb(245,90,51)"/><text x="70.4410%" y="1135.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (82 samples, 0.19%)</title><rect x="70.1816%" y="1141" width="0.1919%" height="15" fill="rgb(220,99,45)"/><text x="70.4316%" y="1151.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.02%)</title><rect x="70.3572%" y="1125" width="0.0164%" height="15" fill="rgb(249,89,25)"/><text x="70.6072%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (99 samples, 0.23%)</title><rect x="70.1723%" y="1157" width="0.2317%" height="15" fill="rgb(239,193,0)"/><text x="70.4223%" y="1167.50"></text></g><g><title>[libc-2.31.so] (13 samples, 0.03%)</title><rect x="70.3736%" y="1141" width="0.0304%" height="15" fill="rgb(231,126,1)"/><text x="70.6236%" y="1151.50"></text></g><g><title>_rjem_sdallocx (6 samples, 0.01%)</title><rect x="70.4157%" y="1093" width="0.0140%" height="15" fill="rgb(243,166,3)"/><text x="70.6657%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="70.4344%" y="1061" width="0.0140%" height="15" fill="rgb(223,22,34)"/><text x="70.6844%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Expr]&gt; (6 samples, 0.01%)</title><rect x="70.4344%" y="1045" width="0.0140%" height="15" fill="rgb(251,52,51)"/><text x="70.6844%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (18 samples, 0.04%)</title><rect x="70.4344%" y="1077" width="0.0421%" height="15" fill="rgb(221,165,28)"/><text x="70.6844%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (12 samples, 0.03%)</title><rect x="70.4485%" y="1061" width="0.0281%" height="15" fill="rgb(218,121,47)"/><text x="70.6985%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.03%)</title><rect x="70.4485%" y="1045" width="0.0281%" height="15" fill="rgb(209,120,9)"/><text x="70.6985%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.03%)</title><rect x="70.4485%" y="1029" width="0.0281%" height="15" fill="rgb(236,68,12)"/><text x="70.6985%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.03%)</title><rect x="70.4485%" y="1013" width="0.0281%" height="15" fill="rgb(225,194,26)"/><text x="70.6985%" y="1023.50"></text></g><g><title>_rjem_sdallocx (9 samples, 0.02%)</title><rect x="70.4555%" y="997" width="0.0211%" height="15" fill="rgb(231,84,39)"/><text x="70.7055%" y="1007.50"></text></g><g><title>isfree (8 samples, 0.02%)</title><rect x="70.4578%" y="981" width="0.0187%" height="15" fill="rgb(210,11,45)"/><text x="70.7078%" y="991.50"></text></g><g><title>isdalloct (8 samples, 0.02%)</title><rect x="70.4578%" y="965" width="0.0187%" height="15" fill="rgb(224,54,52)"/><text x="70.7078%" y="975.50"></text></g><g><title>arena_sdalloc (8 samples, 0.02%)</title><rect x="70.4578%" y="949" width="0.0187%" height="15" fill="rgb(238,102,14)"/><text x="70.7078%" y="959.50"></text></g><g><title>tcache_dalloc_small (6 samples, 0.01%)</title><rect x="70.4625%" y="933" width="0.0140%" height="15" fill="rgb(243,160,52)"/><text x="70.7125%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;rho_runtime::interpreter::reduce::environment::Env&gt; (37 samples, 0.09%)</title><rect x="70.4063%" y="1157" width="0.0866%" height="15" fill="rgb(216,114,19)"/><text x="70.6563%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[model::rho_types::Par: 6]&gt;&gt; (37 samples, 0.09%)</title><rect x="70.4063%" y="1141" width="0.0866%" height="15" fill="rgb(244,166,37)"/><text x="70.6563%" y="1151.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.08%)</title><rect x="70.4087%" y="1125" width="0.0843%" height="15" fill="rgb(246,29,44)"/><text x="70.6587%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Par]&gt; (36 samples, 0.08%)</title><rect x="70.4087%" y="1109" width="0.0843%" height="15" fill="rgb(215,56,53)"/><text x="70.6587%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (27 samples, 0.06%)</title><rect x="70.4298%" y="1093" width="0.0632%" height="15" fill="rgb(217,60,2)"/><text x="70.6798%" y="1103.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (17 samples, 0.04%)</title><rect x="70.5047%" y="1141" width="0.0398%" height="15" fill="rgb(207,26,24)"/><text x="70.7547%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (17 samples, 0.04%)</title><rect x="70.5047%" y="1125" width="0.0398%" height="15" fill="rgb(252,210,15)"/><text x="70.7547%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_add (17 samples, 0.04%)</title><rect x="70.5047%" y="1109" width="0.0398%" height="15" fill="rgb(253,209,26)"/><text x="70.7547%" y="1119.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.02%)</title><rect x="70.5562%" y="997" width="0.0164%" height="15" fill="rgb(238,170,14)"/><text x="70.8062%" y="1007.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (16 samples, 0.04%)</title><rect x="70.6311%" y="885" width="0.0375%" height="15" fill="rgb(216,178,15)"/><text x="70.8811%" y="895.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.01%)</title><rect x="70.6568%" y="869" width="0.0117%" height="15" fill="rgb(250,197,2)"/><text x="70.9068%" y="879.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (38 samples, 0.09%)</title><rect x="70.6194%" y="901" width="0.0889%" height="15" fill="rgb(212,70,42)"/><text x="70.8694%" y="911.50"></text></g><g><title>[libc-2.31.so] (17 samples, 0.04%)</title><rect x="70.6685%" y="885" width="0.0398%" height="15" fill="rgb(227,213,9)"/><text x="70.9185%" y="895.50"></text></g><g><title>imalloc_body (5 samples, 0.01%)</title><rect x="70.7528%" y="773" width="0.0117%" height="15" fill="rgb(245,99,25)"/><text x="71.0028%" y="783.50"></text></g><g><title>imalloc_no_sample (5 samples, 0.01%)</title><rect x="70.7528%" y="757" width="0.0117%" height="15" fill="rgb(250,82,29)"/><text x="71.0028%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.04%)</title><rect x="70.7270%" y="853" width="0.0398%" height="15" fill="rgb(241,226,54)"/><text x="70.9770%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.04%)</title><rect x="70.7270%" y="837" width="0.0398%" height="15" fill="rgb(221,99,41)"/><text x="70.9770%" y="847.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.03%)</title><rect x="70.7364%" y="821" width="0.0304%" height="15" fill="rgb(213,90,21)"/><text x="70.9864%" y="831.50"></text></g><g><title>_rjem_mallocx (11 samples, 0.03%)</title><rect x="70.7411%" y="805" width="0.0257%" height="15" fill="rgb(205,208,24)"/><text x="70.9911%" y="815.50"></text></g><g><title>imalloc (8 samples, 0.02%)</title><rect x="70.7481%" y="789" width="0.0187%" height="15" fill="rgb(246,31,12)"/><text x="70.9981%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (26 samples, 0.06%)</title><rect x="70.7083%" y="901" width="0.0609%" height="15" fill="rgb(213,154,6)"/><text x="70.9583%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (22 samples, 0.05%)</title><rect x="70.7177%" y="885" width="0.0515%" height="15" fill="rgb(222,163,29)"/><text x="70.9677%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (22 samples, 0.05%)</title><rect x="70.7177%" y="869" width="0.0515%" height="15" fill="rgb(227,201,8)"/><text x="70.9677%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (85 samples, 0.20%)</title><rect x="70.5936%" y="965" width="0.1990%" height="15" fill="rgb(233,9,32)"/><text x="70.8436%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (82 samples, 0.19%)</title><rect x="70.6006%" y="949" width="0.1919%" height="15" fill="rgb(217,54,24)"/><text x="70.8506%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (82 samples, 0.19%)</title><rect x="70.6006%" y="933" width="0.1919%" height="15" fill="rgb(235,192,0)"/><text x="70.8506%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (82 samples, 0.19%)</title><rect x="70.6006%" y="917" width="0.1919%" height="15" fill="rgb(235,45,9)"/><text x="70.8506%" y="927.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (10 samples, 0.02%)</title><rect x="70.7692%" y="901" width="0.0234%" height="15" fill="rgb(246,42,40)"/><text x="71.0192%" y="911.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.01%)</title><rect x="70.7809%" y="885" width="0.0117%" height="15" fill="rgb(248,111,24)"/><text x="71.0309%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (111 samples, 0.26%)</title><rect x="70.5468%" y="1045" width="0.2598%" height="15" fill="rgb(249,65,22)"/><text x="70.7968%" y="1055.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (108 samples, 0.25%)</title><rect x="70.5538%" y="1029" width="0.2528%" height="15" fill="rgb(238,111,51)"/><text x="70.8038%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (108 samples, 0.25%)</title><rect x="70.5538%" y="1013" width="0.2528%" height="15" fill="rgb(250,118,22)"/><text x="70.8038%" y="1023.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (100 samples, 0.23%)</title><rect x="70.5725%" y="997" width="0.2341%" height="15" fill="rgb(234,84,26)"/><text x="70.8225%" y="1007.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (100 samples, 0.23%)</title><rect x="70.5725%" y="981" width="0.2341%" height="15" fill="rgb(243,172,12)"/><text x="70.8225%" y="991.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="70.7926%" y="965" width="0.0140%" height="15" fill="rgb(236,150,49)"/><text x="71.0426%" y="975.50"></text></g><g><title>core::ptr::write (30 samples, 0.07%)</title><rect x="70.8090%" y="1045" width="0.0702%" height="15" fill="rgb(225,197,26)"/><text x="71.0590%" y="1055.50"></text></g><g><title>[libc-2.31.so] (29 samples, 0.07%)</title><rect x="70.8113%" y="1029" width="0.0679%" height="15" fill="rgb(214,17,42)"/><text x="71.0613%" y="1039.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::clone::Clone&gt;::clone (146 samples, 0.34%)</title><rect x="70.5445%" y="1125" width="0.3417%" height="15" fill="rgb(224,165,40)"/><text x="70.7945%" y="1135.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::convert::From&lt;&amp;[&lt;A as smallvec::Array&gt;::Item]&gt;&gt;::from (146 samples, 0.34%)</title><rect x="70.5445%" y="1109" width="0.3417%" height="15" fill="rgb(246,100,4)"/><text x="70.7945%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (146 samples, 0.34%)</title><rect x="70.5445%" y="1093" width="0.3417%" height="15" fill="rgb(222,103,0)"/><text x="70.7945%" y="1103.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (146 samples, 0.34%)</title><rect x="70.5445%" y="1077" width="0.3417%" height="15" fill="rgb(227,189,26)"/><text x="70.7945%" y="1087.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (146 samples, 0.34%)</title><rect x="70.5445%" y="1061" width="0.3417%" height="15" fill="rgb(214,202,17)"/><text x="70.7945%" y="1071.50"></text></g><g><title>&lt;rho_runtime::interpreter::reduce::environment::Env&lt;T&gt; as core::clone::Clone&gt;::clone (175 samples, 0.41%)</title><rect x="70.5445%" y="1141" width="0.4096%" height="15" fill="rgb(229,111,3)"/><text x="70.7945%" y="1151.50"></text></g><g><title>[libc-2.31.so] (29 samples, 0.07%)</title><rect x="70.8862%" y="1125" width="0.0679%" height="15" fill="rgb(229,172,15)"/><text x="71.1362%" y="1135.50"></text></g><g><title>core::future::from_generator (13 samples, 0.03%)</title><rect x="70.9634%" y="1141" width="0.0304%" height="15" fill="rgb(230,224,35)"/><text x="71.2134%" y="1151.50"></text></g><g><title>[libc-2.31.so] (12 samples, 0.03%)</title><rect x="70.9658%" y="1125" width="0.0281%" height="15" fill="rgb(251,141,6)"/><text x="71.2158%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::join::JoinHandle&lt;()&gt;&gt; (7 samples, 0.02%)</title><rect x="70.9939%" y="1141" width="0.0164%" height="15" fill="rgb(225,208,6)"/><text x="71.2439%" y="1151.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="70.9939%" y="1125" width="0.0164%" height="15" fill="rgb(246,181,16)"/><text x="71.2439%" y="1135.50"></text></g><g><title>tokio::runtime::task::state::State::drop_join_handle_fast (7 samples, 0.02%)</title><rect x="70.9939%" y="1109" width="0.0164%" height="15" fill="rgb(227,129,36)"/><text x="71.2439%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (5 samples, 0.01%)</title><rect x="70.9985%" y="1093" width="0.0117%" height="15" fill="rgb(248,117,24)"/><text x="71.2485%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (5 samples, 0.01%)</title><rect x="70.9985%" y="1077" width="0.0117%" height="15" fill="rgb(214,185,35)"/><text x="71.2485%" y="1087.50"></text></g><g><title>[libc-2.31.so] (24 samples, 0.06%)</title><rect x="71.0173%" y="1125" width="0.0562%" height="15" fill="rgb(236,150,34)"/><text x="71.2673%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::spawner::Spawner&gt; (7 samples, 0.02%)</title><rect x="71.0735%" y="1125" width="0.0164%" height="15" fill="rgb(243,228,27)"/><text x="71.3235%" y="1135.50"></text></g><g><title>tokio::runtime::context::spawn_handle (60 samples, 0.14%)</title><rect x="71.0898%" y="1125" width="0.1404%" height="15" fill="rgb(245,77,44)"/><text x="71.3398%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (59 samples, 0.14%)</title><rect x="71.0922%" y="1109" width="0.1381%" height="15" fill="rgb(235,214,42)"/><text x="71.3422%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (59 samples, 0.14%)</title><rect x="71.0922%" y="1093" width="0.1381%" height="15" fill="rgb(221,74,3)"/><text x="71.3422%" y="1103.50"></text></g><g><title>tokio::runtime::context::spawn_handle::{{closure}} (59 samples, 0.14%)</title><rect x="71.0922%" y="1077" width="0.1381%" height="15" fill="rgb(206,121,29)"/><text x="71.3422%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (59 samples, 0.14%)</title><rect x="71.0922%" y="1061" width="0.1381%" height="15" fill="rgb(249,131,53)"/><text x="71.3422%" y="1071.50"></text></g><g><title>tokio::runtime::context::spawn_handle::{{closure}}::{{closure}} (59 samples, 0.14%)</title><rect x="71.0922%" y="1045" width="0.1381%" height="15" fill="rgb(236,170,29)"/><text x="71.3422%" y="1055.50"></text></g><g><title>&lt;tokio::runtime::spawner::Spawner as core::clone::Clone&gt;::clone (59 samples, 0.14%)</title><rect x="71.0922%" y="1029" width="0.1381%" height="15" fill="rgb(247,96,15)"/><text x="71.3422%" y="1039.50"></text></g><g><title>[libc-2.31.so] (22 samples, 0.05%)</title><rect x="71.2303%" y="1061" width="0.0515%" height="15" fill="rgb(211,210,7)"/><text x="71.4803%" y="1071.50"></text></g><g><title>[libc-2.31.so] (26 samples, 0.06%)</title><rect x="71.2818%" y="1045" width="0.0609%" height="15" fill="rgb(240,88,50)"/><text x="71.5318%" y="1055.50"></text></g><g><title>[libc-2.31.so] (27 samples, 0.06%)</title><rect x="71.3590%" y="1029" width="0.0632%" height="15" fill="rgb(209,229,26)"/><text x="71.6090%" y="1039.50"></text></g><g><title>imalloc_no_sample (14 samples, 0.03%)</title><rect x="71.4339%" y="917" width="0.0328%" height="15" fill="rgb(210,68,23)"/><text x="71.6839%" y="927.50"></text></g><g><title>iallocztm (13 samples, 0.03%)</title><rect x="71.4363%" y="901" width="0.0304%" height="15" fill="rgb(229,180,13)"/><text x="71.6863%" y="911.50"></text></g><g><title>arena_malloc (13 samples, 0.03%)</title><rect x="71.4363%" y="885" width="0.0304%" height="15" fill="rgb(236,53,44)"/><text x="71.6863%" y="895.50"></text></g><g><title>tcache_alloc_small (13 samples, 0.03%)</title><rect x="71.4363%" y="869" width="0.0304%" height="15" fill="rgb(244,214,29)"/><text x="71.6863%" y="879.50"></text></g><g><title>cache_bin_alloc_easy (11 samples, 0.03%)</title><rect x="71.4409%" y="853" width="0.0257%" height="15" fill="rgb(220,75,29)"/><text x="71.6909%" y="863.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (86 samples, 0.20%)</title><rect x="71.2818%" y="1061" width="0.2013%" height="15" fill="rgb(214,183,37)"/><text x="71.5318%" y="1071.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (60 samples, 0.14%)</title><rect x="71.3426%" y="1045" width="0.1404%" height="15" fill="rgb(239,117,29)"/><text x="71.5926%" y="1055.50"></text></g><g><title>alloc::alloc::exchange_malloc (26 samples, 0.06%)</title><rect x="71.4222%" y="1029" width="0.0609%" height="15" fill="rgb(237,171,35)"/><text x="71.6722%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (26 samples, 0.06%)</title><rect x="71.4222%" y="1013" width="0.0609%" height="15" fill="rgb(229,178,53)"/><text x="71.6722%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (26 samples, 0.06%)</title><rect x="71.4222%" y="997" width="0.0609%" height="15" fill="rgb(210,102,19)"/><text x="71.6722%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (26 samples, 0.06%)</title><rect x="71.4222%" y="981" width="0.0609%" height="15" fill="rgb(235,127,22)"/><text x="71.6722%" y="991.50"></text></g><g><title>_rjem_mallocx (26 samples, 0.06%)</title><rect x="71.4222%" y="965" width="0.0609%" height="15" fill="rgb(244,31,31)"/><text x="71.6722%" y="975.50"></text></g><g><title>imalloc (21 samples, 0.05%)</title><rect x="71.4339%" y="949" width="0.0492%" height="15" fill="rgb(231,43,21)"/><text x="71.6839%" y="959.50"></text></g><g><title>imalloc_body (21 samples, 0.05%)</title><rect x="71.4339%" y="933" width="0.0492%" height="15" fill="rgb(217,131,35)"/><text x="71.6839%" y="943.50"></text></g><g><title>tokio::runtime::task::joinable (109 samples, 0.26%)</title><rect x="71.2303%" y="1093" width="0.2551%" height="15" fill="rgb(221,149,4)"/><text x="71.4803%" y="1103.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (109 samples, 0.26%)</title><rect x="71.2303%" y="1077" width="0.2551%" height="15" fill="rgb(232,170,28)"/><text x="71.4803%" y="1087.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation (444 samples, 1.04%)</title><rect x="70.4976%" y="1157" width="1.0393%" height="15" fill="rgb(238,56,10)"/><text x="70.7476%" y="1167.50"></text></g><g><title>tokio::task::spawn::spawn (222 samples, 0.52%)</title><rect x="71.0173%" y="1141" width="0.5196%" height="15" fill="rgb(235,196,14)"/><text x="71.2673%" y="1151.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (131 samples, 0.31%)</title><rect x="71.2303%" y="1125" width="0.3066%" height="15" fill="rgb(216,45,48)"/><text x="71.4803%" y="1135.50"></text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (131 samples, 0.31%)</title><rect x="71.2303%" y="1109" width="0.3066%" height="15" fill="rgb(238,213,17)"/><text x="71.4803%" y="1119.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (22 samples, 0.05%)</title><rect x="71.4854%" y="1093" width="0.0515%" height="15" fill="rgb(212,13,2)"/><text x="71.7354%" y="1103.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (22 samples, 0.05%)</title><rect x="71.4854%" y="1077" width="0.0515%" height="15" fill="rgb(240,114,20)"/><text x="71.7354%" y="1087.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (7 samples, 0.02%)</title><rect x="71.5205%" y="1061" width="0.0164%" height="15" fill="rgb(228,41,40)"/><text x="71.7705%" y="1071.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::handle_comm_events (762 samples, 1.78%)</title><rect x="69.7907%" y="1173" width="1.7836%" height="15" fill="rgb(244,132,35)"/><text x="70.0407%" y="1183.50">r..</text></g><g><title>rho_runtime::interpreter::reduce::environment::Env&lt;T&gt;::create (16 samples, 0.04%)</title><rect x="71.5369%" y="1157" width="0.0375%" height="15" fill="rgb(253,189,4)"/><text x="71.7869%" y="1167.50"></text></g><g><title>[libc-2.31.so] (14 samples, 0.03%)</title><rect x="71.5416%" y="1141" width="0.0328%" height="15" fill="rgb(224,37,19)"/><text x="71.7916%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.03%)</title><rect x="71.6914%" y="837" width="0.0281%" height="15" fill="rgb(235,223,18)"/><text x="71.9414%" y="847.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="71.7499%" y="805" width="0.0117%" height="15" fill="rgb(235,163,25)"/><text x="71.9999%" y="815.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for bool&gt;::clone (5 samples, 0.01%)</title><rect x="71.7499%" y="789" width="0.0117%" height="15" fill="rgb(217,145,28)"/><text x="71.9999%" y="799.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (24 samples, 0.06%)</title><rect x="71.7265%" y="821" width="0.0562%" height="15" fill="rgb(223,223,32)"/><text x="71.9765%" y="831.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.02%)</title><rect x="71.7616%" y="805" width="0.0211%" height="15" fill="rgb(227,189,39)"/><text x="72.0116%" y="815.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (43 samples, 0.10%)</title><rect x="71.7195%" y="837" width="0.1007%" height="15" fill="rgb(248,10,22)"/><text x="71.9695%" y="847.50"></text></g><g><title>[libc-2.31.so] (16 samples, 0.04%)</title><rect x="71.7827%" y="821" width="0.0375%" height="15" fill="rgb(248,46,39)"/><text x="72.0327%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="71.8997%" y="677" width="0.0140%" height="15" fill="rgb(248,113,48)"/><text x="72.1497%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.01%)</title><rect x="72.0776%" y="565" width="0.0117%" height="15" fill="rgb(245,16,25)"/><text x="72.3276%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (5 samples, 0.01%)</title><rect x="72.1127%" y="517" width="0.0117%" height="15" fill="rgb(249,152,16)"/><text x="72.3627%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (9 samples, 0.02%)</title><rect x="72.1549%" y="469" width="0.0211%" height="15" fill="rgb(250,16,1)"/><text x="72.4049%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (46 samples, 0.11%)</title><rect x="72.0776%" y="581" width="0.1077%" height="15" fill="rgb(249,138,3)"/><text x="72.3276%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (41 samples, 0.10%)</title><rect x="72.0893%" y="565" width="0.0960%" height="15" fill="rgb(227,71,41)"/><text x="72.3393%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (41 samples, 0.10%)</title><rect x="72.0893%" y="549" width="0.0960%" height="15" fill="rgb(209,184,23)"/><text x="72.3393%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (41 samples, 0.10%)</title><rect x="72.0893%" y="533" width="0.0960%" height="15" fill="rgb(223,215,31)"/><text x="72.3393%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (26 samples, 0.06%)</title><rect x="72.1244%" y="517" width="0.0609%" height="15" fill="rgb(210,146,28)"/><text x="72.3744%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 0.04%)</title><rect x="72.1455%" y="501" width="0.0398%" height="15" fill="rgb(209,183,41)"/><text x="72.3955%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (17 samples, 0.04%)</title><rect x="72.1455%" y="485" width="0.0398%" height="15" fill="rgb(209,224,45)"/><text x="72.3955%" y="495.50"></text></g><g><title>imalloc_body (5 samples, 0.01%)</title><rect x="72.2017%" y="341" width="0.0117%" height="15" fill="rgb(224,209,51)"/><text x="72.4517%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.03%)</title><rect x="72.1900%" y="469" width="0.0328%" height="15" fill="rgb(223,17,39)"/><text x="72.4400%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.03%)</title><rect x="72.1900%" y="453" width="0.0328%" height="15" fill="rgb(234,204,37)"/><text x="72.4400%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.03%)</title><rect x="72.1900%" y="437" width="0.0328%" height="15" fill="rgb(236,120,5)"/><text x="72.4400%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.03%)</title><rect x="72.1900%" y="421" width="0.0328%" height="15" fill="rgb(248,97,27)"/><text x="72.4400%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.03%)</title><rect x="72.1900%" y="405" width="0.0328%" height="15" fill="rgb(240,66,17)"/><text x="72.4400%" y="415.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.03%)</title><rect x="72.1900%" y="389" width="0.0328%" height="15" fill="rgb(210,79,3)"/><text x="72.4400%" y="399.50"></text></g><g><title>_rjem_mallocx (11 samples, 0.03%)</title><rect x="72.1970%" y="373" width="0.0257%" height="15" fill="rgb(214,176,27)"/><text x="72.4470%" y="383.50"></text></g><g><title>imalloc (9 samples, 0.02%)</title><rect x="72.2017%" y="357" width="0.0211%" height="15" fill="rgb(235,185,3)"/><text x="72.4517%" y="367.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (88 samples, 0.21%)</title><rect x="72.0191%" y="597" width="0.2060%" height="15" fill="rgb(227,24,12)"/><text x="72.2691%" y="607.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (17 samples, 0.04%)</title><rect x="72.1853%" y="581" width="0.0398%" height="15" fill="rgb(252,169,48)"/><text x="72.4353%" y="591.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (15 samples, 0.04%)</title><rect x="72.1900%" y="565" width="0.0351%" height="15" fill="rgb(212,65,1)"/><text x="72.4400%" y="575.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (15 samples, 0.04%)</title><rect x="72.1900%" y="549" width="0.0351%" height="15" fill="rgb(242,39,24)"/><text x="72.4400%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.04%)</title><rect x="72.1900%" y="533" width="0.0351%" height="15" fill="rgb(249,32,23)"/><text x="72.4400%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15 samples, 0.04%)</title><rect x="72.1900%" y="517" width="0.0351%" height="15" fill="rgb(251,195,23)"/><text x="72.4400%" y="527.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 0.04%)</title><rect x="72.1900%" y="501" width="0.0351%" height="15" fill="rgb(236,174,8)"/><text x="72.4400%" y="511.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15 samples, 0.04%)</title><rect x="72.1900%" y="485" width="0.0351%" height="15" fill="rgb(220,197,8)"/><text x="72.4400%" y="495.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (113 samples, 0.26%)</title><rect x="71.9840%" y="613" width="0.2645%" height="15" fill="rgb(240,108,37)"/><text x="72.2340%" y="623.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.02%)</title><rect x="72.2251%" y="597" width="0.0234%" height="15" fill="rgb(232,176,24)"/><text x="72.4751%" y="607.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (130 samples, 0.30%)</title><rect x="71.9559%" y="645" width="0.3043%" height="15" fill="rgb(243,35,29)"/><text x="72.2059%" y="655.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (121 samples, 0.28%)</title><rect x="71.9770%" y="629" width="0.2832%" height="15" fill="rgb(210,37,18)"/><text x="72.2270%" y="639.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.01%)</title><rect x="72.2485%" y="613" width="0.0117%" height="15" fill="rgb(224,184,40)"/><text x="72.4985%" y="623.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (152 samples, 0.36%)</title><rect x="71.9348%" y="661" width="0.3558%" height="15" fill="rgb(236,39,29)"/><text x="72.1848%" y="671.50"></text></g><g><title>[libc-2.31.so] (13 samples, 0.03%)</title><rect x="72.2602%" y="645" width="0.0304%" height="15" fill="rgb(232,48,39)"/><text x="72.5102%" y="655.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (170 samples, 0.40%)</title><rect x="71.9138%" y="677" width="0.3979%" height="15" fill="rgb(236,34,42)"/><text x="72.1638%" y="687.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.02%)</title><rect x="72.2906%" y="661" width="0.0211%" height="15" fill="rgb(243,106,37)"/><text x="72.5406%" y="671.50"></text></g><g><title>cache_bin_alloc_easy (6 samples, 0.01%)</title><rect x="72.3960%" y="469" width="0.0140%" height="15" fill="rgb(218,96,6)"/><text x="72.6460%" y="479.50"></text></g><g><title>imalloc_no_sample (9 samples, 0.02%)</title><rect x="72.3913%" y="533" width="0.0211%" height="15" fill="rgb(235,130,12)"/><text x="72.6413%" y="543.50"></text></g><g><title>iallocztm (7 samples, 0.02%)</title><rect x="72.3960%" y="517" width="0.0164%" height="15" fill="rgb(231,95,0)"/><text x="72.6460%" y="527.50"></text></g><g><title>arena_malloc (7 samples, 0.02%)</title><rect x="72.3960%" y="501" width="0.0164%" height="15" fill="rgb(228,12,23)"/><text x="72.6460%" y="511.50"></text></g><g><title>tcache_alloc_small (7 samples, 0.02%)</title><rect x="72.3960%" y="485" width="0.0164%" height="15" fill="rgb(216,12,1)"/><text x="72.6460%" y="495.50"></text></g><g><title>imalloc_body (12 samples, 0.03%)</title><rect x="72.3913%" y="549" width="0.0281%" height="15" fill="rgb(219,59,3)"/><text x="72.6413%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (31 samples, 0.07%)</title><rect x="72.3515%" y="629" width="0.0726%" height="15" fill="rgb(215,208,46)"/><text x="72.6015%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (31 samples, 0.07%)</title><rect x="72.3515%" y="613" width="0.0726%" height="15" fill="rgb(254,224,29)"/><text x="72.6015%" y="623.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 0.07%)</title><rect x="72.3585%" y="597" width="0.0655%" height="15" fill="rgb(232,14,29)"/><text x="72.6085%" y="607.50"></text></g><g><title>_rjem_mallocx (23 samples, 0.05%)</title><rect x="72.3702%" y="581" width="0.0538%" height="15" fill="rgb(208,45,52)"/><text x="72.6202%" y="591.50"></text></g><g><title>imalloc (14 samples, 0.03%)</title><rect x="72.3913%" y="565" width="0.0328%" height="15" fill="rgb(234,191,28)"/><text x="72.6413%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (9 samples, 0.02%)</title><rect x="72.4240%" y="629" width="0.0211%" height="15" fill="rgb(244,67,43)"/><text x="72.6740%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (60 samples, 0.14%)</title><rect x="72.3211%" y="677" width="0.1404%" height="15" fill="rgb(236,189,24)"/><text x="72.5711%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (55 samples, 0.13%)</title><rect x="72.3328%" y="661" width="0.1287%" height="15" fill="rgb(239,214,33)"/><text x="72.5828%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (55 samples, 0.13%)</title><rect x="72.3328%" y="645" width="0.1287%" height="15" fill="rgb(226,176,41)"/><text x="72.5828%" y="655.50"></text></g><g><title>core::alloc::layout::Layout::array (7 samples, 0.02%)</title><rect x="72.4451%" y="629" width="0.0164%" height="15" fill="rgb(248,47,8)"/><text x="72.6951%" y="639.50"></text></g><g><title>core::alloc::layout::Layout::repeat (7 samples, 0.02%)</title><rect x="72.4451%" y="613" width="0.0164%" height="15" fill="rgb(218,81,44)"/><text x="72.6951%" y="623.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (7 samples, 0.02%)</title><rect x="72.4451%" y="597" width="0.0164%" height="15" fill="rgb(213,98,6)"/><text x="72.6951%" y="607.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (7 samples, 0.02%)</title><rect x="72.4451%" y="581" width="0.0164%" height="15" fill="rgb(222,85,22)"/><text x="72.6951%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (279 samples, 0.65%)</title><rect x="71.8693%" y="741" width="0.6531%" height="15" fill="rgb(239,46,39)"/><text x="72.1193%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (276 samples, 0.65%)</title><rect x="71.8763%" y="725" width="0.6460%" height="15" fill="rgb(237,12,29)"/><text x="72.1263%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (276 samples, 0.65%)</title><rect x="71.8763%" y="709" width="0.6460%" height="15" fill="rgb(214,77,8)"/><text x="72.1263%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (276 samples, 0.65%)</title><rect x="71.8763%" y="693" width="0.6460%" height="15" fill="rgb(217,168,37)"/><text x="72.1263%" y="703.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (26 samples, 0.06%)</title><rect x="72.4615%" y="677" width="0.0609%" height="15" fill="rgb(221,217,23)"/><text x="72.7115%" y="687.50"></text></g><g><title>[libc-2.31.so] (15 samples, 0.04%)</title><rect x="72.4872%" y="661" width="0.0351%" height="15" fill="rgb(243,229,36)"/><text x="72.7372%" y="671.50"></text></g><g><title>imalloc_no_sample (8 samples, 0.02%)</title><rect x="72.5551%" y="485" width="0.0187%" height="15" fill="rgb(251,163,40)"/><text x="72.8051%" y="495.50"></text></g><g><title>iallocztm (7 samples, 0.02%)</title><rect x="72.5575%" y="469" width="0.0164%" height="15" fill="rgb(237,222,12)"/><text x="72.8075%" y="479.50"></text></g><g><title>arena_malloc (7 samples, 0.02%)</title><rect x="72.5575%" y="453" width="0.0164%" height="15" fill="rgb(248,132,6)"/><text x="72.8075%" y="463.50"></text></g><g><title>tcache_alloc_small (5 samples, 0.01%)</title><rect x="72.5621%" y="437" width="0.0117%" height="15" fill="rgb(227,167,50)"/><text x="72.8121%" y="447.50"></text></g><g><title>cache_bin_alloc_easy (5 samples, 0.01%)</title><rect x="72.5621%" y="421" width="0.0117%" height="15" fill="rgb(242,84,37)"/><text x="72.8121%" y="431.50"></text></g><g><title>imalloc_body (15 samples, 0.04%)</title><rect x="72.5458%" y="501" width="0.0351%" height="15" fill="rgb(212,4,50)"/><text x="72.7958%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.05%)</title><rect x="72.5411%" y="581" width="0.0468%" height="15" fill="rgb(230,228,32)"/><text x="72.7911%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.05%)</title><rect x="72.5411%" y="565" width="0.0468%" height="15" fill="rgb(248,217,23)"/><text x="72.7911%" y="575.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.05%)</title><rect x="72.5411%" y="549" width="0.0468%" height="15" fill="rgb(238,197,32)"/><text x="72.7911%" y="559.50"></text></g><g><title>_rjem_mallocx (19 samples, 0.04%)</title><rect x="72.5434%" y="533" width="0.0445%" height="15" fill="rgb(236,106,1)"/><text x="72.7934%" y="543.50"></text></g><g><title>imalloc (18 samples, 0.04%)</title><rect x="72.5458%" y="517" width="0.0421%" height="15" fill="rgb(219,228,13)"/><text x="72.7958%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (21 samples, 0.05%)</title><rect x="72.5411%" y="629" width="0.0492%" height="15" fill="rgb(238,30,35)"/><text x="72.7911%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (21 samples, 0.05%)</title><rect x="72.5411%" y="613" width="0.0492%" height="15" fill="rgb(236,70,23)"/><text x="72.7911%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (21 samples, 0.05%)</title><rect x="72.5411%" y="597" width="0.0492%" height="15" fill="rgb(249,104,48)"/><text x="72.7911%" y="607.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (331 samples, 0.77%)</title><rect x="71.8248%" y="757" width="0.7748%" height="15" fill="rgb(254,117,50)"/><text x="72.0748%" y="767.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (33 samples, 0.08%)</title><rect x="72.5224%" y="741" width="0.0772%" height="15" fill="rgb(223,152,4)"/><text x="72.7724%" y="751.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (28 samples, 0.07%)</title><rect x="72.5341%" y="725" width="0.0655%" height="15" fill="rgb(245,6,2)"/><text x="72.7841%" y="735.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (28 samples, 0.07%)</title><rect x="72.5341%" y="709" width="0.0655%" height="15" fill="rgb(249,150,24)"/><text x="72.7841%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (25 samples, 0.06%)</title><rect x="72.5411%" y="693" width="0.0585%" height="15" fill="rgb(228,185,42)"/><text x="72.7911%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (25 samples, 0.06%)</title><rect x="72.5411%" y="677" width="0.0585%" height="15" fill="rgb(226,39,33)"/><text x="72.7911%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (25 samples, 0.06%)</title><rect x="72.5411%" y="661" width="0.0585%" height="15" fill="rgb(221,166,19)"/><text x="72.7911%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (25 samples, 0.06%)</title><rect x="72.5411%" y="645" width="0.0585%" height="15" fill="rgb(209,109,2)"/><text x="72.7911%" y="655.50"></text></g><g><title>__rg_alloc (5 samples, 0.01%)</title><rect x="72.6113%" y="661" width="0.0117%" height="15" fill="rgb(252,216,26)"/><text x="72.8613%" y="671.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (5 samples, 0.01%)</title><rect x="72.6113%" y="645" width="0.0117%" height="15" fill="rgb(227,173,36)"/><text x="72.8613%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (20 samples, 0.05%)</title><rect x="72.5996%" y="757" width="0.0468%" height="15" fill="rgb(209,90,7)"/><text x="72.8496%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20 samples, 0.05%)</title><rect x="72.5996%" y="741" width="0.0468%" height="15" fill="rgb(250,194,11)"/><text x="72.8496%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (20 samples, 0.05%)</title><rect x="72.5996%" y="725" width="0.0468%" height="15" fill="rgb(220,72,50)"/><text x="72.8496%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.04%)</title><rect x="72.6043%" y="709" width="0.0421%" height="15" fill="rgb(222,106,48)"/><text x="72.8543%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.04%)</title><rect x="72.6043%" y="693" width="0.0421%" height="15" fill="rgb(216,220,45)"/><text x="72.8543%" y="703.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.04%)</title><rect x="72.6090%" y="677" width="0.0375%" height="15" fill="rgb(234,112,18)"/><text x="72.8590%" y="687.50"></text></g><g><title>_rjem_mallocx (10 samples, 0.02%)</title><rect x="72.6230%" y="661" width="0.0234%" height="15" fill="rgb(206,179,9)"/><text x="72.8730%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (368 samples, 0.86%)</title><rect x="71.8201%" y="821" width="0.8614%" height="15" fill="rgb(215,115,40)"/><text x="72.0701%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (368 samples, 0.86%)</title><rect x="71.8201%" y="805" width="0.8614%" height="15" fill="rgb(222,69,34)"/><text x="72.0701%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (368 samples, 0.86%)</title><rect x="71.8201%" y="789" width="0.8614%" height="15" fill="rgb(209,161,10)"/><text x="72.0701%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (368 samples, 0.86%)</title><rect x="71.8201%" y="773" width="0.8614%" height="15" fill="rgb(217,6,38)"/><text x="72.0701%" y="783.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (15 samples, 0.04%)</title><rect x="72.6464%" y="757" width="0.0351%" height="15" fill="rgb(229,229,48)"/><text x="72.8964%" y="767.50"></text></g><g><title>[libc-2.31.so] (15 samples, 0.04%)</title><rect x="72.6464%" y="741" width="0.0351%" height="15" fill="rgb(225,21,28)"/><text x="72.8964%" y="751.50"></text></g><g><title>__rg_alloc (7 samples, 0.02%)</title><rect x="72.6885%" y="613" width="0.0164%" height="15" fill="rgb(206,33,13)"/><text x="72.9385%" y="623.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (7 samples, 0.02%)</title><rect x="72.6885%" y="597" width="0.0164%" height="15" fill="rgb(242,178,17)"/><text x="72.9385%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.04%)</title><rect x="72.6862%" y="661" width="0.0398%" height="15" fill="rgb(220,162,5)"/><text x="72.9362%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.04%)</title><rect x="72.6862%" y="645" width="0.0398%" height="15" fill="rgb(210,33,43)"/><text x="72.9362%" y="655.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.04%)</title><rect x="72.6885%" y="629" width="0.0375%" height="15" fill="rgb(216,116,54)"/><text x="72.9385%" y="639.50"></text></g><g><title>_rjem_mallocx (7 samples, 0.02%)</title><rect x="72.7096%" y="613" width="0.0164%" height="15" fill="rgb(249,92,24)"/><text x="72.9596%" y="623.50"></text></g><g><title>imalloc (5 samples, 0.01%)</title><rect x="72.7143%" y="597" width="0.0117%" height="15" fill="rgb(231,189,14)"/><text x="72.9643%" y="607.50"></text></g><g><title>imalloc_body (5 samples, 0.01%)</title><rect x="72.7143%" y="581" width="0.0117%" height="15" fill="rgb(230,8,41)"/><text x="72.9643%" y="591.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (19 samples, 0.04%)</title><rect x="72.6839%" y="805" width="0.0445%" height="15" fill="rgb(249,7,27)"/><text x="72.9339%" y="815.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (19 samples, 0.04%)</title><rect x="72.6839%" y="789" width="0.0445%" height="15" fill="rgb(232,86,5)"/><text x="72.9339%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 0.04%)</title><rect x="72.6839%" y="773" width="0.0445%" height="15" fill="rgb(224,175,18)"/><text x="72.9339%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18 samples, 0.04%)</title><rect x="72.6862%" y="757" width="0.0421%" height="15" fill="rgb(220,129,12)"/><text x="72.9362%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (18 samples, 0.04%)</title><rect x="72.6862%" y="741" width="0.0421%" height="15" fill="rgb(210,19,36)"/><text x="72.9362%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18 samples, 0.04%)</title><rect x="72.6862%" y="725" width="0.0421%" height="15" fill="rgb(219,96,14)"/><text x="72.9362%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (18 samples, 0.04%)</title><rect x="72.6862%" y="709" width="0.0421%" height="15" fill="rgb(249,106,1)"/><text x="72.9362%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18 samples, 0.04%)</title><rect x="72.6862%" y="693" width="0.0421%" height="15" fill="rgb(249,155,20)"/><text x="72.9362%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (18 samples, 0.04%)</title><rect x="72.6862%" y="677" width="0.0421%" height="15" fill="rgb(244,168,9)"/><text x="72.9362%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.01%)</title><rect x="72.7658%" y="773" width="0.0117%" height="15" fill="rgb(216,23,50)"/><text x="73.0158%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="72.7892%" y="725" width="0.0211%" height="15" fill="rgb(224,219,20)"/><text x="73.0392%" y="735.50"></text></g><g><title>&lt;model::rho_types::GUnforgeable as core::clone::Clone&gt;::clone (42 samples, 0.10%)</title><rect x="72.8103%" y="725" width="0.0983%" height="15" fill="rgb(222,156,15)"/><text x="73.0603%" y="735.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (39 samples, 0.09%)</title><rect x="72.8173%" y="709" width="0.0913%" height="15" fill="rgb(231,97,17)"/><text x="73.0673%" y="719.50"></text></g><g><title>&lt;model::rho_types::g_unforgeable::UnfInstance as core::clone::Clone&gt;::clone (25 samples, 0.06%)</title><rect x="72.8501%" y="693" width="0.0585%" height="15" fill="rgb(218,70,48)"/><text x="73.1001%" y="703.50"></text></g><g><title>&lt;model::rho_types::GPrivate as core::clone::Clone&gt;::clone (23 samples, 0.05%)</title><rect x="72.8547%" y="677" width="0.0538%" height="15" fill="rgb(212,196,52)"/><text x="73.1047%" y="687.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (23 samples, 0.05%)</title><rect x="72.8547%" y="661" width="0.0538%" height="15" fill="rgb(243,203,18)"/><text x="73.1047%" y="671.50"></text></g><g><title>bytes::bytes::shared_clone (23 samples, 0.05%)</title><rect x="72.8547%" y="645" width="0.0538%" height="15" fill="rgb(252,125,41)"/><text x="73.1047%" y="655.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (23 samples, 0.05%)</title><rect x="72.8547%" y="629" width="0.0538%" height="15" fill="rgb(223,180,33)"/><text x="73.1047%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (23 samples, 0.05%)</title><rect x="72.8547%" y="613" width="0.0538%" height="15" fill="rgb(254,159,46)"/><text x="73.1047%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_add (23 samples, 0.05%)</title><rect x="72.8547%" y="597" width="0.0538%" height="15" fill="rgb(254,38,10)"/><text x="73.1047%" y="607.50"></text></g><g><title>cache_bin_alloc_easy (8 samples, 0.02%)</title><rect x="72.9811%" y="517" width="0.0187%" height="15" fill="rgb(208,217,32)"/><text x="73.2311%" y="527.50"></text></g><g><title>imalloc_no_sample (11 samples, 0.03%)</title><rect x="72.9765%" y="581" width="0.0257%" height="15" fill="rgb(221,120,13)"/><text x="73.2265%" y="591.50"></text></g><g><title>iallocztm (10 samples, 0.02%)</title><rect x="72.9788%" y="565" width="0.0234%" height="15" fill="rgb(246,54,52)"/><text x="73.2288%" y="575.50"></text></g><g><title>arena_malloc (10 samples, 0.02%)</title><rect x="72.9788%" y="549" width="0.0234%" height="15" fill="rgb(242,34,25)"/><text x="73.2288%" y="559.50"></text></g><g><title>tcache_alloc_small (9 samples, 0.02%)</title><rect x="72.9811%" y="533" width="0.0211%" height="15" fill="rgb(247,209,9)"/><text x="73.2311%" y="543.50"></text></g><g><title>imalloc_body (13 samples, 0.03%)</title><rect x="72.9741%" y="597" width="0.0304%" height="15" fill="rgb(228,71,26)"/><text x="73.2241%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (30 samples, 0.07%)</title><rect x="72.9390%" y="677" width="0.0702%" height="15" fill="rgb(222,145,49)"/><text x="73.1890%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (30 samples, 0.07%)</title><rect x="72.9390%" y="661" width="0.0702%" height="15" fill="rgb(218,121,17)"/><text x="73.1890%" y="671.50"></text></g><g><title>alloc::alloc::alloc (25 samples, 0.06%)</title><rect x="72.9507%" y="645" width="0.0585%" height="15" fill="rgb(244,50,7)"/><text x="73.2007%" y="655.50"></text></g><g><title>_rjem_mallocx (20 samples, 0.05%)</title><rect x="72.9624%" y="629" width="0.0468%" height="15" fill="rgb(246,229,37)"/><text x="73.2124%" y="639.50"></text></g><g><title>imalloc (15 samples, 0.04%)</title><rect x="72.9741%" y="613" width="0.0351%" height="15" fill="rgb(225,18,5)"/><text x="73.2241%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (117 samples, 0.27%)</title><rect x="72.7564%" y="789" width="0.2739%" height="15" fill="rgb(213,204,8)"/><text x="73.0064%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (108 samples, 0.25%)</title><rect x="72.7775%" y="773" width="0.2528%" height="15" fill="rgb(238,103,6)"/><text x="73.0275%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (108 samples, 0.25%)</title><rect x="72.7775%" y="757" width="0.2528%" height="15" fill="rgb(222,25,35)"/><text x="73.0275%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (108 samples, 0.25%)</title><rect x="72.7775%" y="741" width="0.2528%" height="15" fill="rgb(213,203,35)"/><text x="73.0275%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (51 samples, 0.12%)</title><rect x="72.9109%" y="725" width="0.1194%" height="15" fill="rgb(221,79,53)"/><text x="73.1609%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (41 samples, 0.10%)</title><rect x="72.9343%" y="709" width="0.0960%" height="15" fill="rgb(243,200,35)"/><text x="73.1843%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (41 samples, 0.10%)</title><rect x="72.9343%" y="693" width="0.0960%" height="15" fill="rgb(248,60,25)"/><text x="73.1843%" y="703.50"></text></g><g><title>core::alloc::layout::Layout::array (5 samples, 0.01%)</title><rect x="73.0186%" y="677" width="0.0117%" height="15" fill="rgb(227,53,46)"/><text x="73.2686%" y="687.50"></text></g><g><title>core::alloc::layout::Layout::repeat (5 samples, 0.01%)</title><rect x="73.0186%" y="661" width="0.0117%" height="15" fill="rgb(216,120,32)"/><text x="73.2686%" y="671.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (5 samples, 0.01%)</title><rect x="73.0186%" y="645" width="0.0117%" height="15" fill="rgb(220,134,1)"/><text x="73.2686%" y="655.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (5 samples, 0.01%)</title><rect x="73.0186%" y="629" width="0.0117%" height="15" fill="rgb(237,168,5)"/><text x="73.2686%" y="639.50"></text></g><g><title>imalloc_no_sample (9 samples, 0.02%)</title><rect x="73.0514%" y="533" width="0.0211%" height="15" fill="rgb(231,100,33)"/><text x="73.3014%" y="543.50"></text></g><g><title>iallocztm (8 samples, 0.02%)</title><rect x="73.0537%" y="517" width="0.0187%" height="15" fill="rgb(236,177,47)"/><text x="73.3037%" y="527.50"></text></g><g><title>arena_malloc (8 samples, 0.02%)</title><rect x="73.0537%" y="501" width="0.0187%" height="15" fill="rgb(235,7,49)"/><text x="73.3037%" y="511.50"></text></g><g><title>tcache_alloc_small (7 samples, 0.02%)</title><rect x="73.0560%" y="485" width="0.0164%" height="15" fill="rgb(232,119,22)"/><text x="73.3060%" y="495.50"></text></g><g><title>cache_bin_alloc_easy (7 samples, 0.02%)</title><rect x="73.0560%" y="469" width="0.0164%" height="15" fill="rgb(254,73,53)"/><text x="73.3060%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (20 samples, 0.05%)</title><rect x="73.0350%" y="677" width="0.0468%" height="15" fill="rgb(251,35,20)"/><text x="73.2850%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20 samples, 0.05%)</title><rect x="73.0350%" y="661" width="0.0468%" height="15" fill="rgb(241,119,20)"/><text x="73.2850%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (20 samples, 0.05%)</title><rect x="73.0350%" y="645" width="0.0468%" height="15" fill="rgb(207,102,14)"/><text x="73.2850%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.05%)</title><rect x="73.0350%" y="629" width="0.0468%" height="15" fill="rgb(248,201,50)"/><text x="73.2850%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.05%)</title><rect x="73.0350%" y="613" width="0.0468%" height="15" fill="rgb(222,185,44)"/><text x="73.2850%" y="623.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.05%)</title><rect x="73.0350%" y="597" width="0.0468%" height="15" fill="rgb(218,107,18)"/><text x="73.2850%" y="607.50"></text></g><g><title>_rjem_mallocx (16 samples, 0.04%)</title><rect x="73.0443%" y="581" width="0.0375%" height="15" fill="rgb(237,177,39)"/><text x="73.2943%" y="591.50"></text></g><g><title>imalloc (14 samples, 0.03%)</title><rect x="73.0490%" y="565" width="0.0328%" height="15" fill="rgb(246,69,6)"/><text x="73.2990%" y="575.50"></text></g><g><title>imalloc_body (14 samples, 0.03%)</title><rect x="73.0490%" y="549" width="0.0328%" height="15" fill="rgb(234,208,37)"/><text x="73.2990%" y="559.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (155 samples, 0.36%)</title><rect x="72.7283%" y="805" width="0.3628%" height="15" fill="rgb(225,4,6)"/><text x="72.9783%" y="815.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (26 samples, 0.06%)</title><rect x="73.0303%" y="789" width="0.0609%" height="15" fill="rgb(233,45,0)"/><text x="73.2803%" y="799.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (26 samples, 0.06%)</title><rect x="73.0303%" y="773" width="0.0609%" height="15" fill="rgb(226,136,5)"/><text x="73.2803%" y="783.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (26 samples, 0.06%)</title><rect x="73.0303%" y="757" width="0.0609%" height="15" fill="rgb(211,91,47)"/><text x="73.2803%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (25 samples, 0.06%)</title><rect x="73.0326%" y="741" width="0.0585%" height="15" fill="rgb(242,88,51)"/><text x="73.2826%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (24 samples, 0.06%)</title><rect x="73.0350%" y="725" width="0.0562%" height="15" fill="rgb(230,91,28)"/><text x="73.2850%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (24 samples, 0.06%)</title><rect x="73.0350%" y="709" width="0.0562%" height="15" fill="rgb(254,186,29)"/><text x="73.2850%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (24 samples, 0.06%)</title><rect x="73.0350%" y="693" width="0.0562%" height="15" fill="rgb(238,6,4)"/><text x="73.2850%" y="703.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (186 samples, 0.44%)</title><rect x="72.6815%" y="821" width="0.4354%" height="15" fill="rgb(221,151,16)"/><text x="72.9315%" y="831.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.03%)</title><rect x="73.0911%" y="805" width="0.0257%" height="15" fill="rgb(251,143,52)"/><text x="73.3411%" y="815.50"></text></g><g><title>&lt;model::rho_types::Send as core::clone::Clone&gt;::clone (555 samples, 1.30%)</title><rect x="71.8201%" y="837" width="1.2991%" height="15" fill="rgb(206,90,15)"/><text x="72.0701%" y="847.50"></text></g><g><title>__rg_alloc (6 samples, 0.01%)</title><rect x="73.1941%" y="741" width="0.0140%" height="15" fill="rgb(218,35,8)"/><text x="73.4441%" y="751.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (6 samples, 0.01%)</title><rect x="73.1941%" y="725" width="0.0140%" height="15" fill="rgb(239,215,6)"/><text x="73.4441%" y="735.50"></text></g><g><title>cache_bin_alloc_easy (11 samples, 0.03%)</title><rect x="73.2597%" y="629" width="0.0257%" height="15" fill="rgb(245,116,39)"/><text x="73.5097%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (51 samples, 0.12%)</title><rect x="73.1707%" y="789" width="0.1194%" height="15" fill="rgb(242,65,28)"/><text x="73.4207%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (51 samples, 0.12%)</title><rect x="73.1707%" y="773" width="0.1194%" height="15" fill="rgb(252,132,53)"/><text x="73.4207%" y="783.50"></text></g><g><title>alloc::alloc::alloc (43 samples, 0.10%)</title><rect x="73.1895%" y="757" width="0.1007%" height="15" fill="rgb(224,159,50)"/><text x="73.4395%" y="767.50"></text></g><g><title>_rjem_mallocx (33 samples, 0.08%)</title><rect x="73.2129%" y="741" width="0.0772%" height="15" fill="rgb(224,93,4)"/><text x="73.4629%" y="751.50"></text></g><g><title>imalloc (26 samples, 0.06%)</title><rect x="73.2292%" y="725" width="0.0609%" height="15" fill="rgb(208,81,34)"/><text x="73.4792%" y="735.50"></text></g><g><title>imalloc_body (26 samples, 0.06%)</title><rect x="73.2292%" y="709" width="0.0609%" height="15" fill="rgb(233,92,54)"/><text x="73.4792%" y="719.50"></text></g><g><title>imalloc_no_sample (24 samples, 0.06%)</title><rect x="73.2339%" y="693" width="0.0562%" height="15" fill="rgb(237,21,14)"/><text x="73.4839%" y="703.50"></text></g><g><title>iallocztm (19 samples, 0.04%)</title><rect x="73.2456%" y="677" width="0.0445%" height="15" fill="rgb(249,128,51)"/><text x="73.4956%" y="687.50"></text></g><g><title>arena_malloc (19 samples, 0.04%)</title><rect x="73.2456%" y="661" width="0.0445%" height="15" fill="rgb(223,129,24)"/><text x="73.4956%" y="671.50"></text></g><g><title>tcache_alloc_small (17 samples, 0.04%)</title><rect x="73.2503%" y="645" width="0.0398%" height="15" fill="rgb(231,168,25)"/><text x="73.5003%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (12 samples, 0.03%)</title><rect x="73.2901%" y="789" width="0.0281%" height="15" fill="rgb(224,39,20)"/><text x="73.5401%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (92 samples, 0.22%)</title><rect x="73.1239%" y="837" width="0.2153%" height="15" fill="rgb(225,152,53)"/><text x="73.3739%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (78 samples, 0.18%)</title><rect x="73.1567%" y="821" width="0.1826%" height="15" fill="rgb(252,17,24)"/><text x="73.4067%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (78 samples, 0.18%)</title><rect x="73.1567%" y="805" width="0.1826%" height="15" fill="rgb(250,114,30)"/><text x="73.4067%" y="815.50"></text></g><g><title>core::alloc::layout::Layout::array (9 samples, 0.02%)</title><rect x="73.3182%" y="789" width="0.0211%" height="15" fill="rgb(229,5,4)"/><text x="73.5682%" y="799.50"></text></g><g><title>core::alloc::layout::Layout::repeat (9 samples, 0.02%)</title><rect x="73.3182%" y="773" width="0.0211%" height="15" fill="rgb(225,176,49)"/><text x="73.5682%" y="783.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (8 samples, 0.02%)</title><rect x="73.3205%" y="757" width="0.0187%" height="15" fill="rgb(224,221,49)"/><text x="73.5705%" y="767.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (8 samples, 0.02%)</title><rect x="73.3205%" y="741" width="0.0187%" height="15" fill="rgb(253,169,27)"/><text x="73.5705%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (796 samples, 1.86%)</title><rect x="71.5978%" y="1013" width="1.8632%" height="15" fill="rgb(211,206,16)"/><text x="71.8478%" y="1023.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (796 samples, 1.86%)</title><rect x="71.5978%" y="997" width="1.8632%" height="15" fill="rgb(244,87,35)"/><text x="71.8478%" y="1007.50">a..</text></g><g><title>alloc::slice::hack::to_vec (796 samples, 1.86%)</title><rect x="71.5978%" y="981" width="1.8632%" height="15" fill="rgb(246,28,10)"/><text x="71.8478%" y="991.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (796 samples, 1.86%)</title><rect x="71.5978%" y="965" width="1.8632%" height="15" fill="rgb(229,12,44)"/><text x="71.8478%" y="975.50">&lt;..</text></g><g><title>&lt;model::rho_types::MatchCase as core::clone::Clone&gt;::clone (796 samples, 1.86%)</title><rect x="71.5978%" y="949" width="1.8632%" height="15" fill="rgb(210,145,37)"/><text x="71.8478%" y="959.50">&lt;..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (796 samples, 1.86%)</title><rect x="71.5978%" y="933" width="1.8632%" height="15" fill="rgb(227,112,52)"/><text x="71.8478%" y="943.50">&lt;..</text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (796 samples, 1.86%)</title><rect x="71.5978%" y="917" width="1.8632%" height="15" fill="rgb(238,155,34)"/><text x="71.8478%" y="927.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (796 samples, 1.86%)</title><rect x="71.5978%" y="901" width="1.8632%" height="15" fill="rgb(239,226,36)"/><text x="71.8478%" y="911.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (789 samples, 1.85%)</title><rect x="71.6142%" y="885" width="1.8468%" height="15" fill="rgb(230,16,23)"/><text x="71.8642%" y="895.50">a..</text></g><g><title>alloc::slice::hack::to_vec (789 samples, 1.85%)</title><rect x="71.6142%" y="869" width="1.8468%" height="15" fill="rgb(236,171,36)"/><text x="71.8642%" y="879.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (789 samples, 1.85%)</title><rect x="71.6142%" y="853" width="1.8468%" height="15" fill="rgb(221,22,14)"/><text x="71.8642%" y="863.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (52 samples, 0.12%)</title><rect x="73.3393%" y="837" width="0.1217%" height="15" fill="rgb(242,43,11)"/><text x="73.5893%" y="847.50"></text></g><g><title>[libc-2.31.so] (29 samples, 0.07%)</title><rect x="73.3931%" y="821" width="0.0679%" height="15" fill="rgb(232,69,23)"/><text x="73.6431%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="73.4797%" y="917" width="0.0164%" height="15" fill="rgb(216,180,54)"/><text x="73.7297%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.01%)</title><rect x="73.5991%" y="805" width="0.0117%" height="15" fill="rgb(216,5,24)"/><text x="73.8491%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="73.6365%" y="757" width="0.0140%" height="15" fill="rgb(225,89,9)"/><text x="73.8865%" y="767.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (28 samples, 0.07%)</title><rect x="73.6740%" y="741" width="0.0655%" height="15" fill="rgb(243,75,33)"/><text x="73.9240%" y="751.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.02%)</title><rect x="73.7185%" y="725" width="0.0211%" height="15" fill="rgb(247,141,45)"/><text x="73.9685%" y="735.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (52 samples, 0.12%)</title><rect x="73.6506%" y="757" width="0.1217%" height="15" fill="rgb(232,177,36)"/><text x="73.9006%" y="767.50"></text></g><g><title>[libc-2.31.so] (14 samples, 0.03%)</title><rect x="73.7395%" y="741" width="0.0328%" height="15" fill="rgb(219,125,36)"/><text x="73.9895%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (5 samples, 0.01%)</title><rect x="73.7723%" y="757" width="0.0117%" height="15" fill="rgb(227,94,9)"/><text x="74.0223%" y="767.50"></text></g><g><title>imalloc_no_sample (11 samples, 0.03%)</title><rect x="73.8683%" y="613" width="0.0257%" height="15" fill="rgb(240,34,52)"/><text x="74.1183%" y="623.50"></text></g><g><title>iallocztm (7 samples, 0.02%)</title><rect x="73.8776%" y="597" width="0.0164%" height="15" fill="rgb(216,45,12)"/><text x="74.1276%" y="607.50"></text></g><g><title>arena_malloc (7 samples, 0.02%)</title><rect x="73.8776%" y="581" width="0.0164%" height="15" fill="rgb(246,21,19)"/><text x="74.1276%" y="591.50"></text></g><g><title>tcache_alloc_small (7 samples, 0.02%)</title><rect x="73.8776%" y="565" width="0.0164%" height="15" fill="rgb(213,98,42)"/><text x="74.1276%" y="575.50"></text></g><g><title>imalloc_body (15 samples, 0.04%)</title><rect x="73.8683%" y="629" width="0.0351%" height="15" fill="rgb(250,136,47)"/><text x="74.1183%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (37 samples, 0.09%)</title><rect x="73.8191%" y="709" width="0.0866%" height="15" fill="rgb(251,124,27)"/><text x="74.0691%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (37 samples, 0.09%)</title><rect x="73.8191%" y="693" width="0.0866%" height="15" fill="rgb(229,180,14)"/><text x="74.0691%" y="703.50"></text></g><g><title>alloc::alloc::alloc (27 samples, 0.06%)</title><rect x="73.8425%" y="677" width="0.0632%" height="15" fill="rgb(245,216,25)"/><text x="74.0925%" y="687.50"></text></g><g><title>_rjem_mallocx (20 samples, 0.05%)</title><rect x="73.8589%" y="661" width="0.0468%" height="15" fill="rgb(251,43,5)"/><text x="74.1089%" y="671.50"></text></g><g><title>imalloc (16 samples, 0.04%)</title><rect x="73.8683%" y="645" width="0.0375%" height="15" fill="rgb(250,128,24)"/><text x="74.1183%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (9 samples, 0.02%)</title><rect x="73.9057%" y="709" width="0.0211%" height="15" fill="rgb(217,117,27)"/><text x="74.1557%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (65 samples, 0.15%)</title><rect x="73.7840%" y="757" width="0.1521%" height="15" fill="rgb(245,147,4)"/><text x="74.0340%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (54 samples, 0.13%)</title><rect x="73.8097%" y="741" width="0.1264%" height="15" fill="rgb(242,201,35)"/><text x="74.0597%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (54 samples, 0.13%)</title><rect x="73.8097%" y="725" width="0.1264%" height="15" fill="rgb(218,181,1)"/><text x="74.0597%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (179 samples, 0.42%)</title><rect x="73.5897%" y="821" width="0.4190%" height="15" fill="rgb(222,6,29)"/><text x="73.8397%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (170 samples, 0.40%)</title><rect x="73.6108%" y="805" width="0.3979%" height="15" fill="rgb(208,186,3)"/><text x="73.8608%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (170 samples, 0.40%)</title><rect x="73.6108%" y="789" width="0.3979%" height="15" fill="rgb(216,36,26)"/><text x="73.8608%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (170 samples, 0.40%)</title><rect x="73.6108%" y="773" width="0.3979%" height="15" fill="rgb(248,201,23)"/><text x="73.8608%" y="783.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (31 samples, 0.07%)</title><rect x="73.9361%" y="757" width="0.0726%" height="15" fill="rgb(251,170,31)"/><text x="74.1861%" y="767.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.02%)</title><rect x="73.9853%" y="741" width="0.0234%" height="15" fill="rgb(207,110,25)"/><text x="74.2353%" y="751.50"></text></g><g><title>__rg_alloc (6 samples, 0.01%)</title><rect x="74.0110%" y="613" width="0.0140%" height="15" fill="rgb(250,54,15)"/><text x="74.2610%" y="623.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (6 samples, 0.01%)</title><rect x="74.0110%" y="597" width="0.0140%" height="15" fill="rgb(227,68,33)"/><text x="74.2610%" y="607.50"></text></g><g><title>imalloc_body (9 samples, 0.02%)</title><rect x="74.0345%" y="581" width="0.0211%" height="15" fill="rgb(238,34,41)"/><text x="74.2845%" y="591.50"></text></g><g><title>imalloc_no_sample (8 samples, 0.02%)</title><rect x="74.0368%" y="565" width="0.0187%" height="15" fill="rgb(220,11,15)"/><text x="74.2868%" y="575.50"></text></g><g><title>iallocztm (7 samples, 0.02%)</title><rect x="74.0391%" y="549" width="0.0164%" height="15" fill="rgb(246,111,35)"/><text x="74.2891%" y="559.50"></text></g><g><title>arena_malloc (7 samples, 0.02%)</title><rect x="74.0391%" y="533" width="0.0164%" height="15" fill="rgb(209,88,53)"/><text x="74.2891%" y="543.50"></text></g><g><title>tcache_alloc_small (7 samples, 0.02%)</title><rect x="74.0391%" y="517" width="0.0164%" height="15" fill="rgb(231,185,47)"/><text x="74.2891%" y="527.50"></text></g><g><title>cache_bin_alloc_easy (7 samples, 0.02%)</title><rect x="74.0391%" y="501" width="0.0164%" height="15" fill="rgb(233,154,1)"/><text x="74.2891%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.05%)</title><rect x="74.0110%" y="661" width="0.0492%" height="15" fill="rgb(225,15,46)"/><text x="74.2610%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.05%)</title><rect x="74.0110%" y="645" width="0.0492%" height="15" fill="rgb(211,135,41)"/><text x="74.2610%" y="655.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.05%)</title><rect x="74.0110%" y="629" width="0.0492%" height="15" fill="rgb(208,54,0)"/><text x="74.2610%" y="639.50"></text></g><g><title>_rjem_mallocx (15 samples, 0.04%)</title><rect x="74.0251%" y="613" width="0.0351%" height="15" fill="rgb(244,136,14)"/><text x="74.2751%" y="623.50"></text></g><g><title>imalloc (12 samples, 0.03%)</title><rect x="74.0321%" y="597" width="0.0281%" height="15" fill="rgb(241,56,14)"/><text x="74.2821%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (22 samples, 0.05%)</title><rect x="74.0110%" y="709" width="0.0515%" height="15" fill="rgb(205,80,24)"/><text x="74.2610%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (22 samples, 0.05%)</title><rect x="74.0110%" y="693" width="0.0515%" height="15" fill="rgb(220,57,4)"/><text x="74.2610%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (22 samples, 0.05%)</title><rect x="74.0110%" y="677" width="0.0515%" height="15" fill="rgb(226,193,50)"/><text x="74.2610%" y="687.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (234 samples, 0.55%)</title><rect x="73.5452%" y="837" width="0.5477%" height="15" fill="rgb(231,168,22)"/><text x="73.7952%" y="847.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (36 samples, 0.08%)</title><rect x="74.0087%" y="821" width="0.0843%" height="15" fill="rgb(254,215,14)"/><text x="74.2587%" y="831.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (35 samples, 0.08%)</title><rect x="74.0110%" y="805" width="0.0819%" height="15" fill="rgb(211,115,16)"/><text x="74.2610%" y="815.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (35 samples, 0.08%)</title><rect x="74.0110%" y="789" width="0.0819%" height="15" fill="rgb(236,210,16)"/><text x="74.2610%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (35 samples, 0.08%)</title><rect x="74.0110%" y="773" width="0.0819%" height="15" fill="rgb(221,94,12)"/><text x="74.2610%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (35 samples, 0.08%)</title><rect x="74.0110%" y="757" width="0.0819%" height="15" fill="rgb(235,218,49)"/><text x="74.2610%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (35 samples, 0.08%)</title><rect x="74.0110%" y="741" width="0.0819%" height="15" fill="rgb(217,114,14)"/><text x="74.2610%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (35 samples, 0.08%)</title><rect x="74.0110%" y="725" width="0.0819%" height="15" fill="rgb(216,145,22)"/><text x="74.2610%" y="735.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (13 samples, 0.03%)</title><rect x="74.0625%" y="709" width="0.0304%" height="15" fill="rgb(217,112,39)"/><text x="74.3125%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.03%)</title><rect x="74.0625%" y="693" width="0.0304%" height="15" fill="rgb(225,85,32)"/><text x="74.3125%" y="703.50"></text></g><g><title>[libc-2.31.so] (12 samples, 0.03%)</title><rect x="74.0649%" y="677" width="0.0281%" height="15" fill="rgb(245,209,47)"/><text x="74.3149%" y="687.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (249 samples, 0.58%)</title><rect x="73.5382%" y="853" width="0.5828%" height="15" fill="rgb(218,220,15)"/><text x="73.7882%" y="863.50"></text></g><g><title>[libc-2.31.so] (12 samples, 0.03%)</title><rect x="74.0930%" y="837" width="0.0281%" height="15" fill="rgb(222,202,31)"/><text x="74.3430%" y="847.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (255 samples, 0.60%)</title><rect x="73.5265%" y="885" width="0.5969%" height="15" fill="rgb(243,203,4)"/><text x="73.7765%" y="895.50"></text></g><g><title>&lt;model::rho_types::ELt as core::clone::Clone&gt;::clone (254 samples, 0.59%)</title><rect x="73.5289%" y="869" width="0.5945%" height="15" fill="rgb(237,92,17)"/><text x="73.7789%" y="879.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (266 samples, 0.62%)</title><rect x="73.5055%" y="901" width="0.6226%" height="15" fill="rgb(231,119,7)"/><text x="73.7555%" y="911.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (277 samples, 0.65%)</title><rect x="73.4961%" y="917" width="0.6484%" height="15" fill="rgb(237,82,41)"/><text x="73.7461%" y="927.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.02%)</title><rect x="74.1281%" y="901" width="0.0164%" height="15" fill="rgb(226,81,48)"/><text x="74.3781%" y="911.50"></text></g><g><title>imalloc_body (7 samples, 0.02%)</title><rect x="74.1819%" y="789" width="0.0164%" height="15" fill="rgb(234,70,51)"/><text x="74.4319%" y="799.50"></text></g><g><title>imalloc_no_sample (7 samples, 0.02%)</title><rect x="74.1819%" y="773" width="0.0164%" height="15" fill="rgb(251,86,4)"/><text x="74.4319%" y="783.50"></text></g><g><title>iallocztm (6 samples, 0.01%)</title><rect x="74.1843%" y="757" width="0.0140%" height="15" fill="rgb(244,144,28)"/><text x="74.4343%" y="767.50"></text></g><g><title>arena_malloc (6 samples, 0.01%)</title><rect x="74.1843%" y="741" width="0.0140%" height="15" fill="rgb(232,161,39)"/><text x="74.4343%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.04%)</title><rect x="74.1632%" y="869" width="0.0375%" height="15" fill="rgb(247,34,51)"/><text x="74.4132%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.04%)</title><rect x="74.1632%" y="853" width="0.0375%" height="15" fill="rgb(225,132,2)"/><text x="74.4132%" y="863.50"></text></g><g><title>alloc::alloc::alloc (15 samples, 0.04%)</title><rect x="74.1655%" y="837" width="0.0351%" height="15" fill="rgb(209,159,44)"/><text x="74.4155%" y="847.50"></text></g><g><title>_rjem_mallocx (13 samples, 0.03%)</title><rect x="74.1702%" y="821" width="0.0304%" height="15" fill="rgb(251,214,1)"/><text x="74.4202%" y="831.50"></text></g><g><title>imalloc (8 samples, 0.02%)</title><rect x="74.1819%" y="805" width="0.0187%" height="15" fill="rgb(247,84,47)"/><text x="74.4319%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (6 samples, 0.01%)</title><rect x="74.2006%" y="869" width="0.0140%" height="15" fill="rgb(240,111,43)"/><text x="74.4506%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (28 samples, 0.07%)</title><rect x="74.1515%" y="917" width="0.0655%" height="15" fill="rgb(215,214,35)"/><text x="74.4015%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (27 samples, 0.06%)</title><rect x="74.1538%" y="901" width="0.0632%" height="15" fill="rgb(248,207,23)"/><text x="74.4038%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (27 samples, 0.06%)</title><rect x="74.1538%" y="885" width="0.0632%" height="15" fill="rgb(214,186,4)"/><text x="74.4038%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (328 samples, 0.77%)</title><rect x="73.4610%" y="981" width="0.7678%" height="15" fill="rgb(220,133,22)"/><text x="73.7110%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (323 samples, 0.76%)</title><rect x="73.4727%" y="965" width="0.7561%" height="15" fill="rgb(239,134,19)"/><text x="73.7227%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (323 samples, 0.76%)</title><rect x="73.4727%" y="949" width="0.7561%" height="15" fill="rgb(250,140,9)"/><text x="73.7227%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (323 samples, 0.76%)</title><rect x="73.4727%" y="933" width="0.7561%" height="15" fill="rgb(225,59,14)"/><text x="73.7227%" y="943.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (5 samples, 0.01%)</title><rect x="74.2170%" y="917" width="0.0117%" height="15" fill="rgb(214,152,51)"/><text x="74.4670%" y="927.50"></text></g><g><title>rho_runtime::storage::transit::Transit::produce (1,125 samples, 2.63%)</title><rect x="71.5978%" y="1173" width="2.6333%" height="15" fill="rgb(251,227,43)"/><text x="71.8478%" y="1183.50">rh..</text></g><g><title>&lt;rho_runtime::storage::TaggedContinuation as core::clone::Clone&gt;::clone (1,125 samples, 2.63%)</title><rect x="71.5978%" y="1157" width="2.6333%" height="15" fill="rgb(241,96,17)"/><text x="71.8478%" y="1167.50">&lt;r..</text></g><g><title>&lt;model::rho_types::ParWithRandom as core::clone::Clone&gt;::clone (1,125 samples, 2.63%)</title><rect x="71.5978%" y="1141" width="2.6333%" height="15" fill="rgb(234,198,43)"/><text x="71.8478%" y="1151.50">&lt;m..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,125 samples, 2.63%)</title><rect x="71.5978%" y="1125" width="2.6333%" height="15" fill="rgb(220,108,29)"/><text x="71.8478%" y="1135.50">&lt;c..</text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (1,125 samples, 2.63%)</title><rect x="71.5978%" y="1109" width="2.6333%" height="15" fill="rgb(226,163,33)"/><text x="71.8478%" y="1119.50">&lt;m..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,125 samples, 2.63%)</title><rect x="71.5978%" y="1093" width="2.6333%" height="15" fill="rgb(205,194,45)"/><text x="71.8478%" y="1103.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,125 samples, 2.63%)</title><rect x="71.5978%" y="1077" width="2.6333%" height="15" fill="rgb(206,143,44)"/><text x="71.8478%" y="1087.50">al..</text></g><g><title>alloc::slice::hack::to_vec (1,125 samples, 2.63%)</title><rect x="71.5978%" y="1061" width="2.6333%" height="15" fill="rgb(236,136,36)"/><text x="71.8478%" y="1071.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,125 samples, 2.63%)</title><rect x="71.5978%" y="1045" width="2.6333%" height="15" fill="rgb(249,172,42)"/><text x="71.8478%" y="1055.50">&lt;T..</text></g><g><title>&lt;model::rho_types::Match as core::clone::Clone&gt;::clone (1,125 samples, 2.63%)</title><rect x="71.5978%" y="1029" width="2.6333%" height="15" fill="rgb(216,139,23)"/><text x="71.8478%" y="1039.50">&lt;m..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (329 samples, 0.77%)</title><rect x="73.4610%" y="1013" width="0.7701%" height="15" fill="rgb(207,166,20)"/><text x="73.7110%" y="1023.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (329 samples, 0.77%)</title><rect x="73.4610%" y="997" width="0.7701%" height="15" fill="rgb(210,209,22)"/><text x="73.7110%" y="1007.50"></text></g><g><title>[libc-2.31.so] (439 samples, 1.03%)</title><rect x="74.3785%" y="533" width="1.0276%" height="15" fill="rgb(232,118,20)"/><text x="74.6285%" y="543.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (489 samples, 1.14%)</title><rect x="74.2638%" y="1173" width="1.1446%" height="15" fill="rgb(238,113,42)"/><text x="74.5138%" y="1183.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (489 samples, 1.14%)</title><rect x="74.2638%" y="1157" width="1.1446%" height="15" fill="rgb(231,42,5)"/><text x="74.5138%" y="1167.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (489 samples, 1.14%)</title><rect x="74.2638%" y="1141" width="1.1446%" height="15" fill="rgb(243,166,24)"/><text x="74.5138%" y="1151.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (489 samples, 1.14%)</title><rect x="74.2638%" y="1125" width="1.1446%" height="15" fill="rgb(237,226,12)"/><text x="74.5138%" y="1135.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (489 samples, 1.14%)</title><rect x="74.2638%" y="1109" width="1.1446%" height="15" fill="rgb(229,133,24)"/><text x="74.5138%" y="1119.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (489 samples, 1.14%)</title><rect x="74.2638%" y="1093" width="1.1446%" height="15" fill="rgb(238,33,43)"/><text x="74.5138%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (489 samples, 1.14%)</title><rect x="74.2638%" y="1077" width="1.1446%" height="15" fill="rgb(227,59,38)"/><text x="74.5138%" y="1087.50"></text></g><g><title>std::panicking::try (489 samples, 1.14%)</title><rect x="74.2638%" y="1061" width="1.1446%" height="15" fill="rgb(230,97,0)"/><text x="74.5138%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (489 samples, 1.14%)</title><rect x="74.2638%" y="1045" width="1.1446%" height="15" fill="rgb(250,173,50)"/><text x="74.5138%" y="1055.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (489 samples, 1.14%)</title><rect x="74.2638%" y="1029" width="1.1446%" height="15" fill="rgb(240,15,50)"/><text x="74.5138%" y="1039.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (489 samples, 1.14%)</title><rect x="74.2638%" y="1013" width="1.1446%" height="15" fill="rgb(221,93,22)"/><text x="74.5138%" y="1023.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (489 samples, 1.14%)</title><rect x="74.2638%" y="997" width="1.1446%" height="15" fill="rgb(245,180,53)"/><text x="74.5138%" y="1007.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (489 samples, 1.14%)</title><rect x="74.2638%" y="981" width="1.1446%" height="15" fill="rgb(231,88,51)"/><text x="74.5138%" y="991.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (489 samples, 1.14%)</title><rect x="74.2638%" y="965" width="1.1446%" height="15" fill="rgb(240,58,21)"/><text x="74.5138%" y="975.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (489 samples, 1.14%)</title><rect x="74.2638%" y="949" width="1.1446%" height="15" fill="rgb(237,21,10)"/><text x="74.5138%" y="959.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (489 samples, 1.14%)</title><rect x="74.2638%" y="933" width="1.1446%" height="15" fill="rgb(218,43,11)"/><text x="74.5138%" y="943.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (489 samples, 1.14%)</title><rect x="74.2638%" y="917" width="1.1446%" height="15" fill="rgb(218,221,29)"/><text x="74.5138%" y="927.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (489 samples, 1.14%)</title><rect x="74.2638%" y="901" width="1.1446%" height="15" fill="rgb(214,118,42)"/><text x="74.5138%" y="911.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (489 samples, 1.14%)</title><rect x="74.2638%" y="885" width="1.1446%" height="15" fill="rgb(251,200,26)"/><text x="74.5138%" y="895.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (489 samples, 1.14%)</title><rect x="74.2638%" y="869" width="1.1446%" height="15" fill="rgb(237,101,39)"/><text x="74.5138%" y="879.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (489 samples, 1.14%)</title><rect x="74.2638%" y="853" width="1.1446%" height="15" fill="rgb(251,117,11)"/><text x="74.5138%" y="863.50"></text></g><g><title>tokio::coop::budget (489 samples, 1.14%)</title><rect x="74.2638%" y="837" width="1.1446%" height="15" fill="rgb(216,223,23)"/><text x="74.5138%" y="847.50"></text></g><g><title>tokio::coop::with_budget (489 samples, 1.14%)</title><rect x="74.2638%" y="821" width="1.1446%" height="15" fill="rgb(251,54,12)"/><text x="74.5138%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (489 samples, 1.14%)</title><rect x="74.2638%" y="805" width="1.1446%" height="15" fill="rgb(254,176,54)"/><text x="74.5138%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (489 samples, 1.14%)</title><rect x="74.2638%" y="789" width="1.1446%" height="15" fill="rgb(210,32,8)"/><text x="74.5138%" y="799.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (489 samples, 1.14%)</title><rect x="74.2638%" y="773" width="1.1446%" height="15" fill="rgb(235,52,38)"/><text x="74.5138%" y="783.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (489 samples, 1.14%)</title><rect x="74.2638%" y="757" width="1.1446%" height="15" fill="rgb(231,4,44)"/><text x="74.5138%" y="767.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (489 samples, 1.14%)</title><rect x="74.2638%" y="741" width="1.1446%" height="15" fill="rgb(249,2,32)"/><text x="74.5138%" y="751.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (489 samples, 1.14%)</title><rect x="74.2638%" y="725" width="1.1446%" height="15" fill="rgb(224,65,26)"/><text x="74.5138%" y="735.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (489 samples, 1.14%)</title><rect x="74.2638%" y="709" width="1.1446%" height="15" fill="rgb(250,73,40)"/><text x="74.5138%" y="719.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (489 samples, 1.14%)</title><rect x="74.2638%" y="693" width="1.1446%" height="15" fill="rgb(253,177,16)"/><text x="74.5138%" y="703.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (489 samples, 1.14%)</title><rect x="74.2638%" y="677" width="1.1446%" height="15" fill="rgb(217,32,34)"/><text x="74.5138%" y="687.50"></text></g><g><title>std::panic::catch_unwind (489 samples, 1.14%)</title><rect x="74.2638%" y="661" width="1.1446%" height="15" fill="rgb(212,7,10)"/><text x="74.5138%" y="671.50"></text></g><g><title>std::panicking::try (489 samples, 1.14%)</title><rect x="74.2638%" y="645" width="1.1446%" height="15" fill="rgb(245,89,8)"/><text x="74.5138%" y="655.50"></text></g><g><title>std::panicking::try::do_call (489 samples, 1.14%)</title><rect x="74.2638%" y="629" width="1.1446%" height="15" fill="rgb(237,16,53)"/><text x="74.5138%" y="639.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (489 samples, 1.14%)</title><rect x="74.2638%" y="613" width="1.1446%" height="15" fill="rgb(250,204,30)"/><text x="74.5138%" y="623.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (489 samples, 1.14%)</title><rect x="74.2638%" y="597" width="1.1446%" height="15" fill="rgb(208,77,27)"/><text x="74.5138%" y="607.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (489 samples, 1.14%)</title><rect x="74.2638%" y="581" width="1.1446%" height="15" fill="rgb(250,204,28)"/><text x="74.5138%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (489 samples, 1.14%)</title><rect x="74.2638%" y="565" width="1.1446%" height="15" fill="rgb(244,63,21)"/><text x="74.5138%" y="575.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::handle_produce::{{closure}} (487 samples, 1.14%)</title><rect x="74.2685%" y="549" width="1.1399%" height="15" fill="rgb(236,85,44)"/><text x="74.5185%" y="559.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::steal_into (18 samples, 0.04%)</title><rect x="75.4108%" y="1173" width="0.0421%" height="15" fill="rgb(215,98,4)"/><text x="75.6608%" y="1183.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (5 samples, 0.01%)</title><rect x="75.4576%" y="1173" width="0.0117%" height="15" fill="rgb(235,38,11)"/><text x="75.7076%" y="1183.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.01%)</title><rect x="75.5512%" y="981" width="0.0117%" height="15" fill="rgb(254,186,25)"/><text x="75.8012%" y="991.50"></text></g><g><title>_rjem_sdallocx (8 samples, 0.02%)</title><rect x="75.5676%" y="981" width="0.0187%" height="15" fill="rgb(225,55,31)"/><text x="75.8176%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (15 samples, 0.04%)</title><rect x="75.5863%" y="981" width="0.0351%" height="15" fill="rgb(211,15,21)"/><text x="75.8363%" y="991.50"></text></g><g><title>core::ptr::read (9 samples, 0.02%)</title><rect x="75.6004%" y="965" width="0.0211%" height="15" fill="rgb(215,187,41)"/><text x="75.8504%" y="975.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.02%)</title><rect x="75.6004%" y="949" width="0.0211%" height="15" fill="rgb(248,69,32)"/><text x="75.8504%" y="959.50"></text></g><g><title>alloc::alloc::box_free (12 samples, 0.03%)</title><rect x="75.6215%" y="949" width="0.0281%" height="15" fill="rgb(252,102,52)"/><text x="75.8715%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.03%)</title><rect x="75.6215%" y="933" width="0.0281%" height="15" fill="rgb(253,140,32)"/><text x="75.8715%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.03%)</title><rect x="75.6215%" y="917" width="0.0281%" height="15" fill="rgb(216,56,42)"/><text x="75.8715%" y="927.50"></text></g><g><title>_rjem_sdallocx (9 samples, 0.02%)</title><rect x="75.6285%" y="901" width="0.0211%" height="15" fill="rgb(216,184,14)"/><text x="75.8785%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (13 samples, 0.03%)</title><rect x="75.6215%" y="981" width="0.0304%" height="15" fill="rgb(237,187,27)"/><text x="75.8715%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (13 samples, 0.03%)</title><rect x="75.6215%" y="965" width="0.0304%" height="15" fill="rgb(219,65,3)"/><text x="75.8715%" y="975.50"></text></g><g><title>_rjem_sdallocx (6 samples, 0.01%)</title><rect x="75.6589%" y="885" width="0.0140%" height="15" fill="rgb(245,83,25)"/><text x="75.9089%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Connective&gt;&gt; (5 samples, 0.01%)</title><rect x="75.6800%" y="869" width="0.0117%" height="15" fill="rgb(214,205,45)"/><text x="75.9300%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.03%)</title><rect x="75.6917%" y="853" width="0.0304%" height="15" fill="rgb(241,20,18)"/><text x="75.9417%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Expr]&gt; (13 samples, 0.03%)</title><rect x="75.6917%" y="837" width="0.0304%" height="15" fill="rgb(232,163,23)"/><text x="75.9417%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Expr&gt; (12 samples, 0.03%)</title><rect x="75.6940%" y="821" width="0.0281%" height="15" fill="rgb(214,5,46)"/><text x="75.9440%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::expr::ExprInstance&gt;&gt; (12 samples, 0.03%)</title><rect x="75.6940%" y="805" width="0.0281%" height="15" fill="rgb(229,78,17)"/><text x="75.9440%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::expr::ExprInstance&gt; (5 samples, 0.01%)</title><rect x="75.7104%" y="789" width="0.0117%" height="15" fill="rgb(248,89,10)"/><text x="75.9604%" y="799.50"></text></g><g><title>inallocx (5 samples, 0.01%)</title><rect x="75.7408%" y="773" width="0.0117%" height="15" fill="rgb(248,54,15)"/><text x="75.9908%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (34 samples, 0.08%)</title><rect x="75.6917%" y="869" width="0.0796%" height="15" fill="rgb(223,116,6)"/><text x="75.9417%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (21 samples, 0.05%)</title><rect x="75.7221%" y="853" width="0.0492%" height="15" fill="rgb(205,125,38)"/><text x="75.9721%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.05%)</title><rect x="75.7221%" y="837" width="0.0492%" height="15" fill="rgb(251,78,38)"/><text x="75.9721%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21 samples, 0.05%)</title><rect x="75.7221%" y="821" width="0.0492%" height="15" fill="rgb(253,78,28)"/><text x="75.9721%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (21 samples, 0.05%)</title><rect x="75.7221%" y="805" width="0.0492%" height="15" fill="rgb(209,120,3)"/><text x="75.9721%" y="815.50"></text></g><g><title>_rjem_sdallocx (18 samples, 0.04%)</title><rect x="75.7291%" y="789" width="0.0421%" height="15" fill="rgb(238,229,9)"/><text x="75.9791%" y="799.50"></text></g><g><title>isfree (8 samples, 0.02%)</title><rect x="75.7525%" y="773" width="0.0187%" height="15" fill="rgb(253,159,18)"/><text x="76.0025%" y="783.50"></text></g><g><title>isdalloct (8 samples, 0.02%)</title><rect x="75.7525%" y="757" width="0.0187%" height="15" fill="rgb(244,42,34)"/><text x="76.0025%" y="767.50"></text></g><g><title>arena_sdalloc (8 samples, 0.02%)</title><rect x="75.7525%" y="741" width="0.0187%" height="15" fill="rgb(224,8,7)"/><text x="76.0025%" y="751.50"></text></g><g><title>tcache_dalloc_small (8 samples, 0.02%)</title><rect x="75.7525%" y="725" width="0.0187%" height="15" fill="rgb(210,201,45)"/><text x="76.0025%" y="735.50"></text></g><g><title>_rjem_sdallocx (5 samples, 0.01%)</title><rect x="75.8087%" y="757" width="0.0117%" height="15" fill="rgb(252,185,21)"/><text x="76.0587%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (11 samples, 0.03%)</title><rect x="75.8204%" y="741" width="0.0257%" height="15" fill="rgb(223,131,1)"/><text x="76.0704%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (8 samples, 0.02%)</title><rect x="75.8274%" y="725" width="0.0187%" height="15" fill="rgb(245,141,16)"/><text x="76.0774%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="75.8274%" y="709" width="0.0187%" height="15" fill="rgb(229,55,45)"/><text x="76.0774%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.02%)</title><rect x="75.8274%" y="693" width="0.0187%" height="15" fill="rgb(208,92,15)"/><text x="76.0774%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.02%)</title><rect x="75.8274%" y="677" width="0.0187%" height="15" fill="rgb(234,185,47)"/><text x="76.0774%" y="687.50"></text></g><g><title>_rjem_sdallocx (8 samples, 0.02%)</title><rect x="75.8274%" y="661" width="0.0187%" height="15" fill="rgb(253,104,50)"/><text x="76.0774%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.05%)</title><rect x="75.8040%" y="789" width="0.0492%" height="15" fill="rgb(205,70,7)"/><text x="76.0540%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Par]&gt; (21 samples, 0.05%)</title><rect x="75.8040%" y="773" width="0.0492%" height="15" fill="rgb(240,178,43)"/><text x="76.0540%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (14 samples, 0.03%)</title><rect x="75.8204%" y="757" width="0.0328%" height="15" fill="rgb(214,112,2)"/><text x="76.0704%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.02%)</title><rect x="75.8579%" y="757" width="0.0164%" height="15" fill="rgb(206,46,17)"/><text x="76.1079%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.02%)</title><rect x="75.8579%" y="741" width="0.0164%" height="15" fill="rgb(225,220,16)"/><text x="76.1079%" y="751.50"></text></g><g><title>_rjem_sdallocx (6 samples, 0.01%)</title><rect x="75.8602%" y="725" width="0.0140%" height="15" fill="rgb(238,65,40)"/><text x="76.1102%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Par&gt;&gt; (31 samples, 0.07%)</title><rect x="75.8040%" y="805" width="0.0726%" height="15" fill="rgb(230,151,21)"/><text x="76.0540%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Par&gt;&gt; (10 samples, 0.02%)</title><rect x="75.8532%" y="789" width="0.0234%" height="15" fill="rgb(218,58,49)"/><text x="76.1032%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="75.8532%" y="773" width="0.0234%" height="15" fill="rgb(219,179,14)"/><text x="76.1032%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.04%)</title><rect x="75.9117%" y="757" width="0.0375%" height="15" fill="rgb(223,72,1)"/><text x="76.1617%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::GUnforgeable]&gt; (14 samples, 0.03%)</title><rect x="75.9164%" y="741" width="0.0328%" height="15" fill="rgb(238,126,10)"/><text x="76.1664%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::GUnforgeable&gt; (14 samples, 0.03%)</title><rect x="75.9164%" y="725" width="0.0328%" height="15" fill="rgb(224,206,38)"/><text x="76.1664%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::g_unforgeable::UnfInstance&gt;&gt; (14 samples, 0.03%)</title><rect x="75.9164%" y="709" width="0.0328%" height="15" fill="rgb(212,201,54)"/><text x="76.1664%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::g_unforgeable::UnfInstance&gt; (8 samples, 0.02%)</title><rect x="75.9304%" y="693" width="0.0187%" height="15" fill="rgb(218,154,48)"/><text x="76.1804%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::GPrivate&gt; (8 samples, 0.02%)</title><rect x="75.9304%" y="677" width="0.0187%" height="15" fill="rgb(232,93,24)"/><text x="76.1804%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (8 samples, 0.02%)</title><rect x="75.9304%" y="661" width="0.0187%" height="15" fill="rgb(245,30,21)"/><text x="76.1804%" y="671.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="75.9304%" y="645" width="0.0187%" height="15" fill="rgb(242,148,29)"/><text x="76.1804%" y="655.50"></text></g><g><title>bytes::bytes::shared_drop (8 samples, 0.02%)</title><rect x="75.9304%" y="629" width="0.0187%" height="15" fill="rgb(244,153,54)"/><text x="76.1804%" y="639.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (8 samples, 0.02%)</title><rect x="75.9304%" y="613" width="0.0187%" height="15" fill="rgb(252,87,22)"/><text x="76.1804%" y="623.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (8 samples, 0.02%)</title><rect x="75.9304%" y="597" width="0.0187%" height="15" fill="rgb(210,51,29)"/><text x="76.1804%" y="607.50"></text></g><g><title>bytes::bytes::release_shared (8 samples, 0.02%)</title><rect x="75.9304%" y="581" width="0.0187%" height="15" fill="rgb(242,136,47)"/><text x="76.1804%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (7 samples, 0.02%)</title><rect x="75.9328%" y="565" width="0.0164%" height="15" fill="rgb(238,68,4)"/><text x="76.1828%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_sub (7 samples, 0.02%)</title><rect x="75.9328%" y="549" width="0.0164%" height="15" fill="rgb(242,161,30)"/><text x="76.1828%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::GUnforgeable&gt;&gt; (27 samples, 0.06%)</title><rect x="75.9117%" y="773" width="0.0632%" height="15" fill="rgb(218,58,44)"/><text x="76.1617%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::GUnforgeable&gt;&gt; (11 samples, 0.03%)</title><rect x="75.9492%" y="757" width="0.0257%" height="15" fill="rgb(252,125,32)"/><text x="76.1992%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.03%)</title><rect x="75.9492%" y="741" width="0.0257%" height="15" fill="rgb(219,178,0)"/><text x="76.1992%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.03%)</title><rect x="75.9492%" y="725" width="0.0257%" height="15" fill="rgb(213,152,7)"/><text x="76.1992%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.03%)</title><rect x="75.9492%" y="709" width="0.0257%" height="15" fill="rgb(249,109,34)"/><text x="76.1992%" y="719.50"></text></g><g><title>_rjem_sdallocx (10 samples, 0.02%)</title><rect x="75.9515%" y="693" width="0.0234%" height="15" fill="rgb(232,96,21)"/><text x="76.2015%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (84 samples, 0.20%)</title><rect x="75.7900%" y="853" width="0.1966%" height="15" fill="rgb(228,27,39)"/><text x="76.0400%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Send]&gt; (84 samples, 0.20%)</title><rect x="75.7900%" y="837" width="0.1966%" height="15" fill="rgb(211,182,52)"/><text x="76.0400%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Send&gt; (78 samples, 0.18%)</title><rect x="75.8040%" y="821" width="0.1826%" height="15" fill="rgb(234,178,38)"/><text x="76.0540%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::Par&gt;&gt; (45 samples, 0.11%)</title><rect x="75.8813%" y="805" width="0.1053%" height="15" fill="rgb(221,111,3)"/><text x="76.1313%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (35 samples, 0.08%)</title><rect x="75.9047%" y="789" width="0.0819%" height="15" fill="rgb(228,175,21)"/><text x="76.1547%" y="799.50"></text></g><g><title>__rg_dealloc (5 samples, 0.01%)</title><rect x="75.9866%" y="789" width="0.0117%" height="15" fill="rgb(228,174,43)"/><text x="76.2366%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Send&gt;&gt; (102 samples, 0.24%)</title><rect x="75.7900%" y="869" width="0.2388%" height="15" fill="rgb(211,191,0)"/><text x="76.0400%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Send&gt;&gt; (18 samples, 0.04%)</title><rect x="75.9866%" y="853" width="0.0421%" height="15" fill="rgb(253,117,3)"/><text x="76.2366%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.04%)</title><rect x="75.9866%" y="837" width="0.0421%" height="15" fill="rgb(241,127,19)"/><text x="76.2366%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (18 samples, 0.04%)</title><rect x="75.9866%" y="821" width="0.0421%" height="15" fill="rgb(218,103,12)"/><text x="76.2366%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (18 samples, 0.04%)</title><rect x="75.9866%" y="805" width="0.0421%" height="15" fill="rgb(236,214,43)"/><text x="76.2366%" y="815.50"></text></g><g><title>_rjem_sdallocx (13 samples, 0.03%)</title><rect x="75.9983%" y="789" width="0.0304%" height="15" fill="rgb(244,144,19)"/><text x="76.2483%" y="799.50"></text></g><g><title>isfree (7 samples, 0.02%)</title><rect x="76.0124%" y="773" width="0.0164%" height="15" fill="rgb(246,188,10)"/><text x="76.2624%" y="783.50"></text></g><g><title>isdalloct (7 samples, 0.02%)</title><rect x="76.0124%" y="757" width="0.0164%" height="15" fill="rgb(212,193,33)"/><text x="76.2624%" y="767.50"></text></g><g><title>arena_sdalloc (7 samples, 0.02%)</title><rect x="76.0124%" y="741" width="0.0164%" height="15" fill="rgb(241,51,29)"/><text x="76.2624%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (162 samples, 0.38%)</title><rect x="75.6519%" y="949" width="0.3792%" height="15" fill="rgb(211,58,19)"/><text x="75.9019%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::MatchCase]&gt; (162 samples, 0.38%)</title><rect x="75.6519%" y="933" width="0.3792%" height="15" fill="rgb(229,111,26)"/><text x="75.9019%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::MatchCase&gt; (161 samples, 0.38%)</title><rect x="75.6542%" y="917" width="0.3769%" height="15" fill="rgb(213,115,40)"/><text x="75.9042%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::Par&gt;&gt; (161 samples, 0.38%)</title><rect x="75.6542%" y="901" width="0.3769%" height="15" fill="rgb(209,56,44)"/><text x="75.9042%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (153 samples, 0.36%)</title><rect x="75.6730%" y="885" width="0.3581%" height="15" fill="rgb(230,108,32)"/><text x="75.9230%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::MatchCase&gt;&gt; (167 samples, 0.39%)</title><rect x="75.6519%" y="965" width="0.3909%" height="15" fill="rgb(216,165,31)"/><text x="75.9019%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::MatchCase&gt;&gt; (5 samples, 0.01%)</title><rect x="76.0311%" y="949" width="0.0117%" height="15" fill="rgb(218,122,21)"/><text x="76.2811%" y="959.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="76.0311%" y="933" width="0.0117%" height="15" fill="rgb(223,224,47)"/><text x="76.2811%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.01%)</title><rect x="76.0311%" y="917" width="0.0117%" height="15" fill="rgb(238,102,44)"/><text x="76.2811%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.01%)</title><rect x="76.0311%" y="901" width="0.0117%" height="15" fill="rgb(236,46,40)"/><text x="76.2811%" y="911.50"></text></g><g><title>_rjem_sdallocx (7 samples, 0.02%)</title><rect x="76.0475%" y="949" width="0.0164%" height="15" fill="rgb(247,202,50)"/><text x="76.2975%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (8 samples, 0.02%)</title><rect x="76.0685%" y="933" width="0.0187%" height="15" fill="rgb(209,99,20)"/><text x="76.3185%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (5 samples, 0.01%)</title><rect x="76.0756%" y="917" width="0.0117%" height="15" fill="rgb(252,27,34)"/><text x="76.3256%" y="927.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="76.0756%" y="901" width="0.0117%" height="15" fill="rgb(215,206,23)"/><text x="76.3256%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.01%)</title><rect x="76.0756%" y="885" width="0.0117%" height="15" fill="rgb(212,135,36)"/><text x="76.3256%" y="895.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.01%)</title><rect x="76.0756%" y="869" width="0.0117%" height="15" fill="rgb(240,189,1)"/><text x="76.3256%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Match&gt; (191 samples, 0.45%)</title><rect x="75.6519%" y="981" width="0.4471%" height="15" fill="rgb(242,56,20)"/><text x="75.9019%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::Par&gt;&gt; (22 samples, 0.05%)</title><rect x="76.0475%" y="965" width="0.0515%" height="15" fill="rgb(247,132,33)"/><text x="76.2975%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (15 samples, 0.04%)</title><rect x="76.0639%" y="949" width="0.0351%" height="15" fill="rgb(208,149,11)"/><text x="76.3139%" y="959.50"></text></g><g><title>imalloc_no_sample (6 samples, 0.01%)</title><rect x="76.1317%" y="837" width="0.0140%" height="15" fill="rgb(211,33,11)"/><text x="76.3817%" y="847.50"></text></g><g><title>iallocztm (5 samples, 0.01%)</title><rect x="76.1341%" y="821" width="0.0117%" height="15" fill="rgb(221,29,38)"/><text x="76.3841%" y="831.50"></text></g><g><title>arena_malloc (5 samples, 0.01%)</title><rect x="76.1341%" y="805" width="0.0117%" height="15" fill="rgb(206,182,49)"/><text x="76.3841%" y="815.50"></text></g><g><title>tcache_alloc_small (5 samples, 0.01%)</title><rect x="76.1341%" y="789" width="0.0117%" height="15" fill="rgb(216,140,1)"/><text x="76.3841%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (282 samples, 0.66%)</title><rect x="75.4904%" y="1061" width="0.6601%" height="15" fill="rgb(232,57,40)"/><text x="75.7404%" y="1071.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation::{{closure}} (282 samples, 0.66%)</title><rect x="75.4904%" y="1045" width="0.6601%" height="15" fill="rgb(224,186,18)"/><text x="75.7404%" y="1055.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (282 samples, 0.66%)</title><rect x="75.4904%" y="1029" width="0.6601%" height="15" fill="rgb(215,121,11)"/><text x="75.7404%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (282 samples, 0.66%)</title><rect x="75.4904%" y="1013" width="0.6601%" height="15" fill="rgb(245,147,10)"/><text x="75.7404%" y="1023.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate::{{closure}} (279 samples, 0.65%)</title><rect x="75.4974%" y="997" width="0.6531%" height="15" fill="rgb(238,153,13)"/><text x="75.7474%" y="1007.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_match::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Match&gt;::evaluate (21 samples, 0.05%)</title><rect x="76.1013%" y="981" width="0.0492%" height="15" fill="rgb(233,108,0)"/><text x="76.3513%" y="991.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (21 samples, 0.05%)</title><rect x="76.1013%" y="965" width="0.0492%" height="15" fill="rgb(212,157,17)"/><text x="76.3513%" y="975.50"></text></g><g><title>alloc::alloc::exchange_malloc (17 samples, 0.04%)</title><rect x="76.1107%" y="949" width="0.0398%" height="15" fill="rgb(225,213,38)"/><text x="76.3607%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.04%)</title><rect x="76.1107%" y="933" width="0.0398%" height="15" fill="rgb(248,16,11)"/><text x="76.3607%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.04%)</title><rect x="76.1107%" y="917" width="0.0398%" height="15" fill="rgb(241,33,4)"/><text x="76.3607%" y="927.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.04%)</title><rect x="76.1107%" y="901" width="0.0398%" height="15" fill="rgb(222,26,43)"/><text x="76.3607%" y="911.50"></text></g><g><title>_rjem_mallocx (12 samples, 0.03%)</title><rect x="76.1224%" y="885" width="0.0281%" height="15" fill="rgb(243,29,36)"/><text x="76.3724%" y="895.50"></text></g><g><title>imalloc (9 samples, 0.02%)</title><rect x="76.1294%" y="869" width="0.0211%" height="15" fill="rgb(241,9,27)"/><text x="76.3794%" y="879.50"></text></g><g><title>imalloc_body (9 samples, 0.02%)</title><rect x="76.1294%" y="853" width="0.0211%" height="15" fill="rgb(205,117,26)"/><text x="76.3794%" y="863.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (292 samples, 0.68%)</title><rect x="75.4693%" y="1173" width="0.6835%" height="15" fill="rgb(209,80,39)"/><text x="75.7193%" y="1183.50"></text></g><g><title>std::panic::catch_unwind (283 samples, 0.66%)</title><rect x="75.4904%" y="1157" width="0.6624%" height="15" fill="rgb(239,155,6)"/><text x="75.7404%" y="1167.50"></text></g><g><title>std::panicking::try (283 samples, 0.66%)</title><rect x="75.4904%" y="1141" width="0.6624%" height="15" fill="rgb(212,104,12)"/><text x="75.7404%" y="1151.50"></text></g><g><title>std::panicking::try::do_call (283 samples, 0.66%)</title><rect x="75.4904%" y="1125" width="0.6624%" height="15" fill="rgb(234,204,3)"/><text x="75.7404%" y="1135.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (283 samples, 0.66%)</title><rect x="75.4904%" y="1109" width="0.6624%" height="15" fill="rgb(251,218,7)"/><text x="75.7404%" y="1119.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (283 samples, 0.66%)</title><rect x="75.4904%" y="1093" width="0.6624%" height="15" fill="rgb(221,81,32)"/><text x="75.7404%" y="1103.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (283 samples, 0.66%)</title><rect x="75.4904%" y="1077" width="0.6624%" height="15" fill="rgb(214,152,26)"/><text x="75.7404%" y="1087.50"></text></g><g><title>tokio::sync::oneshot::State::is_rx_task_set (5 samples, 0.01%)</title><rect x="76.1785%" y="1173" width="0.0117%" height="15" fill="rgb(223,22,3)"/><text x="76.4285%" y="1183.50"></text></g><g><title>[unknown] (14,812 samples, 34.67%)</title><rect x="41.5360%" y="1189" width="34.6707%" height="15" fill="rgb(207,174,7)"/><text x="41.7860%" y="1199.50">[unknown]</text></g><g><title>anon.ff7fd81b8d6f221f67d075658d85a514.57.llvm.13947084464035088480 (6 samples, 0.01%)</title><rect x="76.2441%" y="1189" width="0.0140%" height="15" fill="rgb(224,19,52)"/><text x="76.4941%" y="1199.50"></text></g><g><title>tokio::runtime::thread_pool::worker::CURRENT::FOO::__getit (6 samples, 0.01%)</title><rect x="76.2441%" y="1173" width="0.0140%" height="15" fill="rgb(228,24,14)"/><text x="76.4941%" y="1183.50"></text></g><g><title>blake3_compress_in_place_avx512 (55 samples, 0.13%)</title><rect x="76.2698%" y="1189" width="0.1287%" height="15" fill="rgb(230,153,43)"/><text x="76.5198%" y="1199.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (6 samples, 0.01%)</title><rect x="76.4033%" y="853" width="0.0140%" height="15" fill="rgb(231,106,12)"/><text x="76.6533%" y="863.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (6 samples, 0.01%)</title><rect x="76.4033%" y="837" width="0.0140%" height="15" fill="rgb(215,92,2)"/><text x="76.6533%" y="847.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (6 samples, 0.01%)</title><rect x="76.4033%" y="821" width="0.0140%" height="15" fill="rgb(249,143,25)"/><text x="76.6533%" y="831.50"></text></g><g><title>syscall (6 samples, 0.01%)</title><rect x="76.4033%" y="805" width="0.0140%" height="15" fill="rgb(252,7,35)"/><text x="76.6533%" y="815.50"></text></g><g><title>[unknown] (6 samples, 0.01%)</title><rect x="76.4033%" y="789" width="0.0140%" height="15" fill="rgb(216,69,40)"/><text x="76.6533%" y="799.50"></text></g><g><title>[unknown] (6 samples, 0.01%)</title><rect x="76.4033%" y="773" width="0.0140%" height="15" fill="rgb(240,36,33)"/><text x="76.6533%" y="783.50"></text></g><g><title>[unknown] (6 samples, 0.01%)</title><rect x="76.4033%" y="757" width="0.0140%" height="15" fill="rgb(231,128,14)"/><text x="76.6533%" y="767.50"></text></g><g><title>[unknown] (6 samples, 0.01%)</title><rect x="76.4033%" y="741" width="0.0140%" height="15" fill="rgb(245,143,14)"/><text x="76.6533%" y="751.50"></text></g><g><title>[unknown] (6 samples, 0.01%)</title><rect x="76.4033%" y="725" width="0.0140%" height="15" fill="rgb(222,130,28)"/><text x="76.6533%" y="735.50"></text></g><g><title>[unknown] (6 samples, 0.01%)</title><rect x="76.4033%" y="709" width="0.0140%" height="15" fill="rgb(212,10,48)"/><text x="76.6533%" y="719.50"></text></g><g><title>[unknown] (6 samples, 0.01%)</title><rect x="76.4033%" y="693" width="0.0140%" height="15" fill="rgb(254,118,45)"/><text x="76.6533%" y="703.50"></text></g><g><title>[unknown] (6 samples, 0.01%)</title><rect x="76.4033%" y="677" width="0.0140%" height="15" fill="rgb(228,6,45)"/><text x="76.6533%" y="687.50"></text></g><g><title>[unknown] (6 samples, 0.01%)</title><rect x="76.4033%" y="661" width="0.0140%" height="15" fill="rgb(241,18,35)"/><text x="76.6533%" y="671.50"></text></g><g><title>[unknown] (6 samples, 0.01%)</title><rect x="76.4033%" y="645" width="0.0140%" height="15" fill="rgb(227,214,53)"/><text x="76.6533%" y="655.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="76.4056%" y="629" width="0.0117%" height="15" fill="rgb(224,107,51)"/><text x="76.6556%" y="639.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="76.4056%" y="613" width="0.0117%" height="15" fill="rgb(248,60,28)"/><text x="76.6556%" y="623.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="76.4056%" y="597" width="0.0117%" height="15" fill="rgb(249,101,23)"/><text x="76.6556%" y="607.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="76.4056%" y="581" width="0.0117%" height="15" fill="rgb(228,51,19)"/><text x="76.6556%" y="591.50"></text></g><g><title>parking_lot_core::parking_lot::park (8 samples, 0.02%)</title><rect x="76.4033%" y="885" width="0.0187%" height="15" fill="rgb(213,20,6)"/><text x="76.6533%" y="895.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (8 samples, 0.02%)</title><rect x="76.4033%" y="869" width="0.0187%" height="15" fill="rgb(212,124,10)"/><text x="76.6533%" y="879.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (9 samples, 0.02%)</title><rect x="76.4033%" y="949" width="0.0211%" height="15" fill="rgb(248,3,40)"/><text x="76.6533%" y="959.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (9 samples, 0.02%)</title><rect x="76.4033%" y="933" width="0.0211%" height="15" fill="rgb(223,178,23)"/><text x="76.6533%" y="943.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (9 samples, 0.02%)</title><rect x="76.4033%" y="917" width="0.0211%" height="15" fill="rgb(240,132,45)"/><text x="76.6533%" y="927.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (9 samples, 0.02%)</title><rect x="76.4033%" y="901" width="0.0211%" height="15" fill="rgb(245,164,36)"/><text x="76.6533%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::thread_pool::worker::Context&gt; (5 samples, 0.01%)</title><rect x="76.4243%" y="693" width="0.0117%" height="15" fill="rgb(231,188,53)"/><text x="76.6743%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt; (5 samples, 0.01%)</title><rect x="76.4243%" y="677" width="0.0117%" height="15" fill="rgb(237,198,39)"/><text x="76.6743%" y="687.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="76.4243%" y="661" width="0.0117%" height="15" fill="rgb(223,120,35)"/><text x="76.6743%" y="671.50"></text></g><g><title>_rjem_sdallocx (5 samples, 0.01%)</title><rect x="76.4243%" y="645" width="0.0117%" height="15" fill="rgb(253,107,49)"/><text x="76.6743%" y="655.50"></text></g><g><title>tsd_fetch (5 samples, 0.01%)</title><rect x="76.4243%" y="629" width="0.0117%" height="15" fill="rgb(216,44,31)"/><text x="76.6743%" y="639.50"></text></g><g><title>tsd_fetch_impl (5 samples, 0.01%)</title><rect x="76.4243%" y="613" width="0.0117%" height="15" fill="rgb(253,87,21)"/><text x="76.6743%" y="623.50"></text></g><g><title>_rjem_je_tsd_fetch_slow (5 samples, 0.01%)</title><rect x="76.4243%" y="597" width="0.0117%" height="15" fill="rgb(226,18,2)"/><text x="76.6743%" y="607.50"></text></g><g><title>tsd_data_init (5 samples, 0.01%)</title><rect x="76.4243%" y="581" width="0.0117%" height="15" fill="rgb(216,8,46)"/><text x="76.6743%" y="591.50"></text></g><g><title>_rjem_je_tsd_tcache_enabled_data_init (5 samples, 0.01%)</title><rect x="76.4243%" y="565" width="0.0117%" height="15" fill="rgb(226,140,39)"/><text x="76.6743%" y="575.50"></text></g><g><title>_rjem_je_tsd_tcache_data_init (5 samples, 0.01%)</title><rect x="76.4243%" y="549" width="0.0117%" height="15" fill="rgb(221,194,54)"/><text x="76.6743%" y="559.50"></text></g><g><title>ipallocztm (5 samples, 0.01%)</title><rect x="76.4243%" y="533" width="0.0117%" height="15" fill="rgb(213,92,11)"/><text x="76.6743%" y="543.50"></text></g><g><title>_rjem_je_arena_palloc (5 samples, 0.01%)</title><rect x="76.4243%" y="517" width="0.0117%" height="15" fill="rgb(229,162,46)"/><text x="76.6743%" y="527.50"></text></g><g><title>_rjem_je_large_malloc (5 samples, 0.01%)</title><rect x="76.4243%" y="501" width="0.0117%" height="15" fill="rgb(214,111,36)"/><text x="76.6743%" y="511.50"></text></g><g><title>_rjem_je_large_palloc (5 samples, 0.01%)</title><rect x="76.4243%" y="485" width="0.0117%" height="15" fill="rgb(207,6,21)"/><text x="76.6743%" y="495.50"></text></g><g><title>arena_decay_tick (5 samples, 0.01%)</title><rect x="76.4243%" y="469" width="0.0117%" height="15" fill="rgb(213,127,38)"/><text x="76.6743%" y="479.50"></text></g><g><title>arena_decay_ticks (5 samples, 0.01%)</title><rect x="76.4243%" y="453" width="0.0117%" height="15" fill="rgb(238,118,32)"/><text x="76.6743%" y="463.50"></text></g><g><title>decay_ticker_get (5 samples, 0.01%)</title><rect x="76.4243%" y="437" width="0.0117%" height="15" fill="rgb(240,139,39)"/><text x="76.6743%" y="447.50"></text></g><g><title>arena_tdata_get (5 samples, 0.01%)</title><rect x="76.4243%" y="421" width="0.0117%" height="15" fill="rgb(235,10,37)"/><text x="76.6743%" y="431.50"></text></g><g><title>_rjem_je_arena_tdata_get_hard (5 samples, 0.01%)</title><rect x="76.4243%" y="405" width="0.0117%" height="15" fill="rgb(249,171,38)"/><text x="76.6743%" y="415.50"></text></g><g><title>_rjem_je_a0malloc (5 samples, 0.01%)</title><rect x="76.4243%" y="389" width="0.0117%" height="15" fill="rgb(242,144,32)"/><text x="76.6743%" y="399.50"></text></g><g><title>a0ialloc (5 samples, 0.01%)</title><rect x="76.4243%" y="373" width="0.0117%" height="15" fill="rgb(217,117,21)"/><text x="76.6743%" y="383.50"></text></g><g><title>iallocztm (5 samples, 0.01%)</title><rect x="76.4243%" y="357" width="0.0117%" height="15" fill="rgb(249,87,1)"/><text x="76.6743%" y="367.50"></text></g><g><title>arena_malloc (5 samples, 0.01%)</title><rect x="76.4243%" y="341" width="0.0117%" height="15" fill="rgb(248,196,48)"/><text x="76.6743%" y="351.50"></text></g><g><title>_rjem_je_arena_malloc_hard (5 samples, 0.01%)</title><rect x="76.4243%" y="325" width="0.0117%" height="15" fill="rgb(251,206,33)"/><text x="76.6743%" y="335.50"></text></g><g><title>arena_malloc_small (5 samples, 0.01%)</title><rect x="76.4243%" y="309" width="0.0117%" height="15" fill="rgb(232,141,28)"/><text x="76.6743%" y="319.50"></text></g><g><title>malloc_mutex_lock (5 samples, 0.01%)</title><rect x="76.4243%" y="293" width="0.0117%" height="15" fill="rgb(209,167,14)"/><text x="76.6743%" y="303.50"></text></g><g><title>_rjem_je_malloc_mutex_lock_slow (5 samples, 0.01%)</title><rect x="76.4243%" y="277" width="0.0117%" height="15" fill="rgb(225,11,50)"/><text x="76.6743%" y="287.50"></text></g><g><title>malloc_mutex_lock_final (5 samples, 0.01%)</title><rect x="76.4243%" y="261" width="0.0117%" height="15" fill="rgb(209,50,20)"/><text x="76.6743%" y="271.50"></text></g><g><title>__GI___pthread_mutex_lock (5 samples, 0.01%)</title><rect x="76.4243%" y="245" width="0.0117%" height="15" fill="rgb(212,17,46)"/><text x="76.6743%" y="255.50"></text></g><g><title>__lll_lock_wait (5 samples, 0.01%)</title><rect x="76.4243%" y="229" width="0.0117%" height="15" fill="rgb(216,101,39)"/><text x="76.6743%" y="239.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="76.4243%" y="213" width="0.0117%" height="15" fill="rgb(212,228,48)"/><text x="76.6743%" y="223.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="76.4243%" y="197" width="0.0117%" height="15" fill="rgb(250,6,50)"/><text x="76.6743%" y="207.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="76.4243%" y="181" width="0.0117%" height="15" fill="rgb(250,160,48)"/><text x="76.6743%" y="191.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="76.4243%" y="165" width="0.0117%" height="15" fill="rgb(244,216,33)"/><text x="76.6743%" y="175.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="76.4243%" y="149" width="0.0117%" height="15" fill="rgb(207,157,5)"/><text x="76.6743%" y="159.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="76.4243%" y="133" width="0.0117%" height="15" fill="rgb(228,199,8)"/><text x="76.6743%" y="143.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="76.4243%" y="117" width="0.0117%" height="15" fill="rgb(227,80,20)"/><text x="76.6743%" y="127.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="76.4243%" y="101" width="0.0117%" height="15" fill="rgb(222,9,33)"/><text x="76.6743%" y="111.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="76.4243%" y="85" width="0.0117%" height="15" fill="rgb(239,44,28)"/><text x="76.6743%" y="95.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="76.4243%" y="69" width="0.0117%" height="15" fill="rgb(249,187,43)"/><text x="76.6743%" y="79.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="76.4243%" y="53" width="0.0117%" height="15" fill="rgb(216,141,28)"/><text x="76.6743%" y="63.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="76.4243%" y="37" width="0.0117%" height="15" fill="rgb(230,154,53)"/><text x="76.6743%" y="47.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (5 samples, 0.01%)</title><rect x="76.5016%" y="629" width="0.0117%" height="15" fill="rgb(227,82,4)"/><text x="76.7516%" y="639.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park_timeout (5 samples, 0.01%)</title><rect x="76.5016%" y="613" width="0.0117%" height="15" fill="rgb(220,107,16)"/><text x="76.7516%" y="623.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::maintenance (7 samples, 0.02%)</title><rect x="76.5016%" y="645" width="0.0164%" height="15" fill="rgb(207,187,2)"/><text x="76.7516%" y="655.50"></text></g><g><title>__sched_yield (1,548 samples, 3.62%)</title><rect x="76.5952%" y="581" width="3.6234%" height="15" fill="rgb(210,162,52)"/><text x="76.8452%" y="591.50">__sc..</text></g><g><title>[unknown] (1,447 samples, 3.39%)</title><rect x="76.8316%" y="565" width="3.3870%" height="15" fill="rgb(217,216,49)"/><text x="77.0816%" y="575.50">[un..</text></g><g><title>[unknown] (1,295 samples, 3.03%)</title><rect x="77.1874%" y="549" width="3.0312%" height="15" fill="rgb(218,146,49)"/><text x="77.4374%" y="559.50">[un..</text></g><g><title>[unknown] (1,255 samples, 2.94%)</title><rect x="77.2810%" y="533" width="2.9376%" height="15" fill="rgb(216,55,40)"/><text x="77.5310%" y="543.50">[u..</text></g><g><title>[unknown] (1,229 samples, 2.88%)</title><rect x="77.3419%" y="517" width="2.8767%" height="15" fill="rgb(208,196,21)"/><text x="77.5919%" y="527.50">[u..</text></g><g><title>[unknown] (1,060 samples, 2.48%)</title><rect x="77.7375%" y="501" width="2.4812%" height="15" fill="rgb(242,117,42)"/><text x="77.9875%" y="511.50">[u..</text></g><g><title>[unknown] (998 samples, 2.34%)</title><rect x="77.8826%" y="485" width="2.3360%" height="15" fill="rgb(210,11,23)"/><text x="78.1326%" y="495.50">[..</text></g><g><title>[unknown] (708 samples, 1.66%)</title><rect x="78.5614%" y="469" width="1.6572%" height="15" fill="rgb(217,110,2)"/><text x="78.8114%" y="479.50"></text></g><g><title>[unknown] (528 samples, 1.24%)</title><rect x="78.9827%" y="453" width="1.2359%" height="15" fill="rgb(229,77,54)"/><text x="79.2327%" y="463.50"></text></g><g><title>[unknown] (324 samples, 0.76%)</title><rect x="79.4602%" y="437" width="0.7584%" height="15" fill="rgb(218,53,16)"/><text x="79.7102%" y="447.50"></text></g><g><title>[unknown] (16 samples, 0.04%)</title><rect x="80.1812%" y="421" width="0.0375%" height="15" fill="rgb(215,38,13)"/><text x="80.4312%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (62 samples, 0.15%)</title><rect x="80.2186%" y="581" width="0.1451%" height="15" fill="rgb(235,42,18)"/><text x="80.4686%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (62 samples, 0.15%)</title><rect x="80.2186%" y="565" width="0.1451%" height="15" fill="rgb(219,66,54)"/><text x="80.4686%" y="575.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (17 samples, 0.04%)</title><rect x="80.3637%" y="581" width="0.0398%" height="15" fill="rgb(222,205,4)"/><text x="80.6137%" y="591.50"></text></g><g><title>parking_lot_core::parking_lot::park (17 samples, 0.04%)</title><rect x="80.3637%" y="565" width="0.0398%" height="15" fill="rgb(227,213,46)"/><text x="80.6137%" y="575.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (17 samples, 0.04%)</title><rect x="80.3637%" y="549" width="0.0398%" height="15" fill="rgb(250,145,42)"/><text x="80.6137%" y="559.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (17 samples, 0.04%)</title><rect x="80.3637%" y="533" width="0.0398%" height="15" fill="rgb(219,15,2)"/><text x="80.6137%" y="543.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (17 samples, 0.04%)</title><rect x="80.3637%" y="517" width="0.0398%" height="15" fill="rgb(231,181,52)"/><text x="80.6137%" y="527.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (17 samples, 0.04%)</title><rect x="80.3637%" y="501" width="0.0398%" height="15" fill="rgb(235,1,42)"/><text x="80.6137%" y="511.50"></text></g><g><title>syscall (17 samples, 0.04%)</title><rect x="80.3637%" y="485" width="0.0398%" height="15" fill="rgb(249,88,27)"/><text x="80.6137%" y="495.50"></text></g><g><title>[unknown] (17 samples, 0.04%)</title><rect x="80.3637%" y="469" width="0.0398%" height="15" fill="rgb(235,145,16)"/><text x="80.6137%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,()&gt;&gt; (10 samples, 0.02%)</title><rect x="80.4106%" y="565" width="0.0234%" height="15" fill="rgb(237,114,19)"/><text x="80.6606%" y="575.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="80.4106%" y="549" width="0.0234%" height="15" fill="rgb(238,51,50)"/><text x="80.6606%" y="559.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (10 samples, 0.02%)</title><rect x="80.4106%" y="533" width="0.0234%" height="15" fill="rgb(205,194,25)"/><text x="80.6606%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (10 samples, 0.02%)</title><rect x="80.4106%" y="517" width="0.0234%" height="15" fill="rgb(215,203,17)"/><text x="80.6606%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (10 samples, 0.02%)</title><rect x="80.4106%" y="501" width="0.0234%" height="15" fill="rgb(233,112,49)"/><text x="80.6606%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (55 samples, 0.13%)</title><rect x="80.4340%" y="565" width="0.1287%" height="15" fill="rgb(241,130,26)"/><text x="80.6840%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (55 samples, 0.13%)</title><rect x="80.4340%" y="549" width="0.1287%" height="15" fill="rgb(252,223,19)"/><text x="80.6840%" y="559.50"></text></g><g><title>__sched_yield (9 samples, 0.02%)</title><rect x="80.5627%" y="533" width="0.0211%" height="15" fill="rgb(211,95,25)"/><text x="80.8127%" y="543.50"></text></g><g><title>[unknown] (9 samples, 0.02%)</title><rect x="80.5627%" y="517" width="0.0211%" height="15" fill="rgb(251,182,27)"/><text x="80.8127%" y="527.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (28 samples, 0.07%)</title><rect x="80.5885%" y="517" width="0.0655%" height="15" fill="rgb(238,24,4)"/><text x="80.8385%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (28 samples, 0.07%)</title><rect x="80.5885%" y="501" width="0.0655%" height="15" fill="rgb(224,220,25)"/><text x="80.8385%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (28 samples, 0.07%)</title><rect x="80.5885%" y="485" width="0.0655%" height="15" fill="rgb(239,133,26)"/><text x="80.8385%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (177 samples, 0.41%)</title><rect x="80.6634%" y="453" width="0.4143%" height="15" fill="rgb(211,94,48)"/><text x="80.9134%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_load (177 samples, 0.41%)</title><rect x="80.6634%" y="437" width="0.4143%" height="15" fill="rgb(239,87,6)"/><text x="80.9134%" y="447.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (3,044 samples, 7.13%)</title><rect x="80.6610%" y="469" width="7.1251%" height="15" fill="rgb(227,62,0)"/><text x="80.9110%" y="479.50">&lt;parking_l..</text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (2,866 samples, 6.71%)</title><rect x="81.0777%" y="453" width="6.7085%" height="15" fill="rgb(211,226,4)"/><text x="81.3277%" y="463.50">parking_l..</text></g><g><title>syscall (2,866 samples, 6.71%)</title><rect x="81.0777%" y="437" width="6.7085%" height="15" fill="rgb(253,38,52)"/><text x="81.3277%" y="447.50">syscall</text></g><g><title>[unknown] (2,814 samples, 6.59%)</title><rect x="81.1994%" y="421" width="6.5868%" height="15" fill="rgb(229,126,40)"/><text x="81.4494%" y="431.50">[unknown]</text></g><g><title>[unknown] (2,704 samples, 6.33%)</title><rect x="81.4569%" y="405" width="6.3293%" height="15" fill="rgb(229,165,44)"/><text x="81.7069%" y="415.50">[unknown]</text></g><g><title>[unknown] (2,666 samples, 6.24%)</title><rect x="81.5458%" y="389" width="6.2403%" height="15" fill="rgb(247,95,47)"/><text x="81.7958%" y="399.50">[unknown]</text></g><g><title>[unknown] (2,607 samples, 6.10%)</title><rect x="81.6839%" y="373" width="6.1022%" height="15" fill="rgb(216,140,30)"/><text x="81.9339%" y="383.50">[unknown]</text></g><g><title>[unknown] (2,550 samples, 5.97%)</title><rect x="81.8173%" y="357" width="5.9688%" height="15" fill="rgb(246,214,8)"/><text x="82.0673%" y="367.50">[unknown]</text></g><g><title>[unknown] (2,441 samples, 5.71%)</title><rect x="82.0725%" y="341" width="5.7137%" height="15" fill="rgb(227,224,15)"/><text x="82.3225%" y="351.50">[unknow..</text></g><g><title>[unknown] (2,147 samples, 5.03%)</title><rect x="82.7606%" y="325" width="5.0255%" height="15" fill="rgb(233,175,4)"/><text x="83.0106%" y="335.50">[unkno..</text></g><g><title>[unknown] (1,927 samples, 4.51%)</title><rect x="83.2756%" y="309" width="4.5106%" height="15" fill="rgb(221,66,45)"/><text x="83.5256%" y="319.50">[unkn..</text></g><g><title>[unknown] (1,756 samples, 4.11%)</title><rect x="83.6759%" y="293" width="4.1103%" height="15" fill="rgb(221,178,18)"/><text x="83.9259%" y="303.50">[unk..</text></g><g><title>[unknown] (1,290 samples, 3.02%)</title><rect x="84.7666%" y="277" width="3.0195%" height="15" fill="rgb(213,81,29)"/><text x="85.0166%" y="287.50">[un..</text></g><g><title>[unknown] (917 samples, 2.15%)</title><rect x="85.6397%" y="261" width="2.1464%" height="15" fill="rgb(220,89,49)"/><text x="85.8897%" y="271.50">[..</text></g><g><title>[unknown] (653 samples, 1.53%)</title><rect x="86.2577%" y="245" width="1.5285%" height="15" fill="rgb(227,60,33)"/><text x="86.5077%" y="255.50"></text></g><g><title>[unknown] (378 samples, 0.88%)</title><rect x="86.9014%" y="229" width="0.8848%" height="15" fill="rgb(205,113,12)"/><text x="87.1514%" y="239.50"></text></g><g><title>[unknown] (250 samples, 0.59%)</title><rect x="87.2010%" y="213" width="0.5852%" height="15" fill="rgb(211,32,1)"/><text x="87.4510%" y="223.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (6 samples, 0.01%)</title><rect x="87.7862%" y="469" width="0.0140%" height="15" fill="rgb(246,2,12)"/><text x="88.0362%" y="479.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (6 samples, 0.01%)</title><rect x="87.7862%" y="453" width="0.0140%" height="15" fill="rgb(243,37,27)"/><text x="88.0362%" y="463.50"></text></g><g><title>core::mem::replace (6 samples, 0.01%)</title><rect x="87.7862%" y="437" width="0.0140%" height="15" fill="rgb(248,211,31)"/><text x="88.0362%" y="447.50"></text></g><g><title>core::mem::swap (6 samples, 0.01%)</title><rect x="87.7862%" y="421" width="0.0140%" height="15" fill="rgb(242,146,47)"/><text x="88.0362%" y="431.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (6 samples, 0.01%)</title><rect x="87.7862%" y="405" width="0.0140%" height="15" fill="rgb(206,70,20)"/><text x="88.0362%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.01%)</title><rect x="87.7862%" y="389" width="0.0140%" height="15" fill="rgb(215,10,51)"/><text x="88.0362%" y="399.50"></text></g><g><title>core::ops::function::FnOnce::call_once (7 samples, 0.02%)</title><rect x="87.8002%" y="469" width="0.0164%" height="15" fill="rgb(243,178,53)"/><text x="88.0502%" y="479.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal::{{closure}} (7 samples, 0.02%)</title><rect x="87.8002%" y="453" width="0.0164%" height="15" fill="rgb(233,221,20)"/><text x="88.0502%" y="463.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (7 samples, 0.02%)</title><rect x="87.8002%" y="437" width="0.0164%" height="15" fill="rgb(218,95,35)"/><text x="88.0502%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (7 samples, 0.02%)</title><rect x="87.8002%" y="421" width="0.0164%" height="15" fill="rgb(229,13,5)"/><text x="88.0502%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (7 samples, 0.02%)</title><rect x="87.8002%" y="405" width="0.0164%" height="15" fill="rgb(252,164,30)"/><text x="88.0502%" y="415.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (95 samples, 0.22%)</title><rect x="87.8213%" y="469" width="0.2224%" height="15" fill="rgb(232,68,36)"/><text x="88.0713%" y="479.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (89 samples, 0.21%)</title><rect x="87.8353%" y="453" width="0.2083%" height="15" fill="rgb(219,59,54)"/><text x="88.0853%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (88 samples, 0.21%)</title><rect x="87.8376%" y="437" width="0.2060%" height="15" fill="rgb(250,92,33)"/><text x="88.0876%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (88 samples, 0.21%)</title><rect x="87.8376%" y="421" width="0.2060%" height="15" fill="rgb(229,162,54)"/><text x="88.0876%" y="431.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (3,278 samples, 7.67%)</title><rect x="80.6563%" y="485" width="7.6729%" height="15" fill="rgb(244,114,52)"/><text x="80.9063%" y="495.50">parking_lot..</text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (122 samples, 0.29%)</title><rect x="88.0436%" y="469" width="0.2856%" height="15" fill="rgb(212,211,43)"/><text x="88.2936%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (122 samples, 0.29%)</title><rect x="88.0436%" y="453" width="0.2856%" height="15" fill="rgb(226,147,8)"/><text x="88.2936%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_sub (122 samples, 0.29%)</title><rect x="88.0436%" y="437" width="0.2856%" height="15" fill="rgb(226,23,13)"/><text x="88.2936%" y="447.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (3,319 samples, 7.77%)</title><rect x="80.5627%" y="565" width="7.7688%" height="15" fill="rgb(240,63,4)"/><text x="80.8127%" y="575.50">tokio::loom..</text></g><g><title>parking_lot::condvar::Condvar::wait (3,319 samples, 7.77%)</title><rect x="80.5627%" y="549" width="7.7688%" height="15" fill="rgb(221,1,32)"/><text x="80.8127%" y="559.50">parking_lot..</text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (3,310 samples, 7.75%)</title><rect x="80.5838%" y="533" width="7.7478%" height="15" fill="rgb(242,117,10)"/><text x="80.8338%" y="543.50">parking_lot..</text></g><g><title>parking_lot_core::parking_lot::park (3,280 samples, 7.68%)</title><rect x="80.6540%" y="517" width="7.6775%" height="15" fill="rgb(249,172,44)"/><text x="80.9040%" y="527.50">parking_lot..</text></g><g><title>parking_lot_core::parking_lot::with_thread_data (3,280 samples, 7.68%)</title><rect x="80.6540%" y="501" width="7.6775%" height="15" fill="rgb(244,46,45)"/><text x="80.9040%" y="511.50">parking_lot..</text></g><g><title>tokio::runtime::park::Inner::park_condvar (3,399 samples, 7.96%)</title><rect x="80.4082%" y="581" width="7.9561%" height="15" fill="rgb(206,43,17)"/><text x="80.6582%" y="591.50">tokio::runt..</text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (14 samples, 0.03%)</title><rect x="88.3315%" y="565" width="0.0328%" height="15" fill="rgb(239,218,39)"/><text x="88.5815%" y="575.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (14 samples, 0.03%)</title><rect x="88.3315%" y="549" width="0.0328%" height="15" fill="rgb(208,169,54)"/><text x="88.5815%" y="559.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (14 samples, 0.03%)</title><rect x="88.3315%" y="533" width="0.0328%" height="15" fill="rgb(247,25,42)"/><text x="88.5815%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (14 samples, 0.03%)</title><rect x="88.3315%" y="517" width="0.0328%" height="15" fill="rgb(226,23,31)"/><text x="88.5815%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (14 samples, 0.03%)</title><rect x="88.3315%" y="501" width="0.0328%" height="15" fill="rgb(247,16,28)"/><text x="88.5815%" y="511.50"></text></g><g><title>tokio::runtime::park::Inner::park_driver (5 samples, 0.01%)</title><rect x="88.3643%" y="581" width="0.0117%" height="15" fill="rgb(231,147,38)"/><text x="88.6143%" y="591.50"></text></g><g><title>&lt;tokio::runtime::driver::Driver as tokio::park::Park&gt;::park (5 samples, 0.01%)</title><rect x="88.3643%" y="565" width="0.0117%" height="15" fill="rgb(253,81,48)"/><text x="88.6143%" y="575.50"></text></g><g><title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park (5 samples, 0.01%)</title><rect x="88.3643%" y="549" width="0.0117%" height="15" fill="rgb(249,222,43)"/><text x="88.6143%" y="559.50"></text></g><g><title>&lt;tokio::park::either::Either&lt;A,B&gt; as tokio::park::Park&gt;::park (5 samples, 0.01%)</title><rect x="88.3643%" y="533" width="0.0117%" height="15" fill="rgb(221,3,27)"/><text x="88.6143%" y="543.50"></text></g><g><title>&lt;tokio::park::thread::ParkThread as tokio::park::Park&gt;::park (5 samples, 0.01%)</title><rect x="88.3643%" y="517" width="0.0117%" height="15" fill="rgb(228,180,5)"/><text x="88.6143%" y="527.50"></text></g><g><title>tokio::park::thread::Inner::park (5 samples, 0.01%)</title><rect x="88.3643%" y="501" width="0.0117%" height="15" fill="rgb(227,131,42)"/><text x="88.6143%" y="511.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (5 samples, 0.01%)</title><rect x="88.3643%" y="485" width="0.0117%" height="15" fill="rgb(212,3,39)"/><text x="88.6143%" y="495.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (5 samples, 0.01%)</title><rect x="88.3643%" y="469" width="0.0117%" height="15" fill="rgb(226,45,5)"/><text x="88.6143%" y="479.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (5 samples, 0.01%)</title><rect x="88.3643%" y="453" width="0.0117%" height="15" fill="rgb(215,167,45)"/><text x="88.6143%" y="463.50"></text></g><g><title>parking_lot_core::parking_lot::park (5 samples, 0.01%)</title><rect x="88.3643%" y="437" width="0.0117%" height="15" fill="rgb(250,218,53)"/><text x="88.6143%" y="447.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (5 samples, 0.01%)</title><rect x="88.3643%" y="421" width="0.0117%" height="15" fill="rgb(207,140,0)"/><text x="88.6143%" y="431.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (5 samples, 0.01%)</title><rect x="88.3643%" y="405" width="0.0117%" height="15" fill="rgb(238,133,51)"/><text x="88.6143%" y="415.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (5 samples, 0.01%)</title><rect x="88.3643%" y="389" width="0.0117%" height="15" fill="rgb(218,203,53)"/><text x="88.6143%" y="399.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (5 samples, 0.01%)</title><rect x="88.3643%" y="373" width="0.0117%" height="15" fill="rgb(226,184,25)"/><text x="88.6143%" y="383.50"></text></g><g><title>syscall (5 samples, 0.01%)</title><rect x="88.3643%" y="357" width="0.0117%" height="15" fill="rgb(231,121,21)"/><text x="88.6143%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="88.3643%" y="341" width="0.0117%" height="15" fill="rgb(251,14,34)"/><text x="88.6143%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="88.3643%" y="325" width="0.0117%" height="15" fill="rgb(249,193,11)"/><text x="88.6143%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="88.3643%" y="309" width="0.0117%" height="15" fill="rgb(220,172,37)"/><text x="88.6143%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="88.3643%" y="293" width="0.0117%" height="15" fill="rgb(231,229,43)"/><text x="88.6143%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="88.3643%" y="277" width="0.0117%" height="15" fill="rgb(250,161,5)"/><text x="88.6143%" y="287.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="88.3643%" y="261" width="0.0117%" height="15" fill="rgb(218,225,18)"/><text x="88.6143%" y="271.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="88.3643%" y="245" width="0.0117%" height="15" fill="rgb(245,45,42)"/><text x="88.6143%" y="255.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="88.3643%" y="229" width="0.0117%" height="15" fill="rgb(211,115,1)"/><text x="88.6143%" y="239.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="88.3643%" y="213" width="0.0117%" height="15" fill="rgb(248,133,52)"/><text x="88.6143%" y="223.50"></text></g><g><title>[unknown] (5 samples, 0.01%)</title><rect x="88.3643%" y="197" width="0.0117%" height="15" fill="rgb(238,100,21)"/><text x="88.6143%" y="207.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (5,186 samples, 12.14%)</title><rect x="76.5648%" y="613" width="12.1389%" height="15" fill="rgb(247,144,11)"/><text x="76.8148%" y="623.50">&lt;tokio::runtime::p..</text></g><g><title>tokio::runtime::park::Inner::park (5,186 samples, 12.14%)</title><rect x="76.5648%" y="597" width="12.1389%" height="15" fill="rgb(206,164,16)"/><text x="76.8148%" y="607.50">tokio::runtime::pa..</text></g><g><title>tokio::util::try_lock::TryLock&lt;T&gt;::try_lock (140 samples, 0.33%)</title><rect x="88.3760%" y="581" width="0.3277%" height="15" fill="rgb(222,34,3)"/><text x="88.6260%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (138 samples, 0.32%)</title><rect x="88.3807%" y="565" width="0.3230%" height="15" fill="rgb(248,82,4)"/><text x="88.6307%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (138 samples, 0.32%)</title><rect x="88.3807%" y="549" width="0.3230%" height="15" fill="rgb(228,81,46)"/><text x="88.6307%" y="559.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (20 samples, 0.05%)</title><rect x="88.7037%" y="613" width="0.0468%" height="15" fill="rgb(227,67,47)"/><text x="88.9537%" y="623.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (20 samples, 0.05%)</title><rect x="88.7037%" y="597" width="0.0468%" height="15" fill="rgb(215,93,53)"/><text x="88.9537%" y="607.50"></text></g><g><title>core::cell::BorrowRefMut::new (20 samples, 0.05%)</title><rect x="88.7037%" y="581" width="0.0468%" height="15" fill="rgb(248,194,39)"/><text x="88.9537%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::park::Parker&gt;&gt; (13 samples, 0.03%)</title><rect x="88.7622%" y="613" width="0.0304%" height="15" fill="rgb(215,5,19)"/><text x="89.0122%" y="623.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (49 samples, 0.11%)</title><rect x="88.7927%" y="613" width="0.1147%" height="15" fill="rgb(226,215,51)"/><text x="89.0427%" y="623.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (5,277 samples, 12.35%)</title><rect x="76.5601%" y="629" width="12.3519%" height="15" fill="rgb(225,56,26)"/><text x="76.8101%" y="639.50">tokio::runtime::th..</text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::queue::Pointers&gt;&gt; (21 samples, 0.05%)</title><rect x="88.9120%" y="597" width="0.0492%" height="15" fill="rgb(222,75,29)"/><text x="89.1620%" y="607.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.05%)</title><rect x="88.9120%" y="581" width="0.0492%" height="15" fill="rgb(236,139,6)"/><text x="89.1620%" y="591.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (21 samples, 0.05%)</title><rect x="88.9120%" y="565" width="0.0492%" height="15" fill="rgb(223,137,36)"/><text x="89.1620%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (20 samples, 0.05%)</title><rect x="88.9144%" y="549" width="0.0468%" height="15" fill="rgb(226,99,2)"/><text x="89.1644%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (20 samples, 0.05%)</title><rect x="88.9144%" y="533" width="0.0468%" height="15" fill="rgb(206,133,23)"/><text x="89.1644%" y="543.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::is_closed (40 samples, 0.09%)</title><rect x="88.9120%" y="613" width="0.0936%" height="15" fill="rgb(243,173,15)"/><text x="89.1620%" y="623.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (19 samples, 0.04%)</title><rect x="88.9612%" y="597" width="0.0445%" height="15" fill="rgb(228,69,28)"/><text x="89.2112%" y="607.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (19 samples, 0.04%)</title><rect x="88.9612%" y="581" width="0.0445%" height="15" fill="rgb(212,51,22)"/><text x="89.2112%" y="591.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (19 samples, 0.04%)</title><rect x="88.9612%" y="565" width="0.0445%" height="15" fill="rgb(227,113,0)"/><text x="89.2112%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (19 samples, 0.04%)</title><rect x="88.9612%" y="549" width="0.0445%" height="15" fill="rgb(252,84,27)"/><text x="89.2112%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (19 samples, 0.04%)</title><rect x="88.9612%" y="533" width="0.0445%" height="15" fill="rgb(223,145,39)"/><text x="89.2112%" y="543.50"></text></g><g><title>tokio::runtime::task::stack::TransferStack&lt;T&gt;::drain (144 samples, 0.34%)</title><rect x="89.0080%" y="597" width="0.3371%" height="15" fill="rgb(239,219,30)"/><text x="89.2580%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::swap (144 samples, 0.34%)</title><rect x="89.0080%" y="581" width="0.3371%" height="15" fill="rgb(224,196,39)"/><text x="89.2580%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_swap (144 samples, 0.34%)</title><rect x="89.0080%" y="565" width="0.3371%" height="15" fill="rgb(205,35,43)"/><text x="89.2580%" y="575.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::drain_pending_drop (248 samples, 0.58%)</title><rect x="89.0057%" y="613" width="0.5805%" height="15" fill="rgb(228,201,21)"/><text x="89.2557%" y="623.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Worker::remote (103 samples, 0.24%)</title><rect x="89.3451%" y="597" width="0.2411%" height="15" fill="rgb(237,118,16)"/><text x="89.5951%" y="607.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::maintenance (289 samples, 0.68%)</title><rect x="88.9120%" y="629" width="0.6765%" height="15" fill="rgb(241,17,19)"/><text x="89.1620%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;usize&gt;&gt;&gt; (15 samples, 0.04%)</title><rect x="89.5885%" y="597" width="0.0351%" height="15" fill="rgb(214,10,25)"/><text x="89.8385%" y="607.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.04%)</title><rect x="89.5885%" y="581" width="0.0351%" height="15" fill="rgb(238,37,29)"/><text x="89.8385%" y="591.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (15 samples, 0.04%)</title><rect x="89.5885%" y="565" width="0.0351%" height="15" fill="rgb(253,83,25)"/><text x="89.8385%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (11 samples, 0.03%)</title><rect x="89.5979%" y="549" width="0.0257%" height="15" fill="rgb(234,192,12)"/><text x="89.8479%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (11 samples, 0.03%)</title><rect x="89.5979%" y="533" width="0.0257%" height="15" fill="rgb(241,216,45)"/><text x="89.8479%" y="543.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (9 samples, 0.02%)</title><rect x="89.6377%" y="549" width="0.0211%" height="15" fill="rgb(242,22,33)"/><text x="89.8877%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (9 samples, 0.02%)</title><rect x="89.6377%" y="533" width="0.0211%" height="15" fill="rgb(231,105,49)"/><text x="89.8877%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (16 samples, 0.04%)</title><rect x="89.6236%" y="597" width="0.0375%" height="15" fill="rgb(218,204,15)"/><text x="89.8736%" y="607.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (16 samples, 0.04%)</title><rect x="89.6236%" y="581" width="0.0375%" height="15" fill="rgb(235,138,41)"/><text x="89.8736%" y="591.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (16 samples, 0.04%)</title><rect x="89.6236%" y="565" width="0.0375%" height="15" fill="rgb(246,0,9)"/><text x="89.8736%" y="575.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_from_parked (45 samples, 0.11%)</title><rect x="89.5885%" y="629" width="0.1053%" height="15" fill="rgb(210,74,4)"/><text x="89.8385%" y="639.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::is_parked (45 samples, 0.11%)</title><rect x="89.5885%" y="613" width="0.1053%" height="15" fill="rgb(250,60,41)"/><text x="89.8385%" y="623.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (14 samples, 0.03%)</title><rect x="89.6611%" y="597" width="0.0328%" height="15" fill="rgb(220,115,12)"/><text x="89.9111%" y="607.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (14 samples, 0.03%)</title><rect x="89.6611%" y="581" width="0.0328%" height="15" fill="rgb(237,100,13)"/><text x="89.9111%" y="591.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (14 samples, 0.03%)</title><rect x="89.6611%" y="565" width="0.0328%" height="15" fill="rgb(213,55,26)"/><text x="89.9111%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (13 samples, 0.03%)</title><rect x="89.6634%" y="549" width="0.0304%" height="15" fill="rgb(216,17,4)"/><text x="89.9134%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (13 samples, 0.03%)</title><rect x="89.6634%" y="533" width="0.0304%" height="15" fill="rgb(220,153,47)"/><text x="89.9134%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;usize&gt;&gt;&gt; (87 samples, 0.20%)</title><rect x="89.7102%" y="597" width="0.2036%" height="15" fill="rgb(215,131,9)"/><text x="89.9602%" y="607.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (87 samples, 0.20%)</title><rect x="89.7102%" y="581" width="0.2036%" height="15" fill="rgb(233,46,42)"/><text x="89.9602%" y="591.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (87 samples, 0.20%)</title><rect x="89.7102%" y="565" width="0.2036%" height="15" fill="rgb(226,86,7)"/><text x="89.9602%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (87 samples, 0.20%)</title><rect x="89.7102%" y="549" width="0.2036%" height="15" fill="rgb(239,226,21)"/><text x="89.9602%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (87 samples, 0.20%)</title><rect x="89.7102%" y="533" width="0.2036%" height="15" fill="rgb(244,137,22)"/><text x="89.9602%" y="543.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (14 samples, 0.03%)</title><rect x="89.9139%" y="597" width="0.0328%" height="15" fill="rgb(211,139,35)"/><text x="90.1639%" y="607.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (14 samples, 0.03%)</title><rect x="89.9139%" y="581" width="0.0328%" height="15" fill="rgb(214,62,50)"/><text x="90.1639%" y="591.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (14 samples, 0.03%)</title><rect x="89.9139%" y="565" width="0.0328%" height="15" fill="rgb(212,113,44)"/><text x="90.1639%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (14 samples, 0.03%)</title><rect x="89.9139%" y="549" width="0.0328%" height="15" fill="rgb(226,150,43)"/><text x="90.1639%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (14 samples, 0.03%)</title><rect x="89.9139%" y="533" width="0.0328%" height="15" fill="rgb(250,71,37)"/><text x="90.1639%" y="543.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::transition_worker_to_parked (127 samples, 0.30%)</title><rect x="89.6962%" y="613" width="0.2973%" height="15" fill="rgb(219,76,19)"/><text x="89.9462%" y="623.50"></text></g><g><title>tokio::runtime::thread_pool::idle::State::dec_num_unparked (20 samples, 0.05%)</title><rect x="89.9466%" y="597" width="0.0468%" height="15" fill="rgb(250,39,11)"/><text x="90.1966%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (19 samples, 0.04%)</title><rect x="89.9490%" y="581" width="0.0445%" height="15" fill="rgb(230,64,31)"/><text x="90.1990%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_sub (19 samples, 0.04%)</title><rect x="89.9490%" y="565" width="0.0445%" height="15" fill="rgb(208,222,23)"/><text x="90.1990%" y="575.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park (5,781 samples, 13.53%)</title><rect x="76.5180%" y="645" width="13.5317%" height="15" fill="rgb(227,125,18)"/><text x="76.7680%" y="655.50">tokio::runtime::thre..</text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_to_parked (152 samples, 0.36%)</title><rect x="89.6938%" y="629" width="0.3558%" height="15" fill="rgb(234,210,9)"/><text x="89.9438%" y="639.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_if_work_pending (24 samples, 0.06%)</title><rect x="89.9934%" y="613" width="0.0562%" height="15" fill="rgb(217,127,24)"/><text x="90.2434%" y="623.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::is_empty (9 samples, 0.02%)</title><rect x="90.0286%" y="597" width="0.0211%" height="15" fill="rgb(239,141,48)"/><text x="90.2786%" y="607.50"></text></g><g><title>tokio::runtime::queue::Inner&lt;T&gt;::is_empty (8 samples, 0.02%)</title><rect x="90.0309%" y="581" width="0.0187%" height="15" fill="rgb(227,109,8)"/><text x="90.2809%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU16::load (8 samples, 0.02%)</title><rect x="90.0309%" y="565" width="0.0187%" height="15" fill="rgb(235,184,23)"/><text x="90.2809%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_load (8 samples, 0.02%)</title><rect x="90.0309%" y="549" width="0.0187%" height="15" fill="rgb(227,226,48)"/><text x="90.2809%" y="559.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (18 samples, 0.04%)</title><rect x="90.0894%" y="533" width="0.0421%" height="15" fill="rgb(206,150,11)"/><text x="90.3394%" y="543.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (18 samples, 0.04%)</title><rect x="90.0894%" y="517" width="0.0421%" height="15" fill="rgb(254,2,33)"/><text x="90.3394%" y="527.50"></text></g><g><title>core::cell::BorrowRefMut::new (18 samples, 0.04%)</title><rect x="90.0894%" y="501" width="0.0421%" height="15" fill="rgb(243,160,20)"/><text x="90.3394%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (7 samples, 0.02%)</title><rect x="90.1315%" y="533" width="0.0164%" height="15" fill="rgb(218,208,30)"/><text x="90.3815%" y="543.50"></text></g><g><title>core::mem::take (7 samples, 0.02%)</title><rect x="90.1315%" y="517" width="0.0164%" height="15" fill="rgb(224,120,49)"/><text x="90.3815%" y="527.50"></text></g><g><title>core::mem::replace (7 samples, 0.02%)</title><rect x="90.1315%" y="501" width="0.0164%" height="15" fill="rgb(246,12,2)"/><text x="90.3815%" y="511.50"></text></g><g><title>core::mem::swap (7 samples, 0.02%)</title><rect x="90.1315%" y="485" width="0.0164%" height="15" fill="rgb(236,117,3)"/><text x="90.3815%" y="495.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (7 samples, 0.02%)</title><rect x="90.1315%" y="469" width="0.0164%" height="15" fill="rgb(216,128,52)"/><text x="90.3815%" y="479.50"></text></g><g><title>core::ptr::read (7 samples, 0.02%)</title><rect x="90.1315%" y="453" width="0.0164%" height="15" fill="rgb(246,145,19)"/><text x="90.3815%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.02%)</title><rect x="90.1315%" y="437" width="0.0164%" height="15" fill="rgb(222,11,46)"/><text x="90.3815%" y="447.50"></text></g><g><title>isfree (9 samples, 0.02%)</title><rect x="90.2907%" y="453" width="0.0211%" height="15" fill="rgb(245,82,36)"/><text x="90.5407%" y="463.50"></text></g><g><title>isdalloct (9 samples, 0.02%)</title><rect x="90.2907%" y="437" width="0.0211%" height="15" fill="rgb(250,73,51)"/><text x="90.5407%" y="447.50"></text></g><g><title>arena_sdalloc (9 samples, 0.02%)</title><rect x="90.2907%" y="421" width="0.0211%" height="15" fill="rgb(221,189,23)"/><text x="90.5407%" y="431.50"></text></g><g><title>tcache_dalloc_small (8 samples, 0.02%)</title><rect x="90.2931%" y="405" width="0.0187%" height="15" fill="rgb(210,33,7)"/><text x="90.5431%" y="415.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (8 samples, 0.02%)</title><rect x="90.2931%" y="389" width="0.0187%" height="15" fill="rgb(210,107,22)"/><text x="90.5431%" y="399.50"></text></g><g><title>_rjem_sdallocx (17 samples, 0.04%)</title><rect x="90.2743%" y="469" width="0.0398%" height="15" fill="rgb(222,116,37)"/><text x="90.5243%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Core&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_produce::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (5 samples, 0.01%)</title><rect x="90.3211%" y="405" width="0.0117%" height="15" fill="rgb(254,17,48)"/><text x="90.5711%" y="415.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (9 samples, 0.02%)</title><rect x="90.3141%" y="469" width="0.0211%" height="15" fill="rgb(224,36,32)"/><text x="90.5641%" y="479.50"></text></g><g><title>core::mem::drop (9 samples, 0.02%)</title><rect x="90.3141%" y="453" width="0.0211%" height="15" fill="rgb(232,90,46)"/><text x="90.5641%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_produce::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (6 samples, 0.01%)</title><rect x="90.3211%" y="437" width="0.0140%" height="15" fill="rgb(241,66,40)"/><text x="90.5711%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_produce::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (6 samples, 0.01%)</title><rect x="90.3211%" y="421" width="0.0140%" height="15" fill="rgb(249,184,29)"/><text x="90.5711%" y="431.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (7 samples, 0.02%)</title><rect x="90.3422%" y="389" width="0.0164%" height="15" fill="rgb(231,181,1)"/><text x="90.5922%" y="399.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::release::{{closure}} (5 samples, 0.01%)</title><rect x="90.3469%" y="373" width="0.0117%" height="15" fill="rgb(224,94,2)"/><text x="90.5969%" y="383.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::release (11 samples, 0.03%)</title><rect x="90.3352%" y="453" width="0.0257%" height="15" fill="rgb(229,170,15)"/><text x="90.5852%" y="463.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (11 samples, 0.03%)</title><rect x="90.3352%" y="437" width="0.0257%" height="15" fill="rgb(240,127,35)"/><text x="90.5852%" y="447.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::release::{{closure}} (11 samples, 0.03%)</title><rect x="90.3352%" y="421" width="0.0257%" height="15" fill="rgb(248,196,34)"/><text x="90.5852%" y="431.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::release (9 samples, 0.02%)</title><rect x="90.3399%" y="405" width="0.0211%" height="15" fill="rgb(236,137,7)"/><text x="90.5899%" y="415.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (63 samples, 0.15%)</title><rect x="90.2462%" y="485" width="0.1475%" height="15" fill="rgb(235,127,16)"/><text x="90.4962%" y="495.50"></text></g><g><title>tokio::runtime::task::harness::SchedulerView&lt;S&gt;::transition_to_terminal (25 samples, 0.06%)</title><rect x="90.3352%" y="469" width="0.0585%" height="15" fill="rgb(250,192,54)"/><text x="90.5852%" y="479.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_terminal (14 samples, 0.03%)</title><rect x="90.3609%" y="453" width="0.0328%" height="15" fill="rgb(218,98,20)"/><text x="90.6109%" y="463.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update (14 samples, 0.03%)</title><rect x="90.3609%" y="437" width="0.0328%" height="15" fill="rgb(230,176,47)"/><text x="90.6109%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (12 samples, 0.03%)</title><rect x="90.3656%" y="421" width="0.0281%" height="15" fill="rgb(244,2,33)"/><text x="90.6156%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (12 samples, 0.03%)</title><rect x="90.3656%" y="405" width="0.0281%" height="15" fill="rgb(231,100,17)"/><text x="90.6156%" y="415.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 0.03%)</title><rect x="90.4007%" y="405" width="0.0281%" height="15" fill="rgb(245,23,12)"/><text x="90.6507%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (12 samples, 0.03%)</title><rect x="90.4007%" y="389" width="0.0281%" height="15" fill="rgb(249,55,22)"/><text x="90.6507%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_add (12 samples, 0.03%)</title><rect x="90.4007%" y="373" width="0.0281%" height="15" fill="rgb(207,134,9)"/><text x="90.6507%" y="383.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (17 samples, 0.04%)</title><rect x="90.3984%" y="437" width="0.0398%" height="15" fill="rgb(218,134,0)"/><text x="90.6484%" y="447.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::bind::{{closure}} (16 samples, 0.04%)</title><rect x="90.4007%" y="421" width="0.0375%" height="15" fill="rgb(213,212,33)"/><text x="90.6507%" y="431.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::bind_scheduler (18 samples, 0.04%)</title><rect x="90.3984%" y="453" width="0.0421%" height="15" fill="rgb(252,106,18)"/><text x="90.6484%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (59 samples, 0.14%)</title><rect x="90.4429%" y="421" width="0.1381%" height="15" fill="rgb(208,126,42)"/><text x="90.6929%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (59 samples, 0.14%)</title><rect x="90.4429%" y="405" width="0.1381%" height="15" fill="rgb(246,175,29)"/><text x="90.6929%" y="415.50"></text></g><g><title>tokio::runtime::task::harness::SchedulerView&lt;S&gt;::transition_to_running (80 samples, 0.19%)</title><rect x="90.3984%" y="469" width="0.1873%" height="15" fill="rgb(215,13,50)"/><text x="90.6484%" y="479.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (62 samples, 0.15%)</title><rect x="90.4405%" y="453" width="0.1451%" height="15" fill="rgb(216,172,15)"/><text x="90.6905%" y="463.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update (62 samples, 0.15%)</title><rect x="90.4405%" y="437" width="0.1451%" height="15" fill="rgb(212,103,13)"/><text x="90.6905%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;&gt;&gt; (5 samples, 0.01%)</title><rect x="90.8993%" y="325" width="0.0117%" height="15" fill="rgb(231,171,36)"/><text x="91.1493%" y="335.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="90.8993%" y="309" width="0.0117%" height="15" fill="rgb(250,123,20)"/><text x="91.1493%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (5 samples, 0.01%)</title><rect x="90.8993%" y="293" width="0.0117%" height="15" fill="rgb(212,53,50)"/><text x="91.1493%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_sub (5 samples, 0.01%)</title><rect x="90.8993%" y="277" width="0.0117%" height="15" fill="rgb(243,54,12)"/><text x="91.1493%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (9 samples, 0.02%)</title><rect x="90.9110%" y="325" width="0.0211%" height="15" fill="rgb(234,101,34)"/><text x="91.1610%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (9 samples, 0.02%)</title><rect x="90.9110%" y="309" width="0.0211%" height="15" fill="rgb(254,67,22)"/><text x="91.1610%" y="319.50"></text></g><g><title>alloc::alloc::box_free (9 samples, 0.02%)</title><rect x="90.9110%" y="293" width="0.0211%" height="15" fill="rgb(250,35,47)"/><text x="91.1610%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.02%)</title><rect x="90.9110%" y="277" width="0.0211%" height="15" fill="rgb(226,126,38)"/><text x="91.1610%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.02%)</title><rect x="90.9110%" y="261" width="0.0211%" height="15" fill="rgb(216,138,53)"/><text x="91.1610%" y="271.50"></text></g><g><title>_rjem_sdallocx (9 samples, 0.02%)</title><rect x="90.9110%" y="245" width="0.0211%" height="15" fill="rgb(246,199,43)"/><text x="91.1610%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Match&gt;&gt; (10 samples, 0.02%)</title><rect x="90.9344%" y="309" width="0.0234%" height="15" fill="rgb(232,125,11)"/><text x="91.1844%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Match&gt;&gt; (8 samples, 0.02%)</title><rect x="90.9391%" y="293" width="0.0187%" height="15" fill="rgb(218,219,45)"/><text x="91.1891%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="90.9391%" y="277" width="0.0187%" height="15" fill="rgb(216,102,54)"/><text x="91.1891%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.02%)</title><rect x="90.9391%" y="261" width="0.0187%" height="15" fill="rgb(250,228,7)"/><text x="91.1891%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.02%)</title><rect x="90.9391%" y="245" width="0.0187%" height="15" fill="rgb(226,125,25)"/><text x="91.1891%" y="255.50"></text></g><g><title>_rjem_sdallocx (5 samples, 0.01%)</title><rect x="90.9461%" y="229" width="0.0117%" height="15" fill="rgb(224,165,27)"/><text x="91.1961%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (17 samples, 0.04%)</title><rect x="90.9321%" y="325" width="0.0398%" height="15" fill="rgb(233,86,3)"/><text x="91.1821%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Send&gt;&gt; (5 samples, 0.01%)</title><rect x="90.9602%" y="309" width="0.0117%" height="15" fill="rgb(228,116,20)"/><text x="91.2102%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (5 samples, 0.01%)</title><rect x="90.9812%" y="245" width="0.0117%" height="15" fill="rgb(209,192,17)"/><text x="91.2312%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (5 samples, 0.01%)</title><rect x="90.9812%" y="229" width="0.0117%" height="15" fill="rgb(224,88,34)"/><text x="91.2312%" y="239.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="90.9812%" y="213" width="0.0117%" height="15" fill="rgb(233,38,6)"/><text x="91.2312%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.01%)</title><rect x="90.9812%" y="197" width="0.0117%" height="15" fill="rgb(212,59,30)"/><text x="91.2312%" y="207.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.01%)</title><rect x="90.9812%" y="181" width="0.0117%" height="15" fill="rgb(213,80,3)"/><text x="91.2312%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;rho_runtime::interpreter::reduce::environment::Env&gt; (12 samples, 0.03%)</title><rect x="90.9719%" y="325" width="0.0281%" height="15" fill="rgb(251,178,7)"/><text x="91.2219%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[model::rho_types::Par: 6]&gt;&gt; (12 samples, 0.03%)</title><rect x="90.9719%" y="309" width="0.0281%" height="15" fill="rgb(213,154,26)"/><text x="91.2219%" y="319.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.03%)</title><rect x="90.9719%" y="293" width="0.0281%" height="15" fill="rgb(238,165,49)"/><text x="91.2219%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Par]&gt; (11 samples, 0.03%)</title><rect x="90.9742%" y="277" width="0.0257%" height="15" fill="rgb(248,91,46)"/><text x="91.2242%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (8 samples, 0.02%)</title><rect x="90.9812%" y="261" width="0.0187%" height="15" fill="rgb(244,21,52)"/><text x="91.2312%" y="271.50"></text></g><g><title>rho_runtime::interpreter::AsynWaitGroup::release (6 samples, 0.01%)</title><rect x="91.0000%" y="325" width="0.0140%" height="15" fill="rgb(247,122,20)"/><text x="91.2500%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicI32::fetch_sub (5 samples, 0.01%)</title><rect x="91.0023%" y="309" width="0.0117%" height="15" fill="rgb(218,27,9)"/><text x="91.2523%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_sub (5 samples, 0.01%)</title><rect x="91.0023%" y="293" width="0.0117%" height="15" fill="rgb(246,7,6)"/><text x="91.2523%" y="303.50"></text></g><g><title>[libc-2.31.so] (14 samples, 0.03%)</title><rect x="91.0140%" y="293" width="0.0328%" height="15" fill="rgb(227,135,54)"/><text x="91.2640%" y="303.50"></text></g><g><title>imalloc_body (5 samples, 0.01%)</title><rect x="91.0561%" y="197" width="0.0117%" height="15" fill="rgb(247,14,11)"/><text x="91.3061%" y="207.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (104 samples, 0.24%)</title><rect x="90.8291%" y="357" width="0.2434%" height="15" fill="rgb(206,149,34)"/><text x="91.0791%" y="367.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation::{{closure}} (102 samples, 0.24%)</title><rect x="90.8338%" y="341" width="0.2388%" height="15" fill="rgb(227,228,4)"/><text x="91.0838%" y="351.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate (25 samples, 0.06%)</title><rect x="91.0140%" y="325" width="0.0585%" height="15" fill="rgb(238,218,28)"/><text x="91.2640%" y="335.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (25 samples, 0.06%)</title><rect x="91.0140%" y="309" width="0.0585%" height="15" fill="rgb(252,86,40)"/><text x="91.2640%" y="319.50"></text></g><g><title>alloc::alloc::exchange_malloc (11 samples, 0.03%)</title><rect x="91.0468%" y="293" width="0.0257%" height="15" fill="rgb(251,225,11)"/><text x="91.2968%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.03%)</title><rect x="91.0468%" y="277" width="0.0257%" height="15" fill="rgb(206,46,49)"/><text x="91.2968%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.03%)</title><rect x="91.0468%" y="261" width="0.0257%" height="15" fill="rgb(245,128,24)"/><text x="91.2968%" y="271.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.03%)</title><rect x="91.0468%" y="245" width="0.0257%" height="15" fill="rgb(219,177,34)"/><text x="91.2968%" y="255.50"></text></g><g><title>_rjem_mallocx (9 samples, 0.02%)</title><rect x="91.0514%" y="229" width="0.0211%" height="15" fill="rgb(218,60,48)"/><text x="91.3014%" y="239.50"></text></g><g><title>imalloc (8 samples, 0.02%)</title><rect x="91.0538%" y="213" width="0.0187%" height="15" fill="rgb(221,11,5)"/><text x="91.3038%" y="223.50"></text></g><g><title>std::panic::catch_unwind (155 samples, 0.36%)</title><rect x="90.8104%" y="453" width="0.3628%" height="15" fill="rgb(220,148,13)"/><text x="91.0604%" y="463.50"></text></g><g><title>std::panicking::try (155 samples, 0.36%)</title><rect x="90.8104%" y="437" width="0.3628%" height="15" fill="rgb(210,16,3)"/><text x="91.0604%" y="447.50"></text></g><g><title>std::panicking::try::do_call (155 samples, 0.36%)</title><rect x="90.8104%" y="421" width="0.3628%" height="15" fill="rgb(236,80,2)"/><text x="91.0604%" y="431.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (155 samples, 0.36%)</title><rect x="90.8104%" y="405" width="0.3628%" height="15" fill="rgb(239,129,19)"/><text x="91.0604%" y="415.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (155 samples, 0.36%)</title><rect x="90.8104%" y="389" width="0.3628%" height="15" fill="rgb(220,106,35)"/><text x="91.0604%" y="399.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (155 samples, 0.36%)</title><rect x="90.8104%" y="373" width="0.3628%" height="15" fill="rgb(252,139,45)"/><text x="91.0604%" y="383.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::drop_future_or_output (40 samples, 0.09%)</title><rect x="91.0795%" y="357" width="0.0936%" height="15" fill="rgb(229,8,36)"/><text x="91.3295%" y="367.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::set_stage (40 samples, 0.09%)</title><rect x="91.0795%" y="341" width="0.0936%" height="15" fill="rgb(230,126,33)"/><text x="91.3295%" y="351.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (40 samples, 0.09%)</title><rect x="91.0795%" y="325" width="0.0936%" height="15" fill="rgb(239,140,21)"/><text x="91.3295%" y="335.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::set_stage::{{closure}} (40 samples, 0.09%)</title><rect x="91.0795%" y="309" width="0.0936%" height="15" fill="rgb(254,104,9)"/><text x="91.3295%" y="319.50"></text></g><g><title>[libc-2.31.so] (39 samples, 0.09%)</title><rect x="91.0819%" y="293" width="0.0913%" height="15" fill="rgb(239,52,14)"/><text x="91.3319%" y="303.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (12 samples, 0.03%)</title><rect x="91.1732%" y="421" width="0.0281%" height="15" fill="rgb(208,227,44)"/><text x="91.4232%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (12 samples, 0.03%)</title><rect x="91.1732%" y="405" width="0.0281%" height="15" fill="rgb(246,18,19)"/><text x="91.4232%" y="415.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (445 samples, 1.04%)</title><rect x="90.1620%" y="501" width="1.0416%" height="15" fill="rgb(235,228,25)"/><text x="90.4120%" y="511.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (346 samples, 0.81%)</title><rect x="90.3937%" y="485" width="0.8099%" height="15" fill="rgb(240,156,20)"/><text x="90.6437%" y="495.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (264 samples, 0.62%)</title><rect x="90.5856%" y="469" width="0.6179%" height="15" fill="rgb(224,8,20)"/><text x="90.8356%" y="479.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (13 samples, 0.03%)</title><rect x="91.1732%" y="453" width="0.0304%" height="15" fill="rgb(214,12,52)"/><text x="91.4232%" y="463.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update (13 samples, 0.03%)</title><rect x="91.1732%" y="437" width="0.0304%" height="15" fill="rgb(211,220,47)"/><text x="91.4232%" y="447.50"></text></g><g><title>tokio::coop::budget (492 samples, 1.15%)</title><rect x="90.0590%" y="629" width="1.1516%" height="15" fill="rgb(250,173,5)"/><text x="90.3090%" y="639.50"></text></g><g><title>tokio::coop::with_budget (492 samples, 1.15%)</title><rect x="90.0590%" y="613" width="1.1516%" height="15" fill="rgb(250,125,52)"/><text x="90.3090%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (490 samples, 1.15%)</title><rect x="90.0637%" y="597" width="1.1470%" height="15" fill="rgb(209,133,18)"/><text x="90.3137%" y="607.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (483 samples, 1.13%)</title><rect x="90.0801%" y="581" width="1.1306%" height="15" fill="rgb(216,173,22)"/><text x="90.3301%" y="591.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (483 samples, 1.13%)</title><rect x="90.0801%" y="565" width="1.1306%" height="15" fill="rgb(205,3,22)"/><text x="90.3301%" y="575.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (481 samples, 1.13%)</title><rect x="90.0847%" y="549" width="1.1259%" height="15" fill="rgb(248,22,20)"/><text x="90.3347%" y="559.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (451 samples, 1.06%)</title><rect x="90.1550%" y="533" width="1.0557%" height="15" fill="rgb(233,6,29)"/><text x="90.4050%" y="543.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (451 samples, 1.06%)</title><rect x="90.1550%" y="517" width="1.0557%" height="15" fill="rgb(240,22,54)"/><text x="90.4050%" y="527.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::transition_worker_from_searching (8 samples, 0.02%)</title><rect x="91.2130%" y="597" width="0.0187%" height="15" fill="rgb(231,133,32)"/><text x="91.4630%" y="607.50"></text></g><g><title>tokio::runtime::thread_pool::idle::State::dec_num_searching (8 samples, 0.02%)</title><rect x="91.2130%" y="581" width="0.0187%" height="15" fill="rgb(248,193,4)"/><text x="91.4630%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (7 samples, 0.02%)</title><rect x="91.2153%" y="565" width="0.0164%" height="15" fill="rgb(211,178,46)"/><text x="91.4653%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_sub (7 samples, 0.02%)</title><rect x="91.2153%" y="549" width="0.0164%" height="15" fill="rgb(224,5,42)"/><text x="91.4653%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (44 samples, 0.10%)</title><rect x="91.2434%" y="549" width="0.1030%" height="15" fill="rgb(239,176,25)"/><text x="91.4934%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_swap (44 samples, 0.10%)</title><rect x="91.2434%" y="533" width="0.1030%" height="15" fill="rgb(245,187,50)"/><text x="91.4934%" y="543.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (57 samples, 0.13%)</title><rect x="91.2317%" y="581" width="0.1334%" height="15" fill="rgb(248,24,15)"/><text x="91.4817%" y="591.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (57 samples, 0.13%)</title><rect x="91.2317%" y="565" width="0.1334%" height="15" fill="rgb(205,166,13)"/><text x="91.4817%" y="575.50"></text></g><g><title>tokio::runtime::park::Inner::unpark_condvar (8 samples, 0.02%)</title><rect x="91.3464%" y="549" width="0.0187%" height="15" fill="rgb(208,114,23)"/><text x="91.5964%" y="559.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (5 samples, 0.01%)</title><rect x="91.3534%" y="533" width="0.0117%" height="15" fill="rgb(239,127,18)"/><text x="91.6034%" y="543.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (5 samples, 0.01%)</title><rect x="91.3534%" y="517" width="0.0117%" height="15" fill="rgb(219,154,28)"/><text x="91.6034%" y="527.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (5 samples, 0.01%)</title><rect x="91.3534%" y="501" width="0.0117%" height="15" fill="rgb(225,157,23)"/><text x="91.6034%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (5 samples, 0.01%)</title><rect x="91.3534%" y="485" width="0.0117%" height="15" fill="rgb(219,8,6)"/><text x="91.6034%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (5 samples, 0.01%)</title><rect x="91.3534%" y="469" width="0.0117%" height="15" fill="rgb(212,47,6)"/><text x="91.6034%" y="479.50"></text></g><g><title>std::time::Instant::now (7 samples, 0.02%)</title><rect x="91.4026%" y="533" width="0.0164%" height="15" fill="rgb(224,190,4)"/><text x="91.6526%" y="543.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (7 samples, 0.02%)</title><rect x="91.4026%" y="517" width="0.0164%" height="15" fill="rgb(239,183,29)"/><text x="91.6526%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::now (7 samples, 0.02%)</title><rect x="91.4026%" y="501" width="0.0164%" height="15" fill="rgb(213,57,7)"/><text x="91.6526%" y="511.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (7 samples, 0.02%)</title><rect x="91.4026%" y="485" width="0.0164%" height="15" fill="rgb(216,148,1)"/><text x="91.6526%" y="495.50"></text></g><g><title>parking_lot_core::parking_lot::park (7 samples, 0.02%)</title><rect x="91.4026%" y="469" width="0.0164%" height="15" fill="rgb(236,182,29)"/><text x="91.6526%" y="479.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (7 samples, 0.02%)</title><rect x="91.4026%" y="453" width="0.0164%" height="15" fill="rgb(244,120,48)"/><text x="91.6526%" y="463.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (7 samples, 0.02%)</title><rect x="91.4026%" y="437" width="0.0164%" height="15" fill="rgb(206,71,34)"/><text x="91.6526%" y="447.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (7 samples, 0.02%)</title><rect x="91.4026%" y="421" width="0.0164%" height="15" fill="rgb(242,32,6)"/><text x="91.6526%" y="431.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (7 samples, 0.02%)</title><rect x="91.4026%" y="405" width="0.0164%" height="15" fill="rgb(241,35,3)"/><text x="91.6526%" y="415.50"></text></g><g><title>syscall (7 samples, 0.02%)</title><rect x="91.4026%" y="389" width="0.0164%" height="15" fill="rgb(222,62,19)"/><text x="91.6526%" y="399.50"></text></g><g><title>[unknown] (7 samples, 0.02%)</title><rect x="91.4026%" y="373" width="0.0164%" height="15" fill="rgb(223,110,41)"/><text x="91.6526%" y="383.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (2,983 samples, 6.98%)</title><rect x="91.3838%" y="549" width="6.9824%" height="15" fill="rgb(208,224,4)"/><text x="91.6338%" y="559.50">&lt;parking_..</text></g><g><title>syscall (2,968 samples, 6.95%)</title><rect x="91.4189%" y="533" width="6.9472%" height="15" fill="rgb(241,137,19)"/><text x="91.6689%" y="543.50">syscall</text></g><g><title>[unknown] (2,948 samples, 6.90%)</title><rect x="91.4658%" y="517" width="6.9004%" height="15" fill="rgb(244,24,17)"/><text x="91.7158%" y="527.50">[unknown]</text></g><g><title>[unknown] (2,924 samples, 6.84%)</title><rect x="91.5219%" y="501" width="6.8442%" height="15" fill="rgb(245,178,49)"/><text x="91.7719%" y="511.50">[unknown]</text></g><g><title>[unknown] (2,913 samples, 6.82%)</title><rect x="91.5477%" y="485" width="6.8185%" height="15" fill="rgb(219,160,38)"/><text x="91.7977%" y="495.50">[unknown]</text></g><g><title>[unknown] (2,899 samples, 6.79%)</title><rect x="91.5805%" y="469" width="6.7857%" height="15" fill="rgb(228,137,14)"/><text x="91.8305%" y="479.50">[unknown]</text></g><g><title>[unknown] (2,888 samples, 6.76%)</title><rect x="91.6062%" y="453" width="6.7600%" height="15" fill="rgb(237,134,11)"/><text x="91.8562%" y="463.50">[unknown]</text></g><g><title>[unknown] (2,449 samples, 5.73%)</title><rect x="92.6338%" y="437" width="5.7324%" height="15" fill="rgb(211,126,44)"/><text x="92.8838%" y="447.50">[unknow..</text></g><g><title>[unknown] (2,308 samples, 5.40%)</title><rect x="92.9638%" y="421" width="5.4024%" height="15" fill="rgb(226,171,33)"/><text x="93.2138%" y="431.50">[unknow..</text></g><g><title>[unknown] (2,051 samples, 4.80%)</title><rect x="93.5654%" y="405" width="4.8008%" height="15" fill="rgb(253,99,13)"/><text x="93.8154%" y="415.50">[unkno..</text></g><g><title>[unknown] (1,392 samples, 3.26%)</title><rect x="95.1079%" y="389" width="3.2583%" height="15" fill="rgb(244,48,7)"/><text x="95.3579%" y="399.50">[un..</text></g><g><title>[unknown] (1,054 samples, 2.47%)</title><rect x="95.8991%" y="373" width="2.4671%" height="15" fill="rgb(244,217,54)"/><text x="96.1491%" y="383.50">[u..</text></g><g><title>[unknown] (463 samples, 1.08%)</title><rect x="97.2824%" y="357" width="1.0838%" height="15" fill="rgb(224,15,18)"/><text x="97.5324%" y="367.50"></text></g><g><title>[unknown] (153 samples, 0.36%)</title><rect x="98.0081%" y="341" width="0.3581%" height="15" fill="rgb(244,99,12)"/><text x="98.2581%" y="351.50"></text></g><g><title>[unknown] (19 samples, 0.04%)</title><rect x="98.3217%" y="325" width="0.0445%" height="15" fill="rgb(233,226,8)"/><text x="98.5717%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (137 samples, 0.32%)</title><rect x="98.3709%" y="549" width="0.3207%" height="15" fill="rgb(229,211,3)"/><text x="98.6209%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_load (137 samples, 0.32%)</title><rect x="98.3709%" y="533" width="0.3207%" height="15" fill="rgb(216,140,21)"/><text x="98.6209%" y="543.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (22 samples, 0.05%)</title><rect x="98.6915%" y="549" width="0.0515%" height="15" fill="rgb(234,122,30)"/><text x="98.9415%" y="559.50"></text></g><g><title>std::time::Instant::now (21 samples, 0.05%)</title><rect x="98.6939%" y="533" width="0.0492%" height="15" fill="rgb(236,25,46)"/><text x="98.9439%" y="543.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (21 samples, 0.05%)</title><rect x="98.6939%" y="517" width="0.0492%" height="15" fill="rgb(217,52,54)"/><text x="98.9439%" y="527.50"></text></g><g><title>std::sys::unix::time::inner::now (21 samples, 0.05%)</title><rect x="98.6939%" y="501" width="0.0492%" height="15" fill="rgb(222,29,26)"/><text x="98.9439%" y="511.50"></text></g><g><title>__clock_gettime (19 samples, 0.04%)</title><rect x="98.6986%" y="485" width="0.0445%" height="15" fill="rgb(216,177,29)"/><text x="98.9486%" y="495.50"></text></g><g><title>__vdso_clock_gettime (19 samples, 0.04%)</title><rect x="98.6986%" y="469" width="0.0445%" height="15" fill="rgb(247,136,51)"/><text x="98.9486%" y="479.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (35 samples, 0.08%)</title><rect x="98.7430%" y="549" width="0.0819%" height="15" fill="rgb(231,47,47)"/><text x="98.9930%" y="559.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (31 samples, 0.07%)</title><rect x="98.7524%" y="533" width="0.0726%" height="15" fill="rgb(211,192,36)"/><text x="99.0024%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (31 samples, 0.07%)</title><rect x="98.7524%" y="517" width="0.0726%" height="15" fill="rgb(229,156,32)"/><text x="99.0024%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (31 samples, 0.07%)</title><rect x="98.7524%" y="501" width="0.0726%" height="15" fill="rgb(248,213,20)"/><text x="99.0024%" y="511.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (3,259 samples, 7.63%)</title><rect x="91.3651%" y="581" width="7.6284%" height="15" fill="rgb(217,64,7)"/><text x="91.6151%" y="591.50">parking_lo..</text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (3,255 samples, 7.62%)</title><rect x="91.3745%" y="565" width="7.6190%" height="15" fill="rgb(232,142,8)"/><text x="91.6245%" y="575.50">parking_lo..</text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (72 samples, 0.17%)</title><rect x="98.8250%" y="549" width="0.1685%" height="15" fill="rgb(224,92,44)"/><text x="99.0750%" y="559.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (72 samples, 0.17%)</title><rect x="98.8250%" y="533" width="0.1685%" height="15" fill="rgb(214,169,17)"/><text x="99.0750%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (71 samples, 0.17%)</title><rect x="98.8273%" y="517" width="0.1662%" height="15" fill="rgb(210,59,37)"/><text x="99.0773%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_sub (71 samples, 0.17%)</title><rect x="98.8273%" y="501" width="0.1662%" height="15" fill="rgb(214,116,48)"/><text x="99.0773%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;usize&gt;&gt;&gt; (28 samples, 0.07%)</title><rect x="98.9958%" y="565" width="0.0655%" height="15" fill="rgb(244,191,6)"/><text x="99.2458%" y="575.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.07%)</title><rect x="98.9958%" y="549" width="0.0655%" height="15" fill="rgb(241,50,52)"/><text x="99.2458%" y="559.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (28 samples, 0.07%)</title><rect x="98.9958%" y="533" width="0.0655%" height="15" fill="rgb(236,75,39)"/><text x="99.2458%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (28 samples, 0.07%)</title><rect x="98.9958%" y="517" width="0.0655%" height="15" fill="rgb(236,99,0)"/><text x="99.2458%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (28 samples, 0.07%)</title><rect x="98.9958%" y="501" width="0.0655%" height="15" fill="rgb(207,202,15)"/><text x="99.2458%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (32 samples, 0.07%)</title><rect x="99.0731%" y="549" width="0.0749%" height="15" fill="rgb(233,207,14)"/><text x="99.3231%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_add (32 samples, 0.07%)</title><rect x="99.0731%" y="533" width="0.0749%" height="15" fill="rgb(226,27,51)"/><text x="99.3231%" y="543.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::notify_should_wakeup (35 samples, 0.08%)</title><rect x="99.0707%" y="565" width="0.0819%" height="15" fill="rgb(206,104,42)"/><text x="99.3207%" y="575.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (3,894 samples, 9.11%)</title><rect x="90.0496%" y="645" width="9.1147%" height="15" fill="rgb(212,225,4)"/><text x="90.2996%" y="655.50">tokio::runtim..</text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_from_searching (3,398 samples, 7.95%)</title><rect x="91.2106%" y="629" width="7.9537%" height="15" fill="rgb(233,96,42)"/><text x="91.4606%" y="639.50">tokio::runt..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::transition_worker_from_searching (3,397 samples, 7.95%)</title><rect x="91.2130%" y="613" width="7.9514%" height="15" fill="rgb(229,21,32)"/><text x="91.4630%" y="623.50">tokio::runt..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (3,389 samples, 7.93%)</title><rect x="91.2317%" y="597" width="7.9327%" height="15" fill="rgb(226,216,24)"/><text x="91.4817%" y="607.50">tokio::runt..</text></g><g><title>tokio::runtime::thread_pool::idle::Idle::worker_to_notify (73 samples, 0.17%)</title><rect x="98.9935%" y="581" width="0.1709%" height="15" fill="rgb(221,163,17)"/><text x="99.2435%" y="591.50"></text></g><g><title>tokio::runtime::thread_pool::idle::State::unpark_one (5 samples, 0.01%)</title><rect x="99.1527%" y="565" width="0.0117%" height="15" fill="rgb(216,216,42)"/><text x="99.4027%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (5 samples, 0.01%)</title><rect x="99.1527%" y="549" width="0.0117%" height="15" fill="rgb(240,118,7)"/><text x="99.4027%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_add (5 samples, 0.01%)</title><rect x="99.1527%" y="533" width="0.0117%" height="15" fill="rgb(221,67,37)"/><text x="99.4027%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::queue::Pointers&gt;&gt; (24 samples, 0.06%)</title><rect x="99.2229%" y="581" width="0.0562%" height="15" fill="rgb(241,32,44)"/><text x="99.4729%" y="591.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.06%)</title><rect x="99.2229%" y="565" width="0.0562%" height="15" fill="rgb(235,204,43)"/><text x="99.4729%" y="575.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (24 samples, 0.06%)</title><rect x="99.2229%" y="549" width="0.0562%" height="15" fill="rgb(213,116,10)"/><text x="99.4729%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (24 samples, 0.06%)</title><rect x="99.2229%" y="533" width="0.0562%" height="15" fill="rgb(239,15,48)"/><text x="99.4729%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (24 samples, 0.06%)</title><rect x="99.2229%" y="517" width="0.0562%" height="15" fill="rgb(207,123,36)"/><text x="99.4729%" y="527.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (8 samples, 0.02%)</title><rect x="99.2814%" y="581" width="0.0187%" height="15" fill="rgb(209,103,30)"/><text x="99.5314%" y="591.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (8 samples, 0.02%)</title><rect x="99.2814%" y="565" width="0.0187%" height="15" fill="rgb(238,100,19)"/><text x="99.5314%" y="575.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (8 samples, 0.02%)</title><rect x="99.2814%" y="549" width="0.0187%" height="15" fill="rgb(244,30,14)"/><text x="99.5314%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (7 samples, 0.02%)</title><rect x="99.2837%" y="533" width="0.0164%" height="15" fill="rgb(249,174,6)"/><text x="99.5337%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (7 samples, 0.02%)</title><rect x="99.2837%" y="517" width="0.0164%" height="15" fill="rgb(235,213,41)"/><text x="99.5337%" y="527.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::is_empty (65 samples, 0.15%)</title><rect x="99.3001%" y="581" width="0.1521%" height="15" fill="rgb(213,118,6)"/><text x="99.5501%" y="591.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::len (64 samples, 0.15%)</title><rect x="99.3025%" y="565" width="0.1498%" height="15" fill="rgb(235,44,51)"/><text x="99.5525%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (64 samples, 0.15%)</title><rect x="99.3025%" y="549" width="0.1498%" height="15" fill="rgb(217,9,53)"/><text x="99.5525%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_load (64 samples, 0.15%)</title><rect x="99.3025%" y="533" width="0.1498%" height="15" fill="rgb(237,172,34)"/><text x="99.5525%" y="543.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::pop (101 samples, 0.24%)</title><rect x="99.2182%" y="597" width="0.2364%" height="15" fill="rgb(206,206,11)"/><text x="99.4682%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (104 samples, 0.24%)</title><rect x="99.2135%" y="629" width="0.2434%" height="15" fill="rgb(214,149,29)"/><text x="99.4635%" y="639.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_task::{{closure}} (103 samples, 0.24%)</title><rect x="99.2159%" y="613" width="0.2411%" height="15" fill="rgb(208,123,3)"/><text x="99.4659%" y="623.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_task (143 samples, 0.33%)</title><rect x="99.1644%" y="645" width="0.3347%" height="15" fill="rgb(229,126,4)"/><text x="99.4144%" y="655.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_local_task (16 samples, 0.04%)</title><rect x="99.4616%" y="629" width="0.0375%" height="15" fill="rgb(222,92,36)"/><text x="99.7116%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (16 samples, 0.04%)</title><rect x="99.4616%" y="613" width="0.0375%" height="15" fill="rgb(216,39,41)"/><text x="99.7116%" y="623.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_local_task::{{closure}} (13 samples, 0.03%)</title><rect x="99.4687%" y="597" width="0.0304%" height="15" fill="rgb(253,127,28)"/><text x="99.7187%" y="607.50"></text></g><g><title>tokio::runtime::queue::Local&lt;T&gt;::pop (13 samples, 0.03%)</title><rect x="99.4687%" y="581" width="0.0304%" height="15" fill="rgb(249,152,51)"/><text x="99.7187%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (10 samples, 0.02%)</title><rect x="99.4757%" y="565" width="0.0234%" height="15" fill="rgb(209,123,42)"/><text x="99.7257%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_load (10 samples, 0.02%)</title><rect x="99.4757%" y="549" width="0.0234%" height="15" fill="rgb(241,118,22)"/><text x="99.7257%" y="559.50"></text></g><g><title>core::num::&lt;impl u16&gt;::wrapping_sub (6 samples, 0.01%)</title><rect x="99.6231%" y="613" width="0.0140%" height="15" fill="rgb(208,25,7)"/><text x="99.8731%" y="623.50"></text></g><g><title>tokio::loom::std::atomic_u16::AtomicU16::unsync_load (5 samples, 0.01%)</title><rect x="99.6372%" y="613" width="0.0117%" height="15" fill="rgb(243,144,39)"/><text x="99.8872%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (32 samples, 0.07%)</title><rect x="99.7051%" y="597" width="0.0749%" height="15" fill="rgb(250,50,5)"/><text x="99.9551%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (32 samples, 0.07%)</title><rect x="99.7051%" y="581" width="0.0749%" height="15" fill="rgb(207,67,11)"/><text x="99.9551%" y="591.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::steal_into (78 samples, 0.18%)</title><rect x="99.6114%" y="629" width="0.1826%" height="15" fill="rgb(245,204,40)"/><text x="99.8614%" y="639.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::steal_into2 (62 samples, 0.15%)</title><rect x="99.6489%" y="613" width="0.1451%" height="15" fill="rgb(238,228,24)"/><text x="99.8989%" y="623.50"></text></g><g><title>tokio::runtime::queue::unpack (6 samples, 0.01%)</title><rect x="99.7800%" y="597" width="0.0140%" height="15" fill="rgb(217,116,22)"/><text x="100.0300%" y="607.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_to_searching (45 samples, 0.11%)</title><rect x="99.7940%" y="629" width="0.1053%" height="15" fill="rgb(234,98,12)"/><text x="100.0440%" y="639.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::transition_worker_to_searching (45 samples, 0.11%)</title><rect x="99.7940%" y="613" width="0.1053%" height="15" fill="rgb(242,170,50)"/><text x="100.0440%" y="623.50"></text></g><g><title>tokio::runtime::thread_pool::idle::State::inc_num_searching (40 samples, 0.09%)</title><rect x="99.8057%" y="597" width="0.0936%" height="15" fill="rgb(235,7,5)"/><text x="100.0557%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (40 samples, 0.09%)</title><rect x="99.8057%" y="581" width="0.0936%" height="15" fill="rgb(241,114,28)"/><text x="100.0557%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_add (40 samples, 0.09%)</title><rect x="99.8057%" y="565" width="0.0936%" height="15" fill="rgb(246,112,42)"/><text x="100.0557%" y="575.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::steal_work (174 samples, 0.41%)</title><rect x="99.4991%" y="645" width="0.4073%" height="15" fill="rgb(248,228,14)"/><text x="99.7491%" y="655.50"></text></g><g><title>std::panic::catch_unwind (10,045 samples, 23.51%)</title><rect x="76.4009%" y="1077" width="23.5125%" height="15" fill="rgb(208,133,18)"/><text x="76.6509%" y="1087.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (10,045 samples, 23.51%)</title><rect x="76.4009%" y="1061" width="23.5125%" height="15" fill="rgb(207,35,49)"/><text x="76.6509%" y="1071.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (10,045 samples, 23.51%)</title><rect x="76.4009%" y="1045" width="23.5125%" height="15" fill="rgb(205,68,36)"/><text x="76.6509%" y="1055.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10,045 samples, 23.51%)</title><rect x="76.4009%" y="1029" width="23.5125%" height="15" fill="rgb(245,62,40)"/><text x="76.6509%" y="1039.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as c..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (10,045 samples, 23.51%)</title><rect x="76.4009%" y="1013" width="23.5125%" height="15" fill="rgb(228,27,24)"/><text x="76.6509%" y="1023.50">std::thread::Builder::spawn_unchecked..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (10,045 samples, 23.51%)</title><rect x="76.4009%" y="997" width="23.5125%" height="15" fill="rgb(253,19,12)"/><text x="76.6509%" y="1007.50">std::sys_common::backtrace::__rust_be..</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (10,045 samples, 23.51%)</title><rect x="76.4009%" y="981" width="23.5125%" height="15" fill="rgb(232,28,20)"/><text x="76.6509%" y="991.50">tokio::runtime::blocking::pool::Spawn..</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (10,045 samples, 23.51%)</title><rect x="76.4009%" y="965" width="23.5125%" height="15" fill="rgb(218,35,51)"/><text x="76.6509%" y="975.50">tokio::runtime::blocking::pool::Inner..</text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (10,035 samples, 23.49%)</title><rect x="76.4243%" y="949" width="23.4891%" height="15" fill="rgb(212,90,40)"/><text x="76.6743%" y="959.50">tokio::runtime::task::Notified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (10,035 samples, 23.49%)</title><rect x="76.4243%" y="933" width="23.4891%" height="15" fill="rgb(220,172,12)"/><text x="76.6743%" y="943.50">tokio::runtime::task::raw::RawTask::p..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (10,035 samples, 23.49%)</title><rect x="76.4243%" y="917" width="23.4891%" height="15" fill="rgb(226,159,20)"/><text x="76.6743%" y="927.50">tokio::runtime::task::harness::Harnes..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (10,035 samples, 23.49%)</title><rect x="76.4243%" y="901" width="23.4891%" height="15" fill="rgb(234,205,16)"/><text x="76.6743%" y="911.50">tokio::runtime::task::harness::Harnes..</text></g><g><title>tokio::runtime::task::harness::poll_future (10,035 samples, 23.49%)</title><rect x="76.4243%" y="885" width="23.4891%" height="15" fill="rgb(207,9,39)"/><text x="76.6743%" y="895.50">tokio::runtime::task::harness::poll_f..</text></g><g><title>std::panic::catch_unwind (10,035 samples, 23.49%)</title><rect x="76.4243%" y="869" width="23.4891%" height="15" fill="rgb(249,143,15)"/><text x="76.6743%" y="879.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (10,035 samples, 23.49%)</title><rect x="76.4243%" y="853" width="23.4891%" height="15" fill="rgb(253,133,29)"/><text x="76.6743%" y="863.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (10,035 samples, 23.49%)</title><rect x="76.4243%" y="837" width="23.4891%" height="15" fill="rgb(221,187,0)"/><text x="76.6743%" y="847.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10,035 samples, 23.49%)</title><rect x="76.4243%" y="821" width="23.4891%" height="15" fill="rgb(205,204,26)"/><text x="76.6743%" y="831.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as c..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (10,035 samples, 23.49%)</title><rect x="76.4243%" y="805" width="23.4891%" height="15" fill="rgb(224,68,54)"/><text x="76.6743%" y="815.50">tokio::runtime::task::harness::poll_f..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (10,035 samples, 23.49%)</title><rect x="76.4243%" y="789" width="23.4891%" height="15" fill="rgb(209,67,4)"/><text x="76.6743%" y="799.50">tokio::runtime::task::core::CoreStage..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (10,035 samples, 23.49%)</title><rect x="76.4243%" y="773" width="23.4891%" height="15" fill="rgb(228,229,18)"/><text x="76.6743%" y="783.50">tokio::loom::std::unsafe_cell::Unsafe..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (10,035 samples, 23.49%)</title><rect x="76.4243%" y="757" width="23.4891%" height="15" fill="rgb(231,89,13)"/><text x="76.6743%" y="767.50">tokio::runtime::task::core::CoreStage..</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (10,035 samples, 23.49%)</title><rect x="76.4243%" y="741" width="23.4891%" height="15" fill="rgb(210,182,18)"/><text x="76.6743%" y="751.50">&lt;tokio::runtime::blocking::task::Bloc..</text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (10,035 samples, 23.49%)</title><rect x="76.4243%" y="725" width="23.4891%" height="15" fill="rgb(240,105,2)"/><text x="76.6743%" y="735.50">tokio::runtime::thread_pool::worker::..</text></g><g><title>tokio::runtime::thread_pool::worker::run (10,035 samples, 23.49%)</title><rect x="76.4243%" y="709" width="23.4891%" height="15" fill="rgb(207,170,50)"/><text x="76.6743%" y="719.50">tokio::runtime::thread_pool::worker::..</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (10,030 samples, 23.48%)</title><rect x="76.4360%" y="693" width="23.4774%" height="15" fill="rgb(232,133,24)"/><text x="76.6860%" y="703.50">tokio::macros::scoped_tls::ScopedKey&lt;..</text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (10,030 samples, 23.48%)</title><rect x="76.4360%" y="677" width="23.4774%" height="15" fill="rgb(235,166,27)"/><text x="76.6860%" y="687.50">tokio::runtime::thread_pool::worker::..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (10,030 samples, 23.48%)</title><rect x="76.4360%" y="661" width="23.4774%" height="15" fill="rgb(209,19,13)"/><text x="76.6860%" y="671.50">tokio::runtime::thread_pool::worker::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (10,046 samples, 23.51%)</title><rect x="76.4009%" y="1141" width="23.5148%" height="15" fill="rgb(226,79,39)"/><text x="76.6509%" y="1151.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (10,046 samples, 23.51%)</title><rect x="76.4009%" y="1125" width="23.5148%" height="15" fill="rgb(222,163,10)"/><text x="76.6509%" y="1135.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (10,046 samples, 23.51%)</title><rect x="76.4009%" y="1109" width="23.5148%" height="15" fill="rgb(214,44,19)"/><text x="76.6509%" y="1119.50">core::ops::function::FnOnce::call_onc..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (10,046 samples, 23.51%)</title><rect x="76.4009%" y="1093" width="23.5148%" height="15" fill="rgb(210,217,13)"/><text x="76.6509%" y="1103.50">std::thread::Builder::spawn_unchecked..</text></g><g><title>clone (10,047 samples, 23.52%)</title><rect x="76.4009%" y="1189" width="23.5172%" height="15" fill="rgb(237,61,54)"/><text x="76.6509%" y="1199.50">clone</text></g><g><title>start_thread (10,047 samples, 23.52%)</title><rect x="76.4009%" y="1173" width="23.5172%" height="15" fill="rgb(226,184,24)"/><text x="76.6509%" y="1183.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (10,047 samples, 23.52%)</title><rect x="76.4009%" y="1157" width="23.5172%" height="15" fill="rgb(223,226,4)"/><text x="76.6509%" y="1167.50">std::sys::unix::thread::Thread::new::..</text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (6 samples, 0.01%)</title><rect x="99.9228%" y="1189" width="0.0140%" height="15" fill="rgb(210,26,41)"/><text x="100.1728%" y="1199.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (15 samples, 0.04%)</title><rect x="99.9579%" y="1189" width="0.0351%" height="15" fill="rgb(220,221,6)"/><text x="100.2079%" y="1199.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::steal_work (10 samples, 0.02%)</title><rect x="99.9696%" y="1173" width="0.0234%" height="15" fill="rgb(225,89,49)"/><text x="100.2196%" y="1183.50"></text></g><g><title>all (42,722 samples, 100%)</title><rect x="0.0000%" y="1221" width="100.0000%" height="15" fill="rgb(218,70,45)"/><text x="0.2500%" y="1231.50"></text></g><g><title>tokio-runtime-w (25,881 samples, 60.58%)</title><rect x="39.4200%" y="1205" width="60.5800%" height="15" fill="rgb(238,166,21)"/><text x="39.6700%" y="1215.50">tokio-runtime-w</text></g></svg></svg>