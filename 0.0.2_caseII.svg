<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1366" onload="init(evt)" viewBox="0 0 1200 1366" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1366" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1349.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1349.00"> </text><svg id="frames" x="10" width="1180"><g><title>perf (5 samples, 0.05%)</title><rect x="0.0000%" y="1301" width="0.0536%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="1311.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="0.0000%" y="1285" width="0.0536%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="1295.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="0.0000%" y="1269" width="0.0536%" height="15" fill="rgb(221,193,54)"/><text x="0.2500%" y="1279.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="0.0000%" y="1253" width="0.0536%" height="15" fill="rgb(248,212,6)"/><text x="0.2500%" y="1263.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="0.0000%" y="1237" width="0.0536%" height="15" fill="rgb(208,68,35)"/><text x="0.2500%" y="1247.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="0.0000%" y="1221" width="0.0536%" height="15" fill="rgb(232,128,0)"/><text x="0.2500%" y="1231.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="0.0000%" y="1205" width="0.0536%" height="15" fill="rgb(207,160,47)"/><text x="0.2500%" y="1215.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="0.0000%" y="1189" width="0.0536%" height="15" fill="rgb(228,23,34)"/><text x="0.2500%" y="1199.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="0.0000%" y="1173" width="0.0536%" height="15" fill="rgb(218,30,26)"/><text x="0.2500%" y="1183.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="0.0000%" y="1157" width="0.0536%" height="15" fill="rgb(220,122,19)"/><text x="0.2500%" y="1167.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="0.0000%" y="1141" width="0.0536%" height="15" fill="rgb(250,228,42)"/><text x="0.2500%" y="1151.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="0.0000%" y="1125" width="0.0536%" height="15" fill="rgb(240,193,28)"/><text x="0.2500%" y="1135.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="0.0000%" y="1109" width="0.0536%" height="15" fill="rgb(216,20,37)"/><text x="0.2500%" y="1119.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="0.0000%" y="1093" width="0.0536%" height="15" fill="rgb(206,188,39)"/><text x="0.2500%" y="1103.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (1 samples, 0.01%)</title><rect x="0.0536%" y="1269" width="0.0107%" height="15" fill="rgb(217,207,13)"/><text x="0.3036%" y="1279.50"></text></g><g><title>&lt;tokio::sync::notify::Notified as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="0.0643%" y="1269" width="0.0214%" height="15" fill="rgb(231,73,38)"/><text x="0.3143%" y="1279.50"></text></g><g><title>&lt;tokio::sync::notify::Notified as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="0.0858%" y="1269" width="0.0107%" height="15" fill="rgb(225,20,46)"/><text x="0.3358%" y="1279.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (1 samples, 0.01%)</title><rect x="0.0965%" y="1269" width="0.0107%" height="15" fill="rgb(210,31,41)"/><text x="0.3465%" y="1279.50"></text></g><g><title>constant_time_eq::constant_time_ne_32 (1 samples, 0.01%)</title><rect x="0.1072%" y="1269" width="0.0107%" height="15" fill="rgb(221,200,47)"/><text x="0.3572%" y="1279.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::pop (1 samples, 0.01%)</title><rect x="0.1179%" y="1269" width="0.0107%" height="15" fill="rgb(226,26,5)"/><text x="0.3679%" y="1279.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::handle_produce (1 samples, 0.01%)</title><rect x="0.1287%" y="1269" width="0.0107%" height="15" fill="rgb(249,33,26)"/><text x="0.3787%" y="1279.50"></text></g><g><title>core::future::from_generator (1 samples, 0.01%)</title><rect x="0.1287%" y="1253" width="0.0107%" height="15" fill="rgb(235,183,28)"/><text x="0.3787%" y="1263.50"></text></g><g><title>syscall (1 samples, 0.01%)</title><rect x="0.1394%" y="1269" width="0.0107%" height="15" fill="rgb(221,5,38)"/><text x="0.3894%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.1394%" y="1253" width="0.0107%" height="15" fill="rgb(247,18,42)"/><text x="0.3894%" y="1263.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="0.1501%" y="1269" width="0.0214%" height="15" fill="rgb(241,131,45)"/><text x="0.4001%" y="1279.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (1 samples, 0.01%)</title><rect x="0.1608%" y="1253" width="0.0107%" height="15" fill="rgb(249,31,29)"/><text x="0.4108%" y="1263.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (1 samples, 0.01%)</title><rect x="0.1608%" y="1237" width="0.0107%" height="15" fill="rgb(225,111,53)"/><text x="0.4108%" y="1247.50"></text></g><g><title>tokio::park::thread::Inner::park (2 samples, 0.02%)</title><rect x="0.1715%" y="1269" width="0.0214%" height="15" fill="rgb(238,160,17)"/><text x="0.4215%" y="1279.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (2 samples, 0.02%)</title><rect x="0.1715%" y="1253" width="0.0214%" height="15" fill="rgb(214,148,48)"/><text x="0.4215%" y="1263.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (2 samples, 0.02%)</title><rect x="0.1715%" y="1237" width="0.0214%" height="15" fill="rgb(232,36,49)"/><text x="0.4215%" y="1247.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (2 samples, 0.02%)</title><rect x="0.1715%" y="1221" width="0.0214%" height="15" fill="rgb(209,103,24)"/><text x="0.4215%" y="1231.50"></text></g><g><title>parking_lot_core::parking_lot::park (2 samples, 0.02%)</title><rect x="0.1715%" y="1205" width="0.0214%" height="15" fill="rgb(229,88,8)"/><text x="0.4215%" y="1215.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (2 samples, 0.02%)</title><rect x="0.1715%" y="1189" width="0.0214%" height="15" fill="rgb(213,181,19)"/><text x="0.4215%" y="1199.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (2 samples, 0.02%)</title><rect x="0.1715%" y="1173" width="0.0214%" height="15" fill="rgb(254,191,54)"/><text x="0.4215%" y="1183.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (2 samples, 0.02%)</title><rect x="0.1715%" y="1157" width="0.0214%" height="15" fill="rgb(241,83,37)"/><text x="0.4215%" y="1167.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (2 samples, 0.02%)</title><rect x="0.1715%" y="1141" width="0.0214%" height="15" fill="rgb(233,36,39)"/><text x="0.4215%" y="1151.50"></text></g><g><title>syscall (2 samples, 0.02%)</title><rect x="0.1715%" y="1125" width="0.0214%" height="15" fill="rgb(226,3,54)"/><text x="0.4215%" y="1135.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="0.1715%" y="1109" width="0.0214%" height="15" fill="rgb(245,192,40)"/><text x="0.4215%" y="1119.50"></text></g><g><title>tokio::runtime::enter::Enter::block_on (3 samples, 0.03%)</title><rect x="0.1930%" y="1269" width="0.0322%" height="15" fill="rgb(238,167,29)"/><text x="0.4430%" y="1279.50"></text></g><g><title>tokio::park::thread::CachedParkThread::block_on (3 samples, 0.03%)</title><rect x="0.1930%" y="1253" width="0.0322%" height="15" fill="rgb(232,182,51)"/><text x="0.4430%" y="1263.50"></text></g><g><title>tokio::coop::budget (3 samples, 0.03%)</title><rect x="0.1930%" y="1237" width="0.0322%" height="15" fill="rgb(231,60,39)"/><text x="0.4430%" y="1247.50"></text></g><g><title>tokio::coop::with_budget (2 samples, 0.02%)</title><rect x="0.2037%" y="1221" width="0.0214%" height="15" fill="rgb(208,69,12)"/><text x="0.4537%" y="1231.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="0.2037%" y="1205" width="0.0214%" height="15" fill="rgb(235,93,37)"/><text x="0.4537%" y="1215.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="0.2037%" y="1189" width="0.0214%" height="15" fill="rgb(213,116,39)"/><text x="0.4537%" y="1199.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (5 samples, 0.05%)</title><rect x="0.2252%" y="1269" width="0.0536%" height="15" fill="rgb(222,207,29)"/><text x="0.4752%" y="1279.50"></text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (5 samples, 0.05%)</title><rect x="0.2252%" y="1253" width="0.0536%" height="15" fill="rgb(206,96,30)"/><text x="0.4752%" y="1263.50"></text></g><g><title>[[stack]] (22 samples, 0.24%)</title><rect x="0.0536%" y="1285" width="0.2359%" height="15" fill="rgb(218,138,4)"/><text x="0.3036%" y="1295.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::worker_to_notify (1 samples, 0.01%)</title><rect x="0.2788%" y="1269" width="0.0107%" height="15" fill="rgb(250,191,14)"/><text x="0.5288%" y="1279.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::notify_should_wakeup (1 samples, 0.01%)</title><rect x="0.2788%" y="1253" width="0.0107%" height="15" fill="rgb(239,60,40)"/><text x="0.5288%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="0.2788%" y="1237" width="0.0107%" height="15" fill="rgb(206,27,48)"/><text x="0.5288%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="0.2788%" y="1221" width="0.0107%" height="15" fill="rgb(225,35,8)"/><text x="0.5288%" y="1231.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="0.2895%" y="1269" width="0.0107%" height="15" fill="rgb(250,213,24)"/><text x="0.5395%" y="1279.50"></text></g><g><title>&lt;tokio::park::thread::CachedParkThread as tokio::park::Park&gt;::park (1 samples, 0.01%)</title><rect x="0.3002%" y="1269" width="0.0107%" height="15" fill="rgb(247,123,22)"/><text x="0.5502%" y="1279.50"></text></g><g><title>tokio::park::thread::CachedParkThread::with_current (1 samples, 0.01%)</title><rect x="0.3002%" y="1253" width="0.0107%" height="15" fill="rgb(231,138,38)"/><text x="0.5502%" y="1263.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="0.3002%" y="1237" width="0.0107%" height="15" fill="rgb(231,145,46)"/><text x="0.5502%" y="1247.50"></text></g><g><title>tokio::park::thread::CachedParkThread::with_current::{{closure}} (1 samples, 0.01%)</title><rect x="0.3002%" y="1221" width="0.0107%" height="15" fill="rgb(251,118,11)"/><text x="0.5502%" y="1231.50"></text></g><g><title>&lt;tokio::park::thread::CachedParkThread as tokio::park::Park&gt;::park::{{closure}} (1 samples, 0.01%)</title><rect x="0.3002%" y="1205" width="0.0107%" height="15" fill="rgb(217,147,25)"/><text x="0.5502%" y="1215.50"></text></g><g><title>__GI___pthread_mutex_trylock (2 samples, 0.02%)</title><rect x="0.3109%" y="1269" width="0.0214%" height="15" fill="rgb(247,81,37)"/><text x="0.5609%" y="1279.50"></text></g><g><title>_rjem_mallocx (1 samples, 0.01%)</title><rect x="0.3324%" y="1269" width="0.0107%" height="15" fill="rgb(209,12,38)"/><text x="0.5824%" y="1279.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::get_or_create_transit_port (1 samples, 0.01%)</title><rect x="0.3431%" y="1269" width="0.0107%" height="15" fill="rgb(227,1,9)"/><text x="0.5931%" y="1279.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.01%)</title><rect x="0.3431%" y="1253" width="0.0107%" height="15" fill="rgb(248,47,43)"/><text x="0.5931%" y="1263.50"></text></g><g><title>syscall (3 samples, 0.03%)</title><rect x="0.3538%" y="1269" width="0.0322%" height="15" fill="rgb(221,10,30)"/><text x="0.6038%" y="1279.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="0.3860%" y="1269" width="0.0107%" height="15" fill="rgb(210,229,1)"/><text x="0.6360%" y="1279.50"></text></g><g><title>[anon] (11 samples, 0.12%)</title><rect x="0.2895%" y="1285" width="0.1179%" height="15" fill="rgb(222,148,37)"/><text x="0.5395%" y="1295.50"></text></g><g><title>tokio::task::spawn::spawn (1 samples, 0.01%)</title><rect x="0.3967%" y="1269" width="0.0107%" height="15" fill="rgb(234,67,33)"/><text x="0.6467%" y="1279.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.01%)</title><rect x="0.4074%" y="1285" width="0.0107%" height="15" fill="rgb(247,98,35)"/><text x="0.6574%" y="1295.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.01%)</title><rect x="0.4074%" y="1269" width="0.0107%" height="15" fill="rgb(247,138,52)"/><text x="0.6574%" y="1279.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.01%)</title><rect x="0.4074%" y="1253" width="0.0107%" height="15" fill="rgb(213,79,30)"/><text x="0.6574%" y="1263.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.01%)</title><rect x="0.4074%" y="1237" width="0.0107%" height="15" fill="rgb(246,177,23)"/><text x="0.6574%" y="1247.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.01%)</title><rect x="0.4074%" y="1221" width="0.0107%" height="15" fill="rgb(230,62,27)"/><text x="0.6574%" y="1231.50"></text></g><g><title>wmemchr (1 samples, 0.01%)</title><rect x="0.4074%" y="1205" width="0.0107%" height="15" fill="rgb(216,154,8)"/><text x="0.6574%" y="1215.50"></text></g><g><title>[rho_runtime] (1 samples, 0.01%)</title><rect x="0.4181%" y="1285" width="0.0107%" height="15" fill="rgb(244,35,45)"/><text x="0.6681%" y="1295.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (1 samples, 0.01%)</title><rect x="0.4181%" y="1269" width="0.0107%" height="15" fill="rgb(251,115,12)"/><text x="0.6681%" y="1279.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="0.4181%" y="1253" width="0.0107%" height="15" fill="rgb(240,54,50)"/><text x="0.6681%" y="1263.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (2 samples, 0.02%)</title><rect x="0.7827%" y="1189" width="0.0214%" height="15" fill="rgb(233,84,52)"/><text x="1.0327%" y="1199.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (2 samples, 0.02%)</title><rect x="0.7827%" y="1173" width="0.0214%" height="15" fill="rgb(207,117,47)"/><text x="1.0327%" y="1183.50"></text></g><g><title>core::cell::BorrowRefMut::new (2 samples, 0.02%)</title><rect x="0.7827%" y="1157" width="0.0214%" height="15" fill="rgb(249,43,39)"/><text x="1.0327%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;rho_runtime::storage::coordinator::TransitPort&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="0.8041%" y="1189" width="0.0214%" height="15" fill="rgb(209,38,44)"/><text x="1.0541%" y="1199.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="0.8041%" y="1173" width="0.0214%" height="15" fill="rgb(236,212,23)"/><text x="1.0541%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;rho_runtime::storage::coordinator::TransitPort&gt;&gt; (1 samples, 0.01%)</title><rect x="0.8256%" y="1189" width="0.0107%" height="15" fill="rgb(242,79,21)"/><text x="1.0756%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (1 samples, 0.01%)</title><rect x="0.8256%" y="1173" width="0.0107%" height="15" fill="rgb(211,96,35)"/><text x="1.0756%" y="1183.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="0.8256%" y="1157" width="0.0107%" height="15" fill="rgb(253,215,40)"/><text x="1.0756%" y="1167.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.01%)</title><rect x="0.8256%" y="1141" width="0.0107%" height="15" fill="rgb(211,81,21)"/><text x="1.0756%" y="1151.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.01%)</title><rect x="0.8256%" y="1125" width="0.0107%" height="15" fill="rgb(208,190,38)"/><text x="1.0756%" y="1135.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="0.8256%" y="1109" width="0.0107%" height="15" fill="rgb(235,213,38)"/><text x="1.0756%" y="1119.50"></text></g><g><title>core::mem::swap (1 samples, 0.01%)</title><rect x="0.8256%" y="1093" width="0.0107%" height="15" fill="rgb(237,122,38)"/><text x="1.0756%" y="1103.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.01%)</title><rect x="0.8256%" y="1077" width="0.0107%" height="15" fill="rgb(244,218,35)"/><text x="1.0756%" y="1087.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="0.8256%" y="1061" width="0.0107%" height="15" fill="rgb(240,68,47)"/><text x="1.0756%" y="1071.50"></text></g><g><title>&lt;usize as core::ops::bit::BitXor&gt;::bitxor (2 samples, 0.02%)</title><rect x="0.8792%" y="1029" width="0.0214%" height="15" fill="rgb(210,16,53)"/><text x="1.1292%" y="1039.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.04%)</title><rect x="0.8792%" y="1141" width="0.0429%" height="15" fill="rgb(235,124,12)"/><text x="1.1292%" y="1151.50"></text></g><g><title>&lt;blake3::Hash as core::hash::Hash&gt;::hash (4 samples, 0.04%)</title><rect x="0.8792%" y="1125" width="0.0429%" height="15" fill="rgb(224,169,11)"/><text x="1.1292%" y="1135.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (4 samples, 0.04%)</title><rect x="0.8792%" y="1109" width="0.0429%" height="15" fill="rgb(250,166,2)"/><text x="1.1292%" y="1119.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (4 samples, 0.04%)</title><rect x="0.8792%" y="1093" width="0.0429%" height="15" fill="rgb(242,216,29)"/><text x="1.1292%" y="1103.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (4 samples, 0.04%)</title><rect x="0.8792%" y="1077" width="0.0429%" height="15" fill="rgb(230,116,27)"/><text x="1.1292%" y="1087.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write (4 samples, 0.04%)</title><rect x="0.8792%" y="1061" width="0.0429%" height="15" fill="rgb(228,99,48)"/><text x="1.1292%" y="1071.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (4 samples, 0.04%)</title><rect x="0.8792%" y="1045" width="0.0429%" height="15" fill="rgb(253,11,6)"/><text x="1.1292%" y="1055.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_mul (2 samples, 0.02%)</title><rect x="0.9006%" y="1029" width="0.0214%" height="15" fill="rgb(247,143,39)"/><text x="1.1506%" y="1039.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.02%)</title><rect x="0.9221%" y="1093" width="0.0214%" height="15" fill="rgb(236,97,10)"/><text x="1.1721%" y="1103.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.02%)</title><rect x="0.9221%" y="1077" width="0.0214%" height="15" fill="rgb(233,208,19)"/><text x="1.1721%" y="1087.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="0.9221%" y="1061" width="0.0214%" height="15" fill="rgb(216,164,2)"/><text x="1.1721%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::iter_hash (3 samples, 0.03%)</title><rect x="0.9221%" y="1125" width="0.0322%" height="15" fill="rgb(220,129,5)"/><text x="1.1721%" y="1135.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T&gt;::new (3 samples, 0.03%)</title><rect x="0.9221%" y="1109" width="0.0322%" height="15" fill="rgb(242,17,10)"/><text x="1.1721%" y="1119.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="0.9435%" y="1093" width="0.0107%" height="15" fill="rgb(242,107,0)"/><text x="1.1935%" y="1103.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.01%)</title><rect x="0.9435%" y="1077" width="0.0107%" height="15" fill="rgb(251,28,31)"/><text x="1.1935%" y="1087.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.01%)</title><rect x="0.9435%" y="1061" width="0.0107%" height="15" fill="rgb(233,223,10)"/><text x="1.1935%" y="1071.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.01%)</title><rect x="0.9435%" y="1045" width="0.0107%" height="15" fill="rgb(215,21,27)"/><text x="1.1935%" y="1055.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry (15 samples, 0.16%)</title><rect x="0.8577%" y="1157" width="0.1608%" height="15" fill="rgb(232,23,21)"/><text x="1.1077%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (9 samples, 0.10%)</title><rect x="0.9221%" y="1141" width="0.0965%" height="15" fill="rgb(244,5,23)"/><text x="1.1721%" y="1151.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry::{{closure}} (6 samples, 0.06%)</title><rect x="0.9542%" y="1125" width="0.0643%" height="15" fill="rgb(226,81,46)"/><text x="1.2042%" y="1135.50"></text></g><g><title>&lt;blake3::Hash as core::cmp::PartialEq&gt;::eq (6 samples, 0.06%)</title><rect x="0.9542%" y="1109" width="0.0643%" height="15" fill="rgb(247,70,30)"/><text x="1.2042%" y="1119.50"></text></g><g><title>constant_time_eq::constant_time_eq_32 (6 samples, 0.06%)</title><rect x="0.9542%" y="1093" width="0.0643%" height="15" fill="rgb(212,68,19)"/><text x="1.2042%" y="1103.50"></text></g><g><title>constant_time_eq::constant_time_ne_32 (6 samples, 0.06%)</title><rect x="0.9542%" y="1077" width="0.0643%" height="15" fill="rgb(240,187,13)"/><text x="1.2042%" y="1087.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::get_or_create_transit_port (25 samples, 0.27%)</title><rect x="0.8363%" y="1189" width="0.2680%" height="15" fill="rgb(223,113,26)"/><text x="1.0863%" y="1199.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (23 samples, 0.25%)</title><rect x="0.8577%" y="1173" width="0.2466%" height="15" fill="rgb(206,192,2)"/><text x="1.1077%" y="1183.50"></text></g><g><title>std::collections::hash::map::map_entry (8 samples, 0.09%)</title><rect x="1.0185%" y="1157" width="0.0858%" height="15" fill="rgb(241,108,4)"/><text x="1.2685%" y="1167.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (1 samples, 0.01%)</title><rect x="1.1043%" y="1189" width="0.0107%" height="15" fill="rgb(247,173,49)"/><text x="1.3543%" y="1199.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::iter (1 samples, 0.01%)</title><rect x="1.1043%" y="1173" width="0.0107%" height="15" fill="rgb(224,114,35)"/><text x="1.3543%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::iter (1 samples, 0.01%)</title><rect x="1.1043%" y="1157" width="0.0107%" height="15" fill="rgb(245,159,27)"/><text x="1.3543%" y="1167.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="1.1043%" y="1141" width="0.0107%" height="15" fill="rgb(245,172,44)"/><text x="1.3543%" y="1151.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.01%)</title><rect x="1.1043%" y="1125" width="0.0107%" height="15" fill="rgb(236,23,11)"/><text x="1.3543%" y="1135.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1 samples, 0.01%)</title><rect x="1.1043%" y="1109" width="0.0107%" height="15" fill="rgb(205,117,38)"/><text x="1.3543%" y="1119.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (29 samples, 0.31%)</title><rect x="1.1150%" y="1173" width="0.3109%" height="15" fill="rgb(237,72,25)"/><text x="1.3650%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (28 samples, 0.30%)</title><rect x="1.1258%" y="1157" width="0.3002%" height="15" fill="rgb(244,70,9)"/><text x="1.3758%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_add (28 samples, 0.30%)</title><rect x="1.1258%" y="1141" width="0.3002%" height="15" fill="rgb(217,125,39)"/><text x="1.3758%" y="1151.50"></text></g><g><title>[libc-2.31.so] (24 samples, 0.26%)</title><rect x="1.4260%" y="1157" width="0.2573%" height="15" fill="rgb(235,36,10)"/><text x="1.6760%" y="1167.50"></text></g><g><title>__rg_alloc (3 samples, 0.03%)</title><rect x="1.6833%" y="1093" width="0.0322%" height="15" fill="rgb(251,123,47)"/><text x="1.9333%" y="1103.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (3 samples, 0.03%)</title><rect x="1.6833%" y="1077" width="0.0322%" height="15" fill="rgb(221,13,13)"/><text x="1.9333%" y="1087.50"></text></g><g><title>jemallocator::layout_to_flags (1 samples, 0.01%)</title><rect x="1.7047%" y="1061" width="0.0107%" height="15" fill="rgb(238,131,9)"/><text x="1.9547%" y="1071.50"></text></g><g><title>imalloc_no_sample (2 samples, 0.02%)</title><rect x="1.7369%" y="1045" width="0.0214%" height="15" fill="rgb(211,50,8)"/><text x="1.9869%" y="1055.50"></text></g><g><title>iallocztm (2 samples, 0.02%)</title><rect x="1.7369%" y="1029" width="0.0214%" height="15" fill="rgb(245,182,24)"/><text x="1.9869%" y="1039.50"></text></g><g><title>arena_malloc (2 samples, 0.02%)</title><rect x="1.7369%" y="1013" width="0.0214%" height="15" fill="rgb(242,14,37)"/><text x="1.9869%" y="1023.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.02%)</title><rect x="1.7369%" y="997" width="0.0214%" height="15" fill="rgb(246,228,12)"/><text x="1.9869%" y="1007.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.01%)</title><rect x="1.7476%" y="981" width="0.0107%" height="15" fill="rgb(213,55,15)"/><text x="1.9976%" y="991.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (32 samples, 0.34%)</title><rect x="1.4260%" y="1173" width="0.3431%" height="15" fill="rgb(209,9,3)"/><text x="1.6760%" y="1183.50"></text></g><g><title>alloc::alloc::exchange_malloc (8 samples, 0.09%)</title><rect x="1.6833%" y="1157" width="0.0858%" height="15" fill="rgb(230,59,30)"/><text x="1.9333%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.09%)</title><rect x="1.6833%" y="1141" width="0.0858%" height="15" fill="rgb(209,121,21)"/><text x="1.9333%" y="1151.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.09%)</title><rect x="1.6833%" y="1125" width="0.0858%" height="15" fill="rgb(220,109,13)"/><text x="1.9333%" y="1135.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.09%)</title><rect x="1.6833%" y="1109" width="0.0858%" height="15" fill="rgb(232,18,1)"/><text x="1.9333%" y="1119.50"></text></g><g><title>_rjem_mallocx (5 samples, 0.05%)</title><rect x="1.7154%" y="1093" width="0.0536%" height="15" fill="rgb(215,41,42)"/><text x="1.9654%" y="1103.50"></text></g><g><title>imalloc (4 samples, 0.04%)</title><rect x="1.7262%" y="1077" width="0.0429%" height="15" fill="rgb(224,123,36)"/><text x="1.9762%" y="1087.50"></text></g><g><title>imalloc_body (3 samples, 0.03%)</title><rect x="1.7369%" y="1061" width="0.0322%" height="15" fill="rgb(240,125,3)"/><text x="1.9869%" y="1071.50"></text></g><g><title>sz_index2size (1 samples, 0.01%)</title><rect x="1.7583%" y="1045" width="0.0107%" height="15" fill="rgb(205,98,50)"/><text x="2.0083%" y="1055.50"></text></g><g><title>sz_index2size_lookup (1 samples, 0.01%)</title><rect x="1.7583%" y="1029" width="0.0107%" height="15" fill="rgb(205,185,37)"/><text x="2.0083%" y="1039.50"></text></g><g><title>tokio::sync::oneshot::channel (63 samples, 0.68%)</title><rect x="1.1150%" y="1189" width="0.6755%" height="15" fill="rgb(238,207,15)"/><text x="1.3650%" y="1199.50"></text></g><g><title>tokio::sync::oneshot::State::as_usize (2 samples, 0.02%)</title><rect x="1.7691%" y="1173" width="0.0214%" height="15" fill="rgb(213,199,42)"/><text x="2.0191%" y="1183.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.04%)</title><rect x="1.8119%" y="1173" width="0.0429%" height="15" fill="rgb(235,201,11)"/><text x="2.0619%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::spawner::Spawner&gt; (6 samples, 0.06%)</title><rect x="1.8548%" y="1173" width="0.0643%" height="15" fill="rgb(207,46,11)"/><text x="2.1048%" y="1183.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::handle_join_double (119 samples, 1.28%)</title><rect x="0.6969%" y="1205" width="1.2759%" height="15" fill="rgb(241,35,35)"/><text x="0.9469%" y="1215.50"></text></g><g><title>tokio::task::spawn::spawn (17 samples, 0.18%)</title><rect x="1.7905%" y="1189" width="0.1823%" height="15" fill="rgb(243,32,47)"/><text x="2.0405%" y="1199.50"></text></g><g><title>tokio::runtime::context::spawn_handle (5 samples, 0.05%)</title><rect x="1.9192%" y="1173" width="0.0536%" height="15" fill="rgb(247,202,23)"/><text x="2.1692%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.05%)</title><rect x="1.9192%" y="1157" width="0.0536%" height="15" fill="rgb(219,102,11)"/><text x="2.1692%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.05%)</title><rect x="1.9192%" y="1141" width="0.0536%" height="15" fill="rgb(243,110,44)"/><text x="2.1692%" y="1151.50"></text></g><g><title>tokio::runtime::context::spawn_handle::{{closure}} (5 samples, 0.05%)</title><rect x="1.9192%" y="1125" width="0.0536%" height="15" fill="rgb(222,74,54)"/><text x="2.1692%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.05%)</title><rect x="1.9192%" y="1109" width="0.0536%" height="15" fill="rgb(216,99,12)"/><text x="2.1692%" y="1119.50"></text></g><g><title>tokio::runtime::context::spawn_handle::{{closure}}::{{closure}} (5 samples, 0.05%)</title><rect x="1.9192%" y="1093" width="0.0536%" height="15" fill="rgb(226,22,26)"/><text x="2.1692%" y="1103.50"></text></g><g><title>&lt;tokio::runtime::spawner::Spawner as core::clone::Clone&gt;::clone (5 samples, 0.05%)</title><rect x="1.9192%" y="1077" width="0.0536%" height="15" fill="rgb(217,163,10)"/><text x="2.1692%" y="1087.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (10 samples, 0.11%)</title><rect x="2.0049%" y="1189" width="0.1072%" height="15" fill="rgb(213,25,53)"/><text x="2.2549%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (10 samples, 0.11%)</title><rect x="2.0049%" y="1173" width="0.1072%" height="15" fill="rgb(252,105,26)"/><text x="2.2549%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_add (10 samples, 0.11%)</title><rect x="2.0049%" y="1157" width="0.1072%" height="15" fill="rgb(220,39,43)"/><text x="2.2549%" y="1167.50"></text></g><g><title>__rust_probestack (1 samples, 0.01%)</title><rect x="2.1121%" y="1189" width="0.0107%" height="15" fill="rgb(229,68,48)"/><text x="2.3621%" y="1199.50"></text></g><g><title>core::future::from_generator (1 samples, 0.01%)</title><rect x="2.1229%" y="1189" width="0.0107%" height="15" fill="rgb(252,8,32)"/><text x="2.3729%" y="1199.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="2.2086%" y="1125" width="0.0214%" height="15" fill="rgb(223,20,43)"/><text x="2.4586%" y="1135.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="2.2086%" y="1109" width="0.0214%" height="15" fill="rgb(229,81,49)"/><text x="2.4586%" y="1119.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.01%)</title><rect x="2.2194%" y="1093" width="0.0107%" height="15" fill="rgb(236,28,36)"/><text x="2.4694%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::iter_hash (4 samples, 0.04%)</title><rect x="2.2301%" y="1125" width="0.0429%" height="15" fill="rgb(249,185,26)"/><text x="2.4801%" y="1135.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T&gt;::new (4 samples, 0.04%)</title><rect x="2.2301%" y="1109" width="0.0429%" height="15" fill="rgb(249,174,33)"/><text x="2.4801%" y="1119.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (4 samples, 0.04%)</title><rect x="2.2301%" y="1093" width="0.0429%" height="15" fill="rgb(233,201,37)"/><text x="2.4801%" y="1103.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (4 samples, 0.04%)</title><rect x="2.2301%" y="1077" width="0.0429%" height="15" fill="rgb(221,78,26)"/><text x="2.4801%" y="1087.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.04%)</title><rect x="2.2301%" y="1061" width="0.0429%" height="15" fill="rgb(250,127,30)"/><text x="2.4801%" y="1071.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry (10 samples, 0.11%)</title><rect x="2.2086%" y="1157" width="0.1072%" height="15" fill="rgb(230,49,44)"/><text x="2.4586%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (10 samples, 0.11%)</title><rect x="2.2086%" y="1141" width="0.1072%" height="15" fill="rgb(229,67,23)"/><text x="2.4586%" y="1151.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry::{{closure}} (4 samples, 0.04%)</title><rect x="2.2730%" y="1125" width="0.0429%" height="15" fill="rgb(249,83,47)"/><text x="2.5230%" y="1135.50"></text></g><g><title>&lt;blake3::Hash as core::cmp::PartialEq&gt;::eq (4 samples, 0.04%)</title><rect x="2.2730%" y="1109" width="0.0429%" height="15" fill="rgb(215,43,3)"/><text x="2.5230%" y="1119.50"></text></g><g><title>constant_time_eq::constant_time_eq_32 (4 samples, 0.04%)</title><rect x="2.2730%" y="1093" width="0.0429%" height="15" fill="rgb(238,154,13)"/><text x="2.5230%" y="1103.50"></text></g><g><title>constant_time_eq::constant_time_ne_32 (4 samples, 0.04%)</title><rect x="2.2730%" y="1077" width="0.0429%" height="15" fill="rgb(219,56,2)"/><text x="2.5230%" y="1087.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::get_or_create_transit_port (19 samples, 0.20%)</title><rect x="2.1336%" y="1189" width="0.2037%" height="15" fill="rgb(233,0,4)"/><text x="2.3836%" y="1199.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (13 samples, 0.14%)</title><rect x="2.1979%" y="1173" width="0.1394%" height="15" fill="rgb(235,30,7)"/><text x="2.4479%" y="1183.50"></text></g><g><title>std::collections::hash::map::map_entry (2 samples, 0.02%)</title><rect x="2.3159%" y="1157" width="0.0214%" height="15" fill="rgb(250,79,13)"/><text x="2.5659%" y="1167.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="2.3373%" y="1173" width="0.0322%" height="15" fill="rgb(211,146,34)"/><text x="2.5873%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::spawner::Spawner&gt; (3 samples, 0.03%)</title><rect x="2.3695%" y="1173" width="0.0322%" height="15" fill="rgb(228,22,38)"/><text x="2.6195%" y="1183.50"></text></g><g><title>tokio::runtime::context::CONTEXT::__getit (1 samples, 0.01%)</title><rect x="2.4016%" y="1125" width="0.0107%" height="15" fill="rgb(235,168,5)"/><text x="2.6516%" y="1135.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="2.4016%" y="1109" width="0.0107%" height="15" fill="rgb(221,155,16)"/><text x="2.6516%" y="1119.50"></text></g><g><title>tokio::runtime::context::spawn_handle (3 samples, 0.03%)</title><rect x="2.4016%" y="1173" width="0.0322%" height="15" fill="rgb(215,215,53)"/><text x="2.6516%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.03%)</title><rect x="2.4016%" y="1157" width="0.0322%" height="15" fill="rgb(223,4,10)"/><text x="2.6516%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.03%)</title><rect x="2.4016%" y="1141" width="0.0322%" height="15" fill="rgb(234,103,6)"/><text x="2.6516%" y="1151.50"></text></g><g><title>tokio::runtime::context::spawn_handle::{{closure}} (2 samples, 0.02%)</title><rect x="2.4124%" y="1125" width="0.0214%" height="15" fill="rgb(227,97,0)"/><text x="2.6624%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.02%)</title><rect x="2.4124%" y="1109" width="0.0214%" height="15" fill="rgb(234,150,53)"/><text x="2.6624%" y="1119.50"></text></g><g><title>tokio::runtime::context::spawn_handle::{{closure}}::{{closure}} (2 samples, 0.02%)</title><rect x="2.4124%" y="1093" width="0.0214%" height="15" fill="rgb(228,201,54)"/><text x="2.6624%" y="1103.50"></text></g><g><title>&lt;tokio::runtime::spawner::Spawner as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="2.4124%" y="1077" width="0.0214%" height="15" fill="rgb(222,22,37)"/><text x="2.6624%" y="1087.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="2.4552%" y="1109" width="0.0107%" height="15" fill="rgb(237,53,32)"/><text x="2.7052%" y="1119.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="2.4660%" y="1093" width="0.0107%" height="15" fill="rgb(233,25,53)"/><text x="2.7160%" y="1103.50"></text></g><g><title>[libc-2.31.so] (20 samples, 0.21%)</title><rect x="2.4767%" y="1077" width="0.2144%" height="15" fill="rgb(210,40,34)"/><text x="2.7267%" y="1087.50"></text></g><g><title>arena_decay_tick (1 samples, 0.01%)</title><rect x="2.7340%" y="869" width="0.0107%" height="15" fill="rgb(241,220,44)"/><text x="2.9840%" y="879.50"></text></g><g><title>arena_decay_ticks (1 samples, 0.01%)</title><rect x="2.7340%" y="853" width="0.0107%" height="15" fill="rgb(235,28,35)"/><text x="2.9840%" y="863.50"></text></g><g><title>ticker_ticks (1 samples, 0.01%)</title><rect x="2.7340%" y="837" width="0.0107%" height="15" fill="rgb(210,56,17)"/><text x="2.9840%" y="847.50"></text></g><g><title>bitmap_sfu (2 samples, 0.02%)</title><rect x="2.7447%" y="853" width="0.0214%" height="15" fill="rgb(224,130,29)"/><text x="2.9947%" y="863.50"></text></g><g><title>ffs_lu (2 samples, 0.02%)</title><rect x="2.7447%" y="837" width="0.0214%" height="15" fill="rgb(235,212,8)"/><text x="2.9947%" y="847.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (6 samples, 0.06%)</title><rect x="2.7126%" y="901" width="0.0643%" height="15" fill="rgb(223,33,50)"/><text x="2.9626%" y="911.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (6 samples, 0.06%)</title><rect x="2.7126%" y="885" width="0.0643%" height="15" fill="rgb(219,149,13)"/><text x="2.9626%" y="895.50"></text></g><g><title>arena_slab_reg_alloc (3 samples, 0.03%)</title><rect x="2.7447%" y="869" width="0.0322%" height="15" fill="rgb(250,156,29)"/><text x="2.9947%" y="879.50"></text></g><g><title>extent_nfree_dec (1 samples, 0.01%)</title><rect x="2.7662%" y="853" width="0.0107%" height="15" fill="rgb(216,193,19)"/><text x="3.0162%" y="863.50"></text></g><g><title>tokio::runtime::task::joinable (31 samples, 0.33%)</title><rect x="2.4552%" y="1141" width="0.3324%" height="15" fill="rgb(216,135,14)"/><text x="2.7052%" y="1151.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (31 samples, 0.33%)</title><rect x="2.4552%" y="1125" width="0.3324%" height="15" fill="rgb(241,47,5)"/><text x="2.7052%" y="1135.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (30 samples, 0.32%)</title><rect x="2.4660%" y="1109" width="0.3216%" height="15" fill="rgb(233,42,35)"/><text x="2.7160%" y="1119.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (29 samples, 0.31%)</title><rect x="2.4767%" y="1093" width="0.3109%" height="15" fill="rgb(231,13,6)"/><text x="2.7267%" y="1103.50"></text></g><g><title>alloc::alloc::exchange_malloc (9 samples, 0.10%)</title><rect x="2.6911%" y="1077" width="0.0965%" height="15" fill="rgb(207,181,40)"/><text x="2.9411%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.10%)</title><rect x="2.6911%" y="1061" width="0.0965%" height="15" fill="rgb(254,173,49)"/><text x="2.9411%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.10%)</title><rect x="2.6911%" y="1045" width="0.0965%" height="15" fill="rgb(221,1,38)"/><text x="2.9411%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.10%)</title><rect x="2.6911%" y="1029" width="0.0965%" height="15" fill="rgb(206,124,46)"/><text x="2.9411%" y="1039.50"></text></g><g><title>_rjem_mallocx (9 samples, 0.10%)</title><rect x="2.6911%" y="1013" width="0.0965%" height="15" fill="rgb(249,21,11)"/><text x="2.9411%" y="1023.50"></text></g><g><title>imalloc (7 samples, 0.08%)</title><rect x="2.7126%" y="997" width="0.0751%" height="15" fill="rgb(222,201,40)"/><text x="2.9626%" y="1007.50"></text></g><g><title>imalloc_body (7 samples, 0.08%)</title><rect x="2.7126%" y="981" width="0.0751%" height="15" fill="rgb(235,61,29)"/><text x="2.9626%" y="991.50"></text></g><g><title>imalloc_no_sample (7 samples, 0.08%)</title><rect x="2.7126%" y="965" width="0.0751%" height="15" fill="rgb(219,207,3)"/><text x="2.9626%" y="975.50"></text></g><g><title>iallocztm (7 samples, 0.08%)</title><rect x="2.7126%" y="949" width="0.0751%" height="15" fill="rgb(222,56,46)"/><text x="2.9626%" y="959.50"></text></g><g><title>arena_malloc (7 samples, 0.08%)</title><rect x="2.7126%" y="933" width="0.0751%" height="15" fill="rgb(239,76,54)"/><text x="2.9626%" y="943.50"></text></g><g><title>tcache_alloc_small (7 samples, 0.08%)</title><rect x="2.7126%" y="917" width="0.0751%" height="15" fill="rgb(231,124,27)"/><text x="2.9626%" y="927.50"></text></g><g><title>arena_choose (1 samples, 0.01%)</title><rect x="2.7769%" y="901" width="0.0107%" height="15" fill="rgb(249,195,6)"/><text x="3.0269%" y="911.50"></text></g><g><title>arena_choose_impl (1 samples, 0.01%)</title><rect x="2.7769%" y="885" width="0.0107%" height="15" fill="rgb(237,174,47)"/><text x="3.0269%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (6 samples, 0.06%)</title><rect x="2.8519%" y="1093" width="0.0643%" height="15" fill="rgb(206,201,31)"/><text x="3.1019%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_swap (6 samples, 0.06%)</title><rect x="2.8519%" y="1077" width="0.0643%" height="15" fill="rgb(231,57,52)"/><text x="3.1019%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.01%)</title><rect x="2.9163%" y="1029" width="0.0107%" height="15" fill="rgb(248,177,22)"/><text x="3.1663%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="2.9163%" y="1013" width="0.0107%" height="15" fill="rgb(215,211,37)"/><text x="3.1663%" y="1023.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (11 samples, 0.12%)</title><rect x="2.8198%" y="1125" width="0.1179%" height="15" fill="rgb(241,128,51)"/><text x="3.0698%" y="1135.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (9 samples, 0.10%)</title><rect x="2.8412%" y="1109" width="0.0965%" height="15" fill="rgb(227,165,31)"/><text x="3.0912%" y="1119.50"></text></g><g><title>tokio::runtime::park::Inner::unpark_condvar (2 samples, 0.02%)</title><rect x="2.9163%" y="1093" width="0.0214%" height="15" fill="rgb(228,167,24)"/><text x="3.1663%" y="1103.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (2 samples, 0.02%)</title><rect x="2.9163%" y="1077" width="0.0214%" height="15" fill="rgb(228,143,12)"/><text x="3.1663%" y="1087.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.02%)</title><rect x="2.9163%" y="1061" width="0.0214%" height="15" fill="rgb(249,149,8)"/><text x="3.1663%" y="1071.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.02%)</title><rect x="2.9163%" y="1045" width="0.0214%" height="15" fill="rgb(243,35,44)"/><text x="3.1663%" y="1055.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (1 samples, 0.01%)</title><rect x="2.9270%" y="1029" width="0.0107%" height="15" fill="rgb(246,89,9)"/><text x="3.1770%" y="1039.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (1 samples, 0.01%)</title><rect x="2.9270%" y="1013" width="0.0107%" height="15" fill="rgb(233,213,13)"/><text x="3.1770%" y="1023.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (1 samples, 0.01%)</title><rect x="2.9270%" y="997" width="0.0107%" height="15" fill="rgb(233,141,41)"/><text x="3.1770%" y="1007.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (1 samples, 0.01%)</title><rect x="2.9270%" y="981" width="0.0107%" height="15" fill="rgb(239,167,4)"/><text x="3.1770%" y="991.50"></text></g><g><title>core::hint::spin_loop (1 samples, 0.01%)</title><rect x="2.9270%" y="965" width="0.0107%" height="15" fill="rgb(209,217,16)"/><text x="3.1770%" y="975.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.01%)</title><rect x="2.9270%" y="949" width="0.0107%" height="15" fill="rgb(219,88,35)"/><text x="3.1770%" y="959.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::unpark_lock (1 samples, 0.01%)</title><rect x="2.9377%" y="1093" width="0.0107%" height="15" fill="rgb(220,193,23)"/><text x="3.1877%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicI32::store (1 samples, 0.01%)</title><rect x="2.9377%" y="1077" width="0.0107%" height="15" fill="rgb(230,90,52)"/><text x="3.1877%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_store (1 samples, 0.01%)</title><rect x="2.9377%" y="1061" width="0.0107%" height="15" fill="rgb(252,106,19)"/><text x="3.1877%" y="1071.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (129 samples, 1.38%)</title><rect x="2.9484%" y="1093" width="1.3831%" height="15" fill="rgb(206,74,20)"/><text x="3.1984%" y="1103.50"></text></g><g><title>syscall (129 samples, 1.38%)</title><rect x="2.9484%" y="1077" width="1.3831%" height="15" fill="rgb(230,138,44)"/><text x="3.1984%" y="1087.50"></text></g><g><title>[unknown] (126 samples, 1.35%)</title><rect x="2.9806%" y="1061" width="1.3509%" height="15" fill="rgb(235,182,43)"/><text x="3.2306%" y="1071.50"></text></g><g><title>[unknown] (119 samples, 1.28%)</title><rect x="3.0556%" y="1045" width="1.2759%" height="15" fill="rgb(242,16,51)"/><text x="3.3056%" y="1055.50"></text></g><g><title>[unknown] (119 samples, 1.28%)</title><rect x="3.0556%" y="1029" width="1.2759%" height="15" fill="rgb(248,9,4)"/><text x="3.3056%" y="1039.50"></text></g><g><title>[unknown] (118 samples, 1.27%)</title><rect x="3.0664%" y="1013" width="1.2651%" height="15" fill="rgb(210,31,22)"/><text x="3.3164%" y="1023.50"></text></g><g><title>[unknown] (117 samples, 1.25%)</title><rect x="3.0771%" y="997" width="1.2544%" height="15" fill="rgb(239,54,39)"/><text x="3.3271%" y="1007.50"></text></g><g><title>[unknown] (104 samples, 1.12%)</title><rect x="3.2165%" y="981" width="1.1150%" height="15" fill="rgb(230,99,41)"/><text x="3.4665%" y="991.50"></text></g><g><title>[unknown] (95 samples, 1.02%)</title><rect x="3.3130%" y="965" width="1.0185%" height="15" fill="rgb(253,106,12)"/><text x="3.5630%" y="975.50"></text></g><g><title>[unknown] (80 samples, 0.86%)</title><rect x="3.4738%" y="949" width="0.8577%" height="15" fill="rgb(213,46,41)"/><text x="3.7238%" y="959.50"></text></g><g><title>[unknown] (54 samples, 0.58%)</title><rect x="3.7525%" y="933" width="0.5790%" height="15" fill="rgb(215,133,35)"/><text x="4.0025%" y="943.50"></text></g><g><title>[unknown] (43 samples, 0.46%)</title><rect x="3.8705%" y="917" width="0.4610%" height="15" fill="rgb(213,28,5)"/><text x="4.1205%" y="927.50"></text></g><g><title>[unknown] (21 samples, 0.23%)</title><rect x="4.1064%" y="901" width="0.2252%" height="15" fill="rgb(215,77,49)"/><text x="4.3564%" y="911.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="4.2350%" y="885" width="0.0965%" height="15" fill="rgb(248,100,22)"/><text x="4.4850%" y="895.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="4.2886%" y="869" width="0.0429%" height="15" fill="rgb(208,67,9)"/><text x="4.5386%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.04%)</title><rect x="4.3315%" y="1093" width="0.0429%" height="15" fill="rgb(219,133,21)"/><text x="4.5815%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.04%)</title><rect x="4.3315%" y="1077" width="0.0429%" height="15" fill="rgb(246,46,29)"/><text x="4.5815%" y="1087.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (8 samples, 0.09%)</title><rect x="4.3744%" y="1093" width="0.0858%" height="15" fill="rgb(246,185,52)"/><text x="4.6244%" y="1103.50"></text></g><g><title>std::time::Instant::now (8 samples, 0.09%)</title><rect x="4.3744%" y="1077" width="0.0858%" height="15" fill="rgb(252,136,11)"/><text x="4.6244%" y="1087.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (8 samples, 0.09%)</title><rect x="4.3744%" y="1061" width="0.0858%" height="15" fill="rgb(219,138,53)"/><text x="4.6244%" y="1071.50"></text></g><g><title>std::sys::unix::time::inner::now (8 samples, 0.09%)</title><rect x="4.3744%" y="1045" width="0.0858%" height="15" fill="rgb(211,51,23)"/><text x="4.6244%" y="1055.50"></text></g><g><title>__clock_gettime (7 samples, 0.08%)</title><rect x="4.3851%" y="1029" width="0.0751%" height="15" fill="rgb(247,221,28)"/><text x="4.6351%" y="1039.50"></text></g><g><title>__vdso_clock_gettime (7 samples, 0.08%)</title><rect x="4.3851%" y="1013" width="0.0751%" height="15" fill="rgb(251,222,45)"/><text x="4.6351%" y="1023.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (2 samples, 0.02%)</title><rect x="4.4602%" y="1093" width="0.0214%" height="15" fill="rgb(217,162,53)"/><text x="4.7102%" y="1103.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (2 samples, 0.02%)</title><rect x="4.4602%" y="1077" width="0.0214%" height="15" fill="rgb(229,93,14)"/><text x="4.7102%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (2 samples, 0.02%)</title><rect x="4.4602%" y="1061" width="0.0214%" height="15" fill="rgb(209,67,49)"/><text x="4.7102%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.02%)</title><rect x="4.4602%" y="1045" width="0.0214%" height="15" fill="rgb(213,87,29)"/><text x="4.7102%" y="1055.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (148 samples, 1.59%)</title><rect x="2.9377%" y="1125" width="1.5868%" height="15" fill="rgb(205,151,52)"/><text x="3.1877%" y="1135.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (148 samples, 1.59%)</title><rect x="2.9377%" y="1109" width="1.5868%" height="15" fill="rgb(253,215,39)"/><text x="3.1877%" y="1119.50"></text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (4 samples, 0.04%)</title><rect x="4.4816%" y="1093" width="0.0429%" height="15" fill="rgb(221,220,41)"/><text x="4.7316%" y="1103.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (4 samples, 0.04%)</title><rect x="4.4816%" y="1077" width="0.0429%" height="15" fill="rgb(218,133,21)"/><text x="4.7316%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4 samples, 0.04%)</title><rect x="4.4816%" y="1061" width="0.0429%" height="15" fill="rgb(221,193,43)"/><text x="4.7316%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_sub (4 samples, 0.04%)</title><rect x="4.4816%" y="1045" width="0.0429%" height="15" fill="rgb(240,128,52)"/><text x="4.7316%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::queue::Pointers&gt;&gt; (4 samples, 0.04%)</title><rect x="4.5245%" y="1077" width="0.0429%" height="15" fill="rgb(253,114,12)"/><text x="4.7745%" y="1087.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="4.5245%" y="1061" width="0.0429%" height="15" fill="rgb(215,223,47)"/><text x="4.7745%" y="1071.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (4 samples, 0.04%)</title><rect x="4.5245%" y="1045" width="0.0429%" height="15" fill="rgb(248,225,23)"/><text x="4.7745%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (4 samples, 0.04%)</title><rect x="4.5245%" y="1029" width="0.0429%" height="15" fill="rgb(250,108,0)"/><text x="4.7745%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.04%)</title><rect x="4.5245%" y="1013" width="0.0429%" height="15" fill="rgb(228,208,7)"/><text x="4.7745%" y="1023.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::push (31 samples, 0.33%)</title><rect x="4.5245%" y="1093" width="0.3324%" height="15" fill="rgb(244,45,10)"/><text x="4.7745%" y="1103.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (27 samples, 0.29%)</title><rect x="4.5674%" y="1077" width="0.2895%" height="15" fill="rgb(207,125,25)"/><text x="4.8174%" y="1087.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (27 samples, 0.29%)</title><rect x="4.5674%" y="1061" width="0.2895%" height="15" fill="rgb(210,195,18)"/><text x="4.8174%" y="1071.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (27 samples, 0.29%)</title><rect x="4.5674%" y="1045" width="0.2895%" height="15" fill="rgb(249,80,12)"/><text x="4.8174%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (27 samples, 0.29%)</title><rect x="4.5674%" y="1029" width="0.2895%" height="15" fill="rgb(221,65,9)"/><text x="4.8174%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (27 samples, 0.29%)</title><rect x="4.5674%" y="1013" width="0.2895%" height="15" fill="rgb(235,49,36)"/><text x="4.8174%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (2 samples, 0.02%)</title><rect x="4.8569%" y="1061" width="0.0214%" height="15" fill="rgb(225,32,20)"/><text x="5.1069%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;usize&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="4.8783%" y="1061" width="0.0107%" height="15" fill="rgb(215,141,46)"/><text x="5.1283%" y="1071.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="4.8783%" y="1045" width="0.0107%" height="15" fill="rgb(250,160,47)"/><text x="5.1283%" y="1055.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.01%)</title><rect x="4.8783%" y="1029" width="0.0107%" height="15" fill="rgb(216,222,40)"/><text x="5.1283%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.01%)</title><rect x="4.8783%" y="1013" width="0.0107%" height="15" fill="rgb(234,217,39)"/><text x="5.1283%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="4.8783%" y="997" width="0.0107%" height="15" fill="rgb(207,178,40)"/><text x="5.1283%" y="1007.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::notify_should_wakeup (6 samples, 0.06%)</title><rect x="4.8890%" y="1061" width="0.0643%" height="15" fill="rgb(221,136,13)"/><text x="5.1390%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (5 samples, 0.05%)</title><rect x="4.8998%" y="1045" width="0.0536%" height="15" fill="rgb(249,199,10)"/><text x="5.1498%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_add (5 samples, 0.05%)</title><rect x="4.8998%" y="1029" width="0.0536%" height="15" fill="rgb(249,222,13)"/><text x="5.1498%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (400 samples, 4.29%)</title><rect x="0.6755%" y="1269" width="4.2886%" height="15" fill="rgb(244,185,38)"/><text x="0.9255%" y="1279.50">&lt;core..</text></g><g><title>rho_runtime::run::{{closure}} (399 samples, 4.28%)</title><rect x="0.6862%" y="1253" width="4.2779%" height="15" fill="rgb(236,202,9)"/><text x="0.9362%" y="1263.50">rho_r..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (399 samples, 4.28%)</title><rect x="0.6862%" y="1237" width="4.2779%" height="15" fill="rgb(250,229,37)"/><text x="0.9362%" y="1247.50">&lt;core..</text></g><g><title>rho_runtime::storage::coordinator::Coordinator::run::{{closure}} (399 samples, 4.28%)</title><rect x="0.6862%" y="1221" width="4.2779%" height="15" fill="rgb(206,174,23)"/><text x="0.9362%" y="1231.50">rho_r..</text></g><g><title>rho_runtime::storage::coordinator::Coordinator::handle_produce (279 samples, 2.99%)</title><rect x="1.9728%" y="1205" width="2.9913%" height="15" fill="rgb(211,33,43)"/><text x="2.2228%" y="1215.50">rho..</text></g><g><title>tokio::task::spawn::spawn (245 samples, 2.63%)</title><rect x="2.3373%" y="1189" width="2.6268%" height="15" fill="rgb(245,58,50)"/><text x="2.5873%" y="1199.50">to..</text></g><g><title>tokio::runtime::spawner::Spawner::spawn (236 samples, 2.53%)</title><rect x="2.4338%" y="1173" width="2.5303%" height="15" fill="rgb(244,68,36)"/><text x="2.6838%" y="1183.50">to..</text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (236 samples, 2.53%)</title><rect x="2.4338%" y="1157" width="2.5303%" height="15" fill="rgb(232,229,15)"/><text x="2.6838%" y="1167.50">to..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (203 samples, 2.18%)</title><rect x="2.7876%" y="1141" width="2.1765%" height="15" fill="rgb(254,30,23)"/><text x="3.0376%" y="1151.50">t..</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (41 samples, 0.44%)</title><rect x="4.5245%" y="1125" width="0.4396%" height="15" fill="rgb(235,160,14)"/><text x="4.7745%" y="1135.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (41 samples, 0.44%)</title><rect x="4.5245%" y="1109" width="0.4396%" height="15" fill="rgb(212,155,44)"/><text x="4.7745%" y="1119.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (10 samples, 0.11%)</title><rect x="4.8569%" y="1093" width="0.1072%" height="15" fill="rgb(226,2,50)"/><text x="5.1069%" y="1103.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::worker_to_notify (10 samples, 0.11%)</title><rect x="4.8569%" y="1077" width="0.1072%" height="15" fill="rgb(234,177,6)"/><text x="5.1069%" y="1087.50"></text></g><g><title>tokio::runtime::thread_pool::idle::State::unpark_one (1 samples, 0.01%)</title><rect x="4.9534%" y="1061" width="0.0107%" height="15" fill="rgb(217,24,9)"/><text x="5.2034%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="4.9534%" y="1045" width="0.0107%" height="15" fill="rgb(220,13,46)"/><text x="5.2034%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="4.9534%" y="1029" width="0.0107%" height="15" fill="rgb(239,221,27)"/><text x="5.2034%" y="1039.50"></text></g><g><title>&lt;tokio::sync::notify::Notified as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="4.9641%" y="1269" width="0.0107%" height="15" fill="rgb(222,198,25)"/><text x="5.2141%" y="1279.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="4.9748%" y="1269" width="0.0214%" height="15" fill="rgb(211,99,13)"/><text x="5.2248%" y="1279.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="4.9855%" y="1253" width="0.0107%" height="15" fill="rgb(232,111,31)"/><text x="5.2355%" y="1263.50"></text></g><g><title>execve (1 samples, 0.01%)</title><rect x="4.9855%" y="1237" width="0.0107%" height="15" fill="rgb(245,82,37)"/><text x="5.2355%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.9855%" y="1221" width="0.0107%" height="15" fill="rgb(227,149,46)"/><text x="5.2355%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.9855%" y="1205" width="0.0107%" height="15" fill="rgb(218,36,50)"/><text x="5.2355%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.9855%" y="1189" width="0.0107%" height="15" fill="rgb(226,80,48)"/><text x="5.2355%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.9855%" y="1173" width="0.0107%" height="15" fill="rgb(238,224,15)"/><text x="5.2355%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.9855%" y="1157" width="0.0107%" height="15" fill="rgb(241,136,10)"/><text x="5.2355%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.9855%" y="1141" width="0.0107%" height="15" fill="rgb(208,32,45)"/><text x="5.2355%" y="1151.50"></text></g><g><title>[unknown] (19 samples, 0.20%)</title><rect x="4.9962%" y="1269" width="0.2037%" height="15" fill="rgb(207,135,9)"/><text x="5.2462%" y="1279.50"></text></g><g><title>[unknown] (19 samples, 0.20%)</title><rect x="4.9962%" y="1253" width="0.2037%" height="15" fill="rgb(206,86,44)"/><text x="5.2462%" y="1263.50"></text></g><g><title>[unknown] (19 samples, 0.20%)</title><rect x="4.9962%" y="1237" width="0.2037%" height="15" fill="rgb(245,177,15)"/><text x="5.2462%" y="1247.50"></text></g><g><title>[unknown] (19 samples, 0.20%)</title><rect x="4.9962%" y="1221" width="0.2037%" height="15" fill="rgb(206,64,50)"/><text x="5.2462%" y="1231.50"></text></g><g><title>[unknown] (19 samples, 0.20%)</title><rect x="4.9962%" y="1205" width="0.2037%" height="15" fill="rgb(234,36,40)"/><text x="5.2462%" y="1215.50"></text></g><g><title>[unknown] (19 samples, 0.20%)</title><rect x="4.9962%" y="1189" width="0.2037%" height="15" fill="rgb(213,64,8)"/><text x="5.2462%" y="1199.50"></text></g><g><title>[unknown] (19 samples, 0.20%)</title><rect x="4.9962%" y="1173" width="0.2037%" height="15" fill="rgb(210,75,36)"/><text x="5.2462%" y="1183.50"></text></g><g><title>[unknown] (19 samples, 0.20%)</title><rect x="4.9962%" y="1157" width="0.2037%" height="15" fill="rgb(229,88,21)"/><text x="5.2462%" y="1167.50"></text></g><g><title>[unknown] (19 samples, 0.20%)</title><rect x="4.9962%" y="1141" width="0.2037%" height="15" fill="rgb(252,204,47)"/><text x="5.2462%" y="1151.50"></text></g><g><title>[unknown] (18 samples, 0.19%)</title><rect x="5.0070%" y="1125" width="0.1930%" height="15" fill="rgb(208,77,27)"/><text x="5.2570%" y="1135.50"></text></g><g><title>[unknown] (13 samples, 0.14%)</title><rect x="5.0606%" y="1109" width="0.1394%" height="15" fill="rgb(221,76,26)"/><text x="5.3106%" y="1119.50"></text></g><g><title>[unknown] (12 samples, 0.13%)</title><rect x="5.0713%" y="1093" width="0.1287%" height="15" fill="rgb(225,139,18)"/><text x="5.3213%" y="1103.50"></text></g><g><title>[unknown] (12 samples, 0.13%)</title><rect x="5.0713%" y="1077" width="0.1287%" height="15" fill="rgb(230,137,11)"/><text x="5.3213%" y="1087.50"></text></g><g><title>[unknown] (8 samples, 0.09%)</title><rect x="5.1142%" y="1061" width="0.0858%" height="15" fill="rgb(212,28,1)"/><text x="5.3642%" y="1071.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="5.1249%" y="1045" width="0.0751%" height="15" fill="rgb(248,164,17)"/><text x="5.3749%" y="1055.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="5.1463%" y="1029" width="0.0536%" height="15" fill="rgb(222,171,42)"/><text x="5.3963%" y="1039.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="5.2000%" y="1269" width="0.0107%" height="15" fill="rgb(243,84,45)"/><text x="5.4500%" y="1279.50"></text></g><g><title>__clock_gettime (1 samples, 0.01%)</title><rect x="5.2107%" y="1269" width="0.0107%" height="15" fill="rgb(252,49,23)"/><text x="5.4607%" y="1279.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="5.2214%" y="1269" width="0.0107%" height="15" fill="rgb(215,19,7)"/><text x="5.4714%" y="1279.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry (1 samples, 0.01%)</title><rect x="5.2321%" y="1269" width="0.0107%" height="15" fill="rgb(238,81,41)"/><text x="5.4821%" y="1279.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="5.5645%" y="1013" width="0.0214%" height="15" fill="rgb(210,199,37)"/><text x="5.8145%" y="1023.50"></text></g><g><title>tokio::park::thread::clone (2 samples, 0.02%)</title><rect x="5.5645%" y="997" width="0.0214%" height="15" fill="rgb(244,192,49)"/><text x="5.8145%" y="1007.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="5.5645%" y="981" width="0.0214%" height="15" fill="rgb(226,211,11)"/><text x="5.8145%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.02%)</title><rect x="5.5645%" y="965" width="0.0214%" height="15" fill="rgb(236,162,54)"/><text x="5.8145%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.02%)</title><rect x="5.5645%" y="949" width="0.0214%" height="15" fill="rgb(220,229,9)"/><text x="5.8145%" y="959.50"></text></g><g><title>core::mem::drop (14 samples, 0.15%)</title><rect x="5.5859%" y="1013" width="0.1501%" height="15" fill="rgb(250,87,22)"/><text x="5.8359%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::util::linked_list::LinkedList&lt;tokio::sync::notify::Waiter,tokio::sync::notify::Waiter&gt;&gt;&gt; (14 samples, 0.15%)</title><rect x="5.5859%" y="997" width="0.1501%" height="15" fill="rgb(239,43,17)"/><text x="5.8359%" y="1007.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.15%)</title><rect x="5.5859%" y="981" width="0.1501%" height="15" fill="rgb(231,177,25)"/><text x="5.8359%" y="991.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (14 samples, 0.15%)</title><rect x="5.5859%" y="965" width="0.1501%" height="15" fill="rgb(219,179,1)"/><text x="5.8359%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (14 samples, 0.15%)</title><rect x="5.5859%" y="949" width="0.1501%" height="15" fill="rgb(238,219,53)"/><text x="5.8359%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (14 samples, 0.15%)</title><rect x="5.5859%" y="933" width="0.1501%" height="15" fill="rgb(232,167,36)"/><text x="5.8359%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (7 samples, 0.08%)</title><rect x="5.7360%" y="1013" width="0.0751%" height="15" fill="rgb(244,19,51)"/><text x="5.9860%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (7 samples, 0.08%)</title><rect x="5.7360%" y="997" width="0.0751%" height="15" fill="rgb(224,6,22)"/><text x="5.9860%" y="1007.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (16 samples, 0.17%)</title><rect x="5.8111%" y="1013" width="0.1715%" height="15" fill="rgb(224,145,5)"/><text x="6.0611%" y="1023.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (16 samples, 0.17%)</title><rect x="5.8111%" y="997" width="0.1715%" height="15" fill="rgb(234,130,49)"/><text x="6.0611%" y="1007.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (16 samples, 0.17%)</title><rect x="5.8111%" y="981" width="0.1715%" height="15" fill="rgb(254,6,2)"/><text x="6.0611%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (16 samples, 0.17%)</title><rect x="5.8111%" y="965" width="0.1715%" height="15" fill="rgb(208,96,46)"/><text x="6.0611%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (16 samples, 0.17%)</title><rect x="5.8111%" y="949" width="0.1715%" height="15" fill="rgb(239,3,39)"/><text x="6.0611%" y="959.50"></text></g><g><title>&lt;tokio::sync::notify::Notified as core::future::future::Future&gt;::poll (41 samples, 0.44%)</title><rect x="5.5645%" y="1029" width="0.4396%" height="15" fill="rgb(233,210,1)"/><text x="5.8145%" y="1039.50"></text></g><g><title>tokio::sync::notify::Notified::project (2 samples, 0.02%)</title><rect x="5.9826%" y="1013" width="0.0214%" height="15" fill="rgb(244,137,37)"/><text x="6.2326%" y="1023.50"></text></g><g><title>[libc-2.31.so] (17 samples, 0.18%)</title><rect x="6.0041%" y="1029" width="0.1823%" height="15" fill="rgb(240,136,2)"/><text x="6.2541%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::notify::Notified&gt; (1 samples, 0.01%)</title><rect x="6.1863%" y="1029" width="0.0107%" height="15" fill="rgb(239,18,37)"/><text x="6.4363%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;tokio::sync::notify::Waiter&gt;&gt; (1 samples, 0.01%)</title><rect x="6.1863%" y="1013" width="0.0107%" height="15" fill="rgb(218,185,22)"/><text x="6.4363%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::notify::Waiter&gt; (1 samples, 0.01%)</title><rect x="6.1863%" y="997" width="0.0107%" height="15" fill="rgb(225,218,4)"/><text x="6.4363%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (1 samples, 0.01%)</title><rect x="6.1863%" y="981" width="0.0107%" height="15" fill="rgb(230,182,32)"/><text x="6.4363%" y="991.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.08%)</title><rect x="6.2185%" y="1013" width="0.0751%" height="15" fill="rgb(242,56,43)"/><text x="6.4685%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (22 samples, 0.24%)</title><rect x="6.2936%" y="1013" width="0.2359%" height="15" fill="rgb(233,99,24)"/><text x="6.5436%" y="1023.50"></text></g><g><title>core::ptr::read (22 samples, 0.24%)</title><rect x="6.2936%" y="997" width="0.2359%" height="15" fill="rgb(234,209,42)"/><text x="6.5436%" y="1007.50"></text></g><g><title>[libc-2.31.so] (21 samples, 0.23%)</title><rect x="6.3043%" y="981" width="0.2252%" height="15" fill="rgb(227,7,12)"/><text x="6.5543%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (2 samples, 0.02%)</title><rect x="6.5294%" y="1013" width="0.0214%" height="15" fill="rgb(245,203,43)"/><text x="6.7794%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.02%)</title><rect x="6.5294%" y="997" width="0.0214%" height="15" fill="rgb(238,205,33)"/><text x="6.7794%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (12 samples, 0.13%)</title><rect x="6.5509%" y="1013" width="0.1287%" height="15" fill="rgb(231,56,7)"/><text x="6.8009%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_load (12 samples, 0.13%)</title><rect x="6.5509%" y="997" width="0.1287%" height="15" fill="rgb(244,186,29)"/><text x="6.8009%" y="1007.50"></text></g><g><title>core::sync::atomic::fence (10 samples, 0.11%)</title><rect x="6.6795%" y="1013" width="0.1072%" height="15" fill="rgb(234,111,31)"/><text x="6.9295%" y="1023.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::pop (56 samples, 0.60%)</title><rect x="6.1971%" y="1029" width="0.6004%" height="15" fill="rgb(241,149,10)"/><text x="6.4471%" y="1039.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::spin (1 samples, 0.01%)</title><rect x="6.7867%" y="1013" width="0.0107%" height="15" fill="rgb(249,206,44)"/><text x="7.0367%" y="1023.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (1 samples, 0.01%)</title><rect x="6.7867%" y="997" width="0.0107%" height="15" fill="rgb(251,153,30)"/><text x="7.0367%" y="1007.50"></text></g><g><title>core::hint::spin_loop (1 samples, 0.01%)</title><rect x="6.7867%" y="981" width="0.0107%" height="15" fill="rgb(239,152,38)"/><text x="7.0367%" y="991.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.01%)</title><rect x="6.7867%" y="965" width="0.0107%" height="15" fill="rgb(249,139,47)"/><text x="7.0367%" y="975.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (143 samples, 1.53%)</title><rect x="5.2965%" y="1061" width="1.5332%" height="15" fill="rgb(244,64,35)"/><text x="5.5465%" y="1071.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::run::{{closure}} (143 samples, 1.53%)</title><rect x="5.2965%" y="1045" width="1.5332%" height="15" fill="rgb(216,46,15)"/><text x="5.5465%" y="1055.50"></text></g><g><title>tokio::sync::notify::Notify::notified (3 samples, 0.03%)</title><rect x="6.7975%" y="1029" width="0.0322%" height="15" fill="rgb(250,74,19)"/><text x="7.0475%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="6.8189%" y="1013" width="0.0107%" height="15" fill="rgb(249,42,33)"/><text x="7.0689%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="6.8189%" y="997" width="0.0107%" height="15" fill="rgb(242,149,17)"/><text x="7.0689%" y="1007.50"></text></g><g><title>rho_runtime::main (220 samples, 2.36%)</title><rect x="5.2428%" y="1269" width="2.3587%" height="15" fill="rgb(244,29,21)"/><text x="5.4928%" y="1279.50">r..</text></g><g><title>tokio::runtime::Runtime::block_on (220 samples, 2.36%)</title><rect x="5.2428%" y="1253" width="2.3587%" height="15" fill="rgb(220,130,37)"/><text x="5.4928%" y="1263.50">t..</text></g><g><title>tokio::runtime::thread_pool::ThreadPool::block_on (220 samples, 2.36%)</title><rect x="5.2428%" y="1237" width="2.3587%" height="15" fill="rgb(211,67,2)"/><text x="5.4928%" y="1247.50">t..</text></g><g><title>tokio::runtime::enter::Enter::block_on (220 samples, 2.36%)</title><rect x="5.2428%" y="1221" width="2.3587%" height="15" fill="rgb(235,68,52)"/><text x="5.4928%" y="1231.50">t..</text></g><g><title>tokio::park::thread::CachedParkThread::block_on (220 samples, 2.36%)</title><rect x="5.2428%" y="1205" width="2.3587%" height="15" fill="rgb(246,142,3)"/><text x="5.4928%" y="1215.50">t..</text></g><g><title>tokio::coop::budget (220 samples, 2.36%)</title><rect x="5.2428%" y="1189" width="2.3587%" height="15" fill="rgb(241,25,7)"/><text x="5.4928%" y="1199.50">t..</text></g><g><title>tokio::coop::with_budget (220 samples, 2.36%)</title><rect x="5.2428%" y="1173" width="2.3587%" height="15" fill="rgb(242,119,39)"/><text x="5.4928%" y="1183.50">t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (220 samples, 2.36%)</title><rect x="5.2428%" y="1157" width="2.3587%" height="15" fill="rgb(241,98,45)"/><text x="5.4928%" y="1167.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (220 samples, 2.36%)</title><rect x="5.2428%" y="1141" width="2.3587%" height="15" fill="rgb(254,28,30)"/><text x="5.4928%" y="1151.50">s..</text></g><g><title>tokio::coop::with_budget::{{closure}} (220 samples, 2.36%)</title><rect x="5.2428%" y="1125" width="2.3587%" height="15" fill="rgb(241,142,54)"/><text x="5.4928%" y="1135.50">t..</text></g><g><title>tokio::park::thread::CachedParkThread::block_on::{{closure}} (220 samples, 2.36%)</title><rect x="5.2428%" y="1109" width="2.3587%" height="15" fill="rgb(222,85,15)"/><text x="5.4928%" y="1119.50">t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (220 samples, 2.36%)</title><rect x="5.2428%" y="1093" width="2.3587%" height="15" fill="rgb(210,85,47)"/><text x="5.4928%" y="1103.50">&lt;..</text></g><g><title>rho_runtime::run::{{closure}} (219 samples, 2.35%)</title><rect x="5.2536%" y="1077" width="2.3480%" height="15" fill="rgb(224,206,25)"/><text x="5.5036%" y="1087.50">r..</text></g><g><title>rho_runtime::storage::coordinator::Coordinator::create (72 samples, 0.77%)</title><rect x="6.8296%" y="1061" width="0.7720%" height="15" fill="rgb(243,201,19)"/><text x="7.0796%" y="1071.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::new (72 samples, 0.77%)</title><rect x="6.8296%" y="1045" width="0.7720%" height="15" fill="rgb(236,59,4)"/><text x="7.0796%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (72 samples, 0.77%)</title><rect x="6.8296%" y="1029" width="0.7720%" height="15" fill="rgb(254,179,45)"/><text x="7.0796%" y="1039.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[I]&gt; as core::iter::traits::collect::FromIterator&lt;I&gt;&gt;::from_iter (72 samples, 0.77%)</title><rect x="6.8296%" y="1013" width="0.7720%" height="15" fill="rgb(226,14,10)"/><text x="7.0796%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (72 samples, 0.77%)</title><rect x="6.8296%" y="997" width="0.7720%" height="15" fill="rgb(244,27,41)"/><text x="7.0796%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (72 samples, 0.77%)</title><rect x="6.8296%" y="981" width="0.7720%" height="15" fill="rgb(235,35,32)"/><text x="7.0796%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (72 samples, 0.77%)</title><rect x="6.8296%" y="965" width="0.7720%" height="15" fill="rgb(218,68,31)"/><text x="7.0796%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (72 samples, 0.77%)</title><rect x="6.8296%" y="949" width="0.7720%" height="15" fill="rgb(207,120,37)"/><text x="7.0796%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (72 samples, 0.77%)</title><rect x="6.8296%" y="933" width="0.7720%" height="15" fill="rgb(227,98,0)"/><text x="7.0796%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (72 samples, 0.77%)</title><rect x="6.8296%" y="917" width="0.7720%" height="15" fill="rgb(207,7,3)"/><text x="7.0796%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (72 samples, 0.77%)</title><rect x="6.8296%" y="901" width="0.7720%" height="15" fill="rgb(206,98,19)"/><text x="7.0796%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (72 samples, 0.77%)</title><rect x="6.8296%" y="885" width="0.7720%" height="15" fill="rgb(217,5,26)"/><text x="7.0796%" y="895.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (72 samples, 0.77%)</title><rect x="6.8296%" y="869" width="0.7720%" height="15" fill="rgb(235,190,38)"/><text x="7.0796%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (72 samples, 0.77%)</title><rect x="6.8296%" y="853" width="0.7720%" height="15" fill="rgb(247,86,24)"/><text x="7.0796%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (72 samples, 0.77%)</title><rect x="6.8296%" y="837" width="0.7720%" height="15" fill="rgb(205,101,16)"/><text x="7.0796%" y="847.50"></text></g><g><title>core::ptr::write (72 samples, 0.77%)</title><rect x="6.8296%" y="821" width="0.7720%" height="15" fill="rgb(246,168,33)"/><text x="7.0796%" y="831.50"></text></g><g><title>[unknown] (59 samples, 0.63%)</title><rect x="6.9690%" y="805" width="0.6326%" height="15" fill="rgb(231,114,1)"/><text x="7.2190%" y="815.50"></text></g><g><title>[unknown] (57 samples, 0.61%)</title><rect x="6.9905%" y="789" width="0.6111%" height="15" fill="rgb(207,184,53)"/><text x="7.2405%" y="799.50"></text></g><g><title>[unknown] (57 samples, 0.61%)</title><rect x="6.9905%" y="773" width="0.6111%" height="15" fill="rgb(224,95,51)"/><text x="7.2405%" y="783.50"></text></g><g><title>[unknown] (57 samples, 0.61%)</title><rect x="6.9905%" y="757" width="0.6111%" height="15" fill="rgb(212,188,45)"/><text x="7.2405%" y="767.50"></text></g><g><title>[unknown] (55 samples, 0.59%)</title><rect x="7.0119%" y="741" width="0.5897%" height="15" fill="rgb(223,154,38)"/><text x="7.2619%" y="751.50"></text></g><g><title>[unknown] (52 samples, 0.56%)</title><rect x="7.0441%" y="725" width="0.5575%" height="15" fill="rgb(251,22,52)"/><text x="7.2941%" y="735.50"></text></g><g><title>[unknown] (48 samples, 0.51%)</title><rect x="7.0870%" y="709" width="0.5146%" height="15" fill="rgb(229,209,22)"/><text x="7.3370%" y="719.50"></text></g><g><title>[unknown] (42 samples, 0.45%)</title><rect x="7.1513%" y="693" width="0.4503%" height="15" fill="rgb(234,138,34)"/><text x="7.4013%" y="703.50"></text></g><g><title>[unknown] (21 samples, 0.23%)</title><rect x="7.3764%" y="677" width="0.2252%" height="15" fill="rgb(212,95,11)"/><text x="7.6264%" y="687.50"></text></g><g><title>[unknown] (16 samples, 0.17%)</title><rect x="7.4300%" y="661" width="0.1715%" height="15" fill="rgb(240,179,47)"/><text x="7.6800%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;rho_runtime::storage::coordinator::TransitPort&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="7.6123%" y="1253" width="0.0107%" height="15" fill="rgb(240,163,11)"/><text x="7.8623%" y="1263.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.12%)</title><rect x="7.6445%" y="1173" width="0.1179%" height="15" fill="rgb(236,37,12)"/><text x="7.8945%" y="1183.50"></text></g><g><title>[libc-2.31.so] (16 samples, 0.17%)</title><rect x="7.7624%" y="1157" width="0.1715%" height="15" fill="rgb(232,164,16)"/><text x="8.0124%" y="1167.50"></text></g><g><title>[libc-2.31.so] (13 samples, 0.14%)</title><rect x="7.9340%" y="1141" width="0.1394%" height="15" fill="rgb(244,205,15)"/><text x="8.1840%" y="1151.50"></text></g><g><title>__rg_alloc (1 samples, 0.01%)</title><rect x="8.0733%" y="1077" width="0.0107%" height="15" fill="rgb(223,117,47)"/><text x="8.3233%" y="1087.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.01%)</title><rect x="8.0733%" y="1061" width="0.0107%" height="15" fill="rgb(244,107,35)"/><text x="8.3233%" y="1071.50"></text></g><g><title>tcache_alloc_large (1 samples, 0.01%)</title><rect x="8.0841%" y="981" width="0.0107%" height="15" fill="rgb(205,140,8)"/><text x="8.3341%" y="991.50"></text></g><g><title>tcache_event (1 samples, 0.01%)</title><rect x="8.0841%" y="965" width="0.0107%" height="15" fill="rgb(228,84,46)"/><text x="8.3341%" y="975.50"></text></g><g><title>ticker_tick (1 samples, 0.01%)</title><rect x="8.0841%" y="949" width="0.0107%" height="15" fill="rgb(254,188,9)"/><text x="8.3341%" y="959.50"></text></g><g><title>ticker_tick (1 samples, 0.01%)</title><rect x="8.0841%" y="933" width="0.0107%" height="15" fill="rgb(206,112,54)"/><text x="8.3341%" y="943.50"></text></g><g><title>ticker_ticks (1 samples, 0.01%)</title><rect x="8.0841%" y="917" width="0.0107%" height="15" fill="rgb(216,84,49)"/><text x="8.3341%" y="927.50"></text></g><g><title>ticker_fixup (1 samples, 0.01%)</title><rect x="8.0841%" y="901" width="0.0107%" height="15" fill="rgb(214,194,35)"/><text x="8.3341%" y="911.50"></text></g><g><title>arena_bin_nonfull_slab_get (11 samples, 0.12%)</title><rect x="8.1162%" y="917" width="0.1179%" height="15" fill="rgb(249,28,3)"/><text x="8.3662%" y="927.50"></text></g><g><title>arena_bin_slabs_nonfull_tryget (11 samples, 0.12%)</title><rect x="8.1162%" y="901" width="0.1179%" height="15" fill="rgb(222,56,52)"/><text x="8.3662%" y="911.50"></text></g><g><title>_rjem_je_extent_heap_remove_first (10 samples, 0.11%)</title><rect x="8.1269%" y="885" width="0.1072%" height="15" fill="rgb(245,217,50)"/><text x="8.3769%" y="895.50"></text></g><g><title>extent_snad_comp (2 samples, 0.02%)</title><rect x="8.2127%" y="869" width="0.0214%" height="15" fill="rgb(213,201,24)"/><text x="8.4627%" y="879.50"></text></g><g><title>extent_snad_comp (2 samples, 0.02%)</title><rect x="8.2127%" y="853" width="0.0214%" height="15" fill="rgb(248,116,28)"/><text x="8.4627%" y="863.50"></text></g><g><title>extent_ad_comp (2 samples, 0.02%)</title><rect x="8.2127%" y="837" width="0.0214%" height="15" fill="rgb(219,72,43)"/><text x="8.4627%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.2234%" y="821" width="0.0107%" height="15" fill="rgb(209,138,14)"/><text x="8.4734%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.2234%" y="805" width="0.0107%" height="15" fill="rgb(222,18,33)"/><text x="8.4734%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.2234%" y="789" width="0.0107%" height="15" fill="rgb(213,199,7)"/><text x="8.4734%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.2234%" y="773" width="0.0107%" height="15" fill="rgb(250,110,10)"/><text x="8.4734%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.2234%" y="757" width="0.0107%" height="15" fill="rgb(248,123,6)"/><text x="8.4734%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.2234%" y="741" width="0.0107%" height="15" fill="rgb(206,91,31)"/><text x="8.4734%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.2234%" y="725" width="0.0107%" height="15" fill="rgb(211,154,13)"/><text x="8.4734%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.2234%" y="709" width="0.0107%" height="15" fill="rgb(225,148,7)"/><text x="8.4734%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.2234%" y="693" width="0.0107%" height="15" fill="rgb(220,160,43)"/><text x="8.4734%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="8.2234%" y="677" width="0.0107%" height="15" fill="rgb(213,52,39)"/><text x="8.4734%" y="687.50"></text></g><g><title>arena_bin_slabs_full_insert (1 samples, 0.01%)</title><rect x="8.2342%" y="917" width="0.0107%" height="15" fill="rgb(243,137,7)"/><text x="8.4842%" y="927.50"></text></g><g><title>arena_bin_malloc_hard (14 samples, 0.15%)</title><rect x="8.1162%" y="933" width="0.1501%" height="15" fill="rgb(230,79,13)"/><text x="8.3662%" y="943.50"></text></g><g><title>arena_slab_reg_alloc (2 samples, 0.02%)</title><rect x="8.2449%" y="917" width="0.0214%" height="15" fill="rgb(247,105,23)"/><text x="8.4949%" y="927.50"></text></g><g><title>bitmap_sfu (1 samples, 0.01%)</title><rect x="8.2556%" y="901" width="0.0107%" height="15" fill="rgb(223,179,41)"/><text x="8.5056%" y="911.50"></text></g><g><title>ffs_lu (1 samples, 0.01%)</title><rect x="8.2556%" y="885" width="0.0107%" height="15" fill="rgb(218,9,34)"/><text x="8.5056%" y="895.50"></text></g><g><title>bitmap_set (1 samples, 0.01%)</title><rect x="8.2770%" y="901" width="0.0107%" height="15" fill="rgb(222,106,8)"/><text x="8.5270%" y="911.50"></text></g><g><title>arena_slab_reg_alloc (3 samples, 0.03%)</title><rect x="8.2663%" y="933" width="0.0322%" height="15" fill="rgb(211,220,0)"/><text x="8.5163%" y="943.50"></text></g><g><title>bitmap_sfu (2 samples, 0.02%)</title><rect x="8.2770%" y="917" width="0.0214%" height="15" fill="rgb(229,52,16)"/><text x="8.5270%" y="927.50"></text></g><g><title>ffs_lu (1 samples, 0.01%)</title><rect x="8.2878%" y="901" width="0.0107%" height="15" fill="rgb(212,155,18)"/><text x="8.5378%" y="911.50"></text></g><g><title>extent_nfree_get (1 samples, 0.01%)</title><rect x="8.2985%" y="933" width="0.0107%" height="15" fill="rgb(242,21,14)"/><text x="8.5485%" y="943.50"></text></g><g><title>malloc_mutex_lock (4 samples, 0.04%)</title><rect x="8.3092%" y="933" width="0.0429%" height="15" fill="rgb(222,19,48)"/><text x="8.5592%" y="943.50"></text></g><g><title>malloc_mutex_trylock_final (4 samples, 0.04%)</title><rect x="8.3092%" y="917" width="0.0429%" height="15" fill="rgb(232,45,27)"/><text x="8.5592%" y="927.50"></text></g><g><title>__GI___pthread_mutex_trylock (4 samples, 0.04%)</title><rect x="8.3092%" y="901" width="0.0429%" height="15" fill="rgb(249,103,42)"/><text x="8.5592%" y="911.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (25 samples, 0.27%)</title><rect x="8.0948%" y="965" width="0.2680%" height="15" fill="rgb(246,81,33)"/><text x="8.3448%" y="975.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (25 samples, 0.27%)</title><rect x="8.0948%" y="949" width="0.2680%" height="15" fill="rgb(252,33,42)"/><text x="8.3448%" y="959.50"></text></g><g><title>malloc_mutex_unlock (1 samples, 0.01%)</title><rect x="8.3521%" y="933" width="0.0107%" height="15" fill="rgb(209,212,41)"/><text x="8.6021%" y="943.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="8.3521%" y="917" width="0.0107%" height="15" fill="rgb(207,154,6)"/><text x="8.6021%" y="927.50"></text></g><g><title>imalloc_body (29 samples, 0.31%)</title><rect x="8.0841%" y="1045" width="0.3109%" height="15" fill="rgb(223,64,47)"/><text x="8.3341%" y="1055.50"></text></g><g><title>imalloc_no_sample (29 samples, 0.31%)</title><rect x="8.0841%" y="1029" width="0.3109%" height="15" fill="rgb(211,161,38)"/><text x="8.3341%" y="1039.50"></text></g><g><title>iallocztm (29 samples, 0.31%)</title><rect x="8.0841%" y="1013" width="0.3109%" height="15" fill="rgb(219,138,40)"/><text x="8.3341%" y="1023.50"></text></g><g><title>arena_malloc (29 samples, 0.31%)</title><rect x="8.0841%" y="997" width="0.3109%" height="15" fill="rgb(241,228,46)"/><text x="8.3341%" y="1007.50"></text></g><g><title>tcache_alloc_small (28 samples, 0.30%)</title><rect x="8.0948%" y="981" width="0.3002%" height="15" fill="rgb(223,209,38)"/><text x="8.3448%" y="991.50"></text></g><g><title>cache_bin_alloc_easy (3 samples, 0.03%)</title><rect x="8.3628%" y="965" width="0.0322%" height="15" fill="rgb(236,164,45)"/><text x="8.6128%" y="975.50"></text></g><g><title>tokio::runtime::task::joinable (71 samples, 0.76%)</title><rect x="7.6445%" y="1205" width="0.7612%" height="15" fill="rgb(231,15,5)"/><text x="7.8945%" y="1215.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (71 samples, 0.76%)</title><rect x="7.6445%" y="1189" width="0.7612%" height="15" fill="rgb(252,35,15)"/><text x="7.8945%" y="1199.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (60 samples, 0.64%)</title><rect x="7.7624%" y="1173" width="0.6433%" height="15" fill="rgb(248,181,18)"/><text x="8.0124%" y="1183.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (44 samples, 0.47%)</title><rect x="7.9340%" y="1157" width="0.4717%" height="15" fill="rgb(233,39,42)"/><text x="8.1840%" y="1167.50"></text></g><g><title>alloc::alloc::exchange_malloc (31 samples, 0.33%)</title><rect x="8.0733%" y="1141" width="0.3324%" height="15" fill="rgb(238,110,33)"/><text x="8.3233%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (31 samples, 0.33%)</title><rect x="8.0733%" y="1125" width="0.3324%" height="15" fill="rgb(233,195,10)"/><text x="8.3233%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (31 samples, 0.33%)</title><rect x="8.0733%" y="1109" width="0.3324%" height="15" fill="rgb(254,105,3)"/><text x="8.3233%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (31 samples, 0.33%)</title><rect x="8.0733%" y="1093" width="0.3324%" height="15" fill="rgb(221,225,9)"/><text x="8.3233%" y="1103.50"></text></g><g><title>_rjem_mallocx (30 samples, 0.32%)</title><rect x="8.0841%" y="1077" width="0.3216%" height="15" fill="rgb(224,227,45)"/><text x="8.3341%" y="1087.50"></text></g><g><title>imalloc (30 samples, 0.32%)</title><rect x="8.0841%" y="1061" width="0.3216%" height="15" fill="rgb(229,198,43)"/><text x="8.3341%" y="1071.50"></text></g><g><title>tsd_fetch (1 samples, 0.01%)</title><rect x="8.3950%" y="1045" width="0.0107%" height="15" fill="rgb(206,209,35)"/><text x="8.6450%" y="1055.50"></text></g><g><title>tsd_fetch_impl (1 samples, 0.01%)</title><rect x="8.3950%" y="1029" width="0.0107%" height="15" fill="rgb(245,195,53)"/><text x="8.6450%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (6 samples, 0.06%)</title><rect x="8.4379%" y="1157" width="0.0643%" height="15" fill="rgb(240,92,26)"/><text x="8.6879%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_swap (6 samples, 0.06%)</title><rect x="8.4379%" y="1141" width="0.0643%" height="15" fill="rgb(207,40,23)"/><text x="8.6879%" y="1151.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (10 samples, 0.11%)</title><rect x="8.4057%" y="1189" width="0.1072%" height="15" fill="rgb(223,111,35)"/><text x="8.6557%" y="1199.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (9 samples, 0.10%)</title><rect x="8.4164%" y="1173" width="0.0965%" height="15" fill="rgb(229,147,28)"/><text x="8.6664%" y="1183.50"></text></g><g><title>tokio::runtime::park::Inner::unpark_condvar (1 samples, 0.01%)</title><rect x="8.5022%" y="1157" width="0.0107%" height="15" fill="rgb(211,29,28)"/><text x="8.7522%" y="1167.50"></text></g><g><title>core::mem::drop (1 samples, 0.01%)</title><rect x="8.5022%" y="1141" width="0.0107%" height="15" fill="rgb(228,72,33)"/><text x="8.7522%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,()&gt;&gt; (1 samples, 0.01%)</title><rect x="8.5022%" y="1125" width="0.0107%" height="15" fill="rgb(205,214,31)"/><text x="8.7522%" y="1135.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="8.5022%" y="1109" width="0.0107%" height="15" fill="rgb(224,111,15)"/><text x="8.7522%" y="1119.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.01%)</title><rect x="8.5022%" y="1093" width="0.0107%" height="15" fill="rgb(253,21,26)"/><text x="8.7522%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.01%)</title><rect x="8.5022%" y="1077" width="0.0107%" height="15" fill="rgb(245,139,43)"/><text x="8.7522%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="8.5022%" y="1061" width="0.0107%" height="15" fill="rgb(252,170,7)"/><text x="8.7522%" y="1071.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (28 samples, 0.30%)</title><rect x="8.5129%" y="1157" width="0.3002%" height="15" fill="rgb(231,118,14)"/><text x="8.7629%" y="1167.50"></text></g><g><title>syscall (28 samples, 0.30%)</title><rect x="8.5129%" y="1141" width="0.3002%" height="15" fill="rgb(238,83,0)"/><text x="8.7629%" y="1151.50"></text></g><g><title>[unknown] (27 samples, 0.29%)</title><rect x="8.5236%" y="1125" width="0.2895%" height="15" fill="rgb(221,39,39)"/><text x="8.7736%" y="1135.50"></text></g><g><title>[unknown] (26 samples, 0.28%)</title><rect x="8.5344%" y="1109" width="0.2788%" height="15" fill="rgb(222,119,46)"/><text x="8.7844%" y="1119.50"></text></g><g><title>[unknown] (26 samples, 0.28%)</title><rect x="8.5344%" y="1093" width="0.2788%" height="15" fill="rgb(222,165,49)"/><text x="8.7844%" y="1103.50"></text></g><g><title>[unknown] (26 samples, 0.28%)</title><rect x="8.5344%" y="1077" width="0.2788%" height="15" fill="rgb(219,113,52)"/><text x="8.7844%" y="1087.50"></text></g><g><title>[unknown] (26 samples, 0.28%)</title><rect x="8.5344%" y="1061" width="0.2788%" height="15" fill="rgb(214,7,15)"/><text x="8.7844%" y="1071.50"></text></g><g><title>[unknown] (22 samples, 0.24%)</title><rect x="8.5772%" y="1045" width="0.2359%" height="15" fill="rgb(235,32,4)"/><text x="8.8272%" y="1055.50"></text></g><g><title>[unknown] (18 samples, 0.19%)</title><rect x="8.6201%" y="1029" width="0.1930%" height="15" fill="rgb(238,90,54)"/><text x="8.8701%" y="1039.50"></text></g><g><title>[unknown] (15 samples, 0.16%)</title><rect x="8.6523%" y="1013" width="0.1608%" height="15" fill="rgb(213,208,19)"/><text x="8.9023%" y="1023.50"></text></g><g><title>[unknown] (11 samples, 0.12%)</title><rect x="8.6952%" y="997" width="0.1179%" height="15" fill="rgb(233,156,4)"/><text x="8.9452%" y="1007.50"></text></g><g><title>[unknown] (7 samples, 0.08%)</title><rect x="8.7381%" y="981" width="0.0751%" height="15" fill="rgb(207,194,5)"/><text x="8.9881%" y="991.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="8.7810%" y="965" width="0.0322%" height="15" fill="rgb(206,111,30)"/><text x="9.0310%" y="975.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="8.7917%" y="949" width="0.0214%" height="15" fill="rgb(243,70,54)"/><text x="9.0417%" y="959.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (31 samples, 0.33%)</title><rect x="8.5129%" y="1189" width="0.3324%" height="15" fill="rgb(242,28,8)"/><text x="8.7629%" y="1199.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (31 samples, 0.33%)</title><rect x="8.5129%" y="1173" width="0.3324%" height="15" fill="rgb(219,106,18)"/><text x="8.7629%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.03%)</title><rect x="8.8131%" y="1157" width="0.0322%" height="15" fill="rgb(244,222,10)"/><text x="9.0631%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.03%)</title><rect x="8.8131%" y="1141" width="0.0322%" height="15" fill="rgb(236,179,52)"/><text x="9.0631%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="8.8453%" y="1173" width="0.0107%" height="15" fill="rgb(213,23,39)"/><text x="9.0953%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="8.8453%" y="1157" width="0.0107%" height="15" fill="rgb(238,48,10)"/><text x="9.0953%" y="1167.50"></text></g><g><title>tokio::runtime::thread_pool::worker::CURRENT::FOO::__getit (1 samples, 0.01%)</title><rect x="8.8453%" y="1141" width="0.0107%" height="15" fill="rgb(251,196,23)"/><text x="9.0953%" y="1151.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="8.8453%" y="1125" width="0.0107%" height="15" fill="rgb(250,152,24)"/><text x="9.0953%" y="1135.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="8.8453%" y="1109" width="0.0107%" height="15" fill="rgb(209,150,17)"/><text x="9.0953%" y="1119.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="8.8453%" y="1093" width="0.0107%" height="15" fill="rgb(234,202,34)"/><text x="9.0953%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::queue::Pointers&gt;&gt; (5 samples, 0.05%)</title><rect x="8.8882%" y="1141" width="0.0536%" height="15" fill="rgb(253,148,53)"/><text x="9.1382%" y="1151.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="8.8882%" y="1125" width="0.0536%" height="15" fill="rgb(218,129,16)"/><text x="9.1382%" y="1135.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (5 samples, 0.05%)</title><rect x="8.8882%" y="1109" width="0.0536%" height="15" fill="rgb(216,85,19)"/><text x="9.1382%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (5 samples, 0.05%)</title><rect x="8.8882%" y="1093" width="0.0536%" height="15" fill="rgb(235,228,7)"/><text x="9.1382%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (5 samples, 0.05%)</title><rect x="8.8882%" y="1077" width="0.0536%" height="15" fill="rgb(245,175,0)"/><text x="9.1382%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (41 samples, 0.44%)</title><rect x="8.9525%" y="1093" width="0.4396%" height="15" fill="rgb(208,168,36)"/><text x="9.2025%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (41 samples, 0.44%)</title><rect x="8.9525%" y="1077" width="0.4396%" height="15" fill="rgb(246,171,24)"/><text x="9.2025%" y="1087.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::push (51 samples, 0.55%)</title><rect x="8.8560%" y="1157" width="0.5468%" height="15" fill="rgb(215,142,24)"/><text x="9.1060%" y="1167.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (43 samples, 0.46%)</title><rect x="8.9418%" y="1141" width="0.4610%" height="15" fill="rgb(250,187,7)"/><text x="9.1918%" y="1151.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (43 samples, 0.46%)</title><rect x="8.9418%" y="1125" width="0.4610%" height="15" fill="rgb(228,66,33)"/><text x="9.1918%" y="1135.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (43 samples, 0.46%)</title><rect x="8.9418%" y="1109" width="0.4610%" height="15" fill="rgb(234,215,21)"/><text x="9.1918%" y="1119.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (1 samples, 0.01%)</title><rect x="9.3921%" y="1093" width="0.0107%" height="15" fill="rgb(222,191,20)"/><text x="9.6421%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (3 samples, 0.03%)</title><rect x="9.4028%" y="1125" width="0.0322%" height="15" fill="rgb(245,79,54)"/><text x="9.6528%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;usize&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="9.4350%" y="1125" width="0.0214%" height="15" fill="rgb(240,10,37)"/><text x="9.6850%" y="1135.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="9.4350%" y="1109" width="0.0214%" height="15" fill="rgb(214,192,32)"/><text x="9.6850%" y="1119.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (2 samples, 0.02%)</title><rect x="9.4350%" y="1093" width="0.0214%" height="15" fill="rgb(209,36,54)"/><text x="9.6850%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (2 samples, 0.02%)</title><rect x="9.4350%" y="1077" width="0.0214%" height="15" fill="rgb(220,10,11)"/><text x="9.6850%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.02%)</title><rect x="9.4350%" y="1061" width="0.0214%" height="15" fill="rgb(221,106,17)"/><text x="9.6850%" y="1071.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="9.4564%" y="1125" width="0.0107%" height="15" fill="rgb(251,142,44)"/><text x="9.7064%" y="1135.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.01%)</title><rect x="9.4564%" y="1109" width="0.0107%" height="15" fill="rgb(238,13,15)"/><text x="9.7064%" y="1119.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.01%)</title><rect x="9.4564%" y="1093" width="0.0107%" height="15" fill="rgb(208,107,27)"/><text x="9.7064%" y="1103.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (1 samples, 0.01%)</title><rect x="9.4564%" y="1077" width="0.0107%" height="15" fill="rgb(205,136,37)"/><text x="9.7064%" y="1087.50"></text></g><g><title>parking_lot_core::parking_lot::park (1 samples, 0.01%)</title><rect x="9.4564%" y="1061" width="0.0107%" height="15" fill="rgb(250,205,27)"/><text x="9.7064%" y="1071.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (1 samples, 0.01%)</title><rect x="9.4564%" y="1045" width="0.0107%" height="15" fill="rgb(210,80,43)"/><text x="9.7064%" y="1055.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (1 samples, 0.01%)</title><rect x="9.4564%" y="1029" width="0.0107%" height="15" fill="rgb(247,160,36)"/><text x="9.7064%" y="1039.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (1 samples, 0.01%)</title><rect x="9.4564%" y="1013" width="0.0107%" height="15" fill="rgb(234,13,49)"/><text x="9.7064%" y="1023.50"></text></g><g><title>parking_lot_core::parking_lot::hash (1 samples, 0.01%)</title><rect x="9.4564%" y="997" width="0.0107%" height="15" fill="rgb(234,122,0)"/><text x="9.7064%" y="1007.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="9.4564%" y="981" width="0.0107%" height="15" fill="rgb(207,146,38)"/><text x="9.7064%" y="991.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::notify_should_wakeup (16 samples, 0.17%)</title><rect x="9.4671%" y="1125" width="0.1715%" height="15" fill="rgb(207,177,25)"/><text x="9.7171%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (12 samples, 0.13%)</title><rect x="9.5100%" y="1109" width="0.1287%" height="15" fill="rgb(211,178,42)"/><text x="9.7600%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_add (12 samples, 0.13%)</title><rect x="9.5100%" y="1093" width="0.1287%" height="15" fill="rgb(230,69,54)"/><text x="9.7600%" y="1103.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::handle_join_double (191 samples, 2.05%)</title><rect x="7.6016%" y="1269" width="2.0478%" height="15" fill="rgb(214,135,41)"/><text x="7.8516%" y="1279.50">r..</text></g><g><title>tokio::task::spawn::spawn (189 samples, 2.03%)</title><rect x="7.6230%" y="1253" width="2.0264%" height="15" fill="rgb(237,67,25)"/><text x="7.8730%" y="1263.50">t..</text></g><g><title>tokio::runtime::spawner::Spawner::spawn (189 samples, 2.03%)</title><rect x="7.6230%" y="1237" width="2.0264%" height="15" fill="rgb(222,189,50)"/><text x="7.8730%" y="1247.50">t..</text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (189 samples, 2.03%)</title><rect x="7.6230%" y="1221" width="2.0264%" height="15" fill="rgb(245,148,34)"/><text x="7.8730%" y="1231.50">t..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (116 samples, 1.24%)</title><rect x="8.4057%" y="1205" width="1.2437%" height="15" fill="rgb(222,29,6)"/><text x="8.6557%" y="1215.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (75 samples, 0.80%)</title><rect x="8.8453%" y="1189" width="0.8041%" height="15" fill="rgb(221,189,43)"/><text x="9.0953%" y="1199.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (74 samples, 0.79%)</title><rect x="8.8560%" y="1173" width="0.7934%" height="15" fill="rgb(207,36,27)"/><text x="9.1060%" y="1183.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (23 samples, 0.25%)</title><rect x="9.4028%" y="1157" width="0.2466%" height="15" fill="rgb(217,90,24)"/><text x="9.6528%" y="1167.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::worker_to_notify (23 samples, 0.25%)</title><rect x="9.4028%" y="1141" width="0.2466%" height="15" fill="rgb(224,66,35)"/><text x="9.6528%" y="1151.50"></text></g><g><title>tokio::runtime::thread_pool::idle::State::unpark_one (1 samples, 0.01%)</title><rect x="9.6387%" y="1125" width="0.0107%" height="15" fill="rgb(221,13,50)"/><text x="9.8887%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="9.6387%" y="1109" width="0.0107%" height="15" fill="rgb(236,68,49)"/><text x="9.8887%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="9.6387%" y="1093" width="0.0107%" height="15" fill="rgb(229,146,28)"/><text x="9.8887%" y="1103.50"></text></g><g><title>arena_bin_nonfull_slab_get (6 samples, 0.06%)</title><rect x="9.6601%" y="917" width="0.0643%" height="15" fill="rgb(225,31,38)"/><text x="9.9101%" y="927.50"></text></g><g><title>arena_bin_slabs_nonfull_tryget (6 samples, 0.06%)</title><rect x="9.6601%" y="901" width="0.0643%" height="15" fill="rgb(250,208,3)"/><text x="9.9101%" y="911.50"></text></g><g><title>_rjem_je_extent_heap_remove_first (6 samples, 0.06%)</title><rect x="9.6601%" y="885" width="0.0643%" height="15" fill="rgb(246,54,23)"/><text x="9.9101%" y="895.50"></text></g><g><title>arena_bin_malloc_hard (8 samples, 0.09%)</title><rect x="9.6494%" y="933" width="0.0858%" height="15" fill="rgb(243,76,11)"/><text x="9.8994%" y="943.50"></text></g><g><title>arena_dalloc_bin_slab (1 samples, 0.01%)</title><rect x="9.7245%" y="917" width="0.0107%" height="15" fill="rgb(245,21,50)"/><text x="9.9745%" y="927.50"></text></g><g><title>arena_slab_dalloc (1 samples, 0.01%)</title><rect x="9.7245%" y="901" width="0.0107%" height="15" fill="rgb(228,9,43)"/><text x="9.9745%" y="911.50"></text></g><g><title>_rjem_je_arena_extents_dirty_dalloc (1 samples, 0.01%)</title><rect x="9.7245%" y="885" width="0.0107%" height="15" fill="rgb(208,100,47)"/><text x="9.9745%" y="895.50"></text></g><g><title>extent_record (1 samples, 0.01%)</title><rect x="9.7245%" y="869" width="0.0107%" height="15" fill="rgb(232,26,8)"/><text x="9.9745%" y="879.50"></text></g><g><title>extent_try_coalesce (1 samples, 0.01%)</title><rect x="9.7245%" y="853" width="0.0107%" height="15" fill="rgb(216,166,38)"/><text x="9.9745%" y="863.50"></text></g><g><title>extent_lock_from_addr (1 samples, 0.01%)</title><rect x="9.7245%" y="837" width="0.0107%" height="15" fill="rgb(251,202,51)"/><text x="9.9745%" y="847.50"></text></g><g><title>extent_rtree_leaf_elm_try_lock (1 samples, 0.01%)</title><rect x="9.7245%" y="821" width="0.0107%" height="15" fill="rgb(254,216,34)"/><text x="9.9745%" y="831.50"></text></g><g><title>extent_lock (1 samples, 0.01%)</title><rect x="9.7245%" y="805" width="0.0107%" height="15" fill="rgb(251,32,27)"/><text x="9.9745%" y="815.50"></text></g><g><title>mutex_pool_lock (1 samples, 0.01%)</title><rect x="9.7245%" y="789" width="0.0107%" height="15" fill="rgb(208,127,28)"/><text x="9.9745%" y="799.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.01%)</title><rect x="9.7245%" y="773" width="0.0107%" height="15" fill="rgb(224,137,22)"/><text x="9.9745%" y="783.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.01%)</title><rect x="9.7245%" y="757" width="0.0107%" height="15" fill="rgb(254,70,32)"/><text x="9.9745%" y="767.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.01%)</title><rect x="9.7245%" y="741" width="0.0107%" height="15" fill="rgb(229,75,37)"/><text x="9.9745%" y="751.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::handle_produce (10 samples, 0.11%)</title><rect x="9.6494%" y="1269" width="0.1072%" height="15" fill="rgb(252,64,23)"/><text x="9.8994%" y="1279.50"></text></g><g><title>tokio::task::spawn::spawn (10 samples, 0.11%)</title><rect x="9.6494%" y="1253" width="0.1072%" height="15" fill="rgb(232,162,48)"/><text x="9.8994%" y="1263.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (10 samples, 0.11%)</title><rect x="9.6494%" y="1237" width="0.1072%" height="15" fill="rgb(246,160,12)"/><text x="9.8994%" y="1247.50"></text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (10 samples, 0.11%)</title><rect x="9.6494%" y="1221" width="0.1072%" height="15" fill="rgb(247,166,0)"/><text x="9.8994%" y="1231.50"></text></g><g><title>tokio::runtime::task::joinable (10 samples, 0.11%)</title><rect x="9.6494%" y="1205" width="0.1072%" height="15" fill="rgb(249,219,21)"/><text x="9.8994%" y="1215.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (10 samples, 0.11%)</title><rect x="9.6494%" y="1189" width="0.1072%" height="15" fill="rgb(205,209,3)"/><text x="9.8994%" y="1199.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (10 samples, 0.11%)</title><rect x="9.6494%" y="1173" width="0.1072%" height="15" fill="rgb(243,44,1)"/><text x="9.8994%" y="1183.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (10 samples, 0.11%)</title><rect x="9.6494%" y="1157" width="0.1072%" height="15" fill="rgb(206,159,16)"/><text x="9.8994%" y="1167.50"></text></g><g><title>alloc::alloc::exchange_malloc (10 samples, 0.11%)</title><rect x="9.6494%" y="1141" width="0.1072%" height="15" fill="rgb(244,77,30)"/><text x="9.8994%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.11%)</title><rect x="9.6494%" y="1125" width="0.1072%" height="15" fill="rgb(218,69,12)"/><text x="9.8994%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.11%)</title><rect x="9.6494%" y="1109" width="0.1072%" height="15" fill="rgb(212,87,7)"/><text x="9.8994%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.11%)</title><rect x="9.6494%" y="1093" width="0.1072%" height="15" fill="rgb(245,114,25)"/><text x="9.8994%" y="1103.50"></text></g><g><title>_rjem_mallocx (10 samples, 0.11%)</title><rect x="9.6494%" y="1077" width="0.1072%" height="15" fill="rgb(210,61,42)"/><text x="9.8994%" y="1087.50"></text></g><g><title>imalloc (10 samples, 0.11%)</title><rect x="9.6494%" y="1061" width="0.1072%" height="15" fill="rgb(211,52,33)"/><text x="9.8994%" y="1071.50"></text></g><g><title>imalloc_body (10 samples, 0.11%)</title><rect x="9.6494%" y="1045" width="0.1072%" height="15" fill="rgb(234,58,33)"/><text x="9.8994%" y="1055.50"></text></g><g><title>imalloc_no_sample (10 samples, 0.11%)</title><rect x="9.6494%" y="1029" width="0.1072%" height="15" fill="rgb(220,115,36)"/><text x="9.8994%" y="1039.50"></text></g><g><title>iallocztm (10 samples, 0.11%)</title><rect x="9.6494%" y="1013" width="0.1072%" height="15" fill="rgb(243,153,54)"/><text x="9.8994%" y="1023.50"></text></g><g><title>arena_malloc (10 samples, 0.11%)</title><rect x="9.6494%" y="997" width="0.1072%" height="15" fill="rgb(251,47,18)"/><text x="9.8994%" y="1007.50"></text></g><g><title>tcache_alloc_small (10 samples, 0.11%)</title><rect x="9.6494%" y="981" width="0.1072%" height="15" fill="rgb(242,102,42)"/><text x="9.8994%" y="991.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (10 samples, 0.11%)</title><rect x="9.6494%" y="965" width="0.1072%" height="15" fill="rgb(234,31,38)"/><text x="9.8994%" y="975.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (10 samples, 0.11%)</title><rect x="9.6494%" y="949" width="0.1072%" height="15" fill="rgb(221,117,51)"/><text x="9.8994%" y="959.50"></text></g><g><title>malloc_mutex_lock (2 samples, 0.02%)</title><rect x="9.7352%" y="933" width="0.0214%" height="15" fill="rgb(212,20,18)"/><text x="9.9852%" y="943.50"></text></g><g><title>malloc_mutex_trylock_final (2 samples, 0.02%)</title><rect x="9.7352%" y="917" width="0.0214%" height="15" fill="rgb(245,133,36)"/><text x="9.9852%" y="927.50"></text></g><g><title>__GI___pthread_mutex_trylock (2 samples, 0.02%)</title><rect x="9.7352%" y="901" width="0.0214%" height="15" fill="rgb(212,6,19)"/><text x="9.9852%" y="911.50"></text></g><g><title>syscall (1 samples, 0.01%)</title><rect x="9.7566%" y="1269" width="0.0107%" height="15" fill="rgb(218,1,36)"/><text x="10.0066%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="9.7566%" y="1253" width="0.0107%" height="15" fill="rgb(246,84,54)"/><text x="10.0066%" y="1263.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::push (1 samples, 0.01%)</title><rect x="9.7673%" y="1269" width="0.0107%" height="15" fill="rgb(242,110,6)"/><text x="10.0173%" y="1279.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::worker_to_notify (2 samples, 0.02%)</title><rect x="9.7781%" y="1269" width="0.0214%" height="15" fill="rgb(214,47,5)"/><text x="10.0281%" y="1279.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::notify_should_wakeup (1 samples, 0.01%)</title><rect x="9.7888%" y="1253" width="0.0107%" height="15" fill="rgb(218,159,25)"/><text x="10.0388%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="9.7888%" y="1237" width="0.0107%" height="15" fill="rgb(215,211,28)"/><text x="10.0388%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="9.7888%" y="1221" width="0.0107%" height="15" fill="rgb(238,59,32)"/><text x="10.0388%" y="1231.50"></text></g><g><title>extent_activate_locked (1 samples, 0.01%)</title><rect x="9.7995%" y="853" width="0.0107%" height="15" fill="rgb(226,82,3)"/><text x="10.0495%" y="863.50"></text></g><g><title>extents_remove_locked (1 samples, 0.01%)</title><rect x="9.7995%" y="837" width="0.0107%" height="15" fill="rgb(240,164,32)"/><text x="10.0495%" y="847.50"></text></g><g><title>[unknown] (876 samples, 9.39%)</title><rect x="0.4289%" y="1285" width="9.3921%" height="15" fill="rgb(232,46,7)"/><text x="0.6789%" y="1295.50">[unknown]</text></g><g><title>tokio::task::spawn::spawn (2 samples, 0.02%)</title><rect x="9.7995%" y="1269" width="0.0214%" height="15" fill="rgb(229,129,53)"/><text x="10.0495%" y="1279.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (2 samples, 0.02%)</title><rect x="9.7995%" y="1253" width="0.0214%" height="15" fill="rgb(234,188,29)"/><text x="10.0495%" y="1263.50"></text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (2 samples, 0.02%)</title><rect x="9.7995%" y="1237" width="0.0214%" height="15" fill="rgb(246,141,4)"/><text x="10.0495%" y="1247.50"></text></g><g><title>tokio::runtime::task::joinable (2 samples, 0.02%)</title><rect x="9.7995%" y="1221" width="0.0214%" height="15" fill="rgb(229,23,39)"/><text x="10.0495%" y="1231.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (2 samples, 0.02%)</title><rect x="9.7995%" y="1205" width="0.0214%" height="15" fill="rgb(206,12,3)"/><text x="10.0495%" y="1215.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (2 samples, 0.02%)</title><rect x="9.7995%" y="1189" width="0.0214%" height="15" fill="rgb(252,226,20)"/><text x="10.0495%" y="1199.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="9.7995%" y="1173" width="0.0214%" height="15" fill="rgb(216,123,35)"/><text x="10.0495%" y="1183.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.02%)</title><rect x="9.7995%" y="1157" width="0.0214%" height="15" fill="rgb(212,68,40)"/><text x="10.0495%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="9.7995%" y="1141" width="0.0214%" height="15" fill="rgb(254,125,32)"/><text x="10.0495%" y="1151.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="9.7995%" y="1125" width="0.0214%" height="15" fill="rgb(253,97,22)"/><text x="10.0495%" y="1135.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="9.7995%" y="1109" width="0.0214%" height="15" fill="rgb(241,101,14)"/><text x="10.0495%" y="1119.50"></text></g><g><title>_rjem_mallocx (2 samples, 0.02%)</title><rect x="9.7995%" y="1093" width="0.0214%" height="15" fill="rgb(238,103,29)"/><text x="10.0495%" y="1103.50"></text></g><g><title>imalloc (2 samples, 0.02%)</title><rect x="9.7995%" y="1077" width="0.0214%" height="15" fill="rgb(233,195,47)"/><text x="10.0495%" y="1087.50"></text></g><g><title>imalloc_body (2 samples, 0.02%)</title><rect x="9.7995%" y="1061" width="0.0214%" height="15" fill="rgb(246,218,30)"/><text x="10.0495%" y="1071.50"></text></g><g><title>imalloc_no_sample (2 samples, 0.02%)</title><rect x="9.7995%" y="1045" width="0.0214%" height="15" fill="rgb(219,145,47)"/><text x="10.0495%" y="1055.50"></text></g><g><title>iallocztm (2 samples, 0.02%)</title><rect x="9.7995%" y="1029" width="0.0214%" height="15" fill="rgb(243,12,26)"/><text x="10.0495%" y="1039.50"></text></g><g><title>arena_malloc (2 samples, 0.02%)</title><rect x="9.7995%" y="1013" width="0.0214%" height="15" fill="rgb(214,87,16)"/><text x="10.0495%" y="1023.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.02%)</title><rect x="9.7995%" y="997" width="0.0214%" height="15" fill="rgb(208,99,42)"/><text x="10.0495%" y="1007.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (2 samples, 0.02%)</title><rect x="9.7995%" y="981" width="0.0214%" height="15" fill="rgb(253,99,2)"/><text x="10.0495%" y="991.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (2 samples, 0.02%)</title><rect x="9.7995%" y="965" width="0.0214%" height="15" fill="rgb(220,168,23)"/><text x="10.0495%" y="975.50"></text></g><g><title>arena_bin_malloc_hard (2 samples, 0.02%)</title><rect x="9.7995%" y="949" width="0.0214%" height="15" fill="rgb(242,38,24)"/><text x="10.0495%" y="959.50"></text></g><g><title>arena_bin_nonfull_slab_get (2 samples, 0.02%)</title><rect x="9.7995%" y="933" width="0.0214%" height="15" fill="rgb(225,182,9)"/><text x="10.0495%" y="943.50"></text></g><g><title>arena_slab_alloc (2 samples, 0.02%)</title><rect x="9.7995%" y="917" width="0.0214%" height="15" fill="rgb(243,178,37)"/><text x="10.0495%" y="927.50"></text></g><g><title>_rjem_je_extents_alloc (2 samples, 0.02%)</title><rect x="9.7995%" y="901" width="0.0214%" height="15" fill="rgb(232,139,19)"/><text x="10.0495%" y="911.50"></text></g><g><title>extent_recycle (2 samples, 0.02%)</title><rect x="9.7995%" y="885" width="0.0214%" height="15" fill="rgb(225,201,24)"/><text x="10.0495%" y="895.50"></text></g><g><title>extent_recycle_extract (2 samples, 0.02%)</title><rect x="9.7995%" y="869" width="0.0214%" height="15" fill="rgb(221,47,46)"/><text x="10.0495%" y="879.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.01%)</title><rect x="9.8102%" y="853" width="0.0107%" height="15" fill="rgb(249,23,13)"/><text x="10.0602%" y="863.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.01%)</title><rect x="9.8102%" y="837" width="0.0107%" height="15" fill="rgb(219,9,5)"/><text x="10.0602%" y="847.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.01%)</title><rect x="9.8102%" y="821" width="0.0107%" height="15" fill="rgb(254,171,16)"/><text x="10.0602%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,()&gt;&gt; (2 samples, 0.02%)</title><rect x="9.9067%" y="933" width="0.0214%" height="15" fill="rgb(230,171,20)"/><text x="10.1567%" y="943.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="9.9067%" y="917" width="0.0214%" height="15" fill="rgb(210,71,41)"/><text x="10.1567%" y="927.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (2 samples, 0.02%)</title><rect x="9.9067%" y="901" width="0.0214%" height="15" fill="rgb(206,173,20)"/><text x="10.1567%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (2 samples, 0.02%)</title><rect x="9.9067%" y="885" width="0.0214%" height="15" fill="rgb(233,88,34)"/><text x="10.1567%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.02%)</title><rect x="9.9067%" y="869" width="0.0214%" height="15" fill="rgb(223,209,46)"/><text x="10.1567%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (8 samples, 0.09%)</title><rect x="9.9282%" y="933" width="0.0858%" height="15" fill="rgb(250,43,18)"/><text x="10.1782%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (8 samples, 0.09%)</title><rect x="9.9282%" y="917" width="0.0858%" height="15" fill="rgb(208,13,10)"/><text x="10.1782%" y="927.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (8 samples, 0.09%)</title><rect x="10.0139%" y="885" width="0.0858%" height="15" fill="rgb(212,200,36)"/><text x="10.2639%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (7 samples, 0.08%)</title><rect x="10.0247%" y="869" width="0.0751%" height="15" fill="rgb(225,90,30)"/><text x="10.2747%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (7 samples, 0.08%)</title><rect x="10.0247%" y="853" width="0.0751%" height="15" fill="rgb(236,182,39)"/><text x="10.2747%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (17 samples, 0.18%)</title><rect x="10.0997%" y="821" width="0.1823%" height="15" fill="rgb(212,144,35)"/><text x="10.3497%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_load (17 samples, 0.18%)</title><rect x="10.0997%" y="805" width="0.1823%" height="15" fill="rgb(228,63,44)"/><text x="10.3497%" y="815.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (377 samples, 4.04%)</title><rect x="10.0997%" y="837" width="4.0420%" height="15" fill="rgb(228,109,6)"/><text x="10.3497%" y="847.50">&lt;par..</text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (360 samples, 3.86%)</title><rect x="10.2820%" y="821" width="3.8598%" height="15" fill="rgb(238,117,24)"/><text x="10.5320%" y="831.50">park..</text></g><g><title>syscall (359 samples, 3.85%)</title><rect x="10.2927%" y="805" width="3.8490%" height="15" fill="rgb(242,26,26)"/><text x="10.5427%" y="815.50">sysc..</text></g><g><title>[unknown] (353 samples, 3.78%)</title><rect x="10.3570%" y="789" width="3.7847%" height="15" fill="rgb(221,92,48)"/><text x="10.6070%" y="799.50">[unk..</text></g><g><title>[unknown] (337 samples, 3.61%)</title><rect x="10.5286%" y="773" width="3.6132%" height="15" fill="rgb(209,209,32)"/><text x="10.7786%" y="783.50">[unk..</text></g><g><title>[unknown] (329 samples, 3.53%)</title><rect x="10.6143%" y="757" width="3.5274%" height="15" fill="rgb(221,70,22)"/><text x="10.8643%" y="767.50">[un..</text></g><g><title>[unknown] (323 samples, 3.46%)</title><rect x="10.6787%" y="741" width="3.4631%" height="15" fill="rgb(248,145,5)"/><text x="10.9287%" y="751.50">[un..</text></g><g><title>[unknown] (311 samples, 3.33%)</title><rect x="10.8073%" y="725" width="3.3344%" height="15" fill="rgb(226,116,26)"/><text x="11.0573%" y="735.50">[un..</text></g><g><title>[unknown] (289 samples, 3.10%)</title><rect x="11.0432%" y="709" width="3.0985%" height="15" fill="rgb(244,5,17)"/><text x="11.2932%" y="719.50">[un..</text></g><g><title>[unknown] (256 samples, 2.74%)</title><rect x="11.3970%" y="693" width="2.7447%" height="15" fill="rgb(252,159,33)"/><text x="11.6470%" y="703.50">[u..</text></g><g><title>[unknown] (239 samples, 2.56%)</title><rect x="11.5793%" y="677" width="2.5625%" height="15" fill="rgb(206,71,0)"/><text x="11.8293%" y="687.50">[u..</text></g><g><title>[unknown] (217 samples, 2.33%)</title><rect x="11.8152%" y="661" width="2.3266%" height="15" fill="rgb(233,118,54)"/><text x="12.0652%" y="671.50">[..</text></g><g><title>[unknown] (167 samples, 1.79%)</title><rect x="12.3512%" y="645" width="1.7905%" height="15" fill="rgb(234,83,48)"/><text x="12.6012%" y="655.50">[..</text></g><g><title>[unknown] (126 samples, 1.35%)</title><rect x="12.7908%" y="629" width="1.3509%" height="15" fill="rgb(228,3,54)"/><text x="13.0408%" y="639.50"></text></g><g><title>[unknown] (89 samples, 0.95%)</title><rect x="13.1875%" y="613" width="0.9542%" height="15" fill="rgb(226,155,13)"/><text x="13.4375%" y="623.50"></text></g><g><title>[unknown] (52 samples, 0.56%)</title><rect x="13.5842%" y="597" width="0.5575%" height="15" fill="rgb(241,28,37)"/><text x="13.8342%" y="607.50"></text></g><g><title>[unknown] (43 samples, 0.46%)</title><rect x="13.6807%" y="581" width="0.4610%" height="15" fill="rgb(233,93,10)"/><text x="13.9307%" y="591.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="14.1203%" y="565" width="0.0214%" height="15" fill="rgb(225,113,19)"/><text x="14.3703%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="14.1203%" y="549" width="0.0214%" height="15" fill="rgb(241,2,18)"/><text x="14.3703%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="14.1203%" y="533" width="0.0214%" height="15" fill="rgb(228,207,21)"/><text x="14.3703%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="14.1203%" y="517" width="0.0214%" height="15" fill="rgb(213,211,35)"/><text x="14.3703%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="14.1203%" y="501" width="0.0214%" height="15" fill="rgb(209,83,10)"/><text x="14.3703%" y="511.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="14.1203%" y="485" width="0.0214%" height="15" fill="rgb(209,164,1)"/><text x="14.3703%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.1310%" y="469" width="0.0107%" height="15" fill="rgb(213,184,43)"/><text x="14.3810%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.1310%" y="453" width="0.0107%" height="15" fill="rgb(231,61,34)"/><text x="14.3810%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.1310%" y="437" width="0.0107%" height="15" fill="rgb(235,75,3)"/><text x="14.3810%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.1310%" y="421" width="0.0107%" height="15" fill="rgb(220,106,47)"/><text x="14.3810%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.1310%" y="405" width="0.0107%" height="15" fill="rgb(210,196,33)"/><text x="14.3810%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.1310%" y="389" width="0.0107%" height="15" fill="rgb(229,154,42)"/><text x="14.3810%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.1310%" y="373" width="0.0107%" height="15" fill="rgb(228,114,26)"/><text x="14.3810%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.1310%" y="357" width="0.0107%" height="15" fill="rgb(208,144,1)"/><text x="14.3810%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="14.1310%" y="341" width="0.0107%" height="15" fill="rgb(239,112,37)"/><text x="14.3810%" y="351.50"></text></g><g><title>core::ops::function::FnOnce::call_once (3 samples, 0.03%)</title><rect x="14.1417%" y="837" width="0.0322%" height="15" fill="rgb(210,96,50)"/><text x="14.3917%" y="847.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal::{{closure}} (3 samples, 0.03%)</title><rect x="14.1417%" y="821" width="0.0322%" height="15" fill="rgb(222,178,2)"/><text x="14.3917%" y="831.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (3 samples, 0.03%)</title><rect x="14.1417%" y="805" width="0.0322%" height="15" fill="rgb(226,74,18)"/><text x="14.3917%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (3 samples, 0.03%)</title><rect x="14.1417%" y="789" width="0.0322%" height="15" fill="rgb(225,67,54)"/><text x="14.3917%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (3 samples, 0.03%)</title><rect x="14.1417%" y="773" width="0.0322%" height="15" fill="rgb(251,92,32)"/><text x="14.3917%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.01%)</title><rect x="14.1739%" y="837" width="0.0107%" height="15" fill="rgb(228,149,22)"/><text x="14.4239%" y="847.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.01%)</title><rect x="14.1739%" y="821" width="0.0107%" height="15" fill="rgb(243,54,13)"/><text x="14.4239%" y="831.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (16 samples, 0.17%)</title><rect x="14.1846%" y="837" width="0.1715%" height="15" fill="rgb(243,180,28)"/><text x="14.4346%" y="847.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (15 samples, 0.16%)</title><rect x="14.1953%" y="821" width="0.1608%" height="15" fill="rgb(208,167,24)"/><text x="14.4453%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (15 samples, 0.16%)</title><rect x="14.1953%" y="805" width="0.1608%" height="15" fill="rgb(245,73,45)"/><text x="14.4453%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (15 samples, 0.16%)</title><rect x="14.1953%" y="789" width="0.1608%" height="15" fill="rgb(237,203,48)"/><text x="14.4453%" y="799.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (406 samples, 4.35%)</title><rect x="10.0139%" y="933" width="4.3530%" height="15" fill="rgb(211,197,16)"/><text x="10.2639%" y="943.50">tokio..</text></g><g><title>parking_lot::condvar::Condvar::wait (406 samples, 4.35%)</title><rect x="10.0139%" y="917" width="4.3530%" height="15" fill="rgb(243,99,51)"/><text x="10.2639%" y="927.50">parki..</text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (406 samples, 4.35%)</title><rect x="10.0139%" y="901" width="4.3530%" height="15" fill="rgb(215,123,29)"/><text x="10.2639%" y="911.50">parki..</text></g><g><title>parking_lot_core::parking_lot::park (398 samples, 4.27%)</title><rect x="10.0997%" y="885" width="4.2672%" height="15" fill="rgb(239,186,37)"/><text x="10.3497%" y="895.50">parki..</text></g><g><title>parking_lot_core::parking_lot::with_thread_data (398 samples, 4.27%)</title><rect x="10.0997%" y="869" width="4.2672%" height="15" fill="rgb(252,136,39)"/><text x="10.3497%" y="879.50">parki..</text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (398 samples, 4.27%)</title><rect x="10.0997%" y="853" width="4.2672%" height="15" fill="rgb(223,213,32)"/><text x="10.3497%" y="863.50">parki..</text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (1 samples, 0.01%)</title><rect x="14.3562%" y="837" width="0.0107%" height="15" fill="rgb(233,115,5)"/><text x="14.6062%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="14.3562%" y="821" width="0.0107%" height="15" fill="rgb(207,226,44)"/><text x="14.6062%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="14.3562%" y="805" width="0.0107%" height="15" fill="rgb(208,126,0)"/><text x="14.6062%" y="815.50"></text></g><g><title>&lt;tokio::park::thread::CachedParkThread as tokio::park::Park&gt;::park (421 samples, 4.51%)</title><rect x="9.8638%" y="1029" width="4.5138%" height="15" fill="rgb(244,66,21)"/><text x="10.1138%" y="1039.50">&lt;toki..</text></g><g><title>tokio::park::thread::CachedParkThread::with_current (421 samples, 4.51%)</title><rect x="9.8638%" y="1013" width="4.5138%" height="15" fill="rgb(222,97,12)"/><text x="10.1138%" y="1023.50">tokio..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (421 samples, 4.51%)</title><rect x="9.8638%" y="997" width="4.5138%" height="15" fill="rgb(219,213,19)"/><text x="10.1138%" y="1007.50">std::..</text></g><g><title>tokio::park::thread::CachedParkThread::with_current::{{closure}} (421 samples, 4.51%)</title><rect x="9.8638%" y="981" width="4.5138%" height="15" fill="rgb(252,169,30)"/><text x="10.1138%" y="991.50">tokio..</text></g><g><title>&lt;tokio::park::thread::CachedParkThread as tokio::park::Park&gt;::park::{{closure}} (421 samples, 4.51%)</title><rect x="9.8638%" y="965" width="4.5138%" height="15" fill="rgb(206,32,51)"/><text x="10.1138%" y="975.50">&lt;toki..</text></g><g><title>tokio::park::thread::Inner::park (418 samples, 4.48%)</title><rect x="9.8960%" y="949" width="4.4816%" height="15" fill="rgb(250,172,42)"/><text x="10.1460%" y="959.50">tokio..</text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="14.3669%" y="933" width="0.0107%" height="15" fill="rgb(209,34,43)"/><text x="14.6169%" y="943.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.01%)</title><rect x="14.3669%" y="917" width="0.0107%" height="15" fill="rgb(223,11,35)"/><text x="14.6169%" y="927.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.01%)</title><rect x="14.3669%" y="901" width="0.0107%" height="15" fill="rgb(251,219,26)"/><text x="14.6169%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.01%)</title><rect x="14.3669%" y="885" width="0.0107%" height="15" fill="rgb(231,119,3)"/><text x="14.6169%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="14.3669%" y="869" width="0.0107%" height="15" fill="rgb(216,97,11)"/><text x="14.6169%" y="879.50"></text></g><g><title>tokio::coop::CURRENT::__getit (4 samples, 0.04%)</title><rect x="14.3776%" y="965" width="0.0429%" height="15" fill="rgb(223,59,9)"/><text x="14.6276%" y="975.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (4 samples, 0.04%)</title><rect x="14.3776%" y="949" width="0.0429%" height="15" fill="rgb(233,93,31)"/><text x="14.6276%" y="959.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (4 samples, 0.04%)</title><rect x="14.3776%" y="933" width="0.0429%" height="15" fill="rgb(239,81,33)"/><text x="14.6276%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (4 samples, 0.04%)</title><rect x="14.3776%" y="917" width="0.0429%" height="15" fill="rgb(213,120,34)"/><text x="14.6276%" y="927.50"></text></g><g><title>tokio::runtime::Runtime::block_on (432 samples, 4.63%)</title><rect x="9.8209%" y="1093" width="4.6317%" height="15" fill="rgb(243,49,53)"/><text x="10.0709%" y="1103.50">tokio..</text></g><g><title>tokio::runtime::thread_pool::ThreadPool::block_on (432 samples, 4.63%)</title><rect x="9.8209%" y="1077" width="4.6317%" height="15" fill="rgb(247,216,33)"/><text x="10.0709%" y="1087.50">tokio..</text></g><g><title>tokio::runtime::enter::Enter::block_on (432 samples, 4.63%)</title><rect x="9.8209%" y="1061" width="4.6317%" height="15" fill="rgb(226,26,14)"/><text x="10.0709%" y="1071.50">tokio..</text></g><g><title>tokio::park::thread::CachedParkThread::block_on (432 samples, 4.63%)</title><rect x="9.8209%" y="1045" width="4.6317%" height="15" fill="rgb(215,49,53)"/><text x="10.0709%" y="1055.50">tokio..</text></g><g><title>tokio::coop::budget (7 samples, 0.08%)</title><rect x="14.3776%" y="1029" width="0.0751%" height="15" fill="rgb(245,162,40)"/><text x="14.6276%" y="1039.50"></text></g><g><title>tokio::coop::with_budget (7 samples, 0.08%)</title><rect x="14.3776%" y="1013" width="0.0751%" height="15" fill="rgb(229,68,17)"/><text x="14.6276%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (7 samples, 0.08%)</title><rect x="14.3776%" y="997" width="0.0751%" height="15" fill="rgb(213,182,10)"/><text x="14.6276%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7 samples, 0.08%)</title><rect x="14.3776%" y="981" width="0.0751%" height="15" fill="rgb(245,125,30)"/><text x="14.6276%" y="991.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (3 samples, 0.03%)</title><rect x="14.4205%" y="965" width="0.0322%" height="15" fill="rgb(232,202,2)"/><text x="14.6705%" y="975.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (3 samples, 0.03%)</title><rect x="14.4205%" y="949" width="0.0322%" height="15" fill="rgb(237,140,51)"/><text x="14.6705%" y="959.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (3 samples, 0.03%)</title><rect x="14.4205%" y="933" width="0.0322%" height="15" fill="rgb(236,157,25)"/><text x="14.6705%" y="943.50"></text></g><g><title>core::mem::replace (3 samples, 0.03%)</title><rect x="14.4205%" y="917" width="0.0322%" height="15" fill="rgb(219,209,0)"/><text x="14.6705%" y="927.50"></text></g><g><title>core::mem::swap (3 samples, 0.03%)</title><rect x="14.4205%" y="901" width="0.0322%" height="15" fill="rgb(240,116,54)"/><text x="14.6705%" y="911.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (3 samples, 0.03%)</title><rect x="14.4205%" y="885" width="0.0322%" height="15" fill="rgb(216,10,36)"/><text x="14.6705%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.03%)</title><rect x="14.4205%" y="869" width="0.0322%" height="15" fill="rgb(222,72,44)"/><text x="14.6705%" y="879.50"></text></g><g><title>tokio::runtime::builder::Builder::build (1 samples, 0.01%)</title><rect x="14.4527%" y="1093" width="0.0107%" height="15" fill="rgb(232,159,9)"/><text x="14.7027%" y="1103.50"></text></g><g><title>tokio::runtime::builder::Builder::build_threaded_runtime (1 samples, 0.01%)</title><rect x="14.4527%" y="1077" width="0.0107%" height="15" fill="rgb(210,39,32)"/><text x="14.7027%" y="1087.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch (1 samples, 0.01%)</title><rect x="14.4527%" y="1061" width="0.0107%" height="15" fill="rgb(216,194,45)"/><text x="14.7027%" y="1071.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (1 samples, 0.01%)</title><rect x="14.4527%" y="1045" width="0.0107%" height="15" fill="rgb(218,18,35)"/><text x="14.7027%" y="1055.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn_blocking (1 samples, 0.01%)</title><rect x="14.4527%" y="1029" width="0.0107%" height="15" fill="rgb(207,83,51)"/><text x="14.7027%" y="1039.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn (1 samples, 0.01%)</title><rect x="14.4527%" y="1013" width="0.0107%" height="15" fill="rgb(225,63,43)"/><text x="14.7027%" y="1023.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread (1 samples, 0.01%)</title><rect x="14.4527%" y="997" width="0.0107%" height="15" fill="rgb(207,57,36)"/><text x="14.7027%" y="1007.50"></text></g><g><title>std::thread::Builder::spawn (1 samples, 0.01%)</title><rect x="14.4527%" y="981" width="0.0107%" height="15" fill="rgb(216,99,33)"/><text x="14.7027%" y="991.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (1 samples, 0.01%)</title><rect x="14.4527%" y="965" width="0.0107%" height="15" fill="rgb(225,42,16)"/><text x="14.7027%" y="975.50"></text></g><g><title>std::thread::Thread::new (1 samples, 0.01%)</title><rect x="14.4527%" y="949" width="0.0107%" height="15" fill="rgb(220,201,45)"/><text x="14.7027%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="14.4527%" y="933" width="0.0107%" height="15" fill="rgb(225,33,4)"/><text x="14.7027%" y="943.50"></text></g><g><title>std::thread::Thread::new::{{closure}} (1 samples, 0.01%)</title><rect x="14.4527%" y="917" width="0.0107%" height="15" fill="rgb(224,33,50)"/><text x="14.7027%" y="927.50"></text></g><g><title>std::ffi::c_str::CString::new (1 samples, 0.01%)</title><rect x="14.4527%" y="901" width="0.0107%" height="15" fill="rgb(246,198,51)"/><text x="14.7027%" y="911.50"></text></g><g><title>&lt;T as std::ffi::c_str::CString::new::SpecIntoVec&gt;::into_vec (1 samples, 0.01%)</title><rect x="14.4527%" y="885" width="0.0107%" height="15" fill="rgb(205,22,4)"/><text x="14.7027%" y="895.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.01%)</title><rect x="14.4527%" y="869" width="0.0107%" height="15" fill="rgb(206,3,8)"/><text x="14.7027%" y="879.50"></text></g><g><title>alloc::string::&lt;impl core::convert::From&lt;alloc::string::String&gt; for alloc::vec::Vec&lt;u8&gt;&gt;::from (1 samples, 0.01%)</title><rect x="14.4527%" y="853" width="0.0107%" height="15" fill="rgb(251,23,15)"/><text x="14.7027%" y="863.50"></text></g><g><title>_start (439 samples, 4.71%)</title><rect x="9.8209%" y="1285" width="4.7068%" height="15" fill="rgb(252,88,28)"/><text x="10.0709%" y="1295.50">_start</text></g><g><title>__libc_start_main (439 samples, 4.71%)</title><rect x="9.8209%" y="1269" width="4.7068%" height="15" fill="rgb(212,127,14)"/><text x="10.0709%" y="1279.50">__lib..</text></g><g><title>main (439 samples, 4.71%)</title><rect x="9.8209%" y="1253" width="4.7068%" height="15" fill="rgb(247,145,37)"/><text x="10.0709%" y="1263.50">main</text></g><g><title>std::rt::lang_start_internal (439 samples, 4.71%)</title><rect x="9.8209%" y="1237" width="4.7068%" height="15" fill="rgb(209,117,53)"/><text x="10.0709%" y="1247.50">std::..</text></g><g><title>std::panic::catch_unwind (439 samples, 4.71%)</title><rect x="9.8209%" y="1221" width="4.7068%" height="15" fill="rgb(212,90,42)"/><text x="10.0709%" y="1231.50">std::..</text></g><g><title>std::panicking::try (439 samples, 4.71%)</title><rect x="9.8209%" y="1205" width="4.7068%" height="15" fill="rgb(218,164,37)"/><text x="10.0709%" y="1215.50">std::..</text></g><g><title>std::panicking::try::do_call (439 samples, 4.71%)</title><rect x="9.8209%" y="1189" width="4.7068%" height="15" fill="rgb(246,65,34)"/><text x="10.0709%" y="1199.50">std::..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (439 samples, 4.71%)</title><rect x="9.8209%" y="1173" width="4.7068%" height="15" fill="rgb(231,100,33)"/><text x="10.0709%" y="1183.50">core:..</text></g><g><title>std::rt::lang_start::{{closure}} (439 samples, 4.71%)</title><rect x="9.8209%" y="1157" width="4.7068%" height="15" fill="rgb(228,126,14)"/><text x="10.0709%" y="1167.50">std::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (439 samples, 4.71%)</title><rect x="9.8209%" y="1141" width="4.7068%" height="15" fill="rgb(215,173,21)"/><text x="10.0709%" y="1151.50">std::..</text></g><g><title>core::ops::function::FnOnce::call_once (439 samples, 4.71%)</title><rect x="9.8209%" y="1125" width="4.7068%" height="15" fill="rgb(210,6,40)"/><text x="10.0709%" y="1135.50">core:..</text></g><g><title>rho_runtime::main (439 samples, 4.71%)</title><rect x="9.8209%" y="1109" width="4.7068%" height="15" fill="rgb(212,48,18)"/><text x="10.0709%" y="1119.50">rho_r..</text></g><g><title>tokio::runtime::builder::Builder::new_multi_thread (6 samples, 0.06%)</title><rect x="14.4634%" y="1093" width="0.0643%" height="15" fill="rgb(230,214,11)"/><text x="14.7134%" y="1103.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="14.4634%" y="1077" width="0.0643%" height="15" fill="rgb(254,105,39)"/><text x="14.7134%" y="1087.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="14.4634%" y="1061" width="0.0643%" height="15" fill="rgb(245,158,5)"/><text x="14.7134%" y="1071.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="14.4634%" y="1045" width="0.0643%" height="15" fill="rgb(249,208,11)"/><text x="14.7134%" y="1055.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="14.4634%" y="1029" width="0.0643%" height="15" fill="rgb(210,39,28)"/><text x="14.7134%" y="1039.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="14.4634%" y="1013" width="0.0643%" height="15" fill="rgb(211,56,53)"/><text x="14.7134%" y="1023.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="14.4634%" y="997" width="0.0643%" height="15" fill="rgb(226,201,30)"/><text x="14.7134%" y="1007.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="14.4741%" y="981" width="0.0536%" height="15" fill="rgb(239,101,34)"/><text x="14.7241%" y="991.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="14.4741%" y="965" width="0.0536%" height="15" fill="rgb(226,209,5)"/><text x="14.7241%" y="975.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="14.4741%" y="949" width="0.0536%" height="15" fill="rgb(250,105,47)"/><text x="14.7241%" y="959.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="14.4741%" y="933" width="0.0536%" height="15" fill="rgb(230,72,3)"/><text x="14.7241%" y="943.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="14.4741%" y="917" width="0.0536%" height="15" fill="rgb(232,218,39)"/><text x="14.7241%" y="927.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="14.4741%" y="901" width="0.0536%" height="15" fill="rgb(248,166,6)"/><text x="14.7241%" y="911.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="14.4741%" y="885" width="0.0536%" height="15" fill="rgb(247,89,20)"/><text x="14.7241%" y="895.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="14.4741%" y="869" width="0.0536%" height="15" fill="rgb(248,130,54)"/><text x="14.7241%" y="879.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="14.4741%" y="853" width="0.0536%" height="15" fill="rgb(234,196,4)"/><text x="14.7241%" y="863.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="14.4741%" y="837" width="0.0536%" height="15" fill="rgb(250,143,31)"/><text x="14.7241%" y="847.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="14.4741%" y="821" width="0.0536%" height="15" fill="rgb(211,110,34)"/><text x="14.7241%" y="831.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="14.4741%" y="805" width="0.0536%" height="15" fill="rgb(215,124,48)"/><text x="14.7241%" y="815.50"></text></g><g><title>[unknown] (43 samples, 0.46%)</title><rect x="14.5384%" y="1269" width="0.4610%" height="15" fill="rgb(216,46,13)"/><text x="14.7884%" y="1279.50"></text></g><g><title>[unknown] (43 samples, 0.46%)</title><rect x="14.5384%" y="1253" width="0.4610%" height="15" fill="rgb(205,184,25)"/><text x="14.7884%" y="1263.50"></text></g><g><title>[unknown] (42 samples, 0.45%)</title><rect x="14.5492%" y="1237" width="0.4503%" height="15" fill="rgb(228,1,10)"/><text x="14.7992%" y="1247.50"></text></g><g><title>[unknown] (42 samples, 0.45%)</title><rect x="14.5492%" y="1221" width="0.4503%" height="15" fill="rgb(213,116,27)"/><text x="14.7992%" y="1231.50"></text></g><g><title>[unknown] (42 samples, 0.45%)</title><rect x="14.5492%" y="1205" width="0.4503%" height="15" fill="rgb(241,95,50)"/><text x="14.7992%" y="1215.50"></text></g><g><title>[unknown] (41 samples, 0.44%)</title><rect x="14.5599%" y="1189" width="0.4396%" height="15" fill="rgb(238,48,32)"/><text x="14.8099%" y="1199.50"></text></g><g><title>[unknown] (41 samples, 0.44%)</title><rect x="14.5599%" y="1173" width="0.4396%" height="15" fill="rgb(235,113,49)"/><text x="14.8099%" y="1183.50"></text></g><g><title>[unknown] (41 samples, 0.44%)</title><rect x="14.5599%" y="1157" width="0.4396%" height="15" fill="rgb(205,127,43)"/><text x="14.8099%" y="1167.50"></text></g><g><title>clone (45 samples, 0.48%)</title><rect x="14.5277%" y="1285" width="0.4825%" height="15" fill="rgb(250,162,2)"/><text x="14.7777%" y="1295.50"></text></g><g><title>start_thread (1 samples, 0.01%)</title><rect x="14.9995%" y="1269" width="0.0107%" height="15" fill="rgb(220,13,41)"/><text x="15.2495%" y="1279.50"></text></g><g><title>tokio::coop::CURRENT::__getit (1 samples, 0.01%)</title><rect x="15.0102%" y="1285" width="0.0107%" height="15" fill="rgb(249,221,25)"/><text x="15.2602%" y="1295.50"></text></g><g><title>rho_runtime (1,397 samples, 14.98%)</title><rect x="0.0536%" y="1301" width="14.9780%" height="15" fill="rgb(215,208,19)"/><text x="0.3036%" y="1311.50">rho_runtime</text></g><g><title>tokio::runtime::spawner::Spawner::spawn (1 samples, 0.01%)</title><rect x="15.0209%" y="1285" width="0.0107%" height="15" fill="rgb(236,175,2)"/><text x="15.2709%" y="1295.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="15.0316%" y="1285" width="0.0107%" height="15" fill="rgb(241,52,2)"/><text x="15.2816%" y="1295.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (4 samples, 0.04%)</title><rect x="15.0424%" y="1285" width="0.0429%" height="15" fill="rgb(248,140,14)"/><text x="15.2924%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.01%)</title><rect x="15.0745%" y="1269" width="0.0107%" height="15" fill="rgb(253,22,42)"/><text x="15.3245%" y="1279.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="15.0745%" y="1253" width="0.0107%" height="15" fill="rgb(234,61,47)"/><text x="15.3245%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="15.0960%" y="1221" width="0.0107%" height="15" fill="rgb(208,226,15)"/><text x="15.3460%" y="1231.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="15.0960%" y="1205" width="0.0107%" height="15" fill="rgb(217,221,4)"/><text x="15.3460%" y="1215.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="15.0960%" y="1189" width="0.0107%" height="15" fill="rgb(212,174,34)"/><text x="15.3460%" y="1199.50"></text></g><g><title>&lt;rho_runtime::storage::TaggedContinuation as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="15.0852%" y="1285" width="0.0322%" height="15" fill="rgb(253,83,4)"/><text x="15.3352%" y="1295.50"></text></g><g><title>&lt;model::rho_types::ParWithRandom as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="15.0852%" y="1269" width="0.0322%" height="15" fill="rgb(250,195,49)"/><text x="15.3352%" y="1279.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="15.0852%" y="1253" width="0.0322%" height="15" fill="rgb(241,192,25)"/><text x="15.3352%" y="1263.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="15.0852%" y="1237" width="0.0322%" height="15" fill="rgb(208,124,10)"/><text x="15.3352%" y="1247.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="15.1067%" y="1221" width="0.0107%" height="15" fill="rgb(222,33,0)"/><text x="15.3567%" y="1231.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="15.1067%" y="1205" width="0.0107%" height="15" fill="rgb(234,209,28)"/><text x="15.3567%" y="1215.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="15.1067%" y="1189" width="0.0107%" height="15" fill="rgb(224,11,23)"/><text x="15.3567%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="15.1067%" y="1173" width="0.0107%" height="15" fill="rgb(232,99,1)"/><text x="15.3567%" y="1183.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="15.1067%" y="1157" width="0.0107%" height="15" fill="rgb(237,95,45)"/><text x="15.3567%" y="1167.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="15.1067%" y="1141" width="0.0107%" height="15" fill="rgb(208,109,11)"/><text x="15.3567%" y="1151.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="15.1067%" y="1125" width="0.0107%" height="15" fill="rgb(216,190,48)"/><text x="15.3567%" y="1135.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="15.1067%" y="1109" width="0.0107%" height="15" fill="rgb(251,171,36)"/><text x="15.3567%" y="1119.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="15.1067%" y="1093" width="0.0107%" height="15" fill="rgb(230,62,22)"/><text x="15.3567%" y="1103.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="15.1174%" y="1285" width="0.0107%" height="15" fill="rgb(225,114,35)"/><text x="15.3674%" y="1295.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (1 samples, 0.01%)</title><rect x="15.1281%" y="1269" width="0.0107%" height="15" fill="rgb(215,118,42)"/><text x="15.3781%" y="1279.50"></text></g><g><title>[[heap]] (2 samples, 0.02%)</title><rect x="15.1281%" y="1285" width="0.0214%" height="15" fill="rgb(243,119,21)"/><text x="15.3781%" y="1295.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (1 samples, 0.01%)</title><rect x="15.1388%" y="1269" width="0.0107%" height="15" fill="rgb(252,177,53)"/><text x="15.3888%" y="1279.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="15.1496%" y="1269" width="0.0107%" height="15" fill="rgb(237,209,29)"/><text x="15.3996%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="15.1603%" y="1269" width="0.0107%" height="15" fill="rgb(212,65,23)"/><text x="15.4103%" y="1279.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="15.1710%" y="1269" width="0.0107%" height="15" fill="rgb(230,222,46)"/><text x="15.4210%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="15.1817%" y="1269" width="0.0107%" height="15" fill="rgb(215,135,32)"/><text x="15.4317%" y="1279.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="15.1925%" y="1269" width="0.0107%" height="15" fill="rgb(246,101,22)"/><text x="15.4425%" y="1279.50"></text></g><g><title>alloc::slice::merge_sort (2 samples, 0.02%)</title><rect x="15.2032%" y="1269" width="0.0214%" height="15" fill="rgb(206,107,13)"/><text x="15.4532%" y="1279.50"></text></g><g><title>[[stack]] (8 samples, 0.09%)</title><rect x="15.1496%" y="1285" width="0.0858%" height="15" fill="rgb(250,100,44)"/><text x="15.3996%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (1 samples, 0.01%)</title><rect x="15.2246%" y="1269" width="0.0107%" height="15" fill="rgb(231,147,38)"/><text x="15.4746%" y="1279.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (20 samples, 0.21%)</title><rect x="15.2353%" y="1269" width="0.2144%" height="15" fill="rgb(229,8,40)"/><text x="15.4853%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.08%)</title><rect x="15.4819%" y="1253" width="0.0751%" height="15" fill="rgb(221,135,30)"/><text x="15.7319%" y="1263.50"></text></g><g><title>&lt;model::rho_types::GUnforgeable as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="15.5570%" y="1205" width="0.0107%" height="15" fill="rgb(249,193,18)"/><text x="15.8070%" y="1215.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="15.5570%" y="1189" width="0.0107%" height="15" fill="rgb(209,133,39)"/><text x="15.8070%" y="1199.50"></text></g><g><title>&lt;model::rho_types::g_unforgeable::UnfInstance as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="15.5570%" y="1173" width="0.0107%" height="15" fill="rgb(232,100,14)"/><text x="15.8070%" y="1183.50"></text></g><g><title>&lt;model::rho_types::GPrivate as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="15.5570%" y="1157" width="0.0107%" height="15" fill="rgb(224,185,1)"/><text x="15.8070%" y="1167.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="15.5570%" y="1141" width="0.0107%" height="15" fill="rgb(223,139,8)"/><text x="15.8070%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.14%)</title><rect x="15.4498%" y="1269" width="0.1394%" height="15" fill="rgb(232,213,38)"/><text x="15.6998%" y="1279.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.03%)</title><rect x="15.5570%" y="1253" width="0.0322%" height="15" fill="rgb(207,94,22)"/><text x="15.8070%" y="1263.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.03%)</title><rect x="15.5570%" y="1237" width="0.0322%" height="15" fill="rgb(219,183,54)"/><text x="15.8070%" y="1247.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.03%)</title><rect x="15.5570%" y="1221" width="0.0322%" height="15" fill="rgb(216,185,54)"/><text x="15.8070%" y="1231.50"></text></g><g><title>&lt;model::rho_types::Send as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="15.5677%" y="1205" width="0.0214%" height="15" fill="rgb(254,217,39)"/><text x="15.8177%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="15.5784%" y="1189" width="0.0107%" height="15" fill="rgb(240,178,23)"/><text x="15.8284%" y="1199.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::produce::{{closure}} (6 samples, 0.06%)</title><rect x="15.6320%" y="1253" width="0.0643%" height="15" fill="rgb(218,11,47)"/><text x="15.8820%" y="1263.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3 samples, 0.03%)</title><rect x="15.6642%" y="1237" width="0.0322%" height="15" fill="rgb(218,51,51)"/><text x="15.9142%" y="1247.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.13%)</title><rect x="15.5891%" y="1269" width="0.1287%" height="15" fill="rgb(238,126,27)"/><text x="15.8391%" y="1279.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation::{{closure}} (2 samples, 0.02%)</title><rect x="15.6964%" y="1253" width="0.0214%" height="15" fill="rgb(249,202,22)"/><text x="15.9464%" y="1263.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="15.7178%" y="1269" width="0.0107%" height="15" fill="rgb(254,195,49)"/><text x="15.9678%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.06%)</title><rect x="15.7714%" y="1253" width="0.0643%" height="15" fill="rgb(208,123,14)"/><text x="16.0214%" y="1263.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.05%)</title><rect x="15.7821%" y="1237" width="0.0536%" height="15" fill="rgb(224,200,8)"/><text x="16.0321%" y="1247.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.05%)</title><rect x="15.7821%" y="1221" width="0.0536%" height="15" fill="rgb(217,61,36)"/><text x="16.0321%" y="1231.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (13 samples, 0.14%)</title><rect x="15.7285%" y="1269" width="0.1394%" height="15" fill="rgb(206,35,45)"/><text x="15.9785%" y="1279.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="15.8357%" y="1253" width="0.0322%" height="15" fill="rgb(217,65,33)"/><text x="16.0857%" y="1263.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="15.8357%" y="1237" width="0.0322%" height="15" fill="rgb(222,158,48)"/><text x="16.0857%" y="1247.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="15.8357%" y="1221" width="0.0322%" height="15" fill="rgb(254,2,54)"/><text x="16.0857%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="15.8357%" y="1205" width="0.0322%" height="15" fill="rgb(250,143,38)"/><text x="16.0857%" y="1215.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.03%)</title><rect x="15.8357%" y="1189" width="0.0322%" height="15" fill="rgb(248,25,0)"/><text x="16.0857%" y="1199.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.03%)</title><rect x="15.8357%" y="1173" width="0.0322%" height="15" fill="rgb(206,152,27)"/><text x="16.0857%" y="1183.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.03%)</title><rect x="15.8357%" y="1157" width="0.0322%" height="15" fill="rgb(240,77,30)"/><text x="16.0857%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="15.8357%" y="1141" width="0.0322%" height="15" fill="rgb(231,5,3)"/><text x="16.0857%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="15.8357%" y="1125" width="0.0322%" height="15" fill="rgb(207,226,32)"/><text x="16.0857%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="15.8465%" y="1109" width="0.0214%" height="15" fill="rgb(222,207,47)"/><text x="16.0965%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="15.8465%" y="1093" width="0.0214%" height="15" fill="rgb(229,115,45)"/><text x="16.0965%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="15.8465%" y="1077" width="0.0214%" height="15" fill="rgb(224,191,6)"/><text x="16.0965%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="15.8465%" y="1061" width="0.0214%" height="15" fill="rgb(230,227,24)"/><text x="16.0965%" y="1071.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash (1 samples, 0.01%)</title><rect x="15.8679%" y="1269" width="0.0107%" height="15" fill="rgb(228,80,19)"/><text x="16.1179%" y="1279.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash::traverse (2 samples, 0.02%)</title><rect x="15.8786%" y="1269" width="0.0214%" height="15" fill="rgb(247,229,0)"/><text x="16.1286%" y="1279.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_nested_expressions (1 samples, 0.01%)</title><rect x="15.9001%" y="1269" width="0.0107%" height="15" fill="rgb(237,194,15)"/><text x="16.1501%" y="1279.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (2 samples, 0.02%)</title><rect x="15.9108%" y="1269" width="0.0214%" height="15" fill="rgb(219,203,20)"/><text x="16.1608%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.01%)</title><rect x="15.9215%" y="1253" width="0.0107%" height="15" fill="rgb(234,128,8)"/><text x="16.1715%" y="1263.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="15.9215%" y="1237" width="0.0107%" height="15" fill="rgb(248,202,8)"/><text x="16.1715%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="15.9322%" y="1253" width="0.0107%" height="15" fill="rgb(206,104,37)"/><text x="16.1822%" y="1263.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (2 samples, 0.02%)</title><rect x="15.9322%" y="1269" width="0.0214%" height="15" fill="rgb(223,8,27)"/><text x="16.1822%" y="1279.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="15.9430%" y="1253" width="0.0107%" height="15" fill="rgb(216,217,28)"/><text x="16.1930%" y="1263.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="15.9537%" y="1269" width="0.0107%" height="15" fill="rgb(249,199,1)"/><text x="16.2037%" y="1279.50"></text></g><g><title>&lt;tokio::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="15.9644%" y="1269" width="0.0214%" height="15" fill="rgb(240,85,17)"/><text x="16.2144%" y="1279.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (1 samples, 0.01%)</title><rect x="15.9858%" y="1269" width="0.0107%" height="15" fill="rgb(206,108,45)"/><text x="16.2358%" y="1279.50"></text></g><g><title>tokio::runtime::park::Inner::park (1 samples, 0.01%)</title><rect x="15.9858%" y="1253" width="0.0107%" height="15" fill="rgb(245,210,41)"/><text x="16.2358%" y="1263.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park_timeout (1 samples, 0.01%)</title><rect x="15.9966%" y="1269" width="0.0107%" height="15" fill="rgb(206,13,37)"/><text x="16.2466%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::coop::RestoreOnPending&gt; (1 samples, 0.01%)</title><rect x="16.0180%" y="1253" width="0.0107%" height="15" fill="rgb(250,61,18)"/><text x="16.2680%" y="1263.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.04%)</title><rect x="16.0073%" y="1269" width="0.0429%" height="15" fill="rgb(235,172,48)"/><text x="16.2573%" y="1279.50"></text></g><g><title>tokio::coop::poll_proceed (2 samples, 0.02%)</title><rect x="16.0287%" y="1253" width="0.0214%" height="15" fill="rgb(249,201,17)"/><text x="16.2787%" y="1263.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="16.0287%" y="1237" width="0.0214%" height="15" fill="rgb(219,208,6)"/><text x="16.2787%" y="1247.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="16.0287%" y="1221" width="0.0214%" height="15" fill="rgb(248,31,23)"/><text x="16.2787%" y="1231.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (1 samples, 0.01%)</title><rect x="16.0395%" y="1205" width="0.0107%" height="15" fill="rgb(245,15,42)"/><text x="16.2895%" y="1215.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="16.0502%" y="1269" width="0.0214%" height="15" fill="rgb(222,217,39)"/><text x="16.3002%" y="1279.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::poll_recv (2 samples, 0.02%)</title><rect x="16.0502%" y="1253" width="0.0214%" height="15" fill="rgb(210,219,27)"/><text x="16.3002%" y="1263.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.10%)</title><rect x="16.0716%" y="1269" width="0.0965%" height="15" fill="rgb(252,166,36)"/><text x="16.3216%" y="1279.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.01%)</title><rect x="16.1681%" y="1269" width="0.0107%" height="15" fill="rgb(245,132,34)"/><text x="16.4181%" y="1279.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="16.1788%" y="1269" width="0.0107%" height="15" fill="rgb(236,54,3)"/><text x="16.4288%" y="1279.50"></text></g><g><title>__rg_alloc (4 samples, 0.04%)</title><rect x="16.1896%" y="1269" width="0.0429%" height="15" fill="rgb(241,173,43)"/><text x="16.4396%" y="1279.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (3 samples, 0.03%)</title><rect x="16.2003%" y="1253" width="0.0322%" height="15" fill="rgb(215,190,9)"/><text x="16.4503%" y="1263.50"></text></g><g><title>__rg_dealloc (5 samples, 0.05%)</title><rect x="16.2324%" y="1269" width="0.0536%" height="15" fill="rgb(242,101,16)"/><text x="16.4824%" y="1279.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (5 samples, 0.05%)</title><rect x="16.2324%" y="1253" width="0.0536%" height="15" fill="rgb(223,190,21)"/><text x="16.4824%" y="1263.50"></text></g><g><title>__rust_probestack (4 samples, 0.04%)</title><rect x="16.2861%" y="1269" width="0.0429%" height="15" fill="rgb(215,228,25)"/><text x="16.5361%" y="1279.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (3 samples, 0.03%)</title><rect x="16.3289%" y="1269" width="0.0322%" height="15" fill="rgb(225,36,22)"/><text x="16.5789%" y="1279.50"></text></g><g><title>_rjem_je_extent_heap_remove_first (1 samples, 0.01%)</title><rect x="16.3611%" y="1269" width="0.0107%" height="15" fill="rgb(251,106,46)"/><text x="16.6111%" y="1279.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.01%)</title><rect x="16.3718%" y="1269" width="0.0107%" height="15" fill="rgb(208,90,1)"/><text x="16.6218%" y="1279.50"></text></g><g><title>_rjem_mallocx (3 samples, 0.03%)</title><rect x="16.3825%" y="1269" width="0.0322%" height="15" fill="rgb(243,10,4)"/><text x="16.6325%" y="1279.50"></text></g><g><title>_rjem_sdallocx (6 samples, 0.06%)</title><rect x="16.4147%" y="1269" width="0.0643%" height="15" fill="rgb(212,137,27)"/><text x="16.6647%" y="1279.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (7 samples, 0.08%)</title><rect x="16.5112%" y="1221" width="0.0751%" height="15" fill="rgb(231,220,49)"/><text x="16.7612%" y="1231.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="16.5648%" y="1205" width="0.0214%" height="15" fill="rgb(237,96,20)"/><text x="16.8148%" y="1215.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="16.5755%" y="1189" width="0.0107%" height="15" fill="rgb(239,229,30)"/><text x="16.8255%" y="1199.50"></text></g><g><title>&lt;model::rho_types::ELt as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="16.5755%" y="1173" width="0.0107%" height="15" fill="rgb(219,65,33)"/><text x="16.8255%" y="1183.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="16.5755%" y="1157" width="0.0107%" height="15" fill="rgb(243,134,7)"/><text x="16.8255%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="16.5863%" y="1221" width="0.0322%" height="15" fill="rgb(216,177,54)"/><text x="16.8363%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="16.5863%" y="1205" width="0.0322%" height="15" fill="rgb(211,160,20)"/><text x="16.8363%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.03%)</title><rect x="16.5863%" y="1189" width="0.0322%" height="15" fill="rgb(239,85,39)"/><text x="16.8363%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.03%)</title><rect x="16.5863%" y="1173" width="0.0322%" height="15" fill="rgb(232,125,22)"/><text x="16.8363%" y="1183.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.03%)</title><rect x="16.5863%" y="1157" width="0.0322%" height="15" fill="rgb(244,57,34)"/><text x="16.8363%" y="1167.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.03%)</title><rect x="16.5863%" y="1141" width="0.0322%" height="15" fill="rgb(214,203,32)"/><text x="16.8363%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14 samples, 0.15%)</title><rect x="16.4790%" y="1269" width="0.1501%" height="15" fill="rgb(207,58,43)"/><text x="16.7290%" y="1279.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.12%)</title><rect x="16.5112%" y="1253" width="0.1179%" height="15" fill="rgb(215,193,15)"/><text x="16.7612%" y="1263.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.12%)</title><rect x="16.5112%" y="1237" width="0.1179%" height="15" fill="rgb(232,15,44)"/><text x="16.7612%" y="1247.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="16.6184%" y="1221" width="0.0107%" height="15" fill="rgb(212,3,48)"/><text x="16.8684%" y="1231.50"></text></g><g><title>alloc::slice::merge_sort (5 samples, 0.05%)</title><rect x="16.6291%" y="1269" width="0.0536%" height="15" fill="rgb(218,128,7)"/><text x="16.8791%" y="1279.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.01%)</title><rect x="16.6827%" y="1269" width="0.0107%" height="15" fill="rgb(226,216,39)"/><text x="16.9327%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::oneshot::Inner&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="16.6827%" y="1253" width="0.0107%" height="15" fill="rgb(243,47,51)"/><text x="16.9327%" y="1263.50"></text></g><g><title>&lt;tokio::sync::oneshot::Inner&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="16.6827%" y="1237" width="0.0107%" height="15" fill="rgb(241,183,40)"/><text x="16.9327%" y="1247.50"></text></g><g><title>blake3::ChunkState::update (4 samples, 0.04%)</title><rect x="16.6935%" y="1269" width="0.0429%" height="15" fill="rgb(231,217,32)"/><text x="16.9435%" y="1279.50"></text></g><g><title>blake3::Hasher::merge_cv_stack (1 samples, 0.01%)</title><rect x="16.7364%" y="1269" width="0.0107%" height="15" fill="rgb(229,61,38)"/><text x="16.9864%" y="1279.50"></text></g><g><title>core::num::&lt;impl u64&gt;::count_ones (1 samples, 0.01%)</title><rect x="16.7364%" y="1253" width="0.0107%" height="15" fill="rgb(225,210,5)"/><text x="16.9864%" y="1263.50"></text></g><g><title>blake3::Hasher::new (1 samples, 0.01%)</title><rect x="16.7471%" y="1269" width="0.0107%" height="15" fill="rgb(231,79,45)"/><text x="16.9971%" y="1279.50"></text></g><g><title>bytes::bytes::shared_drop (1 samples, 0.01%)</title><rect x="16.7578%" y="1269" width="0.0107%" height="15" fill="rgb(224,100,7)"/><text x="17.0078%" y="1279.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (1 samples, 0.01%)</title><rect x="16.7578%" y="1253" width="0.0107%" height="15" fill="rgb(241,198,18)"/><text x="17.0078%" y="1263.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (1 samples, 0.01%)</title><rect x="16.7578%" y="1237" width="0.0107%" height="15" fill="rgb(252,97,53)"/><text x="17.0078%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="16.7900%" y="1205" width="0.0107%" height="15" fill="rgb(220,88,7)"/><text x="17.0400%" y="1215.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="16.7900%" y="1189" width="0.0107%" height="15" fill="rgb(213,176,14)"/><text x="17.0400%" y="1199.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="16.7900%" y="1173" width="0.0107%" height="15" fill="rgb(246,73,7)"/><text x="17.0400%" y="1183.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (4 samples, 0.04%)</title><rect x="16.7685%" y="1269" width="0.0429%" height="15" fill="rgb(245,64,36)"/><text x="17.0185%" y="1279.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.04%)</title><rect x="16.7685%" y="1253" width="0.0429%" height="15" fill="rgb(245,80,10)"/><text x="17.0185%" y="1263.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (4 samples, 0.04%)</title><rect x="16.7685%" y="1237" width="0.0429%" height="15" fill="rgb(232,107,50)"/><text x="17.0185%" y="1247.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="16.7685%" y="1221" width="0.0429%" height="15" fill="rgb(253,3,0)"/><text x="17.0185%" y="1231.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="16.8007%" y="1205" width="0.0107%" height="15" fill="rgb(212,99,53)"/><text x="17.0507%" y="1215.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="16.8007%" y="1189" width="0.0107%" height="15" fill="rgb(249,111,54)"/><text x="17.0507%" y="1199.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="16.8007%" y="1173" width="0.0107%" height="15" fill="rgb(249,55,30)"/><text x="17.0507%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="16.8007%" y="1157" width="0.0107%" height="15" fill="rgb(237,47,42)"/><text x="17.0507%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="16.8007%" y="1141" width="0.0107%" height="15" fill="rgb(211,20,18)"/><text x="17.0507%" y="1151.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="16.8007%" y="1125" width="0.0107%" height="15" fill="rgb(231,203,46)"/><text x="17.0507%" y="1135.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="16.8007%" y="1109" width="0.0107%" height="15" fill="rgb(237,142,3)"/><text x="17.0507%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="16.8007%" y="1093" width="0.0107%" height="15" fill="rgb(241,107,1)"/><text x="17.0507%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="16.8007%" y="1077" width="0.0107%" height="15" fill="rgb(229,83,13)"/><text x="17.0507%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;rho_runtime::storage::coordinator::AsyncStore as rho_runtime::storage::Storage&gt;::produce::{{closure}}&gt;&gt; (3 samples, 0.03%)</title><rect x="16.8114%" y="1269" width="0.0322%" height="15" fill="rgb(241,91,40)"/><text x="17.0614%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;(),rho_runtime::storage::coordinator::PendingTask&gt;&gt; (2 samples, 0.02%)</title><rect x="16.8436%" y="1269" width="0.0214%" height="15" fill="rgb(225,3,45)"/><text x="17.0936%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;(),rho_runtime::storage::transit::Transit&gt;&gt; (1 samples, 0.01%)</title><rect x="16.8650%" y="1269" width="0.0107%" height="15" fill="rgb(244,223,14)"/><text x="17.1150%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (3 samples, 0.03%)</title><rect x="16.8757%" y="1269" width="0.0322%" height="15" fill="rgb(224,124,37)"/><text x="17.1257%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::CoreStage&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_join_double::{{closure}}&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="16.9079%" y="1269" width="0.0107%" height="15" fill="rgb(251,171,30)"/><text x="17.1579%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::CoreStage&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_produce::{{closure}}&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="16.9186%" y="1269" width="0.0107%" height="15" fill="rgb(236,46,54)"/><text x="17.1686%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_join_double::{{closure}}&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="16.9293%" y="1269" width="0.0107%" height="15" fill="rgb(245,213,5)"/><text x="17.1793%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_produce::{{closure}}&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="16.9401%" y="1269" width="0.0107%" height="15" fill="rgb(230,144,27)"/><text x="17.1901%" y="1279.50"></text></g><g><title>extent_split_interior (1 samples, 0.01%)</title><rect x="16.9508%" y="1269" width="0.0107%" height="15" fill="rgb(220,86,6)"/><text x="17.2008%" y="1279.50"></text></g><g><title>free_stacks (1 samples, 0.01%)</title><rect x="16.9615%" y="1269" width="0.0107%" height="15" fill="rgb(240,20,13)"/><text x="17.2115%" y="1279.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (1 samples, 0.01%)</title><rect x="16.9615%" y="1253" width="0.0107%" height="15" fill="rgb(217,89,34)"/><text x="17.2115%" y="1263.50"></text></g><g><title>jemallocator::layout_to_flags (1 samples, 0.01%)</title><rect x="16.9722%" y="1269" width="0.0107%" height="15" fill="rgb(229,13,5)"/><text x="17.2222%" y="1279.50"></text></g><g><title>model::ordering::sort_par::&lt;impl model::ordering::Sortable for model::rho_types::Par&gt;::sort (1 samples, 0.01%)</title><rect x="16.9830%" y="1269" width="0.0107%" height="15" fill="rgb(244,67,35)"/><text x="17.2330%" y="1279.50"></text></g><g><title>model::rho_types::Par::append_expr (4 samples, 0.04%)</title><rect x="16.9937%" y="1269" width="0.0429%" height="15" fill="rgb(221,40,2)"/><text x="17.2437%" y="1279.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (2 samples, 0.02%)</title><rect x="17.0366%" y="1269" width="0.0214%" height="15" fill="rgb(237,157,21)"/><text x="17.2866%" y="1279.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (2 samples, 0.02%)</title><rect x="17.0366%" y="1253" width="0.0214%" height="15" fill="rgb(222,94,11)"/><text x="17.2866%" y="1263.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (2 samples, 0.02%)</title><rect x="17.0366%" y="1237" width="0.0214%" height="15" fill="rgb(249,113,6)"/><text x="17.2866%" y="1247.50"></text></g><g><title>&lt;std::time::Instant as core::cmp::PartialOrd&gt;::gt (2 samples, 0.02%)</title><rect x="17.0366%" y="1221" width="0.0214%" height="15" fill="rgb(238,137,36)"/><text x="17.2866%" y="1231.50"></text></g><g><title>&lt;std::sys::unix::time::inner::Instant as core::cmp::PartialOrd&gt;::partial_cmp (2 samples, 0.02%)</title><rect x="17.0366%" y="1205" width="0.0214%" height="15" fill="rgb(210,102,26)"/><text x="17.2866%" y="1215.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (3 samples, 0.03%)</title><rect x="17.0580%" y="1269" width="0.0322%" height="15" fill="rgb(218,30,30)"/><text x="17.3080%" y="1279.50"></text></g><g><title>parking_lot_core::parking_lot::park (3 samples, 0.03%)</title><rect x="17.0580%" y="1253" width="0.0322%" height="15" fill="rgb(214,67,26)"/><text x="17.3080%" y="1263.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (3 samples, 0.03%)</title><rect x="17.0580%" y="1237" width="0.0322%" height="15" fill="rgb(251,9,53)"/><text x="17.3080%" y="1247.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.03%)</title><rect x="17.0580%" y="1221" width="0.0322%" height="15" fill="rgb(228,204,25)"/><text x="17.3080%" y="1231.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (1 samples, 0.01%)</title><rect x="17.0902%" y="1269" width="0.0107%" height="15" fill="rgb(207,153,8)"/><text x="17.3402%" y="1279.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::handle_comm_events (1 samples, 0.01%)</title><rect x="17.1009%" y="1269" width="0.0107%" height="15" fill="rgb(242,9,16)"/><text x="17.3509%" y="1279.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (3 samples, 0.03%)</title><rect x="17.1116%" y="1269" width="0.0322%" height="15" fill="rgb(217,211,10)"/><text x="17.3616%" y="1279.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate::relop (1 samples, 0.01%)</title><rect x="17.1438%" y="1269" width="0.0107%" height="15" fill="rgb(219,228,52)"/><text x="17.3938%" y="1279.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (3 samples, 0.03%)</title><rect x="17.1545%" y="1269" width="0.0322%" height="15" fill="rgb(231,92,29)"/><text x="17.4045%" y="1279.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::eval_eplus::&lt;impl rho_runtime::interpreter::reduce::eval_expression::ExprInstanceEvaluator&lt;S&gt; for model::rho_types::EPlus&gt;::evaluate (3 samples, 0.03%)</title><rect x="17.1545%" y="1253" width="0.0322%" height="15" fill="rgb(232,8,23)"/><text x="17.4045%" y="1263.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_send::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Send&gt;::evaluate (2 samples, 0.02%)</title><rect x="17.1867%" y="1269" width="0.0214%" height="15" fill="rgb(216,211,34)"/><text x="17.4367%" y="1279.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute (1 samples, 0.01%)</title><rect x="17.1974%" y="1253" width="0.0107%" height="15" fill="rgb(236,151,0)"/><text x="17.4474%" y="1263.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_var::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S,model::rho_types::Par&gt; for model::rho_types::Var&gt;::evaluate (3 samples, 0.03%)</title><rect x="17.2081%" y="1269" width="0.0322%" height="15" fill="rgb(209,168,3)"/><text x="17.4581%" y="1279.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::substitute_expressions_in_par (1 samples, 0.01%)</title><rect x="17.2403%" y="1269" width="0.0107%" height="15" fill="rgb(208,129,28)"/><text x="17.4903%" y="1279.50"></text></g><g><title>rho_runtime::storage::transit::Transit::match_one (1 samples, 0.01%)</title><rect x="17.2510%" y="1253" width="0.0107%" height="15" fill="rgb(229,78,22)"/><text x="17.5010%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;*const rho_runtime::storage::transit::SharedJoinedConsumer,smallvec::SmallVec&lt;[[usize: 2]: 3]&gt;,core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="17.2510%" y="1237" width="0.0107%" height="15" fill="rgb(228,187,13)"/><text x="17.5010%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;*const rho_runtime::storage::transit::SharedJoinedConsumer,smallvec::SmallVec&lt;[[usize: 2]: 3]&gt;,core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="17.2510%" y="1221" width="0.0107%" height="15" fill="rgb(240,119,24)"/><text x="17.5010%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(*const rho_runtime::storage::transit::SharedJoinedConsumer,smallvec::SmallVec&lt;[[usize: 2]: 3]&gt;)&gt;&gt; (1 samples, 0.01%)</title><rect x="17.2510%" y="1205" width="0.0107%" height="15" fill="rgb(209,194,42)"/><text x="17.5010%" y="1215.50"></text></g><g><title>rho_runtime::storage::transit::Transit::join (2 samples, 0.02%)</title><rect x="17.2510%" y="1269" width="0.0214%" height="15" fill="rgb(247,200,46)"/><text x="17.5010%" y="1279.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::push (1 samples, 0.01%)</title><rect x="17.2617%" y="1253" width="0.0107%" height="15" fill="rgb(218,76,16)"/><text x="17.5117%" y="1263.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="17.2617%" y="1237" width="0.0107%" height="15" fill="rgb(225,21,48)"/><text x="17.5117%" y="1247.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.06%)</title><rect x="17.2724%" y="1269" width="0.0643%" height="15" fill="rgb(239,223,50)"/><text x="17.5224%" y="1279.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.06%)</title><rect x="17.2724%" y="1253" width="0.0643%" height="15" fill="rgb(244,45,21)"/><text x="17.5224%" y="1263.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (6 samples, 0.06%)</title><rect x="17.2724%" y="1237" width="0.0643%" height="15" fill="rgb(232,33,43)"/><text x="17.5224%" y="1247.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (6 samples, 0.06%)</title><rect x="17.2724%" y="1221" width="0.0643%" height="15" fill="rgb(209,8,3)"/><text x="17.5224%" y="1231.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (6 samples, 0.06%)</title><rect x="17.2724%" y="1205" width="0.0643%" height="15" fill="rgb(214,25,53)"/><text x="17.5224%" y="1215.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (6 samples, 0.06%)</title><rect x="17.2724%" y="1189" width="0.0643%" height="15" fill="rgb(254,186,54)"/><text x="17.5224%" y="1199.50"></text></g><g><title>syscall (5 samples, 0.05%)</title><rect x="17.3368%" y="1269" width="0.0536%" height="15" fill="rgb(208,174,49)"/><text x="17.5868%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="17.3797%" y="1253" width="0.0107%" height="15" fill="rgb(233,191,51)"/><text x="17.6297%" y="1263.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (5 samples, 0.05%)</title><rect x="17.3904%" y="1269" width="0.0536%" height="15" fill="rgb(222,134,10)"/><text x="17.6404%" y="1279.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send::{{closure}} (1 samples, 0.01%)</title><rect x="17.4333%" y="1253" width="0.0107%" height="15" fill="rgb(230,226,20)"/><text x="17.6833%" y="1263.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (5 samples, 0.05%)</title><rect x="17.4440%" y="1269" width="0.0536%" height="15" fill="rgb(251,111,25)"/><text x="17.6940%" y="1279.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.03%)</title><rect x="17.4654%" y="1253" width="0.0322%" height="15" fill="rgb(224,40,46)"/><text x="17.7154%" y="1263.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.03%)</title><rect x="17.4654%" y="1237" width="0.0322%" height="15" fill="rgb(236,108,47)"/><text x="17.7154%" y="1247.50"></text></g><g><title>tokio::park::thread::wake (1 samples, 0.01%)</title><rect x="17.4976%" y="1269" width="0.0107%" height="15" fill="rgb(234,93,0)"/><text x="17.7476%" y="1279.50"></text></g><g><title>tokio::runtime::queue::Local&lt;T&gt;::pop (1 samples, 0.01%)</title><rect x="17.5083%" y="1269" width="0.0107%" height="15" fill="rgb(224,213,32)"/><text x="17.7583%" y="1279.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (1 samples, 0.01%)</title><rect x="17.5190%" y="1269" width="0.0107%" height="15" fill="rgb(251,11,48)"/><text x="17.7690%" y="1279.50"></text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (1 samples, 0.01%)</title><rect x="17.5190%" y="1253" width="0.0107%" height="15" fill="rgb(236,173,5)"/><text x="17.7690%" y="1263.50"></text></g><g><title>tokio::runtime::task::joinable (1 samples, 0.01%)</title><rect x="17.5190%" y="1237" width="0.0107%" height="15" fill="rgb(230,95,12)"/><text x="17.7690%" y="1247.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (1 samples, 0.01%)</title><rect x="17.5190%" y="1221" width="0.0107%" height="15" fill="rgb(232,209,1)"/><text x="17.7690%" y="1231.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (1 samples, 0.01%)</title><rect x="17.5298%" y="1269" width="0.0107%" height="15" fill="rgb(232,6,1)"/><text x="17.7798%" y="1279.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (3 samples, 0.03%)</title><rect x="17.5405%" y="1269" width="0.0322%" height="15" fill="rgb(210,224,50)"/><text x="17.7905%" y="1279.50"></text></g><g><title>tokio::runtime::task::harness::SchedulerView&lt;S&gt;::transition_to_terminal (2 samples, 0.02%)</title><rect x="17.5512%" y="1253" width="0.0214%" height="15" fill="rgb(228,127,35)"/><text x="17.8012%" y="1263.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::release (1 samples, 0.01%)</title><rect x="17.5619%" y="1237" width="0.0107%" height="15" fill="rgb(245,102,45)"/><text x="17.8119%" y="1247.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="17.5619%" y="1221" width="0.0107%" height="15" fill="rgb(214,1,49)"/><text x="17.8119%" y="1231.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::release::{{closure}} (1 samples, 0.01%)</title><rect x="17.5619%" y="1205" width="0.0107%" height="15" fill="rgb(226,163,40)"/><text x="17.8119%" y="1215.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (7 samples, 0.08%)</title><rect x="17.5726%" y="1269" width="0.0751%" height="15" fill="rgb(239,212,28)"/><text x="17.8226%" y="1279.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (1 samples, 0.01%)</title><rect x="17.6477%" y="1269" width="0.0107%" height="15" fill="rgb(220,20,13)"/><text x="17.8977%" y="1279.50"></text></g><g><title>tokio::runtime::task::raw::drop_join_handle_slow (2 samples, 0.02%)</title><rect x="17.6584%" y="1269" width="0.0214%" height="15" fill="rgb(210,164,35)"/><text x="17.9084%" y="1279.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (2 samples, 0.02%)</title><rect x="17.6584%" y="1253" width="0.0214%" height="15" fill="rgb(248,109,41)"/><text x="17.9084%" y="1263.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (1 samples, 0.01%)</title><rect x="17.6691%" y="1237" width="0.0107%" height="15" fill="rgb(238,23,50)"/><text x="17.9191%" y="1247.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::is_cancelled (1 samples, 0.01%)</title><rect x="17.6799%" y="1269" width="0.0107%" height="15" fill="rgb(211,48,49)"/><text x="17.9299%" y="1279.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::ref_count (1 samples, 0.01%)</title><rect x="17.6906%" y="1269" width="0.0107%" height="15" fill="rgb(223,36,21)"/><text x="17.9406%" y="1279.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_complete (2 samples, 0.02%)</title><rect x="17.7013%" y="1269" width="0.0214%" height="15" fill="rgb(207,123,46)"/><text x="17.9513%" y="1279.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_terminal (1 samples, 0.01%)</title><rect x="17.7227%" y="1269" width="0.0107%" height="15" fill="rgb(240,218,32)"/><text x="17.9727%" y="1279.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (4 samples, 0.04%)</title><rect x="17.7335%" y="1269" width="0.0429%" height="15" fill="rgb(252,5,43)"/><text x="17.9835%" y="1279.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_ref (1 samples, 0.01%)</title><rect x="17.7656%" y="1253" width="0.0107%" height="15" fill="rgb(252,84,19)"/><text x="18.0156%" y="1263.50"></text></g><g><title>tokio::runtime::thread_pool::worker::CURRENT::FOO::__getit (1 samples, 0.01%)</title><rect x="17.7763%" y="1269" width="0.0107%" height="15" fill="rgb(243,152,39)"/><text x="18.0263%" y="1279.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (2 samples, 0.02%)</title><rect x="17.7871%" y="1269" width="0.0214%" height="15" fill="rgb(234,160,15)"/><text x="18.0371%" y="1279.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (5 samples, 0.05%)</title><rect x="17.8085%" y="1269" width="0.0536%" height="15" fill="rgb(237,34,20)"/><text x="18.0585%" y="1279.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (5 samples, 0.05%)</title><rect x="17.8621%" y="1269" width="0.0536%" height="15" fill="rgb(229,97,13)"/><text x="18.1121%" y="1279.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::complete (2 samples, 0.02%)</title><rect x="17.8943%" y="1253" width="0.0214%" height="15" fill="rgb(234,71,50)"/><text x="18.1443%" y="1263.50"></text></g><g><title>tokio::sync::oneshot::State::is_complete (1 samples, 0.01%)</title><rect x="17.9157%" y="1269" width="0.0107%" height="15" fill="rgb(253,155,4)"/><text x="18.1657%" y="1279.50"></text></g><g><title>[anon] (252 samples, 2.70%)</title><rect x="15.2353%" y="1285" width="2.7018%" height="15" fill="rgb(222,185,37)"/><text x="15.4853%" y="1295.50">[a..</text></g><g><title>tokio::task::spawn::spawn (1 samples, 0.01%)</title><rect x="17.9265%" y="1269" width="0.0107%" height="15" fill="rgb(251,177,13)"/><text x="18.1765%" y="1279.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.06%)</title><rect x="17.9479%" y="1269" width="0.0643%" height="15" fill="rgb(250,179,40)"/><text x="18.1979%" y="1279.50"></text></g><g><title>&lt;rho_runtime::storage::coordinator::AsyncStore as rho_runtime::storage::Storage&gt;::produce::{{closure}} (5 samples, 0.05%)</title><rect x="17.9586%" y="1253" width="0.0536%" height="15" fill="rgb(242,44,2)"/><text x="18.2086%" y="1263.50"></text></g><g><title>tokio::sync::oneshot::channel (3 samples, 0.03%)</title><rect x="17.9801%" y="1237" width="0.0322%" height="15" fill="rgb(216,177,13)"/><text x="18.2301%" y="1247.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.10%)</title><rect x="17.9372%" y="1285" width="0.0965%" height="15" fill="rgb(216,106,43)"/><text x="18.1872%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::expr::ExprInstance&gt; (2 samples, 0.02%)</title><rect x="18.0122%" y="1269" width="0.0214%" height="15" fill="rgb(216,183,2)"/><text x="18.2622%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="18.5269%" y="741" width="0.0214%" height="15" fill="rgb(249,75,3)"/><text x="18.7769%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="18.5376%" y="725" width="0.0107%" height="15" fill="rgb(219,67,39)"/><text x="18.7876%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="18.5376%" y="709" width="0.0107%" height="15" fill="rgb(253,228,2)"/><text x="18.7876%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.04%)</title><rect x="18.7627%" y="629" width="0.0429%" height="15" fill="rgb(235,138,27)"/><text x="19.0127%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="18.7949%" y="613" width="0.0107%" height="15" fill="rgb(236,97,51)"/><text x="19.0449%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="18.8378%" y="533" width="0.0107%" height="15" fill="rgb(240,80,30)"/><text x="19.0878%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="18.8378%" y="517" width="0.0107%" height="15" fill="rgb(230,178,19)"/><text x="19.0878%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.10%)</title><rect x="18.7627%" y="645" width="0.0965%" height="15" fill="rgb(210,190,27)"/><text x="19.0127%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.05%)</title><rect x="18.8056%" y="629" width="0.0536%" height="15" fill="rgb(222,107,31)"/><text x="19.0556%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.05%)</title><rect x="18.8056%" y="613" width="0.0536%" height="15" fill="rgb(216,127,34)"/><text x="19.0556%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.05%)</title><rect x="18.8056%" y="597" width="0.0536%" height="15" fill="rgb(234,116,52)"/><text x="19.0556%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.04%)</title><rect x="18.8163%" y="581" width="0.0429%" height="15" fill="rgb(222,124,15)"/><text x="19.0663%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="18.8378%" y="565" width="0.0214%" height="15" fill="rgb(231,179,28)"/><text x="19.0878%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="18.8378%" y="549" width="0.0214%" height="15" fill="rgb(226,93,45)"/><text x="19.0878%" y="559.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="18.8485%" y="533" width="0.0107%" height="15" fill="rgb(215,8,51)"/><text x="19.0985%" y="543.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1 samples, 0.01%)</title><rect x="18.8485%" y="517" width="0.0107%" height="15" fill="rgb(223,106,5)"/><text x="19.0985%" y="527.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.01%)</title><rect x="18.8485%" y="501" width="0.0107%" height="15" fill="rgb(250,191,5)"/><text x="19.0985%" y="511.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.01%)</title><rect x="18.8485%" y="485" width="0.0107%" height="15" fill="rgb(242,132,44)"/><text x="19.0985%" y="495.50"></text></g><g><title>arena_slab_reg_alloc (1 samples, 0.01%)</title><rect x="18.8592%" y="293" width="0.0107%" height="15" fill="rgb(251,152,29)"/><text x="19.1092%" y="303.50"></text></g><g><title>bitmap_sfu (1 samples, 0.01%)</title><rect x="18.8592%" y="277" width="0.0107%" height="15" fill="rgb(218,179,5)"/><text x="19.1092%" y="287.50"></text></g><g><title>bitmap_set (1 samples, 0.01%)</title><rect x="18.8592%" y="261" width="0.0107%" height="15" fill="rgb(227,67,19)"/><text x="19.1092%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="18.8592%" y="533" width="0.0214%" height="15" fill="rgb(233,119,31)"/><text x="19.1092%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="18.8592%" y="517" width="0.0214%" height="15" fill="rgb(241,120,22)"/><text x="19.1092%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="18.8592%" y="501" width="0.0214%" height="15" fill="rgb(224,102,30)"/><text x="19.1092%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="18.8592%" y="485" width="0.0214%" height="15" fill="rgb(210,164,37)"/><text x="19.1092%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="18.8592%" y="469" width="0.0214%" height="15" fill="rgb(226,191,16)"/><text x="19.1092%" y="479.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="18.8592%" y="453" width="0.0214%" height="15" fill="rgb(214,40,45)"/><text x="19.1092%" y="463.50"></text></g><g><title>_rjem_mallocx (2 samples, 0.02%)</title><rect x="18.8592%" y="437" width="0.0214%" height="15" fill="rgb(244,29,26)"/><text x="19.1092%" y="447.50"></text></g><g><title>imalloc (2 samples, 0.02%)</title><rect x="18.8592%" y="421" width="0.0214%" height="15" fill="rgb(216,16,5)"/><text x="19.1092%" y="431.50"></text></g><g><title>imalloc_body (2 samples, 0.02%)</title><rect x="18.8592%" y="405" width="0.0214%" height="15" fill="rgb(249,76,35)"/><text x="19.1092%" y="415.50"></text></g><g><title>imalloc_no_sample (2 samples, 0.02%)</title><rect x="18.8592%" y="389" width="0.0214%" height="15" fill="rgb(207,11,44)"/><text x="19.1092%" y="399.50"></text></g><g><title>iallocztm (2 samples, 0.02%)</title><rect x="18.8592%" y="373" width="0.0214%" height="15" fill="rgb(228,190,49)"/><text x="19.1092%" y="383.50"></text></g><g><title>arena_malloc (2 samples, 0.02%)</title><rect x="18.8592%" y="357" width="0.0214%" height="15" fill="rgb(214,173,12)"/><text x="19.1092%" y="367.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.02%)</title><rect x="18.8592%" y="341" width="0.0214%" height="15" fill="rgb(218,26,35)"/><text x="19.1092%" y="351.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (2 samples, 0.02%)</title><rect x="18.8592%" y="325" width="0.0214%" height="15" fill="rgb(220,200,19)"/><text x="19.1092%" y="335.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (2 samples, 0.02%)</title><rect x="18.8592%" y="309" width="0.0214%" height="15" fill="rgb(239,95,49)"/><text x="19.1092%" y="319.50"></text></g><g><title>extent_nfree_get (1 samples, 0.01%)</title><rect x="18.8699%" y="293" width="0.0107%" height="15" fill="rgb(235,85,53)"/><text x="19.1199%" y="303.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (17 samples, 0.18%)</title><rect x="18.7091%" y="661" width="0.1823%" height="15" fill="rgb(233,133,31)"/><text x="18.9591%" y="671.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="18.8592%" y="645" width="0.0322%" height="15" fill="rgb(218,25,20)"/><text x="19.1092%" y="655.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="18.8592%" y="629" width="0.0322%" height="15" fill="rgb(252,210,38)"/><text x="19.1092%" y="639.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="18.8592%" y="613" width="0.0322%" height="15" fill="rgb(242,134,21)"/><text x="19.1092%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="18.8592%" y="597" width="0.0322%" height="15" fill="rgb(213,28,48)"/><text x="19.1092%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.03%)</title><rect x="18.8592%" y="581" width="0.0322%" height="15" fill="rgb(250,196,2)"/><text x="19.1092%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.03%)</title><rect x="18.8592%" y="565" width="0.0322%" height="15" fill="rgb(227,5,17)"/><text x="19.1092%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.03%)</title><rect x="18.8592%" y="549" width="0.0322%" height="15" fill="rgb(221,226,24)"/><text x="19.1092%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="18.8807%" y="533" width="0.0107%" height="15" fill="rgb(211,5,48)"/><text x="19.1307%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="18.8807%" y="517" width="0.0107%" height="15" fill="rgb(219,150,6)"/><text x="19.1307%" y="527.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="18.8807%" y="501" width="0.0107%" height="15" fill="rgb(251,46,16)"/><text x="19.1307%" y="511.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (27 samples, 0.29%)</title><rect x="18.6341%" y="709" width="0.2895%" height="15" fill="rgb(220,204,40)"/><text x="18.8841%" y="719.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (22 samples, 0.24%)</title><rect x="18.6877%" y="693" width="0.2359%" height="15" fill="rgb(211,85,2)"/><text x="18.9377%" y="703.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (21 samples, 0.23%)</title><rect x="18.6984%" y="677" width="0.2252%" height="15" fill="rgb(229,17,7)"/><text x="18.9484%" y="687.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="18.8914%" y="661" width="0.0322%" height="15" fill="rgb(239,72,28)"/><text x="19.1414%" y="671.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (34 samples, 0.36%)</title><rect x="18.5805%" y="725" width="0.3645%" height="15" fill="rgb(230,47,54)"/><text x="18.8305%" y="735.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="18.9236%" y="709" width="0.0214%" height="15" fill="rgb(214,50,8)"/><text x="19.1736%" y="719.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (39 samples, 0.42%)</title><rect x="18.5483%" y="741" width="0.4181%" height="15" fill="rgb(216,198,43)"/><text x="18.7983%" y="751.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="18.9450%" y="725" width="0.0214%" height="15" fill="rgb(234,20,35)"/><text x="19.1950%" y="735.50"></text></g><g><title>__rg_alloc (2 samples, 0.02%)</title><rect x="18.9879%" y="645" width="0.0214%" height="15" fill="rgb(254,45,19)"/><text x="19.2379%" y="655.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (2 samples, 0.02%)</title><rect x="18.9879%" y="629" width="0.0214%" height="15" fill="rgb(219,14,44)"/><text x="19.2379%" y="639.50"></text></g><g><title>jemallocator::layout_to_flags (2 samples, 0.02%)</title><rect x="18.9879%" y="613" width="0.0214%" height="15" fill="rgb(217,220,26)"/><text x="19.2379%" y="623.50"></text></g><g><title>arena_bin_slabs_nonfull_tryget (1 samples, 0.01%)</title><rect x="19.0200%" y="469" width="0.0107%" height="15" fill="rgb(213,158,28)"/><text x="19.2700%" y="479.50"></text></g><g><title>_rjem_je_extent_heap_remove_first (1 samples, 0.01%)</title><rect x="19.0200%" y="453" width="0.0107%" height="15" fill="rgb(252,51,52)"/><text x="19.2700%" y="463.50"></text></g><g><title>_rjem_je_extents_alloc (3 samples, 0.03%)</title><rect x="19.0308%" y="453" width="0.0322%" height="15" fill="rgb(246,89,16)"/><text x="19.2808%" y="463.50"></text></g><g><title>extent_recycle (3 samples, 0.03%)</title><rect x="19.0308%" y="437" width="0.0322%" height="15" fill="rgb(216,158,49)"/><text x="19.2808%" y="447.50"></text></g><g><title>extent_recycle_extract (2 samples, 0.02%)</title><rect x="19.0415%" y="421" width="0.0214%" height="15" fill="rgb(236,107,19)"/><text x="19.2915%" y="431.50"></text></g><g><title>malloc_mutex_lock (2 samples, 0.02%)</title><rect x="19.0415%" y="405" width="0.0214%" height="15" fill="rgb(228,185,30)"/><text x="19.2915%" y="415.50"></text></g><g><title>malloc_mutex_trylock_final (2 samples, 0.02%)</title><rect x="19.0415%" y="389" width="0.0214%" height="15" fill="rgb(246,134,8)"/><text x="19.2915%" y="399.50"></text></g><g><title>__GI___pthread_mutex_trylock (2 samples, 0.02%)</title><rect x="19.0415%" y="373" width="0.0214%" height="15" fill="rgb(214,143,50)"/><text x="19.2915%" y="383.50"></text></g><g><title>arena_bin_malloc_hard (5 samples, 0.05%)</title><rect x="19.0200%" y="501" width="0.0536%" height="15" fill="rgb(228,75,8)"/><text x="19.2700%" y="511.50"></text></g><g><title>arena_bin_nonfull_slab_get (5 samples, 0.05%)</title><rect x="19.0200%" y="485" width="0.0536%" height="15" fill="rgb(207,175,4)"/><text x="19.2700%" y="495.50"></text></g><g><title>arena_slab_alloc (4 samples, 0.04%)</title><rect x="19.0308%" y="469" width="0.0429%" height="15" fill="rgb(205,108,24)"/><text x="19.2808%" y="479.50"></text></g><g><title>arena_nactive_add (1 samples, 0.01%)</title><rect x="19.0629%" y="453" width="0.0107%" height="15" fill="rgb(244,120,49)"/><text x="19.3129%" y="463.50"></text></g><g><title>atomic_fetch_add_zu (1 samples, 0.01%)</title><rect x="19.0629%" y="437" width="0.0107%" height="15" fill="rgb(223,47,38)"/><text x="19.3129%" y="447.50"></text></g><g><title>arena_slab_reg_alloc (1 samples, 0.01%)</title><rect x="19.0737%" y="501" width="0.0107%" height="15" fill="rgb(229,179,11)"/><text x="19.3237%" y="511.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (10 samples, 0.11%)</title><rect x="19.0093%" y="533" width="0.1072%" height="15" fill="rgb(231,122,1)"/><text x="19.2593%" y="543.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (10 samples, 0.11%)</title><rect x="19.0093%" y="517" width="0.1072%" height="15" fill="rgb(245,119,9)"/><text x="19.2593%" y="527.50"></text></g><g><title>malloc_mutex_lock (3 samples, 0.03%)</title><rect x="19.0844%" y="501" width="0.0322%" height="15" fill="rgb(241,163,25)"/><text x="19.3344%" y="511.50"></text></g><g><title>malloc_mutex_trylock_final (3 samples, 0.03%)</title><rect x="19.0844%" y="485" width="0.0322%" height="15" fill="rgb(217,214,3)"/><text x="19.3344%" y="495.50"></text></g><g><title>__GI___pthread_mutex_trylock (2 samples, 0.02%)</title><rect x="19.0951%" y="469" width="0.0214%" height="15" fill="rgb(240,86,28)"/><text x="19.3451%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.14%)</title><rect x="18.9879%" y="693" width="0.1394%" height="15" fill="rgb(215,47,9)"/><text x="19.2379%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.14%)</title><rect x="18.9879%" y="677" width="0.1394%" height="15" fill="rgb(252,25,45)"/><text x="19.2379%" y="687.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.14%)</title><rect x="18.9879%" y="661" width="0.1394%" height="15" fill="rgb(251,164,9)"/><text x="19.2379%" y="671.50"></text></g><g><title>_rjem_mallocx (11 samples, 0.12%)</title><rect x="19.0093%" y="645" width="0.1179%" height="15" fill="rgb(233,194,0)"/><text x="19.2593%" y="655.50"></text></g><g><title>imalloc (11 samples, 0.12%)</title><rect x="19.0093%" y="629" width="0.1179%" height="15" fill="rgb(249,111,24)"/><text x="19.2593%" y="639.50"></text></g><g><title>imalloc_body (11 samples, 0.12%)</title><rect x="19.0093%" y="613" width="0.1179%" height="15" fill="rgb(250,223,3)"/><text x="19.2593%" y="623.50"></text></g><g><title>imalloc_no_sample (11 samples, 0.12%)</title><rect x="19.0093%" y="597" width="0.1179%" height="15" fill="rgb(236,178,37)"/><text x="19.2593%" y="607.50"></text></g><g><title>iallocztm (11 samples, 0.12%)</title><rect x="19.0093%" y="581" width="0.1179%" height="15" fill="rgb(241,158,50)"/><text x="19.2593%" y="591.50"></text></g><g><title>arena_malloc (11 samples, 0.12%)</title><rect x="19.0093%" y="565" width="0.1179%" height="15" fill="rgb(213,121,41)"/><text x="19.2593%" y="575.50"></text></g><g><title>tcache_alloc_small (11 samples, 0.12%)</title><rect x="19.0093%" y="549" width="0.1179%" height="15" fill="rgb(240,92,3)"/><text x="19.2593%" y="559.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.01%)</title><rect x="19.1165%" y="533" width="0.0107%" height="15" fill="rgb(205,123,3)"/><text x="19.3665%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17 samples, 0.18%)</title><rect x="18.9664%" y="741" width="0.1823%" height="15" fill="rgb(205,97,47)"/><text x="19.2164%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (16 samples, 0.17%)</title><rect x="18.9772%" y="725" width="0.1715%" height="15" fill="rgb(247,152,14)"/><text x="19.2272%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (16 samples, 0.17%)</title><rect x="18.9772%" y="709" width="0.1715%" height="15" fill="rgb(248,195,53)"/><text x="19.2272%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (2 samples, 0.02%)</title><rect x="19.1273%" y="693" width="0.0214%" height="15" fill="rgb(226,201,16)"/><text x="19.3773%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (69 samples, 0.74%)</title><rect x="18.5054%" y="1237" width="0.7398%" height="15" fill="rgb(205,98,0)"/><text x="18.7554%" y="1247.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (69 samples, 0.74%)</title><rect x="18.5054%" y="1221" width="0.7398%" height="15" fill="rgb(214,191,48)"/><text x="18.7554%" y="1231.50"></text></g><g><title>alloc::slice::hack::to_vec (69 samples, 0.74%)</title><rect x="18.5054%" y="1205" width="0.7398%" height="15" fill="rgb(237,112,39)"/><text x="18.7554%" y="1215.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (69 samples, 0.74%)</title><rect x="18.5054%" y="1189" width="0.7398%" height="15" fill="rgb(247,203,27)"/><text x="18.7554%" y="1199.50"></text></g><g><title>&lt;model::rho_types::MatchCase as core::clone::Clone&gt;::clone (69 samples, 0.74%)</title><rect x="18.5054%" y="1173" width="0.7398%" height="15" fill="rgb(235,124,28)"/><text x="18.7554%" y="1183.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (69 samples, 0.74%)</title><rect x="18.5054%" y="1157" width="0.7398%" height="15" fill="rgb(208,207,46)"/><text x="18.7554%" y="1167.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (69 samples, 0.74%)</title><rect x="18.5054%" y="1141" width="0.7398%" height="15" fill="rgb(234,176,4)"/><text x="18.7554%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (69 samples, 0.74%)</title><rect x="18.5054%" y="1125" width="0.7398%" height="15" fill="rgb(230,133,28)"/><text x="18.7554%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (69 samples, 0.74%)</title><rect x="18.5054%" y="1109" width="0.7398%" height="15" fill="rgb(211,137,40)"/><text x="18.7554%" y="1119.50"></text></g><g><title>alloc::slice::hack::to_vec (69 samples, 0.74%)</title><rect x="18.5054%" y="1093" width="0.7398%" height="15" fill="rgb(254,35,13)"/><text x="18.7554%" y="1103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (69 samples, 0.74%)</title><rect x="18.5054%" y="1077" width="0.7398%" height="15" fill="rgb(225,49,51)"/><text x="18.7554%" y="1087.50"></text></g><g><title>&lt;model::rho_types::Send as core::clone::Clone&gt;::clone (69 samples, 0.74%)</title><rect x="18.5054%" y="1061" width="0.7398%" height="15" fill="rgb(251,10,15)"/><text x="18.7554%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (69 samples, 0.74%)</title><rect x="18.5054%" y="1045" width="0.7398%" height="15" fill="rgb(228,207,15)"/><text x="18.7554%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (69 samples, 0.74%)</title><rect x="18.5054%" y="1029" width="0.7398%" height="15" fill="rgb(241,99,19)"/><text x="18.7554%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (69 samples, 0.74%)</title><rect x="18.5054%" y="1013" width="0.7398%" height="15" fill="rgb(207,104,49)"/><text x="18.7554%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (69 samples, 0.74%)</title><rect x="18.5054%" y="997" width="0.7398%" height="15" fill="rgb(234,99,18)"/><text x="18.7554%" y="1007.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (69 samples, 0.74%)</title><rect x="18.5054%" y="981" width="0.7398%" height="15" fill="rgb(213,191,49)"/><text x="18.7554%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (69 samples, 0.74%)</title><rect x="18.5054%" y="965" width="0.7398%" height="15" fill="rgb(210,226,19)"/><text x="18.7554%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (69 samples, 0.74%)</title><rect x="18.5054%" y="949" width="0.7398%" height="15" fill="rgb(229,97,18)"/><text x="18.7554%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (69 samples, 0.74%)</title><rect x="18.5054%" y="933" width="0.7398%" height="15" fill="rgb(211,167,15)"/><text x="18.7554%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (69 samples, 0.74%)</title><rect x="18.5054%" y="917" width="0.7398%" height="15" fill="rgb(210,169,34)"/><text x="18.7554%" y="927.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (69 samples, 0.74%)</title><rect x="18.5054%" y="901" width="0.7398%" height="15" fill="rgb(241,121,31)"/><text x="18.7554%" y="911.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (69 samples, 0.74%)</title><rect x="18.5054%" y="885" width="0.7398%" height="15" fill="rgb(232,40,11)"/><text x="18.7554%" y="895.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (69 samples, 0.74%)</title><rect x="18.5054%" y="869" width="0.7398%" height="15" fill="rgb(205,86,26)"/><text x="18.7554%" y="879.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (69 samples, 0.74%)</title><rect x="18.5054%" y="853" width="0.7398%" height="15" fill="rgb(231,126,28)"/><text x="18.7554%" y="863.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (69 samples, 0.74%)</title><rect x="18.5054%" y="837" width="0.7398%" height="15" fill="rgb(219,221,18)"/><text x="18.7554%" y="847.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (69 samples, 0.74%)</title><rect x="18.5054%" y="821" width="0.7398%" height="15" fill="rgb(211,40,0)"/><text x="18.7554%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (69 samples, 0.74%)</title><rect x="18.5054%" y="805" width="0.7398%" height="15" fill="rgb(239,85,43)"/><text x="18.7554%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (69 samples, 0.74%)</title><rect x="18.5054%" y="789" width="0.7398%" height="15" fill="rgb(231,55,21)"/><text x="18.7554%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (69 samples, 0.74%)</title><rect x="18.5054%" y="773" width="0.7398%" height="15" fill="rgb(225,184,43)"/><text x="18.7554%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (69 samples, 0.74%)</title><rect x="18.5054%" y="757" width="0.7398%" height="15" fill="rgb(251,158,41)"/><text x="18.7554%" y="767.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (9 samples, 0.10%)</title><rect x="19.1487%" y="741" width="0.0965%" height="15" fill="rgb(234,159,37)"/><text x="19.3987%" y="751.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.06%)</title><rect x="19.1809%" y="725" width="0.0643%" height="15" fill="rgb(216,204,22)"/><text x="19.4309%" y="735.50"></text></g><g><title>extent_recycle_extract (1 samples, 0.01%)</title><rect x="19.2452%" y="661" width="0.0107%" height="15" fill="rgb(214,17,3)"/><text x="19.4952%" y="671.50"></text></g><g><title>extents_fit_locked (1 samples, 0.01%)</title><rect x="19.2452%" y="645" width="0.0107%" height="15" fill="rgb(212,111,17)"/><text x="19.4952%" y="655.50"></text></g><g><title>extent_size_quantize_ceil (1 samples, 0.01%)</title><rect x="19.2452%" y="629" width="0.0107%" height="15" fill="rgb(221,157,24)"/><text x="19.4952%" y="639.50"></text></g><g><title>extent_size_quantize_floor (1 samples, 0.01%)</title><rect x="19.2452%" y="613" width="0.0107%" height="15" fill="rgb(252,16,13)"/><text x="19.4952%" y="623.50"></text></g><g><title>sz_psz2ind (1 samples, 0.01%)</title><rect x="19.2452%" y="597" width="0.0107%" height="15" fill="rgb(221,62,2)"/><text x="19.4952%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (89 samples, 0.95%)</title><rect x="18.3124%" y="1269" width="0.9542%" height="15" fill="rgb(247,87,22)"/><text x="18.5624%" y="1279.50"></text></g><g><title>&lt;model::rho_types::Match as core::clone::Clone&gt;::clone (71 samples, 0.76%)</title><rect x="18.5054%" y="1253" width="0.7612%" height="15" fill="rgb(215,73,9)"/><text x="18.7554%" y="1263.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="19.2452%" y="1237" width="0.0214%" height="15" fill="rgb(207,175,33)"/><text x="19.4952%" y="1247.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="19.2452%" y="1221" width="0.0214%" height="15" fill="rgb(243,129,54)"/><text x="19.4952%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="19.2452%" y="1205" width="0.0214%" height="15" fill="rgb(227,119,45)"/><text x="19.4952%" y="1215.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="19.2452%" y="1189" width="0.0214%" height="15" fill="rgb(205,109,36)"/><text x="19.4952%" y="1199.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="19.2452%" y="1173" width="0.0214%" height="15" fill="rgb(205,6,39)"/><text x="19.4952%" y="1183.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="19.2452%" y="1157" width="0.0214%" height="15" fill="rgb(221,32,16)"/><text x="19.4952%" y="1167.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="19.2452%" y="1141" width="0.0214%" height="15" fill="rgb(228,144,50)"/><text x="19.4952%" y="1151.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="19.2452%" y="1125" width="0.0214%" height="15" fill="rgb(229,201,53)"/><text x="19.4952%" y="1135.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="19.2452%" y="1109" width="0.0214%" height="15" fill="rgb(249,153,27)"/><text x="19.4952%" y="1119.50"></text></g><g><title>&lt;model::rho_types::ELt as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="19.2452%" y="1093" width="0.0214%" height="15" fill="rgb(227,106,25)"/><text x="19.4952%" y="1103.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="19.2452%" y="1077" width="0.0214%" height="15" fill="rgb(230,65,29)"/><text x="19.4952%" y="1087.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="19.2452%" y="1061" width="0.0214%" height="15" fill="rgb(221,57,46)"/><text x="19.4952%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="19.2452%" y="1045" width="0.0214%" height="15" fill="rgb(229,161,17)"/><text x="19.4952%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="19.2452%" y="1029" width="0.0214%" height="15" fill="rgb(222,213,11)"/><text x="19.4952%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="19.2452%" y="1013" width="0.0214%" height="15" fill="rgb(235,35,13)"/><text x="19.4952%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="19.2452%" y="997" width="0.0214%" height="15" fill="rgb(233,158,34)"/><text x="19.4952%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="19.2452%" y="981" width="0.0214%" height="15" fill="rgb(215,151,48)"/><text x="19.4952%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="19.2452%" y="965" width="0.0214%" height="15" fill="rgb(229,84,14)"/><text x="19.4952%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="19.2452%" y="949" width="0.0214%" height="15" fill="rgb(229,68,14)"/><text x="19.4952%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="19.2452%" y="933" width="0.0214%" height="15" fill="rgb(243,106,26)"/><text x="19.4952%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="19.2452%" y="917" width="0.0214%" height="15" fill="rgb(206,45,38)"/><text x="19.4952%" y="927.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="19.2452%" y="901" width="0.0214%" height="15" fill="rgb(226,6,15)"/><text x="19.4952%" y="911.50"></text></g><g><title>_rjem_mallocx (2 samples, 0.02%)</title><rect x="19.2452%" y="885" width="0.0214%" height="15" fill="rgb(232,22,54)"/><text x="19.4952%" y="895.50"></text></g><g><title>imalloc (2 samples, 0.02%)</title><rect x="19.2452%" y="869" width="0.0214%" height="15" fill="rgb(229,222,32)"/><text x="19.4952%" y="879.50"></text></g><g><title>imalloc_body (2 samples, 0.02%)</title><rect x="19.2452%" y="853" width="0.0214%" height="15" fill="rgb(228,62,29)"/><text x="19.4952%" y="863.50"></text></g><g><title>imalloc_no_sample (2 samples, 0.02%)</title><rect x="19.2452%" y="837" width="0.0214%" height="15" fill="rgb(251,103,34)"/><text x="19.4952%" y="847.50"></text></g><g><title>iallocztm (2 samples, 0.02%)</title><rect x="19.2452%" y="821" width="0.0214%" height="15" fill="rgb(233,12,30)"/><text x="19.4952%" y="831.50"></text></g><g><title>arena_malloc (2 samples, 0.02%)</title><rect x="19.2452%" y="805" width="0.0214%" height="15" fill="rgb(238,52,0)"/><text x="19.4952%" y="815.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.02%)</title><rect x="19.2452%" y="789" width="0.0214%" height="15" fill="rgb(223,98,5)"/><text x="19.4952%" y="799.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (2 samples, 0.02%)</title><rect x="19.2452%" y="773" width="0.0214%" height="15" fill="rgb(228,75,37)"/><text x="19.4952%" y="783.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (2 samples, 0.02%)</title><rect x="19.2452%" y="757" width="0.0214%" height="15" fill="rgb(205,115,49)"/><text x="19.4952%" y="767.50"></text></g><g><title>arena_bin_malloc_hard (2 samples, 0.02%)</title><rect x="19.2452%" y="741" width="0.0214%" height="15" fill="rgb(250,154,43)"/><text x="19.4952%" y="751.50"></text></g><g><title>arena_bin_nonfull_slab_get (2 samples, 0.02%)</title><rect x="19.2452%" y="725" width="0.0214%" height="15" fill="rgb(226,43,29)"/><text x="19.4952%" y="735.50"></text></g><g><title>arena_slab_alloc (2 samples, 0.02%)</title><rect x="19.2452%" y="709" width="0.0214%" height="15" fill="rgb(249,228,39)"/><text x="19.4952%" y="719.50"></text></g><g><title>_rjem_je_extents_alloc (2 samples, 0.02%)</title><rect x="19.2452%" y="693" width="0.0214%" height="15" fill="rgb(216,79,43)"/><text x="19.4952%" y="703.50"></text></g><g><title>extent_recycle (2 samples, 0.02%)</title><rect x="19.2452%" y="677" width="0.0214%" height="15" fill="rgb(228,95,12)"/><text x="19.4952%" y="687.50"></text></g><g><title>extent_recycle_split (1 samples, 0.01%)</title><rect x="19.2559%" y="661" width="0.0107%" height="15" fill="rgb(249,221,15)"/><text x="19.5059%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="19.3953%" y="677" width="0.0107%" height="15" fill="rgb(233,34,13)"/><text x="19.6453%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="19.3953%" y="661" width="0.0107%" height="15" fill="rgb(214,103,39)"/><text x="19.6453%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.15%)</title><rect x="19.2666%" y="1269" width="0.1501%" height="15" fill="rgb(251,126,39)"/><text x="19.5166%" y="1279.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="19.3953%" y="1253" width="0.0214%" height="15" fill="rgb(214,216,36)"/><text x="19.6453%" y="1263.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="19.3953%" y="1237" width="0.0214%" height="15" fill="rgb(220,221,8)"/><text x="19.6453%" y="1247.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="19.3953%" y="1221" width="0.0214%" height="15" fill="rgb(240,216,3)"/><text x="19.6453%" y="1231.50"></text></g><g><title>&lt;model::rho_types::Send as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="19.3953%" y="1205" width="0.0214%" height="15" fill="rgb(232,218,17)"/><text x="19.6453%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="19.3953%" y="1189" width="0.0214%" height="15" fill="rgb(229,163,45)"/><text x="19.6453%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="19.3953%" y="1173" width="0.0214%" height="15" fill="rgb(231,110,42)"/><text x="19.6453%" y="1183.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="19.3953%" y="1157" width="0.0214%" height="15" fill="rgb(208,170,48)"/><text x="19.6453%" y="1167.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="19.3953%" y="1141" width="0.0214%" height="15" fill="rgb(239,116,25)"/><text x="19.6453%" y="1151.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="19.3953%" y="1125" width="0.0214%" height="15" fill="rgb(219,200,50)"/><text x="19.6453%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="19.3953%" y="1109" width="0.0214%" height="15" fill="rgb(245,200,0)"/><text x="19.6453%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="19.3953%" y="1093" width="0.0214%" height="15" fill="rgb(245,119,33)"/><text x="19.6453%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="19.3953%" y="1077" width="0.0214%" height="15" fill="rgb(231,125,12)"/><text x="19.6453%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="19.3953%" y="1061" width="0.0214%" height="15" fill="rgb(216,96,41)"/><text x="19.6453%" y="1071.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="19.3953%" y="1045" width="0.0214%" height="15" fill="rgb(248,43,45)"/><text x="19.6453%" y="1055.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="19.3953%" y="1029" width="0.0214%" height="15" fill="rgb(217,222,7)"/><text x="19.6453%" y="1039.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="19.3953%" y="1013" width="0.0214%" height="15" fill="rgb(233,28,6)"/><text x="19.6453%" y="1023.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="19.3953%" y="997" width="0.0214%" height="15" fill="rgb(231,218,15)"/><text x="19.6453%" y="1007.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="19.3953%" y="981" width="0.0214%" height="15" fill="rgb(226,171,48)"/><text x="19.6453%" y="991.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="19.3953%" y="965" width="0.0214%" height="15" fill="rgb(235,201,9)"/><text x="19.6453%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="19.3953%" y="949" width="0.0214%" height="15" fill="rgb(217,80,15)"/><text x="19.6453%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="19.3953%" y="933" width="0.0214%" height="15" fill="rgb(219,152,8)"/><text x="19.6453%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="19.3953%" y="917" width="0.0214%" height="15" fill="rgb(243,107,38)"/><text x="19.6453%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="19.3953%" y="901" width="0.0214%" height="15" fill="rgb(231,17,5)"/><text x="19.6453%" y="911.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="19.3953%" y="885" width="0.0214%" height="15" fill="rgb(209,25,54)"/><text x="19.6453%" y="895.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="19.3953%" y="869" width="0.0214%" height="15" fill="rgb(219,0,2)"/><text x="19.6453%" y="879.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="19.3953%" y="853" width="0.0214%" height="15" fill="rgb(246,9,5)"/><text x="19.6453%" y="863.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="19.3953%" y="837" width="0.0214%" height="15" fill="rgb(226,159,4)"/><text x="19.6453%" y="847.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="19.3953%" y="821" width="0.0214%" height="15" fill="rgb(219,175,34)"/><text x="19.6453%" y="831.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="19.3953%" y="805" width="0.0214%" height="15" fill="rgb(236,10,46)"/><text x="19.6453%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="19.3953%" y="789" width="0.0214%" height="15" fill="rgb(240,211,16)"/><text x="19.6453%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="19.3953%" y="773" width="0.0214%" height="15" fill="rgb(205,3,43)"/><text x="19.6453%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="19.3953%" y="757" width="0.0214%" height="15" fill="rgb(245,7,22)"/><text x="19.6453%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="19.3953%" y="741" width="0.0214%" height="15" fill="rgb(239,132,32)"/><text x="19.6453%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="19.3953%" y="725" width="0.0214%" height="15" fill="rgb(228,202,34)"/><text x="19.6453%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="19.3953%" y="709" width="0.0214%" height="15" fill="rgb(254,200,22)"/><text x="19.6453%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="19.3953%" y="693" width="0.0214%" height="15" fill="rgb(219,10,39)"/><text x="19.6453%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (1 samples, 0.01%)</title><rect x="19.4060%" y="677" width="0.0107%" height="15" fill="rgb(226,210,39)"/><text x="19.6560%" y="687.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="19.4167%" y="1269" width="0.0107%" height="15" fill="rgb(208,219,16)"/><text x="19.6667%" y="1279.50"></text></g><g><title>[libc-2.31.so] (15 samples, 0.16%)</title><rect x="19.4811%" y="1221" width="0.1608%" height="15" fill="rgb(216,158,51)"/><text x="19.7311%" y="1231.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (5 samples, 0.05%)</title><rect x="19.6419%" y="1221" width="0.0536%" height="15" fill="rgb(233,14,44)"/><text x="19.8919%" y="1231.50"></text></g><g><title>__rust_probestack (4 samples, 0.04%)</title><rect x="19.6526%" y="1205" width="0.0429%" height="15" fill="rgb(237,97,39)"/><text x="19.9026%" y="1215.50"></text></g><g><title>__rg_dealloc (1 samples, 0.01%)</title><rect x="19.6955%" y="1173" width="0.0107%" height="15" fill="rgb(218,198,43)"/><text x="19.9455%" y="1183.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.01%)</title><rect x="19.6955%" y="1157" width="0.0107%" height="15" fill="rgb(231,104,20)"/><text x="19.9455%" y="1167.50"></text></g><g><title>_rjem_sdallocx (3 samples, 0.03%)</title><rect x="19.7062%" y="1173" width="0.0322%" height="15" fill="rgb(254,36,13)"/><text x="19.9562%" y="1183.50"></text></g><g><title>isfree (3 samples, 0.03%)</title><rect x="19.7062%" y="1157" width="0.0322%" height="15" fill="rgb(248,14,50)"/><text x="19.9562%" y="1167.50"></text></g><g><title>isdalloct (3 samples, 0.03%)</title><rect x="19.7062%" y="1141" width="0.0322%" height="15" fill="rgb(217,107,29)"/><text x="19.9562%" y="1151.50"></text></g><g><title>arena_sdalloc (3 samples, 0.03%)</title><rect x="19.7062%" y="1125" width="0.0322%" height="15" fill="rgb(251,169,33)"/><text x="19.9562%" y="1135.50"></text></g><g><title>tcache_dalloc_small (3 samples, 0.03%)</title><rect x="19.7062%" y="1109" width="0.0322%" height="15" fill="rgb(217,108,32)"/><text x="19.9562%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="19.7384%" y="1109" width="0.0107%" height="15" fill="rgb(219,66,42)"/><text x="19.9884%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="19.7384%" y="1093" width="0.0107%" height="15" fill="rgb(206,180,7)"/><text x="19.9884%" y="1103.50"></text></g><g><title>core::mem::drop (5 samples, 0.05%)</title><rect x="19.7384%" y="1157" width="0.0536%" height="15" fill="rgb(208,226,31)"/><text x="19.9884%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;tokio::sync::oneshot::Inner&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt;&gt; (5 samples, 0.05%)</title><rect x="19.7384%" y="1141" width="0.0536%" height="15" fill="rgb(218,26,49)"/><text x="19.9884%" y="1151.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="19.7384%" y="1125" width="0.0536%" height="15" fill="rgb(233,197,48)"/><text x="19.9884%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4 samples, 0.04%)</title><rect x="19.7491%" y="1109" width="0.0429%" height="15" fill="rgb(252,181,51)"/><text x="19.9991%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_sub (4 samples, 0.04%)</title><rect x="19.7491%" y="1093" width="0.0429%" height="15" fill="rgb(253,90,19)"/><text x="19.9991%" y="1103.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (2 samples, 0.02%)</title><rect x="19.7920%" y="1125" width="0.0214%" height="15" fill="rgb(215,171,30)"/><text x="20.0420%" y="1135.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (2 samples, 0.02%)</title><rect x="19.7920%" y="1109" width="0.0214%" height="15" fill="rgb(214,222,9)"/><text x="20.0420%" y="1119.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (2 samples, 0.02%)</title><rect x="19.7920%" y="1093" width="0.0214%" height="15" fill="rgb(223,3,22)"/><text x="20.0420%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.02%)</title><rect x="19.7920%" y="1077" width="0.0214%" height="15" fill="rgb(225,196,46)"/><text x="20.0420%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.02%)</title><rect x="19.7920%" y="1061" width="0.0214%" height="15" fill="rgb(209,110,37)"/><text x="20.0420%" y="1071.50"></text></g><g><title>tokio::sync::oneshot::Task::drop_task (1 samples, 0.01%)</title><rect x="19.8134%" y="1125" width="0.0107%" height="15" fill="rgb(249,89,12)"/><text x="20.0634%" y="1135.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.01%)</title><rect x="19.8134%" y="1109" width="0.0107%" height="15" fill="rgb(226,27,33)"/><text x="20.0634%" y="1119.50"></text></g><g><title>tokio::sync::oneshot::Task::drop_task::{{closure}} (1 samples, 0.01%)</title><rect x="19.8134%" y="1093" width="0.0107%" height="15" fill="rgb(213,82,22)"/><text x="20.0634%" y="1103.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.01%)</title><rect x="19.8134%" y="1077" width="0.0107%" height="15" fill="rgb(248,140,0)"/><text x="20.0634%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (1 samples, 0.01%)</title><rect x="19.8134%" y="1061" width="0.0107%" height="15" fill="rgb(228,106,3)"/><text x="20.0634%" y="1071.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="19.8134%" y="1045" width="0.0107%" height="15" fill="rgb(209,23,37)"/><text x="20.0634%" y="1055.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (9 samples, 0.10%)</title><rect x="19.7384%" y="1173" width="0.0965%" height="15" fill="rgb(241,93,50)"/><text x="19.9884%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::oneshot::Inner&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt; (4 samples, 0.04%)</title><rect x="19.7920%" y="1157" width="0.0429%" height="15" fill="rgb(253,46,43)"/><text x="20.0420%" y="1167.50"></text></g><g><title>&lt;tokio::sync::oneshot::Inner&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="19.7920%" y="1141" width="0.0429%" height="15" fill="rgb(226,206,43)"/><text x="20.0420%" y="1151.50"></text></g><g><title>tokio::sync::oneshot::mut_load (1 samples, 0.01%)</title><rect x="19.8242%" y="1125" width="0.0107%" height="15" fill="rgb(217,54,7)"/><text x="20.0742%" y="1135.50"></text></g><g><title>tokio::loom::std::atomic_usize::AtomicUsize::with_mut (1 samples, 0.01%)</title><rect x="19.8242%" y="1109" width="0.0107%" height="15" fill="rgb(223,5,52)"/><text x="20.0742%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt;&gt;&gt; (20 samples, 0.21%)</title><rect x="19.6955%" y="1221" width="0.2144%" height="15" fill="rgb(206,52,46)"/><text x="19.9455%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt;&gt; (20 samples, 0.21%)</title><rect x="19.6955%" y="1205" width="0.2144%" height="15" fill="rgb(253,136,11)"/><text x="19.9455%" y="1215.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.21%)</title><rect x="19.6955%" y="1189" width="0.2144%" height="15" fill="rgb(208,106,33)"/><text x="19.9455%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (7 samples, 0.08%)</title><rect x="19.8349%" y="1173" width="0.0751%" height="15" fill="rgb(206,54,4)"/><text x="20.0849%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_sub (7 samples, 0.08%)</title><rect x="19.8349%" y="1157" width="0.0751%" height="15" fill="rgb(213,3,15)"/><text x="20.0849%" y="1167.50"></text></g><g><title>[libc-2.31.so] (21 samples, 0.23%)</title><rect x="19.9421%" y="1205" width="0.2252%" height="15" fill="rgb(252,211,39)"/><text x="20.1921%" y="1215.50"></text></g><g><title>tokio::coop::poll_proceed (5 samples, 0.05%)</title><rect x="20.1673%" y="1205" width="0.0536%" height="15" fill="rgb(223,6,36)"/><text x="20.4173%" y="1215.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.05%)</title><rect x="20.1673%" y="1189" width="0.0536%" height="15" fill="rgb(252,169,45)"/><text x="20.4173%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.05%)</title><rect x="20.1673%" y="1173" width="0.0536%" height="15" fill="rgb(212,48,26)"/><text x="20.4173%" y="1183.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (5 samples, 0.05%)</title><rect x="20.1673%" y="1157" width="0.0536%" height="15" fill="rgb(251,102,48)"/><text x="20.4173%" y="1167.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (5 samples, 0.05%)</title><rect x="20.1673%" y="1141" width="0.0536%" height="15" fill="rgb(243,208,16)"/><text x="20.4173%" y="1151.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (5 samples, 0.05%)</title><rect x="20.1673%" y="1125" width="0.0536%" height="15" fill="rgb(219,96,24)"/><text x="20.4173%" y="1135.50"></text></g><g><title>core::mem::replace (5 samples, 0.05%)</title><rect x="20.1673%" y="1109" width="0.0536%" height="15" fill="rgb(219,33,29)"/><text x="20.4173%" y="1119.50"></text></g><g><title>core::mem::swap (5 samples, 0.05%)</title><rect x="20.1673%" y="1093" width="0.0536%" height="15" fill="rgb(223,176,5)"/><text x="20.4173%" y="1103.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (5 samples, 0.05%)</title><rect x="20.1673%" y="1077" width="0.0536%" height="15" fill="rgb(228,140,14)"/><text x="20.4173%" y="1087.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.05%)</title><rect x="20.1673%" y="1061" width="0.0536%" height="15" fill="rgb(217,179,31)"/><text x="20.4173%" y="1071.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::consume_value (39 samples, 0.42%)</title><rect x="20.2209%" y="1205" width="0.4181%" height="15" fill="rgb(230,9,30)"/><text x="20.4709%" y="1215.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (39 samples, 0.42%)</title><rect x="20.2209%" y="1189" width="0.4181%" height="15" fill="rgb(230,136,20)"/><text x="20.4709%" y="1199.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::consume_value::{{closure}} (39 samples, 0.42%)</title><rect x="20.2209%" y="1173" width="0.4181%" height="15" fill="rgb(215,210,22)"/><text x="20.4709%" y="1183.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (39 samples, 0.42%)</title><rect x="20.2209%" y="1157" width="0.4181%" height="15" fill="rgb(218,43,5)"/><text x="20.4709%" y="1167.50"></text></g><g><title>core::mem::take (39 samples, 0.42%)</title><rect x="20.2209%" y="1141" width="0.4181%" height="15" fill="rgb(216,11,5)"/><text x="20.4709%" y="1151.50"></text></g><g><title>core::mem::replace (39 samples, 0.42%)</title><rect x="20.2209%" y="1125" width="0.4181%" height="15" fill="rgb(209,82,29)"/><text x="20.4709%" y="1135.50"></text></g><g><title>core::mem::swap (39 samples, 0.42%)</title><rect x="20.2209%" y="1109" width="0.4181%" height="15" fill="rgb(244,115,12)"/><text x="20.4709%" y="1119.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (39 samples, 0.42%)</title><rect x="20.2209%" y="1093" width="0.4181%" height="15" fill="rgb(222,82,18)"/><text x="20.4709%" y="1103.50"></text></g><g><title>core::ptr::swap_nonoverlapping (39 samples, 0.42%)</title><rect x="20.2209%" y="1077" width="0.4181%" height="15" fill="rgb(249,227,8)"/><text x="20.4709%" y="1087.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (39 samples, 0.42%)</title><rect x="20.2209%" y="1061" width="0.4181%" height="15" fill="rgb(253,141,45)"/><text x="20.4709%" y="1071.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (38 samples, 0.41%)</title><rect x="20.2316%" y="1045" width="0.4074%" height="15" fill="rgb(234,184,4)"/><text x="20.4816%" y="1055.50"></text></g><g><title>tokio::sync::oneshot::State::load (5 samples, 0.05%)</title><rect x="20.6390%" y="1205" width="0.0536%" height="15" fill="rgb(218,194,23)"/><text x="20.8890%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (5 samples, 0.05%)</title><rect x="20.6390%" y="1189" width="0.0536%" height="15" fill="rgb(235,66,41)"/><text x="20.8890%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.05%)</title><rect x="20.6390%" y="1173" width="0.0536%" height="15" fill="rgb(245,217,1)"/><text x="20.8890%" y="1183.50"></text></g><g><title>tokio::sync::oneshot::State::set_rx_task (3 samples, 0.03%)</title><rect x="20.6926%" y="1205" width="0.0322%" height="15" fill="rgb(229,91,1)"/><text x="20.9426%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (3 samples, 0.03%)</title><rect x="20.6926%" y="1189" width="0.0322%" height="15" fill="rgb(207,101,30)"/><text x="20.9426%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_or (3 samples, 0.03%)</title><rect x="20.6926%" y="1173" width="0.0322%" height="15" fill="rgb(223,82,49)"/><text x="20.9426%" y="1183.50"></text></g><g><title>&lt;rho_runtime::storage::coordinator::AsyncStore as rho_runtime::storage::Storage&gt;::produce::{{closure}} (119 samples, 1.28%)</title><rect x="19.4811%" y="1253" width="1.2759%" height="15" fill="rgb(218,167,17)"/><text x="19.7311%" y="1263.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (119 samples, 1.28%)</title><rect x="19.4811%" y="1237" width="1.2759%" height="15" fill="rgb(208,103,14)"/><text x="19.7311%" y="1247.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::poll_recv (79 samples, 0.85%)</title><rect x="19.9099%" y="1221" width="0.8470%" height="15" fill="rgb(238,20,8)"/><text x="20.1599%" y="1231.50"></text></g><g><title>tokio::sync::oneshot::Task::set_task (3 samples, 0.03%)</title><rect x="20.7248%" y="1205" width="0.0322%" height="15" fill="rgb(218,80,54)"/><text x="20.9748%" y="1215.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3 samples, 0.03%)</title><rect x="20.7248%" y="1189" width="0.0322%" height="15" fill="rgb(240,144,17)"/><text x="20.9748%" y="1199.50"></text></g><g><title>tokio::sync::oneshot::Task::set_task::{{closure}} (3 samples, 0.03%)</title><rect x="20.7248%" y="1173" width="0.0322%" height="15" fill="rgb(245,27,50)"/><text x="20.9748%" y="1183.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="20.7248%" y="1157" width="0.0322%" height="15" fill="rgb(251,51,7)"/><text x="20.9748%" y="1167.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (3 samples, 0.03%)</title><rect x="20.7248%" y="1141" width="0.0322%" height="15" fill="rgb(245,217,29)"/><text x="20.9748%" y="1151.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (3 samples, 0.03%)</title><rect x="20.7248%" y="1125" width="0.0322%" height="15" fill="rgb(221,176,29)"/><text x="20.9748%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3 samples, 0.03%)</title><rect x="20.7248%" y="1109" width="0.0322%" height="15" fill="rgb(212,180,24)"/><text x="20.9748%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.03%)</title><rect x="20.7248%" y="1093" width="0.0322%" height="15" fill="rgb(254,24,2)"/><text x="20.9748%" y="1103.50"></text></g><g><title>[libc-2.31.so] (17 samples, 0.18%)</title><rect x="20.7569%" y="1253" width="0.1823%" height="15" fill="rgb(230,100,2)"/><text x="21.0069%" y="1263.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::news_score (9 samples, 0.10%)</title><rect x="21.0464%" y="1125" width="0.0965%" height="15" fill="rgb(219,142,25)"/><text x="21.2964%" y="1135.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::matches_score (9 samples, 0.10%)</title><rect x="21.0464%" y="1109" width="0.0965%" height="15" fill="rgb(240,73,43)"/><text x="21.2964%" y="1119.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::bundles_score (9 samples, 0.10%)</title><rect x="21.0464%" y="1093" width="0.0965%" height="15" fill="rgb(214,114,15)"/><text x="21.2964%" y="1103.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::connectives_score (9 samples, 0.10%)</title><rect x="21.0464%" y="1077" width="0.0965%" height="15" fill="rgb(207,130,4)"/><text x="21.2964%" y="1087.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::unforgeables_score (9 samples, 0.10%)</title><rect x="21.0464%" y="1061" width="0.0965%" height="15" fill="rgb(221,25,40)"/><text x="21.2964%" y="1071.50"></text></g><g><title>model::ordering::sort_unforgeable::&lt;impl model::ordering::Scorable for &amp;model::rho_types::GUnforgeable&gt;::score_tree_iter (9 samples, 0.10%)</title><rect x="21.0464%" y="1045" width="0.0965%" height="15" fill="rgb(241,184,7)"/><text x="21.2964%" y="1055.50"></text></g><g><title>&lt;model::ordering::ScoreTreeIter as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.15%)</title><rect x="21.0035%" y="1157" width="0.1501%" height="15" fill="rgb(235,159,4)"/><text x="21.2535%" y="1167.50"></text></g><g><title>&lt;model::ordering::sort_par::ParScoreTreeIter as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.11%)</title><rect x="21.0464%" y="1141" width="0.1072%" height="15" fill="rgb(214,87,48)"/><text x="21.2964%" y="1151.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::sends_score (1 samples, 0.01%)</title><rect x="21.1429%" y="1125" width="0.0107%" height="15" fill="rgb(246,198,24)"/><text x="21.3929%" y="1135.50"></text></g><g><title>&lt;model::ordering::ScoreTreeIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="21.1644%" y="1141" width="0.0107%" height="15" fill="rgb(209,66,40)"/><text x="21.4144%" y="1151.50"></text></g><g><title>blake3::ChunkState::len (2 samples, 0.02%)</title><rect x="21.1751%" y="1109" width="0.0214%" height="15" fill="rgb(233,147,39)"/><text x="21.4251%" y="1119.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (10 samples, 0.11%)</title><rect x="21.2180%" y="1077" width="0.1072%" height="15" fill="rgb(231,145,52)"/><text x="21.4680%" y="1087.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.11%)</title><rect x="21.2180%" y="1061" width="0.1072%" height="15" fill="rgb(206,20,26)"/><text x="21.4680%" y="1071.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.11%)</title><rect x="21.2180%" y="1045" width="0.1072%" height="15" fill="rgb(238,220,4)"/><text x="21.4680%" y="1055.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash::traverse (17 samples, 0.18%)</title><rect x="21.1536%" y="1157" width="0.1823%" height="15" fill="rgb(252,195,42)"/><text x="21.4036%" y="1167.50"></text></g><g><title>blake3::Hasher::update (15 samples, 0.16%)</title><rect x="21.1751%" y="1141" width="0.1608%" height="15" fill="rgb(209,10,6)"/><text x="21.4251%" y="1151.50"></text></g><g><title>blake3::Hasher::update_with_join (15 samples, 0.16%)</title><rect x="21.1751%" y="1125" width="0.1608%" height="15" fill="rgb(229,3,52)"/><text x="21.4251%" y="1135.50"></text></g><g><title>blake3::ChunkState::update (13 samples, 0.14%)</title><rect x="21.1965%" y="1109" width="0.1394%" height="15" fill="rgb(253,49,37)"/><text x="21.4465%" y="1119.50"></text></g><g><title>blake3::ChunkState::fill_buf (12 samples, 0.13%)</title><rect x="21.2072%" y="1093" width="0.1287%" height="15" fill="rgb(240,103,49)"/><text x="21.4572%" y="1103.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.01%)</title><rect x="21.3252%" y="1077" width="0.0107%" height="15" fill="rgb(250,182,30)"/><text x="21.5752%" y="1087.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.01%)</title><rect x="21.3252%" y="1061" width="0.0107%" height="15" fill="rgb(248,8,30)"/><text x="21.5752%" y="1071.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="21.3252%" y="1045" width="0.0107%" height="15" fill="rgb(237,120,30)"/><text x="21.5752%" y="1055.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="21.3252%" y="1029" width="0.0107%" height="15" fill="rgb(221,146,34)"/><text x="21.5752%" y="1039.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="21.3252%" y="1013" width="0.0107%" height="15" fill="rgb(242,55,13)"/><text x="21.5752%" y="1023.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.01%)</title><rect x="21.3252%" y="997" width="0.0107%" height="15" fill="rgb(242,112,31)"/><text x="21.5752%" y="1007.50"></text></g><g><title>blake3::ChunkState::len (2 samples, 0.02%)</title><rect x="21.3895%" y="1125" width="0.0214%" height="15" fill="rgb(249,192,27)"/><text x="21.6395%" y="1135.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (12 samples, 0.13%)</title><rect x="21.4431%" y="1093" width="0.1287%" height="15" fill="rgb(208,204,44)"/><text x="21.6931%" y="1103.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.13%)</title><rect x="21.4431%" y="1077" width="0.1287%" height="15" fill="rgb(208,93,54)"/><text x="21.6931%" y="1087.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.11%)</title><rect x="21.4646%" y="1061" width="0.1072%" height="15" fill="rgb(242,1,31)"/><text x="21.7146%" y="1071.50"></text></g><g><title>blake3::ChunkState::fill_buf (17 samples, 0.18%)</title><rect x="21.4217%" y="1109" width="0.1823%" height="15" fill="rgb(241,83,25)"/><text x="21.6717%" y="1119.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (3 samples, 0.03%)</title><rect x="21.5718%" y="1093" width="0.0322%" height="15" fill="rgb(205,169,50)"/><text x="21.8218%" y="1103.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.03%)</title><rect x="21.5718%" y="1077" width="0.0322%" height="15" fill="rgb(239,186,37)"/><text x="21.8218%" y="1087.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (3 samples, 0.03%)</title><rect x="21.5718%" y="1061" width="0.0322%" height="15" fill="rgb(205,221,10)"/><text x="21.8218%" y="1071.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (3 samples, 0.03%)</title><rect x="21.5718%" y="1045" width="0.0322%" height="15" fill="rgb(218,196,15)"/><text x="21.8218%" y="1055.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (3 samples, 0.03%)</title><rect x="21.5718%" y="1029" width="0.0322%" height="15" fill="rgb(218,196,35)"/><text x="21.8218%" y="1039.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (3 samples, 0.03%)</title><rect x="21.5718%" y="1013" width="0.0322%" height="15" fill="rgb(233,63,24)"/><text x="21.8218%" y="1023.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash::traverse (62 samples, 0.66%)</title><rect x="20.9499%" y="1173" width="0.6647%" height="15" fill="rgb(225,8,4)"/><text x="21.1999%" y="1183.50"></text></g><g><title>blake3::Hasher::update (26 samples, 0.28%)</title><rect x="21.3359%" y="1157" width="0.2788%" height="15" fill="rgb(234,105,35)"/><text x="21.5859%" y="1167.50"></text></g><g><title>blake3::Hasher::update_with_join (25 samples, 0.27%)</title><rect x="21.3466%" y="1141" width="0.2680%" height="15" fill="rgb(236,21,32)"/><text x="21.5966%" y="1151.50"></text></g><g><title>blake3::ChunkState::update (19 samples, 0.20%)</title><rect x="21.4110%" y="1125" width="0.2037%" height="15" fill="rgb(228,109,6)"/><text x="21.6610%" y="1135.50"></text></g><g><title>blake3::platform::Platform::compress_in_place (1 samples, 0.01%)</title><rect x="21.6039%" y="1109" width="0.0107%" height="15" fill="rgb(229,215,31)"/><text x="21.8539%" y="1119.50"></text></g><g><title>blake3::Hasher::finalize (2 samples, 0.02%)</title><rect x="21.6147%" y="1173" width="0.0214%" height="15" fill="rgb(221,52,54)"/><text x="21.8647%" y="1183.50"></text></g><g><title>blake3::Hasher::final_output (2 samples, 0.02%)</title><rect x="21.6147%" y="1157" width="0.0214%" height="15" fill="rgb(252,129,43)"/><text x="21.8647%" y="1167.50"></text></g><g><title>blake3::ChunkState::output (2 samples, 0.02%)</title><rect x="21.6147%" y="1141" width="0.0214%" height="15" fill="rgb(248,183,27)"/><text x="21.8647%" y="1151.50"></text></g><g><title>blake3::ChunkState::start_flag (2 samples, 0.02%)</title><rect x="21.6147%" y="1125" width="0.0214%" height="15" fill="rgb(250,0,22)"/><text x="21.8647%" y="1135.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash (66 samples, 0.71%)</title><rect x="20.9392%" y="1189" width="0.7076%" height="15" fill="rgb(213,166,10)"/><text x="21.1892%" y="1199.50"></text></g><g><title>model::ordering::sort_par::&lt;impl model::ordering::Scorable for &amp;model::rho_types::Par&gt;::score_tree_iter (1 samples, 0.01%)</title><rect x="21.6361%" y="1173" width="0.0107%" height="15" fill="rgb(207,163,36)"/><text x="21.8861%" y="1183.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.01%)</title><rect x="21.6361%" y="1157" width="0.0107%" height="15" fill="rgb(208,122,22)"/><text x="21.8861%" y="1167.50"></text></g><g><title>model::ordering::sort_par::&lt;impl core::convert::From&lt;model::ordering::sort_par::ParScoreTreeIter&gt; for model::ordering::ScoreTreeIter&gt;::from (1 samples, 0.01%)</title><rect x="21.6361%" y="1141" width="0.0107%" height="15" fill="rgb(207,104,49)"/><text x="21.8861%" y="1151.50"></text></g><g><title>arena_slab_alloc_hard (1 samples, 0.01%)</title><rect x="21.6468%" y="901" width="0.0107%" height="15" fill="rgb(248,211,50)"/><text x="21.8968%" y="911.50"></text></g><g><title>_rjem_je_extent_alloc_wrapper (1 samples, 0.01%)</title><rect x="21.6468%" y="885" width="0.0107%" height="15" fill="rgb(217,13,45)"/><text x="21.8968%" y="895.50"></text></g><g><title>extent_alloc_retained (1 samples, 0.01%)</title><rect x="21.6468%" y="869" width="0.0107%" height="15" fill="rgb(211,216,49)"/><text x="21.8968%" y="879.50"></text></g><g><title>extent_recycle (1 samples, 0.01%)</title><rect x="21.6468%" y="853" width="0.0107%" height="15" fill="rgb(221,58,53)"/><text x="21.8968%" y="863.50"></text></g><g><title>extent_recycle_extract (1 samples, 0.01%)</title><rect x="21.6468%" y="837" width="0.0107%" height="15" fill="rgb(220,112,41)"/><text x="21.8968%" y="847.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.01%)</title><rect x="21.6468%" y="821" width="0.0107%" height="15" fill="rgb(236,38,28)"/><text x="21.8968%" y="831.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.01%)</title><rect x="21.6468%" y="805" width="0.0107%" height="15" fill="rgb(227,195,22)"/><text x="21.8968%" y="815.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.01%)</title><rect x="21.6468%" y="789" width="0.0107%" height="15" fill="rgb(214,55,33)"/><text x="21.8968%" y="799.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::produce::{{closure}} (68 samples, 0.73%)</title><rect x="20.9392%" y="1253" width="0.7291%" height="15" fill="rgb(248,80,13)"/><text x="21.1892%" y="1263.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (68 samples, 0.73%)</title><rect x="20.9392%" y="1237" width="0.7291%" height="15" fill="rgb(238,52,6)"/><text x="21.1892%" y="1247.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (68 samples, 0.73%)</title><rect x="20.9392%" y="1221" width="0.7291%" height="15" fill="rgb(224,198,47)"/><text x="21.1892%" y="1231.50"></text></g><g><title>&lt;rho_runtime::storage::coordinator::AsyncStore as rho_runtime::storage::Storage&gt;::produce::{{closure}} (68 samples, 0.73%)</title><rect x="20.9392%" y="1205" width="0.7291%" height="15" fill="rgb(233,171,20)"/><text x="21.1892%" y="1215.50"></text></g><g><title>tokio::sync::oneshot::channel (2 samples, 0.02%)</title><rect x="21.6468%" y="1189" width="0.0214%" height="15" fill="rgb(241,30,25)"/><text x="21.8968%" y="1199.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="21.6468%" y="1173" width="0.0214%" height="15" fill="rgb(207,171,38)"/><text x="21.8968%" y="1183.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.02%)</title><rect x="21.6468%" y="1157" width="0.0214%" height="15" fill="rgb(234,70,1)"/><text x="21.8968%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="21.6468%" y="1141" width="0.0214%" height="15" fill="rgb(232,178,18)"/><text x="21.8968%" y="1151.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="21.6468%" y="1125" width="0.0214%" height="15" fill="rgb(241,78,40)"/><text x="21.8968%" y="1135.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="21.6468%" y="1109" width="0.0214%" height="15" fill="rgb(222,35,25)"/><text x="21.8968%" y="1119.50"></text></g><g><title>_rjem_mallocx (2 samples, 0.02%)</title><rect x="21.6468%" y="1093" width="0.0214%" height="15" fill="rgb(207,92,16)"/><text x="21.8968%" y="1103.50"></text></g><g><title>imalloc (2 samples, 0.02%)</title><rect x="21.6468%" y="1077" width="0.0214%" height="15" fill="rgb(216,59,51)"/><text x="21.8968%" y="1087.50"></text></g><g><title>imalloc_body (2 samples, 0.02%)</title><rect x="21.6468%" y="1061" width="0.0214%" height="15" fill="rgb(213,80,28)"/><text x="21.8968%" y="1071.50"></text></g><g><title>imalloc_no_sample (2 samples, 0.02%)</title><rect x="21.6468%" y="1045" width="0.0214%" height="15" fill="rgb(220,93,7)"/><text x="21.8968%" y="1055.50"></text></g><g><title>iallocztm (2 samples, 0.02%)</title><rect x="21.6468%" y="1029" width="0.0214%" height="15" fill="rgb(225,24,44)"/><text x="21.8968%" y="1039.50"></text></g><g><title>arena_malloc (2 samples, 0.02%)</title><rect x="21.6468%" y="1013" width="0.0214%" height="15" fill="rgb(243,74,40)"/><text x="21.8968%" y="1023.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.02%)</title><rect x="21.6468%" y="997" width="0.0214%" height="15" fill="rgb(228,39,7)"/><text x="21.8968%" y="1007.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (2 samples, 0.02%)</title><rect x="21.6468%" y="981" width="0.0214%" height="15" fill="rgb(227,79,8)"/><text x="21.8968%" y="991.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (2 samples, 0.02%)</title><rect x="21.6468%" y="965" width="0.0214%" height="15" fill="rgb(236,58,11)"/><text x="21.8968%" y="975.50"></text></g><g><title>arena_bin_malloc_hard (2 samples, 0.02%)</title><rect x="21.6468%" y="949" width="0.0214%" height="15" fill="rgb(249,63,35)"/><text x="21.8968%" y="959.50"></text></g><g><title>arena_bin_nonfull_slab_get (2 samples, 0.02%)</title><rect x="21.6468%" y="933" width="0.0214%" height="15" fill="rgb(252,114,16)"/><text x="21.8968%" y="943.50"></text></g><g><title>arena_slab_alloc (2 samples, 0.02%)</title><rect x="21.6468%" y="917" width="0.0214%" height="15" fill="rgb(254,151,24)"/><text x="21.8968%" y="927.50"></text></g><g><title>sz_size2index (1 samples, 0.01%)</title><rect x="21.6576%" y="901" width="0.0107%" height="15" fill="rgb(253,54,39)"/><text x="21.9076%" y="911.50"></text></g><g><title>sz_size2index_lookup (1 samples, 0.01%)</title><rect x="21.6576%" y="885" width="0.0107%" height="15" fill="rgb(243,25,45)"/><text x="21.9076%" y="895.50"></text></g><g><title>[libc-2.31.so] (14 samples, 0.15%)</title><rect x="21.8720%" y="1205" width="0.1501%" height="15" fill="rgb(234,134,9)"/><text x="22.1220%" y="1215.50"></text></g><g><title>tokio::coop::RestoreOnPending::made_progress (1 samples, 0.01%)</title><rect x="22.0221%" y="1205" width="0.0107%" height="15" fill="rgb(227,166,31)"/><text x="22.2721%" y="1215.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.01%)</title><rect x="22.0221%" y="1189" width="0.0107%" height="15" fill="rgb(245,143,41)"/><text x="22.2721%" y="1199.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.01%)</title><rect x="22.0221%" y="1173" width="0.0107%" height="15" fill="rgb(238,181,32)"/><text x="22.2721%" y="1183.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="22.0221%" y="1157" width="0.0107%" height="15" fill="rgb(224,113,18)"/><text x="22.2721%" y="1167.50"></text></g><g><title>core::mem::swap (1 samples, 0.01%)</title><rect x="22.0221%" y="1141" width="0.0107%" height="15" fill="rgb(240,229,28)"/><text x="22.2721%" y="1151.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.01%)</title><rect x="22.0221%" y="1125" width="0.0107%" height="15" fill="rgb(250,185,3)"/><text x="22.2721%" y="1135.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="22.0221%" y="1109" width="0.0107%" height="15" fill="rgb(212,59,25)"/><text x="22.2721%" y="1119.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (38 samples, 0.41%)</title><rect x="22.0328%" y="1141" width="0.4074%" height="15" fill="rgb(221,87,20)"/><text x="22.2828%" y="1151.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (38 samples, 0.41%)</title><rect x="22.0328%" y="1125" width="0.4074%" height="15" fill="rgb(213,74,28)"/><text x="22.2828%" y="1135.50"></text></g><g><title>core::mem::replace (38 samples, 0.41%)</title><rect x="22.0328%" y="1109" width="0.4074%" height="15" fill="rgb(224,132,34)"/><text x="22.2828%" y="1119.50"></text></g><g><title>core::mem::swap (38 samples, 0.41%)</title><rect x="22.0328%" y="1093" width="0.4074%" height="15" fill="rgb(222,101,24)"/><text x="22.2828%" y="1103.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (38 samples, 0.41%)</title><rect x="22.0328%" y="1077" width="0.4074%" height="15" fill="rgb(254,142,4)"/><text x="22.2828%" y="1087.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (38 samples, 0.41%)</title><rect x="22.0328%" y="1061" width="0.4074%" height="15" fill="rgb(230,229,49)"/><text x="22.2828%" y="1071.50"></text></g><g><title>tokio::coop::poll_proceed (39 samples, 0.42%)</title><rect x="22.0328%" y="1205" width="0.4181%" height="15" fill="rgb(238,70,47)"/><text x="22.2828%" y="1215.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 samples, 0.42%)</title><rect x="22.0328%" y="1189" width="0.4181%" height="15" fill="rgb(231,160,17)"/><text x="22.2828%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (39 samples, 0.42%)</title><rect x="22.0328%" y="1173" width="0.4181%" height="15" fill="rgb(218,68,53)"/><text x="22.2828%" y="1183.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (39 samples, 0.42%)</title><rect x="22.0328%" y="1157" width="0.4181%" height="15" fill="rgb(236,111,10)"/><text x="22.2828%" y="1167.50"></text></g><g><title>tokio::coop::Budget::decrement (1 samples, 0.01%)</title><rect x="22.4402%" y="1141" width="0.0107%" height="15" fill="rgb(224,34,41)"/><text x="22.6902%" y="1151.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::try_read_output (4 samples, 0.04%)</title><rect x="22.4509%" y="1205" width="0.0429%" height="15" fill="rgb(241,118,19)"/><text x="22.7009%" y="1215.50"></text></g><g><title>[libc-2.31.so] (23 samples, 0.25%)</title><rect x="22.4938%" y="1173" width="0.2466%" height="15" fill="rgb(238,129,25)"/><text x="22.7438%" y="1183.50"></text></g><g><title>tokio::runtime::task::core::Trailer::set_waker (1 samples, 0.01%)</title><rect x="22.7512%" y="1141" width="0.0107%" height="15" fill="rgb(238,22,31)"/><text x="23.0012%" y="1151.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.01%)</title><rect x="22.7512%" y="1125" width="0.0107%" height="15" fill="rgb(222,174,48)"/><text x="23.0012%" y="1135.50"></text></g><g><title>tokio::runtime::task::core::Trailer::set_waker::{{closure}} (1 samples, 0.01%)</title><rect x="22.7512%" y="1109" width="0.0107%" height="15" fill="rgb(206,152,40)"/><text x="23.0012%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (1 samples, 0.01%)</title><rect x="22.7512%" y="1093" width="0.0107%" height="15" fill="rgb(218,99,54)"/><text x="23.0012%" y="1103.50"></text></g><g><title>tokio::runtime::task::harness::set_join_waker (5 samples, 0.05%)</title><rect x="22.7512%" y="1157" width="0.0536%" height="15" fill="rgb(220,174,26)"/><text x="23.0012%" y="1167.50"></text></g><g><title>tokio::runtime::task::state::State::set_join_waker (4 samples, 0.04%)</title><rect x="22.7619%" y="1141" width="0.0429%" height="15" fill="rgb(245,116,9)"/><text x="23.0119%" y="1151.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update (4 samples, 0.04%)</title><rect x="22.7619%" y="1125" width="0.0429%" height="15" fill="rgb(209,72,35)"/><text x="23.0119%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (4 samples, 0.04%)</title><rect x="22.7619%" y="1109" width="0.0429%" height="15" fill="rgb(226,126,21)"/><text x="23.0119%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.04%)</title><rect x="22.7619%" y="1093" width="0.0429%" height="15" fill="rgb(227,192,1)"/><text x="23.0119%" y="1103.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (88 samples, 0.94%)</title><rect x="21.8720%" y="1221" width="0.9435%" height="15" fill="rgb(237,180,29)"/><text x="22.1220%" y="1231.50"></text></g><g><title>tokio::runtime::task::raw::try_read_output (30 samples, 0.32%)</title><rect x="22.4938%" y="1205" width="0.3216%" height="15" fill="rgb(230,197,35)"/><text x="22.7438%" y="1215.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::try_read_output (30 samples, 0.32%)</title><rect x="22.4938%" y="1189" width="0.3216%" height="15" fill="rgb(246,193,31)"/><text x="22.7438%" y="1199.50"></text></g><g><title>tokio::runtime::task::harness::can_read_output (7 samples, 0.08%)</title><rect x="22.7404%" y="1173" width="0.0751%" height="15" fill="rgb(241,36,4)"/><text x="22.9904%" y="1183.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (1 samples, 0.01%)</title><rect x="22.8048%" y="1157" width="0.0107%" height="15" fill="rgb(241,130,17)"/><text x="23.0548%" y="1167.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (1 samples, 0.01%)</title><rect x="22.8048%" y="1141" width="0.0107%" height="15" fill="rgb(206,137,32)"/><text x="23.0548%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="22.8048%" y="1125" width="0.0107%" height="15" fill="rgb(237,228,51)"/><text x="23.0548%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="22.8048%" y="1109" width="0.0107%" height="15" fill="rgb(243,6,42)"/><text x="23.0548%" y="1119.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.11%)</title><rect x="22.8155%" y="1221" width="0.1072%" height="15" fill="rgb(251,74,28)"/><text x="23.0655%" y="1231.50"></text></g><g><title>&lt;rho_runtime::storage::signal::CompletionSignal as core::future::future::Future&gt;::poll (102 samples, 1.09%)</title><rect x="21.8398%" y="1237" width="1.0936%" height="15" fill="rgb(218,20,49)"/><text x="22.0898%" y="1247.50"></text></g><g><title>core::task::poll::Poll&lt;core::result::Result&lt;T,E&gt;&gt;::map_err (1 samples, 0.01%)</title><rect x="22.9227%" y="1221" width="0.0107%" height="15" fill="rgb(238,28,14)"/><text x="23.1727%" y="1231.50"></text></g><g><title>[libc-2.31.so] (58 samples, 0.62%)</title><rect x="22.9334%" y="1237" width="0.6219%" height="15" fill="rgb(229,40,46)"/><text x="23.1834%" y="1247.50"></text></g><g><title>__rg_dealloc (1 samples, 0.01%)</title><rect x="23.5982%" y="1189" width="0.0107%" height="15" fill="rgb(244,195,20)"/><text x="23.8482%" y="1199.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.01%)</title><rect x="23.5982%" y="1173" width="0.0107%" height="15" fill="rgb(253,56,35)"/><text x="23.8482%" y="1183.50"></text></g><g><title>arena_bin_lower_slab (2 samples, 0.02%)</title><rect x="23.6303%" y="1061" width="0.0214%" height="15" fill="rgb(210,149,44)"/><text x="23.8803%" y="1071.50"></text></g><g><title>extent_snad_comp (1 samples, 0.01%)</title><rect x="23.6410%" y="1045" width="0.0107%" height="15" fill="rgb(240,135,12)"/><text x="23.8910%" y="1055.50"></text></g><g><title>extent_ad_comp (1 samples, 0.01%)</title><rect x="23.6410%" y="1029" width="0.0107%" height="15" fill="rgb(251,24,50)"/><text x="23.8910%" y="1039.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (4 samples, 0.04%)</title><rect x="23.6303%" y="1093" width="0.0429%" height="15" fill="rgb(243,200,47)"/><text x="23.8803%" y="1103.50"></text></g><g><title>arena_dalloc_bin_locked_impl (4 samples, 0.04%)</title><rect x="23.6303%" y="1077" width="0.0429%" height="15" fill="rgb(224,166,26)"/><text x="23.8803%" y="1087.50"></text></g><g><title>arena_slab_reg_dalloc (2 samples, 0.02%)</title><rect x="23.6518%" y="1061" width="0.0214%" height="15" fill="rgb(233,0,47)"/><text x="23.9018%" y="1071.50"></text></g><g><title>bitmap_unset (2 samples, 0.02%)</title><rect x="23.6518%" y="1045" width="0.0214%" height="15" fill="rgb(253,80,5)"/><text x="23.9018%" y="1055.50"></text></g><g><title>extent_arena_get (1 samples, 0.01%)</title><rect x="23.6732%" y="1093" width="0.0107%" height="15" fill="rgb(214,133,25)"/><text x="23.9232%" y="1103.50"></text></g><g><title>atomic_load_p (1 samples, 0.01%)</title><rect x="23.6732%" y="1077" width="0.0107%" height="15" fill="rgb(209,27,14)"/><text x="23.9232%" y="1087.50"></text></g><g><title>iealloc (2 samples, 0.02%)</title><rect x="23.6839%" y="1093" width="0.0214%" height="15" fill="rgb(219,102,51)"/><text x="23.9339%" y="1103.50"></text></g><g><title>rtree_extent_read (2 samples, 0.02%)</title><rect x="23.6839%" y="1077" width="0.0214%" height="15" fill="rgb(237,18,16)"/><text x="23.9339%" y="1087.50"></text></g><g><title>rtree_leaf_elm_extent_read (2 samples, 0.02%)</title><rect x="23.6839%" y="1061" width="0.0214%" height="15" fill="rgb(241,85,17)"/><text x="23.9339%" y="1071.50"></text></g><g><title>rtree_leaf_elm_bits_read (2 samples, 0.02%)</title><rect x="23.6839%" y="1045" width="0.0214%" height="15" fill="rgb(236,90,42)"/><text x="23.9339%" y="1055.50"></text></g><g><title>atomic_load_p (2 samples, 0.02%)</title><rect x="23.6839%" y="1029" width="0.0214%" height="15" fill="rgb(249,57,21)"/><text x="23.9339%" y="1039.50"></text></g><g><title>_rjem_je_malloc_mutex_lock_slow (1 samples, 0.01%)</title><rect x="23.7054%" y="1077" width="0.0107%" height="15" fill="rgb(243,12,36)"/><text x="23.9554%" y="1087.50"></text></g><g><title>spin_cpu_spinwait (1 samples, 0.01%)</title><rect x="23.7054%" y="1061" width="0.0107%" height="15" fill="rgb(253,128,47)"/><text x="23.9554%" y="1071.50"></text></g><g><title>_rjem_sdallocx (13 samples, 0.14%)</title><rect x="23.6089%" y="1189" width="0.1394%" height="15" fill="rgb(207,33,20)"/><text x="23.8589%" y="1199.50"></text></g><g><title>isfree (13 samples, 0.14%)</title><rect x="23.6089%" y="1173" width="0.1394%" height="15" fill="rgb(233,215,35)"/><text x="23.8589%" y="1183.50"></text></g><g><title>isdalloct (13 samples, 0.14%)</title><rect x="23.6089%" y="1157" width="0.1394%" height="15" fill="rgb(249,188,52)"/><text x="23.8589%" y="1167.50"></text></g><g><title>arena_sdalloc (13 samples, 0.14%)</title><rect x="23.6089%" y="1141" width="0.1394%" height="15" fill="rgb(225,12,32)"/><text x="23.8589%" y="1151.50"></text></g><g><title>tcache_dalloc_small (13 samples, 0.14%)</title><rect x="23.6089%" y="1125" width="0.1394%" height="15" fill="rgb(247,98,14)"/><text x="23.8589%" y="1135.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (13 samples, 0.14%)</title><rect x="23.6089%" y="1109" width="0.1394%" height="15" fill="rgb(247,219,48)"/><text x="23.8589%" y="1119.50"></text></g><g><title>malloc_mutex_lock (4 samples, 0.04%)</title><rect x="23.7054%" y="1093" width="0.0429%" height="15" fill="rgb(253,60,48)"/><text x="23.9554%" y="1103.50"></text></g><g><title>malloc_mutex_trylock_final (3 samples, 0.03%)</title><rect x="23.7161%" y="1077" width="0.0322%" height="15" fill="rgb(245,15,52)"/><text x="23.9661%" y="1087.50"></text></g><g><title>__GI___pthread_mutex_trylock (2 samples, 0.02%)</title><rect x="23.7268%" y="1061" width="0.0214%" height="15" fill="rgb(220,133,28)"/><text x="23.9768%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_join_double::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (4 samples, 0.04%)</title><rect x="23.7483%" y="1157" width="0.0429%" height="15" fill="rgb(217,180,4)"/><text x="23.9983%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_join_double::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (4 samples, 0.04%)</title><rect x="23.7483%" y="1141" width="0.0429%" height="15" fill="rgb(251,24,1)"/><text x="23.9983%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Core&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_join_double::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (4 samples, 0.04%)</title><rect x="23.7483%" y="1125" width="0.0429%" height="15" fill="rgb(212,185,49)"/><text x="23.9983%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Scheduler&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (4 samples, 0.04%)</title><rect x="23.7483%" y="1109" width="0.0429%" height="15" fill="rgb(215,175,22)"/><text x="23.9983%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (4 samples, 0.04%)</title><rect x="23.7483%" y="1093" width="0.0429%" height="15" fill="rgb(250,205,14)"/><text x="23.9983%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (4 samples, 0.04%)</title><rect x="23.7483%" y="1077" width="0.0429%" height="15" fill="rgb(225,211,22)"/><text x="23.9983%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (4 samples, 0.04%)</title><rect x="23.7483%" y="1061" width="0.0429%" height="15" fill="rgb(251,179,42)"/><text x="23.9983%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt; (4 samples, 0.04%)</title><rect x="23.7483%" y="1045" width="0.0429%" height="15" fill="rgb(208,216,51)"/><text x="23.9983%" y="1055.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="23.7483%" y="1029" width="0.0429%" height="15" fill="rgb(235,36,11)"/><text x="23.9983%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4 samples, 0.04%)</title><rect x="23.7483%" y="1013" width="0.0429%" height="15" fill="rgb(213,189,28)"/><text x="23.9983%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_sub (4 samples, 0.04%)</title><rect x="23.7483%" y="997" width="0.0429%" height="15" fill="rgb(227,203,42)"/><text x="23.9983%" y="1007.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (5 samples, 0.05%)</title><rect x="23.7483%" y="1189" width="0.0536%" height="15" fill="rgb(244,72,36)"/><text x="23.9983%" y="1199.50"></text></g><g><title>core::mem::drop (5 samples, 0.05%)</title><rect x="23.7483%" y="1173" width="0.0536%" height="15" fill="rgb(213,53,17)"/><text x="23.9983%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_produce::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="23.7911%" y="1157" width="0.0107%" height="15" fill="rgb(207,167,3)"/><text x="24.0411%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_produce::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="23.7911%" y="1141" width="0.0107%" height="15" fill="rgb(216,98,30)"/><text x="24.0411%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Core&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_produce::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="23.7911%" y="1125" width="0.0107%" height="15" fill="rgb(236,123,15)"/><text x="24.0411%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Scheduler&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="23.7911%" y="1109" width="0.0107%" height="15" fill="rgb(248,81,50)"/><text x="24.0411%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="23.7911%" y="1093" width="0.0107%" height="15" fill="rgb(214,120,4)"/><text x="24.0411%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="23.7911%" y="1077" width="0.0107%" height="15" fill="rgb(208,179,34)"/><text x="24.0411%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="23.7911%" y="1061" width="0.0107%" height="15" fill="rgb(227,140,7)"/><text x="24.0411%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt; (1 samples, 0.01%)</title><rect x="23.7911%" y="1045" width="0.0107%" height="15" fill="rgb(214,22,6)"/><text x="24.0411%" y="1055.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="23.7911%" y="1029" width="0.0107%" height="15" fill="rgb(207,137,27)"/><text x="24.0411%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="23.7911%" y="1013" width="0.0107%" height="15" fill="rgb(210,8,46)"/><text x="24.0411%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="23.7911%" y="997" width="0.0107%" height="15" fill="rgb(240,16,54)"/><text x="24.0411%" y="1007.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::drop_future_or_output (5 samples, 0.05%)</title><rect x="23.8019%" y="1157" width="0.0536%" height="15" fill="rgb(211,209,29)"/><text x="24.0519%" y="1167.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::set_stage (5 samples, 0.05%)</title><rect x="23.8019%" y="1141" width="0.0536%" height="15" fill="rgb(226,228,24)"/><text x="24.0519%" y="1151.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (5 samples, 0.05%)</title><rect x="23.8019%" y="1125" width="0.0536%" height="15" fill="rgb(222,84,9)"/><text x="24.0519%" y="1135.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::set_stage::{{closure}} (5 samples, 0.05%)</title><rect x="23.8019%" y="1109" width="0.0536%" height="15" fill="rgb(234,203,30)"/><text x="24.0519%" y="1119.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.05%)</title><rect x="23.8019%" y="1093" width="0.0536%" height="15" fill="rgb(238,109,14)"/><text x="24.0519%" y="1103.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (4 samples, 0.04%)</title><rect x="23.8555%" y="1157" width="0.0429%" height="15" fill="rgb(233,206,34)"/><text x="24.1055%" y="1167.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (3 samples, 0.03%)</title><rect x="23.8662%" y="1141" width="0.0322%" height="15" fill="rgb(220,167,47)"/><text x="24.1162%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.03%)</title><rect x="23.8662%" y="1125" width="0.0322%" height="15" fill="rgb(238,105,10)"/><text x="24.1162%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.03%)</title><rect x="23.8662%" y="1109" width="0.0322%" height="15" fill="rgb(213,227,17)"/><text x="24.1162%" y="1119.50"></text></g><g><title>tokio::runtime::task::raw::drop_join_handle_slow (12 samples, 0.13%)</title><rect x="23.8019%" y="1189" width="0.1287%" height="15" fill="rgb(217,132,38)"/><text x="24.0519%" y="1199.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (12 samples, 0.13%)</title><rect x="23.8019%" y="1173" width="0.1287%" height="15" fill="rgb(242,146,4)"/><text x="24.0519%" y="1183.50"></text></g><g><title>tokio::runtime::task::state::State::unset_join_interested (3 samples, 0.03%)</title><rect x="23.8984%" y="1157" width="0.0322%" height="15" fill="rgb(212,61,9)"/><text x="24.1484%" y="1167.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update (3 samples, 0.03%)</title><rect x="23.8984%" y="1141" width="0.0322%" height="15" fill="rgb(247,126,22)"/><text x="24.1484%" y="1151.50"></text></g><g><title>tokio::runtime::task::state::State::load (3 samples, 0.03%)</title><rect x="23.8984%" y="1125" width="0.0322%" height="15" fill="rgb(220,196,2)"/><text x="24.1484%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.03%)</title><rect x="23.8984%" y="1109" width="0.0322%" height="15" fill="rgb(208,46,4)"/><text x="24.1484%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.03%)</title><rect x="23.8984%" y="1093" width="0.0322%" height="15" fill="rgb(252,104,46)"/><text x="24.1484%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;rho_runtime::storage::signal::CompletionSignal&gt; (46 samples, 0.49%)</title><rect x="23.5553%" y="1237" width="0.4932%" height="15" fill="rgb(237,152,48)"/><text x="23.8053%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::join::JoinHandle&lt;rho_runtime::storage::transit::Transit&gt;&gt; (44 samples, 0.47%)</title><rect x="23.5767%" y="1221" width="0.4717%" height="15" fill="rgb(221,59,37)"/><text x="23.8267%" y="1231.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.47%)</title><rect x="23.5767%" y="1205" width="0.4717%" height="15" fill="rgb(209,202,51)"/><text x="23.8267%" y="1215.50"></text></g><g><title>tokio::runtime::task::state::State::drop_join_handle_fast (11 samples, 0.12%)</title><rect x="23.9305%" y="1189" width="0.1179%" height="15" fill="rgb(228,81,30)"/><text x="24.1805%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (11 samples, 0.12%)</title><rect x="23.9305%" y="1173" width="0.1179%" height="15" fill="rgb(227,42,39)"/><text x="24.1805%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (11 samples, 0.12%)</title><rect x="23.9305%" y="1157" width="0.1179%" height="15" fill="rgb(221,26,2)"/><text x="24.1805%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (1 samples, 0.01%)</title><rect x="24.2736%" y="853" width="0.0107%" height="15" fill="rgb(254,61,31)"/><text x="24.5236%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="24.2629%" y="965" width="0.0322%" height="15" fill="rgb(222,173,38)"/><text x="24.5129%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.03%)</title><rect x="24.2629%" y="949" width="0.0322%" height="15" fill="rgb(218,50,12)"/><text x="24.5129%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.03%)</title><rect x="24.2629%" y="933" width="0.0322%" height="15" fill="rgb(223,88,40)"/><text x="24.5129%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.03%)</title><rect x="24.2629%" y="917" width="0.0322%" height="15" fill="rgb(237,54,19)"/><text x="24.5129%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="24.2629%" y="901" width="0.0322%" height="15" fill="rgb(251,129,25)"/><text x="24.5129%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="24.2736%" y="885" width="0.0214%" height="15" fill="rgb(238,97,19)"/><text x="24.5236%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="24.2736%" y="869" width="0.0214%" height="15" fill="rgb(240,169,18)"/><text x="24.5236%" y="879.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="24.2843%" y="853" width="0.0107%" height="15" fill="rgb(230,187,49)"/><text x="24.5343%" y="863.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1 samples, 0.01%)</title><rect x="24.2843%" y="837" width="0.0107%" height="15" fill="rgb(209,44,26)"/><text x="24.5343%" y="847.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.01%)</title><rect x="24.2843%" y="821" width="0.0107%" height="15" fill="rgb(244,0,6)"/><text x="24.5343%" y="831.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.01%)</title><rect x="24.2843%" y="805" width="0.0107%" height="15" fill="rgb(248,18,21)"/><text x="24.5343%" y="815.50"></text></g><g><title>__rg_alloc (1 samples, 0.01%)</title><rect x="24.2951%" y="757" width="0.0107%" height="15" fill="rgb(245,180,19)"/><text x="24.5451%" y="767.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.01%)</title><rect x="24.2951%" y="741" width="0.0107%" height="15" fill="rgb(252,118,36)"/><text x="24.5451%" y="751.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.01%)</title><rect x="24.3165%" y="709" width="0.0107%" height="15" fill="rgb(210,224,19)"/><text x="24.5665%" y="719.50"></text></g><g><title>iallocztm (1 samples, 0.01%)</title><rect x="24.3165%" y="693" width="0.0107%" height="15" fill="rgb(218,30,24)"/><text x="24.5665%" y="703.50"></text></g><g><title>arena_malloc (1 samples, 0.01%)</title><rect x="24.3165%" y="677" width="0.0107%" height="15" fill="rgb(219,75,50)"/><text x="24.5665%" y="687.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.01%)</title><rect x="24.3165%" y="661" width="0.0107%" height="15" fill="rgb(234,72,50)"/><text x="24.5665%" y="671.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.01%)</title><rect x="24.3165%" y="645" width="0.0107%" height="15" fill="rgb(219,100,48)"/><text x="24.5665%" y="655.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (1 samples, 0.01%)</title><rect x="24.3165%" y="629" width="0.0107%" height="15" fill="rgb(253,5,41)"/><text x="24.5665%" y="639.50"></text></g><g><title>arena_slab_reg_alloc (1 samples, 0.01%)</title><rect x="24.3165%" y="613" width="0.0107%" height="15" fill="rgb(247,181,11)"/><text x="24.5665%" y="623.50"></text></g><g><title>bitmap_sfu (1 samples, 0.01%)</title><rect x="24.3165%" y="597" width="0.0107%" height="15" fill="rgb(222,223,25)"/><text x="24.5665%" y="607.50"></text></g><g><title>ffs_lu (1 samples, 0.01%)</title><rect x="24.3165%" y="581" width="0.0107%" height="15" fill="rgb(214,198,28)"/><text x="24.5665%" y="591.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (21 samples, 0.23%)</title><rect x="24.1128%" y="981" width="0.2252%" height="15" fill="rgb(230,46,43)"/><text x="24.3628%" y="991.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="24.2951%" y="965" width="0.0429%" height="15" fill="rgb(233,65,53)"/><text x="24.5451%" y="975.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="24.2951%" y="949" width="0.0429%" height="15" fill="rgb(221,121,27)"/><text x="24.5451%" y="959.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="24.2951%" y="933" width="0.0429%" height="15" fill="rgb(247,70,47)"/><text x="24.5451%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="24.2951%" y="917" width="0.0429%" height="15" fill="rgb(228,85,35)"/><text x="24.5451%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.04%)</title><rect x="24.2951%" y="901" width="0.0429%" height="15" fill="rgb(209,50,18)"/><text x="24.5451%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.04%)</title><rect x="24.2951%" y="885" width="0.0429%" height="15" fill="rgb(250,19,35)"/><text x="24.5451%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.04%)</title><rect x="24.2951%" y="869" width="0.0429%" height="15" fill="rgb(253,107,29)"/><text x="24.5451%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.04%)</title><rect x="24.2951%" y="853" width="0.0429%" height="15" fill="rgb(252,179,29)"/><text x="24.5451%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.04%)</title><rect x="24.2951%" y="837" width="0.0429%" height="15" fill="rgb(238,194,6)"/><text x="24.5451%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.04%)</title><rect x="24.2951%" y="821" width="0.0429%" height="15" fill="rgb(238,164,29)"/><text x="24.5451%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.04%)</title><rect x="24.2951%" y="805" width="0.0429%" height="15" fill="rgb(224,25,9)"/><text x="24.5451%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.04%)</title><rect x="24.2951%" y="789" width="0.0429%" height="15" fill="rgb(244,153,23)"/><text x="24.5451%" y="799.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.04%)</title><rect x="24.2951%" y="773" width="0.0429%" height="15" fill="rgb(212,203,14)"/><text x="24.5451%" y="783.50"></text></g><g><title>_rjem_mallocx (3 samples, 0.03%)</title><rect x="24.3058%" y="757" width="0.0322%" height="15" fill="rgb(220,164,20)"/><text x="24.5558%" y="767.50"></text></g><g><title>imalloc (3 samples, 0.03%)</title><rect x="24.3058%" y="741" width="0.0322%" height="15" fill="rgb(222,203,48)"/><text x="24.5558%" y="751.50"></text></g><g><title>imalloc_body (3 samples, 0.03%)</title><rect x="24.3058%" y="725" width="0.0322%" height="15" fill="rgb(215,159,22)"/><text x="24.5558%" y="735.50"></text></g><g><title>sz_size2index (1 samples, 0.01%)</title><rect x="24.3272%" y="709" width="0.0107%" height="15" fill="rgb(216,183,47)"/><text x="24.5772%" y="719.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (29 samples, 0.31%)</title><rect x="24.1021%" y="997" width="0.3109%" height="15" fill="rgb(229,195,25)"/><text x="24.3521%" y="1007.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.08%)</title><rect x="24.3379%" y="981" width="0.0751%" height="15" fill="rgb(224,132,51)"/><text x="24.5879%" y="991.50"></text></g><g><title>&lt;model::rho_types::MatchCase as core::clone::Clone&gt;::clone (31 samples, 0.33%)</title><rect x="24.1021%" y="1013" width="0.3324%" height="15" fill="rgb(240,63,7)"/><text x="24.3521%" y="1023.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="24.4130%" y="997" width="0.0214%" height="15" fill="rgb(249,182,41)"/><text x="24.6630%" y="1007.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.01%)</title><rect x="24.4452%" y="805" width="0.0107%" height="15" fill="rgb(243,47,26)"/><text x="24.6952%" y="815.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (1 samples, 0.01%)</title><rect x="24.4452%" y="789" width="0.0107%" height="15" fill="rgb(233,48,2)"/><text x="24.6952%" y="799.50"></text></g><g><title>arena_bin_malloc_hard (1 samples, 0.01%)</title><rect x="24.4452%" y="773" width="0.0107%" height="15" fill="rgb(244,165,34)"/><text x="24.6952%" y="783.50"></text></g><g><title>arena_bin_nonfull_slab_get (1 samples, 0.01%)</title><rect x="24.4452%" y="757" width="0.0107%" height="15" fill="rgb(207,89,7)"/><text x="24.6952%" y="767.50"></text></g><g><title>malloc_mutex_unlock (1 samples, 0.01%)</title><rect x="24.4452%" y="741" width="0.0107%" height="15" fill="rgb(244,117,36)"/><text x="24.6952%" y="751.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="24.4452%" y="725" width="0.0107%" height="15" fill="rgb(226,144,34)"/><text x="24.6952%" y="735.50"></text></g><g><title>imalloc_no_sample (4 samples, 0.04%)</title><rect x="24.4452%" y="869" width="0.0429%" height="15" fill="rgb(213,23,19)"/><text x="24.6952%" y="879.50"></text></g><g><title>iallocztm (4 samples, 0.04%)</title><rect x="24.4452%" y="853" width="0.0429%" height="15" fill="rgb(217,75,12)"/><text x="24.6952%" y="863.50"></text></g><g><title>arena_malloc (4 samples, 0.04%)</title><rect x="24.4452%" y="837" width="0.0429%" height="15" fill="rgb(224,159,17)"/><text x="24.6952%" y="847.50"></text></g><g><title>tcache_alloc_small (4 samples, 0.04%)</title><rect x="24.4452%" y="821" width="0.0429%" height="15" fill="rgb(217,118,1)"/><text x="24.6952%" y="831.50"></text></g><g><title>cache_bin_alloc_easy (3 samples, 0.03%)</title><rect x="24.4559%" y="805" width="0.0322%" height="15" fill="rgb(232,180,48)"/><text x="24.7059%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.06%)</title><rect x="24.4344%" y="1013" width="0.0643%" height="15" fill="rgb(230,27,33)"/><text x="24.6844%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.06%)</title><rect x="24.4344%" y="997" width="0.0643%" height="15" fill="rgb(205,31,21)"/><text x="24.6844%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.06%)</title><rect x="24.4344%" y="981" width="0.0643%" height="15" fill="rgb(253,59,4)"/><text x="24.6844%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.05%)</title><rect x="24.4452%" y="965" width="0.0536%" height="15" fill="rgb(224,201,9)"/><text x="24.6952%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.05%)</title><rect x="24.4452%" y="949" width="0.0536%" height="15" fill="rgb(229,206,30)"/><text x="24.6952%" y="959.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.05%)</title><rect x="24.4452%" y="933" width="0.0536%" height="15" fill="rgb(212,67,47)"/><text x="24.6952%" y="943.50"></text></g><g><title>_rjem_mallocx (5 samples, 0.05%)</title><rect x="24.4452%" y="917" width="0.0536%" height="15" fill="rgb(211,96,50)"/><text x="24.6952%" y="927.50"></text></g><g><title>imalloc (5 samples, 0.05%)</title><rect x="24.4452%" y="901" width="0.0536%" height="15" fill="rgb(252,114,18)"/><text x="24.6952%" y="911.50"></text></g><g><title>imalloc_body (5 samples, 0.05%)</title><rect x="24.4452%" y="885" width="0.0536%" height="15" fill="rgb(223,58,37)"/><text x="24.6952%" y="895.50"></text></g><g><title>sz_index2size (1 samples, 0.01%)</title><rect x="24.4880%" y="869" width="0.0107%" height="15" fill="rgb(237,70,4)"/><text x="24.7380%" y="879.50"></text></g><g><title>sz_index2size_lookup (1 samples, 0.01%)</title><rect x="24.4880%" y="853" width="0.0107%" height="15" fill="rgb(244,85,46)"/><text x="24.7380%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (42 samples, 0.45%)</title><rect x="24.1021%" y="1077" width="0.4503%" height="15" fill="rgb(223,39,52)"/><text x="24.3521%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (42 samples, 0.45%)</title><rect x="24.1021%" y="1061" width="0.4503%" height="15" fill="rgb(218,200,14)"/><text x="24.3521%" y="1071.50"></text></g><g><title>alloc::slice::hack::to_vec (42 samples, 0.45%)</title><rect x="24.1021%" y="1045" width="0.4503%" height="15" fill="rgb(208,171,16)"/><text x="24.3521%" y="1055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (42 samples, 0.45%)</title><rect x="24.1021%" y="1029" width="0.4503%" height="15" fill="rgb(234,200,18)"/><text x="24.3521%" y="1039.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (5 samples, 0.05%)</title><rect x="24.4988%" y="1013" width="0.0536%" height="15" fill="rgb(228,45,11)"/><text x="24.7488%" y="1023.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.05%)</title><rect x="24.4988%" y="997" width="0.0536%" height="15" fill="rgb(237,182,11)"/><text x="24.7488%" y="1007.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="24.5524%" y="1061" width="0.0214%" height="15" fill="rgb(241,175,49)"/><text x="24.8024%" y="1071.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="24.5524%" y="1045" width="0.0214%" height="15" fill="rgb(247,38,35)"/><text x="24.8024%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="24.5631%" y="1029" width="0.0107%" height="15" fill="rgb(228,39,49)"/><text x="24.8131%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="24.5631%" y="1013" width="0.0107%" height="15" fill="rgb(226,101,26)"/><text x="24.8131%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="24.5631%" y="997" width="0.0107%" height="15" fill="rgb(206,141,19)"/><text x="24.8131%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="24.5631%" y="981" width="0.0107%" height="15" fill="rgb(211,200,13)"/><text x="24.8131%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="24.5631%" y="965" width="0.0107%" height="15" fill="rgb(241,121,6)"/><text x="24.8131%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="24.5631%" y="949" width="0.0107%" height="15" fill="rgb(234,221,29)"/><text x="24.8131%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="24.5631%" y="933" width="0.0107%" height="15" fill="rgb(229,136,5)"/><text x="24.8131%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="24.5631%" y="917" width="0.0107%" height="15" fill="rgb(238,36,11)"/><text x="24.8131%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="24.5631%" y="901" width="0.0107%" height="15" fill="rgb(251,55,41)"/><text x="24.8131%" y="911.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="24.5631%" y="885" width="0.0107%" height="15" fill="rgb(242,34,40)"/><text x="24.8131%" y="895.50"></text></g><g><title>_rjem_mallocx (1 samples, 0.01%)</title><rect x="24.5631%" y="869" width="0.0107%" height="15" fill="rgb(215,42,17)"/><text x="24.8131%" y="879.50"></text></g><g><title>imalloc (1 samples, 0.01%)</title><rect x="24.5631%" y="853" width="0.0107%" height="15" fill="rgb(207,44,46)"/><text x="24.8131%" y="863.50"></text></g><g><title>imalloc_body (1 samples, 0.01%)</title><rect x="24.5631%" y="837" width="0.0107%" height="15" fill="rgb(211,206,28)"/><text x="24.8131%" y="847.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.01%)</title><rect x="24.5631%" y="821" width="0.0107%" height="15" fill="rgb(237,167,16)"/><text x="24.8131%" y="831.50"></text></g><g><title>iallocztm (1 samples, 0.01%)</title><rect x="24.5631%" y="805" width="0.0107%" height="15" fill="rgb(233,66,6)"/><text x="24.8131%" y="815.50"></text></g><g><title>arena_malloc (1 samples, 0.01%)</title><rect x="24.5631%" y="789" width="0.0107%" height="15" fill="rgb(246,123,29)"/><text x="24.8131%" y="799.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.01%)</title><rect x="24.5631%" y="773" width="0.0107%" height="15" fill="rgb(209,62,40)"/><text x="24.8131%" y="783.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.01%)</title><rect x="24.5631%" y="757" width="0.0107%" height="15" fill="rgb(218,4,25)"/><text x="24.8131%" y="767.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (1 samples, 0.01%)</title><rect x="24.5631%" y="741" width="0.0107%" height="15" fill="rgb(253,91,49)"/><text x="24.8131%" y="751.50"></text></g><g><title>arena_slab_reg_alloc (1 samples, 0.01%)</title><rect x="24.5631%" y="725" width="0.0107%" height="15" fill="rgb(228,155,29)"/><text x="24.8131%" y="735.50"></text></g><g><title>bitmap_sfu (1 samples, 0.01%)</title><rect x="24.5631%" y="709" width="0.0107%" height="15" fill="rgb(243,57,37)"/><text x="24.8131%" y="719.50"></text></g><g><title>ffs_lu (1 samples, 0.01%)</title><rect x="24.5631%" y="693" width="0.0107%" height="15" fill="rgb(244,167,17)"/><text x="24.8131%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="24.5845%" y="1029" width="0.0107%" height="15" fill="rgb(207,181,38)"/><text x="24.8345%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="24.5845%" y="1013" width="0.0107%" height="15" fill="rgb(211,8,23)"/><text x="24.8345%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="24.5845%" y="1045" width="0.0214%" height="15" fill="rgb(235,11,44)"/><text x="24.8345%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="24.5953%" y="1029" width="0.0107%" height="15" fill="rgb(248,18,52)"/><text x="24.8453%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="24.5953%" y="1013" width="0.0107%" height="15" fill="rgb(208,4,7)"/><text x="24.8453%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="24.5953%" y="997" width="0.0107%" height="15" fill="rgb(240,17,39)"/><text x="24.8453%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="24.5953%" y="981" width="0.0107%" height="15" fill="rgb(207,170,3)"/><text x="24.8453%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="24.5953%" y="965" width="0.0107%" height="15" fill="rgb(236,100,52)"/><text x="24.8453%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="24.5953%" y="949" width="0.0107%" height="15" fill="rgb(246,78,51)"/><text x="24.8453%" y="959.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="24.5953%" y="933" width="0.0107%" height="15" fill="rgb(211,17,15)"/><text x="24.8453%" y="943.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1 samples, 0.01%)</title><rect x="24.5953%" y="917" width="0.0107%" height="15" fill="rgb(209,59,46)"/><text x="24.8453%" y="927.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.01%)</title><rect x="24.5953%" y="901" width="0.0107%" height="15" fill="rgb(210,92,25)"/><text x="24.8453%" y="911.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.01%)</title><rect x="24.5953%" y="885" width="0.0107%" height="15" fill="rgb(238,174,52)"/><text x="24.8453%" y="895.50"></text></g><g><title>imalloc_no_sample (2 samples, 0.02%)</title><rect x="24.6060%" y="789" width="0.0214%" height="15" fill="rgb(230,73,7)"/><text x="24.8560%" y="799.50"></text></g><g><title>iallocztm (2 samples, 0.02%)</title><rect x="24.6060%" y="773" width="0.0214%" height="15" fill="rgb(243,124,40)"/><text x="24.8560%" y="783.50"></text></g><g><title>arena_malloc (2 samples, 0.02%)</title><rect x="24.6060%" y="757" width="0.0214%" height="15" fill="rgb(244,170,11)"/><text x="24.8560%" y="767.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.02%)</title><rect x="24.6060%" y="741" width="0.0214%" height="15" fill="rgb(207,114,54)"/><text x="24.8560%" y="751.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.01%)</title><rect x="24.6167%" y="725" width="0.0107%" height="15" fill="rgb(205,42,20)"/><text x="24.8667%" y="735.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (1 samples, 0.01%)</title><rect x="24.6167%" y="709" width="0.0107%" height="15" fill="rgb(230,30,28)"/><text x="24.8667%" y="719.50"></text></g><g><title>arena_slab_reg_alloc (1 samples, 0.01%)</title><rect x="24.6167%" y="693" width="0.0107%" height="15" fill="rgb(205,73,54)"/><text x="24.8667%" y="703.50"></text></g><g><title>bitmap_sfu (1 samples, 0.01%)</title><rect x="24.6167%" y="677" width="0.0107%" height="15" fill="rgb(254,227,23)"/><text x="24.8667%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.03%)</title><rect x="24.6060%" y="885" width="0.0322%" height="15" fill="rgb(228,202,34)"/><text x="24.8560%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.03%)</title><rect x="24.6060%" y="869" width="0.0322%" height="15" fill="rgb(222,225,37)"/><text x="24.8560%" y="879.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.03%)</title><rect x="24.6060%" y="853" width="0.0322%" height="15" fill="rgb(221,14,54)"/><text x="24.8560%" y="863.50"></text></g><g><title>_rjem_mallocx (3 samples, 0.03%)</title><rect x="24.6060%" y="837" width="0.0322%" height="15" fill="rgb(254,102,2)"/><text x="24.8560%" y="847.50"></text></g><g><title>imalloc (3 samples, 0.03%)</title><rect x="24.6060%" y="821" width="0.0322%" height="15" fill="rgb(232,104,17)"/><text x="24.8560%" y="831.50"></text></g><g><title>imalloc_body (3 samples, 0.03%)</title><rect x="24.6060%" y="805" width="0.0322%" height="15" fill="rgb(250,220,14)"/><text x="24.8560%" y="815.50"></text></g><g><title>sz_size2index (1 samples, 0.01%)</title><rect x="24.6274%" y="789" width="0.0107%" height="15" fill="rgb(241,158,9)"/><text x="24.8774%" y="799.50"></text></g><g><title>sz_size2index_lookup (1 samples, 0.01%)</title><rect x="24.6274%" y="773" width="0.0107%" height="15" fill="rgb(246,9,43)"/><text x="24.8774%" y="783.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (7 samples, 0.08%)</title><rect x="24.5738%" y="1061" width="0.0751%" height="15" fill="rgb(206,73,33)"/><text x="24.8238%" y="1071.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="24.6060%" y="1045" width="0.0429%" height="15" fill="rgb(222,79,8)"/><text x="24.8560%" y="1055.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="24.6060%" y="1029" width="0.0429%" height="15" fill="rgb(234,8,54)"/><text x="24.8560%" y="1039.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="24.6060%" y="1013" width="0.0429%" height="15" fill="rgb(209,134,38)"/><text x="24.8560%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="24.6060%" y="997" width="0.0429%" height="15" fill="rgb(230,127,29)"/><text x="24.8560%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.04%)</title><rect x="24.6060%" y="981" width="0.0429%" height="15" fill="rgb(242,44,41)"/><text x="24.8560%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.04%)</title><rect x="24.6060%" y="965" width="0.0429%" height="15" fill="rgb(222,56,43)"/><text x="24.8560%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.04%)</title><rect x="24.6060%" y="949" width="0.0429%" height="15" fill="rgb(238,39,47)"/><text x="24.8560%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.04%)</title><rect x="24.6060%" y="933" width="0.0429%" height="15" fill="rgb(226,79,43)"/><text x="24.8560%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.04%)</title><rect x="24.6060%" y="917" width="0.0429%" height="15" fill="rgb(242,105,53)"/><text x="24.8560%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.04%)</title><rect x="24.6060%" y="901" width="0.0429%" height="15" fill="rgb(251,132,46)"/><text x="24.8560%" y="911.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="24.6381%" y="885" width="0.0107%" height="15" fill="rgb(231,77,14)"/><text x="24.8881%" y="895.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1 samples, 0.01%)</title><rect x="24.6381%" y="869" width="0.0107%" height="15" fill="rgb(240,135,9)"/><text x="24.8881%" y="879.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.01%)</title><rect x="24.6381%" y="853" width="0.0107%" height="15" fill="rgb(248,109,14)"/><text x="24.8881%" y="863.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.01%)</title><rect x="24.6381%" y="837" width="0.0107%" height="15" fill="rgb(227,146,52)"/><text x="24.8881%" y="847.50"></text></g><g><title>&lt;model::rho_types::Match as core::clone::Clone&gt;::clone (55 samples, 0.59%)</title><rect x="24.1021%" y="1093" width="0.5897%" height="15" fill="rgb(232,54,3)"/><text x="24.3521%" y="1103.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (13 samples, 0.14%)</title><rect x="24.5524%" y="1077" width="0.1394%" height="15" fill="rgb(229,201,43)"/><text x="24.8024%" y="1087.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.04%)</title><rect x="24.6489%" y="1061" width="0.0429%" height="15" fill="rgb(252,161,33)"/><text x="24.8989%" y="1071.50"></text></g><g><title>imalloc_body (1 samples, 0.01%)</title><rect x="24.7025%" y="965" width="0.0107%" height="15" fill="rgb(226,146,40)"/><text x="24.9525%" y="975.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.01%)</title><rect x="24.7025%" y="949" width="0.0107%" height="15" fill="rgb(219,47,25)"/><text x="24.9525%" y="959.50"></text></g><g><title>iallocztm (1 samples, 0.01%)</title><rect x="24.7025%" y="933" width="0.0107%" height="15" fill="rgb(250,135,13)"/><text x="24.9525%" y="943.50"></text></g><g><title>arena_malloc (1 samples, 0.01%)</title><rect x="24.7025%" y="917" width="0.0107%" height="15" fill="rgb(219,229,18)"/><text x="24.9525%" y="927.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.01%)</title><rect x="24.7025%" y="901" width="0.0107%" height="15" fill="rgb(217,152,27)"/><text x="24.9525%" y="911.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.01%)</title><rect x="24.7025%" y="885" width="0.0107%" height="15" fill="rgb(225,71,47)"/><text x="24.9525%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.03%)</title><rect x="24.6918%" y="1045" width="0.0322%" height="15" fill="rgb(220,139,14)"/><text x="24.9418%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.03%)</title><rect x="24.6918%" y="1029" width="0.0322%" height="15" fill="rgb(247,54,32)"/><text x="24.9418%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="24.7025%" y="1013" width="0.0214%" height="15" fill="rgb(252,131,39)"/><text x="24.9525%" y="1023.50"></text></g><g><title>_rjem_mallocx (2 samples, 0.02%)</title><rect x="24.7025%" y="997" width="0.0214%" height="15" fill="rgb(210,108,39)"/><text x="24.9525%" y="1007.50"></text></g><g><title>imalloc (2 samples, 0.02%)</title><rect x="24.7025%" y="981" width="0.0214%" height="15" fill="rgb(205,23,29)"/><text x="24.9525%" y="991.50"></text></g><g><title>tsd_fetch (1 samples, 0.01%)</title><rect x="24.7132%" y="965" width="0.0107%" height="15" fill="rgb(246,139,46)"/><text x="24.9632%" y="975.50"></text></g><g><title>tsd_fetch_impl (1 samples, 0.01%)</title><rect x="24.7132%" y="949" width="0.0107%" height="15" fill="rgb(250,81,26)"/><text x="24.9632%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.04%)</title><rect x="24.6918%" y="1093" width="0.0429%" height="15" fill="rgb(214,104,7)"/><text x="24.9418%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.04%)</title><rect x="24.6918%" y="1077" width="0.0429%" height="15" fill="rgb(233,189,8)"/><text x="24.9418%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.04%)</title><rect x="24.6918%" y="1061" width="0.0429%" height="15" fill="rgb(228,141,17)"/><text x="24.9418%" y="1071.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="24.7239%" y="1045" width="0.0107%" height="15" fill="rgb(247,157,1)"/><text x="24.9739%" y="1055.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1 samples, 0.01%)</title><rect x="24.7239%" y="1029" width="0.0107%" height="15" fill="rgb(249,225,5)"/><text x="24.9739%" y="1039.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.01%)</title><rect x="24.7239%" y="1013" width="0.0107%" height="15" fill="rgb(242,55,13)"/><text x="24.9739%" y="1023.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.01%)</title><rect x="24.7239%" y="997" width="0.0107%" height="15" fill="rgb(230,49,50)"/><text x="24.9739%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (62 samples, 0.66%)</title><rect x="24.1021%" y="1157" width="0.6647%" height="15" fill="rgb(241,111,38)"/><text x="24.3521%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (62 samples, 0.66%)</title><rect x="24.1021%" y="1141" width="0.6647%" height="15" fill="rgb(252,155,4)"/><text x="24.3521%" y="1151.50"></text></g><g><title>alloc::slice::hack::to_vec (62 samples, 0.66%)</title><rect x="24.1021%" y="1125" width="0.6647%" height="15" fill="rgb(212,69,32)"/><text x="24.3521%" y="1135.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (62 samples, 0.66%)</title><rect x="24.1021%" y="1109" width="0.6647%" height="15" fill="rgb(243,107,47)"/><text x="24.3521%" y="1119.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3 samples, 0.03%)</title><rect x="24.7346%" y="1093" width="0.0322%" height="15" fill="rgb(247,130,12)"/><text x="24.9846%" y="1103.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="24.7346%" y="1077" width="0.0322%" height="15" fill="rgb(233,74,16)"/><text x="24.9846%" y="1087.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.01%)</title><rect x="24.7775%" y="837" width="0.0107%" height="15" fill="rgb(208,58,18)"/><text x="25.0275%" y="847.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (1 samples, 0.01%)</title><rect x="24.7775%" y="821" width="0.0107%" height="15" fill="rgb(242,225,1)"/><text x="25.0275%" y="831.50"></text></g><g><title>arena_slab_reg_alloc (1 samples, 0.01%)</title><rect x="24.7775%" y="805" width="0.0107%" height="15" fill="rgb(249,39,40)"/><text x="25.0275%" y="815.50"></text></g><g><title>bitmap_sfu (1 samples, 0.01%)</title><rect x="24.7775%" y="789" width="0.0107%" height="15" fill="rgb(207,72,44)"/><text x="25.0275%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="24.7668%" y="1045" width="0.0322%" height="15" fill="rgb(215,193,12)"/><text x="25.0168%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="24.7668%" y="1029" width="0.0322%" height="15" fill="rgb(248,41,39)"/><text x="25.0168%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.03%)</title><rect x="24.7668%" y="1013" width="0.0322%" height="15" fill="rgb(253,85,4)"/><text x="25.0168%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.03%)</title><rect x="24.7668%" y="997" width="0.0322%" height="15" fill="rgb(243,70,31)"/><text x="25.0168%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.03%)</title><rect x="24.7668%" y="981" width="0.0322%" height="15" fill="rgb(253,195,26)"/><text x="25.0168%" y="991.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.03%)</title><rect x="24.7668%" y="965" width="0.0322%" height="15" fill="rgb(243,42,11)"/><text x="25.0168%" y="975.50"></text></g><g><title>_rjem_mallocx (3 samples, 0.03%)</title><rect x="24.7668%" y="949" width="0.0322%" height="15" fill="rgb(239,66,17)"/><text x="25.0168%" y="959.50"></text></g><g><title>imalloc (3 samples, 0.03%)</title><rect x="24.7668%" y="933" width="0.0322%" height="15" fill="rgb(217,132,21)"/><text x="25.0168%" y="943.50"></text></g><g><title>imalloc_body (3 samples, 0.03%)</title><rect x="24.7668%" y="917" width="0.0322%" height="15" fill="rgb(252,202,21)"/><text x="25.0168%" y="927.50"></text></g><g><title>imalloc_no_sample (2 samples, 0.02%)</title><rect x="24.7775%" y="901" width="0.0214%" height="15" fill="rgb(233,98,36)"/><text x="25.0275%" y="911.50"></text></g><g><title>iallocztm (2 samples, 0.02%)</title><rect x="24.7775%" y="885" width="0.0214%" height="15" fill="rgb(216,153,54)"/><text x="25.0275%" y="895.50"></text></g><g><title>arena_malloc (2 samples, 0.02%)</title><rect x="24.7775%" y="869" width="0.0214%" height="15" fill="rgb(250,99,7)"/><text x="25.0275%" y="879.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.02%)</title><rect x="24.7775%" y="853" width="0.0214%" height="15" fill="rgb(207,56,50)"/><text x="25.0275%" y="863.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.01%)</title><rect x="24.7882%" y="837" width="0.0107%" height="15" fill="rgb(244,61,34)"/><text x="25.0382%" y="847.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (66 samples, 0.71%)</title><rect x="24.1021%" y="1173" width="0.7076%" height="15" fill="rgb(241,50,38)"/><text x="24.3521%" y="1183.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="24.7668%" y="1157" width="0.0429%" height="15" fill="rgb(212,166,30)"/><text x="25.0168%" y="1167.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="24.7668%" y="1141" width="0.0429%" height="15" fill="rgb(249,127,32)"/><text x="25.0168%" y="1151.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="24.7668%" y="1125" width="0.0429%" height="15" fill="rgb(209,103,0)"/><text x="25.0168%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="24.7668%" y="1109" width="0.0429%" height="15" fill="rgb(238,209,51)"/><text x="25.0168%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.04%)</title><rect x="24.7668%" y="1093" width="0.0429%" height="15" fill="rgb(237,56,23)"/><text x="25.0168%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.04%)</title><rect x="24.7668%" y="1077" width="0.0429%" height="15" fill="rgb(215,153,46)"/><text x="25.0168%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.04%)</title><rect x="24.7668%" y="1061" width="0.0429%" height="15" fill="rgb(224,49,31)"/><text x="25.0168%" y="1071.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="24.7990%" y="1045" width="0.0107%" height="15" fill="rgb(250,18,42)"/><text x="25.0490%" y="1055.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="24.7990%" y="1029" width="0.0107%" height="15" fill="rgb(215,176,39)"/><text x="25.0490%" y="1039.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="24.7990%" y="1013" width="0.0107%" height="15" fill="rgb(223,77,29)"/><text x="25.0490%" y="1023.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (69 samples, 0.74%)</title><rect x="24.0913%" y="1189" width="0.7398%" height="15" fill="rgb(234,94,52)"/><text x="24.3413%" y="1199.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="24.8097%" y="1173" width="0.0214%" height="15" fill="rgb(220,154,50)"/><text x="25.0597%" y="1183.50"></text></g><g><title>&lt;model::rho_types::ParWithRandom as core::clone::Clone&gt;::clone (70 samples, 0.75%)</title><rect x="24.0913%" y="1205" width="0.7505%" height="15" fill="rgb(212,11,10)"/><text x="24.3413%" y="1215.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="24.8311%" y="1189" width="0.0107%" height="15" fill="rgb(205,166,19)"/><text x="25.0811%" y="1199.50"></text></g><g><title>&lt;rho_runtime::storage::TaggedContinuation as core::clone::Clone&gt;::clone (72 samples, 0.77%)</title><rect x="24.0806%" y="1221" width="0.7720%" height="15" fill="rgb(244,198,16)"/><text x="24.3306%" y="1231.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="24.8419%" y="1205" width="0.0107%" height="15" fill="rgb(219,69,12)"/><text x="25.0919%" y="1215.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.01%)</title><rect x="24.8526%" y="1221" width="0.0107%" height="15" fill="rgb(245,30,7)"/><text x="25.1026%" y="1231.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (1 samples, 0.01%)</title><rect x="24.8526%" y="1205" width="0.0107%" height="15" fill="rgb(218,221,48)"/><text x="25.1026%" y="1215.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.04%)</title><rect x="24.8633%" y="1221" width="0.0429%" height="15" fill="rgb(216,66,15)"/><text x="25.1133%" y="1231.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::remove (1 samples, 0.01%)</title><rect x="24.9598%" y="1109" width="0.0107%" height="15" fill="rgb(226,122,50)"/><text x="25.2098%" y="1119.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="24.9598%" y="1093" width="0.0107%" height="15" fill="rgb(239,156,16)"/><text x="25.2098%" y="1103.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="24.9705%" y="1061" width="0.0107%" height="15" fill="rgb(224,27,38)"/><text x="25.2205%" y="1071.50"></text></g><g><title>&lt;blake3::Hash as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="24.9705%" y="1045" width="0.0107%" height="15" fill="rgb(224,39,27)"/><text x="25.2205%" y="1055.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (1 samples, 0.01%)</title><rect x="24.9705%" y="1029" width="0.0107%" height="15" fill="rgb(215,92,29)"/><text x="25.2205%" y="1039.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="24.9705%" y="1013" width="0.0107%" height="15" fill="rgb(207,159,16)"/><text x="25.2205%" y="1023.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (1 samples, 0.01%)</title><rect x="24.9705%" y="997" width="0.0107%" height="15" fill="rgb(238,163,47)"/><text x="25.2205%" y="1007.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="24.9705%" y="981" width="0.0107%" height="15" fill="rgb(219,91,49)"/><text x="25.2205%" y="991.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (1 samples, 0.01%)</title><rect x="24.9705%" y="965" width="0.0107%" height="15" fill="rgb(227,167,31)"/><text x="25.2205%" y="975.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="24.9705%" y="949" width="0.0107%" height="15" fill="rgb(234,80,54)"/><text x="25.2205%" y="959.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.01%)</title><rect x="24.9920%" y="1013" width="0.0107%" height="15" fill="rgb(212,114,2)"/><text x="25.2420%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (10 samples, 0.11%)</title><rect x="24.9062%" y="1221" width="0.1072%" height="15" fill="rgb(234,50,24)"/><text x="25.1562%" y="1231.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (10 samples, 0.11%)</title><rect x="24.9062%" y="1205" width="0.1072%" height="15" fill="rgb(221,68,8)"/><text x="25.1562%" y="1215.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (9 samples, 0.10%)</title><rect x="24.9169%" y="1189" width="0.0965%" height="15" fill="rgb(254,180,31)"/><text x="25.1669%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.08%)</title><rect x="24.9384%" y="1173" width="0.0751%" height="15" fill="rgb(247,130,50)"/><text x="25.1884%" y="1183.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 0.08%)</title><rect x="24.9384%" y="1157" width="0.0751%" height="15" fill="rgb(211,109,4)"/><text x="25.1884%" y="1167.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (5 samples, 0.05%)</title><rect x="24.9598%" y="1141" width="0.0536%" height="15" fill="rgb(238,50,21)"/><text x="25.2098%" y="1151.50"></text></g><g><title>rho_runtime::storage::transit::Transit::join::{{closure}} (5 samples, 0.05%)</title><rect x="24.9598%" y="1125" width="0.0536%" height="15" fill="rgb(225,57,45)"/><text x="25.2098%" y="1135.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.04%)</title><rect x="24.9705%" y="1109" width="0.0429%" height="15" fill="rgb(209,196,50)"/><text x="25.2205%" y="1119.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.04%)</title><rect x="24.9705%" y="1093" width="0.0429%" height="15" fill="rgb(242,140,13)"/><text x="25.2205%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (4 samples, 0.04%)</title><rect x="24.9705%" y="1077" width="0.0429%" height="15" fill="rgb(217,111,7)"/><text x="25.2205%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (3 samples, 0.03%)</title><rect x="24.9812%" y="1061" width="0.0322%" height="15" fill="rgb(253,193,51)"/><text x="25.2312%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::iter_hash (2 samples, 0.02%)</title><rect x="24.9920%" y="1045" width="0.0214%" height="15" fill="rgb(252,70,29)"/><text x="25.2420%" y="1055.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="24.9920%" y="1029" width="0.0214%" height="15" fill="rgb(232,127,12)"/><text x="25.2420%" y="1039.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="25.0027%" y="1013" width="0.0107%" height="15" fill="rgb(211,180,21)"/><text x="25.2527%" y="1023.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="25.0027%" y="997" width="0.0107%" height="15" fill="rgb(229,72,13)"/><text x="25.2527%" y="1007.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="25.0027%" y="981" width="0.0107%" height="15" fill="rgb(240,211,49)"/><text x="25.2527%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rho_runtime::storage::transit::SharedJoinedConsumer&gt;&gt; (1 samples, 0.01%)</title><rect x="25.0134%" y="1221" width="0.0107%" height="15" fill="rgb(219,149,40)"/><text x="25.2634%" y="1231.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="25.0134%" y="1205" width="0.0107%" height="15" fill="rgb(210,127,46)"/><text x="25.2634%" y="1215.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="25.0670%" y="1205" width="0.0322%" height="15" fill="rgb(220,106,7)"/><text x="25.3170%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3 samples, 0.03%)</title><rect x="25.0670%" y="1189" width="0.0322%" height="15" fill="rgb(249,31,22)"/><text x="25.3170%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.03%)</title><rect x="25.0670%" y="1173" width="0.0322%" height="15" fill="rgb(253,1,49)"/><text x="25.3170%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="25.0992%" y="1205" width="0.0107%" height="15" fill="rgb(227,144,33)"/><text x="25.3492%" y="1215.50"></text></g><g><title>&lt;usize as core::ops::arith::AddAssign&gt;::add_assign (1 samples, 0.01%)</title><rect x="25.0992%" y="1189" width="0.0107%" height="15" fill="rgb(249,163,44)"/><text x="25.3492%" y="1199.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="25.1099%" y="1205" width="0.0107%" height="15" fill="rgb(234,15,39)"/><text x="25.3599%" y="1215.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="25.1206%" y="1173" width="0.0214%" height="15" fill="rgb(207,66,16)"/><text x="25.3706%" y="1183.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="25.1206%" y="1157" width="0.0214%" height="15" fill="rgb(233,112,24)"/><text x="25.3706%" y="1167.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="25.1206%" y="1141" width="0.0214%" height="15" fill="rgb(230,90,22)"/><text x="25.3706%" y="1151.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (2 samples, 0.02%)</title><rect x="25.1206%" y="1125" width="0.0214%" height="15" fill="rgb(229,61,13)"/><text x="25.3706%" y="1135.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2 samples, 0.02%)</title><rect x="25.1206%" y="1109" width="0.0214%" height="15" fill="rgb(225,57,24)"/><text x="25.3706%" y="1119.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.02%)</title><rect x="25.1206%" y="1093" width="0.0214%" height="15" fill="rgb(208,169,48)"/><text x="25.3706%" y="1103.50"></text></g><g><title>&lt;usize as core::ops::bit::BitXor&gt;::bitxor (2 samples, 0.02%)</title><rect x="25.1421%" y="965" width="0.0214%" height="15" fill="rgb(244,218,51)"/><text x="25.3921%" y="975.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.04%)</title><rect x="25.1421%" y="1077" width="0.0429%" height="15" fill="rgb(214,148,10)"/><text x="25.3921%" y="1087.50"></text></g><g><title>&lt;blake3::Hash as core::hash::Hash&gt;::hash (4 samples, 0.04%)</title><rect x="25.1421%" y="1061" width="0.0429%" height="15" fill="rgb(225,174,27)"/><text x="25.3921%" y="1071.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (4 samples, 0.04%)</title><rect x="25.1421%" y="1045" width="0.0429%" height="15" fill="rgb(230,96,26)"/><text x="25.3921%" y="1055.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (4 samples, 0.04%)</title><rect x="25.1421%" y="1029" width="0.0429%" height="15" fill="rgb(232,10,30)"/><text x="25.3921%" y="1039.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (4 samples, 0.04%)</title><rect x="25.1421%" y="1013" width="0.0429%" height="15" fill="rgb(222,8,50)"/><text x="25.3921%" y="1023.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write (4 samples, 0.04%)</title><rect x="25.1421%" y="997" width="0.0429%" height="15" fill="rgb(213,81,27)"/><text x="25.3921%" y="1007.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (4 samples, 0.04%)</title><rect x="25.1421%" y="981" width="0.0429%" height="15" fill="rgb(245,50,10)"/><text x="25.3921%" y="991.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_mul (2 samples, 0.02%)</title><rect x="25.1635%" y="965" width="0.0214%" height="15" fill="rgb(216,100,18)"/><text x="25.4135%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="25.1849%" y="1061" width="0.0107%" height="15" fill="rgb(236,147,54)"/><text x="25.4349%" y="1071.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="25.1849%" y="1045" width="0.0107%" height="15" fill="rgb(205,143,26)"/><text x="25.4349%" y="1055.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.01%)</title><rect x="25.1849%" y="1029" width="0.0107%" height="15" fill="rgb(236,26,9)"/><text x="25.4349%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value::{{closure}} (6 samples, 0.06%)</title><rect x="25.1957%" y="1061" width="0.0643%" height="15" fill="rgb(221,165,53)"/><text x="25.4457%" y="1071.50"></text></g><g><title>&lt;blake3::Hash as core::cmp::PartialEq&gt;::eq (6 samples, 0.06%)</title><rect x="25.1957%" y="1045" width="0.0643%" height="15" fill="rgb(214,110,17)"/><text x="25.4457%" y="1055.50"></text></g><g><title>constant_time_eq::constant_time_eq_32 (6 samples, 0.06%)</title><rect x="25.1957%" y="1029" width="0.0643%" height="15" fill="rgb(237,197,12)"/><text x="25.4457%" y="1039.50"></text></g><g><title>constant_time_eq::constant_time_ne_32 (6 samples, 0.06%)</title><rect x="25.1957%" y="1013" width="0.0643%" height="15" fill="rgb(205,84,17)"/><text x="25.4457%" y="1023.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="25.2600%" y="1061" width="0.0107%" height="15" fill="rgb(237,18,45)"/><text x="25.5100%" y="1071.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.01%)</title><rect x="25.2600%" y="1045" width="0.0107%" height="15" fill="rgb(221,87,14)"/><text x="25.5100%" y="1055.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="25.2600%" y="1029" width="0.0107%" height="15" fill="rgb(238,186,15)"/><text x="25.5100%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="25.2600%" y="1013" width="0.0107%" height="15" fill="rgb(208,115,11)"/><text x="25.5100%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (15 samples, 0.16%)</title><rect x="25.1206%" y="1205" width="0.1608%" height="15" fill="rgb(254,175,0)"/><text x="25.3706%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (15 samples, 0.16%)</title><rect x="25.1206%" y="1189" width="0.1608%" height="15" fill="rgb(227,24,42)"/><text x="25.3706%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (13 samples, 0.14%)</title><rect x="25.1421%" y="1173" width="0.1394%" height="15" fill="rgb(223,211,37)"/><text x="25.3921%" y="1183.50"></text></g><g><title>rho_runtime::storage::transit::Transit::match_one::{{closure}} (13 samples, 0.14%)</title><rect x="25.1421%" y="1157" width="0.1394%" height="15" fill="rgb(235,49,27)"/><text x="25.3921%" y="1167.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (13 samples, 0.14%)</title><rect x="25.1421%" y="1141" width="0.1394%" height="15" fill="rgb(254,97,51)"/><text x="25.3921%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (13 samples, 0.14%)</title><rect x="25.1421%" y="1125" width="0.1394%" height="15" fill="rgb(249,51,40)"/><text x="25.3921%" y="1135.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (13 samples, 0.14%)</title><rect x="25.1421%" y="1109" width="0.1394%" height="15" fill="rgb(210,128,45)"/><text x="25.3921%" y="1119.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (13 samples, 0.14%)</title><rect x="25.1421%" y="1093" width="0.1394%" height="15" fill="rgb(224,137,50)"/><text x="25.3921%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (9 samples, 0.10%)</title><rect x="25.1849%" y="1077" width="0.0965%" height="15" fill="rgb(242,15,9)"/><text x="25.4349%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::iter_hash (1 samples, 0.01%)</title><rect x="25.2707%" y="1061" width="0.0107%" height="15" fill="rgb(233,187,41)"/><text x="25.5207%" y="1071.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="25.2707%" y="1045" width="0.0107%" height="15" fill="rgb(227,2,29)"/><text x="25.5207%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::probe_seq (1 samples, 0.01%)</title><rect x="25.2707%" y="1029" width="0.0107%" height="15" fill="rgb(222,70,3)"/><text x="25.5207%" y="1039.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="25.2814%" y="1205" width="0.0107%" height="15" fill="rgb(213,11,42)"/><text x="25.5314%" y="1215.50"></text></g><g><title>core::mem::swap (1 samples, 0.01%)</title><rect x="25.2814%" y="1189" width="0.0107%" height="15" fill="rgb(225,150,9)"/><text x="25.5314%" y="1199.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.01%)</title><rect x="25.2814%" y="1173" width="0.0107%" height="15" fill="rgb(230,162,45)"/><text x="25.5314%" y="1183.50"></text></g><g><title>core::ptr::swap_nonoverlapping (1 samples, 0.01%)</title><rect x="25.2814%" y="1157" width="0.0107%" height="15" fill="rgb(222,14,52)"/><text x="25.5314%" y="1167.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (1 samples, 0.01%)</title><rect x="25.2814%" y="1141" width="0.0107%" height="15" fill="rgb(254,198,14)"/><text x="25.5314%" y="1151.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="25.2814%" y="1125" width="0.0107%" height="15" fill="rgb(220,217,30)"/><text x="25.5314%" y="1135.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="25.2922%" y="1141" width="0.0107%" height="15" fill="rgb(215,146,41)"/><text x="25.5422%" y="1151.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="25.2922%" y="1125" width="0.0107%" height="15" fill="rgb(217,27,36)"/><text x="25.5422%" y="1135.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="25.2922%" y="1109" width="0.0107%" height="15" fill="rgb(219,218,39)"/><text x="25.5422%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;*const rho_runtime::storage::transit::SharedJoinedConsumer,smallvec::SmallVec&lt;[[usize: 2]: 3]&gt;,core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="25.2922%" y="1205" width="0.0214%" height="15" fill="rgb(219,4,42)"/><text x="25.5422%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;*const rho_runtime::storage::transit::SharedJoinedConsumer,smallvec::SmallVec&lt;[[usize: 2]: 3]&gt;,core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="25.2922%" y="1189" width="0.0214%" height="15" fill="rgb(249,119,36)"/><text x="25.5422%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(*const rho_runtime::storage::transit::SharedJoinedConsumer,smallvec::SmallVec&lt;[[usize: 2]: 3]&gt;)&gt;&gt; (2 samples, 0.02%)</title><rect x="25.2922%" y="1173" width="0.0214%" height="15" fill="rgb(209,23,33)"/><text x="25.5422%" y="1183.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="25.2922%" y="1157" width="0.0214%" height="15" fill="rgb(211,10,0)"/><text x="25.5422%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::free_buckets (1 samples, 0.01%)</title><rect x="25.3029%" y="1141" width="0.0107%" height="15" fill="rgb(208,99,37)"/><text x="25.5529%" y="1151.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="25.3029%" y="1125" width="0.0107%" height="15" fill="rgb(213,132,31)"/><text x="25.5529%" y="1135.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::len (1 samples, 0.01%)</title><rect x="25.3136%" y="1205" width="0.0107%" height="15" fill="rgb(243,129,40)"/><text x="25.5636%" y="1215.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple (1 samples, 0.01%)</title><rect x="25.3136%" y="1189" width="0.0107%" height="15" fill="rgb(210,66,33)"/><text x="25.5636%" y="1199.50"></text></g><g><title>core::mem::swap (10 samples, 0.11%)</title><rect x="25.3243%" y="1109" width="0.1072%" height="15" fill="rgb(209,189,4)"/><text x="25.5743%" y="1119.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (10 samples, 0.11%)</title><rect x="25.3243%" y="1093" width="0.1072%" height="15" fill="rgb(214,107,37)"/><text x="25.5743%" y="1103.50"></text></g><g><title>core::ptr::swap_nonoverlapping (10 samples, 0.11%)</title><rect x="25.3243%" y="1077" width="0.1072%" height="15" fill="rgb(245,88,54)"/><text x="25.5743%" y="1087.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (10 samples, 0.11%)</title><rect x="25.3243%" y="1061" width="0.1072%" height="15" fill="rgb(205,146,20)"/><text x="25.5743%" y="1071.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.11%)</title><rect x="25.3243%" y="1045" width="0.1072%" height="15" fill="rgb(220,161,25)"/><text x="25.5743%" y="1055.50"></text></g><g><title>dynamic_opts_init (1 samples, 0.01%)</title><rect x="25.4530%" y="1045" width="0.0107%" height="15" fill="rgb(215,152,15)"/><text x="25.7030%" y="1055.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.01%)</title><rect x="25.4637%" y="949" width="0.0107%" height="15" fill="rgb(233,192,44)"/><text x="25.7137%" y="959.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (1 samples, 0.01%)</title><rect x="25.4637%" y="933" width="0.0107%" height="15" fill="rgb(240,170,46)"/><text x="25.7137%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::new_uninitialized (6 samples, 0.06%)</title><rect x="25.4315%" y="1093" width="0.0643%" height="15" fill="rgb(207,104,33)"/><text x="25.6815%" y="1103.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.06%)</title><rect x="25.4315%" y="1077" width="0.0643%" height="15" fill="rgb(219,21,39)"/><text x="25.6815%" y="1087.50"></text></g><g><title>_rjem_mallocx (6 samples, 0.06%)</title><rect x="25.4315%" y="1061" width="0.0643%" height="15" fill="rgb(214,133,29)"/><text x="25.6815%" y="1071.50"></text></g><g><title>imalloc (3 samples, 0.03%)</title><rect x="25.4637%" y="1045" width="0.0322%" height="15" fill="rgb(226,93,6)"/><text x="25.7137%" y="1055.50"></text></g><g><title>imalloc_body (3 samples, 0.03%)</title><rect x="25.4637%" y="1029" width="0.0322%" height="15" fill="rgb(252,222,34)"/><text x="25.7137%" y="1039.50"></text></g><g><title>imalloc_no_sample (3 samples, 0.03%)</title><rect x="25.4637%" y="1013" width="0.0322%" height="15" fill="rgb(252,92,48)"/><text x="25.7137%" y="1023.50"></text></g><g><title>iallocztm (3 samples, 0.03%)</title><rect x="25.4637%" y="997" width="0.0322%" height="15" fill="rgb(245,223,24)"/><text x="25.7137%" y="1007.50"></text></g><g><title>arena_malloc (3 samples, 0.03%)</title><rect x="25.4637%" y="981" width="0.0322%" height="15" fill="rgb(205,176,3)"/><text x="25.7137%" y="991.50"></text></g><g><title>tcache_alloc_small (3 samples, 0.03%)</title><rect x="25.4637%" y="965" width="0.0322%" height="15" fill="rgb(235,151,15)"/><text x="25.7137%" y="975.50"></text></g><g><title>cache_bin_alloc_easy (2 samples, 0.02%)</title><rect x="25.4744%" y="949" width="0.0214%" height="15" fill="rgb(237,209,11)"/><text x="25.7244%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::resize (17 samples, 0.18%)</title><rect x="25.3243%" y="1125" width="0.1823%" height="15" fill="rgb(243,227,24)"/><text x="25.5743%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::fallible_with_capacity (7 samples, 0.08%)</title><rect x="25.4315%" y="1109" width="0.0751%" height="15" fill="rgb(239,193,16)"/><text x="25.6815%" y="1119.50"></text></g><g><title>hashbrown::raw::capacity_to_buckets (1 samples, 0.01%)</title><rect x="25.4959%" y="1093" width="0.0107%" height="15" fill="rgb(231,27,9)"/><text x="25.7459%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::reserve (18 samples, 0.19%)</title><rect x="25.3243%" y="1173" width="0.1930%" height="15" fill="rgb(219,169,10)"/><text x="25.5743%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve (18 samples, 0.19%)</title><rect x="25.3243%" y="1157" width="0.1930%" height="15" fill="rgb(244,229,43)"/><text x="25.5743%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (18 samples, 0.19%)</title><rect x="25.3243%" y="1141" width="0.1930%" height="15" fill="rgb(254,38,20)"/><text x="25.5743%" y="1151.50"></text></g><g><title>hashbrown::raw::bucket_mask_to_capacity (1 samples, 0.01%)</title><rect x="25.5066%" y="1125" width="0.0107%" height="15" fill="rgb(250,47,30)"/><text x="25.7566%" y="1135.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (19 samples, 0.20%)</title><rect x="25.3243%" y="1205" width="0.2037%" height="15" fill="rgb(224,124,36)"/><text x="25.5743%" y="1215.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry (19 samples, 0.20%)</title><rect x="25.3243%" y="1189" width="0.2037%" height="15" fill="rgb(246,68,51)"/><text x="25.5743%" y="1199.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="25.5173%" y="1173" width="0.0107%" height="15" fill="rgb(253,43,49)"/><text x="25.7673%" y="1183.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for *const T&gt;::hash (1 samples, 0.01%)</title><rect x="25.5173%" y="1157" width="0.0107%" height="15" fill="rgb(219,54,36)"/><text x="25.7673%" y="1167.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write_usize (1 samples, 0.01%)</title><rect x="25.5173%" y="1141" width="0.0107%" height="15" fill="rgb(227,133,34)"/><text x="25.7673%" y="1151.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (1 samples, 0.01%)</title><rect x="25.5173%" y="1125" width="0.0107%" height="15" fill="rgb(247,227,15)"/><text x="25.7673%" y="1135.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="25.5173%" y="1109" width="0.0107%" height="15" fill="rgb(229,96,14)"/><text x="25.7673%" y="1119.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::len (1 samples, 0.01%)</title><rect x="25.5280%" y="1205" width="0.0107%" height="15" fill="rgb(220,79,17)"/><text x="25.7780%" y="1215.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::len (1 samples, 0.01%)</title><rect x="25.5280%" y="1189" width="0.0107%" height="15" fill="rgb(205,131,53)"/><text x="25.7780%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::len (1 samples, 0.01%)</title><rect x="25.5280%" y="1173" width="0.0107%" height="15" fill="rgb(209,50,29)"/><text x="25.7780%" y="1183.50"></text></g><g><title>rho_runtime::storage::transit::Transit::match_one (49 samples, 0.53%)</title><rect x="25.0241%" y="1221" width="0.5254%" height="15" fill="rgb(245,86,46)"/><text x="25.2741%" y="1231.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (1 samples, 0.01%)</title><rect x="25.5388%" y="1205" width="0.0107%" height="15" fill="rgb(235,66,46)"/><text x="25.7888%" y="1215.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V&gt;::insert (1 samples, 0.01%)</title><rect x="25.5388%" y="1189" width="0.0107%" height="15" fill="rgb(232,148,31)"/><text x="25.7888%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::insert_no_grow (1 samples, 0.01%)</title><rect x="25.5388%" y="1173" width="0.0107%" height="15" fill="rgb(217,149,8)"/><text x="25.7888%" y="1183.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="25.5388%" y="1157" width="0.0107%" height="15" fill="rgb(209,183,11)"/><text x="25.7888%" y="1167.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.01%)</title><rect x="25.5388%" y="1141" width="0.0107%" height="15" fill="rgb(208,55,20)"/><text x="25.7888%" y="1151.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="25.5388%" y="1125" width="0.0107%" height="15" fill="rgb(218,39,14)"/><text x="25.7888%" y="1135.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::push (2 samples, 0.02%)</title><rect x="25.5495%" y="1221" width="0.0214%" height="15" fill="rgb(216,169,33)"/><text x="25.7995%" y="1231.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="25.5495%" y="1205" width="0.0214%" height="15" fill="rgb(233,80,24)"/><text x="25.7995%" y="1215.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="25.5495%" y="1189" width="0.0214%" height="15" fill="rgb(213,179,31)"/><text x="25.7995%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="25.5709%" y="1205" width="0.0107%" height="15" fill="rgb(209,19,5)"/><text x="25.8209%" y="1215.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="25.5709%" y="1189" width="0.0107%" height="15" fill="rgb(219,18,35)"/><text x="25.8209%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="25.5709%" y="1173" width="0.0107%" height="15" fill="rgb(209,169,16)"/><text x="25.8209%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="25.5709%" y="1157" width="0.0107%" height="15" fill="rgb(245,90,51)"/><text x="25.8209%" y="1167.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.11%)</title><rect x="25.5816%" y="1173" width="0.1072%" height="15" fill="rgb(220,99,45)"/><text x="25.8316%" y="1183.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (16 samples, 0.17%)</title><rect x="25.5816%" y="1205" width="0.1715%" height="15" fill="rgb(249,89,25)"/><text x="25.8316%" y="1215.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send::{{closure}} (16 samples, 0.17%)</title><rect x="25.5816%" y="1189" width="0.1715%" height="15" fill="rgb(239,193,0)"/><text x="25.8316%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt; (6 samples, 0.06%)</title><rect x="25.6889%" y="1173" width="0.0643%" height="15" fill="rgb(231,126,1)"/><text x="25.9389%" y="1183.50"></text></g><g><title>tokio::sync::oneshot::State::set_complete (37 samples, 0.40%)</title><rect x="25.7532%" y="1189" width="0.3967%" height="15" fill="rgb(243,166,3)"/><text x="26.0032%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (37 samples, 0.40%)</title><rect x="25.7532%" y="1173" width="0.3967%" height="15" fill="rgb(223,22,34)"/><text x="26.0032%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_or (37 samples, 0.40%)</title><rect x="25.7532%" y="1157" width="0.3967%" height="15" fill="rgb(251,52,51)"/><text x="26.0032%" y="1167.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::schedule (3 samples, 0.03%)</title><rect x="26.1499%" y="1077" width="0.0322%" height="15" fill="rgb(221,165,28)"/><text x="26.3999%" y="1087.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (3 samples, 0.03%)</title><rect x="26.1499%" y="1061" width="0.0322%" height="15" fill="rgb(218,121,47)"/><text x="26.3999%" y="1071.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::schedule::{{closure}} (3 samples, 0.03%)</title><rect x="26.1499%" y="1045" width="0.0322%" height="15" fill="rgb(209,120,9)"/><text x="26.3999%" y="1055.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::schedule (3 samples, 0.03%)</title><rect x="26.1499%" y="1029" width="0.0322%" height="15" fill="rgb(236,68,12)"/><text x="26.3999%" y="1039.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (3 samples, 0.03%)</title><rect x="26.1499%" y="1013" width="0.0322%" height="15" fill="rgb(225,194,26)"/><text x="26.3999%" y="1023.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (3 samples, 0.03%)</title><rect x="26.1499%" y="997" width="0.0322%" height="15" fill="rgb(231,84,39)"/><text x="26.3999%" y="1007.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (2 samples, 0.02%)</title><rect x="26.1606%" y="981" width="0.0214%" height="15" fill="rgb(210,11,45)"/><text x="26.4106%" y="991.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule_local (1 samples, 0.01%)</title><rect x="26.1713%" y="965" width="0.0107%" height="15" fill="rgb(224,54,52)"/><text x="26.4213%" y="975.50"></text></g><g><title>rho_runtime::storage::transit::Transit::join (204 samples, 2.19%)</title><rect x="24.0485%" y="1237" width="2.1872%" height="15" fill="rgb(238,102,14)"/><text x="24.2985%" y="1247.50">r..</text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (62 samples, 0.66%)</title><rect x="25.5709%" y="1221" width="0.6647%" height="15" fill="rgb(243,160,52)"/><text x="25.8209%" y="1231.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::complete (45 samples, 0.48%)</title><rect x="25.7532%" y="1205" width="0.4825%" height="15" fill="rgb(216,114,19)"/><text x="26.0032%" y="1215.50"></text></g><g><title>tokio::sync::oneshot::Task::with_task (8 samples, 0.09%)</title><rect x="26.1499%" y="1189" width="0.0858%" height="15" fill="rgb(244,166,37)"/><text x="26.3999%" y="1199.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (8 samples, 0.09%)</title><rect x="26.1499%" y="1173" width="0.0858%" height="15" fill="rgb(246,29,44)"/><text x="26.3999%" y="1183.50"></text></g><g><title>tokio::sync::oneshot::Task::with_task::{{closure}} (8 samples, 0.09%)</title><rect x="26.1499%" y="1157" width="0.0858%" height="15" fill="rgb(215,56,53)"/><text x="26.3999%" y="1167.50"></text></g><g><title>core::ops::function::FnOnce::call_once (8 samples, 0.09%)</title><rect x="26.1499%" y="1141" width="0.0858%" height="15" fill="rgb(217,60,2)"/><text x="26.3999%" y="1151.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (8 samples, 0.09%)</title><rect x="26.1499%" y="1125" width="0.0858%" height="15" fill="rgb(207,26,24)"/><text x="26.3999%" y="1135.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (8 samples, 0.09%)</title><rect x="26.1499%" y="1109" width="0.0858%" height="15" fill="rgb(252,210,15)"/><text x="26.3999%" y="1119.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_ref (8 samples, 0.09%)</title><rect x="26.1499%" y="1093" width="0.0858%" height="15" fill="rgb(253,209,26)"/><text x="26.3999%" y="1103.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified (5 samples, 0.05%)</title><rect x="26.1821%" y="1077" width="0.0536%" height="15" fill="rgb(238,170,14)"/><text x="26.4321%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (5 samples, 0.05%)</title><rect x="26.1821%" y="1061" width="0.0536%" height="15" fill="rgb(216,178,15)"/><text x="26.4321%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_or (5 samples, 0.05%)</title><rect x="26.1821%" y="1045" width="0.0536%" height="15" fill="rgb(250,197,2)"/><text x="26.4321%" y="1055.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::push (1 samples, 0.01%)</title><rect x="26.2357%" y="1237" width="0.0107%" height="15" fill="rgb(212,70,42)"/><text x="26.4857%" y="1247.50"></text></g><g><title>[libc-2.31.so] (13 samples, 0.14%)</title><rect x="26.2571%" y="1221" width="0.1394%" height="15" fill="rgb(227,213,9)"/><text x="26.5071%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;rho_runtime::storage::transit::Transit&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="26.3965%" y="1221" width="0.0107%" height="15" fill="rgb(245,99,25)"/><text x="26.6465%" y="1231.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="26.3965%" y="1205" width="0.0107%" height="15" fill="rgb(250,82,29)"/><text x="26.6465%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="26.3965%" y="1189" width="0.0107%" height="15" fill="rgb(241,226,54)"/><text x="26.6465%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="26.3965%" y="1173" width="0.0107%" height="15" fill="rgb(221,99,41)"/><text x="26.6465%" y="1183.50"></text></g><g><title>[libc-2.31.so] (21 samples, 0.23%)</title><rect x="26.4072%" y="1189" width="0.2252%" height="15" fill="rgb(213,90,21)"/><text x="26.6572%" y="1199.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (30 samples, 0.32%)</title><rect x="26.4072%" y="1221" width="0.3216%" height="15" fill="rgb(205,208,24)"/><text x="26.6572%" y="1231.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send::{{closure}} (30 samples, 0.32%)</title><rect x="26.4072%" y="1205" width="0.3216%" height="15" fill="rgb(246,31,12)"/><text x="26.6572%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;rho_runtime::storage::transit::Transit&gt;&gt; (9 samples, 0.10%)</title><rect x="26.6324%" y="1189" width="0.0965%" height="15" fill="rgb(213,154,6)"/><text x="26.8824%" y="1199.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::handle_join_double::{{closure}} (559 samples, 5.99%)</title><rect x="21.6683%" y="1253" width="5.9934%" height="15" fill="rgb(222,163,29)"/><text x="21.9183%" y="1263.50">rho_runt..</text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (132 samples, 1.42%)</title><rect x="26.2464%" y="1237" width="1.4152%" height="15" fill="rgb(227,201,8)"/><text x="26.4964%" y="1247.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::complete (87 samples, 0.93%)</title><rect x="26.7289%" y="1221" width="0.9328%" height="15" fill="rgb(233,9,32)"/><text x="26.9789%" y="1231.50"></text></g><g><title>tokio::sync::oneshot::State::set_complete (87 samples, 0.93%)</title><rect x="26.7289%" y="1205" width="0.9328%" height="15" fill="rgb(217,54,24)"/><text x="26.9789%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (87 samples, 0.93%)</title><rect x="26.7289%" y="1189" width="0.9328%" height="15" fill="rgb(235,192,0)"/><text x="26.9789%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_or (87 samples, 0.93%)</title><rect x="26.7289%" y="1173" width="0.9328%" height="15" fill="rgb(235,45,9)"/><text x="26.9789%" y="1183.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.06%)</title><rect x="27.7796%" y="1205" width="0.0643%" height="15" fill="rgb(246,42,40)"/><text x="28.0296%" y="1215.50"></text></g><g><title>tokio::coop::poll_proceed (2 samples, 0.02%)</title><rect x="27.8439%" y="1205" width="0.0214%" height="15" fill="rgb(248,111,24)"/><text x="28.0939%" y="1215.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="27.8439%" y="1189" width="0.0214%" height="15" fill="rgb(249,65,22)"/><text x="28.0939%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="27.8439%" y="1173" width="0.0214%" height="15" fill="rgb(238,111,51)"/><text x="28.0939%" y="1183.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (2 samples, 0.02%)</title><rect x="27.8439%" y="1157" width="0.0214%" height="15" fill="rgb(250,118,22)"/><text x="28.0939%" y="1167.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.02%)</title><rect x="27.8439%" y="1141" width="0.0214%" height="15" fill="rgb(234,84,26)"/><text x="28.0939%" y="1151.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.02%)</title><rect x="27.8439%" y="1125" width="0.0214%" height="15" fill="rgb(243,172,12)"/><text x="28.0939%" y="1135.50"></text></g><g><title>core::mem::replace (2 samples, 0.02%)</title><rect x="27.8439%" y="1109" width="0.0214%" height="15" fill="rgb(236,150,49)"/><text x="28.0939%" y="1119.50"></text></g><g><title>core::mem::swap (2 samples, 0.02%)</title><rect x="27.8439%" y="1093" width="0.0214%" height="15" fill="rgb(225,197,26)"/><text x="28.0939%" y="1103.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.02%)</title><rect x="27.8439%" y="1077" width="0.0214%" height="15" fill="rgb(214,17,42)"/><text x="28.0939%" y="1087.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="27.8439%" y="1061" width="0.0214%" height="15" fill="rgb(224,165,40)"/><text x="28.0939%" y="1071.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::try_read_output (3 samples, 0.03%)</title><rect x="27.8653%" y="1205" width="0.0322%" height="15" fill="rgb(246,100,4)"/><text x="28.1153%" y="1215.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.04%)</title><rect x="27.8975%" y="1173" width="0.0429%" height="15" fill="rgb(222,103,0)"/><text x="28.1475%" y="1183.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.17%)</title><rect x="27.7796%" y="1221" width="0.1715%" height="15" fill="rgb(227,189,26)"/><text x="28.0296%" y="1231.50"></text></g><g><title>tokio::runtime::task::raw::try_read_output (5 samples, 0.05%)</title><rect x="27.8975%" y="1205" width="0.0536%" height="15" fill="rgb(214,202,17)"/><text x="28.1475%" y="1215.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::try_read_output (5 samples, 0.05%)</title><rect x="27.8975%" y="1189" width="0.0536%" height="15" fill="rgb(229,111,3)"/><text x="28.1475%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::poll::Poll&lt;core::result::Result&lt;rho_runtime::storage::transit::Transit,tokio::runtime::task::error::JoinError&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="27.9404%" y="1173" width="0.0107%" height="15" fill="rgb(229,172,15)"/><text x="28.1904%" y="1183.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="27.9511%" y="1221" width="0.0107%" height="15" fill="rgb(230,224,35)"/><text x="28.2011%" y="1231.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="27.9511%" y="1205" width="0.0107%" height="15" fill="rgb(251,141,6)"/><text x="28.2011%" y="1215.50"></text></g><g><title>__rust_probestack (1 samples, 0.01%)</title><rect x="27.9511%" y="1189" width="0.0107%" height="15" fill="rgb(225,208,6)"/><text x="28.2011%" y="1199.50"></text></g><g><title>[libc-2.31.so] (15 samples, 0.16%)</title><rect x="27.9618%" y="1221" width="0.1608%" height="15" fill="rgb(246,181,16)"/><text x="28.2118%" y="1231.50"></text></g><g><title>&lt;rho_runtime::storage::signal::CompletionSignal as core::future::future::Future&gt;::poll (36 samples, 0.39%)</title><rect x="27.7796%" y="1237" width="0.3860%" height="15" fill="rgb(227,129,36)"/><text x="28.0296%" y="1247.50"></text></g><g><title>core::task::poll::Poll&lt;core::result::Result&lt;T,E&gt;&gt;::map_err (4 samples, 0.04%)</title><rect x="28.1227%" y="1221" width="0.0429%" height="15" fill="rgb(248,117,24)"/><text x="28.3727%" y="1231.50"></text></g><g><title>[libc-2.31.so] (47 samples, 0.50%)</title><rect x="28.1655%" y="1237" width="0.5039%" height="15" fill="rgb(214,185,35)"/><text x="28.4155%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rho_runtime::storage::coordinator::ThreadSafeShare&gt;&gt; (14 samples, 0.15%)</title><rect x="28.6695%" y="1237" width="0.1501%" height="15" fill="rgb(236,150,34)"/><text x="28.9195%" y="1247.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.15%)</title><rect x="28.6695%" y="1221" width="0.1501%" height="15" fill="rgb(243,228,27)"/><text x="28.9195%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (14 samples, 0.15%)</title><rect x="28.6695%" y="1205" width="0.1501%" height="15" fill="rgb(245,77,44)"/><text x="28.9195%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_sub (14 samples, 0.15%)</title><rect x="28.6695%" y="1189" width="0.1501%" height="15" fill="rgb(235,214,42)"/><text x="28.9195%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;(),rho_runtime::storage::coordinator::PendingTask&gt;&gt; (1 samples, 0.01%)</title><rect x="28.8196%" y="1237" width="0.0107%" height="15" fill="rgb(221,74,3)"/><text x="29.0696%" y="1247.50"></text></g><g><title>__rg_dealloc (2 samples, 0.02%)</title><rect x="28.8410%" y="1189" width="0.0214%" height="15" fill="rgb(206,121,29)"/><text x="29.0910%" y="1199.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.01%)</title><rect x="28.8517%" y="1173" width="0.0107%" height="15" fill="rgb(249,131,53)"/><text x="29.1017%" y="1183.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (7 samples, 0.08%)</title><rect x="28.8732%" y="1093" width="0.0751%" height="15" fill="rgb(236,170,29)"/><text x="29.1232%" y="1103.50"></text></g><g><title>arena_dalloc_bin_locked_impl (5 samples, 0.05%)</title><rect x="28.8946%" y="1077" width="0.0536%" height="15" fill="rgb(247,96,15)"/><text x="29.1446%" y="1087.50"></text></g><g><title>arena_slab_reg_dalloc (1 samples, 0.01%)</title><rect x="28.9375%" y="1061" width="0.0107%" height="15" fill="rgb(211,210,7)"/><text x="29.1875%" y="1071.50"></text></g><g><title>bitmap_unset (1 samples, 0.01%)</title><rect x="28.9375%" y="1045" width="0.0107%" height="15" fill="rgb(240,88,50)"/><text x="29.1875%" y="1055.50"></text></g><g><title>extent_arena_get (1 samples, 0.01%)</title><rect x="28.9482%" y="1093" width="0.0107%" height="15" fill="rgb(209,229,26)"/><text x="29.1982%" y="1103.50"></text></g><g><title>atomic_load_p (1 samples, 0.01%)</title><rect x="28.9482%" y="1077" width="0.0107%" height="15" fill="rgb(210,68,23)"/><text x="29.1982%" y="1087.50"></text></g><g><title>iealloc (1 samples, 0.01%)</title><rect x="28.9589%" y="1093" width="0.0107%" height="15" fill="rgb(229,180,13)"/><text x="29.2089%" y="1103.50"></text></g><g><title>rtree_extent_read (1 samples, 0.01%)</title><rect x="28.9589%" y="1077" width="0.0107%" height="15" fill="rgb(236,53,44)"/><text x="29.2089%" y="1087.50"></text></g><g><title>rtree_read (1 samples, 0.01%)</title><rect x="28.9589%" y="1061" width="0.0107%" height="15" fill="rgb(244,214,29)"/><text x="29.2089%" y="1071.50"></text></g><g><title>rtree_leaf_elm_lookup (1 samples, 0.01%)</title><rect x="28.9589%" y="1045" width="0.0107%" height="15" fill="rgb(220,75,29)"/><text x="29.2089%" y="1055.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.01%)</title><rect x="28.9697%" y="1093" width="0.0107%" height="15" fill="rgb(214,183,37)"/><text x="29.2197%" y="1103.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.01%)</title><rect x="28.9697%" y="1077" width="0.0107%" height="15" fill="rgb(239,117,29)"/><text x="29.2197%" y="1087.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.01%)</title><rect x="28.9697%" y="1061" width="0.0107%" height="15" fill="rgb(237,171,35)"/><text x="29.2197%" y="1071.50"></text></g><g><title>_rjem_sdallocx (13 samples, 0.14%)</title><rect x="28.8624%" y="1189" width="0.1394%" height="15" fill="rgb(229,178,53)"/><text x="29.1124%" y="1199.50"></text></g><g><title>isfree (13 samples, 0.14%)</title><rect x="28.8624%" y="1173" width="0.1394%" height="15" fill="rgb(210,102,19)"/><text x="29.1124%" y="1183.50"></text></g><g><title>isdalloct (13 samples, 0.14%)</title><rect x="28.8624%" y="1157" width="0.1394%" height="15" fill="rgb(235,127,22)"/><text x="29.1124%" y="1167.50"></text></g><g><title>arena_sdalloc (13 samples, 0.14%)</title><rect x="28.8624%" y="1141" width="0.1394%" height="15" fill="rgb(244,31,31)"/><text x="29.1124%" y="1151.50"></text></g><g><title>tcache_dalloc_small (13 samples, 0.14%)</title><rect x="28.8624%" y="1125" width="0.1394%" height="15" fill="rgb(231,43,21)"/><text x="29.1124%" y="1135.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (13 samples, 0.14%)</title><rect x="28.8624%" y="1109" width="0.1394%" height="15" fill="rgb(217,131,35)"/><text x="29.1124%" y="1119.50"></text></g><g><title>malloc_mutex_unlock (2 samples, 0.02%)</title><rect x="28.9804%" y="1093" width="0.0214%" height="15" fill="rgb(221,149,4)"/><text x="29.2304%" y="1103.50"></text></g><g><title>__GI___pthread_mutex_unlock (2 samples, 0.02%)</title><rect x="28.9804%" y="1077" width="0.0214%" height="15" fill="rgb(232,170,28)"/><text x="29.2304%" y="1087.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (2 samples, 0.02%)</title><rect x="29.0018%" y="1189" width="0.0214%" height="15" fill="rgb(238,56,10)"/><text x="29.2518%" y="1199.50"></text></g><g><title>core::mem::drop (2 samples, 0.02%)</title><rect x="29.0018%" y="1173" width="0.0214%" height="15" fill="rgb(235,196,14)"/><text x="29.2518%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_join_double::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="29.0018%" y="1157" width="0.0214%" height="15" fill="rgb(216,45,48)"/><text x="29.2518%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_join_double::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="29.0018%" y="1141" width="0.0214%" height="15" fill="rgb(238,213,17)"/><text x="29.2518%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Core&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_join_double::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="29.0018%" y="1125" width="0.0214%" height="15" fill="rgb(212,13,2)"/><text x="29.2518%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Scheduler&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="29.0018%" y="1109" width="0.0214%" height="15" fill="rgb(240,114,20)"/><text x="29.2518%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="29.0018%" y="1093" width="0.0214%" height="15" fill="rgb(228,41,40)"/><text x="29.2518%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="29.0018%" y="1077" width="0.0214%" height="15" fill="rgb(244,132,35)"/><text x="29.2518%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="29.0018%" y="1061" width="0.0214%" height="15" fill="rgb(253,189,4)"/><text x="29.2518%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt; (2 samples, 0.02%)</title><rect x="29.0018%" y="1045" width="0.0214%" height="15" fill="rgb(224,37,19)"/><text x="29.2518%" y="1055.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="29.0018%" y="1029" width="0.0214%" height="15" fill="rgb(235,223,18)"/><text x="29.2518%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.02%)</title><rect x="29.0018%" y="1013" width="0.0214%" height="15" fill="rgb(235,163,25)"/><text x="29.2518%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.02%)</title><rect x="29.0018%" y="997" width="0.0214%" height="15" fill="rgb(217,145,28)"/><text x="29.2518%" y="1007.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::drop_future_or_output (3 samples, 0.03%)</title><rect x="29.0233%" y="1157" width="0.0322%" height="15" fill="rgb(223,223,32)"/><text x="29.2733%" y="1167.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::set_stage (3 samples, 0.03%)</title><rect x="29.0233%" y="1141" width="0.0322%" height="15" fill="rgb(227,189,39)"/><text x="29.2733%" y="1151.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3 samples, 0.03%)</title><rect x="29.0233%" y="1125" width="0.0322%" height="15" fill="rgb(248,10,22)"/><text x="29.2733%" y="1135.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::set_stage::{{closure}} (3 samples, 0.03%)</title><rect x="29.0233%" y="1109" width="0.0322%" height="15" fill="rgb(248,46,39)"/><text x="29.2733%" y="1119.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="29.0233%" y="1093" width="0.0322%" height="15" fill="rgb(248,113,48)"/><text x="29.2733%" y="1103.50"></text></g><g><title>tokio::runtime::task::raw::drop_join_handle_slow (4 samples, 0.04%)</title><rect x="29.0233%" y="1189" width="0.0429%" height="15" fill="rgb(245,16,25)"/><text x="29.2733%" y="1199.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (4 samples, 0.04%)</title><rect x="29.0233%" y="1173" width="0.0429%" height="15" fill="rgb(249,152,16)"/><text x="29.2733%" y="1183.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (1 samples, 0.01%)</title><rect x="29.0554%" y="1157" width="0.0107%" height="15" fill="rgb(250,16,1)"/><text x="29.3054%" y="1167.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (1 samples, 0.01%)</title><rect x="29.0554%" y="1141" width="0.0107%" height="15" fill="rgb(249,138,3)"/><text x="29.3054%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="29.0554%" y="1125" width="0.0107%" height="15" fill="rgb(227,71,41)"/><text x="29.3054%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="29.0554%" y="1109" width="0.0107%" height="15" fill="rgb(209,184,23)"/><text x="29.3054%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;rho_runtime::storage::signal::CompletionSignal&gt; (28 samples, 0.30%)</title><rect x="28.8303%" y="1237" width="0.3002%" height="15" fill="rgb(223,215,31)"/><text x="29.0803%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::join::JoinHandle&lt;rho_runtime::storage::transit::Transit&gt;&gt; (27 samples, 0.29%)</title><rect x="28.8410%" y="1221" width="0.2895%" height="15" fill="rgb(210,146,28)"/><text x="29.0910%" y="1231.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.29%)</title><rect x="28.8410%" y="1205" width="0.2895%" height="15" fill="rgb(209,183,41)"/><text x="29.0910%" y="1215.50"></text></g><g><title>tokio::runtime::task::state::State::drop_join_handle_fast (6 samples, 0.06%)</title><rect x="29.0662%" y="1189" width="0.0643%" height="15" fill="rgb(209,224,45)"/><text x="29.3162%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (5 samples, 0.05%)</title><rect x="29.0769%" y="1173" width="0.0536%" height="15" fill="rgb(224,209,51)"/><text x="29.3269%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (5 samples, 0.05%)</title><rect x="29.0769%" y="1157" width="0.0536%" height="15" fill="rgb(223,17,39)"/><text x="29.3269%" y="1167.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (4 samples, 0.04%)</title><rect x="29.1305%" y="1221" width="0.0429%" height="15" fill="rgb(234,204,37)"/><text x="29.3805%" y="1231.50"></text></g><g><title>core::ptr::write (4 samples, 0.04%)</title><rect x="29.1305%" y="1205" width="0.0429%" height="15" fill="rgb(236,120,5)"/><text x="29.3805%" y="1215.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.04%)</title><rect x="29.1305%" y="1189" width="0.0429%" height="15" fill="rgb(248,97,27)"/><text x="29.3805%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (7 samples, 0.08%)</title><rect x="29.1734%" y="1221" width="0.0751%" height="15" fill="rgb(240,66,17)"/><text x="29.4234%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (7 samples, 0.08%)</title><rect x="29.1734%" y="1205" width="0.0751%" height="15" fill="rgb(210,79,3)"/><text x="29.4234%" y="1215.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::push (24 samples, 0.26%)</title><rect x="29.1305%" y="1237" width="0.2573%" height="15" fill="rgb(214,176,27)"/><text x="29.3805%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (13 samples, 0.14%)</title><rect x="29.2484%" y="1221" width="0.1394%" height="15" fill="rgb(235,185,3)"/><text x="29.4984%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.14%)</title><rect x="29.2484%" y="1205" width="0.1394%" height="15" fill="rgb(227,24,12)"/><text x="29.4984%" y="1215.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="29.3878%" y="1221" width="0.0322%" height="15" fill="rgb(252,169,48)"/><text x="29.6378%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3 samples, 0.03%)</title><rect x="29.3878%" y="1205" width="0.0322%" height="15" fill="rgb(212,65,1)"/><text x="29.6378%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.03%)</title><rect x="29.3878%" y="1189" width="0.0322%" height="15" fill="rgb(242,39,24)"/><text x="29.6378%" y="1199.50"></text></g><g><title>__rg_dealloc (1 samples, 0.01%)</title><rect x="29.4200%" y="1205" width="0.0107%" height="15" fill="rgb(249,32,23)"/><text x="29.6700%" y="1215.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.01%)</title><rect x="29.4200%" y="1189" width="0.0107%" height="15" fill="rgb(251,195,23)"/><text x="29.6700%" y="1199.50"></text></g><g><title>jemallocator::layout_to_flags (1 samples, 0.01%)</title><rect x="29.4200%" y="1173" width="0.0107%" height="15" fill="rgb(236,174,8)"/><text x="29.6700%" y="1183.50"></text></g><g><title>sz_size2index (1 samples, 0.01%)</title><rect x="29.4521%" y="1141" width="0.0107%" height="15" fill="rgb(220,197,8)"/><text x="29.7021%" y="1151.50"></text></g><g><title>sz_size2index_lookup (1 samples, 0.01%)</title><rect x="29.4521%" y="1125" width="0.0107%" height="15" fill="rgb(240,108,37)"/><text x="29.7021%" y="1135.50"></text></g><g><title>_rjem_sdallocx (4 samples, 0.04%)</title><rect x="29.4307%" y="1205" width="0.0429%" height="15" fill="rgb(232,176,24)"/><text x="29.6807%" y="1215.50"></text></g><g><title>isfree (2 samples, 0.02%)</title><rect x="29.4521%" y="1189" width="0.0214%" height="15" fill="rgb(243,35,29)"/><text x="29.7021%" y="1199.50"></text></g><g><title>isdalloct (2 samples, 0.02%)</title><rect x="29.4521%" y="1173" width="0.0214%" height="15" fill="rgb(210,37,18)"/><text x="29.7021%" y="1183.50"></text></g><g><title>arena_sdalloc (2 samples, 0.02%)</title><rect x="29.4521%" y="1157" width="0.0214%" height="15" fill="rgb(224,184,40)"/><text x="29.7021%" y="1167.50"></text></g><g><title>tcache_dalloc_small (1 samples, 0.01%)</title><rect x="29.4628%" y="1141" width="0.0107%" height="15" fill="rgb(236,39,29)"/><text x="29.7128%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::GUnforgeable&gt;&gt; (5 samples, 0.05%)</title><rect x="29.4736%" y="1189" width="0.0536%" height="15" fill="rgb(232,48,39)"/><text x="29.7236%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="29.4736%" y="1173" width="0.0536%" height="15" fill="rgb(236,34,42)"/><text x="29.7236%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::GUnforgeable]&gt; (5 samples, 0.05%)</title><rect x="29.4736%" y="1157" width="0.0536%" height="15" fill="rgb(243,106,37)"/><text x="29.7236%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::GUnforgeable&gt; (5 samples, 0.05%)</title><rect x="29.4736%" y="1141" width="0.0536%" height="15" fill="rgb(218,96,6)"/><text x="29.7236%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::g_unforgeable::UnfInstance&gt;&gt; (5 samples, 0.05%)</title><rect x="29.4736%" y="1125" width="0.0536%" height="15" fill="rgb(235,130,12)"/><text x="29.7236%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::g_unforgeable::UnfInstance&gt; (5 samples, 0.05%)</title><rect x="29.4736%" y="1109" width="0.0536%" height="15" fill="rgb(231,95,0)"/><text x="29.7236%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::GPrivate&gt; (5 samples, 0.05%)</title><rect x="29.4736%" y="1093" width="0.0536%" height="15" fill="rgb(228,12,23)"/><text x="29.7236%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (5 samples, 0.05%)</title><rect x="29.4736%" y="1077" width="0.0536%" height="15" fill="rgb(216,12,1)"/><text x="29.7236%" y="1087.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="29.4736%" y="1061" width="0.0536%" height="15" fill="rgb(219,59,3)"/><text x="29.7236%" y="1071.50"></text></g><g><title>bytes::bytes::shared_drop (5 samples, 0.05%)</title><rect x="29.4736%" y="1045" width="0.0536%" height="15" fill="rgb(215,208,46)"/><text x="29.7236%" y="1055.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (5 samples, 0.05%)</title><rect x="29.4736%" y="1029" width="0.0536%" height="15" fill="rgb(254,224,29)"/><text x="29.7236%" y="1039.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (5 samples, 0.05%)</title><rect x="29.4736%" y="1013" width="0.0536%" height="15" fill="rgb(232,14,29)"/><text x="29.7236%" y="1023.50"></text></g><g><title>bytes::bytes::release_shared (5 samples, 0.05%)</title><rect x="29.4736%" y="997" width="0.0536%" height="15" fill="rgb(208,45,52)"/><text x="29.7236%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4 samples, 0.04%)</title><rect x="29.4843%" y="981" width="0.0429%" height="15" fill="rgb(234,191,28)"/><text x="29.7343%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_sub (4 samples, 0.04%)</title><rect x="29.4843%" y="965" width="0.0429%" height="15" fill="rgb(244,67,43)"/><text x="29.7343%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Match&gt;&gt; (1 samples, 0.01%)</title><rect x="29.5272%" y="1189" width="0.0107%" height="15" fill="rgb(236,189,24)"/><text x="29.7772%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Match&gt;&gt; (1 samples, 0.01%)</title><rect x="29.5272%" y="1173" width="0.0107%" height="15" fill="rgb(239,214,33)"/><text x="29.7772%" y="1183.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="29.5272%" y="1157" width="0.0107%" height="15" fill="rgb(226,176,41)"/><text x="29.7772%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="29.5272%" y="1141" width="0.0107%" height="15" fill="rgb(248,47,8)"/><text x="29.7772%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;(blake3::Hash,model::rho_types::Par)&gt; (12 samples, 0.13%)</title><rect x="29.4200%" y="1221" width="0.1287%" height="15" fill="rgb(218,81,44)"/><text x="29.6700%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (7 samples, 0.08%)</title><rect x="29.4736%" y="1205" width="0.0751%" height="15" fill="rgb(213,98,6)"/><text x="29.7236%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Receive&gt;&gt; (1 samples, 0.01%)</title><rect x="29.5379%" y="1189" width="0.0107%" height="15" fill="rgb(222,85,22)"/><text x="29.7879%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="29.5379%" y="1173" width="0.0107%" height="15" fill="rgb(239,46,39)"/><text x="29.7879%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Receive]&gt; (1 samples, 0.01%)</title><rect x="29.5379%" y="1157" width="0.0107%" height="15" fill="rgb(237,12,29)"/><text x="29.7879%" y="1167.50"></text></g><g><title>rho_runtime::storage::transit::Transit::find_first_dataum_position (1 samples, 0.01%)</title><rect x="29.5486%" y="1221" width="0.0107%" height="15" fill="rgb(214,77,8)"/><text x="29.7986%" y="1231.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.01%)</title><rect x="29.5486%" y="1205" width="0.0107%" height="15" fill="rgb(217,168,37)"/><text x="29.7986%" y="1215.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.01%)</title><rect x="29.5486%" y="1189" width="0.0107%" height="15" fill="rgb(221,217,23)"/><text x="29.7986%" y="1199.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.01%)</title><rect x="29.5486%" y="1173" width="0.0107%" height="15" fill="rgb(243,229,36)"/><text x="29.7986%" y="1183.50"></text></g><g><title>rho_runtime::storage::transit::Transit::produce (18 samples, 0.19%)</title><rect x="29.3878%" y="1237" width="0.1930%" height="15" fill="rgb(251,163,40)"/><text x="29.6378%" y="1247.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::push (2 samples, 0.02%)</title><rect x="29.5593%" y="1221" width="0.0214%" height="15" fill="rgb(237,222,12)"/><text x="29.8093%" y="1231.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="29.5593%" y="1205" width="0.0214%" height="15" fill="rgb(248,132,6)"/><text x="29.8093%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (11 samples, 0.12%)</title><rect x="29.5808%" y="1221" width="0.1179%" height="15" fill="rgb(227,167,50)"/><text x="29.8308%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (11 samples, 0.12%)</title><rect x="29.5808%" y="1205" width="0.1179%" height="15" fill="rgb(242,84,37)"/><text x="29.8308%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="29.6987%" y="1221" width="0.0107%" height="15" fill="rgb(212,4,50)"/><text x="29.9487%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="29.6987%" y="1205" width="0.0107%" height="15" fill="rgb(230,228,32)"/><text x="29.9487%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::park::thread::Inner&gt;&gt; (1 samples, 0.01%)</title><rect x="29.7094%" y="1189" width="0.0107%" height="15" fill="rgb(248,217,23)"/><text x="29.9594%" y="1199.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="29.7094%" y="1173" width="0.0107%" height="15" fill="rgb(238,197,32)"/><text x="29.9594%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="29.7094%" y="1157" width="0.0107%" height="15" fill="rgb(236,106,1)"/><text x="29.9594%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="29.7094%" y="1141" width="0.0107%" height="15" fill="rgb(219,228,13)"/><text x="29.9594%" y="1151.50"></text></g><g><title>core::mem::drop (3 samples, 0.03%)</title><rect x="29.7202%" y="1173" width="0.0322%" height="15" fill="rgb(238,30,35)"/><text x="29.9702%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,()&gt;&gt; (3 samples, 0.03%)</title><rect x="29.7202%" y="1157" width="0.0322%" height="15" fill="rgb(236,70,23)"/><text x="29.9702%" y="1167.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="29.7202%" y="1141" width="0.0322%" height="15" fill="rgb(249,104,48)"/><text x="29.9702%" y="1151.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (3 samples, 0.03%)</title><rect x="29.7202%" y="1125" width="0.0322%" height="15" fill="rgb(254,117,50)"/><text x="29.9702%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (3 samples, 0.03%)</title><rect x="29.7202%" y="1109" width="0.0322%" height="15" fill="rgb(223,152,4)"/><text x="29.9702%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (3 samples, 0.03%)</title><rect x="29.7202%" y="1093" width="0.0322%" height="15" fill="rgb(245,6,2)"/><text x="29.9702%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (2 samples, 0.02%)</title><rect x="29.7523%" y="1173" width="0.0214%" height="15" fill="rgb(249,150,24)"/><text x="30.0023%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_swap (2 samples, 0.02%)</title><rect x="29.7523%" y="1157" width="0.0214%" height="15" fill="rgb(228,185,42)"/><text x="30.0023%" y="1167.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (172 samples, 1.84%)</title><rect x="29.7738%" y="1109" width="1.8441%" height="15" fill="rgb(226,39,33)"/><text x="30.0238%" y="1119.50">&lt;..</text></g><g><title>syscall (172 samples, 1.84%)</title><rect x="29.7738%" y="1093" width="1.8441%" height="15" fill="rgb(221,166,19)"/><text x="30.0238%" y="1103.50">s..</text></g><g><title>[unknown] (170 samples, 1.82%)</title><rect x="29.7952%" y="1077" width="1.8227%" height="15" fill="rgb(209,109,2)"/><text x="30.0452%" y="1087.50">[..</text></g><g><title>[unknown] (168 samples, 1.80%)</title><rect x="29.8167%" y="1061" width="1.8012%" height="15" fill="rgb(252,216,26)"/><text x="30.0667%" y="1071.50">[..</text></g><g><title>[unknown] (166 samples, 1.78%)</title><rect x="29.8381%" y="1045" width="1.7798%" height="15" fill="rgb(227,173,36)"/><text x="30.0881%" y="1055.50">[..</text></g><g><title>[unknown] (162 samples, 1.74%)</title><rect x="29.8810%" y="1029" width="1.7369%" height="15" fill="rgb(209,90,7)"/><text x="30.1310%" y="1039.50"></text></g><g><title>[unknown] (160 samples, 1.72%)</title><rect x="29.9024%" y="1013" width="1.7154%" height="15" fill="rgb(250,194,11)"/><text x="30.1524%" y="1023.50"></text></g><g><title>[unknown] (139 samples, 1.49%)</title><rect x="30.1276%" y="997" width="1.4903%" height="15" fill="rgb(220,72,50)"/><text x="30.3776%" y="1007.50"></text></g><g><title>[unknown] (126 samples, 1.35%)</title><rect x="30.2670%" y="981" width="1.3509%" height="15" fill="rgb(222,106,48)"/><text x="30.5170%" y="991.50"></text></g><g><title>[unknown] (108 samples, 1.16%)</title><rect x="30.4600%" y="965" width="1.1579%" height="15" fill="rgb(216,220,45)"/><text x="30.7100%" y="975.50"></text></g><g><title>[unknown] (87 samples, 0.93%)</title><rect x="30.6851%" y="949" width="0.9328%" height="15" fill="rgb(234,112,18)"/><text x="30.9351%" y="959.50"></text></g><g><title>[unknown] (68 samples, 0.73%)</title><rect x="30.8888%" y="933" width="0.7291%" height="15" fill="rgb(206,179,9)"/><text x="31.1388%" y="943.50"></text></g><g><title>[unknown] (41 samples, 0.44%)</title><rect x="31.1783%" y="917" width="0.4396%" height="15" fill="rgb(215,115,40)"/><text x="31.4283%" y="927.50"></text></g><g><title>[unknown] (17 samples, 0.18%)</title><rect x="31.4356%" y="901" width="0.1823%" height="15" fill="rgb(222,69,34)"/><text x="31.6856%" y="911.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="31.6179%" y="1109" width="0.0107%" height="15" fill="rgb(209,161,10)"/><text x="31.8679%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.01%)</title><rect x="31.6286%" y="1109" width="0.0107%" height="15" fill="rgb(217,6,38)"/><text x="31.8786%" y="1119.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow::{{closure}} (1 samples, 0.01%)</title><rect x="31.6286%" y="1093" width="0.0107%" height="15" fill="rgb(229,229,48)"/><text x="31.8786%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.03%)</title><rect x="31.6393%" y="1109" width="0.0322%" height="15" fill="rgb(225,21,28)"/><text x="31.8893%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.03%)</title><rect x="31.6393%" y="1093" width="0.0322%" height="15" fill="rgb(206,33,13)"/><text x="31.8893%" y="1103.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (3 samples, 0.03%)</title><rect x="31.6715%" y="1109" width="0.0322%" height="15" fill="rgb(242,178,17)"/><text x="31.9215%" y="1119.50"></text></g><g><title>std::time::Instant::now (3 samples, 0.03%)</title><rect x="31.6715%" y="1093" width="0.0322%" height="15" fill="rgb(220,162,5)"/><text x="31.9215%" y="1103.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (3 samples, 0.03%)</title><rect x="31.6715%" y="1077" width="0.0322%" height="15" fill="rgb(210,33,43)"/><text x="31.9215%" y="1087.50"></text></g><g><title>std::sys::unix::time::inner::now (3 samples, 0.03%)</title><rect x="31.6715%" y="1061" width="0.0322%" height="15" fill="rgb(216,116,54)"/><text x="31.9215%" y="1071.50"></text></g><g><title>__clock_gettime (3 samples, 0.03%)</title><rect x="31.6715%" y="1045" width="0.0322%" height="15" fill="rgb(249,92,24)"/><text x="31.9215%" y="1055.50"></text></g><g><title>__vdso_clock_gettime (3 samples, 0.03%)</title><rect x="31.6715%" y="1029" width="0.0322%" height="15" fill="rgb(231,189,14)"/><text x="31.9215%" y="1039.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (5 samples, 0.05%)</title><rect x="31.7037%" y="1109" width="0.0536%" height="15" fill="rgb(230,8,41)"/><text x="31.9537%" y="1119.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (5 samples, 0.05%)</title><rect x="31.7037%" y="1093" width="0.0536%" height="15" fill="rgb(249,7,27)"/><text x="31.9537%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (5 samples, 0.05%)</title><rect x="31.7037%" y="1077" width="0.0536%" height="15" fill="rgb(232,86,5)"/><text x="31.9537%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (5 samples, 0.05%)</title><rect x="31.7037%" y="1061" width="0.0536%" height="15" fill="rgb(224,175,18)"/><text x="31.9537%" y="1071.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::notify_one (192 samples, 2.06%)</title><rect x="29.7738%" y="1173" width="2.0585%" height="15" fill="rgb(220,129,12)"/><text x="30.0238%" y="1183.50">t..</text></g><g><title>parking_lot::condvar::Condvar::notify_one (192 samples, 2.06%)</title><rect x="29.7738%" y="1157" width="2.0585%" height="15" fill="rgb(210,19,36)"/><text x="30.0238%" y="1167.50">p..</text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (192 samples, 2.06%)</title><rect x="29.7738%" y="1141" width="2.0585%" height="15" fill="rgb(219,96,14)"/><text x="30.0238%" y="1151.50">p..</text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (192 samples, 2.06%)</title><rect x="29.7738%" y="1125" width="2.0585%" height="15" fill="rgb(249,106,1)"/><text x="30.0238%" y="1135.50">p..</text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (7 samples, 0.08%)</title><rect x="31.7573%" y="1109" width="0.0751%" height="15" fill="rgb(249,155,20)"/><text x="32.0073%" y="1119.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (7 samples, 0.08%)</title><rect x="31.7573%" y="1093" width="0.0751%" height="15" fill="rgb(244,168,9)"/><text x="32.0073%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (7 samples, 0.08%)</title><rect x="31.7573%" y="1077" width="0.0751%" height="15" fill="rgb(216,23,50)"/><text x="32.0073%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_sub (7 samples, 0.08%)</title><rect x="31.7573%" y="1061" width="0.0751%" height="15" fill="rgb(224,219,20)"/><text x="32.0073%" y="1071.50"></text></g><g><title>core::task::wake::Waker::wake (199 samples, 2.13%)</title><rect x="29.7094%" y="1221" width="2.1336%" height="15" fill="rgb(222,156,15)"/><text x="29.9594%" y="1231.50">c..</text></g><g><title>tokio::park::thread::wake (199 samples, 2.13%)</title><rect x="29.7094%" y="1205" width="2.1336%" height="15" fill="rgb(231,97,17)"/><text x="29.9594%" y="1215.50">t..</text></g><g><title>tokio::park::thread::Inner::unpark (198 samples, 2.12%)</title><rect x="29.7202%" y="1189" width="2.1229%" height="15" fill="rgb(218,70,48)"/><text x="29.9702%" y="1199.50">t..</text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="31.8323%" y="1173" width="0.0107%" height="15" fill="rgb(212,196,52)"/><text x="32.0823%" y="1183.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.01%)</title><rect x="31.8323%" y="1157" width="0.0107%" height="15" fill="rgb(243,203,18)"/><text x="32.0823%" y="1167.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.01%)</title><rect x="31.8323%" y="1141" width="0.0107%" height="15" fill="rgb(252,125,41)"/><text x="32.0823%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.01%)</title><rect x="31.8323%" y="1125" width="0.0107%" height="15" fill="rgb(223,180,33)"/><text x="32.0823%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="31.8323%" y="1109" width="0.0107%" height="15" fill="rgb(254,159,46)"/><text x="32.0823%" y="1119.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (14 samples, 0.15%)</title><rect x="31.8430%" y="1221" width="0.1501%" height="15" fill="rgb(254,38,10)"/><text x="32.0930%" y="1231.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (14 samples, 0.15%)</title><rect x="31.8430%" y="1205" width="0.1501%" height="15" fill="rgb(208,217,32)"/><text x="32.0930%" y="1215.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (14 samples, 0.15%)</title><rect x="31.8430%" y="1189" width="0.1501%" height="15" fill="rgb(221,120,13)"/><text x="32.0930%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (14 samples, 0.15%)</title><rect x="31.8430%" y="1173" width="0.1501%" height="15" fill="rgb(246,54,52)"/><text x="32.0930%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (14 samples, 0.15%)</title><rect x="31.8430%" y="1157" width="0.1501%" height="15" fill="rgb(242,34,25)"/><text x="32.0930%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (1 samples, 0.01%)</title><rect x="31.9931%" y="1205" width="0.0107%" height="15" fill="rgb(247,209,9)"/><text x="32.2431%" y="1215.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.01%)</title><rect x="31.9931%" y="1189" width="0.0107%" height="15" fill="rgb(228,71,26)"/><text x="32.2431%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (6 samples, 0.06%)</title><rect x="32.0039%" y="1205" width="0.0643%" height="15" fill="rgb(222,145,49)"/><text x="32.2539%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_store (6 samples, 0.06%)</title><rect x="32.0039%" y="1189" width="0.0643%" height="15" fill="rgb(218,121,17)"/><text x="32.2539%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,181 samples, 12.66%)</title><rect x="19.4275%" y="1269" width="12.6622%" height="15" fill="rgb(244,50,7)"/><text x="19.6775%" y="1279.50">&lt;core::future::from..</text></g><g><title>rho_runtime::storage::coordinator::Coordinator::handle_produce::{{closure}} (413 samples, 4.43%)</title><rect x="27.6616%" y="1253" width="4.4280%" height="15" fill="rgb(246,229,37)"/><text x="27.9116%" y="1263.50">rho_r..</text></g><g><title>tokio::sync::notify::Notify::notify_one (234 samples, 2.51%)</title><rect x="29.5808%" y="1237" width="2.5088%" height="15" fill="rgb(225,18,5)"/><text x="29.8308%" y="1247.50">to..</text></g><g><title>tokio::sync::notify::notify_locked (9 samples, 0.10%)</title><rect x="31.9931%" y="1221" width="0.0965%" height="15" fill="rgb(213,204,8)"/><text x="32.2431%" y="1231.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::pop_back (2 samples, 0.02%)</title><rect x="32.0682%" y="1205" width="0.0214%" height="15" fill="rgb(238,103,6)"/><text x="32.3182%" y="1215.50"></text></g><g><title>&lt;model::locally_free::ExprInstanceLocallyFree as model::locally_free::HasLocallyFree&lt;model::rho_types::expr::ExprInstance&gt;&gt;::locally_free (2 samples, 0.02%)</title><rect x="32.0896%" y="1269" width="0.0214%" height="15" fill="rgb(222,25,35)"/><text x="32.3396%" y="1279.50"></text></g><g><title>&lt;model::ordering::ScoreTreeIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="32.1111%" y="1269" width="0.0107%" height="15" fill="rgb(213,203,35)"/><text x="32.3611%" y="1279.50"></text></g><g><title>&lt;model::ordering::sort_unforgeable::UnforgeableScoreTreeIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="32.1111%" y="1253" width="0.0107%" height="15" fill="rgb(221,79,53)"/><text x="32.3611%" y="1263.50"></text></g><g><title>&lt;model::ordering::sort_par::ParScoreTreeIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="32.1218%" y="1269" width="0.0107%" height="15" fill="rgb(243,200,35)"/><text x="32.3718%" y="1279.50"></text></g><g><title>bitmap_sfu (1 samples, 0.01%)</title><rect x="32.1540%" y="613" width="0.0107%" height="15" fill="rgb(248,60,25)"/><text x="32.4040%" y="623.50"></text></g><g><title>ffs_lu (1 samples, 0.01%)</title><rect x="32.1540%" y="597" width="0.0107%" height="15" fill="rgb(227,53,46)"/><text x="32.4040%" y="607.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="32.1540%" y="1189" width="0.0214%" height="15" fill="rgb(216,120,32)"/><text x="32.4040%" y="1199.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="32.1540%" y="1173" width="0.0214%" height="15" fill="rgb(220,134,1)"/><text x="32.4040%" y="1183.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="32.1540%" y="1157" width="0.0214%" height="15" fill="rgb(237,168,5)"/><text x="32.4040%" y="1167.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="32.1540%" y="1141" width="0.0214%" height="15" fill="rgb(231,100,33)"/><text x="32.4040%" y="1151.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="32.1540%" y="1125" width="0.0214%" height="15" fill="rgb(236,177,47)"/><text x="32.4040%" y="1135.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="32.1540%" y="1109" width="0.0214%" height="15" fill="rgb(235,7,49)"/><text x="32.4040%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="32.1540%" y="1093" width="0.0214%" height="15" fill="rgb(232,119,22)"/><text x="32.4040%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="32.1540%" y="1077" width="0.0214%" height="15" fill="rgb(254,73,53)"/><text x="32.4040%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="32.1540%" y="1061" width="0.0214%" height="15" fill="rgb(251,35,20)"/><text x="32.4040%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="32.1540%" y="1045" width="0.0214%" height="15" fill="rgb(241,119,20)"/><text x="32.4040%" y="1055.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="32.1540%" y="1029" width="0.0214%" height="15" fill="rgb(207,102,14)"/><text x="32.4040%" y="1039.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="32.1540%" y="1013" width="0.0214%" height="15" fill="rgb(248,201,50)"/><text x="32.4040%" y="1023.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="32.1540%" y="997" width="0.0214%" height="15" fill="rgb(222,185,44)"/><text x="32.4040%" y="1007.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="32.1540%" y="981" width="0.0214%" height="15" fill="rgb(218,107,18)"/><text x="32.4040%" y="991.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="32.1540%" y="965" width="0.0214%" height="15" fill="rgb(237,177,39)"/><text x="32.4040%" y="975.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="32.1540%" y="949" width="0.0214%" height="15" fill="rgb(246,69,6)"/><text x="32.4040%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="32.1540%" y="933" width="0.0214%" height="15" fill="rgb(234,208,37)"/><text x="32.4040%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="32.1540%" y="917" width="0.0214%" height="15" fill="rgb(225,4,6)"/><text x="32.4040%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="32.1540%" y="901" width="0.0214%" height="15" fill="rgb(233,45,0)"/><text x="32.4040%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="32.1540%" y="885" width="0.0214%" height="15" fill="rgb(226,136,5)"/><text x="32.4040%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="32.1540%" y="869" width="0.0214%" height="15" fill="rgb(211,91,47)"/><text x="32.4040%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="32.1540%" y="853" width="0.0214%" height="15" fill="rgb(242,88,51)"/><text x="32.4040%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="32.1540%" y="837" width="0.0214%" height="15" fill="rgb(230,91,28)"/><text x="32.4040%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="32.1540%" y="821" width="0.0214%" height="15" fill="rgb(254,186,29)"/><text x="32.4040%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="32.1540%" y="805" width="0.0214%" height="15" fill="rgb(238,6,4)"/><text x="32.4040%" y="815.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="32.1540%" y="789" width="0.0214%" height="15" fill="rgb(221,151,16)"/><text x="32.4040%" y="799.50"></text></g><g><title>_rjem_mallocx (2 samples, 0.02%)</title><rect x="32.1540%" y="773" width="0.0214%" height="15" fill="rgb(251,143,52)"/><text x="32.4040%" y="783.50"></text></g><g><title>imalloc (2 samples, 0.02%)</title><rect x="32.1540%" y="757" width="0.0214%" height="15" fill="rgb(206,90,15)"/><text x="32.4040%" y="767.50"></text></g><g><title>imalloc_body (2 samples, 0.02%)</title><rect x="32.1540%" y="741" width="0.0214%" height="15" fill="rgb(218,35,8)"/><text x="32.4040%" y="751.50"></text></g><g><title>imalloc_no_sample (2 samples, 0.02%)</title><rect x="32.1540%" y="725" width="0.0214%" height="15" fill="rgb(239,215,6)"/><text x="32.4040%" y="735.50"></text></g><g><title>iallocztm (2 samples, 0.02%)</title><rect x="32.1540%" y="709" width="0.0214%" height="15" fill="rgb(245,116,39)"/><text x="32.4040%" y="719.50"></text></g><g><title>arena_malloc (2 samples, 0.02%)</title><rect x="32.1540%" y="693" width="0.0214%" height="15" fill="rgb(242,65,28)"/><text x="32.4040%" y="703.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.02%)</title><rect x="32.1540%" y="677" width="0.0214%" height="15" fill="rgb(252,132,53)"/><text x="32.4040%" y="687.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (2 samples, 0.02%)</title><rect x="32.1540%" y="661" width="0.0214%" height="15" fill="rgb(224,159,50)"/><text x="32.4040%" y="671.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (2 samples, 0.02%)</title><rect x="32.1540%" y="645" width="0.0214%" height="15" fill="rgb(224,93,4)"/><text x="32.4040%" y="655.50"></text></g><g><title>arena_slab_reg_alloc (2 samples, 0.02%)</title><rect x="32.1540%" y="629" width="0.0214%" height="15" fill="rgb(208,81,34)"/><text x="32.4040%" y="639.50"></text></g><g><title>extent_nfree_dec (1 samples, 0.01%)</title><rect x="32.1647%" y="613" width="0.0107%" height="15" fill="rgb(233,92,54)"/><text x="32.4147%" y="623.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (5 samples, 0.05%)</title><rect x="32.1325%" y="1269" width="0.0536%" height="15" fill="rgb(237,21,14)"/><text x="32.3825%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="32.1540%" y="1253" width="0.0322%" height="15" fill="rgb(249,128,51)"/><text x="32.4040%" y="1263.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.03%)</title><rect x="32.1540%" y="1237" width="0.0322%" height="15" fill="rgb(223,129,24)"/><text x="32.4040%" y="1247.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.03%)</title><rect x="32.1540%" y="1221" width="0.0322%" height="15" fill="rgb(231,168,25)"/><text x="32.4040%" y="1231.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.03%)</title><rect x="32.1540%" y="1205" width="0.0322%" height="15" fill="rgb(224,39,20)"/><text x="32.4040%" y="1215.50"></text></g><g><title>&lt;model::rho_types::Send as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="32.1754%" y="1189" width="0.0107%" height="15" fill="rgb(225,152,53)"/><text x="32.4254%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="32.1754%" y="1173" width="0.0107%" height="15" fill="rgb(252,17,24)"/><text x="32.4254%" y="1183.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="32.1754%" y="1157" width="0.0107%" height="15" fill="rgb(250,114,30)"/><text x="32.4254%" y="1167.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="32.1754%" y="1141" width="0.0107%" height="15" fill="rgb(229,5,4)"/><text x="32.4254%" y="1151.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="32.1754%" y="1125" width="0.0107%" height="15" fill="rgb(225,176,49)"/><text x="32.4254%" y="1135.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="32.1754%" y="1109" width="0.0107%" height="15" fill="rgb(224,221,49)"/><text x="32.4254%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="32.1754%" y="1093" width="0.0107%" height="15" fill="rgb(253,169,27)"/><text x="32.4254%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="32.1754%" y="1077" width="0.0107%" height="15" fill="rgb(211,206,16)"/><text x="32.4254%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="32.1754%" y="1061" width="0.0107%" height="15" fill="rgb(244,87,35)"/><text x="32.4254%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="32.1754%" y="1045" width="0.0107%" height="15" fill="rgb(246,28,10)"/><text x="32.4254%" y="1055.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="32.1754%" y="1029" width="0.0107%" height="15" fill="rgb(229,12,44)"/><text x="32.4254%" y="1039.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="32.1754%" y="1013" width="0.0107%" height="15" fill="rgb(210,145,37)"/><text x="32.4254%" y="1023.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="32.1754%" y="997" width="0.0107%" height="15" fill="rgb(227,112,52)"/><text x="32.4254%" y="1007.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="32.1754%" y="981" width="0.0107%" height="15" fill="rgb(238,155,34)"/><text x="32.4254%" y="991.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="32.1754%" y="965" width="0.0107%" height="15" fill="rgb(239,226,36)"/><text x="32.4254%" y="975.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="32.1754%" y="949" width="0.0107%" height="15" fill="rgb(230,16,23)"/><text x="32.4254%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="32.1754%" y="933" width="0.0107%" height="15" fill="rgb(236,171,36)"/><text x="32.4254%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="32.1754%" y="917" width="0.0107%" height="15" fill="rgb(221,22,14)"/><text x="32.4254%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="32.1754%" y="901" width="0.0107%" height="15" fill="rgb(242,43,11)"/><text x="32.4254%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="32.1754%" y="885" width="0.0107%" height="15" fill="rgb(232,69,23)"/><text x="32.4254%" y="895.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="32.1754%" y="869" width="0.0107%" height="15" fill="rgb(216,180,54)"/><text x="32.4254%" y="879.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="32.1754%" y="853" width="0.0107%" height="15" fill="rgb(216,5,24)"/><text x="32.4254%" y="863.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="32.1754%" y="837" width="0.0107%" height="15" fill="rgb(225,89,9)"/><text x="32.4254%" y="847.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="32.1754%" y="821" width="0.0107%" height="15" fill="rgb(243,75,33)"/><text x="32.4254%" y="831.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="32.1754%" y="805" width="0.0107%" height="15" fill="rgb(247,141,45)"/><text x="32.4254%" y="815.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="32.1754%" y="789" width="0.0107%" height="15" fill="rgb(232,177,36)"/><text x="32.4254%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="32.1754%" y="773" width="0.0107%" height="15" fill="rgb(219,125,36)"/><text x="32.4254%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="32.1754%" y="757" width="0.0107%" height="15" fill="rgb(227,94,9)"/><text x="32.4254%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="32.1754%" y="741" width="0.0107%" height="15" fill="rgb(240,34,52)"/><text x="32.4254%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="32.1754%" y="725" width="0.0107%" height="15" fill="rgb(216,45,12)"/><text x="32.4254%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="32.1754%" y="709" width="0.0107%" height="15" fill="rgb(246,21,19)"/><text x="32.4254%" y="719.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash (1 samples, 0.01%)</title><rect x="32.1861%" y="1269" width="0.0107%" height="15" fill="rgb(213,98,42)"/><text x="32.4361%" y="1279.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash::traverse (5 samples, 0.05%)</title><rect x="32.1968%" y="1269" width="0.0536%" height="15" fill="rgb(250,136,47)"/><text x="32.4468%" y="1279.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.09%)</title><rect x="32.4434%" y="1253" width="0.0858%" height="15" fill="rgb(251,124,27)"/><text x="32.6934%" y="1263.50"></text></g><g><title>core::ptr::read (8 samples, 0.09%)</title><rect x="32.4434%" y="1237" width="0.0858%" height="15" fill="rgb(229,180,14)"/><text x="32.6934%" y="1247.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.06%)</title><rect x="32.4649%" y="1221" width="0.0643%" height="15" fill="rgb(245,216,25)"/><text x="32.7149%" y="1231.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="32.6686%" y="1221" width="0.0107%" height="15" fill="rgb(251,43,5)"/><text x="32.9186%" y="1231.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.18%)</title><rect x="32.6686%" y="1237" width="0.1823%" height="15" fill="rgb(250,128,24)"/><text x="32.9186%" y="1247.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (16 samples, 0.17%)</title><rect x="32.6793%" y="1221" width="0.1715%" height="15" fill="rgb(217,117,27)"/><text x="32.9293%" y="1231.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (16 samples, 0.17%)</title><rect x="32.6793%" y="1205" width="0.1715%" height="15" fill="rgb(245,147,4)"/><text x="32.9293%" y="1215.50"></text></g><g><title>core::ptr::read (16 samples, 0.17%)</title><rect x="32.6793%" y="1189" width="0.1715%" height="15" fill="rgb(242,201,35)"/><text x="32.9293%" y="1199.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.05%)</title><rect x="32.7973%" y="1173" width="0.0536%" height="15" fill="rgb(218,181,1)"/><text x="33.0473%" y="1183.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.01%)</title><rect x="32.8509%" y="1237" width="0.0107%" height="15" fill="rgb(222,6,29)"/><text x="33.1009%" y="1247.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.01%)</title><rect x="32.8509%" y="1221" width="0.0107%" height="15" fill="rgb(208,186,3)"/><text x="33.1009%" y="1231.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="32.8616%" y="1205" width="0.0107%" height="15" fill="rgb(216,36,26)"/><text x="33.1116%" y="1215.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="32.8616%" y="1189" width="0.0107%" height="15" fill="rgb(248,201,23)"/><text x="33.1116%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;model::rho_types::Expr&gt;&gt; (2 samples, 0.02%)</title><rect x="32.8616%" y="1237" width="0.0214%" height="15" fill="rgb(251,170,31)"/><text x="33.1116%" y="1247.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="32.8616%" y="1221" width="0.0214%" height="15" fill="rgb(207,110,25)"/><text x="33.1116%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;model::rho_types::Expr,alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="32.8723%" y="1205" width="0.0107%" height="15" fill="rgb(250,54,15)"/><text x="33.1223%" y="1215.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="32.8723%" y="1189" width="0.0107%" height="15" fill="rgb(227,68,33)"/><text x="33.1223%" y="1199.50"></text></g><g><title>core::ptr::write (3 samples, 0.03%)</title><rect x="32.8830%" y="1237" width="0.0322%" height="15" fill="rgb(238,34,41)"/><text x="33.1330%" y="1247.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="32.8830%" y="1221" width="0.0322%" height="15" fill="rgb(220,11,15)"/><text x="33.1330%" y="1231.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::reserve (1 samples, 0.01%)</title><rect x="32.9152%" y="1237" width="0.0107%" height="15" fill="rgb(246,111,35)"/><text x="33.1652%" y="1247.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_reserve (1 samples, 0.01%)</title><rect x="32.9152%" y="1221" width="0.0107%" height="15" fill="rgb(209,88,53)"/><text x="33.1652%" y="1231.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (38 samples, 0.41%)</title><rect x="32.5292%" y="1253" width="0.4074%" height="15" fill="rgb(231,185,47)"/><text x="32.7792%" y="1263.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (1 samples, 0.01%)</title><rect x="32.9259%" y="1237" width="0.0107%" height="15" fill="rgb(233,154,1)"/><text x="33.1759%" y="1247.50"></text></g><g><title>[libc-2.31.so] (18 samples, 0.19%)</title><rect x="32.9474%" y="1237" width="0.1930%" height="15" fill="rgb(225,15,46)"/><text x="33.1974%" y="1247.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (20 samples, 0.21%)</title><rect x="32.9366%" y="1253" width="0.2144%" height="15" fill="rgb(211,135,41)"/><text x="33.1866%" y="1263.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::len (1 samples, 0.01%)</title><rect x="33.1403%" y="1237" width="0.0107%" height="15" fill="rgb(208,54,0)"/><text x="33.3903%" y="1247.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple (1 samples, 0.01%)</title><rect x="33.1403%" y="1221" width="0.0107%" height="15" fill="rgb(244,136,14)"/><text x="33.3903%" y="1231.50"></text></g><g><title>[libc-2.31.so] (62 samples, 0.66%)</title><rect x="33.1511%" y="1253" width="0.6647%" height="15" fill="rgb(241,56,14)"/><text x="33.4011%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (2 samples, 0.02%)</title><rect x="33.8158%" y="1253" width="0.0214%" height="15" fill="rgb(205,80,24)"/><text x="34.0658%" y="1263.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.01%)</title><rect x="33.8265%" y="1237" width="0.0107%" height="15" fill="rgb(220,57,4)"/><text x="34.0765%" y="1247.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="33.8265%" y="1221" width="0.0107%" height="15" fill="rgb(226,193,50)"/><text x="34.0765%" y="1231.50"></text></g><g><title>&lt;model::locally_free::ExprInstanceLocallyFree as model::locally_free::HasLocallyFree&lt;model::rho_types::expr::ExprInstance&gt;&gt;::connective_used (2 samples, 0.02%)</title><rect x="33.8480%" y="1237" width="0.0214%" height="15" fill="rgb(231,168,22)"/><text x="34.0980%" y="1247.50"></text></g><g><title>&lt;model::locally_free::ExprInstanceLocallyFree as model::locally_free::HasLocallyFree&lt;model::rho_types::expr::ExprInstance&gt;&gt;::locally_free (2 samples, 0.02%)</title><rect x="33.8694%" y="1237" width="0.0214%" height="15" fill="rgb(254,215,14)"/><text x="34.1194%" y="1247.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="33.8909%" y="1237" width="0.0214%" height="15" fill="rgb(211,115,16)"/><text x="34.1409%" y="1247.50"></text></g><g><title>model::rho_types::Par::append_expr (10 samples, 0.11%)</title><rect x="33.8372%" y="1253" width="0.1072%" height="15" fill="rgb(236,210,16)"/><text x="34.0872%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.03%)</title><rect x="33.9123%" y="1237" width="0.0322%" height="15" fill="rgb(221,94,12)"/><text x="34.1623%" y="1247.50"></text></g><g><title>core::ptr::write (3 samples, 0.03%)</title><rect x="33.9123%" y="1221" width="0.0322%" height="15" fill="rgb(235,218,49)"/><text x="34.1623%" y="1231.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="33.9123%" y="1205" width="0.0322%" height="15" fill="rgb(217,114,14)"/><text x="34.1623%" y="1215.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (2 samples, 0.02%)</title><rect x="33.9766%" y="1237" width="0.0214%" height="15" fill="rgb(216,145,22)"/><text x="34.2266%" y="1247.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="33.9766%" y="1221" width="0.0214%" height="15" fill="rgb(217,112,39)"/><text x="34.2266%" y="1231.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (1 samples, 0.01%)</title><rect x="34.0195%" y="1221" width="0.0107%" height="15" fill="rgb(225,85,32)"/><text x="34.2695%" y="1231.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.10%)</title><rect x="34.0302%" y="1221" width="0.0965%" height="15" fill="rgb(245,209,47)"/><text x="34.2802%" y="1231.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (21 samples, 0.23%)</title><rect x="33.9981%" y="1237" width="0.2252%" height="15" fill="rgb(218,220,15)"/><text x="34.2481%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (9 samples, 0.10%)</title><rect x="34.1267%" y="1221" width="0.0965%" height="15" fill="rgb(222,202,31)"/><text x="34.3767%" y="1231.50"></text></g><g><title>core::ptr::read (9 samples, 0.10%)</title><rect x="34.1267%" y="1205" width="0.0965%" height="15" fill="rgb(243,203,4)"/><text x="34.3767%" y="1215.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.10%)</title><rect x="34.1267%" y="1189" width="0.0965%" height="15" fill="rgb(237,92,17)"/><text x="34.3767%" y="1199.50"></text></g><g><title>[libc-2.31.so] (17 samples, 0.18%)</title><rect x="34.2232%" y="1237" width="0.1823%" height="15" fill="rgb(231,119,7)"/><text x="34.4732%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Connective&gt;&gt; (1 samples, 0.01%)</title><rect x="34.4055%" y="1205" width="0.0107%" height="15" fill="rgb(237,82,41)"/><text x="34.6555%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="34.4055%" y="1189" width="0.0107%" height="15" fill="rgb(226,81,48)"/><text x="34.6555%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Connective]&gt; (1 samples, 0.01%)</title><rect x="34.4055%" y="1173" width="0.0107%" height="15" fill="rgb(234,70,51)"/><text x="34.6555%" y="1183.50"></text></g><g><title>__rg_dealloc (1 samples, 0.01%)</title><rect x="34.4162%" y="1125" width="0.0107%" height="15" fill="rgb(251,86,4)"/><text x="34.6662%" y="1135.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.01%)</title><rect x="34.4162%" y="1109" width="0.0107%" height="15" fill="rgb(244,144,28)"/><text x="34.6662%" y="1119.50"></text></g><g><title>jemallocator::layout_to_flags (1 samples, 0.01%)</title><rect x="34.4162%" y="1093" width="0.0107%" height="15" fill="rgb(232,161,39)"/><text x="34.6662%" y="1103.50"></text></g><g><title>_rjem_je_tcache_event_hard (1 samples, 0.01%)</title><rect x="34.4269%" y="1125" width="0.0107%" height="15" fill="rgb(247,34,51)"/><text x="34.6769%" y="1135.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.01%)</title><rect x="34.4269%" y="1109" width="0.0107%" height="15" fill="rgb(225,132,2)"/><text x="34.6769%" y="1119.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.01%)</title><rect x="34.4269%" y="1093" width="0.0107%" height="15" fill="rgb(209,159,44)"/><text x="34.6769%" y="1103.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.01%)</title><rect x="34.4269%" y="1077" width="0.0107%" height="15" fill="rgb(251,214,1)"/><text x="34.6769%" y="1087.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.01%)</title><rect x="34.4269%" y="1061" width="0.0107%" height="15" fill="rgb(247,84,47)"/><text x="34.6769%" y="1071.50"></text></g><g><title>extent_size_quantize_floor (2 samples, 0.02%)</title><rect x="34.4805%" y="901" width="0.0214%" height="15" fill="rgb(240,111,43)"/><text x="34.7305%" y="911.50"></text></g><g><title>sz_psz2ind (2 samples, 0.02%)</title><rect x="34.4805%" y="885" width="0.0214%" height="15" fill="rgb(215,214,35)"/><text x="34.7305%" y="895.50"></text></g><g><title>extent_deactivate_locked (3 samples, 0.03%)</title><rect x="34.4805%" y="933" width="0.0322%" height="15" fill="rgb(248,207,23)"/><text x="34.7305%" y="943.50"></text></g><g><title>extents_insert_locked (3 samples, 0.03%)</title><rect x="34.4805%" y="917" width="0.0322%" height="15" fill="rgb(214,186,4)"/><text x="34.7305%" y="927.50"></text></g><g><title>sz_psz2ind (1 samples, 0.01%)</title><rect x="34.5020%" y="901" width="0.0107%" height="15" fill="rgb(220,133,22)"/><text x="34.7520%" y="911.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (6 samples, 0.06%)</title><rect x="34.4698%" y="1029" width="0.0643%" height="15" fill="rgb(239,134,19)"/><text x="34.7198%" y="1039.50"></text></g><g><title>arena_dalloc_bin_locked_impl (5 samples, 0.05%)</title><rect x="34.4805%" y="1013" width="0.0536%" height="15" fill="rgb(250,140,9)"/><text x="34.7305%" y="1023.50"></text></g><g><title>arena_dalloc_bin_slab (5 samples, 0.05%)</title><rect x="34.4805%" y="997" width="0.0536%" height="15" fill="rgb(225,59,14)"/><text x="34.7305%" y="1007.50"></text></g><g><title>arena_slab_dalloc (5 samples, 0.05%)</title><rect x="34.4805%" y="981" width="0.0536%" height="15" fill="rgb(214,152,51)"/><text x="34.7305%" y="991.50"></text></g><g><title>_rjem_je_arena_extents_dirty_dalloc (5 samples, 0.05%)</title><rect x="34.4805%" y="965" width="0.0536%" height="15" fill="rgb(251,227,43)"/><text x="34.7305%" y="975.50"></text></g><g><title>extent_record (5 samples, 0.05%)</title><rect x="34.4805%" y="949" width="0.0536%" height="15" fill="rgb(241,96,17)"/><text x="34.7305%" y="959.50"></text></g><g><title>malloc_mutex_lock (2 samples, 0.02%)</title><rect x="34.5127%" y="933" width="0.0214%" height="15" fill="rgb(234,198,43)"/><text x="34.7627%" y="943.50"></text></g><g><title>malloc_mutex_trylock_final (2 samples, 0.02%)</title><rect x="34.5127%" y="917" width="0.0214%" height="15" fill="rgb(220,108,29)"/><text x="34.7627%" y="927.50"></text></g><g><title>__GI___pthread_mutex_trylock (2 samples, 0.02%)</title><rect x="34.5127%" y="901" width="0.0214%" height="15" fill="rgb(226,163,33)"/><text x="34.7627%" y="911.50"></text></g><g><title>arena_decay_ticks (1 samples, 0.01%)</title><rect x="34.5341%" y="1029" width="0.0107%" height="15" fill="rgb(205,194,45)"/><text x="34.7841%" y="1039.50"></text></g><g><title>arena_ind_get (1 samples, 0.01%)</title><rect x="34.5341%" y="1013" width="0.0107%" height="15" fill="rgb(206,143,44)"/><text x="34.7841%" y="1023.50"></text></g><g><title>extent_arena_get (1 samples, 0.01%)</title><rect x="34.5449%" y="1029" width="0.0107%" height="15" fill="rgb(236,136,36)"/><text x="34.7949%" y="1039.50"></text></g><g><title>atomic_load_p (1 samples, 0.01%)</title><rect x="34.5449%" y="1013" width="0.0107%" height="15" fill="rgb(249,172,42)"/><text x="34.7949%" y="1023.50"></text></g><g><title>iealloc (1 samples, 0.01%)</title><rect x="34.5556%" y="1029" width="0.0107%" height="15" fill="rgb(216,139,23)"/><text x="34.8056%" y="1039.50"></text></g><g><title>rtree_extent_read (1 samples, 0.01%)</title><rect x="34.5556%" y="1013" width="0.0107%" height="15" fill="rgb(207,166,20)"/><text x="34.8056%" y="1023.50"></text></g><g><title>rtree_leaf_elm_extent_read (1 samples, 0.01%)</title><rect x="34.5556%" y="997" width="0.0107%" height="15" fill="rgb(210,209,22)"/><text x="34.8056%" y="1007.50"></text></g><g><title>rtree_leaf_elm_bits_read (1 samples, 0.01%)</title><rect x="34.5556%" y="981" width="0.0107%" height="15" fill="rgb(232,118,20)"/><text x="34.8056%" y="991.50"></text></g><g><title>atomic_load_p (1 samples, 0.01%)</title><rect x="34.5556%" y="965" width="0.0107%" height="15" fill="rgb(238,113,42)"/><text x="34.8056%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (19 samples, 0.20%)</title><rect x="34.4055%" y="1221" width="0.2037%" height="15" fill="rgb(231,42,5)"/><text x="34.6555%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (18 samples, 0.19%)</title><rect x="34.4162%" y="1205" width="0.1930%" height="15" fill="rgb(243,166,24)"/><text x="34.6662%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (18 samples, 0.19%)</title><rect x="34.4162%" y="1189" width="0.1930%" height="15" fill="rgb(237,226,12)"/><text x="34.6662%" y="1199.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.19%)</title><rect x="34.4162%" y="1173" width="0.1930%" height="15" fill="rgb(229,133,24)"/><text x="34.6662%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (18 samples, 0.19%)</title><rect x="34.4162%" y="1157" width="0.1930%" height="15" fill="rgb(238,33,43)"/><text x="34.6662%" y="1167.50"></text></g><g><title>alloc::alloc::dealloc (18 samples, 0.19%)</title><rect x="34.4162%" y="1141" width="0.1930%" height="15" fill="rgb(227,59,38)"/><text x="34.6662%" y="1151.50"></text></g><g><title>_rjem_sdallocx (16 samples, 0.17%)</title><rect x="34.4377%" y="1125" width="0.1715%" height="15" fill="rgb(230,97,0)"/><text x="34.6877%" y="1135.50"></text></g><g><title>isfree (16 samples, 0.17%)</title><rect x="34.4377%" y="1109" width="0.1715%" height="15" fill="rgb(250,173,50)"/><text x="34.6877%" y="1119.50"></text></g><g><title>isdalloct (16 samples, 0.17%)</title><rect x="34.4377%" y="1093" width="0.1715%" height="15" fill="rgb(240,15,50)"/><text x="34.6877%" y="1103.50"></text></g><g><title>arena_sdalloc (16 samples, 0.17%)</title><rect x="34.4377%" y="1077" width="0.1715%" height="15" fill="rgb(221,93,22)"/><text x="34.6877%" y="1087.50"></text></g><g><title>tcache_dalloc_small (16 samples, 0.17%)</title><rect x="34.4377%" y="1061" width="0.1715%" height="15" fill="rgb(245,180,53)"/><text x="34.6877%" y="1071.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (15 samples, 0.16%)</title><rect x="34.4484%" y="1045" width="0.1608%" height="15" fill="rgb(231,88,51)"/><text x="34.6984%" y="1055.50"></text></g><g><title>malloc_mutex_lock (4 samples, 0.04%)</title><rect x="34.5663%" y="1029" width="0.0429%" height="15" fill="rgb(240,58,21)"/><text x="34.8163%" y="1039.50"></text></g><g><title>malloc_mutex_trylock_final (4 samples, 0.04%)</title><rect x="34.5663%" y="1013" width="0.0429%" height="15" fill="rgb(237,21,10)"/><text x="34.8163%" y="1023.50"></text></g><g><title>__GI___pthread_mutex_trylock (3 samples, 0.03%)</title><rect x="34.5770%" y="997" width="0.0322%" height="15" fill="rgb(218,43,11)"/><text x="34.8270%" y="1007.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.01%)</title><rect x="34.6092%" y="1173" width="0.0107%" height="15" fill="rgb(218,221,29)"/><text x="34.8592%" y="1183.50"></text></g><g><title>isfree (1 samples, 0.01%)</title><rect x="34.6092%" y="1157" width="0.0107%" height="15" fill="rgb(214,118,42)"/><text x="34.8592%" y="1167.50"></text></g><g><title>isdalloct (1 samples, 0.01%)</title><rect x="34.6092%" y="1141" width="0.0107%" height="15" fill="rgb(251,200,26)"/><text x="34.8592%" y="1151.50"></text></g><g><title>arena_sdalloc (1 samples, 0.01%)</title><rect x="34.6092%" y="1125" width="0.0107%" height="15" fill="rgb(237,101,39)"/><text x="34.8592%" y="1135.50"></text></g><g><title>tcache_dalloc_small (1 samples, 0.01%)</title><rect x="34.6092%" y="1109" width="0.0107%" height="15" fill="rgb(251,117,11)"/><text x="34.8592%" y="1119.50"></text></g><g><title>_rjem_je_extent_heap_insert (1 samples, 0.01%)</title><rect x="34.6414%" y="949" width="0.0107%" height="15" fill="rgb(216,223,23)"/><text x="34.8914%" y="959.50"></text></g><g><title>arena_slab_dalloc (1 samples, 0.01%)</title><rect x="34.6521%" y="933" width="0.0107%" height="15" fill="rgb(251,54,12)"/><text x="34.9021%" y="943.50"></text></g><g><title>_rjem_je_arena_extents_dirty_dalloc (1 samples, 0.01%)</title><rect x="34.6521%" y="917" width="0.0107%" height="15" fill="rgb(254,176,54)"/><text x="34.9021%" y="927.50"></text></g><g><title>extent_record (1 samples, 0.01%)</title><rect x="34.6521%" y="901" width="0.0107%" height="15" fill="rgb(210,32,8)"/><text x="34.9021%" y="911.50"></text></g><g><title>extent_deactivate_locked (1 samples, 0.01%)</title><rect x="34.6521%" y="885" width="0.0107%" height="15" fill="rgb(235,52,38)"/><text x="34.9021%" y="895.50"></text></g><g><title>extents_insert_locked (1 samples, 0.01%)</title><rect x="34.6521%" y="869" width="0.0107%" height="15" fill="rgb(231,4,44)"/><text x="34.9021%" y="879.50"></text></g><g><title>extent_list_append (1 samples, 0.01%)</title><rect x="34.6521%" y="853" width="0.0107%" height="15" fill="rgb(249,2,32)"/><text x="34.9021%" y="863.50"></text></g><g><title>isfree (5 samples, 0.05%)</title><rect x="34.6199%" y="1061" width="0.0536%" height="15" fill="rgb(224,65,26)"/><text x="34.8699%" y="1071.50"></text></g><g><title>isdalloct (5 samples, 0.05%)</title><rect x="34.6199%" y="1045" width="0.0536%" height="15" fill="rgb(250,73,40)"/><text x="34.8699%" y="1055.50"></text></g><g><title>arena_sdalloc (5 samples, 0.05%)</title><rect x="34.6199%" y="1029" width="0.0536%" height="15" fill="rgb(253,177,16)"/><text x="34.8699%" y="1039.50"></text></g><g><title>tcache_dalloc_small (5 samples, 0.05%)</title><rect x="34.6199%" y="1013" width="0.0536%" height="15" fill="rgb(217,32,34)"/><text x="34.8699%" y="1023.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (5 samples, 0.05%)</title><rect x="34.6199%" y="997" width="0.0536%" height="15" fill="rgb(212,7,10)"/><text x="34.8699%" y="1007.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (4 samples, 0.04%)</title><rect x="34.6306%" y="981" width="0.0429%" height="15" fill="rgb(245,89,8)"/><text x="34.8806%" y="991.50"></text></g><g><title>arena_dalloc_bin_locked_impl (4 samples, 0.04%)</title><rect x="34.6306%" y="965" width="0.0429%" height="15" fill="rgb(237,16,53)"/><text x="34.8806%" y="975.50"></text></g><g><title>arena_dalloc_bin_slab (2 samples, 0.02%)</title><rect x="34.6521%" y="949" width="0.0214%" height="15" fill="rgb(250,204,30)"/><text x="34.9021%" y="959.50"></text></g><g><title>malloc_mutex_unlock (1 samples, 0.01%)</title><rect x="34.6628%" y="933" width="0.0107%" height="15" fill="rgb(208,77,27)"/><text x="34.9128%" y="943.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="34.6628%" y="917" width="0.0107%" height="15" fill="rgb(250,204,28)"/><text x="34.9128%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (6 samples, 0.06%)</title><rect x="34.6199%" y="1157" width="0.0643%" height="15" fill="rgb(244,63,21)"/><text x="34.8699%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (6 samples, 0.06%)</title><rect x="34.6199%" y="1141" width="0.0643%" height="15" fill="rgb(236,85,44)"/><text x="34.8699%" y="1151.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.06%)</title><rect x="34.6199%" y="1125" width="0.0643%" height="15" fill="rgb(215,98,4)"/><text x="34.8699%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.06%)</title><rect x="34.6199%" y="1109" width="0.0643%" height="15" fill="rgb(235,38,11)"/><text x="34.8699%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.06%)</title><rect x="34.6199%" y="1093" width="0.0643%" height="15" fill="rgb(254,186,25)"/><text x="34.8699%" y="1103.50"></text></g><g><title>_rjem_sdallocx (6 samples, 0.06%)</title><rect x="34.6199%" y="1077" width="0.0643%" height="15" fill="rgb(225,55,31)"/><text x="34.8699%" y="1087.50"></text></g><g><title>tsd_fetch (1 samples, 0.01%)</title><rect x="34.6735%" y="1061" width="0.0107%" height="15" fill="rgb(211,15,21)"/><text x="34.9235%" y="1071.50"></text></g><g><title>tsd_fetch_impl (1 samples, 0.01%)</title><rect x="34.6735%" y="1045" width="0.0107%" height="15" fill="rgb(215,187,41)"/><text x="34.9235%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::ELt&gt; (8 samples, 0.09%)</title><rect x="34.6092%" y="1205" width="0.0858%" height="15" fill="rgb(248,69,32)"/><text x="34.8592%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::Par&gt;&gt; (8 samples, 0.09%)</title><rect x="34.6092%" y="1189" width="0.0858%" height="15" fill="rgb(252,102,52)"/><text x="34.8592%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (7 samples, 0.08%)</title><rect x="34.6199%" y="1173" width="0.0751%" height="15" fill="rgb(253,140,32)"/><text x="34.8699%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Match&gt;&gt; (1 samples, 0.01%)</title><rect x="34.6843%" y="1157" width="0.0107%" height="15" fill="rgb(216,56,42)"/><text x="34.9343%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="34.6843%" y="1141" width="0.0107%" height="15" fill="rgb(216,184,14)"/><text x="34.9343%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Match]&gt; (1 samples, 0.01%)</title><rect x="34.6843%" y="1125" width="0.0107%" height="15" fill="rgb(237,187,27)"/><text x="34.9343%" y="1135.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.02%)</title><rect x="34.7057%" y="1173" width="0.0214%" height="15" fill="rgb(219,65,3)"/><text x="34.9557%" y="1183.50"></text></g><g><title>isfree (2 samples, 0.02%)</title><rect x="34.7057%" y="1157" width="0.0214%" height="15" fill="rgb(245,83,25)"/><text x="34.9557%" y="1167.50"></text></g><g><title>isdalloct (2 samples, 0.02%)</title><rect x="34.7057%" y="1141" width="0.0214%" height="15" fill="rgb(214,205,45)"/><text x="34.9557%" y="1151.50"></text></g><g><title>arena_sdalloc (2 samples, 0.02%)</title><rect x="34.7057%" y="1125" width="0.0214%" height="15" fill="rgb(241,20,18)"/><text x="34.9557%" y="1135.50"></text></g><g><title>tcache_dalloc_small (2 samples, 0.02%)</title><rect x="34.7057%" y="1109" width="0.0214%" height="15" fill="rgb(232,163,23)"/><text x="34.9557%" y="1119.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (2 samples, 0.02%)</title><rect x="34.7057%" y="1093" width="0.0214%" height="15" fill="rgb(214,5,46)"/><text x="34.9557%" y="1103.50"></text></g><g><title>iealloc (2 samples, 0.02%)</title><rect x="34.7057%" y="1077" width="0.0214%" height="15" fill="rgb(229,78,17)"/><text x="34.9557%" y="1087.50"></text></g><g><title>rtree_extent_read (2 samples, 0.02%)</title><rect x="34.7057%" y="1061" width="0.0214%" height="15" fill="rgb(248,89,10)"/><text x="34.9557%" y="1071.50"></text></g><g><title>rtree_read (2 samples, 0.02%)</title><rect x="34.7057%" y="1045" width="0.0214%" height="15" fill="rgb(248,54,15)"/><text x="34.9557%" y="1055.50"></text></g><g><title>rtree_leaf_elm_lookup (2 samples, 0.02%)</title><rect x="34.7057%" y="1029" width="0.0214%" height="15" fill="rgb(223,116,6)"/><text x="34.9557%" y="1039.50"></text></g><g><title>__rg_dealloc (2 samples, 0.02%)</title><rect x="34.7271%" y="1077" width="0.0214%" height="15" fill="rgb(205,125,38)"/><text x="34.9771%" y="1087.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.01%)</title><rect x="34.7379%" y="1061" width="0.0107%" height="15" fill="rgb(251,78,38)"/><text x="34.9879%" y="1071.50"></text></g><g><title>_rjem_je_tcache_event_hard (1 samples, 0.01%)</title><rect x="34.7486%" y="1077" width="0.0107%" height="15" fill="rgb(253,78,28)"/><text x="34.9986%" y="1087.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.01%)</title><rect x="34.7486%" y="1061" width="0.0107%" height="15" fill="rgb(209,120,3)"/><text x="34.9986%" y="1071.50"></text></g><g><title>_rjem_je_extent_heap_remove (1 samples, 0.01%)</title><rect x="34.7486%" y="1045" width="0.0107%" height="15" fill="rgb(238,229,9)"/><text x="34.9986%" y="1055.50"></text></g><g><title>inallocx (1 samples, 0.01%)</title><rect x="34.7700%" y="1061" width="0.0107%" height="15" fill="rgb(253,159,18)"/><text x="35.0200%" y="1071.50"></text></g><g><title>sz_size2index (1 samples, 0.01%)</title><rect x="34.7807%" y="1013" width="0.0107%" height="15" fill="rgb(244,42,34)"/><text x="35.0307%" y="1023.50"></text></g><g><title>sz_size2index_lookup (1 samples, 0.01%)</title><rect x="34.7807%" y="997" width="0.0107%" height="15" fill="rgb(224,8,7)"/><text x="35.0307%" y="1007.50"></text></g><g><title>arena_bin_lower_slab (1 samples, 0.01%)</title><rect x="34.8236%" y="949" width="0.0107%" height="15" fill="rgb(210,201,45)"/><text x="35.0736%" y="959.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (3 samples, 0.03%)</title><rect x="34.8129%" y="981" width="0.0322%" height="15" fill="rgb(252,185,21)"/><text x="35.0629%" y="991.50"></text></g><g><title>arena_dalloc_bin_locked_impl (2 samples, 0.02%)</title><rect x="34.8236%" y="965" width="0.0214%" height="15" fill="rgb(223,131,1)"/><text x="35.0736%" y="975.50"></text></g><g><title>arena_dalloc_bin_slab (1 samples, 0.01%)</title><rect x="34.8344%" y="949" width="0.0107%" height="15" fill="rgb(245,141,16)"/><text x="35.0844%" y="959.50"></text></g><g><title>arena_slab_dalloc (1 samples, 0.01%)</title><rect x="34.8344%" y="933" width="0.0107%" height="15" fill="rgb(229,55,45)"/><text x="35.0844%" y="943.50"></text></g><g><title>arena_nactive_sub (1 samples, 0.01%)</title><rect x="34.8344%" y="917" width="0.0107%" height="15" fill="rgb(208,92,15)"/><text x="35.0844%" y="927.50"></text></g><g><title>atomic_fetch_sub_zu (1 samples, 0.01%)</title><rect x="34.8344%" y="901" width="0.0107%" height="15" fill="rgb(234,185,47)"/><text x="35.0844%" y="911.50"></text></g><g><title>extent_arena_get (1 samples, 0.01%)</title><rect x="34.8451%" y="981" width="0.0107%" height="15" fill="rgb(253,104,50)"/><text x="35.0951%" y="991.50"></text></g><g><title>atomic_load_p (1 samples, 0.01%)</title><rect x="34.8451%" y="965" width="0.0107%" height="15" fill="rgb(205,70,7)"/><text x="35.0951%" y="975.50"></text></g><g><title>iealloc (2 samples, 0.02%)</title><rect x="34.8558%" y="981" width="0.0214%" height="15" fill="rgb(240,178,43)"/><text x="35.1058%" y="991.50"></text></g><g><title>rtree_extent_read (2 samples, 0.02%)</title><rect x="34.8558%" y="965" width="0.0214%" height="15" fill="rgb(214,112,2)"/><text x="35.1058%" y="975.50"></text></g><g><title>rtree_read (2 samples, 0.02%)</title><rect x="34.8558%" y="949" width="0.0214%" height="15" fill="rgb(206,46,17)"/><text x="35.1058%" y="959.50"></text></g><g><title>rtree_leaf_elm_lookup (2 samples, 0.02%)</title><rect x="34.8558%" y="933" width="0.0214%" height="15" fill="rgb(225,220,16)"/><text x="35.1058%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (15 samples, 0.16%)</title><rect x="34.7271%" y="1157" width="0.1608%" height="15" fill="rgb(238,65,40)"/><text x="34.9771%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (15 samples, 0.16%)</title><rect x="34.7271%" y="1141" width="0.1608%" height="15" fill="rgb(230,151,21)"/><text x="34.9771%" y="1151.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.16%)</title><rect x="34.7271%" y="1125" width="0.1608%" height="15" fill="rgb(218,58,49)"/><text x="34.9771%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.16%)</title><rect x="34.7271%" y="1109" width="0.1608%" height="15" fill="rgb(219,179,14)"/><text x="34.9771%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.16%)</title><rect x="34.7271%" y="1093" width="0.1608%" height="15" fill="rgb(223,72,1)"/><text x="34.9771%" y="1103.50"></text></g><g><title>_rjem_sdallocx (12 samples, 0.13%)</title><rect x="34.7593%" y="1077" width="0.1287%" height="15" fill="rgb(238,126,10)"/><text x="35.0093%" y="1087.50"></text></g><g><title>isfree (10 samples, 0.11%)</title><rect x="34.7807%" y="1061" width="0.1072%" height="15" fill="rgb(224,206,38)"/><text x="35.0307%" y="1071.50"></text></g><g><title>isdalloct (10 samples, 0.11%)</title><rect x="34.7807%" y="1045" width="0.1072%" height="15" fill="rgb(212,201,54)"/><text x="35.0307%" y="1055.50"></text></g><g><title>arena_sdalloc (10 samples, 0.11%)</title><rect x="34.7807%" y="1029" width="0.1072%" height="15" fill="rgb(218,154,48)"/><text x="35.0307%" y="1039.50"></text></g><g><title>tcache_dalloc_small (9 samples, 0.10%)</title><rect x="34.7915%" y="1013" width="0.0965%" height="15" fill="rgb(232,93,24)"/><text x="35.0415%" y="1023.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (9 samples, 0.10%)</title><rect x="34.7915%" y="997" width="0.0965%" height="15" fill="rgb(245,30,21)"/><text x="35.0415%" y="1007.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.01%)</title><rect x="34.8772%" y="981" width="0.0107%" height="15" fill="rgb(242,148,29)"/><text x="35.1272%" y="991.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.01%)</title><rect x="34.8772%" y="965" width="0.0107%" height="15" fill="rgb(244,153,54)"/><text x="35.1272%" y="975.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.01%)</title><rect x="34.8772%" y="949" width="0.0107%" height="15" fill="rgb(252,87,22)"/><text x="35.1272%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Match&gt;&gt; (1 samples, 0.01%)</title><rect x="34.8880%" y="1157" width="0.0107%" height="15" fill="rgb(210,51,29)"/><text x="35.1380%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Match&gt;&gt; (1 samples, 0.01%)</title><rect x="34.8880%" y="1141" width="0.0107%" height="15" fill="rgb(242,136,47)"/><text x="35.1380%" y="1151.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="34.8880%" y="1125" width="0.0107%" height="15" fill="rgb(238,68,4)"/><text x="35.1380%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="34.8880%" y="1109" width="0.0107%" height="15" fill="rgb(242,161,30)"/><text x="35.1380%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::expr::ExprInstance&gt;&gt; (48 samples, 0.51%)</title><rect x="34.4055%" y="1237" width="0.5146%" height="15" fill="rgb(218,58,44)"/><text x="34.6555%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::expr::ExprInstance&gt; (29 samples, 0.31%)</title><rect x="34.6092%" y="1221" width="0.3109%" height="15" fill="rgb(252,125,32)"/><text x="34.8592%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::EPlus&gt; (21 samples, 0.23%)</title><rect x="34.6950%" y="1205" width="0.2252%" height="15" fill="rgb(219,178,0)"/><text x="34.9450%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::Par&gt;&gt; (21 samples, 0.23%)</title><rect x="34.6950%" y="1189" width="0.2252%" height="15" fill="rgb(213,152,7)"/><text x="34.9450%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (18 samples, 0.19%)</title><rect x="34.7271%" y="1173" width="0.1930%" height="15" fill="rgb(249,109,34)"/><text x="34.9771%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Receive&gt;&gt; (2 samples, 0.02%)</title><rect x="34.8987%" y="1157" width="0.0214%" height="15" fill="rgb(232,96,21)"/><text x="35.1487%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="34.8987%" y="1141" width="0.0214%" height="15" fill="rgb(228,27,39)"/><text x="35.1487%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Receive]&gt; (2 samples, 0.02%)</title><rect x="34.8987%" y="1125" width="0.0214%" height="15" fill="rgb(211,182,52)"/><text x="35.1487%" y="1135.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (6 samples, 0.06%)</title><rect x="34.9523%" y="1221" width="0.0643%" height="15" fill="rgb(234,178,38)"/><text x="35.2023%" y="1231.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.05%)</title><rect x="34.9630%" y="1205" width="0.0536%" height="15" fill="rgb(221,111,3)"/><text x="35.2130%" y="1215.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.09%)</title><rect x="35.0381%" y="1205" width="0.0858%" height="15" fill="rgb(228,175,21)"/><text x="35.2881%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (2 samples, 0.02%)</title><rect x="35.1238%" y="1205" width="0.0214%" height="15" fill="rgb(228,174,43)"/><text x="35.3738%" y="1215.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (35 samples, 0.38%)</title><rect x="35.0166%" y="1221" width="0.3753%" height="15" fill="rgb(211,191,0)"/><text x="35.2666%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (23 samples, 0.25%)</title><rect x="35.1453%" y="1205" width="0.2466%" height="15" fill="rgb(253,117,3)"/><text x="35.3953%" y="1215.50"></text></g><g><title>core::ptr::read (23 samples, 0.25%)</title><rect x="35.1453%" y="1189" width="0.2466%" height="15" fill="rgb(241,127,19)"/><text x="35.3953%" y="1199.50"></text></g><g><title>[libc-2.31.so] (23 samples, 0.25%)</title><rect x="35.1453%" y="1173" width="0.2466%" height="15" fill="rgb(218,103,12)"/><text x="35.3953%" y="1183.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_nested_expressions (302 samples, 3.24%)</title><rect x="32.2505%" y="1269" width="3.2379%" height="15" fill="rgb(236,214,43)"/><text x="32.5005%" y="1279.50">&lt;mo..</text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (144 samples, 1.54%)</title><rect x="33.9445%" y="1253" width="1.5439%" height="15" fill="rgb(244,144,19)"/><text x="34.1945%" y="1263.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::eval_eplus::&lt;impl rho_runtime::interpreter::reduce::eval_expression::ExprInstanceEvaluator&lt;S&gt; for model::rho_types::EPlus&gt;::evaluate (53 samples, 0.57%)</title><rect x="34.9201%" y="1237" width="0.5682%" height="15" fill="rgb(246,188,10)"/><text x="35.1701%" y="1247.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.10%)</title><rect x="35.3919%" y="1221" width="0.0965%" height="15" fill="rgb(212,193,33)"/><text x="35.6419%" y="1231.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (2 samples, 0.02%)</title><rect x="35.5098%" y="933" width="0.0214%" height="15" fill="rgb(241,51,29)"/><text x="35.7598%" y="943.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (2 samples, 0.02%)</title><rect x="35.5098%" y="917" width="0.0214%" height="15" fill="rgb(211,58,19)"/><text x="35.7598%" y="927.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.01%)</title><rect x="35.5205%" y="901" width="0.0107%" height="15" fill="rgb(229,111,26)"/><text x="35.7705%" y="911.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.01%)</title><rect x="35.5205%" y="885" width="0.0107%" height="15" fill="rgb(213,115,40)"/><text x="35.7705%" y="895.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.01%)</title><rect x="35.5205%" y="869" width="0.0107%" height="15" fill="rgb(209,56,44)"/><text x="35.7705%" y="879.50"></text></g><g><title>imalloc_no_sample (5 samples, 0.05%)</title><rect x="35.5098%" y="997" width="0.0536%" height="15" fill="rgb(230,108,32)"/><text x="35.7598%" y="1007.50"></text></g><g><title>iallocztm (5 samples, 0.05%)</title><rect x="35.5098%" y="981" width="0.0536%" height="15" fill="rgb(216,165,31)"/><text x="35.7598%" y="991.50"></text></g><g><title>arena_malloc (5 samples, 0.05%)</title><rect x="35.5098%" y="965" width="0.0536%" height="15" fill="rgb(218,122,21)"/><text x="35.7598%" y="975.50"></text></g><g><title>tcache_alloc_small (5 samples, 0.05%)</title><rect x="35.5098%" y="949" width="0.0536%" height="15" fill="rgb(223,224,47)"/><text x="35.7598%" y="959.50"></text></g><g><title>cache_bin_alloc_easy (3 samples, 0.03%)</title><rect x="35.5313%" y="933" width="0.0322%" height="15" fill="rgb(238,102,44)"/><text x="35.7813%" y="943.50"></text></g><g><title>sz_index2size (1 samples, 0.01%)</title><rect x="35.5634%" y="997" width="0.0107%" height="15" fill="rgb(236,46,40)"/><text x="35.8134%" y="1007.50"></text></g><g><title>sz_index2size_lookup (1 samples, 0.01%)</title><rect x="35.5634%" y="981" width="0.0107%" height="15" fill="rgb(247,202,50)"/><text x="35.8134%" y="991.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (9 samples, 0.10%)</title><rect x="35.4884%" y="1269" width="0.0965%" height="15" fill="rgb(209,99,20)"/><text x="35.7384%" y="1279.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (8 samples, 0.09%)</title><rect x="35.4991%" y="1253" width="0.0858%" height="15" fill="rgb(252,27,34)"/><text x="35.7491%" y="1263.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_var::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S,model::rho_types::Par&gt; for model::rho_types::Var&gt;::evaluate (8 samples, 0.09%)</title><rect x="35.4991%" y="1237" width="0.0858%" height="15" fill="rgb(215,206,23)"/><text x="35.7491%" y="1247.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (8 samples, 0.09%)</title><rect x="35.4991%" y="1221" width="0.0858%" height="15" fill="rgb(212,135,36)"/><text x="35.7491%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.09%)</title><rect x="35.4991%" y="1205" width="0.0858%" height="15" fill="rgb(240,189,1)"/><text x="35.7491%" y="1215.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.09%)</title><rect x="35.4991%" y="1189" width="0.0858%" height="15" fill="rgb(242,56,20)"/><text x="35.7491%" y="1199.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.09%)</title><rect x="35.4991%" y="1173" width="0.0858%" height="15" fill="rgb(247,132,33)"/><text x="35.7491%" y="1183.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.09%)</title><rect x="35.4991%" y="1157" width="0.0858%" height="15" fill="rgb(208,149,11)"/><text x="35.7491%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.09%)</title><rect x="35.4991%" y="1141" width="0.0858%" height="15" fill="rgb(211,33,11)"/><text x="35.7491%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.09%)</title><rect x="35.4991%" y="1125" width="0.0858%" height="15" fill="rgb(221,29,38)"/><text x="35.7491%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.09%)</title><rect x="35.4991%" y="1109" width="0.0858%" height="15" fill="rgb(206,182,49)"/><text x="35.7491%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.09%)</title><rect x="35.4991%" y="1093" width="0.0858%" height="15" fill="rgb(216,140,1)"/><text x="35.7491%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.09%)</title><rect x="35.4991%" y="1077" width="0.0858%" height="15" fill="rgb(232,57,40)"/><text x="35.7491%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.09%)</title><rect x="35.4991%" y="1061" width="0.0858%" height="15" fill="rgb(224,186,18)"/><text x="35.7491%" y="1071.50"></text></g><g><title>_rjem_mallocx (8 samples, 0.09%)</title><rect x="35.4991%" y="1045" width="0.0858%" height="15" fill="rgb(215,121,11)"/><text x="35.7491%" y="1055.50"></text></g><g><title>imalloc (8 samples, 0.09%)</title><rect x="35.4991%" y="1029" width="0.0858%" height="15" fill="rgb(245,147,10)"/><text x="35.7491%" y="1039.50"></text></g><g><title>imalloc_body (7 samples, 0.08%)</title><rect x="35.5098%" y="1013" width="0.0751%" height="15" fill="rgb(238,153,13)"/><text x="35.7598%" y="1023.50"></text></g><g><title>sz_size2index (1 samples, 0.01%)</title><rect x="35.5741%" y="997" width="0.0107%" height="15" fill="rgb(233,108,0)"/><text x="35.8241%" y="1007.50"></text></g><g><title>sz_size2index_lookup (1 samples, 0.01%)</title><rect x="35.5741%" y="981" width="0.0107%" height="15" fill="rgb(212,157,17)"/><text x="35.8241%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="35.5956%" y="581" width="0.0107%" height="15" fill="rgb(225,213,38)"/><text x="35.8456%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="35.5956%" y="565" width="0.0107%" height="15" fill="rgb(248,16,11)"/><text x="35.8456%" y="575.50"></text></g><g><title>&lt;rho_runtime::storage::TaggedContinuation as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="35.5849%" y="1269" width="0.0322%" height="15" fill="rgb(241,33,4)"/><text x="35.8349%" y="1279.50"></text></g><g><title>&lt;model::rho_types::ParWithRandom as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="35.5849%" y="1253" width="0.0322%" height="15" fill="rgb(222,26,43)"/><text x="35.8349%" y="1263.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="35.5849%" y="1237" width="0.0322%" height="15" fill="rgb(243,29,36)"/><text x="35.8349%" y="1247.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="35.5849%" y="1221" width="0.0322%" height="15" fill="rgb(241,9,27)"/><text x="35.8349%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="35.5849%" y="1205" width="0.0322%" height="15" fill="rgb(205,117,26)"/><text x="35.8349%" y="1215.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.03%)</title><rect x="35.5849%" y="1189" width="0.0322%" height="15" fill="rgb(209,80,39)"/><text x="35.8349%" y="1199.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.03%)</title><rect x="35.5849%" y="1173" width="0.0322%" height="15" fill="rgb(239,155,6)"/><text x="35.8349%" y="1183.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.03%)</title><rect x="35.5849%" y="1157" width="0.0322%" height="15" fill="rgb(212,104,12)"/><text x="35.8349%" y="1167.50"></text></g><g><title>&lt;model::rho_types::Match as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="35.5849%" y="1141" width="0.0322%" height="15" fill="rgb(234,204,3)"/><text x="35.8349%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="35.5849%" y="1125" width="0.0322%" height="15" fill="rgb(251,218,7)"/><text x="35.8349%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.03%)</title><rect x="35.5849%" y="1109" width="0.0322%" height="15" fill="rgb(221,81,32)"/><text x="35.8349%" y="1119.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.03%)</title><rect x="35.5849%" y="1093" width="0.0322%" height="15" fill="rgb(214,152,26)"/><text x="35.8349%" y="1103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.03%)</title><rect x="35.5849%" y="1077" width="0.0322%" height="15" fill="rgb(223,22,3)"/><text x="35.8349%" y="1087.50"></text></g><g><title>&lt;model::rho_types::MatchCase as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="35.5849%" y="1061" width="0.0322%" height="15" fill="rgb(207,174,7)"/><text x="35.8349%" y="1071.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="35.5849%" y="1045" width="0.0322%" height="15" fill="rgb(224,19,52)"/><text x="35.8349%" y="1055.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="35.5849%" y="1029" width="0.0322%" height="15" fill="rgb(228,24,14)"/><text x="35.8349%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="35.5849%" y="1013" width="0.0322%" height="15" fill="rgb(230,153,43)"/><text x="35.8349%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.03%)</title><rect x="35.5849%" y="997" width="0.0322%" height="15" fill="rgb(231,106,12)"/><text x="35.8349%" y="1007.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.03%)</title><rect x="35.5849%" y="981" width="0.0322%" height="15" fill="rgb(215,92,2)"/><text x="35.8349%" y="991.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.03%)</title><rect x="35.5849%" y="965" width="0.0322%" height="15" fill="rgb(249,143,25)"/><text x="35.8349%" y="975.50"></text></g><g><title>&lt;model::rho_types::Send as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="35.5849%" y="949" width="0.0322%" height="15" fill="rgb(252,7,35)"/><text x="35.8349%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="35.5849%" y="933" width="0.0322%" height="15" fill="rgb(216,69,40)"/><text x="35.8349%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.03%)</title><rect x="35.5849%" y="917" width="0.0322%" height="15" fill="rgb(240,36,33)"/><text x="35.8349%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.03%)</title><rect x="35.5849%" y="901" width="0.0322%" height="15" fill="rgb(231,128,14)"/><text x="35.8349%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.03%)</title><rect x="35.5849%" y="885" width="0.0322%" height="15" fill="rgb(245,143,14)"/><text x="35.8349%" y="895.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="35.5849%" y="869" width="0.0322%" height="15" fill="rgb(222,130,28)"/><text x="35.8349%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="35.5849%" y="853" width="0.0322%" height="15" fill="rgb(212,10,48)"/><text x="35.8349%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.03%)</title><rect x="35.5849%" y="837" width="0.0322%" height="15" fill="rgb(254,118,45)"/><text x="35.8349%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.03%)</title><rect x="35.5849%" y="821" width="0.0322%" height="15" fill="rgb(228,6,45)"/><text x="35.8349%" y="831.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.03%)</title><rect x="35.5849%" y="805" width="0.0322%" height="15" fill="rgb(241,18,35)"/><text x="35.8349%" y="815.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="35.5849%" y="789" width="0.0322%" height="15" fill="rgb(227,214,53)"/><text x="35.8349%" y="799.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="35.5849%" y="773" width="0.0322%" height="15" fill="rgb(224,107,51)"/><text x="35.8349%" y="783.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="35.5849%" y="757" width="0.0322%" height="15" fill="rgb(248,60,28)"/><text x="35.8349%" y="767.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="35.5849%" y="741" width="0.0322%" height="15" fill="rgb(249,101,23)"/><text x="35.8349%" y="751.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="35.5849%" y="725" width="0.0322%" height="15" fill="rgb(228,51,19)"/><text x="35.8349%" y="735.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="35.5849%" y="709" width="0.0322%" height="15" fill="rgb(213,20,6)"/><text x="35.8349%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="35.5849%" y="693" width="0.0322%" height="15" fill="rgb(212,124,10)"/><text x="35.8349%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="35.5956%" y="677" width="0.0214%" height="15" fill="rgb(248,3,40)"/><text x="35.8456%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="35.5956%" y="661" width="0.0214%" height="15" fill="rgb(223,178,23)"/><text x="35.8456%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="35.5956%" y="645" width="0.0214%" height="15" fill="rgb(240,132,45)"/><text x="35.8456%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="35.5956%" y="629" width="0.0214%" height="15" fill="rgb(245,164,36)"/><text x="35.8456%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="35.5956%" y="613" width="0.0214%" height="15" fill="rgb(231,188,53)"/><text x="35.8456%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="35.5956%" y="597" width="0.0214%" height="15" fill="rgb(237,198,39)"/><text x="35.8456%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (1 samples, 0.01%)</title><rect x="35.6063%" y="581" width="0.0107%" height="15" fill="rgb(223,120,35)"/><text x="35.8563%" y="591.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="35.6170%" y="1269" width="0.0107%" height="15" fill="rgb(253,107,49)"/><text x="35.8670%" y="1279.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="35.6170%" y="1253" width="0.0107%" height="15" fill="rgb(216,44,31)"/><text x="35.8670%" y="1263.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="35.6170%" y="1237" width="0.0107%" height="15" fill="rgb(253,87,21)"/><text x="35.8670%" y="1247.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="35.6277%" y="1269" width="0.0107%" height="15" fill="rgb(226,18,2)"/><text x="35.8777%" y="1279.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="35.6385%" y="1269" width="0.0322%" height="15" fill="rgb(216,8,46)"/><text x="35.8885%" y="1279.50"></text></g><g><title>tokio::runtime::task::harness::SchedulerView&lt;S&gt;::transition_to_terminal (1 samples, 0.01%)</title><rect x="35.6706%" y="917" width="0.0107%" height="15" fill="rgb(226,140,39)"/><text x="35.9206%" y="927.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::release (1 samples, 0.01%)</title><rect x="35.6706%" y="901" width="0.0107%" height="15" fill="rgb(221,194,54)"/><text x="35.9206%" y="911.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="35.6706%" y="885" width="0.0107%" height="15" fill="rgb(213,92,11)"/><text x="35.9206%" y="895.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::release::{{closure}} (1 samples, 0.01%)</title><rect x="35.6706%" y="869" width="0.0107%" height="15" fill="rgb(229,162,46)"/><text x="35.9206%" y="879.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::release (1 samples, 0.01%)</title><rect x="35.6706%" y="853" width="0.0107%" height="15" fill="rgb(214,111,36)"/><text x="35.9206%" y="863.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="35.6706%" y="837" width="0.0107%" height="15" fill="rgb(207,6,21)"/><text x="35.9206%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="35.6706%" y="821" width="0.0107%" height="15" fill="rgb(213,127,38)"/><text x="35.9206%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="35.6706%" y="805" width="0.0107%" height="15" fill="rgb(238,118,32)"/><text x="35.9206%" y="815.50"></text></g><g><title>tokio::runtime::thread_pool::worker::CURRENT::FOO::__getit (1 samples, 0.01%)</title><rect x="35.6706%" y="789" width="0.0107%" height="15" fill="rgb(240,139,39)"/><text x="35.9206%" y="799.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="35.6706%" y="773" width="0.0107%" height="15" fill="rgb(235,10,37)"/><text x="35.9206%" y="783.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="35.6706%" y="757" width="0.0107%" height="15" fill="rgb(249,171,38)"/><text x="35.9206%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="35.6706%" y="741" width="0.0107%" height="15" fill="rgb(242,144,32)"/><text x="35.9206%" y="751.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.02%)</title><rect x="35.6706%" y="1269" width="0.0214%" height="15" fill="rgb(217,117,21)"/><text x="35.9206%" y="1279.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (2 samples, 0.02%)</title><rect x="35.6706%" y="1253" width="0.0214%" height="15" fill="rgb(249,87,1)"/><text x="35.9206%" y="1263.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (2 samples, 0.02%)</title><rect x="35.6706%" y="1237" width="0.0214%" height="15" fill="rgb(248,196,48)"/><text x="35.9206%" y="1247.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2 samples, 0.02%)</title><rect x="35.6706%" y="1221" width="0.0214%" height="15" fill="rgb(251,206,33)"/><text x="35.9206%" y="1231.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (2 samples, 0.02%)</title><rect x="35.6706%" y="1205" width="0.0214%" height="15" fill="rgb(232,141,28)"/><text x="35.9206%" y="1215.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="35.6706%" y="1189" width="0.0214%" height="15" fill="rgb(209,167,14)"/><text x="35.9206%" y="1199.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (2 samples, 0.02%)</title><rect x="35.6706%" y="1173" width="0.0214%" height="15" fill="rgb(225,11,50)"/><text x="35.9206%" y="1183.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (2 samples, 0.02%)</title><rect x="35.6706%" y="1157" width="0.0214%" height="15" fill="rgb(209,50,20)"/><text x="35.9206%" y="1167.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (2 samples, 0.02%)</title><rect x="35.6706%" y="1141" width="0.0214%" height="15" fill="rgb(212,17,46)"/><text x="35.9206%" y="1151.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (2 samples, 0.02%)</title><rect x="35.6706%" y="1125" width="0.0214%" height="15" fill="rgb(216,101,39)"/><text x="35.9206%" y="1135.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (2 samples, 0.02%)</title><rect x="35.6706%" y="1109" width="0.0214%" height="15" fill="rgb(212,228,48)"/><text x="35.9206%" y="1119.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (2 samples, 0.02%)</title><rect x="35.6706%" y="1093" width="0.0214%" height="15" fill="rgb(250,6,50)"/><text x="35.9206%" y="1103.50"></text></g><g><title>tokio::coop::budget (2 samples, 0.02%)</title><rect x="35.6706%" y="1077" width="0.0214%" height="15" fill="rgb(250,160,48)"/><text x="35.9206%" y="1087.50"></text></g><g><title>tokio::coop::with_budget (2 samples, 0.02%)</title><rect x="35.6706%" y="1061" width="0.0214%" height="15" fill="rgb(244,216,33)"/><text x="35.9206%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="35.6706%" y="1045" width="0.0214%" height="15" fill="rgb(207,157,5)"/><text x="35.9206%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="35.6706%" y="1029" width="0.0214%" height="15" fill="rgb(228,199,8)"/><text x="35.9206%" y="1039.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (2 samples, 0.02%)</title><rect x="35.6706%" y="1013" width="0.0214%" height="15" fill="rgb(227,80,20)"/><text x="35.9206%" y="1023.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (2 samples, 0.02%)</title><rect x="35.6706%" y="997" width="0.0214%" height="15" fill="rgb(222,9,33)"/><text x="35.9206%" y="1007.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (2 samples, 0.02%)</title><rect x="35.6706%" y="981" width="0.0214%" height="15" fill="rgb(239,44,28)"/><text x="35.9206%" y="991.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (2 samples, 0.02%)</title><rect x="35.6706%" y="965" width="0.0214%" height="15" fill="rgb(249,187,43)"/><text x="35.9206%" y="975.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (2 samples, 0.02%)</title><rect x="35.6706%" y="949" width="0.0214%" height="15" fill="rgb(216,141,28)"/><text x="35.9206%" y="959.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (2 samples, 0.02%)</title><rect x="35.6706%" y="933" width="0.0214%" height="15" fill="rgb(230,154,53)"/><text x="35.9206%" y="943.50"></text></g><g><title>tokio::runtime::task::harness::transition_to_complete (1 samples, 0.01%)</title><rect x="35.6814%" y="917" width="0.0107%" height="15" fill="rgb(227,82,4)"/><text x="35.9314%" y="927.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (1 samples, 0.01%)</title><rect x="35.6814%" y="901" width="0.0107%" height="15" fill="rgb(220,107,16)"/><text x="35.9314%" y="911.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_ref (1 samples, 0.01%)</title><rect x="35.6814%" y="885" width="0.0107%" height="15" fill="rgb(207,187,2)"/><text x="35.9314%" y="895.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::schedule (1 samples, 0.01%)</title><rect x="35.6814%" y="869" width="0.0107%" height="15" fill="rgb(210,162,52)"/><text x="35.9314%" y="879.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="35.6814%" y="853" width="0.0107%" height="15" fill="rgb(217,216,49)"/><text x="35.9314%" y="863.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::schedule::{{closure}} (1 samples, 0.01%)</title><rect x="35.6814%" y="837" width="0.0107%" height="15" fill="rgb(218,146,49)"/><text x="35.9314%" y="847.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::schedule (1 samples, 0.01%)</title><rect x="35.6814%" y="821" width="0.0107%" height="15" fill="rgb(216,55,40)"/><text x="35.9314%" y="831.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (1 samples, 0.01%)</title><rect x="35.6814%" y="805" width="0.0107%" height="15" fill="rgb(208,196,21)"/><text x="35.9314%" y="815.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="35.6814%" y="789" width="0.0107%" height="15" fill="rgb(242,117,42)"/><text x="35.9314%" y="799.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (1 samples, 0.01%)</title><rect x="35.6814%" y="773" width="0.0107%" height="15" fill="rgb(210,11,23)"/><text x="35.9314%" y="783.50"></text></g><g><title>&lt;tokio::coop::RestoreOnPending as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="35.6921%" y="1269" width="0.0322%" height="15" fill="rgb(217,110,2)"/><text x="35.9421%" y="1279.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (1 samples, 0.01%)</title><rect x="35.7242%" y="1269" width="0.0107%" height="15" fill="rgb(229,77,54)"/><text x="35.9742%" y="1279.50"></text></g><g><title>[libc-2.31.so] (20 samples, 0.21%)</title><rect x="35.7350%" y="1173" width="0.2144%" height="15" fill="rgb(218,53,16)"/><text x="35.9850%" y="1183.50"></text></g><g><title>[libc-2.31.so] (33 samples, 0.35%)</title><rect x="35.9494%" y="1157" width="0.3538%" height="15" fill="rgb(215,38,13)"/><text x="36.1994%" y="1167.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (224 samples, 2.40%)</title><rect x="35.7350%" y="1269" width="2.4016%" height="15" fill="rgb(235,42,18)"/><text x="35.9850%" y="1279.50">&lt;t..</text></g><g><title>tokio::runtime::task::raw::try_read_output (224 samples, 2.40%)</title><rect x="35.7350%" y="1253" width="2.4016%" height="15" fill="rgb(219,66,54)"/><text x="35.9850%" y="1263.50">to..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::try_read_output (224 samples, 2.40%)</title><rect x="35.7350%" y="1237" width="2.4016%" height="15" fill="rgb(222,205,4)"/><text x="35.9850%" y="1247.50">to..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::take_output (224 samples, 2.40%)</title><rect x="35.7350%" y="1221" width="2.4016%" height="15" fill="rgb(227,213,46)"/><text x="35.9850%" y="1231.50">to..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (224 samples, 2.40%)</title><rect x="35.7350%" y="1205" width="2.4016%" height="15" fill="rgb(250,145,42)"/><text x="35.9850%" y="1215.50">to..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::take_output::{{closure}} (224 samples, 2.40%)</title><rect x="35.7350%" y="1189" width="2.4016%" height="15" fill="rgb(219,15,2)"/><text x="35.9850%" y="1199.50">to..</text></g><g><title>core::mem::replace (204 samples, 2.19%)</title><rect x="35.9494%" y="1173" width="2.1872%" height="15" fill="rgb(231,181,52)"/><text x="36.1994%" y="1183.50">c..</text></g><g><title>core::mem::swap (171 samples, 1.83%)</title><rect x="36.3032%" y="1157" width="1.8334%" height="15" fill="rgb(235,1,42)"/><text x="36.5532%" y="1167.50">c..</text></g><g><title>core::ptr::swap_nonoverlapping_one (171 samples, 1.83%)</title><rect x="36.3032%" y="1141" width="1.8334%" height="15" fill="rgb(249,88,27)"/><text x="36.5532%" y="1151.50">c..</text></g><g><title>core::ptr::swap_nonoverlapping (171 samples, 1.83%)</title><rect x="36.3032%" y="1125" width="1.8334%" height="15" fill="rgb(235,145,16)"/><text x="36.5532%" y="1135.50">c..</text></g><g><title>core::ptr::swap_nonoverlapping_bytes (171 samples, 1.83%)</title><rect x="36.3032%" y="1109" width="1.8334%" height="15" fill="rgb(237,114,19)"/><text x="36.5532%" y="1119.50">c..</text></g><g><title>core::intrinsics::copy_nonoverlapping (163 samples, 1.75%)</title><rect x="36.3890%" y="1093" width="1.7476%" height="15" fill="rgb(238,51,50)"/><text x="36.6390%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="38.1259%" y="1077" width="0.0107%" height="15" fill="rgb(205,194,25)"/><text x="38.3759%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="38.1259%" y="1061" width="0.0107%" height="15" fill="rgb(215,203,17)"/><text x="38.3759%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="38.1259%" y="1045" width="0.0107%" height="15" fill="rgb(233,112,49)"/><text x="38.3759%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="38.1259%" y="1029" width="0.0107%" height="15" fill="rgb(241,130,26)"/><text x="38.3759%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="38.1259%" y="1013" width="0.0107%" height="15" fill="rgb(252,223,19)"/><text x="38.3759%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="38.1259%" y="997" width="0.0107%" height="15" fill="rgb(211,95,25)"/><text x="38.3759%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="38.1259%" y="981" width="0.0107%" height="15" fill="rgb(251,182,27)"/><text x="38.3759%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="38.1259%" y="965" width="0.0107%" height="15" fill="rgb(238,24,4)"/><text x="38.3759%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="38.1259%" y="949" width="0.0107%" height="15" fill="rgb(224,220,25)"/><text x="38.3759%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="38.1259%" y="933" width="0.0107%" height="15" fill="rgb(239,133,26)"/><text x="38.3759%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="38.1259%" y="917" width="0.0107%" height="15" fill="rgb(211,94,48)"/><text x="38.3759%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="38.1259%" y="901" width="0.0107%" height="15" fill="rgb(239,87,6)"/><text x="38.3759%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="38.1259%" y="885" width="0.0107%" height="15" fill="rgb(227,62,0)"/><text x="38.3759%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="38.1259%" y="869" width="0.0107%" height="15" fill="rgb(211,226,4)"/><text x="38.3759%" y="879.50"></text></g><g><title>[libc-2.31.so] (34 samples, 0.36%)</title><rect x="38.1795%" y="1253" width="0.3645%" height="15" fill="rgb(253,38,52)"/><text x="38.4295%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="38.5440%" y="1253" width="0.0107%" height="15" fill="rgb(229,126,40)"/><text x="38.7940%" y="1263.50"></text></g><g><title>sz_size2index (1 samples, 0.01%)</title><rect x="38.5655%" y="1141" width="0.0107%" height="15" fill="rgb(229,165,44)"/><text x="38.8155%" y="1151.50"></text></g><g><title>sz_size2index_lookup (1 samples, 0.01%)</title><rect x="38.5655%" y="1125" width="0.0107%" height="15" fill="rgb(247,95,47)"/><text x="38.8155%" y="1135.50"></text></g><g><title>extent_ad_comp (2 samples, 0.02%)</title><rect x="38.6405%" y="1045" width="0.0214%" height="15" fill="rgb(216,140,30)"/><text x="38.8905%" y="1055.50"></text></g><g><title>arena_bin_lower_slab (4 samples, 0.04%)</title><rect x="38.6405%" y="1077" width="0.0429%" height="15" fill="rgb(246,214,8)"/><text x="38.8905%" y="1087.50"></text></g><g><title>extent_snad_comp (4 samples, 0.04%)</title><rect x="38.6405%" y="1061" width="0.0429%" height="15" fill="rgb(227,224,15)"/><text x="38.8905%" y="1071.50"></text></g><g><title>extent_sn_comp (2 samples, 0.02%)</title><rect x="38.6619%" y="1045" width="0.0214%" height="15" fill="rgb(233,175,4)"/><text x="38.9119%" y="1055.50"></text></g><g><title>extent_sn_get (1 samples, 0.01%)</title><rect x="38.6727%" y="1029" width="0.0107%" height="15" fill="rgb(221,66,45)"/><text x="38.9227%" y="1039.50"></text></g><g><title>_rjem_je_arena_extents_dirty_dalloc (1 samples, 0.01%)</title><rect x="38.6834%" y="1045" width="0.0107%" height="15" fill="rgb(221,178,18)"/><text x="38.9334%" y="1055.50"></text></g><g><title>extent_record (1 samples, 0.01%)</title><rect x="38.6834%" y="1029" width="0.0107%" height="15" fill="rgb(213,81,29)"/><text x="38.9334%" y="1039.50"></text></g><g><title>extent_deactivate_locked (1 samples, 0.01%)</title><rect x="38.6834%" y="1013" width="0.0107%" height="15" fill="rgb(220,89,49)"/><text x="38.9334%" y="1023.50"></text></g><g><title>extents_insert_locked (1 samples, 0.01%)</title><rect x="38.6834%" y="997" width="0.0107%" height="15" fill="rgb(227,60,33)"/><text x="38.9334%" y="1007.50"></text></g><g><title>bitmap_unset (1 samples, 0.01%)</title><rect x="38.6834%" y="981" width="0.0107%" height="15" fill="rgb(205,113,12)"/><text x="38.9334%" y="991.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (7 samples, 0.08%)</title><rect x="38.6298%" y="1109" width="0.0751%" height="15" fill="rgb(211,32,1)"/><text x="38.8798%" y="1119.50"></text></g><g><title>arena_dalloc_bin_locked_impl (7 samples, 0.08%)</title><rect x="38.6298%" y="1093" width="0.0751%" height="15" fill="rgb(246,2,12)"/><text x="38.8798%" y="1103.50"></text></g><g><title>arena_dalloc_bin_slab (2 samples, 0.02%)</title><rect x="38.6834%" y="1077" width="0.0214%" height="15" fill="rgb(243,37,27)"/><text x="38.9334%" y="1087.50"></text></g><g><title>arena_slab_dalloc (2 samples, 0.02%)</title><rect x="38.6834%" y="1061" width="0.0214%" height="15" fill="rgb(248,211,31)"/><text x="38.9334%" y="1071.50"></text></g><g><title>arena_nactive_sub (1 samples, 0.01%)</title><rect x="38.6941%" y="1045" width="0.0107%" height="15" fill="rgb(242,146,47)"/><text x="38.9441%" y="1055.50"></text></g><g><title>atomic_fetch_sub_zu (1 samples, 0.01%)</title><rect x="38.6941%" y="1029" width="0.0107%" height="15" fill="rgb(206,70,20)"/><text x="38.9441%" y="1039.50"></text></g><g><title>arena_decay_ticks (1 samples, 0.01%)</title><rect x="38.7048%" y="1109" width="0.0107%" height="15" fill="rgb(215,10,51)"/><text x="38.9548%" y="1119.50"></text></g><g><title>ticker_ticks (1 samples, 0.01%)</title><rect x="38.7048%" y="1093" width="0.0107%" height="15" fill="rgb(243,178,53)"/><text x="38.9548%" y="1103.50"></text></g><g><title>extent_arena_get (2 samples, 0.02%)</title><rect x="38.7156%" y="1109" width="0.0214%" height="15" fill="rgb(233,221,20)"/><text x="38.9656%" y="1119.50"></text></g><g><title>atomic_load_p (2 samples, 0.02%)</title><rect x="38.7156%" y="1093" width="0.0214%" height="15" fill="rgb(218,95,35)"/><text x="38.9656%" y="1103.50"></text></g><g><title>malloc_mutex_lock (3 samples, 0.03%)</title><rect x="38.7370%" y="1109" width="0.0322%" height="15" fill="rgb(229,13,5)"/><text x="38.9870%" y="1119.50"></text></g><g><title>malloc_mutex_trylock_final (3 samples, 0.03%)</title><rect x="38.7370%" y="1093" width="0.0322%" height="15" fill="rgb(252,164,30)"/><text x="38.9870%" y="1103.50"></text></g><g><title>__GI___pthread_mutex_trylock (3 samples, 0.03%)</title><rect x="38.7370%" y="1077" width="0.0322%" height="15" fill="rgb(232,68,36)"/><text x="38.9870%" y="1087.50"></text></g><g><title>_rjem_sdallocx (21 samples, 0.23%)</title><rect x="38.5547%" y="1205" width="0.2252%" height="15" fill="rgb(219,59,54)"/><text x="38.8047%" y="1215.50"></text></g><g><title>isfree (20 samples, 0.21%)</title><rect x="38.5655%" y="1189" width="0.2144%" height="15" fill="rgb(250,92,33)"/><text x="38.8155%" y="1199.50"></text></g><g><title>isdalloct (20 samples, 0.21%)</title><rect x="38.5655%" y="1173" width="0.2144%" height="15" fill="rgb(229,162,54)"/><text x="38.8155%" y="1183.50"></text></g><g><title>arena_sdalloc (20 samples, 0.21%)</title><rect x="38.5655%" y="1157" width="0.2144%" height="15" fill="rgb(244,114,52)"/><text x="38.8155%" y="1167.50"></text></g><g><title>tcache_dalloc_small (19 samples, 0.20%)</title><rect x="38.5762%" y="1141" width="0.2037%" height="15" fill="rgb(212,211,43)"/><text x="38.8262%" y="1151.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (17 samples, 0.18%)</title><rect x="38.5976%" y="1125" width="0.1823%" height="15" fill="rgb(226,147,8)"/><text x="38.8476%" y="1135.50"></text></g><g><title>malloc_mutex_unlock (1 samples, 0.01%)</title><rect x="38.7692%" y="1109" width="0.0107%" height="15" fill="rgb(226,23,13)"/><text x="39.0192%" y="1119.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="38.7692%" y="1093" width="0.0107%" height="15" fill="rgb(240,63,4)"/><text x="39.0192%" y="1103.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.01%)</title><rect x="38.7799%" y="1205" width="0.0107%" height="15" fill="rgb(221,1,32)"/><text x="39.0299%" y="1215.50"></text></g><g><title>core::mem::drop (1 samples, 0.01%)</title><rect x="38.7799%" y="1189" width="0.0107%" height="15" fill="rgb(242,117,10)"/><text x="39.0299%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;tokio::sync::oneshot::Inner&lt;rho_runtime::storage::transit::Transit&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="38.7799%" y="1173" width="0.0107%" height="15" fill="rgb(249,172,44)"/><text x="39.0299%" y="1183.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="38.7799%" y="1157" width="0.0107%" height="15" fill="rgb(244,46,45)"/><text x="39.0299%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="38.7799%" y="1141" width="0.0107%" height="15" fill="rgb(206,43,17)"/><text x="39.0299%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="38.7799%" y="1125" width="0.0107%" height="15" fill="rgb(239,218,39)"/><text x="39.0299%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;rho_runtime::storage::transit::Transit&gt;&gt;&gt;&gt; (29 samples, 0.31%)</title><rect x="38.5547%" y="1253" width="0.3109%" height="15" fill="rgb(208,169,54)"/><text x="38.8047%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;rho_runtime::storage::transit::Transit&gt;&gt;&gt; (29 samples, 0.31%)</title><rect x="38.5547%" y="1237" width="0.3109%" height="15" fill="rgb(247,25,42)"/><text x="38.8047%" y="1247.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.31%)</title><rect x="38.5547%" y="1221" width="0.3109%" height="15" fill="rgb(226,23,31)"/><text x="38.8047%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (7 samples, 0.08%)</title><rect x="38.7906%" y="1205" width="0.0751%" height="15" fill="rgb(247,16,28)"/><text x="39.0406%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_sub (7 samples, 0.08%)</title><rect x="38.7906%" y="1189" width="0.0751%" height="15" fill="rgb(231,147,38)"/><text x="39.0406%" y="1199.50"></text></g><g><title>[libc-2.31.so] (20 samples, 0.21%)</title><rect x="38.8871%" y="1237" width="0.2144%" height="15" fill="rgb(253,81,48)"/><text x="39.1371%" y="1247.50"></text></g><g><title>tokio::coop::CURRENT::__getit (1 samples, 0.01%)</title><rect x="39.1015%" y="1189" width="0.0107%" height="15" fill="rgb(249,222,43)"/><text x="39.3515%" y="1199.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="39.1015%" y="1173" width="0.0107%" height="15" fill="rgb(221,3,27)"/><text x="39.3515%" y="1183.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="39.1015%" y="1157" width="0.0107%" height="15" fill="rgb(228,180,5)"/><text x="39.3515%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="39.1015%" y="1141" width="0.0107%" height="15" fill="rgb(227,131,42)"/><text x="39.3515%" y="1151.50"></text></g><g><title>tokio::coop::poll_proceed (37 samples, 0.40%)</title><rect x="39.1015%" y="1237" width="0.3967%" height="15" fill="rgb(212,3,39)"/><text x="39.3515%" y="1247.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (37 samples, 0.40%)</title><rect x="39.1015%" y="1221" width="0.3967%" height="15" fill="rgb(226,45,5)"/><text x="39.3515%" y="1231.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (37 samples, 0.40%)</title><rect x="39.1015%" y="1205" width="0.3967%" height="15" fill="rgb(215,167,45)"/><text x="39.3515%" y="1215.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (36 samples, 0.39%)</title><rect x="39.1123%" y="1189" width="0.3860%" height="15" fill="rgb(250,218,53)"/><text x="39.3623%" y="1199.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (36 samples, 0.39%)</title><rect x="39.1123%" y="1173" width="0.3860%" height="15" fill="rgb(207,140,0)"/><text x="39.3623%" y="1183.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (36 samples, 0.39%)</title><rect x="39.1123%" y="1157" width="0.3860%" height="15" fill="rgb(238,133,51)"/><text x="39.3623%" y="1167.50"></text></g><g><title>core::mem::replace (36 samples, 0.39%)</title><rect x="39.1123%" y="1141" width="0.3860%" height="15" fill="rgb(218,203,53)"/><text x="39.3623%" y="1151.50"></text></g><g><title>core::mem::swap (36 samples, 0.39%)</title><rect x="39.1123%" y="1125" width="0.3860%" height="15" fill="rgb(226,184,25)"/><text x="39.3623%" y="1135.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (36 samples, 0.39%)</title><rect x="39.1123%" y="1109" width="0.3860%" height="15" fill="rgb(231,121,21)"/><text x="39.3623%" y="1119.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (36 samples, 0.39%)</title><rect x="39.1123%" y="1093" width="0.3860%" height="15" fill="rgb(251,14,34)"/><text x="39.3623%" y="1103.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::consume_value (76 samples, 0.81%)</title><rect x="39.4982%" y="1237" width="0.8148%" height="15" fill="rgb(249,193,11)"/><text x="39.7482%" y="1247.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (76 samples, 0.81%)</title><rect x="39.4982%" y="1221" width="0.8148%" height="15" fill="rgb(220,172,37)"/><text x="39.7482%" y="1231.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::consume_value::{{closure}} (76 samples, 0.81%)</title><rect x="39.4982%" y="1205" width="0.8148%" height="15" fill="rgb(231,229,43)"/><text x="39.7482%" y="1215.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (76 samples, 0.81%)</title><rect x="39.4982%" y="1189" width="0.8148%" height="15" fill="rgb(250,161,5)"/><text x="39.7482%" y="1199.50"></text></g><g><title>core::mem::take (76 samples, 0.81%)</title><rect x="39.4982%" y="1173" width="0.8148%" height="15" fill="rgb(218,225,18)"/><text x="39.7482%" y="1183.50"></text></g><g><title>core::mem::replace (76 samples, 0.81%)</title><rect x="39.4982%" y="1157" width="0.8148%" height="15" fill="rgb(245,45,42)"/><text x="39.7482%" y="1167.50"></text></g><g><title>core::mem::swap (76 samples, 0.81%)</title><rect x="39.4982%" y="1141" width="0.8148%" height="15" fill="rgb(211,115,1)"/><text x="39.7482%" y="1151.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (76 samples, 0.81%)</title><rect x="39.4982%" y="1125" width="0.8148%" height="15" fill="rgb(248,133,52)"/><text x="39.7482%" y="1135.50"></text></g><g><title>core::ptr::swap_nonoverlapping (76 samples, 0.81%)</title><rect x="39.4982%" y="1109" width="0.8148%" height="15" fill="rgb(238,100,21)"/><text x="39.7482%" y="1119.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (76 samples, 0.81%)</title><rect x="39.4982%" y="1093" width="0.8148%" height="15" fill="rgb(247,144,11)"/><text x="39.7482%" y="1103.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (73 samples, 0.78%)</title><rect x="39.5304%" y="1077" width="0.7827%" height="15" fill="rgb(206,164,16)"/><text x="39.7804%" y="1087.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (205 samples, 2.20%)</title><rect x="38.1366%" y="1269" width="2.1979%" height="15" fill="rgb(222,34,3)"/><text x="38.3866%" y="1279.50">&lt;..</text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::poll_recv (137 samples, 1.47%)</title><rect x="38.8657%" y="1253" width="1.4689%" height="15" fill="rgb(248,82,4)"/><text x="39.1157%" y="1263.50"></text></g><g><title>tokio::sync::oneshot::State::load (2 samples, 0.02%)</title><rect x="40.3131%" y="1237" width="0.0214%" height="15" fill="rgb(228,81,46)"/><text x="40.5631%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.02%)</title><rect x="40.3131%" y="1221" width="0.0214%" height="15" fill="rgb(227,67,47)"/><text x="40.5631%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="40.3131%" y="1205" width="0.0214%" height="15" fill="rgb(215,93,53)"/><text x="40.5631%" y="1215.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.11%)</title><rect x="40.3345%" y="1269" width="0.1072%" height="15" fill="rgb(248,194,39)"/><text x="40.5845%" y="1279.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="40.4096%" y="1253" width="0.0322%" height="15" fill="rgb(215,5,19)"/><text x="40.6596%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="40.4203%" y="1237" width="0.0214%" height="15" fill="rgb(226,215,51)"/><text x="40.6703%" y="1247.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="40.4310%" y="1221" width="0.0107%" height="15" fill="rgb(225,56,26)"/><text x="40.6810%" y="1231.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="40.4310%" y="1205" width="0.0107%" height="15" fill="rgb(222,75,29)"/><text x="40.6810%" y="1215.50"></text></g><g><title>[rho_runtime] (1 samples, 0.01%)</title><rect x="40.4417%" y="1269" width="0.0107%" height="15" fill="rgb(236,139,6)"/><text x="40.6917%" y="1279.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="40.4417%" y="1253" width="0.0107%" height="15" fill="rgb(223,137,36)"/><text x="40.6917%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="40.4524%" y="1269" width="0.0107%" height="15" fill="rgb(226,99,2)"/><text x="40.7024%" y="1279.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="40.4524%" y="1253" width="0.0107%" height="15" fill="rgb(206,133,23)"/><text x="40.7024%" y="1263.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="40.4524%" y="1237" width="0.0107%" height="15" fill="rgb(243,173,15)"/><text x="40.7024%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="40.4524%" y="1221" width="0.0107%" height="15" fill="rgb(228,69,28)"/><text x="40.7024%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="40.4524%" y="1205" width="0.0107%" height="15" fill="rgb(212,51,22)"/><text x="40.7024%" y="1215.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="40.4524%" y="1189" width="0.0107%" height="15" fill="rgb(227,113,0)"/><text x="40.7024%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="40.4524%" y="1173" width="0.0107%" height="15" fill="rgb(252,84,27)"/><text x="40.7024%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="40.4524%" y="1157" width="0.0107%" height="15" fill="rgb(223,145,39)"/><text x="40.7024%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="40.4524%" y="1141" width="0.0107%" height="15" fill="rgb(239,219,30)"/><text x="40.7024%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="40.4524%" y="1125" width="0.0107%" height="15" fill="rgb(224,196,39)"/><text x="40.7024%" y="1135.50"></text></g><g><title>__clock_gettime (2 samples, 0.02%)</title><rect x="40.4632%" y="1269" width="0.0214%" height="15" fill="rgb(205,35,43)"/><text x="40.7132%" y="1279.50"></text></g><g><title>__rg_alloc (3 samples, 0.03%)</title><rect x="40.4846%" y="1269" width="0.0322%" height="15" fill="rgb(228,201,21)"/><text x="40.7346%" y="1279.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.01%)</title><rect x="40.5061%" y="1253" width="0.0107%" height="15" fill="rgb(237,118,16)"/><text x="40.7561%" y="1263.50"></text></g><g><title>__rg_dealloc (4 samples, 0.04%)</title><rect x="40.5168%" y="1269" width="0.0429%" height="15" fill="rgb(241,17,19)"/><text x="40.7668%" y="1279.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (4 samples, 0.04%)</title><rect x="40.5168%" y="1253" width="0.0429%" height="15" fill="rgb(214,10,25)"/><text x="40.7668%" y="1263.50"></text></g><g><title>__rust_probestack (8 samples, 0.09%)</title><rect x="40.5597%" y="1269" width="0.0858%" height="15" fill="rgb(238,37,29)"/><text x="40.8097%" y="1279.50"></text></g><g><title>__sched_yield (3 samples, 0.03%)</title><rect x="40.6454%" y="1269" width="0.0322%" height="15" fill="rgb(253,83,25)"/><text x="40.8954%" y="1279.50"></text></g><g><title>_rjem_mallocx (1 samples, 0.01%)</title><rect x="40.6776%" y="1269" width="0.0107%" height="15" fill="rgb(234,192,12)"/><text x="40.9276%" y="1279.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.02%)</title><rect x="40.6883%" y="1269" width="0.0214%" height="15" fill="rgb(241,216,45)"/><text x="40.9383%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="40.7098%" y="1269" width="0.0107%" height="15" fill="rgb(242,22,33)"/><text x="40.9598%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.01%)</title><rect x="40.7098%" y="1253" width="0.0107%" height="15" fill="rgb(231,105,49)"/><text x="40.9598%" y="1263.50"></text></g><g><title>arena_slab_alloc (2 samples, 0.02%)</title><rect x="40.7527%" y="629" width="0.0214%" height="15" fill="rgb(218,204,15)"/><text x="41.0027%" y="639.50"></text></g><g><title>_rjem_je_extents_alloc (2 samples, 0.02%)</title><rect x="40.7527%" y="613" width="0.0214%" height="15" fill="rgb(235,138,41)"/><text x="41.0027%" y="623.50"></text></g><g><title>extent_recycle (2 samples, 0.02%)</title><rect x="40.7527%" y="597" width="0.0214%" height="15" fill="rgb(246,0,9)"/><text x="41.0027%" y="607.50"></text></g><g><title>extent_recycle_extract (1 samples, 0.01%)</title><rect x="40.7634%" y="581" width="0.0107%" height="15" fill="rgb(210,74,4)"/><text x="41.0134%" y="591.50"></text></g><g><title>extent_activate_locked (1 samples, 0.01%)</title><rect x="40.7634%" y="565" width="0.0107%" height="15" fill="rgb(250,60,41)"/><text x="41.0134%" y="575.50"></text></g><g><title>extents_remove_locked (1 samples, 0.01%)</title><rect x="40.7634%" y="549" width="0.0107%" height="15" fill="rgb(220,115,12)"/><text x="41.0134%" y="559.50"></text></g><g><title>_rjem_je_extent_heap_remove (1 samples, 0.01%)</title><rect x="40.7634%" y="533" width="0.0107%" height="15" fill="rgb(237,100,13)"/><text x="41.0134%" y="543.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="40.7527%" y="1221" width="0.0322%" height="15" fill="rgb(213,55,26)"/><text x="41.0027%" y="1231.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="40.7527%" y="1205" width="0.0322%" height="15" fill="rgb(216,17,4)"/><text x="41.0027%" y="1215.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="40.7527%" y="1189" width="0.0322%" height="15" fill="rgb(220,153,47)"/><text x="41.0027%" y="1199.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="40.7527%" y="1173" width="0.0322%" height="15" fill="rgb(215,131,9)"/><text x="41.0027%" y="1183.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="40.7527%" y="1157" width="0.0322%" height="15" fill="rgb(233,46,42)"/><text x="41.0027%" y="1167.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="40.7527%" y="1141" width="0.0322%" height="15" fill="rgb(226,86,7)"/><text x="41.0027%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="40.7527%" y="1125" width="0.0322%" height="15" fill="rgb(239,226,21)"/><text x="41.0027%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.03%)</title><rect x="40.7527%" y="1109" width="0.0322%" height="15" fill="rgb(244,137,22)"/><text x="41.0027%" y="1119.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.03%)</title><rect x="40.7527%" y="1093" width="0.0322%" height="15" fill="rgb(211,139,35)"/><text x="41.0027%" y="1103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.03%)</title><rect x="40.7527%" y="1077" width="0.0322%" height="15" fill="rgb(214,62,50)"/><text x="41.0027%" y="1087.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="40.7527%" y="1061" width="0.0322%" height="15" fill="rgb(212,113,44)"/><text x="41.0027%" y="1071.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="40.7527%" y="1045" width="0.0322%" height="15" fill="rgb(226,150,43)"/><text x="41.0027%" y="1055.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="40.7527%" y="1029" width="0.0322%" height="15" fill="rgb(250,71,37)"/><text x="41.0027%" y="1039.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="40.7527%" y="1013" width="0.0322%" height="15" fill="rgb(219,76,19)"/><text x="41.0027%" y="1023.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="40.7527%" y="997" width="0.0322%" height="15" fill="rgb(250,39,11)"/><text x="41.0027%" y="1007.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="40.7527%" y="981" width="0.0322%" height="15" fill="rgb(230,64,31)"/><text x="41.0027%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="40.7527%" y="965" width="0.0322%" height="15" fill="rgb(208,222,23)"/><text x="41.0027%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.03%)</title><rect x="40.7527%" y="949" width="0.0322%" height="15" fill="rgb(227,125,18)"/><text x="41.0027%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.03%)</title><rect x="40.7527%" y="933" width="0.0322%" height="15" fill="rgb(234,210,9)"/><text x="41.0027%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.03%)</title><rect x="40.7527%" y="917" width="0.0322%" height="15" fill="rgb(217,127,24)"/><text x="41.0027%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="40.7527%" y="901" width="0.0322%" height="15" fill="rgb(239,141,48)"/><text x="41.0027%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="40.7527%" y="885" width="0.0322%" height="15" fill="rgb(227,109,8)"/><text x="41.0027%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.03%)</title><rect x="40.7527%" y="869" width="0.0322%" height="15" fill="rgb(235,184,23)"/><text x="41.0027%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.03%)</title><rect x="40.7527%" y="853" width="0.0322%" height="15" fill="rgb(227,226,48)"/><text x="41.0027%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.03%)</title><rect x="40.7527%" y="837" width="0.0322%" height="15" fill="rgb(206,150,11)"/><text x="41.0027%" y="847.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.03%)</title><rect x="40.7527%" y="821" width="0.0322%" height="15" fill="rgb(254,2,33)"/><text x="41.0027%" y="831.50"></text></g><g><title>_rjem_mallocx (3 samples, 0.03%)</title><rect x="40.7527%" y="805" width="0.0322%" height="15" fill="rgb(243,160,20)"/><text x="41.0027%" y="815.50"></text></g><g><title>imalloc (3 samples, 0.03%)</title><rect x="40.7527%" y="789" width="0.0322%" height="15" fill="rgb(218,208,30)"/><text x="41.0027%" y="799.50"></text></g><g><title>imalloc_body (3 samples, 0.03%)</title><rect x="40.7527%" y="773" width="0.0322%" height="15" fill="rgb(224,120,49)"/><text x="41.0027%" y="783.50"></text></g><g><title>imalloc_no_sample (3 samples, 0.03%)</title><rect x="40.7527%" y="757" width="0.0322%" height="15" fill="rgb(246,12,2)"/><text x="41.0027%" y="767.50"></text></g><g><title>iallocztm (3 samples, 0.03%)</title><rect x="40.7527%" y="741" width="0.0322%" height="15" fill="rgb(236,117,3)"/><text x="41.0027%" y="751.50"></text></g><g><title>arena_malloc (3 samples, 0.03%)</title><rect x="40.7527%" y="725" width="0.0322%" height="15" fill="rgb(216,128,52)"/><text x="41.0027%" y="735.50"></text></g><g><title>tcache_alloc_small (3 samples, 0.03%)</title><rect x="40.7527%" y="709" width="0.0322%" height="15" fill="rgb(246,145,19)"/><text x="41.0027%" y="719.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (3 samples, 0.03%)</title><rect x="40.7527%" y="693" width="0.0322%" height="15" fill="rgb(222,11,46)"/><text x="41.0027%" y="703.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (3 samples, 0.03%)</title><rect x="40.7527%" y="677" width="0.0322%" height="15" fill="rgb(245,82,36)"/><text x="41.0027%" y="687.50"></text></g><g><title>arena_bin_malloc_hard (3 samples, 0.03%)</title><rect x="40.7527%" y="661" width="0.0322%" height="15" fill="rgb(250,73,51)"/><text x="41.0027%" y="671.50"></text></g><g><title>arena_bin_nonfull_slab_get (3 samples, 0.03%)</title><rect x="40.7527%" y="645" width="0.0322%" height="15" fill="rgb(221,189,23)"/><text x="41.0027%" y="655.50"></text></g><g><title>malloc_mutex_unlock (1 samples, 0.01%)</title><rect x="40.7741%" y="629" width="0.0107%" height="15" fill="rgb(210,33,7)"/><text x="41.0241%" y="639.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="40.7741%" y="613" width="0.0107%" height="15" fill="rgb(210,107,22)"/><text x="41.0241%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="40.7848%" y="821" width="0.0107%" height="15" fill="rgb(222,116,37)"/><text x="41.0348%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="40.7848%" y="805" width="0.0107%" height="15" fill="rgb(254,17,48)"/><text x="41.0348%" y="815.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="40.7848%" y="789" width="0.0107%" height="15" fill="rgb(224,36,32)"/><text x="41.0348%" y="799.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.08%)</title><rect x="40.8384%" y="805" width="0.0751%" height="15" fill="rgb(232,90,46)"/><text x="41.0884%" y="815.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="40.8813%" y="789" width="0.0322%" height="15" fill="rgb(241,66,40)"/><text x="41.1313%" y="799.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (12 samples, 0.13%)</title><rect x="40.7955%" y="821" width="0.1287%" height="15" fill="rgb(249,184,29)"/><text x="41.0455%" y="831.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="40.9135%" y="805" width="0.0107%" height="15" fill="rgb(231,181,1)"/><text x="41.1635%" y="815.50"></text></g><g><title>imalloc_body (1 samples, 0.01%)</title><rect x="40.9242%" y="693" width="0.0107%" height="15" fill="rgb(224,94,2)"/><text x="41.1742%" y="703.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.01%)</title><rect x="40.9242%" y="677" width="0.0107%" height="15" fill="rgb(229,170,15)"/><text x="41.1742%" y="687.50"></text></g><g><title>iallocztm (1 samples, 0.01%)</title><rect x="40.9242%" y="661" width="0.0107%" height="15" fill="rgb(240,127,35)"/><text x="41.1742%" y="671.50"></text></g><g><title>arena_malloc (1 samples, 0.01%)</title><rect x="40.9242%" y="645" width="0.0107%" height="15" fill="rgb(248,196,34)"/><text x="41.1742%" y="655.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.01%)</title><rect x="40.9242%" y="629" width="0.0107%" height="15" fill="rgb(236,137,7)"/><text x="41.1742%" y="639.50"></text></g><g><title>tcache_event (1 samples, 0.01%)</title><rect x="40.9242%" y="613" width="0.0107%" height="15" fill="rgb(235,127,16)"/><text x="41.1742%" y="623.50"></text></g><g><title>ticker_tick (1 samples, 0.01%)</title><rect x="40.9242%" y="597" width="0.0107%" height="15" fill="rgb(250,192,54)"/><text x="41.1742%" y="607.50"></text></g><g><title>ticker_ticks (1 samples, 0.01%)</title><rect x="40.9242%" y="581" width="0.0107%" height="15" fill="rgb(218,98,20)"/><text x="41.1742%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="40.9242%" y="821" width="0.0322%" height="15" fill="rgb(230,176,47)"/><text x="41.1742%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="40.9242%" y="805" width="0.0322%" height="15" fill="rgb(244,2,33)"/><text x="41.1742%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.03%)</title><rect x="40.9242%" y="789" width="0.0322%" height="15" fill="rgb(231,100,17)"/><text x="41.1742%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.03%)</title><rect x="40.9242%" y="773" width="0.0322%" height="15" fill="rgb(245,23,12)"/><text x="41.1742%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.03%)</title><rect x="40.9242%" y="757" width="0.0322%" height="15" fill="rgb(249,55,22)"/><text x="41.1742%" y="767.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.03%)</title><rect x="40.9242%" y="741" width="0.0322%" height="15" fill="rgb(207,134,9)"/><text x="41.1742%" y="751.50"></text></g><g><title>_rjem_mallocx (3 samples, 0.03%)</title><rect x="40.9242%" y="725" width="0.0322%" height="15" fill="rgb(218,134,0)"/><text x="41.1742%" y="735.50"></text></g><g><title>imalloc (3 samples, 0.03%)</title><rect x="40.9242%" y="709" width="0.0322%" height="15" fill="rgb(213,212,33)"/><text x="41.1742%" y="719.50"></text></g><g><title>tsd_fetch (2 samples, 0.02%)</title><rect x="40.9349%" y="693" width="0.0214%" height="15" fill="rgb(252,106,18)"/><text x="41.1849%" y="703.50"></text></g><g><title>tsd_fetch_impl (2 samples, 0.02%)</title><rect x="40.9349%" y="677" width="0.0214%" height="15" fill="rgb(208,126,42)"/><text x="41.1849%" y="687.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (4 samples, 0.04%)</title><rect x="40.9564%" y="821" width="0.0429%" height="15" fill="rgb(246,175,29)"/><text x="41.2064%" y="831.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="40.9778%" y="805" width="0.0214%" height="15" fill="rgb(215,13,50)"/><text x="41.2278%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (27 samples, 0.29%)</title><rect x="40.7205%" y="1269" width="0.2895%" height="15" fill="rgb(216,172,15)"/><text x="40.9705%" y="1279.50"></text></g><g><title>alloc::slice::hack::to_vec (24 samples, 0.26%)</title><rect x="40.7527%" y="1253" width="0.2573%" height="15" fill="rgb(212,103,13)"/><text x="41.0027%" y="1263.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (24 samples, 0.26%)</title><rect x="40.7527%" y="1237" width="0.2573%" height="15" fill="rgb(231,171,36)"/><text x="41.0027%" y="1247.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (21 samples, 0.23%)</title><rect x="40.7848%" y="1221" width="0.2252%" height="15" fill="rgb(250,123,20)"/><text x="41.0348%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (21 samples, 0.23%)</title><rect x="40.7848%" y="1205" width="0.2252%" height="15" fill="rgb(212,53,50)"/><text x="41.0348%" y="1215.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (21 samples, 0.23%)</title><rect x="40.7848%" y="1189" width="0.2252%" height="15" fill="rgb(243,54,12)"/><text x="41.0348%" y="1199.50"></text></g><g><title>alloc::slice::hack::to_vec (21 samples, 0.23%)</title><rect x="40.7848%" y="1173" width="0.2252%" height="15" fill="rgb(234,101,34)"/><text x="41.0348%" y="1183.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (21 samples, 0.23%)</title><rect x="40.7848%" y="1157" width="0.2252%" height="15" fill="rgb(254,67,22)"/><text x="41.0348%" y="1167.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (21 samples, 0.23%)</title><rect x="40.7848%" y="1141" width="0.2252%" height="15" fill="rgb(250,35,47)"/><text x="41.0348%" y="1151.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (21 samples, 0.23%)</title><rect x="40.7848%" y="1125" width="0.2252%" height="15" fill="rgb(226,126,38)"/><text x="41.0348%" y="1135.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (21 samples, 0.23%)</title><rect x="40.7848%" y="1109" width="0.2252%" height="15" fill="rgb(216,138,53)"/><text x="41.0348%" y="1119.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (21 samples, 0.23%)</title><rect x="40.7848%" y="1093" width="0.2252%" height="15" fill="rgb(246,199,43)"/><text x="41.0348%" y="1103.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (21 samples, 0.23%)</title><rect x="40.7848%" y="1077" width="0.2252%" height="15" fill="rgb(232,125,11)"/><text x="41.0348%" y="1087.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (21 samples, 0.23%)</title><rect x="40.7848%" y="1061" width="0.2252%" height="15" fill="rgb(218,219,45)"/><text x="41.0348%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (21 samples, 0.23%)</title><rect x="40.7848%" y="1045" width="0.2252%" height="15" fill="rgb(216,102,54)"/><text x="41.0348%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (21 samples, 0.23%)</title><rect x="40.7848%" y="1029" width="0.2252%" height="15" fill="rgb(250,228,7)"/><text x="41.0348%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (21 samples, 0.23%)</title><rect x="40.7848%" y="1013" width="0.2252%" height="15" fill="rgb(226,125,25)"/><text x="41.0348%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (21 samples, 0.23%)</title><rect x="40.7848%" y="997" width="0.2252%" height="15" fill="rgb(224,165,27)"/><text x="41.0348%" y="1007.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (21 samples, 0.23%)</title><rect x="40.7848%" y="981" width="0.2252%" height="15" fill="rgb(233,86,3)"/><text x="41.0348%" y="991.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (21 samples, 0.23%)</title><rect x="40.7848%" y="965" width="0.2252%" height="15" fill="rgb(228,116,20)"/><text x="41.0348%" y="975.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (21 samples, 0.23%)</title><rect x="40.7848%" y="949" width="0.2252%" height="15" fill="rgb(209,192,17)"/><text x="41.0348%" y="959.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (21 samples, 0.23%)</title><rect x="40.7848%" y="933" width="0.2252%" height="15" fill="rgb(224,88,34)"/><text x="41.0348%" y="943.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (21 samples, 0.23%)</title><rect x="40.7848%" y="917" width="0.2252%" height="15" fill="rgb(233,38,6)"/><text x="41.0348%" y="927.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (21 samples, 0.23%)</title><rect x="40.7848%" y="901" width="0.2252%" height="15" fill="rgb(212,59,30)"/><text x="41.0348%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (21 samples, 0.23%)</title><rect x="40.7848%" y="885" width="0.2252%" height="15" fill="rgb(213,80,3)"/><text x="41.0348%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (21 samples, 0.23%)</title><rect x="40.7848%" y="869" width="0.2252%" height="15" fill="rgb(251,178,7)"/><text x="41.0348%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (21 samples, 0.23%)</title><rect x="40.7848%" y="853" width="0.2252%" height="15" fill="rgb(213,154,26)"/><text x="41.0348%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (21 samples, 0.23%)</title><rect x="40.7848%" y="837" width="0.2252%" height="15" fill="rgb(238,165,49)"/><text x="41.0348%" y="847.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.01%)</title><rect x="40.9992%" y="821" width="0.0107%" height="15" fill="rgb(248,91,46)"/><text x="41.2492%" y="831.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="40.9992%" y="805" width="0.0107%" height="15" fill="rgb(244,21,52)"/><text x="41.2492%" y="815.50"></text></g><g><title>alloc::slice::merge_sort (1 samples, 0.01%)</title><rect x="41.0100%" y="1269" width="0.0107%" height="15" fill="rgb(247,122,20)"/><text x="41.2600%" y="1279.50"></text></g><g><title>blake3::ChunkState::update (8 samples, 0.09%)</title><rect x="41.0207%" y="1269" width="0.0858%" height="15" fill="rgb(218,27,9)"/><text x="41.2707%" y="1279.50"></text></g><g><title>blake3::ChunkState::fill_buf (5 samples, 0.05%)</title><rect x="41.0529%" y="1253" width="0.0536%" height="15" fill="rgb(246,7,6)"/><text x="41.3029%" y="1263.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (5 samples, 0.05%)</title><rect x="41.0529%" y="1237" width="0.0536%" height="15" fill="rgb(227,135,54)"/><text x="41.3029%" y="1247.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.05%)</title><rect x="41.0529%" y="1221" width="0.0536%" height="15" fill="rgb(247,14,11)"/><text x="41.3029%" y="1231.50"></text></g><g><title>blake3::Hasher::merge_cv_stack (1 samples, 0.01%)</title><rect x="41.1065%" y="1269" width="0.0107%" height="15" fill="rgb(206,149,34)"/><text x="41.3565%" y="1279.50"></text></g><g><title>blake3::Hasher::update (5 samples, 0.05%)</title><rect x="41.1172%" y="1269" width="0.0536%" height="15" fill="rgb(227,228,4)"/><text x="41.3672%" y="1279.50"></text></g><g><title>blake3::Hasher::update_with_join (2 samples, 0.02%)</title><rect x="41.1494%" y="1253" width="0.0214%" height="15" fill="rgb(238,218,28)"/><text x="41.3994%" y="1263.50"></text></g><g><title>constant_time_eq::constant_time_ne_32 (1 samples, 0.01%)</title><rect x="41.1708%" y="1269" width="0.0107%" height="15" fill="rgb(252,86,40)"/><text x="41.4208%" y="1279.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (2 samples, 0.02%)</title><rect x="41.1815%" y="1269" width="0.0214%" height="15" fill="rgb(251,225,11)"/><text x="41.4315%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Expr&gt; (4 samples, 0.04%)</title><rect x="41.2030%" y="1269" width="0.0429%" height="15" fill="rgb(206,46,49)"/><text x="41.4530%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::expr::ExprInstance&gt;&gt; (4 samples, 0.04%)</title><rect x="41.2030%" y="1253" width="0.0429%" height="15" fill="rgb(245,128,24)"/><text x="41.4530%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (2 samples, 0.02%)</title><rect x="41.2887%" y="1253" width="0.0214%" height="15" fill="rgb(219,177,34)"/><text x="41.5387%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="41.2887%" y="1237" width="0.0214%" height="15" fill="rgb(218,60,48)"/><text x="41.5387%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Expr]&gt; (2 samples, 0.02%)</title><rect x="41.2887%" y="1221" width="0.0214%" height="15" fill="rgb(221,11,5)"/><text x="41.5387%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::GUnforgeable&gt;&gt; (1 samples, 0.01%)</title><rect x="41.3102%" y="1253" width="0.0107%" height="15" fill="rgb(220,148,13)"/><text x="41.5602%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="41.3102%" y="1237" width="0.0107%" height="15" fill="rgb(210,16,3)"/><text x="41.5602%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::GUnforgeable]&gt; (1 samples, 0.01%)</title><rect x="41.3102%" y="1221" width="0.0107%" height="15" fill="rgb(236,80,2)"/><text x="41.5602%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::GUnforgeable&gt; (1 samples, 0.01%)</title><rect x="41.3102%" y="1205" width="0.0107%" height="15" fill="rgb(239,129,19)"/><text x="41.5602%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::g_unforgeable::UnfInstance&gt;&gt; (1 samples, 0.01%)</title><rect x="41.3102%" y="1189" width="0.0107%" height="15" fill="rgb(220,106,35)"/><text x="41.5602%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::g_unforgeable::UnfInstance&gt; (1 samples, 0.01%)</title><rect x="41.3102%" y="1173" width="0.0107%" height="15" fill="rgb(252,139,45)"/><text x="41.5602%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::GPrivate&gt; (1 samples, 0.01%)</title><rect x="41.3102%" y="1157" width="0.0107%" height="15" fill="rgb(229,8,36)"/><text x="41.5602%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (1 samples, 0.01%)</title><rect x="41.3102%" y="1141" width="0.0107%" height="15" fill="rgb(230,126,33)"/><text x="41.5602%" y="1151.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="41.3102%" y="1125" width="0.0107%" height="15" fill="rgb(239,140,21)"/><text x="41.5602%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (8 samples, 0.09%)</title><rect x="41.2458%" y="1269" width="0.0858%" height="15" fill="rgb(254,104,9)"/><text x="41.4958%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::bitset::BitSet&gt;&gt; (1 samples, 0.01%)</title><rect x="41.3209%" y="1253" width="0.0107%" height="15" fill="rgb(239,52,14)"/><text x="41.5709%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::bitset::BitSet&gt; (1 samples, 0.01%)</title><rect x="41.3209%" y="1237" width="0.0107%" height="15" fill="rgb(208,227,44)"/><text x="41.5709%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;bit_vec::BitVec&gt; (1 samples, 0.01%)</title><rect x="41.3209%" y="1221" width="0.0107%" height="15" fill="rgb(246,18,19)"/><text x="41.5709%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u32&gt;&gt; (1 samples, 0.01%)</title><rect x="41.3209%" y="1205" width="0.0107%" height="15" fill="rgb(235,228,25)"/><text x="41.5709%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u32&gt;&gt; (1 samples, 0.01%)</title><rect x="41.3209%" y="1189" width="0.0107%" height="15" fill="rgb(240,156,20)"/><text x="41.5709%" y="1199.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="41.3209%" y="1173" width="0.0107%" height="15" fill="rgb(224,8,20)"/><text x="41.5709%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="41.3209%" y="1157" width="0.0107%" height="15" fill="rgb(214,12,52)"/><text x="41.5709%" y="1167.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="41.3209%" y="1141" width="0.0107%" height="15" fill="rgb(211,220,47)"/><text x="41.5709%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::expr::ExprInstance&gt; (3 samples, 0.03%)</title><rect x="41.3316%" y="1269" width="0.0322%" height="15" fill="rgb(250,173,5)"/><text x="41.5816%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;core::option::Option&lt;rho_runtime::storage::transit::Transit&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="41.3638%" y="1269" width="0.0107%" height="15" fill="rgb(250,125,52)"/><text x="41.6138%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Send&gt;::{{closure}}&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="41.3745%" y="1269" width="0.0107%" height="15" fill="rgb(209,133,18)"/><text x="41.6245%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_join_double::{{closure}}&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="41.3852%" y="1269" width="0.0107%" height="15" fill="rgb(216,173,22)"/><text x="41.6352%" y="1279.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::push (1 samples, 0.01%)</title><rect x="41.3959%" y="1269" width="0.0107%" height="15" fill="rgb(205,3,22)"/><text x="41.6459%" y="1279.50"></text></g><g><title>jemallocator::layout_to_flags (3 samples, 0.03%)</title><rect x="41.4067%" y="1269" width="0.0322%" height="15" fill="rgb(248,22,20)"/><text x="41.6567%" y="1279.50"></text></g><g><title>model::rho_types::Par::append_expr (2 samples, 0.02%)</title><rect x="41.4388%" y="1269" width="0.0214%" height="15" fill="rgb(233,6,29)"/><text x="41.6888%" y="1279.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (5 samples, 0.05%)</title><rect x="41.4603%" y="1269" width="0.0536%" height="15" fill="rgb(240,22,54)"/><text x="41.7103%" y="1279.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (2 samples, 0.02%)</title><rect x="41.5139%" y="1269" width="0.0214%" height="15" fill="rgb(231,133,32)"/><text x="41.7639%" y="1279.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (2 samples, 0.02%)</title><rect x="41.5353%" y="1269" width="0.0214%" height="15" fill="rgb(248,193,4)"/><text x="41.7853%" y="1279.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="41.5997%" y="1237" width="0.0322%" height="15" fill="rgb(211,178,46)"/><text x="41.8497%" y="1247.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (6 samples, 0.06%)</title><rect x="41.5782%" y="1253" width="0.0643%" height="15" fill="rgb(224,5,42)"/><text x="41.8282%" y="1263.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::set_len (1 samples, 0.01%)</title><rect x="41.6318%" y="1237" width="0.0107%" height="15" fill="rgb(239,176,25)"/><text x="41.8818%" y="1247.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.10%)</title><rect x="41.6425%" y="1253" width="0.0965%" height="15" fill="rgb(245,187,50)"/><text x="41.8925%" y="1263.50"></text></g><g><title>isfree (2 samples, 0.02%)</title><rect x="41.7390%" y="1237" width="0.0214%" height="15" fill="rgb(248,24,15)"/><text x="41.9890%" y="1247.50"></text></g><g><title>isdalloct (2 samples, 0.02%)</title><rect x="41.7390%" y="1221" width="0.0214%" height="15" fill="rgb(205,166,13)"/><text x="41.9890%" y="1231.50"></text></g><g><title>arena_sdalloc (2 samples, 0.02%)</title><rect x="41.7390%" y="1205" width="0.0214%" height="15" fill="rgb(208,114,23)"/><text x="41.9890%" y="1215.50"></text></g><g><title>tcache_dalloc_small (2 samples, 0.02%)</title><rect x="41.7390%" y="1189" width="0.0214%" height="15" fill="rgb(239,127,18)"/><text x="41.9890%" y="1199.50"></text></g><g><title>tcache_small_bin_get (1 samples, 0.01%)</title><rect x="41.7498%" y="1173" width="0.0107%" height="15" fill="rgb(219,154,28)"/><text x="41.9998%" y="1183.50"></text></g><g><title>_rjem_sdallocx (3 samples, 0.03%)</title><rect x="41.7390%" y="1253" width="0.0322%" height="15" fill="rgb(225,157,23)"/><text x="41.9890%" y="1263.50"></text></g><g><title>tsd_fetch (1 samples, 0.01%)</title><rect x="41.7605%" y="1237" width="0.0107%" height="15" fill="rgb(219,8,6)"/><text x="42.0105%" y="1247.50"></text></g><g><title>tsd_fetch_impl (1 samples, 0.01%)</title><rect x="41.7605%" y="1221" width="0.0107%" height="15" fill="rgb(212,47,6)"/><text x="42.0105%" y="1231.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.10%)</title><rect x="41.7926%" y="1173" width="0.0965%" height="15" fill="rgb(224,190,4)"/><text x="42.0426%" y="1183.50"></text></g><g><title>core::ptr::read (9 samples, 0.10%)</title><rect x="41.7926%" y="1157" width="0.0965%" height="15" fill="rgb(239,183,29)"/><text x="42.0426%" y="1167.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.10%)</title><rect x="41.7926%" y="1141" width="0.0965%" height="15" fill="rgb(213,57,7)"/><text x="42.0426%" y="1151.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="41.8891%" y="1125" width="0.0107%" height="15" fill="rgb(216,148,1)"/><text x="42.1391%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="41.8891%" y="1173" width="0.0214%" height="15" fill="rgb(236,182,29)"/><text x="42.1391%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (2 samples, 0.02%)</title><rect x="41.8891%" y="1157" width="0.0214%" height="15" fill="rgb(244,120,48)"/><text x="42.1391%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="41.8891%" y="1141" width="0.0214%" height="15" fill="rgb(206,71,34)"/><text x="42.1391%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="41.8999%" y="1125" width="0.0107%" height="15" fill="rgb(242,32,6)"/><text x="42.1499%" y="1135.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="41.8999%" y="1109" width="0.0107%" height="15" fill="rgb(241,35,3)"/><text x="42.1499%" y="1119.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::handle_comm_events::{{closure}} (1 samples, 0.01%)</title><rect x="41.8999%" y="1093" width="0.0107%" height="15" fill="rgb(222,62,19)"/><text x="42.1499%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (1 samples, 0.01%)</title><rect x="41.8999%" y="1077" width="0.0107%" height="15" fill="rgb(223,110,41)"/><text x="42.1499%" y="1087.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="41.8999%" y="1061" width="0.0107%" height="15" fill="rgb(208,224,4)"/><text x="42.1499%" y="1071.50"></text></g><g><title>__rg_dealloc (1 samples, 0.01%)</title><rect x="41.9320%" y="1029" width="0.0107%" height="15" fill="rgb(241,137,19)"/><text x="42.1820%" y="1039.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.01%)</title><rect x="41.9320%" y="1013" width="0.0107%" height="15" fill="rgb(244,24,17)"/><text x="42.1820%" y="1023.50"></text></g><g><title>inallocx (1 samples, 0.01%)</title><rect x="41.9427%" y="1013" width="0.0107%" height="15" fill="rgb(245,178,49)"/><text x="42.1927%" y="1023.50"></text></g><g><title>sz_s2u (1 samples, 0.01%)</title><rect x="41.9427%" y="997" width="0.0107%" height="15" fill="rgb(219,160,38)"/><text x="42.1927%" y="1007.50"></text></g><g><title>sz_s2u_lookup (1 samples, 0.01%)</title><rect x="41.9427%" y="981" width="0.0107%" height="15" fill="rgb(228,137,14)"/><text x="42.1927%" y="991.50"></text></g><g><title>sz_size2index_lookup (1 samples, 0.01%)</title><rect x="41.9427%" y="965" width="0.0107%" height="15" fill="rgb(237,134,11)"/><text x="42.1927%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.18%)</title><rect x="41.7926%" y="1205" width="0.1823%" height="15" fill="rgb(211,126,44)"/><text x="42.0426%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.18%)</title><rect x="41.7926%" y="1189" width="0.1823%" height="15" fill="rgb(226,171,33)"/><text x="42.0426%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::into_iter::IntoIter&lt;model::rho_types::Par&gt;&gt;&gt; (6 samples, 0.06%)</title><rect x="41.9106%" y="1173" width="0.0643%" height="15" fill="rgb(253,99,13)"/><text x="42.1606%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;model::rho_types::Par&gt;&gt; (4 samples, 0.04%)</title><rect x="41.9320%" y="1157" width="0.0429%" height="15" fill="rgb(244,48,7)"/><text x="42.1820%" y="1167.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="41.9320%" y="1141" width="0.0429%" height="15" fill="rgb(244,217,54)"/><text x="42.1820%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;model::rho_types::Par,alloc::alloc::Global&gt;&gt; (4 samples, 0.04%)</title><rect x="41.9320%" y="1125" width="0.0429%" height="15" fill="rgb(224,15,18)"/><text x="42.1820%" y="1135.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="41.9320%" y="1109" width="0.0429%" height="15" fill="rgb(244,99,12)"/><text x="42.1820%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Par&gt;&gt; (4 samples, 0.04%)</title><rect x="41.9320%" y="1093" width="0.0429%" height="15" fill="rgb(233,226,8)"/><text x="42.1820%" y="1103.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="41.9320%" y="1077" width="0.0429%" height="15" fill="rgb(229,211,3)"/><text x="42.1820%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.04%)</title><rect x="41.9320%" y="1061" width="0.0429%" height="15" fill="rgb(216,140,21)"/><text x="42.1820%" y="1071.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.04%)</title><rect x="41.9320%" y="1045" width="0.0429%" height="15" fill="rgb(234,122,30)"/><text x="42.1820%" y="1055.50"></text></g><g><title>_rjem_sdallocx (3 samples, 0.03%)</title><rect x="41.9427%" y="1029" width="0.0322%" height="15" fill="rgb(236,25,46)"/><text x="42.1927%" y="1039.50"></text></g><g><title>isfree (2 samples, 0.02%)</title><rect x="41.9535%" y="1013" width="0.0214%" height="15" fill="rgb(217,52,54)"/><text x="42.2035%" y="1023.50"></text></g><g><title>isdalloct (2 samples, 0.02%)</title><rect x="41.9535%" y="997" width="0.0214%" height="15" fill="rgb(222,29,26)"/><text x="42.2035%" y="1007.50"></text></g><g><title>arena_sdalloc (2 samples, 0.02%)</title><rect x="41.9535%" y="981" width="0.0214%" height="15" fill="rgb(216,177,29)"/><text x="42.2035%" y="991.50"></text></g><g><title>tcache_dalloc_small (2 samples, 0.02%)</title><rect x="41.9535%" y="965" width="0.0214%" height="15" fill="rgb(247,136,51)"/><text x="42.2035%" y="975.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.01%)</title><rect x="41.9642%" y="949" width="0.0107%" height="15" fill="rgb(231,47,47)"/><text x="42.2142%" y="959.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (1 samples, 0.01%)</title><rect x="41.9642%" y="933" width="0.0107%" height="15" fill="rgb(211,192,36)"/><text x="42.2142%" y="943.50"></text></g><g><title>arena_dalloc_bin_locked_impl (1 samples, 0.01%)</title><rect x="41.9642%" y="917" width="0.0107%" height="15" fill="rgb(229,156,32)"/><text x="42.2142%" y="927.50"></text></g><g><title>arena_bin_lower_slab (1 samples, 0.01%)</title><rect x="41.9642%" y="901" width="0.0107%" height="15" fill="rgb(248,213,20)"/><text x="42.2142%" y="911.50"></text></g><g><title>extent_snad_comp (1 samples, 0.01%)</title><rect x="41.9642%" y="885" width="0.0107%" height="15" fill="rgb(217,64,7)"/><text x="42.2142%" y="895.50"></text></g><g><title>extent_sn_comp (1 samples, 0.01%)</title><rect x="41.9642%" y="869" width="0.0107%" height="15" fill="rgb(232,142,8)"/><text x="42.2142%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.01%)</title><rect x="41.9749%" y="1205" width="0.0107%" height="15" fill="rgb(224,92,44)"/><text x="42.2249%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.01%)</title><rect x="41.9749%" y="1189" width="0.0107%" height="15" fill="rgb(214,169,17)"/><text x="42.2249%" y="1199.50"></text></g><g><title>core::num::&lt;impl usize&gt;::saturating_add (1 samples, 0.01%)</title><rect x="41.9749%" y="1173" width="0.0107%" height="15" fill="rgb(210,59,37)"/><text x="42.2249%" y="1183.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="41.9856%" y="1205" width="0.0107%" height="15" fill="rgb(214,116,48)"/><text x="42.2356%" y="1215.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (25 samples, 0.27%)</title><rect x="41.7712%" y="1221" width="0.2680%" height="15" fill="rgb(244,191,6)"/><text x="42.0212%" y="1231.50"></text></g><g><title>core::ptr::write (4 samples, 0.04%)</title><rect x="41.9964%" y="1205" width="0.0429%" height="15" fill="rgb(241,50,52)"/><text x="42.2464%" y="1215.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.04%)</title><rect x="41.9964%" y="1189" width="0.0429%" height="15" fill="rgb(236,75,39)"/><text x="42.2464%" y="1199.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (26 samples, 0.28%)</title><rect x="41.7712%" y="1237" width="0.2788%" height="15" fill="rgb(236,99,0)"/><text x="42.0212%" y="1247.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="42.0392%" y="1221" width="0.0107%" height="15" fill="rgb(207,202,15)"/><text x="42.2892%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (27 samples, 0.29%)</title><rect x="41.7712%" y="1253" width="0.2895%" height="15" fill="rgb(233,207,14)"/><text x="42.0212%" y="1263.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="42.0500%" y="1237" width="0.0107%" height="15" fill="rgb(226,27,51)"/><text x="42.3000%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Bundle&gt;&gt; (1 samples, 0.01%)</title><rect x="42.0607%" y="1237" width="0.0107%" height="15" fill="rgb(206,104,42)"/><text x="42.3107%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="42.0607%" y="1221" width="0.0107%" height="15" fill="rgb(212,225,4)"/><text x="42.3107%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (1 samples, 0.01%)</title><rect x="42.0714%" y="1237" width="0.0107%" height="15" fill="rgb(233,96,42)"/><text x="42.3214%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="42.0714%" y="1221" width="0.0107%" height="15" fill="rgb(229,21,32)"/><text x="42.3214%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Expr]&gt; (1 samples, 0.01%)</title><rect x="42.0714%" y="1205" width="0.0107%" height="15" fill="rgb(226,216,24)"/><text x="42.3214%" y="1215.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="42.0821%" y="1157" width="0.0107%" height="15" fill="rgb(221,163,17)"/><text x="42.3321%" y="1167.50"></text></g><g><title>sz_size2index (1 samples, 0.01%)</title><rect x="42.0928%" y="1093" width="0.0107%" height="15" fill="rgb(216,216,42)"/><text x="42.3428%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Match&gt;&gt; (3 samples, 0.03%)</title><rect x="42.0821%" y="1237" width="0.0322%" height="15" fill="rgb(240,118,7)"/><text x="42.3321%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Match&gt;&gt; (3 samples, 0.03%)</title><rect x="42.0821%" y="1221" width="0.0322%" height="15" fill="rgb(221,67,37)"/><text x="42.3321%" y="1231.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="42.0821%" y="1205" width="0.0322%" height="15" fill="rgb(241,32,44)"/><text x="42.3321%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.03%)</title><rect x="42.0821%" y="1189" width="0.0322%" height="15" fill="rgb(235,204,43)"/><text x="42.3321%" y="1199.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.03%)</title><rect x="42.0821%" y="1173" width="0.0322%" height="15" fill="rgb(213,116,10)"/><text x="42.3321%" y="1183.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.02%)</title><rect x="42.0928%" y="1157" width="0.0214%" height="15" fill="rgb(239,15,48)"/><text x="42.3428%" y="1167.50"></text></g><g><title>isfree (2 samples, 0.02%)</title><rect x="42.0928%" y="1141" width="0.0214%" height="15" fill="rgb(207,123,36)"/><text x="42.3428%" y="1151.50"></text></g><g><title>isdalloct (2 samples, 0.02%)</title><rect x="42.0928%" y="1125" width="0.0214%" height="15" fill="rgb(209,103,30)"/><text x="42.3428%" y="1135.50"></text></g><g><title>arena_sdalloc (2 samples, 0.02%)</title><rect x="42.0928%" y="1109" width="0.0214%" height="15" fill="rgb(238,100,19)"/><text x="42.3428%" y="1119.50"></text></g><g><title>tcache_dalloc_small (1 samples, 0.01%)</title><rect x="42.1036%" y="1093" width="0.0107%" height="15" fill="rgb(244,30,14)"/><text x="42.3536%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (6 samples, 0.06%)</title><rect x="42.0607%" y="1253" width="0.0643%" height="15" fill="rgb(249,174,6)"/><text x="42.3107%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::New&gt;&gt; (1 samples, 0.01%)</title><rect x="42.1143%" y="1237" width="0.0107%" height="15" fill="rgb(235,213,41)"/><text x="42.3643%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::New&gt;&gt; (1 samples, 0.01%)</title><rect x="42.1143%" y="1221" width="0.0107%" height="15" fill="rgb(213,118,6)"/><text x="42.3643%" y="1231.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="42.1143%" y="1205" width="0.0107%" height="15" fill="rgb(235,44,51)"/><text x="42.3643%" y="1215.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="42.1357%" y="1189" width="0.0107%" height="15" fill="rgb(217,9,53)"/><text x="42.3857%" y="1199.50"></text></g><g><title>sz_size2index (1 samples, 0.01%)</title><rect x="42.1572%" y="1125" width="0.0107%" height="15" fill="rgb(237,172,34)"/><text x="42.4072%" y="1135.50"></text></g><g><title>sz_size2index_lookup (1 samples, 0.01%)</title><rect x="42.1572%" y="1109" width="0.0107%" height="15" fill="rgb(206,206,11)"/><text x="42.4072%" y="1119.50"></text></g><g><title>isfree (3 samples, 0.03%)</title><rect x="42.1572%" y="1173" width="0.0322%" height="15" fill="rgb(214,149,29)"/><text x="42.4072%" y="1183.50"></text></g><g><title>isdalloct (3 samples, 0.03%)</title><rect x="42.1572%" y="1157" width="0.0322%" height="15" fill="rgb(208,123,3)"/><text x="42.4072%" y="1167.50"></text></g><g><title>arena_sdalloc (3 samples, 0.03%)</title><rect x="42.1572%" y="1141" width="0.0322%" height="15" fill="rgb(229,126,4)"/><text x="42.4072%" y="1151.50"></text></g><g><title>tcache_dalloc_small (2 samples, 0.02%)</title><rect x="42.1679%" y="1125" width="0.0214%" height="15" fill="rgb(222,92,36)"/><text x="42.4179%" y="1135.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.01%)</title><rect x="42.1786%" y="1109" width="0.0107%" height="15" fill="rgb(216,39,41)"/><text x="42.4286%" y="1119.50"></text></g><g><title>_rjem_sdallocx (5 samples, 0.05%)</title><rect x="42.1465%" y="1189" width="0.0536%" height="15" fill="rgb(253,127,28)"/><text x="42.3965%" y="1199.50"></text></g><g><title>tsd_fetch (1 samples, 0.01%)</title><rect x="42.1893%" y="1173" width="0.0107%" height="15" fill="rgb(249,152,51)"/><text x="42.4393%" y="1183.50"></text></g><g><title>tsd_fetch_impl (1 samples, 0.01%)</title><rect x="42.1893%" y="1157" width="0.0107%" height="15" fill="rgb(209,123,42)"/><text x="42.4393%" y="1167.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (1 samples, 0.01%)</title><rect x="42.2108%" y="997" width="0.0107%" height="15" fill="rgb(241,118,22)"/><text x="42.4608%" y="1007.50"></text></g><g><title>arena_dalloc_bin_locked_impl (1 samples, 0.01%)</title><rect x="42.2108%" y="981" width="0.0107%" height="15" fill="rgb(208,25,7)"/><text x="42.4608%" y="991.50"></text></g><g><title>arena_dalloc_bin_slab (1 samples, 0.01%)</title><rect x="42.2108%" y="965" width="0.0107%" height="15" fill="rgb(243,144,39)"/><text x="42.4608%" y="975.50"></text></g><g><title>arena_slab_dalloc (1 samples, 0.01%)</title><rect x="42.2108%" y="949" width="0.0107%" height="15" fill="rgb(250,50,5)"/><text x="42.4608%" y="959.50"></text></g><g><title>_rjem_je_arena_extents_dirty_dalloc (1 samples, 0.01%)</title><rect x="42.2108%" y="933" width="0.0107%" height="15" fill="rgb(207,67,11)"/><text x="42.4608%" y="943.50"></text></g><g><title>extent_record (1 samples, 0.01%)</title><rect x="42.2108%" y="917" width="0.0107%" height="15" fill="rgb(245,204,40)"/><text x="42.4608%" y="927.50"></text></g><g><title>extent_arena_get (2 samples, 0.02%)</title><rect x="42.2215%" y="997" width="0.0214%" height="15" fill="rgb(238,228,24)"/><text x="42.4715%" y="1007.50"></text></g><g><title>atomic_load_p (2 samples, 0.02%)</title><rect x="42.2215%" y="981" width="0.0214%" height="15" fill="rgb(217,116,22)"/><text x="42.4715%" y="991.50"></text></g><g><title>iealloc (1 samples, 0.01%)</title><rect x="42.2430%" y="997" width="0.0107%" height="15" fill="rgb(234,98,12)"/><text x="42.4930%" y="1007.50"></text></g><g><title>rtree_extent_read (1 samples, 0.01%)</title><rect x="42.2430%" y="981" width="0.0107%" height="15" fill="rgb(242,170,50)"/><text x="42.4930%" y="991.50"></text></g><g><title>rtree_leaf_elm_extent_read (1 samples, 0.01%)</title><rect x="42.2430%" y="965" width="0.0107%" height="15" fill="rgb(235,7,5)"/><text x="42.4930%" y="975.50"></text></g><g><title>rtree_leaf_elm_bits_read (1 samples, 0.01%)</title><rect x="42.2430%" y="949" width="0.0107%" height="15" fill="rgb(241,114,28)"/><text x="42.4930%" y="959.50"></text></g><g><title>atomic_load_p (1 samples, 0.01%)</title><rect x="42.2430%" y="933" width="0.0107%" height="15" fill="rgb(246,112,42)"/><text x="42.4930%" y="943.50"></text></g><g><title>malloc_mutex_lock (3 samples, 0.03%)</title><rect x="42.2537%" y="997" width="0.0322%" height="15" fill="rgb(248,228,14)"/><text x="42.5037%" y="1007.50"></text></g><g><title>malloc_mutex_trylock_final (3 samples, 0.03%)</title><rect x="42.2537%" y="981" width="0.0322%" height="15" fill="rgb(208,133,18)"/><text x="42.5037%" y="991.50"></text></g><g><title>__GI___pthread_mutex_trylock (2 samples, 0.02%)</title><rect x="42.2644%" y="965" width="0.0214%" height="15" fill="rgb(207,35,49)"/><text x="42.5144%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (9 samples, 0.10%)</title><rect x="42.2001%" y="1173" width="0.0965%" height="15" fill="rgb(205,68,36)"/><text x="42.4501%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (9 samples, 0.10%)</title><rect x="42.2001%" y="1157" width="0.0965%" height="15" fill="rgb(245,62,40)"/><text x="42.4501%" y="1167.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.10%)</title><rect x="42.2001%" y="1141" width="0.0965%" height="15" fill="rgb(228,27,24)"/><text x="42.4501%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.10%)</title><rect x="42.2001%" y="1125" width="0.0965%" height="15" fill="rgb(253,19,12)"/><text x="42.4501%" y="1135.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.10%)</title><rect x="42.2001%" y="1109" width="0.0965%" height="15" fill="rgb(232,28,20)"/><text x="42.4501%" y="1119.50"></text></g><g><title>_rjem_sdallocx (9 samples, 0.10%)</title><rect x="42.2001%" y="1093" width="0.0965%" height="15" fill="rgb(218,35,51)"/><text x="42.4501%" y="1103.50"></text></g><g><title>isfree (9 samples, 0.10%)</title><rect x="42.2001%" y="1077" width="0.0965%" height="15" fill="rgb(212,90,40)"/><text x="42.4501%" y="1087.50"></text></g><g><title>isdalloct (9 samples, 0.10%)</title><rect x="42.2001%" y="1061" width="0.0965%" height="15" fill="rgb(220,172,12)"/><text x="42.4501%" y="1071.50"></text></g><g><title>arena_sdalloc (9 samples, 0.10%)</title><rect x="42.2001%" y="1045" width="0.0965%" height="15" fill="rgb(226,159,20)"/><text x="42.4501%" y="1055.50"></text></g><g><title>tcache_dalloc_small (9 samples, 0.10%)</title><rect x="42.2001%" y="1029" width="0.0965%" height="15" fill="rgb(234,205,16)"/><text x="42.4501%" y="1039.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (9 samples, 0.10%)</title><rect x="42.2001%" y="1013" width="0.0965%" height="15" fill="rgb(207,9,39)"/><text x="42.4501%" y="1023.50"></text></g><g><title>malloc_mutex_unlock (1 samples, 0.01%)</title><rect x="42.2858%" y="997" width="0.0107%" height="15" fill="rgb(249,143,15)"/><text x="42.5358%" y="1007.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="42.2858%" y="981" width="0.0107%" height="15" fill="rgb(253,133,29)"/><text x="42.5358%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Match&gt;&gt; (2 samples, 0.02%)</title><rect x="42.2966%" y="1173" width="0.0214%" height="15" fill="rgb(221,187,0)"/><text x="42.5466%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="42.2966%" y="1157" width="0.0214%" height="15" fill="rgb(205,204,26)"/><text x="42.5466%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Match]&gt; (2 samples, 0.02%)</title><rect x="42.2966%" y="1141" width="0.0214%" height="15" fill="rgb(224,68,54)"/><text x="42.5466%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::New&gt;&gt; (1 samples, 0.01%)</title><rect x="42.3180%" y="1173" width="0.0107%" height="15" fill="rgb(209,67,4)"/><text x="42.5680%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="42.3180%" y="1157" width="0.0107%" height="15" fill="rgb(228,229,18)"/><text x="42.5680%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::New]&gt; (1 samples, 0.01%)</title><rect x="42.3180%" y="1141" width="0.0107%" height="15" fill="rgb(231,89,13)"/><text x="42.5680%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Receive&gt;&gt; (1 samples, 0.01%)</title><rect x="42.3287%" y="1173" width="0.0107%" height="15" fill="rgb(210,182,18)"/><text x="42.5787%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Receive&gt;&gt; (1 samples, 0.01%)</title><rect x="42.3287%" y="1157" width="0.0107%" height="15" fill="rgb(240,105,2)"/><text x="42.5787%" y="1167.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="42.3287%" y="1141" width="0.0107%" height="15" fill="rgb(207,170,50)"/><text x="42.5787%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="42.3287%" y="1125" width="0.0107%" height="15" fill="rgb(232,133,24)"/><text x="42.5787%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="42.3394%" y="1157" width="0.0107%" height="15" fill="rgb(235,166,27)"/><text x="42.5894%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="42.3394%" y="1141" width="0.0107%" height="15" fill="rgb(209,19,13)"/><text x="42.5894%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;rho_runtime::interpreter::reduce::environment::Env&gt; (22 samples, 0.24%)</title><rect x="42.1250%" y="1253" width="0.2359%" height="15" fill="rgb(226,79,39)"/><text x="42.3750%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[model::rho_types::Par: 6]&gt;&gt; (22 samples, 0.24%)</title><rect x="42.1250%" y="1237" width="0.2359%" height="15" fill="rgb(222,163,10)"/><text x="42.3750%" y="1247.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.23%)</title><rect x="42.1357%" y="1221" width="0.2252%" height="15" fill="rgb(214,44,19)"/><text x="42.3857%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Par]&gt; (21 samples, 0.23%)</title><rect x="42.1357%" y="1205" width="0.2252%" height="15" fill="rgb(210,217,13)"/><text x="42.3857%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (15 samples, 0.16%)</title><rect x="42.2001%" y="1189" width="0.1608%" height="15" fill="rgb(237,61,54)"/><text x="42.4501%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Send&gt;&gt; (2 samples, 0.02%)</title><rect x="42.3394%" y="1173" width="0.0214%" height="15" fill="rgb(226,184,24)"/><text x="42.5894%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Send&gt;&gt; (1 samples, 0.01%)</title><rect x="42.3502%" y="1157" width="0.0107%" height="15" fill="rgb(223,226,4)"/><text x="42.6002%" y="1167.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="42.3502%" y="1141" width="0.0107%" height="15" fill="rgb(210,26,41)"/><text x="42.6002%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="42.3502%" y="1125" width="0.0107%" height="15" fill="rgb(220,221,6)"/><text x="42.6002%" y="1135.50"></text></g><g><title>rho_runtime::interpreter::reduce::environment::Env&lt;T&gt;::create (3 samples, 0.03%)</title><rect x="42.3609%" y="1253" width="0.0322%" height="15" fill="rgb(225,89,49)"/><text x="42.6109%" y="1263.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="42.3609%" y="1237" width="0.0322%" height="15" fill="rgb(218,70,45)"/><text x="42.6109%" y="1247.50"></text></g><g><title>__rust_probestack (2 samples, 0.02%)</title><rect x="42.3931%" y="1237" width="0.0214%" height="15" fill="rgb(238,166,21)"/><text x="42.6431%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (3 samples, 0.03%)</title><rect x="42.4145%" y="1237" width="0.0322%" height="15" fill="rgb(224,141,44)"/><text x="42.6645%" y="1247.50"></text></g><g><title>core::ptr::read (3 samples, 0.03%)</title><rect x="42.4145%" y="1221" width="0.0322%" height="15" fill="rgb(230,12,49)"/><text x="42.6645%" y="1231.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="42.4145%" y="1205" width="0.0322%" height="15" fill="rgb(212,174,12)"/><text x="42.6645%" y="1215.50"></text></g><g><title>__rg_dealloc (1 samples, 0.01%)</title><rect x="42.4574%" y="1141" width="0.0107%" height="15" fill="rgb(246,67,9)"/><text x="42.7074%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Connective&gt;&gt; (1 samples, 0.01%)</title><rect x="42.4681%" y="1125" width="0.0107%" height="15" fill="rgb(239,35,23)"/><text x="42.7181%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="42.4681%" y="1109" width="0.0107%" height="15" fill="rgb(211,167,0)"/><text x="42.7181%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Connective]&gt; (1 samples, 0.01%)</title><rect x="42.4681%" y="1093" width="0.0107%" height="15" fill="rgb(225,119,45)"/><text x="42.7181%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="42.4788%" y="1109" width="0.0322%" height="15" fill="rgb(210,162,6)"/><text x="42.7288%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Expr]&gt; (3 samples, 0.03%)</title><rect x="42.4788%" y="1093" width="0.0322%" height="15" fill="rgb(208,118,35)"/><text x="42.7288%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Expr&gt; (3 samples, 0.03%)</title><rect x="42.4788%" y="1077" width="0.0322%" height="15" fill="rgb(239,4,53)"/><text x="42.7288%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::expr::ExprInstance&gt;&gt; (3 samples, 0.03%)</title><rect x="42.4788%" y="1061" width="0.0322%" height="15" fill="rgb(213,130,21)"/><text x="42.7288%" y="1071.50"></text></g><g><title>__rg_dealloc (1 samples, 0.01%)</title><rect x="42.5110%" y="1045" width="0.0107%" height="15" fill="rgb(235,148,0)"/><text x="42.7610%" y="1055.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.01%)</title><rect x="42.5110%" y="1029" width="0.0107%" height="15" fill="rgb(244,224,18)"/><text x="42.7610%" y="1039.50"></text></g><g><title>jemallocator::layout_to_flags (1 samples, 0.01%)</title><rect x="42.5110%" y="1013" width="0.0107%" height="15" fill="rgb(211,214,4)"/><text x="42.7610%" y="1023.50"></text></g><g><title>isfree (1 samples, 0.01%)</title><rect x="42.5432%" y="1029" width="0.0107%" height="15" fill="rgb(206,119,25)"/><text x="42.7932%" y="1039.50"></text></g><g><title>isdalloct (1 samples, 0.01%)</title><rect x="42.5432%" y="1013" width="0.0107%" height="15" fill="rgb(243,93,47)"/><text x="42.7932%" y="1023.50"></text></g><g><title>arena_sdalloc (1 samples, 0.01%)</title><rect x="42.5432%" y="997" width="0.0107%" height="15" fill="rgb(224,194,6)"/><text x="42.7932%" y="1007.50"></text></g><g><title>sz_size2index (1 samples, 0.01%)</title><rect x="42.5432%" y="981" width="0.0107%" height="15" fill="rgb(243,229,6)"/><text x="42.7932%" y="991.50"></text></g><g><title>sz_size2index_lookup (1 samples, 0.01%)</title><rect x="42.5432%" y="965" width="0.0107%" height="15" fill="rgb(207,23,50)"/><text x="42.7932%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (8 samples, 0.09%)</title><rect x="42.4788%" y="1125" width="0.0858%" height="15" fill="rgb(253,192,32)"/><text x="42.7288%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (5 samples, 0.05%)</title><rect x="42.5110%" y="1109" width="0.0536%" height="15" fill="rgb(213,21,6)"/><text x="42.7610%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="42.5110%" y="1093" width="0.0536%" height="15" fill="rgb(243,151,13)"/><text x="42.7610%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.05%)</title><rect x="42.5110%" y="1077" width="0.0536%" height="15" fill="rgb(233,165,41)"/><text x="42.7610%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.05%)</title><rect x="42.5110%" y="1061" width="0.0536%" height="15" fill="rgb(246,176,45)"/><text x="42.7610%" y="1071.50"></text></g><g><title>_rjem_sdallocx (4 samples, 0.04%)</title><rect x="42.5217%" y="1045" width="0.0429%" height="15" fill="rgb(217,170,52)"/><text x="42.7717%" y="1055.50"></text></g><g><title>tsd_tcachep_get (1 samples, 0.01%)</title><rect x="42.5539%" y="1029" width="0.0107%" height="15" fill="rgb(214,203,54)"/><text x="42.8039%" y="1039.50"></text></g><g><title>tsd_tcachep_get_unsafe (1 samples, 0.01%)</title><rect x="42.5539%" y="1013" width="0.0107%" height="15" fill="rgb(248,215,49)"/><text x="42.8039%" y="1023.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.01%)</title><rect x="42.5753%" y="1077" width="0.0107%" height="15" fill="rgb(208,46,10)"/><text x="42.8253%" y="1087.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.02%)</title><rect x="42.5860%" y="1013" width="0.0214%" height="15" fill="rgb(254,5,31)"/><text x="42.8360%" y="1023.50"></text></g><g><title>isfree (2 samples, 0.02%)</title><rect x="42.5860%" y="997" width="0.0214%" height="15" fill="rgb(222,104,33)"/><text x="42.8360%" y="1007.50"></text></g><g><title>isdalloct (2 samples, 0.02%)</title><rect x="42.5860%" y="981" width="0.0214%" height="15" fill="rgb(248,49,16)"/><text x="42.8360%" y="991.50"></text></g><g><title>arena_sdalloc (2 samples, 0.02%)</title><rect x="42.5860%" y="965" width="0.0214%" height="15" fill="rgb(232,198,41)"/><text x="42.8360%" y="975.50"></text></g><g><title>tcache_dalloc_small (2 samples, 0.02%)</title><rect x="42.5860%" y="949" width="0.0214%" height="15" fill="rgb(214,125,3)"/><text x="42.8360%" y="959.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.01%)</title><rect x="42.5968%" y="933" width="0.0107%" height="15" fill="rgb(229,220,28)"/><text x="42.8468%" y="943.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.01%)</title><rect x="42.5968%" y="917" width="0.0107%" height="15" fill="rgb(222,64,37)"/><text x="42.8468%" y="927.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.01%)</title><rect x="42.5968%" y="901" width="0.0107%" height="15" fill="rgb(249,184,13)"/><text x="42.8468%" y="911.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.01%)</title><rect x="42.5968%" y="885" width="0.0107%" height="15" fill="rgb(252,176,6)"/><text x="42.8468%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (1 samples, 0.01%)</title><rect x="42.6075%" y="997" width="0.0107%" height="15" fill="rgb(228,153,7)"/><text x="42.8575%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="42.6075%" y="981" width="0.0107%" height="15" fill="rgb(242,193,5)"/><text x="42.8575%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Expr]&gt; (1 samples, 0.01%)</title><rect x="42.6075%" y="965" width="0.0107%" height="15" fill="rgb(232,140,9)"/><text x="42.8575%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Expr&gt; (1 samples, 0.01%)</title><rect x="42.6075%" y="949" width="0.0107%" height="15" fill="rgb(213,222,16)"/><text x="42.8575%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::expr::ExprInstance&gt;&gt; (1 samples, 0.01%)</title><rect x="42.6075%" y="933" width="0.0107%" height="15" fill="rgb(222,75,50)"/><text x="42.8575%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="42.5860%" y="1045" width="0.0429%" height="15" fill="rgb(205,180,2)"/><text x="42.8360%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Par]&gt; (4 samples, 0.04%)</title><rect x="42.5860%" y="1029" width="0.0429%" height="15" fill="rgb(216,34,7)"/><text x="42.8360%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (2 samples, 0.02%)</title><rect x="42.6075%" y="1013" width="0.0214%" height="15" fill="rgb(253,16,32)"/><text x="42.8575%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::GUnforgeable&gt;&gt; (1 samples, 0.01%)</title><rect x="42.6182%" y="997" width="0.0107%" height="15" fill="rgb(208,97,28)"/><text x="42.8682%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::GUnforgeable&gt;&gt; (1 samples, 0.01%)</title><rect x="42.6182%" y="981" width="0.0107%" height="15" fill="rgb(225,92,11)"/><text x="42.8682%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="42.6182%" y="965" width="0.0107%" height="15" fill="rgb(243,38,12)"/><text x="42.8682%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="42.6182%" y="949" width="0.0107%" height="15" fill="rgb(208,139,16)"/><text x="42.8682%" y="959.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (2 samples, 0.02%)</title><rect x="42.6289%" y="885" width="0.0214%" height="15" fill="rgb(227,24,9)"/><text x="42.8789%" y="895.50"></text></g><g><title>arena_dalloc_bin_locked_impl (2 samples, 0.02%)</title><rect x="42.6289%" y="869" width="0.0214%" height="15" fill="rgb(206,62,11)"/><text x="42.8789%" y="879.50"></text></g><g><title>arena_slab_reg_dalloc (1 samples, 0.01%)</title><rect x="42.6396%" y="853" width="0.0107%" height="15" fill="rgb(228,134,27)"/><text x="42.8896%" y="863.50"></text></g><g><title>extent_nfree_inc (1 samples, 0.01%)</title><rect x="42.6396%" y="837" width="0.0107%" height="15" fill="rgb(205,55,33)"/><text x="42.8896%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Par&gt;&gt; (7 samples, 0.08%)</title><rect x="42.5860%" y="1061" width="0.0751%" height="15" fill="rgb(243,75,43)"/><text x="42.8360%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Par&gt;&gt; (3 samples, 0.03%)</title><rect x="42.6289%" y="1045" width="0.0322%" height="15" fill="rgb(223,27,42)"/><text x="42.8789%" y="1055.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="42.6289%" y="1029" width="0.0322%" height="15" fill="rgb(232,189,33)"/><text x="42.8789%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.03%)</title><rect x="42.6289%" y="1013" width="0.0322%" height="15" fill="rgb(210,9,39)"/><text x="42.8789%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.03%)</title><rect x="42.6289%" y="997" width="0.0322%" height="15" fill="rgb(242,85,26)"/><text x="42.8789%" y="1007.50"></text></g><g><title>_rjem_sdallocx (3 samples, 0.03%)</title><rect x="42.6289%" y="981" width="0.0322%" height="15" fill="rgb(248,44,4)"/><text x="42.8789%" y="991.50"></text></g><g><title>isfree (3 samples, 0.03%)</title><rect x="42.6289%" y="965" width="0.0322%" height="15" fill="rgb(250,96,46)"/><text x="42.8789%" y="975.50"></text></g><g><title>isdalloct (3 samples, 0.03%)</title><rect x="42.6289%" y="949" width="0.0322%" height="15" fill="rgb(229,116,26)"/><text x="42.8789%" y="959.50"></text></g><g><title>arena_sdalloc (3 samples, 0.03%)</title><rect x="42.6289%" y="933" width="0.0322%" height="15" fill="rgb(246,94,34)"/><text x="42.8789%" y="943.50"></text></g><g><title>tcache_dalloc_small (3 samples, 0.03%)</title><rect x="42.6289%" y="917" width="0.0322%" height="15" fill="rgb(251,73,21)"/><text x="42.8789%" y="927.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (3 samples, 0.03%)</title><rect x="42.6289%" y="901" width="0.0322%" height="15" fill="rgb(254,121,25)"/><text x="42.8789%" y="911.50"></text></g><g><title>iealloc (1 samples, 0.01%)</title><rect x="42.6504%" y="885" width="0.0107%" height="15" fill="rgb(215,161,49)"/><text x="42.9004%" y="895.50"></text></g><g><title>rtree_extent_read (1 samples, 0.01%)</title><rect x="42.6504%" y="869" width="0.0107%" height="15" fill="rgb(221,43,13)"/><text x="42.9004%" y="879.50"></text></g><g><title>rtree_read (1 samples, 0.01%)</title><rect x="42.6504%" y="853" width="0.0107%" height="15" fill="rgb(249,5,37)"/><text x="42.9004%" y="863.50"></text></g><g><title>rtree_leaf_elm_lookup (1 samples, 0.01%)</title><rect x="42.6504%" y="837" width="0.0107%" height="15" fill="rgb(226,25,44)"/><text x="42.9004%" y="847.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.02%)</title><rect x="42.6611%" y="1045" width="0.0214%" height="15" fill="rgb(238,189,16)"/><text x="42.9111%" y="1055.50"></text></g><g><title>isfree (1 samples, 0.01%)</title><rect x="42.6718%" y="1029" width="0.0107%" height="15" fill="rgb(251,186,8)"/><text x="42.9218%" y="1039.50"></text></g><g><title>isdalloct (1 samples, 0.01%)</title><rect x="42.6718%" y="1013" width="0.0107%" height="15" fill="rgb(254,34,31)"/><text x="42.9218%" y="1023.50"></text></g><g><title>arena_sdalloc (1 samples, 0.01%)</title><rect x="42.6718%" y="997" width="0.0107%" height="15" fill="rgb(225,215,27)"/><text x="42.9218%" y="1007.50"></text></g><g><title>tcache_dalloc_small (1 samples, 0.01%)</title><rect x="42.6718%" y="981" width="0.0107%" height="15" fill="rgb(221,192,48)"/><text x="42.9218%" y="991.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (1 samples, 0.01%)</title><rect x="42.6718%" y="965" width="0.0107%" height="15" fill="rgb(219,137,20)"/><text x="42.9218%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.23%)</title><rect x="42.5646%" y="1109" width="0.2252%" height="15" fill="rgb(219,84,11)"/><text x="42.8146%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Send]&gt; (21 samples, 0.23%)</title><rect x="42.5646%" y="1093" width="0.2252%" height="15" fill="rgb(224,10,23)"/><text x="42.8146%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Send&gt; (19 samples, 0.20%)</title><rect x="42.5860%" y="1077" width="0.2037%" height="15" fill="rgb(248,22,39)"/><text x="42.8360%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::Par&gt;&gt; (12 samples, 0.13%)</title><rect x="42.6611%" y="1061" width="0.1287%" height="15" fill="rgb(212,154,20)"/><text x="42.9111%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (10 samples, 0.11%)</title><rect x="42.6825%" y="1045" width="0.1072%" height="15" fill="rgb(236,199,50)"/><text x="42.9325%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::GUnforgeable&gt;&gt; (10 samples, 0.11%)</title><rect x="42.6825%" y="1029" width="0.1072%" height="15" fill="rgb(211,9,17)"/><text x="42.9325%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.11%)</title><rect x="42.6825%" y="1013" width="0.1072%" height="15" fill="rgb(243,216,36)"/><text x="42.9325%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::GUnforgeable]&gt; (10 samples, 0.11%)</title><rect x="42.6825%" y="997" width="0.1072%" height="15" fill="rgb(250,2,10)"/><text x="42.9325%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::GUnforgeable&gt; (10 samples, 0.11%)</title><rect x="42.6825%" y="981" width="0.1072%" height="15" fill="rgb(226,50,48)"/><text x="42.9325%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::g_unforgeable::UnfInstance&gt;&gt; (10 samples, 0.11%)</title><rect x="42.6825%" y="965" width="0.1072%" height="15" fill="rgb(243,81,16)"/><text x="42.9325%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::g_unforgeable::UnfInstance&gt; (6 samples, 0.06%)</title><rect x="42.7254%" y="949" width="0.0643%" height="15" fill="rgb(250,14,2)"/><text x="42.9754%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::GPrivate&gt; (6 samples, 0.06%)</title><rect x="42.7254%" y="933" width="0.0643%" height="15" fill="rgb(233,135,29)"/><text x="42.9754%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (6 samples, 0.06%)</title><rect x="42.7254%" y="917" width="0.0643%" height="15" fill="rgb(224,64,43)"/><text x="42.9754%" y="927.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (6 samples, 0.06%)</title><rect x="42.7254%" y="901" width="0.0643%" height="15" fill="rgb(238,84,13)"/><text x="42.9754%" y="911.50"></text></g><g><title>bytes::bytes::shared_drop (5 samples, 0.05%)</title><rect x="42.7361%" y="885" width="0.0536%" height="15" fill="rgb(253,48,26)"/><text x="42.9861%" y="895.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (5 samples, 0.05%)</title><rect x="42.7361%" y="869" width="0.0536%" height="15" fill="rgb(205,223,31)"/><text x="42.9861%" y="879.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (5 samples, 0.05%)</title><rect x="42.7361%" y="853" width="0.0536%" height="15" fill="rgb(221,41,32)"/><text x="42.9861%" y="863.50"></text></g><g><title>bytes::bytes::release_shared (5 samples, 0.05%)</title><rect x="42.7361%" y="837" width="0.0536%" height="15" fill="rgb(213,158,31)"/><text x="42.9861%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (5 samples, 0.05%)</title><rect x="42.7361%" y="821" width="0.0536%" height="15" fill="rgb(245,126,43)"/><text x="42.9861%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_sub (5 samples, 0.05%)</title><rect x="42.7361%" y="805" width="0.0536%" height="15" fill="rgb(227,7,22)"/><text x="42.9861%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.36%)</title><rect x="42.4467%" y="1205" width="0.3645%" height="15" fill="rgb(252,90,44)"/><text x="42.6967%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::MatchCase]&gt; (34 samples, 0.36%)</title><rect x="42.4467%" y="1189" width="0.3645%" height="15" fill="rgb(253,91,0)"/><text x="42.6967%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::MatchCase&gt; (34 samples, 0.36%)</title><rect x="42.4467%" y="1173" width="0.3645%" height="15" fill="rgb(252,175,49)"/><text x="42.6967%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::Par&gt;&gt; (34 samples, 0.36%)</title><rect x="42.4467%" y="1157" width="0.3645%" height="15" fill="rgb(246,150,1)"/><text x="42.6967%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (32 samples, 0.34%)</title><rect x="42.4681%" y="1141" width="0.3431%" height="15" fill="rgb(241,192,25)"/><text x="42.7181%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Send&gt;&gt; (23 samples, 0.25%)</title><rect x="42.5646%" y="1125" width="0.2466%" height="15" fill="rgb(239,187,11)"/><text x="42.8146%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Send&gt;&gt; (2 samples, 0.02%)</title><rect x="42.7898%" y="1109" width="0.0214%" height="15" fill="rgb(218,202,51)"/><text x="43.0398%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="42.7898%" y="1093" width="0.0214%" height="15" fill="rgb(225,176,8)"/><text x="43.0398%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="42.7898%" y="1077" width="0.0214%" height="15" fill="rgb(219,122,41)"/><text x="43.0398%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="42.7898%" y="1061" width="0.0214%" height="15" fill="rgb(248,140,20)"/><text x="43.0398%" y="1071.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.02%)</title><rect x="42.7898%" y="1045" width="0.0214%" height="15" fill="rgb(245,41,37)"/><text x="43.0398%" y="1055.50"></text></g><g><title>isfree (1 samples, 0.01%)</title><rect x="42.8005%" y="1029" width="0.0107%" height="15" fill="rgb(235,82,39)"/><text x="43.0505%" y="1039.50"></text></g><g><title>isdalloct (1 samples, 0.01%)</title><rect x="42.8005%" y="1013" width="0.0107%" height="15" fill="rgb(230,108,42)"/><text x="43.0505%" y="1023.50"></text></g><g><title>arena_sdalloc (1 samples, 0.01%)</title><rect x="42.8005%" y="997" width="0.0107%" height="15" fill="rgb(215,150,50)"/><text x="43.0505%" y="1007.50"></text></g><g><title>sz_size2index (1 samples, 0.01%)</title><rect x="42.8005%" y="981" width="0.0107%" height="15" fill="rgb(233,212,5)"/><text x="43.0505%" y="991.50"></text></g><g><title>sz_size2index_lookup (1 samples, 0.01%)</title><rect x="42.8005%" y="965" width="0.0107%" height="15" fill="rgb(245,80,22)"/><text x="43.0505%" y="975.50"></text></g><g><title>sz_size2index (1 samples, 0.01%)</title><rect x="42.8112%" y="1077" width="0.0107%" height="15" fill="rgb(238,129,16)"/><text x="43.0612%" y="1087.50"></text></g><g><title>sz_size2index_lookup (1 samples, 0.01%)</title><rect x="42.8112%" y="1061" width="0.0107%" height="15" fill="rgb(240,19,0)"/><text x="43.0612%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::MatchCase&gt;&gt; (37 samples, 0.40%)</title><rect x="42.4467%" y="1221" width="0.3967%" height="15" fill="rgb(232,42,35)"/><text x="42.6967%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::MatchCase&gt;&gt; (3 samples, 0.03%)</title><rect x="42.8112%" y="1205" width="0.0322%" height="15" fill="rgb(223,130,24)"/><text x="43.0612%" y="1215.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="42.8112%" y="1189" width="0.0322%" height="15" fill="rgb(237,16,22)"/><text x="43.0612%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.03%)</title><rect x="42.8112%" y="1173" width="0.0322%" height="15" fill="rgb(248,192,20)"/><text x="43.0612%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.03%)</title><rect x="42.8112%" y="1157" width="0.0322%" height="15" fill="rgb(233,167,2)"/><text x="43.0612%" y="1167.50"></text></g><g><title>_rjem_sdallocx (3 samples, 0.03%)</title><rect x="42.8112%" y="1141" width="0.0322%" height="15" fill="rgb(252,71,44)"/><text x="43.0612%" y="1151.50"></text></g><g><title>isfree (3 samples, 0.03%)</title><rect x="42.8112%" y="1125" width="0.0322%" height="15" fill="rgb(238,37,47)"/><text x="43.0612%" y="1135.50"></text></g><g><title>isdalloct (3 samples, 0.03%)</title><rect x="42.8112%" y="1109" width="0.0322%" height="15" fill="rgb(214,202,54)"/><text x="43.0612%" y="1119.50"></text></g><g><title>arena_sdalloc (3 samples, 0.03%)</title><rect x="42.8112%" y="1093" width="0.0322%" height="15" fill="rgb(254,165,40)"/><text x="43.0612%" y="1103.50"></text></g><g><title>tcache_dalloc_small (2 samples, 0.02%)</title><rect x="42.8219%" y="1077" width="0.0214%" height="15" fill="rgb(246,173,38)"/><text x="43.0719%" y="1087.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (2 samples, 0.02%)</title><rect x="42.8219%" y="1061" width="0.0214%" height="15" fill="rgb(215,3,27)"/><text x="43.0719%" y="1071.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (1 samples, 0.01%)</title><rect x="42.8326%" y="1045" width="0.0107%" height="15" fill="rgb(239,169,51)"/><text x="43.0826%" y="1055.50"></text></g><g><title>arena_dalloc_bin_locked_impl (1 samples, 0.01%)</title><rect x="42.8326%" y="1029" width="0.0107%" height="15" fill="rgb(212,5,25)"/><text x="43.0826%" y="1039.50"></text></g><g><title>arena_slab_reg_dalloc (1 samples, 0.01%)</title><rect x="42.8326%" y="1013" width="0.0107%" height="15" fill="rgb(243,45,17)"/><text x="43.0826%" y="1023.50"></text></g><g><title>arena_slab_regind (1 samples, 0.01%)</title><rect x="42.8326%" y="997" width="0.0107%" height="15" fill="rgb(242,97,9)"/><text x="43.0826%" y="1007.50"></text></g><g><title>div_compute (1 samples, 0.01%)</title><rect x="42.8326%" y="981" width="0.0107%" height="15" fill="rgb(228,71,31)"/><text x="43.0826%" y="991.50"></text></g><g><title>__rg_dealloc (1 samples, 0.01%)</title><rect x="42.8434%" y="1205" width="0.0107%" height="15" fill="rgb(252,184,16)"/><text x="43.0934%" y="1215.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.01%)</title><rect x="42.8434%" y="1189" width="0.0107%" height="15" fill="rgb(236,169,46)"/><text x="43.0934%" y="1199.50"></text></g><g><title>jemallocator::layout_to_flags (1 samples, 0.01%)</title><rect x="42.8434%" y="1173" width="0.0107%" height="15" fill="rgb(207,17,47)"/><text x="43.0934%" y="1183.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.01%)</title><rect x="42.8541%" y="1205" width="0.0107%" height="15" fill="rgb(206,201,28)"/><text x="43.1041%" y="1215.50"></text></g><g><title>inallocx (1 samples, 0.01%)</title><rect x="42.8541%" y="1189" width="0.0107%" height="15" fill="rgb(224,184,23)"/><text x="43.1041%" y="1199.50"></text></g><g><title>sz_s2u (1 samples, 0.01%)</title><rect x="42.8541%" y="1173" width="0.0107%" height="15" fill="rgb(208,139,48)"/><text x="43.1041%" y="1183.50"></text></g><g><title>sz_s2u_lookup (1 samples, 0.01%)</title><rect x="42.8541%" y="1157" width="0.0107%" height="15" fill="rgb(208,130,10)"/><text x="43.1041%" y="1167.50"></text></g><g><title>sz_index2size_lookup (1 samples, 0.01%)</title><rect x="42.8541%" y="1141" width="0.0107%" height="15" fill="rgb(211,213,45)"/><text x="43.1041%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (1 samples, 0.01%)</title><rect x="42.8648%" y="1189" width="0.0107%" height="15" fill="rgb(235,100,30)"/><text x="43.1148%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (1 samples, 0.01%)</title><rect x="42.8648%" y="1173" width="0.0107%" height="15" fill="rgb(206,144,31)"/><text x="43.1148%" y="1183.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="42.8648%" y="1157" width="0.0107%" height="15" fill="rgb(224,200,26)"/><text x="43.1148%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="42.8648%" y="1141" width="0.0107%" height="15" fill="rgb(247,104,53)"/><text x="43.1148%" y="1151.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="42.8648%" y="1125" width="0.0107%" height="15" fill="rgb(220,14,17)"/><text x="43.1148%" y="1135.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.01%)</title><rect x="42.8648%" y="1109" width="0.0107%" height="15" fill="rgb(230,140,40)"/><text x="43.1148%" y="1119.50"></text></g><g><title>isfree (1 samples, 0.01%)</title><rect x="42.8648%" y="1093" width="0.0107%" height="15" fill="rgb(229,2,41)"/><text x="43.1148%" y="1103.50"></text></g><g><title>isdalloct (1 samples, 0.01%)</title><rect x="42.8648%" y="1077" width="0.0107%" height="15" fill="rgb(232,89,16)"/><text x="43.1148%" y="1087.50"></text></g><g><title>arena_sdalloc (1 samples, 0.01%)</title><rect x="42.8648%" y="1061" width="0.0107%" height="15" fill="rgb(247,59,52)"/><text x="43.1148%" y="1071.50"></text></g><g><title>tcache_dalloc_small (1 samples, 0.01%)</title><rect x="42.8648%" y="1045" width="0.0107%" height="15" fill="rgb(226,110,21)"/><text x="43.1148%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Match&gt;&gt; (1 samples, 0.01%)</title><rect x="42.8755%" y="1189" width="0.0107%" height="15" fill="rgb(224,176,43)"/><text x="43.1255%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="42.8755%" y="1173" width="0.0107%" height="15" fill="rgb(221,73,6)"/><text x="43.1255%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Match]&gt; (1 samples, 0.01%)</title><rect x="42.8755%" y="1157" width="0.0107%" height="15" fill="rgb(232,78,19)"/><text x="43.1255%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Match&gt; (42 samples, 0.45%)</title><rect x="42.4467%" y="1237" width="0.4503%" height="15" fill="rgb(233,112,48)"/><text x="42.6967%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::Par&gt;&gt; (5 samples, 0.05%)</title><rect x="42.8434%" y="1221" width="0.0536%" height="15" fill="rgb(243,131,47)"/><text x="43.0934%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (3 samples, 0.03%)</title><rect x="42.8648%" y="1205" width="0.0322%" height="15" fill="rgb(226,51,1)"/><text x="43.1148%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::New&gt;&gt; (1 samples, 0.01%)</title><rect x="42.8862%" y="1189" width="0.0107%" height="15" fill="rgb(247,58,7)"/><text x="43.1362%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="42.8862%" y="1173" width="0.0107%" height="15" fill="rgb(209,7,32)"/><text x="43.1362%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::New]&gt; (1 samples, 0.01%)</title><rect x="42.8862%" y="1157" width="0.0107%" height="15" fill="rgb(209,39,41)"/><text x="43.1362%" y="1167.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (1 samples, 0.01%)</title><rect x="43.0042%" y="1221" width="0.0107%" height="15" fill="rgb(226,182,46)"/><text x="43.2542%" y="1231.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.02%)</title><rect x="43.0149%" y="1221" width="0.0214%" height="15" fill="rgb(230,219,10)"/><text x="43.2649%" y="1231.50"></text></g><g><title>isfree (2 samples, 0.02%)</title><rect x="43.0149%" y="1205" width="0.0214%" height="15" fill="rgb(227,175,30)"/><text x="43.2649%" y="1215.50"></text></g><g><title>isdalloct (2 samples, 0.02%)</title><rect x="43.0149%" y="1189" width="0.0214%" height="15" fill="rgb(217,2,50)"/><text x="43.2649%" y="1199.50"></text></g><g><title>arena_sdalloc (2 samples, 0.02%)</title><rect x="43.0149%" y="1173" width="0.0214%" height="15" fill="rgb(229,160,0)"/><text x="43.2649%" y="1183.50"></text></g><g><title>tcache_dalloc_small (2 samples, 0.02%)</title><rect x="43.0149%" y="1157" width="0.0214%" height="15" fill="rgb(207,78,37)"/><text x="43.2649%" y="1167.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.01%)</title><rect x="43.0256%" y="1141" width="0.0107%" height="15" fill="rgb(225,57,0)"/><text x="43.2756%" y="1151.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (1 samples, 0.01%)</title><rect x="43.0256%" y="1125" width="0.0107%" height="15" fill="rgb(232,154,2)"/><text x="43.2756%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.01%)</title><rect x="43.0363%" y="1221" width="0.0107%" height="15" fill="rgb(241,212,25)"/><text x="43.2863%" y="1231.50"></text></g><g><title>core::mem::take (1 samples, 0.01%)</title><rect x="43.0363%" y="1205" width="0.0107%" height="15" fill="rgb(226,69,20)"/><text x="43.2863%" y="1215.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="43.0363%" y="1189" width="0.0107%" height="15" fill="rgb(247,184,54)"/><text x="43.2863%" y="1199.50"></text></g><g><title>core::mem::swap (1 samples, 0.01%)</title><rect x="43.0363%" y="1173" width="0.0107%" height="15" fill="rgb(210,145,0)"/><text x="43.2863%" y="1183.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.01%)</title><rect x="43.0363%" y="1157" width="0.0107%" height="15" fill="rgb(253,82,12)"/><text x="43.2863%" y="1167.50"></text></g><g><title>core::ptr::swap_nonoverlapping (1 samples, 0.01%)</title><rect x="43.0363%" y="1141" width="0.0107%" height="15" fill="rgb(245,42,11)"/><text x="43.2863%" y="1151.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (1 samples, 0.01%)</title><rect x="43.0363%" y="1125" width="0.0107%" height="15" fill="rgb(219,147,32)"/><text x="43.2863%" y="1135.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="43.0363%" y="1109" width="0.0107%" height="15" fill="rgb(246,12,7)"/><text x="43.2863%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::New&gt;&gt; (1 samples, 0.01%)</title><rect x="43.0578%" y="1205" width="0.0107%" height="15" fill="rgb(243,50,9)"/><text x="43.3078%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="43.0578%" y="1189" width="0.0107%" height="15" fill="rgb(219,149,6)"/><text x="43.3078%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::New]&gt; (1 samples, 0.01%)</title><rect x="43.0578%" y="1173" width="0.0107%" height="15" fill="rgb(241,51,42)"/><text x="43.3078%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (3 samples, 0.03%)</title><rect x="43.0471%" y="1221" width="0.0322%" height="15" fill="rgb(226,128,27)"/><text x="43.2971%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Send&gt;&gt; (1 samples, 0.01%)</title><rect x="43.0685%" y="1205" width="0.0107%" height="15" fill="rgb(244,144,4)"/><text x="43.3185%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Send&gt;&gt; (1 samples, 0.01%)</title><rect x="43.0685%" y="1189" width="0.0107%" height="15" fill="rgb(221,4,13)"/><text x="43.3185%" y="1199.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="43.0685%" y="1173" width="0.0107%" height="15" fill="rgb(208,170,28)"/><text x="43.3185%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="43.0685%" y="1157" width="0.0107%" height="15" fill="rgb(226,131,13)"/><text x="43.3185%" y="1167.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="43.0685%" y="1141" width="0.0107%" height="15" fill="rgb(215,72,41)"/><text x="43.3185%" y="1151.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.01%)</title><rect x="43.0685%" y="1125" width="0.0107%" height="15" fill="rgb(243,108,20)"/><text x="43.3185%" y="1135.50"></text></g><g><title>isfree (1 samples, 0.01%)</title><rect x="43.0685%" y="1109" width="0.0107%" height="15" fill="rgb(230,189,17)"/><text x="43.3185%" y="1119.50"></text></g><g><title>isdalloct (1 samples, 0.01%)</title><rect x="43.0685%" y="1093" width="0.0107%" height="15" fill="rgb(220,50,17)"/><text x="43.3185%" y="1103.50"></text></g><g><title>arena_sdalloc (1 samples, 0.01%)</title><rect x="43.0685%" y="1077" width="0.0107%" height="15" fill="rgb(248,152,48)"/><text x="43.3185%" y="1087.50"></text></g><g><title>tcache_dalloc_small (1 samples, 0.01%)</title><rect x="43.0685%" y="1061" width="0.0107%" height="15" fill="rgb(244,91,11)"/><text x="43.3185%" y="1071.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.01%)</title><rect x="43.0792%" y="1189" width="0.0107%" height="15" fill="rgb(220,157,5)"/><text x="43.3292%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.01%)</title><rect x="43.0792%" y="1173" width="0.0107%" height="15" fill="rgb(253,137,8)"/><text x="43.3292%" y="1183.50"></text></g><g><title>model::ordering::sort_par::&lt;impl model::ordering::Sortable for model::rho_types::Par&gt;::sort (2 samples, 0.02%)</title><rect x="43.0792%" y="1205" width="0.0214%" height="15" fill="rgb(217,137,51)"/><text x="43.3292%" y="1215.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by (1 samples, 0.01%)</title><rect x="43.0900%" y="1189" width="0.0107%" height="15" fill="rgb(218,209,53)"/><text x="43.3400%" y="1199.50"></text></g><g><title>alloc::slice::merge_sort (1 samples, 0.01%)</title><rect x="43.0900%" y="1173" width="0.0107%" height="15" fill="rgb(249,137,25)"/><text x="43.3400%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="43.0900%" y="1157" width="0.0107%" height="15" fill="rgb(239,155,26)"/><text x="43.3400%" y="1167.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.12%)</title><rect x="43.1328%" y="1173" width="0.1179%" height="15" fill="rgb(227,85,46)"/><text x="43.3828%" y="1183.50"></text></g><g><title>core::ptr::read (11 samples, 0.12%)</title><rect x="43.1328%" y="1157" width="0.1179%" height="15" fill="rgb(251,107,43)"/><text x="43.3828%" y="1167.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.12%)</title><rect x="43.1328%" y="1141" width="0.1179%" height="15" fill="rgb(234,170,33)"/><text x="43.3828%" y="1151.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.06%)</title><rect x="43.2508%" y="1173" width="0.0643%" height="15" fill="rgb(206,29,35)"/><text x="43.5008%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (8 samples, 0.09%)</title><rect x="43.3151%" y="1173" width="0.0858%" height="15" fill="rgb(227,138,25)"/><text x="43.5651%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8 samples, 0.09%)</title><rect x="43.3151%" y="1157" width="0.0858%" height="15" fill="rgb(249,131,35)"/><text x="43.5651%" y="1167.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.09%)</title><rect x="43.3151%" y="1141" width="0.0858%" height="15" fill="rgb(239,6,40)"/><text x="43.5651%" y="1151.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.09%)</title><rect x="43.3151%" y="1125" width="0.0858%" height="15" fill="rgb(246,136,47)"/><text x="43.5651%" y="1135.50"></text></g><g><title>imalloc_body (1 samples, 0.01%)</title><rect x="43.4116%" y="1029" width="0.0107%" height="15" fill="rgb(253,58,26)"/><text x="43.6616%" y="1039.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.01%)</title><rect x="43.4116%" y="1013" width="0.0107%" height="15" fill="rgb(237,141,10)"/><text x="43.6616%" y="1023.50"></text></g><g><title>iallocztm (1 samples, 0.01%)</title><rect x="43.4116%" y="997" width="0.0107%" height="15" fill="rgb(234,156,12)"/><text x="43.6616%" y="1007.50"></text></g><g><title>arena_malloc (1 samples, 0.01%)</title><rect x="43.4116%" y="981" width="0.0107%" height="15" fill="rgb(243,224,36)"/><text x="43.6616%" y="991.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.01%)</title><rect x="43.4116%" y="965" width="0.0107%" height="15" fill="rgb(205,229,51)"/><text x="43.6616%" y="975.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.01%)</title><rect x="43.4116%" y="949" width="0.0107%" height="15" fill="rgb(223,189,4)"/><text x="43.6616%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.03%)</title><rect x="43.4009%" y="1109" width="0.0322%" height="15" fill="rgb(249,167,54)"/><text x="43.6509%" y="1119.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.03%)</title><rect x="43.4009%" y="1093" width="0.0322%" height="15" fill="rgb(218,34,28)"/><text x="43.6509%" y="1103.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.03%)</title><rect x="43.4009%" y="1077" width="0.0322%" height="15" fill="rgb(232,109,42)"/><text x="43.6509%" y="1087.50"></text></g><g><title>_rjem_mallocx (3 samples, 0.03%)</title><rect x="43.4009%" y="1061" width="0.0322%" height="15" fill="rgb(248,214,46)"/><text x="43.6509%" y="1071.50"></text></g><g><title>imalloc (2 samples, 0.02%)</title><rect x="43.4116%" y="1045" width="0.0214%" height="15" fill="rgb(244,216,40)"/><text x="43.6616%" y="1055.50"></text></g><g><title>tsd_fetch (1 samples, 0.01%)</title><rect x="43.4223%" y="1029" width="0.0107%" height="15" fill="rgb(231,226,31)"/><text x="43.6723%" y="1039.50"></text></g><g><title>tsd_fetch_impl (1 samples, 0.01%)</title><rect x="43.4223%" y="1013" width="0.0107%" height="15" fill="rgb(238,38,43)"/><text x="43.6723%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.04%)</title><rect x="43.4009%" y="1173" width="0.0429%" height="15" fill="rgb(208,88,43)"/><text x="43.6509%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.04%)</title><rect x="43.4009%" y="1157" width="0.0429%" height="15" fill="rgb(205,136,37)"/><text x="43.6509%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.04%)</title><rect x="43.4009%" y="1141" width="0.0429%" height="15" fill="rgb(237,34,14)"/><text x="43.6509%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.04%)</title><rect x="43.4009%" y="1125" width="0.0429%" height="15" fill="rgb(236,193,44)"/><text x="43.6509%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (1 samples, 0.01%)</title><rect x="43.4330%" y="1109" width="0.0107%" height="15" fill="rgb(231,48,10)"/><text x="43.6830%" y="1119.50"></text></g><g><title>__rg_dealloc (1 samples, 0.01%)</title><rect x="43.4438%" y="1045" width="0.0107%" height="15" fill="rgb(213,141,34)"/><text x="43.6938%" y="1055.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.01%)</title><rect x="43.4438%" y="1029" width="0.0107%" height="15" fill="rgb(249,130,34)"/><text x="43.6938%" y="1039.50"></text></g><g><title>jemallocator::layout_to_flags (1 samples, 0.01%)</title><rect x="43.4438%" y="1013" width="0.0107%" height="15" fill="rgb(219,42,41)"/><text x="43.6938%" y="1023.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate (101 samples, 1.08%)</title><rect x="42.3931%" y="1253" width="1.0829%" height="15" fill="rgb(224,100,54)"/><text x="42.6431%" y="1263.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_match::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Match&gt;::evaluate (54 samples, 0.58%)</title><rect x="42.8970%" y="1237" width="0.5790%" height="15" fill="rgb(229,200,27)"/><text x="43.1470%" y="1247.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute (37 samples, 0.40%)</title><rect x="43.0792%" y="1221" width="0.3967%" height="15" fill="rgb(217,118,10)"/><text x="43.3292%" y="1231.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute_no_sort (35 samples, 0.38%)</title><rect x="43.1007%" y="1205" width="0.3753%" height="15" fill="rgb(206,22,3)"/><text x="43.3507%" y="1215.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::substitute_expressions_in_par (34 samples, 0.36%)</title><rect x="43.1114%" y="1189" width="0.3645%" height="15" fill="rgb(232,163,46)"/><text x="43.3614%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;model::rho_types::Expr&gt;&gt; (3 samples, 0.03%)</title><rect x="43.4438%" y="1173" width="0.0322%" height="15" fill="rgb(206,95,13)"/><text x="43.6938%" y="1183.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="43.4438%" y="1157" width="0.0322%" height="15" fill="rgb(253,154,18)"/><text x="43.6938%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;model::rho_types::Expr,alloc::alloc::Global&gt;&gt; (3 samples, 0.03%)</title><rect x="43.4438%" y="1141" width="0.0322%" height="15" fill="rgb(219,32,23)"/><text x="43.6938%" y="1151.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="43.4438%" y="1125" width="0.0322%" height="15" fill="rgb(230,191,45)"/><text x="43.6938%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (3 samples, 0.03%)</title><rect x="43.4438%" y="1109" width="0.0322%" height="15" fill="rgb(229,64,36)"/><text x="43.6938%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="43.4438%" y="1093" width="0.0322%" height="15" fill="rgb(205,129,25)"/><text x="43.6938%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.03%)</title><rect x="43.4438%" y="1077" width="0.0322%" height="15" fill="rgb(254,112,7)"/><text x="43.6938%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.03%)</title><rect x="43.4438%" y="1061" width="0.0322%" height="15" fill="rgb(226,53,48)"/><text x="43.6938%" y="1071.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.02%)</title><rect x="43.4545%" y="1045" width="0.0214%" height="15" fill="rgb(214,153,38)"/><text x="43.7045%" y="1055.50"></text></g><g><title>isfree (2 samples, 0.02%)</title><rect x="43.4545%" y="1029" width="0.0214%" height="15" fill="rgb(243,101,7)"/><text x="43.7045%" y="1039.50"></text></g><g><title>isdalloct (2 samples, 0.02%)</title><rect x="43.4545%" y="1013" width="0.0214%" height="15" fill="rgb(240,140,22)"/><text x="43.7045%" y="1023.50"></text></g><g><title>arena_sdalloc (2 samples, 0.02%)</title><rect x="43.4545%" y="997" width="0.0214%" height="15" fill="rgb(235,114,2)"/><text x="43.7045%" y="1007.50"></text></g><g><title>tcache_dalloc_small (2 samples, 0.02%)</title><rect x="43.4545%" y="981" width="0.0214%" height="15" fill="rgb(242,59,12)"/><text x="43.7045%" y="991.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::handle_comm_events (180 samples, 1.93%)</title><rect x="41.5568%" y="1269" width="1.9299%" height="15" fill="rgb(252,134,9)"/><text x="41.8068%" y="1279.50">r..</text></g><g><title>tokio::task::blocking::spawn_blocking (1 samples, 0.01%)</title><rect x="43.4759%" y="1253" width="0.0107%" height="15" fill="rgb(236,4,44)"/><text x="43.7259%" y="1263.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (1 samples, 0.01%)</title><rect x="43.4759%" y="1237" width="0.0107%" height="15" fill="rgb(254,172,41)"/><text x="43.7259%" y="1247.50"></text></g><g><title>tokio::runtime::handle::Handle::spawn_blocking (1 samples, 0.01%)</title><rect x="43.4759%" y="1221" width="0.0107%" height="15" fill="rgb(244,63,20)"/><text x="43.7259%" y="1231.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn (1 samples, 0.01%)</title><rect x="43.4759%" y="1205" width="0.0107%" height="15" fill="rgb(250,73,31)"/><text x="43.7259%" y="1215.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread (1 samples, 0.01%)</title><rect x="43.4759%" y="1189" width="0.0107%" height="15" fill="rgb(241,38,36)"/><text x="43.7259%" y="1199.50"></text></g><g><title>std::thread::Builder::spawn (1 samples, 0.01%)</title><rect x="43.4759%" y="1173" width="0.0107%" height="15" fill="rgb(245,211,2)"/><text x="43.7259%" y="1183.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (1 samples, 0.01%)</title><rect x="43.4759%" y="1157" width="0.0107%" height="15" fill="rgb(206,120,28)"/><text x="43.7259%" y="1167.50"></text></g><g><title>std::sys::unix::thread::Thread::new (1 samples, 0.01%)</title><rect x="43.4759%" y="1141" width="0.0107%" height="15" fill="rgb(211,59,34)"/><text x="43.7259%" y="1151.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="43.4759%" y="1125" width="0.0107%" height="15" fill="rgb(233,168,5)"/><text x="43.7259%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="43.4759%" y="1109" width="0.0107%" height="15" fill="rgb(234,33,13)"/><text x="43.7259%" y="1119.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="43.4759%" y="1093" width="0.0107%" height="15" fill="rgb(231,150,26)"/><text x="43.7259%" y="1103.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="43.4759%" y="1077" width="0.0107%" height="15" fill="rgb(217,191,4)"/><text x="43.7259%" y="1087.50"></text></g><g><title>_rjem_mallocx (1 samples, 0.01%)</title><rect x="43.4759%" y="1061" width="0.0107%" height="15" fill="rgb(246,198,38)"/><text x="43.7259%" y="1071.50"></text></g><g><title>imalloc (1 samples, 0.01%)</title><rect x="43.4759%" y="1045" width="0.0107%" height="15" fill="rgb(245,64,37)"/><text x="43.7259%" y="1055.50"></text></g><g><title>imalloc_body (1 samples, 0.01%)</title><rect x="43.4759%" y="1029" width="0.0107%" height="15" fill="rgb(250,30,36)"/><text x="43.7259%" y="1039.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.01%)</title><rect x="43.4759%" y="1013" width="0.0107%" height="15" fill="rgb(217,86,53)"/><text x="43.7259%" y="1023.50"></text></g><g><title>iallocztm (1 samples, 0.01%)</title><rect x="43.4759%" y="997" width="0.0107%" height="15" fill="rgb(228,157,16)"/><text x="43.7259%" y="1007.50"></text></g><g><title>arena_malloc (1 samples, 0.01%)</title><rect x="43.4759%" y="981" width="0.0107%" height="15" fill="rgb(217,59,31)"/><text x="43.7259%" y="991.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.01%)</title><rect x="43.4759%" y="965" width="0.0107%" height="15" fill="rgb(237,138,41)"/><text x="43.7259%" y="975.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.01%)</title><rect x="43.4759%" y="949" width="0.0107%" height="15" fill="rgb(227,91,49)"/><text x="43.7259%" y="959.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (1 samples, 0.01%)</title><rect x="43.4759%" y="933" width="0.0107%" height="15" fill="rgb(247,21,44)"/><text x="43.7259%" y="943.50"></text></g><g><title>arena_slab_reg_alloc (1 samples, 0.01%)</title><rect x="43.4759%" y="917" width="0.0107%" height="15" fill="rgb(219,210,51)"/><text x="43.7259%" y="927.50"></text></g><g><title>bitmap_sfu (1 samples, 0.01%)</title><rect x="43.4759%" y="901" width="0.0107%" height="15" fill="rgb(209,140,6)"/><text x="43.7259%" y="911.50"></text></g><g><title>bitmap_set (1 samples, 0.01%)</title><rect x="43.4759%" y="885" width="0.0107%" height="15" fill="rgb(221,188,24)"/><text x="43.7259%" y="895.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (3 samples, 0.03%)</title><rect x="43.5188%" y="1221" width="0.0322%" height="15" fill="rgb(232,154,20)"/><text x="43.7688%" y="1231.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="43.5188%" y="1205" width="0.0322%" height="15" fill="rgb(244,137,50)"/><text x="43.7688%" y="1215.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="43.5617%" y="1205" width="0.0107%" height="15" fill="rgb(225,185,43)"/><text x="43.8117%" y="1215.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (3 samples, 0.03%)</title><rect x="43.5510%" y="1221" width="0.0322%" height="15" fill="rgb(213,205,38)"/><text x="43.8010%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.01%)</title><rect x="43.5724%" y="1205" width="0.0107%" height="15" fill="rgb(236,73,12)"/><text x="43.8224%" y="1215.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.09%)</title><rect x="43.5831%" y="1221" width="0.0858%" height="15" fill="rgb(235,219,13)"/><text x="43.8331%" y="1231.50"></text></g><g><title>__rg_dealloc (1 samples, 0.01%)</title><rect x="43.6689%" y="1125" width="0.0107%" height="15" fill="rgb(218,59,36)"/><text x="43.9189%" y="1135.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.01%)</title><rect x="43.6689%" y="1109" width="0.0107%" height="15" fill="rgb(205,110,39)"/><text x="43.9189%" y="1119.50"></text></g><g><title>jemallocator::layout_to_flags (1 samples, 0.01%)</title><rect x="43.6689%" y="1093" width="0.0107%" height="15" fill="rgb(218,206,42)"/><text x="43.9189%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (3 samples, 0.03%)</title><rect x="43.6689%" y="1205" width="0.0322%" height="15" fill="rgb(248,125,24)"/><text x="43.9189%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (3 samples, 0.03%)</title><rect x="43.6689%" y="1189" width="0.0322%" height="15" fill="rgb(242,28,27)"/><text x="43.9189%" y="1199.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="43.6689%" y="1173" width="0.0322%" height="15" fill="rgb(216,228,15)"/><text x="43.9189%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.03%)</title><rect x="43.6689%" y="1157" width="0.0322%" height="15" fill="rgb(235,116,46)"/><text x="43.9189%" y="1167.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.03%)</title><rect x="43.6689%" y="1141" width="0.0322%" height="15" fill="rgb(224,18,32)"/><text x="43.9189%" y="1151.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.02%)</title><rect x="43.6796%" y="1125" width="0.0214%" height="15" fill="rgb(252,5,12)"/><text x="43.9296%" y="1135.50"></text></g><g><title>isfree (2 samples, 0.02%)</title><rect x="43.6796%" y="1109" width="0.0214%" height="15" fill="rgb(251,36,5)"/><text x="43.9296%" y="1119.50"></text></g><g><title>isdalloct (2 samples, 0.02%)</title><rect x="43.6796%" y="1093" width="0.0214%" height="15" fill="rgb(217,53,14)"/><text x="43.9296%" y="1103.50"></text></g><g><title>arena_sdalloc (2 samples, 0.02%)</title><rect x="43.6796%" y="1077" width="0.0214%" height="15" fill="rgb(215,86,45)"/><text x="43.9296%" y="1087.50"></text></g><g><title>tcache_dalloc_small (2 samples, 0.02%)</title><rect x="43.6796%" y="1061" width="0.0214%" height="15" fill="rgb(242,169,11)"/><text x="43.9296%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (4 samples, 0.04%)</title><rect x="43.6689%" y="1221" width="0.0429%" height="15" fill="rgb(211,213,45)"/><text x="43.9189%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Match&gt;&gt; (1 samples, 0.01%)</title><rect x="43.7011%" y="1205" width="0.0107%" height="15" fill="rgb(205,88,11)"/><text x="43.9511%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="43.7011%" y="1189" width="0.0107%" height="15" fill="rgb(252,69,26)"/><text x="43.9511%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Match]&gt; (1 samples, 0.01%)</title><rect x="43.7011%" y="1173" width="0.0107%" height="15" fill="rgb(246,123,37)"/><text x="43.9511%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="43.7118%" y="1173" width="0.0107%" height="15" fill="rgb(212,205,5)"/><text x="43.9618%" y="1183.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (7 samples, 0.08%)</title><rect x="43.7225%" y="1125" width="0.0751%" height="15" fill="rgb(253,148,0)"/><text x="43.9725%" y="1135.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.08%)</title><rect x="43.7225%" y="1109" width="0.0751%" height="15" fill="rgb(239,22,4)"/><text x="43.9725%" y="1119.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="43.7869%" y="1093" width="0.0107%" height="15" fill="rgb(226,26,53)"/><text x="44.0369%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="43.8190%" y="1077" width="0.0107%" height="15" fill="rgb(225,229,45)"/><text x="44.0690%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="43.8190%" y="1061" width="0.0107%" height="15" fill="rgb(220,60,37)"/><text x="44.0690%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="43.8190%" y="1045" width="0.0107%" height="15" fill="rgb(217,180,35)"/><text x="44.0690%" y="1055.50"></text></g><g><title>__rg_alloc (1 samples, 0.01%)</title><rect x="43.8190%" y="1029" width="0.0107%" height="15" fill="rgb(229,7,53)"/><text x="44.0690%" y="1039.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.01%)</title><rect x="43.8190%" y="1013" width="0.0107%" height="15" fill="rgb(254,137,3)"/><text x="44.0690%" y="1023.50"></text></g><g><title>jemallocator::layout_to_flags (1 samples, 0.01%)</title><rect x="43.8190%" y="997" width="0.0107%" height="15" fill="rgb(215,140,41)"/><text x="44.0690%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.06%)</title><rect x="43.7976%" y="1125" width="0.0643%" height="15" fill="rgb(250,80,15)"/><text x="44.0476%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.04%)</title><rect x="43.8190%" y="1109" width="0.0429%" height="15" fill="rgb(252,191,6)"/><text x="44.0690%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.04%)</title><rect x="43.8190%" y="1093" width="0.0429%" height="15" fill="rgb(246,217,18)"/><text x="44.0690%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (3 samples, 0.03%)</title><rect x="43.8297%" y="1077" width="0.0322%" height="15" fill="rgb(223,93,7)"/><text x="44.0797%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.16%)</title><rect x="43.7118%" y="1189" width="0.1608%" height="15" fill="rgb(225,55,52)"/><text x="43.9618%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14 samples, 0.15%)</title><rect x="43.7225%" y="1173" width="0.1501%" height="15" fill="rgb(240,31,24)"/><text x="43.9725%" y="1183.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.15%)</title><rect x="43.7225%" y="1157" width="0.1501%" height="15" fill="rgb(205,56,52)"/><text x="43.9725%" y="1167.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14 samples, 0.15%)</title><rect x="43.7225%" y="1141" width="0.1501%" height="15" fill="rgb(246,146,12)"/><text x="43.9725%" y="1151.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="43.8619%" y="1125" width="0.0107%" height="15" fill="rgb(239,84,36)"/><text x="44.1119%" y="1135.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="43.8619%" y="1109" width="0.0107%" height="15" fill="rgb(207,41,40)"/><text x="44.1119%" y="1119.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (19 samples, 0.20%)</title><rect x="43.7118%" y="1205" width="0.2037%" height="15" fill="rgb(241,179,25)"/><text x="43.9618%" y="1215.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="43.8726%" y="1189" width="0.0429%" height="15" fill="rgb(210,0,34)"/><text x="44.1226%" y="1199.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="43.8726%" y="1173" width="0.0429%" height="15" fill="rgb(225,217,29)"/><text x="44.1226%" y="1183.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="43.8726%" y="1157" width="0.0429%" height="15" fill="rgb(216,191,38)"/><text x="44.1226%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="43.8726%" y="1141" width="0.0429%" height="15" fill="rgb(232,140,52)"/><text x="44.1226%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.04%)</title><rect x="43.8726%" y="1125" width="0.0429%" height="15" fill="rgb(223,158,51)"/><text x="44.1226%" y="1135.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.04%)</title><rect x="43.8726%" y="1109" width="0.0429%" height="15" fill="rgb(235,29,51)"/><text x="44.1226%" y="1119.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.04%)</title><rect x="43.8726%" y="1093" width="0.0429%" height="15" fill="rgb(215,181,18)"/><text x="44.1226%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.04%)</title><rect x="43.8726%" y="1077" width="0.0429%" height="15" fill="rgb(227,125,34)"/><text x="44.1226%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.04%)</title><rect x="43.8726%" y="1061" width="0.0429%" height="15" fill="rgb(230,197,49)"/><text x="44.1226%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="43.9048%" y="1045" width="0.0107%" height="15" fill="rgb(239,141,16)"/><text x="44.1548%" y="1055.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (40 samples, 0.43%)</title><rect x="43.4974%" y="1253" width="0.4289%" height="15" fill="rgb(225,105,43)"/><text x="43.7474%" y="1263.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (40 samples, 0.43%)</title><rect x="43.4974%" y="1237" width="0.4289%" height="15" fill="rgb(214,131,14)"/><text x="43.7474%" y="1247.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_var::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S,model::rho_types::Par&gt; for model::rho_types::Var&gt;::evaluate (20 samples, 0.21%)</title><rect x="43.7118%" y="1221" width="0.2144%" height="15" fill="rgb(229,177,11)"/><text x="43.9618%" y="1231.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="43.9155%" y="1205" width="0.0107%" height="15" fill="rgb(231,180,14)"/><text x="44.1655%" y="1215.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (6 samples, 0.06%)</title><rect x="43.9584%" y="1205" width="0.0643%" height="15" fill="rgb(232,88,2)"/><text x="44.2084%" y="1215.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.06%)</title><rect x="43.9584%" y="1189" width="0.0643%" height="15" fill="rgb(205,220,8)"/><text x="44.2084%" y="1199.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (1 samples, 0.01%)</title><rect x="44.0227%" y="1189" width="0.0107%" height="15" fill="rgb(225,23,53)"/><text x="44.2727%" y="1199.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.04%)</title><rect x="44.0335%" y="1189" width="0.0429%" height="15" fill="rgb(213,62,29)"/><text x="44.2835%" y="1199.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (6 samples, 0.06%)</title><rect x="44.0227%" y="1205" width="0.0643%" height="15" fill="rgb(227,75,7)"/><text x="44.2727%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (1 samples, 0.01%)</title><rect x="44.0763%" y="1189" width="0.0107%" height="15" fill="rgb(207,105,14)"/><text x="44.3263%" y="1199.50"></text></g><g><title>[libc-2.31.so] (20 samples, 0.21%)</title><rect x="44.0871%" y="1205" width="0.2144%" height="15" fill="rgb(245,62,29)"/><text x="44.3371%" y="1215.50"></text></g><g><title>__rg_dealloc (1 samples, 0.01%)</title><rect x="44.3015%" y="1189" width="0.0107%" height="15" fill="rgb(236,202,4)"/><text x="44.5515%" y="1199.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.01%)</title><rect x="44.3015%" y="1173" width="0.0107%" height="15" fill="rgb(250,67,1)"/><text x="44.5515%" y="1183.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.01%)</title><rect x="44.3122%" y="1189" width="0.0107%" height="15" fill="rgb(253,115,44)"/><text x="44.5622%" y="1199.50"></text></g><g><title>isfree (1 samples, 0.01%)</title><rect x="44.3122%" y="1173" width="0.0107%" height="15" fill="rgb(251,139,18)"/><text x="44.5622%" y="1183.50"></text></g><g><title>isdalloct (1 samples, 0.01%)</title><rect x="44.3122%" y="1157" width="0.0107%" height="15" fill="rgb(218,22,32)"/><text x="44.5622%" y="1167.50"></text></g><g><title>arena_sdalloc (1 samples, 0.01%)</title><rect x="44.3122%" y="1141" width="0.0107%" height="15" fill="rgb(243,53,5)"/><text x="44.5622%" y="1151.50"></text></g><g><title>sz_size2index (1 samples, 0.01%)</title><rect x="44.3122%" y="1125" width="0.0107%" height="15" fill="rgb(227,56,16)"/><text x="44.5622%" y="1135.50"></text></g><g><title>sz_size2index_lookup (1 samples, 0.01%)</title><rect x="44.3122%" y="1109" width="0.0107%" height="15" fill="rgb(245,53,0)"/><text x="44.5622%" y="1119.50"></text></g><g><title>_rjem_je_extent_heap_insert (1 samples, 0.01%)</title><rect x="44.3229%" y="965" width="0.0107%" height="15" fill="rgb(216,170,35)"/><text x="44.5729%" y="975.50"></text></g><g><title>memset (1 samples, 0.01%)</title><rect x="44.3229%" y="949" width="0.0107%" height="15" fill="rgb(211,200,8)"/><text x="44.5729%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (2 samples, 0.02%)</title><rect x="44.3229%" y="1189" width="0.0214%" height="15" fill="rgb(228,204,44)"/><text x="44.5729%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (2 samples, 0.02%)</title><rect x="44.3229%" y="1173" width="0.0214%" height="15" fill="rgb(214,121,17)"/><text x="44.5729%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (2 samples, 0.02%)</title><rect x="44.3229%" y="1157" width="0.0214%" height="15" fill="rgb(233,64,38)"/><text x="44.5729%" y="1167.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="44.3229%" y="1141" width="0.0214%" height="15" fill="rgb(253,54,19)"/><text x="44.5729%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="44.3229%" y="1125" width="0.0214%" height="15" fill="rgb(253,94,18)"/><text x="44.5729%" y="1135.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="44.3229%" y="1109" width="0.0214%" height="15" fill="rgb(227,57,52)"/><text x="44.5729%" y="1119.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.02%)</title><rect x="44.3229%" y="1093" width="0.0214%" height="15" fill="rgb(230,228,50)"/><text x="44.5729%" y="1103.50"></text></g><g><title>isfree (2 samples, 0.02%)</title><rect x="44.3229%" y="1077" width="0.0214%" height="15" fill="rgb(217,205,27)"/><text x="44.5729%" y="1087.50"></text></g><g><title>isdalloct (2 samples, 0.02%)</title><rect x="44.3229%" y="1061" width="0.0214%" height="15" fill="rgb(252,71,50)"/><text x="44.5729%" y="1071.50"></text></g><g><title>arena_sdalloc (2 samples, 0.02%)</title><rect x="44.3229%" y="1045" width="0.0214%" height="15" fill="rgb(209,86,4)"/><text x="44.5729%" y="1055.50"></text></g><g><title>tcache_dalloc_small (2 samples, 0.02%)</title><rect x="44.3229%" y="1029" width="0.0214%" height="15" fill="rgb(229,94,0)"/><text x="44.5729%" y="1039.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (2 samples, 0.02%)</title><rect x="44.3229%" y="1013" width="0.0214%" height="15" fill="rgb(252,223,21)"/><text x="44.5729%" y="1023.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (2 samples, 0.02%)</title><rect x="44.3229%" y="997" width="0.0214%" height="15" fill="rgb(230,210,4)"/><text x="44.5729%" y="1007.50"></text></g><g><title>arena_dalloc_bin_locked_impl (2 samples, 0.02%)</title><rect x="44.3229%" y="981" width="0.0214%" height="15" fill="rgb(240,149,38)"/><text x="44.5729%" y="991.50"></text></g><g><title>arena_slab_reg_dalloc (1 samples, 0.01%)</title><rect x="44.3337%" y="965" width="0.0107%" height="15" fill="rgb(254,105,20)"/><text x="44.5837%" y="975.50"></text></g><g><title>arena_slab_regind (1 samples, 0.01%)</title><rect x="44.3337%" y="949" width="0.0107%" height="15" fill="rgb(253,87,46)"/><text x="44.5837%" y="959.50"></text></g><g><title>div_compute (1 samples, 0.01%)</title><rect x="44.3337%" y="933" width="0.0107%" height="15" fill="rgb(253,116,33)"/><text x="44.5837%" y="943.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.02%)</title><rect x="44.3551%" y="1141" width="0.0214%" height="15" fill="rgb(229,198,5)"/><text x="44.6051%" y="1151.50"></text></g><g><title>isfree (1 samples, 0.01%)</title><rect x="44.3658%" y="1125" width="0.0107%" height="15" fill="rgb(242,38,37)"/><text x="44.6158%" y="1135.50"></text></g><g><title>isdalloct (1 samples, 0.01%)</title><rect x="44.3658%" y="1109" width="0.0107%" height="15" fill="rgb(242,69,53)"/><text x="44.6158%" y="1119.50"></text></g><g><title>arena_sdalloc (1 samples, 0.01%)</title><rect x="44.3658%" y="1093" width="0.0107%" height="15" fill="rgb(249,80,16)"/><text x="44.6158%" y="1103.50"></text></g><g><title>tcache_dalloc_small (1 samples, 0.01%)</title><rect x="44.3658%" y="1077" width="0.0107%" height="15" fill="rgb(206,128,11)"/><text x="44.6158%" y="1087.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.01%)</title><rect x="44.3658%" y="1061" width="0.0107%" height="15" fill="rgb(212,35,20)"/><text x="44.6158%" y="1071.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (1 samples, 0.01%)</title><rect x="44.3658%" y="1045" width="0.0107%" height="15" fill="rgb(236,79,13)"/><text x="44.6158%" y="1055.50"></text></g><g><title>arena_dalloc_bin_locked_impl (1 samples, 0.01%)</title><rect x="44.3658%" y="1029" width="0.0107%" height="15" fill="rgb(233,123,3)"/><text x="44.6158%" y="1039.50"></text></g><g><title>arena_slab_reg_dalloc (1 samples, 0.01%)</title><rect x="44.3658%" y="1013" width="0.0107%" height="15" fill="rgb(214,93,52)"/><text x="44.6158%" y="1023.50"></text></g><g><title>extent_nfree_inc (1 samples, 0.01%)</title><rect x="44.3658%" y="997" width="0.0107%" height="15" fill="rgb(251,37,40)"/><text x="44.6158%" y="1007.50"></text></g><g><title>__rg_dealloc (2 samples, 0.02%)</title><rect x="44.3765%" y="1045" width="0.0214%" height="15" fill="rgb(227,80,54)"/><text x="44.6265%" y="1055.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.01%)</title><rect x="44.3873%" y="1029" width="0.0107%" height="15" fill="rgb(254,48,11)"/><text x="44.6373%" y="1039.50"></text></g><g><title>jemallocator::layout_to_flags (1 samples, 0.01%)</title><rect x="44.3873%" y="1013" width="0.0107%" height="15" fill="rgb(235,193,26)"/><text x="44.6373%" y="1023.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (2 samples, 0.02%)</title><rect x="44.4194%" y="949" width="0.0214%" height="15" fill="rgb(229,99,21)"/><text x="44.6694%" y="959.50"></text></g><g><title>arena_dalloc_bin_locked_impl (2 samples, 0.02%)</title><rect x="44.4194%" y="933" width="0.0214%" height="15" fill="rgb(211,140,41)"/><text x="44.6694%" y="943.50"></text></g><g><title>arena_dalloc_bin_slab (2 samples, 0.02%)</title><rect x="44.4194%" y="917" width="0.0214%" height="15" fill="rgb(240,227,30)"/><text x="44.6694%" y="927.50"></text></g><g><title>arena_slab_dalloc (2 samples, 0.02%)</title><rect x="44.4194%" y="901" width="0.0214%" height="15" fill="rgb(215,224,45)"/><text x="44.6694%" y="911.50"></text></g><g><title>_rjem_je_arena_extents_dirty_dalloc (2 samples, 0.02%)</title><rect x="44.4194%" y="885" width="0.0214%" height="15" fill="rgb(206,123,31)"/><text x="44.6694%" y="895.50"></text></g><g><title>extent_record (2 samples, 0.02%)</title><rect x="44.4194%" y="869" width="0.0214%" height="15" fill="rgb(210,138,16)"/><text x="44.6694%" y="879.50"></text></g><g><title>malloc_mutex_unlock (2 samples, 0.02%)</title><rect x="44.4194%" y="853" width="0.0214%" height="15" fill="rgb(228,57,28)"/><text x="44.6694%" y="863.50"></text></g><g><title>__GI___pthread_mutex_unlock (2 samples, 0.02%)</title><rect x="44.4194%" y="837" width="0.0214%" height="15" fill="rgb(242,170,10)"/><text x="44.6694%" y="847.50"></text></g><g><title>extent_arena_get (1 samples, 0.01%)</title><rect x="44.4409%" y="949" width="0.0107%" height="15" fill="rgb(228,214,39)"/><text x="44.6909%" y="959.50"></text></g><g><title>atomic_load_p (1 samples, 0.01%)</title><rect x="44.4409%" y="933" width="0.0107%" height="15" fill="rgb(218,179,33)"/><text x="44.6909%" y="943.50"></text></g><g><title>rtree_extent_read (1 samples, 0.01%)</title><rect x="44.4516%" y="933" width="0.0107%" height="15" fill="rgb(235,193,39)"/><text x="44.7016%" y="943.50"></text></g><g><title>rtree_leaf_elm_extent_read (1 samples, 0.01%)</title><rect x="44.4516%" y="917" width="0.0107%" height="15" fill="rgb(219,221,36)"/><text x="44.7016%" y="927.50"></text></g><g><title>rtree_leaf_elm_bits_read (1 samples, 0.01%)</title><rect x="44.4516%" y="901" width="0.0107%" height="15" fill="rgb(248,218,19)"/><text x="44.7016%" y="911.50"></text></g><g><title>atomic_load_p (1 samples, 0.01%)</title><rect x="44.4516%" y="885" width="0.0107%" height="15" fill="rgb(205,50,9)"/><text x="44.7016%" y="895.50"></text></g><g><title>iealloc (2 samples, 0.02%)</title><rect x="44.4516%" y="949" width="0.0214%" height="15" fill="rgb(238,81,28)"/><text x="44.7016%" y="959.50"></text></g><g><title>tsdn_rtree_ctx (1 samples, 0.01%)</title><rect x="44.4623%" y="933" width="0.0107%" height="15" fill="rgb(235,110,19)"/><text x="44.7123%" y="943.50"></text></g><g><title>tsd_rtree_ctx (1 samples, 0.01%)</title><rect x="44.4623%" y="917" width="0.0107%" height="15" fill="rgb(214,7,14)"/><text x="44.7123%" y="927.50"></text></g><g><title>tsd_rtree_ctxp_get (1 samples, 0.01%)</title><rect x="44.4623%" y="901" width="0.0107%" height="15" fill="rgb(211,77,3)"/><text x="44.7123%" y="911.50"></text></g><g><title>tsd_rtree_ctxp_get_unsafe (1 samples, 0.01%)</title><rect x="44.4623%" y="885" width="0.0107%" height="15" fill="rgb(229,5,9)"/><text x="44.7123%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::expr::ExprInstance&gt;&gt; (18 samples, 0.19%)</title><rect x="44.3015%" y="1205" width="0.1930%" height="15" fill="rgb(225,90,11)"/><text x="44.5515%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::expr::ExprInstance&gt; (14 samples, 0.15%)</title><rect x="44.3444%" y="1189" width="0.1501%" height="15" fill="rgb(242,56,8)"/><text x="44.5944%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::EPlus&gt; (14 samples, 0.15%)</title><rect x="44.3444%" y="1173" width="0.1501%" height="15" fill="rgb(249,212,39)"/><text x="44.5944%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::Par&gt;&gt; (14 samples, 0.15%)</title><rect x="44.3444%" y="1157" width="0.1501%" height="15" fill="rgb(236,90,9)"/><text x="44.5944%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (11 samples, 0.12%)</title><rect x="44.3765%" y="1141" width="0.1179%" height="15" fill="rgb(206,88,35)"/><text x="44.6265%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (11 samples, 0.12%)</title><rect x="44.3765%" y="1125" width="0.1179%" height="15" fill="rgb(205,126,30)"/><text x="44.6265%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (11 samples, 0.12%)</title><rect x="44.3765%" y="1109" width="0.1179%" height="15" fill="rgb(230,176,12)"/><text x="44.6265%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.12%)</title><rect x="44.3765%" y="1093" width="0.1179%" height="15" fill="rgb(243,19,9)"/><text x="44.6265%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.12%)</title><rect x="44.3765%" y="1077" width="0.1179%" height="15" fill="rgb(245,171,17)"/><text x="44.6265%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.12%)</title><rect x="44.3765%" y="1061" width="0.1179%" height="15" fill="rgb(227,52,21)"/><text x="44.6265%" y="1071.50"></text></g><g><title>_rjem_sdallocx (9 samples, 0.10%)</title><rect x="44.3980%" y="1045" width="0.0965%" height="15" fill="rgb(238,69,14)"/><text x="44.6480%" y="1055.50"></text></g><g><title>isfree (9 samples, 0.10%)</title><rect x="44.3980%" y="1029" width="0.0965%" height="15" fill="rgb(241,156,39)"/><text x="44.6480%" y="1039.50"></text></g><g><title>isdalloct (9 samples, 0.10%)</title><rect x="44.3980%" y="1013" width="0.0965%" height="15" fill="rgb(212,227,28)"/><text x="44.6480%" y="1023.50"></text></g><g><title>arena_sdalloc (9 samples, 0.10%)</title><rect x="44.3980%" y="997" width="0.0965%" height="15" fill="rgb(209,118,27)"/><text x="44.6480%" y="1007.50"></text></g><g><title>tcache_dalloc_small (9 samples, 0.10%)</title><rect x="44.3980%" y="981" width="0.0965%" height="15" fill="rgb(226,102,5)"/><text x="44.6480%" y="991.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (8 samples, 0.09%)</title><rect x="44.4087%" y="965" width="0.0858%" height="15" fill="rgb(223,34,3)"/><text x="44.6587%" y="975.50"></text></g><g><title>malloc_mutex_lock (2 samples, 0.02%)</title><rect x="44.4730%" y="949" width="0.0214%" height="15" fill="rgb(221,81,38)"/><text x="44.7230%" y="959.50"></text></g><g><title>malloc_mutex_trylock_final (2 samples, 0.02%)</title><rect x="44.4730%" y="933" width="0.0214%" height="15" fill="rgb(236,219,28)"/><text x="44.7230%" y="943.50"></text></g><g><title>__GI___pthread_mutex_trylock (2 samples, 0.02%)</title><rect x="44.4730%" y="917" width="0.0214%" height="15" fill="rgb(213,200,14)"/><text x="44.7230%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Connective&gt;&gt; (1 samples, 0.01%)</title><rect x="44.4945%" y="1189" width="0.0107%" height="15" fill="rgb(240,33,19)"/><text x="44.7445%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Connective&gt;&gt; (1 samples, 0.01%)</title><rect x="44.4945%" y="1173" width="0.0107%" height="15" fill="rgb(233,113,27)"/><text x="44.7445%" y="1183.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="44.4945%" y="1157" width="0.0107%" height="15" fill="rgb(220,221,18)"/><text x="44.7445%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="44.5052%" y="1173" width="0.0107%" height="15" fill="rgb(238,92,8)"/><text x="44.7552%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Expr]&gt; (1 samples, 0.01%)</title><rect x="44.5052%" y="1157" width="0.0107%" height="15" fill="rgb(222,164,16)"/><text x="44.7552%" y="1167.50"></text></g><g><title>__rg_dealloc (2 samples, 0.02%)</title><rect x="44.5266%" y="1109" width="0.0214%" height="15" fill="rgb(241,119,3)"/><text x="44.7766%" y="1119.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.01%)</title><rect x="44.5374%" y="1093" width="0.0107%" height="15" fill="rgb(241,44,8)"/><text x="44.7874%" y="1103.50"></text></g><g><title>jemallocator::layout_to_flags (1 samples, 0.01%)</title><rect x="44.5374%" y="1077" width="0.0107%" height="15" fill="rgb(230,36,40)"/><text x="44.7874%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (10 samples, 0.11%)</title><rect x="44.4945%" y="1205" width="0.1072%" height="15" fill="rgb(243,16,36)"/><text x="44.7445%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (9 samples, 0.10%)</title><rect x="44.5052%" y="1189" width="0.0965%" height="15" fill="rgb(231,4,26)"/><text x="44.7552%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (8 samples, 0.09%)</title><rect x="44.5159%" y="1173" width="0.0858%" height="15" fill="rgb(240,9,31)"/><text x="44.7659%" y="1183.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.09%)</title><rect x="44.5159%" y="1157" width="0.0858%" height="15" fill="rgb(207,173,15)"/><text x="44.7659%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.09%)</title><rect x="44.5159%" y="1141" width="0.0858%" height="15" fill="rgb(224,192,53)"/><text x="44.7659%" y="1151.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.08%)</title><rect x="44.5266%" y="1125" width="0.0751%" height="15" fill="rgb(223,67,28)"/><text x="44.7766%" y="1135.50"></text></g><g><title>_rjem_sdallocx (5 samples, 0.05%)</title><rect x="44.5481%" y="1109" width="0.0536%" height="15" fill="rgb(211,20,47)"/><text x="44.7981%" y="1119.50"></text></g><g><title>inallocx (4 samples, 0.04%)</title><rect x="44.5588%" y="1093" width="0.0429%" height="15" fill="rgb(240,228,2)"/><text x="44.8088%" y="1103.50"></text></g><g><title>sz_s2u (4 samples, 0.04%)</title><rect x="44.5588%" y="1077" width="0.0429%" height="15" fill="rgb(248,151,12)"/><text x="44.8088%" y="1087.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (2 samples, 0.02%)</title><rect x="44.6124%" y="1189" width="0.0214%" height="15" fill="rgb(244,8,39)"/><text x="44.8624%" y="1199.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="44.6231%" y="1173" width="0.0107%" height="15" fill="rgb(222,26,8)"/><text x="44.8731%" y="1183.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (1 samples, 0.01%)</title><rect x="44.6553%" y="1173" width="0.0107%" height="15" fill="rgb(213,106,44)"/><text x="44.9053%" y="1183.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.05%)</title><rect x="44.6660%" y="1173" width="0.0536%" height="15" fill="rgb(214,129,20)"/><text x="44.9160%" y="1183.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (14 samples, 0.15%)</title><rect x="44.6339%" y="1189" width="0.1501%" height="15" fill="rgb(212,32,13)"/><text x="44.8839%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (6 samples, 0.06%)</title><rect x="44.7196%" y="1173" width="0.0643%" height="15" fill="rgb(208,168,33)"/><text x="44.9696%" y="1183.50"></text></g><g><title>core::ptr::read (6 samples, 0.06%)</title><rect x="44.7196%" y="1157" width="0.0643%" height="15" fill="rgb(231,207,8)"/><text x="44.9696%" y="1167.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.06%)</title><rect x="44.7196%" y="1141" width="0.0643%" height="15" fill="rgb(235,219,23)"/><text x="44.9696%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="44.7732%" y="1125" width="0.0107%" height="15" fill="rgb(226,216,26)"/><text x="45.0232%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="44.7732%" y="1109" width="0.0107%" height="15" fill="rgb(239,137,16)"/><text x="45.0232%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="44.7732%" y="1093" width="0.0107%" height="15" fill="rgb(207,12,36)"/><text x="45.0232%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="44.7732%" y="1077" width="0.0107%" height="15" fill="rgb(210,214,24)"/><text x="45.0232%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="44.7732%" y="1061" width="0.0107%" height="15" fill="rgb(206,56,30)"/><text x="45.0232%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="44.7732%" y="1045" width="0.0107%" height="15" fill="rgb(228,143,26)"/><text x="45.0232%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="44.7732%" y="1029" width="0.0107%" height="15" fill="rgb(216,218,46)"/><text x="45.0232%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="44.7732%" y="1013" width="0.0107%" height="15" fill="rgb(206,6,19)"/><text x="45.0232%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="44.7732%" y="997" width="0.0107%" height="15" fill="rgb(239,177,51)"/><text x="45.0232%" y="1007.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::eval_eplus::&lt;impl rho_runtime::interpreter::reduce::eval_expression::ExprInstanceEvaluator&lt;S&gt; for model::rho_types::EPlus&gt;::evaluate (20 samples, 0.21%)</title><rect x="44.6017%" y="1205" width="0.2144%" height="15" fill="rgb(216,55,25)"/><text x="44.8517%" y="1215.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="44.7840%" y="1189" width="0.0322%" height="15" fill="rgb(231,163,29)"/><text x="45.0340%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.05%)</title><rect x="44.8912%" y="1157" width="0.0536%" height="15" fill="rgb(232,149,50)"/><text x="45.1412%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="44.9341%" y="1141" width="0.0107%" height="15" fill="rgb(223,142,48)"/><text x="45.1841%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="44.9555%" y="1109" width="0.0107%" height="15" fill="rgb(245,83,23)"/><text x="45.2055%" y="1119.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (10 samples, 0.11%)</title><rect x="44.9877%" y="1093" width="0.1072%" height="15" fill="rgb(224,63,2)"/><text x="45.2377%" y="1103.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.06%)</title><rect x="45.0306%" y="1077" width="0.0643%" height="15" fill="rgb(218,65,53)"/><text x="45.2806%" y="1087.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (13 samples, 0.14%)</title><rect x="44.9662%" y="1109" width="0.1394%" height="15" fill="rgb(221,84,29)"/><text x="45.2162%" y="1119.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="45.0949%" y="1093" width="0.0107%" height="15" fill="rgb(234,0,32)"/><text x="45.3449%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="45.1592%" y="1061" width="0.0214%" height="15" fill="rgb(206,20,16)"/><text x="45.4092%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="45.1592%" y="1045" width="0.0214%" height="15" fill="rgb(244,172,18)"/><text x="45.4092%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="45.1699%" y="1029" width="0.0107%" height="15" fill="rgb(254,133,1)"/><text x="45.4199%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (2 samples, 0.02%)</title><rect x="45.1807%" y="1061" width="0.0214%" height="15" fill="rgb(222,206,41)"/><text x="45.4307%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 0.11%)</title><rect x="45.1056%" y="1109" width="0.1072%" height="15" fill="rgb(212,3,42)"/><text x="45.3556%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.05%)</title><rect x="45.1592%" y="1093" width="0.0536%" height="15" fill="rgb(241,11,4)"/><text x="45.4092%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.05%)</title><rect x="45.1592%" y="1077" width="0.0536%" height="15" fill="rgb(205,19,26)"/><text x="45.4092%" y="1087.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="45.2021%" y="1061" width="0.0107%" height="15" fill="rgb(210,179,32)"/><text x="45.4521%" y="1071.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1 samples, 0.01%)</title><rect x="45.2021%" y="1045" width="0.0107%" height="15" fill="rgb(227,116,49)"/><text x="45.4521%" y="1055.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.01%)</title><rect x="45.2021%" y="1029" width="0.0107%" height="15" fill="rgb(211,146,6)"/><text x="45.4521%" y="1039.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.01%)</title><rect x="45.2021%" y="1013" width="0.0107%" height="15" fill="rgb(219,44,39)"/><text x="45.4521%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (33 samples, 0.35%)</title><rect x="44.8912%" y="1173" width="0.3538%" height="15" fill="rgb(234,128,11)"/><text x="45.1412%" y="1183.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (28 samples, 0.30%)</title><rect x="44.9448%" y="1157" width="0.3002%" height="15" fill="rgb(220,183,53)"/><text x="45.1948%" y="1167.50"></text></g><g><title>alloc::slice::hack::to_vec (28 samples, 0.30%)</title><rect x="44.9448%" y="1141" width="0.3002%" height="15" fill="rgb(213,219,32)"/><text x="45.1948%" y="1151.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (28 samples, 0.30%)</title><rect x="44.9448%" y="1125" width="0.3002%" height="15" fill="rgb(232,156,16)"/><text x="45.1948%" y="1135.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3 samples, 0.03%)</title><rect x="45.2128%" y="1109" width="0.0322%" height="15" fill="rgb(246,135,34)"/><text x="45.4628%" y="1119.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (41 samples, 0.44%)</title><rect x="44.8268%" y="1189" width="0.4396%" height="15" fill="rgb(241,99,0)"/><text x="45.0768%" y="1199.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="45.2450%" y="1173" width="0.0214%" height="15" fill="rgb(222,103,45)"/><text x="45.4950%" y="1183.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="45.2450%" y="1157" width="0.0214%" height="15" fill="rgb(212,57,4)"/><text x="45.4950%" y="1167.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="45.2450%" y="1141" width="0.0214%" height="15" fill="rgb(215,68,47)"/><text x="45.4950%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="45.2557%" y="1125" width="0.0107%" height="15" fill="rgb(230,84,2)"/><text x="45.5057%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="45.2557%" y="1109" width="0.0107%" height="15" fill="rgb(220,102,14)"/><text x="45.5057%" y="1119.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="45.2557%" y="1093" width="0.0107%" height="15" fill="rgb(240,10,32)"/><text x="45.5057%" y="1103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="45.2557%" y="1077" width="0.0107%" height="15" fill="rgb(215,47,27)"/><text x="45.5057%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="45.2557%" y="1061" width="0.0107%" height="15" fill="rgb(233,188,43)"/><text x="45.5057%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="45.2557%" y="1045" width="0.0107%" height="15" fill="rgb(253,190,1)"/><text x="45.5057%" y="1055.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (168 samples, 1.80%)</title><rect x="43.4867%" y="1269" width="1.8012%" height="15" fill="rgb(206,114,52)"/><text x="43.7367%" y="1279.50">r..</text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::eval_eplus::&lt;impl rho_runtime::interpreter::reduce::eval_expression::ExprInstanceEvaluator&lt;S&gt; for model::rho_types::EPlus&gt;::evaluate (127 samples, 1.36%)</title><rect x="43.9262%" y="1253" width="1.3616%" height="15" fill="rgb(233,120,37)"/><text x="44.1762%" y="1263.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (127 samples, 1.36%)</title><rect x="43.9262%" y="1237" width="1.3616%" height="15" fill="rgb(214,52,39)"/><text x="44.1762%" y="1247.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (127 samples, 1.36%)</title><rect x="43.9262%" y="1221" width="1.3616%" height="15" fill="rgb(223,80,29)"/><text x="44.1762%" y="1231.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_var::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S,model::rho_types::Par&gt; for model::rho_types::Var&gt;::evaluate (44 samples, 0.47%)</title><rect x="44.8161%" y="1205" width="0.4717%" height="15" fill="rgb(230,101,40)"/><text x="45.0661%" y="1215.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="45.2664%" y="1189" width="0.0214%" height="15" fill="rgb(219,211,8)"/><text x="45.5164%" y="1199.50"></text></g><g><title>imalloc_no_sample (3 samples, 0.03%)</title><rect x="45.2986%" y="837" width="0.0322%" height="15" fill="rgb(252,126,28)"/><text x="45.5486%" y="847.50"></text></g><g><title>iallocztm (2 samples, 0.02%)</title><rect x="45.3093%" y="821" width="0.0214%" height="15" fill="rgb(215,56,38)"/><text x="45.5593%" y="831.50"></text></g><g><title>arena_malloc (2 samples, 0.02%)</title><rect x="45.3093%" y="805" width="0.0214%" height="15" fill="rgb(249,55,44)"/><text x="45.5593%" y="815.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.02%)</title><rect x="45.3093%" y="789" width="0.0214%" height="15" fill="rgb(220,221,32)"/><text x="45.5593%" y="799.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (2 samples, 0.02%)</title><rect x="45.3093%" y="773" width="0.0214%" height="15" fill="rgb(212,216,41)"/><text x="45.5593%" y="783.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (2 samples, 0.02%)</title><rect x="45.3093%" y="757" width="0.0214%" height="15" fill="rgb(228,213,43)"/><text x="45.5593%" y="767.50"></text></g><g><title>arena_slab_reg_alloc (1 samples, 0.01%)</title><rect x="45.3200%" y="741" width="0.0107%" height="15" fill="rgb(211,31,26)"/><text x="45.5700%" y="751.50"></text></g><g><title>bitmap_sfu (1 samples, 0.01%)</title><rect x="45.3200%" y="725" width="0.0107%" height="15" fill="rgb(229,202,19)"/><text x="45.5700%" y="735.50"></text></g><g><title>bitmap_set (1 samples, 0.01%)</title><rect x="45.3200%" y="709" width="0.0107%" height="15" fill="rgb(229,105,46)"/><text x="45.5700%" y="719.50"></text></g><g><title>&lt;rho_runtime::interpreter::reduce::environment::Env&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.05%)</title><rect x="45.2879%" y="1221" width="0.0536%" height="15" fill="rgb(235,108,1)"/><text x="45.5379%" y="1231.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.05%)</title><rect x="45.2879%" y="1205" width="0.0536%" height="15" fill="rgb(245,111,35)"/><text x="45.5379%" y="1215.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::convert::From&lt;&amp;[&lt;A as smallvec::Array&gt;::Item]&gt;&gt;::from (5 samples, 0.05%)</title><rect x="45.2879%" y="1189" width="0.0536%" height="15" fill="rgb(219,185,31)"/><text x="45.5379%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.05%)</title><rect x="45.2879%" y="1173" width="0.0536%" height="15" fill="rgb(214,4,43)"/><text x="45.5379%" y="1183.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (5 samples, 0.05%)</title><rect x="45.2879%" y="1157" width="0.0536%" height="15" fill="rgb(235,227,40)"/><text x="45.5379%" y="1167.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (5 samples, 0.05%)</title><rect x="45.2879%" y="1141" width="0.0536%" height="15" fill="rgb(230,88,30)"/><text x="45.5379%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.05%)</title><rect x="45.2879%" y="1125" width="0.0536%" height="15" fill="rgb(216,217,1)"/><text x="45.5379%" y="1135.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (5 samples, 0.05%)</title><rect x="45.2879%" y="1109" width="0.0536%" height="15" fill="rgb(248,139,50)"/><text x="45.5379%" y="1119.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.05%)</title><rect x="45.2879%" y="1093" width="0.0536%" height="15" fill="rgb(233,1,21)"/><text x="45.5379%" y="1103.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (5 samples, 0.05%)</title><rect x="45.2879%" y="1077" width="0.0536%" height="15" fill="rgb(215,183,12)"/><text x="45.5379%" y="1087.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (5 samples, 0.05%)</title><rect x="45.2879%" y="1061" width="0.0536%" height="15" fill="rgb(229,104,42)"/><text x="45.5379%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.05%)</title><rect x="45.2879%" y="1045" width="0.0536%" height="15" fill="rgb(243,34,48)"/><text x="45.5379%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.05%)</title><rect x="45.2879%" y="1029" width="0.0536%" height="15" fill="rgb(239,11,44)"/><text x="45.5379%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.05%)</title><rect x="45.2879%" y="1013" width="0.0536%" height="15" fill="rgb(231,98,35)"/><text x="45.5379%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.05%)</title><rect x="45.2879%" y="997" width="0.0536%" height="15" fill="rgb(233,28,25)"/><text x="45.5379%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.05%)</title><rect x="45.2879%" y="981" width="0.0536%" height="15" fill="rgb(234,123,11)"/><text x="45.5379%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.05%)</title><rect x="45.2879%" y="965" width="0.0536%" height="15" fill="rgb(220,69,3)"/><text x="45.5379%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.05%)</title><rect x="45.2879%" y="949" width="0.0536%" height="15" fill="rgb(214,64,36)"/><text x="45.5379%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.05%)</title><rect x="45.2879%" y="933" width="0.0536%" height="15" fill="rgb(211,138,32)"/><text x="45.5379%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.05%)</title><rect x="45.2879%" y="917" width="0.0536%" height="15" fill="rgb(213,118,47)"/><text x="45.5379%" y="927.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.05%)</title><rect x="45.2879%" y="901" width="0.0536%" height="15" fill="rgb(243,124,49)"/><text x="45.5379%" y="911.50"></text></g><g><title>_rjem_mallocx (5 samples, 0.05%)</title><rect x="45.2879%" y="885" width="0.0536%" height="15" fill="rgb(221,30,28)"/><text x="45.5379%" y="895.50"></text></g><g><title>imalloc (5 samples, 0.05%)</title><rect x="45.2879%" y="869" width="0.0536%" height="15" fill="rgb(246,37,13)"/><text x="45.5379%" y="879.50"></text></g><g><title>imalloc_body (5 samples, 0.05%)</title><rect x="45.2879%" y="853" width="0.0536%" height="15" fill="rgb(249,66,14)"/><text x="45.5379%" y="863.50"></text></g><g><title>sz_index2size (1 samples, 0.01%)</title><rect x="45.3308%" y="837" width="0.0107%" height="15" fill="rgb(213,166,5)"/><text x="45.5808%" y="847.50"></text></g><g><title>sz_index2size_lookup (1 samples, 0.01%)</title><rect x="45.3308%" y="821" width="0.0107%" height="15" fill="rgb(221,66,24)"/><text x="45.5808%" y="831.50"></text></g><g><title>tokio::runtime::task::joinable (1 samples, 0.01%)</title><rect x="45.3736%" y="1173" width="0.0107%" height="15" fill="rgb(210,132,17)"/><text x="45.6236%" y="1183.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (1 samples, 0.01%)</title><rect x="45.3736%" y="1157" width="0.0107%" height="15" fill="rgb(243,202,5)"/><text x="45.6236%" y="1167.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="45.3736%" y="1141" width="0.0107%" height="15" fill="rgb(233,70,48)"/><text x="45.6236%" y="1151.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.01%)</title><rect x="45.4487%" y="1141" width="0.0107%" height="15" fill="rgb(238,41,26)"/><text x="45.6987%" y="1151.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.01%)</title><rect x="45.4487%" y="1125" width="0.0107%" height="15" fill="rgb(241,19,31)"/><text x="45.6987%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (5 samples, 0.05%)</title><rect x="45.5130%" y="1061" width="0.0536%" height="15" fill="rgb(214,76,10)"/><text x="45.7630%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_swap (5 samples, 0.05%)</title><rect x="45.5130%" y="1045" width="0.0536%" height="15" fill="rgb(254,202,22)"/><text x="45.7630%" y="1055.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (8 samples, 0.09%)</title><rect x="45.4916%" y="1093" width="0.0858%" height="15" fill="rgb(214,72,24)"/><text x="45.7416%" y="1103.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (6 samples, 0.06%)</title><rect x="45.5130%" y="1077" width="0.0643%" height="15" fill="rgb(221,92,46)"/><text x="45.7630%" y="1087.50"></text></g><g><title>tokio::runtime::park::Inner::unpark_condvar (1 samples, 0.01%)</title><rect x="45.5666%" y="1061" width="0.0107%" height="15" fill="rgb(246,13,50)"/><text x="45.8166%" y="1071.50"></text></g><g><title>core::mem::drop (1 samples, 0.01%)</title><rect x="45.5666%" y="1045" width="0.0107%" height="15" fill="rgb(240,165,38)"/><text x="45.8166%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,()&gt;&gt; (1 samples, 0.01%)</title><rect x="45.5666%" y="1029" width="0.0107%" height="15" fill="rgb(241,24,51)"/><text x="45.8166%" y="1039.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="45.5666%" y="1013" width="0.0107%" height="15" fill="rgb(227,51,44)"/><text x="45.8166%" y="1023.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.01%)</title><rect x="45.5666%" y="997" width="0.0107%" height="15" fill="rgb(231,121,3)"/><text x="45.8166%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.01%)</title><rect x="45.5666%" y="981" width="0.0107%" height="15" fill="rgb(245,3,41)"/><text x="45.8166%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="45.5666%" y="965" width="0.0107%" height="15" fill="rgb(214,13,26)"/><text x="45.8166%" y="975.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (111 samples, 1.19%)</title><rect x="45.5988%" y="1061" width="1.1901%" height="15" fill="rgb(252,75,11)"/><text x="45.8488%" y="1071.50"></text></g><g><title>syscall (111 samples, 1.19%)</title><rect x="45.5988%" y="1045" width="1.1901%" height="15" fill="rgb(218,226,17)"/><text x="45.8488%" y="1055.50"></text></g><g><title>[unknown] (109 samples, 1.17%)</title><rect x="45.6202%" y="1029" width="1.1687%" height="15" fill="rgb(248,89,38)"/><text x="45.8702%" y="1039.50"></text></g><g><title>[unknown] (106 samples, 1.14%)</title><rect x="45.6524%" y="1013" width="1.1365%" height="15" fill="rgb(237,73,46)"/><text x="45.9024%" y="1023.50"></text></g><g><title>[unknown] (103 samples, 1.10%)</title><rect x="45.6846%" y="997" width="1.1043%" height="15" fill="rgb(242,78,33)"/><text x="45.9346%" y="1007.50"></text></g><g><title>[unknown] (103 samples, 1.10%)</title><rect x="45.6846%" y="981" width="1.1043%" height="15" fill="rgb(235,60,3)"/><text x="45.9346%" y="991.50"></text></g><g><title>[unknown] (102 samples, 1.09%)</title><rect x="45.6953%" y="965" width="1.0936%" height="15" fill="rgb(216,172,19)"/><text x="45.9453%" y="975.50"></text></g><g><title>[unknown] (97 samples, 1.04%)</title><rect x="45.7489%" y="949" width="1.0400%" height="15" fill="rgb(227,6,42)"/><text x="45.9989%" y="959.50"></text></g><g><title>[unknown] (92 samples, 0.99%)</title><rect x="45.8025%" y="933" width="0.9864%" height="15" fill="rgb(223,207,42)"/><text x="46.0525%" y="943.50"></text></g><g><title>[unknown] (82 samples, 0.88%)</title><rect x="45.9097%" y="917" width="0.8792%" height="15" fill="rgb(246,138,30)"/><text x="46.1597%" y="927.50"></text></g><g><title>[unknown] (73 samples, 0.78%)</title><rect x="46.0062%" y="901" width="0.7827%" height="15" fill="rgb(251,199,47)"/><text x="46.2562%" y="911.50"></text></g><g><title>[unknown] (60 samples, 0.64%)</title><rect x="46.1456%" y="885" width="0.6433%" height="15" fill="rgb(228,218,44)"/><text x="46.3956%" y="895.50"></text></g><g><title>[unknown] (36 samples, 0.39%)</title><rect x="46.4029%" y="869" width="0.3860%" height="15" fill="rgb(220,68,6)"/><text x="46.6529%" y="879.50"></text></g><g><title>[unknown] (12 samples, 0.13%)</title><rect x="46.6602%" y="853" width="0.1287%" height="15" fill="rgb(240,60,26)"/><text x="46.9102%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="46.7782%" y="837" width="0.0107%" height="15" fill="rgb(211,200,19)"/><text x="47.0282%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.04%)</title><rect x="46.7889%" y="1061" width="0.0429%" height="15" fill="rgb(242,145,30)"/><text x="47.0389%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.04%)</title><rect x="46.7889%" y="1045" width="0.0429%" height="15" fill="rgb(225,64,13)"/><text x="47.0389%" y="1055.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (124 samples, 1.33%)</title><rect x="45.5774%" y="1093" width="1.3295%" height="15" fill="rgb(218,103,35)"/><text x="45.8274%" y="1103.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (123 samples, 1.32%)</title><rect x="45.5881%" y="1077" width="1.3188%" height="15" fill="rgb(216,93,46)"/><text x="45.8381%" y="1087.50"></text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (7 samples, 0.08%)</title><rect x="46.8318%" y="1061" width="0.0751%" height="15" fill="rgb(225,159,27)"/><text x="47.0818%" y="1071.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (7 samples, 0.08%)</title><rect x="46.8318%" y="1045" width="0.0751%" height="15" fill="rgb(225,204,11)"/><text x="47.0818%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (7 samples, 0.08%)</title><rect x="46.8318%" y="1029" width="0.0751%" height="15" fill="rgb(205,56,4)"/><text x="47.0818%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_sub (7 samples, 0.08%)</title><rect x="46.8318%" y="1013" width="0.0751%" height="15" fill="rgb(206,6,35)"/><text x="47.0818%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="46.9068%" y="1029" width="0.0107%" height="15" fill="rgb(247,73,52)"/><text x="47.1568%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="46.9068%" y="1013" width="0.0107%" height="15" fill="rgb(246,97,4)"/><text x="47.1568%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="46.9068%" y="997" width="0.0107%" height="15" fill="rgb(212,37,15)"/><text x="47.1568%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="46.9068%" y="981" width="0.0107%" height="15" fill="rgb(208,130,40)"/><text x="47.1568%" y="991.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (4 samples, 0.04%)</title><rect x="46.9068%" y="1077" width="0.0429%" height="15" fill="rgb(236,55,29)"/><text x="47.1568%" y="1087.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (4 samples, 0.04%)</title><rect x="46.9068%" y="1061" width="0.0429%" height="15" fill="rgb(209,156,45)"/><text x="47.1568%" y="1071.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (4 samples, 0.04%)</title><rect x="46.9068%" y="1045" width="0.0429%" height="15" fill="rgb(249,107,4)"/><text x="47.1568%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (3 samples, 0.03%)</title><rect x="46.9176%" y="1029" width="0.0322%" height="15" fill="rgb(227,7,13)"/><text x="47.1676%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.03%)</title><rect x="46.9176%" y="1013" width="0.0322%" height="15" fill="rgb(250,129,14)"/><text x="47.1676%" y="1023.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate (166 samples, 1.78%)</title><rect x="45.2879%" y="1253" width="1.7798%" height="15" fill="rgb(229,92,13)"/><text x="45.5379%" y="1263.50">r..</text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation (166 samples, 1.78%)</title><rect x="45.2879%" y="1237" width="1.7798%" height="15" fill="rgb(245,98,39)"/><text x="45.5379%" y="1247.50">r..</text></g><g><title>tokio::task::spawn::spawn (161 samples, 1.73%)</title><rect x="45.3415%" y="1221" width="1.7262%" height="15" fill="rgb(234,135,48)"/><text x="45.5915%" y="1231.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (161 samples, 1.73%)</title><rect x="45.3415%" y="1205" width="1.7262%" height="15" fill="rgb(230,98,28)"/><text x="45.5915%" y="1215.50"></text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (160 samples, 1.72%)</title><rect x="45.3522%" y="1189" width="1.7154%" height="15" fill="rgb(223,121,0)"/><text x="45.6022%" y="1199.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (157 samples, 1.68%)</title><rect x="45.3844%" y="1173" width="1.6833%" height="15" fill="rgb(234,173,33)"/><text x="45.6344%" y="1183.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (157 samples, 1.68%)</title><rect x="45.3844%" y="1157" width="1.6833%" height="15" fill="rgb(245,47,8)"/><text x="45.6344%" y="1167.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (150 samples, 1.61%)</title><rect x="45.4594%" y="1141" width="1.6082%" height="15" fill="rgb(205,17,20)"/><text x="45.7094%" y="1151.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule_local (148 samples, 1.59%)</title><rect x="45.4809%" y="1125" width="1.5868%" height="15" fill="rgb(232,151,16)"/><text x="45.7309%" y="1135.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (148 samples, 1.59%)</title><rect x="45.4809%" y="1109" width="1.5868%" height="15" fill="rgb(208,30,32)"/><text x="45.7309%" y="1119.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::worker_to_notify (15 samples, 0.16%)</title><rect x="46.9068%" y="1093" width="0.1608%" height="15" fill="rgb(254,26,3)"/><text x="47.1568%" y="1103.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::notify_should_wakeup (11 samples, 0.12%)</title><rect x="46.9497%" y="1077" width="0.1179%" height="15" fill="rgb(240,177,30)"/><text x="47.1997%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (11 samples, 0.12%)</title><rect x="46.9497%" y="1061" width="0.1179%" height="15" fill="rgb(248,76,44)"/><text x="47.1997%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_add (11 samples, 0.12%)</title><rect x="46.9497%" y="1045" width="0.1179%" height="15" fill="rgb(241,186,54)"/><text x="47.1997%" y="1055.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_match::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Match&gt;::evaluate (167 samples, 1.79%)</title><rect x="45.2879%" y="1269" width="1.7905%" height="15" fill="rgb(249,171,29)"/><text x="45.5379%" y="1279.50">r..</text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute (1 samples, 0.01%)</title><rect x="47.0677%" y="1253" width="0.0107%" height="15" fill="rgb(237,151,44)"/><text x="47.3177%" y="1263.50"></text></g><g><title>core::future::from_generator (1 samples, 0.01%)</title><rect x="47.0784%" y="1237" width="0.0107%" height="15" fill="rgb(228,174,30)"/><text x="47.3284%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::join::JoinHandle&lt;()&gt;&gt; (1 samples, 0.01%)</title><rect x="47.0891%" y="1237" width="0.0107%" height="15" fill="rgb(252,14,37)"/><text x="47.3391%" y="1247.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="47.0891%" y="1221" width="0.0107%" height="15" fill="rgb(207,111,40)"/><text x="47.3391%" y="1231.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.05%)</title><rect x="47.0998%" y="1141" width="0.0536%" height="15" fill="rgb(248,171,54)"/><text x="47.3498%" y="1151.50"></text></g><g><title>[libc-2.31.so] (14 samples, 0.15%)</title><rect x="47.1749%" y="1125" width="0.1501%" height="15" fill="rgb(211,127,2)"/><text x="47.4249%" y="1135.50"></text></g><g><title>__rg_alloc (1 samples, 0.01%)</title><rect x="47.3250%" y="1061" width="0.0107%" height="15" fill="rgb(236,87,47)"/><text x="47.5750%" y="1071.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.01%)</title><rect x="47.3250%" y="1045" width="0.0107%" height="15" fill="rgb(223,190,45)"/><text x="47.5750%" y="1055.50"></text></g><g><title>tokio::runtime::task::joinable (24 samples, 0.26%)</title><rect x="47.0998%" y="1189" width="0.2573%" height="15" fill="rgb(215,5,16)"/><text x="47.3498%" y="1199.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (24 samples, 0.26%)</title><rect x="47.0998%" y="1173" width="0.2573%" height="15" fill="rgb(252,82,33)"/><text x="47.3498%" y="1183.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (24 samples, 0.26%)</title><rect x="47.0998%" y="1157" width="0.2573%" height="15" fill="rgb(247,213,44)"/><text x="47.3498%" y="1167.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (19 samples, 0.20%)</title><rect x="47.1534%" y="1141" width="0.2037%" height="15" fill="rgb(205,196,44)"/><text x="47.4034%" y="1151.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.03%)</title><rect x="47.3250%" y="1125" width="0.0322%" height="15" fill="rgb(237,96,54)"/><text x="47.5750%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.03%)</title><rect x="47.3250%" y="1109" width="0.0322%" height="15" fill="rgb(230,113,34)"/><text x="47.5750%" y="1119.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.03%)</title><rect x="47.3250%" y="1093" width="0.0322%" height="15" fill="rgb(221,224,12)"/><text x="47.5750%" y="1103.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.03%)</title><rect x="47.3250%" y="1077" width="0.0322%" height="15" fill="rgb(219,112,44)"/><text x="47.5750%" y="1087.50"></text></g><g><title>_rjem_mallocx (2 samples, 0.02%)</title><rect x="47.3357%" y="1061" width="0.0214%" height="15" fill="rgb(210,31,13)"/><text x="47.5857%" y="1071.50"></text></g><g><title>imalloc (1 samples, 0.01%)</title><rect x="47.3464%" y="1045" width="0.0107%" height="15" fill="rgb(230,25,16)"/><text x="47.5964%" y="1055.50"></text></g><g><title>imalloc_body (1 samples, 0.01%)</title><rect x="47.3464%" y="1029" width="0.0107%" height="15" fill="rgb(246,108,53)"/><text x="47.5964%" y="1039.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.01%)</title><rect x="47.3464%" y="1013" width="0.0107%" height="15" fill="rgb(241,172,50)"/><text x="47.5964%" y="1023.50"></text></g><g><title>iallocztm (1 samples, 0.01%)</title><rect x="47.3464%" y="997" width="0.0107%" height="15" fill="rgb(235,141,10)"/><text x="47.5964%" y="1007.50"></text></g><g><title>arena_malloc (1 samples, 0.01%)</title><rect x="47.3464%" y="981" width="0.0107%" height="15" fill="rgb(220,174,43)"/><text x="47.5964%" y="991.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.01%)</title><rect x="47.3464%" y="965" width="0.0107%" height="15" fill="rgb(215,181,40)"/><text x="47.5964%" y="975.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (3 samples, 0.03%)</title><rect x="47.3571%" y="1077" width="0.0322%" height="15" fill="rgb(230,97,2)"/><text x="47.6071%" y="1087.50"></text></g><g><title>std::time::Instant::now (3 samples, 0.03%)</title><rect x="47.3571%" y="1061" width="0.0322%" height="15" fill="rgb(211,25,27)"/><text x="47.6071%" y="1071.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (3 samples, 0.03%)</title><rect x="47.3571%" y="1045" width="0.0322%" height="15" fill="rgb(230,87,26)"/><text x="47.6071%" y="1055.50"></text></g><g><title>std::sys::unix::time::inner::now (3 samples, 0.03%)</title><rect x="47.3571%" y="1029" width="0.0322%" height="15" fill="rgb(227,160,17)"/><text x="47.6071%" y="1039.50"></text></g><g><title>__clock_gettime (3 samples, 0.03%)</title><rect x="47.3571%" y="1013" width="0.0322%" height="15" fill="rgb(244,85,34)"/><text x="47.6071%" y="1023.50"></text></g><g><title>__vdso_clock_gettime (3 samples, 0.03%)</title><rect x="47.3571%" y="997" width="0.0322%" height="15" fill="rgb(207,70,0)"/><text x="47.6071%" y="1007.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation (32 samples, 0.34%)</title><rect x="47.0784%" y="1253" width="0.3431%" height="15" fill="rgb(223,129,7)"/><text x="47.3284%" y="1263.50"></text></g><g><title>tokio::task::spawn::spawn (30 samples, 0.32%)</title><rect x="47.0998%" y="1237" width="0.3216%" height="15" fill="rgb(246,105,7)"/><text x="47.3498%" y="1247.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (30 samples, 0.32%)</title><rect x="47.0998%" y="1221" width="0.3216%" height="15" fill="rgb(215,154,42)"/><text x="47.3498%" y="1231.50"></text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (30 samples, 0.32%)</title><rect x="47.0998%" y="1205" width="0.3216%" height="15" fill="rgb(220,215,30)"/><text x="47.3498%" y="1215.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (6 samples, 0.06%)</title><rect x="47.3571%" y="1189" width="0.0643%" height="15" fill="rgb(228,81,51)"/><text x="47.6071%" y="1199.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (6 samples, 0.06%)</title><rect x="47.3571%" y="1173" width="0.0643%" height="15" fill="rgb(247,71,54)"/><text x="47.6071%" y="1183.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (6 samples, 0.06%)</title><rect x="47.3571%" y="1157" width="0.0643%" height="15" fill="rgb(234,176,34)"/><text x="47.6071%" y="1167.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule_local (6 samples, 0.06%)</title><rect x="47.3571%" y="1141" width="0.0643%" height="15" fill="rgb(241,103,54)"/><text x="47.6071%" y="1151.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (6 samples, 0.06%)</title><rect x="47.3571%" y="1125" width="0.0643%" height="15" fill="rgb(228,22,34)"/><text x="47.6071%" y="1135.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (6 samples, 0.06%)</title><rect x="47.3571%" y="1109" width="0.0643%" height="15" fill="rgb(241,179,48)"/><text x="47.6071%" y="1119.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (6 samples, 0.06%)</title><rect x="47.3571%" y="1093" width="0.0643%" height="15" fill="rgb(235,167,37)"/><text x="47.6071%" y="1103.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (3 samples, 0.03%)</title><rect x="47.3893%" y="1077" width="0.0322%" height="15" fill="rgb(213,109,30)"/><text x="47.6393%" y="1087.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (2 samples, 0.02%)</title><rect x="47.4000%" y="1061" width="0.0214%" height="15" fill="rgb(222,172,16)"/><text x="47.6500%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (2 samples, 0.02%)</title><rect x="47.4000%" y="1045" width="0.0214%" height="15" fill="rgb(233,192,5)"/><text x="47.6500%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.02%)</title><rect x="47.4000%" y="1029" width="0.0214%" height="15" fill="rgb(247,189,41)"/><text x="47.6500%" y="1039.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_nested_expressions (1 samples, 0.01%)</title><rect x="47.4215%" y="1237" width="0.0107%" height="15" fill="rgb(218,134,47)"/><text x="47.6715%" y="1247.50"></text></g><g><title>__rust_probestack (1 samples, 0.01%)</title><rect x="47.4215%" y="1221" width="0.0107%" height="15" fill="rgb(216,29,3)"/><text x="47.6715%" y="1231.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="47.4429%" y="1221" width="0.0214%" height="15" fill="rgb(246,140,12)"/><text x="47.6929%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (4 samples, 0.04%)</title><rect x="47.4644%" y="1221" width="0.0429%" height="15" fill="rgb(230,136,11)"/><text x="47.7144%" y="1231.50"></text></g><g><title>core::ptr::read (4 samples, 0.04%)</title><rect x="47.4644%" y="1205" width="0.0429%" height="15" fill="rgb(247,22,47)"/><text x="47.7144%" y="1215.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.04%)</title><rect x="47.4644%" y="1189" width="0.0429%" height="15" fill="rgb(218,84,22)"/><text x="47.7144%" y="1199.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="47.5072%" y="1205" width="0.0214%" height="15" fill="rgb(216,87,39)"/><text x="47.7572%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.02%)</title><rect x="47.5072%" y="1189" width="0.0214%" height="15" fill="rgb(221,178,8)"/><text x="47.7572%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.02%)</title><rect x="47.5072%" y="1173" width="0.0214%" height="15" fill="rgb(230,42,11)"/><text x="47.7572%" y="1183.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.04%)</title><rect x="47.5394%" y="1061" width="0.0429%" height="15" fill="rgb(237,229,4)"/><text x="47.7894%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="47.6252%" y="1013" width="0.0107%" height="15" fill="rgb(222,31,33)"/><text x="47.8752%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="47.6466%" y="965" width="0.0107%" height="15" fill="rgb(210,17,39)"/><text x="47.8966%" y="975.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (10 samples, 0.11%)</title><rect x="47.6573%" y="949" width="0.1072%" height="15" fill="rgb(244,93,20)"/><text x="47.9073%" y="959.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.04%)</title><rect x="47.7217%" y="933" width="0.0429%" height="15" fill="rgb(210,40,47)"/><text x="47.9717%" y="943.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (13 samples, 0.14%)</title><rect x="47.6573%" y="965" width="0.1394%" height="15" fill="rgb(239,211,47)"/><text x="47.9073%" y="975.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="47.7646%" y="949" width="0.0322%" height="15" fill="rgb(251,223,49)"/><text x="48.0146%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.01%)</title><rect x="47.7967%" y="965" width="0.0107%" height="15" fill="rgb(221,149,5)"/><text x="48.0467%" y="975.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="47.8718%" y="869" width="0.0107%" height="15" fill="rgb(219,224,51)"/><text x="48.1218%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.03%)</title><rect x="47.8610%" y="917" width="0.0322%" height="15" fill="rgb(223,7,8)"/><text x="48.1110%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.03%)</title><rect x="47.8610%" y="901" width="0.0322%" height="15" fill="rgb(241,217,22)"/><text x="48.1110%" y="911.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="47.8718%" y="885" width="0.0214%" height="15" fill="rgb(248,209,0)"/><text x="48.1218%" y="895.50"></text></g><g><title>_rjem_mallocx (1 samples, 0.01%)</title><rect x="47.8825%" y="869" width="0.0107%" height="15" fill="rgb(217,205,4)"/><text x="48.1325%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (5 samples, 0.05%)</title><rect x="47.8932%" y="917" width="0.0536%" height="15" fill="rgb(228,124,39)"/><text x="48.1432%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.15%)</title><rect x="47.8074%" y="965" width="0.1501%" height="15" fill="rgb(250,116,42)"/><text x="48.0574%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.11%)</title><rect x="47.8503%" y="949" width="0.1072%" height="15" fill="rgb(223,202,9)"/><text x="48.1003%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.11%)</title><rect x="47.8503%" y="933" width="0.1072%" height="15" fill="rgb(242,222,40)"/><text x="48.1003%" y="943.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="47.9468%" y="917" width="0.0107%" height="15" fill="rgb(229,99,46)"/><text x="48.1968%" y="927.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1 samples, 0.01%)</title><rect x="47.9468%" y="901" width="0.0107%" height="15" fill="rgb(225,56,46)"/><text x="48.1968%" y="911.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.01%)</title><rect x="47.9468%" y="885" width="0.0107%" height="15" fill="rgb(227,94,5)"/><text x="48.1968%" y="895.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.01%)</title><rect x="47.9468%" y="869" width="0.0107%" height="15" fill="rgb(205,112,38)"/><text x="48.1968%" y="879.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (6 samples, 0.06%)</title><rect x="47.9575%" y="965" width="0.0643%" height="15" fill="rgb(231,133,46)"/><text x="48.2075%" y="975.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.04%)</title><rect x="47.9790%" y="949" width="0.0429%" height="15" fill="rgb(217,16,9)"/><text x="48.2290%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (38 samples, 0.41%)</title><rect x="47.6252%" y="1029" width="0.4074%" height="15" fill="rgb(249,173,9)"/><text x="47.8752%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (37 samples, 0.40%)</title><rect x="47.6359%" y="1013" width="0.3967%" height="15" fill="rgb(205,163,53)"/><text x="47.8859%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (37 samples, 0.40%)</title><rect x="47.6359%" y="997" width="0.3967%" height="15" fill="rgb(217,54,41)"/><text x="47.8859%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (37 samples, 0.40%)</title><rect x="47.6359%" y="981" width="0.3967%" height="15" fill="rgb(228,216,12)"/><text x="47.8859%" y="991.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.01%)</title><rect x="48.0219%" y="965" width="0.0107%" height="15" fill="rgb(244,228,15)"/><text x="48.2719%" y="975.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="48.0219%" y="949" width="0.0107%" height="15" fill="rgb(221,176,53)"/><text x="48.2719%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="48.0326%" y="917" width="0.0214%" height="15" fill="rgb(205,94,34)"/><text x="48.2826%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="48.0326%" y="901" width="0.0214%" height="15" fill="rgb(213,110,48)"/><text x="48.2826%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="48.0433%" y="885" width="0.0107%" height="15" fill="rgb(236,142,28)"/><text x="48.2933%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="48.0433%" y="869" width="0.0107%" height="15" fill="rgb(225,135,29)"/><text x="48.2933%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="48.0433%" y="853" width="0.0107%" height="15" fill="rgb(252,45,31)"/><text x="48.2933%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (50 samples, 0.54%)</title><rect x="47.5287%" y="1109" width="0.5361%" height="15" fill="rgb(211,187,50)"/><text x="47.7787%" y="1119.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (50 samples, 0.54%)</title><rect x="47.5287%" y="1093" width="0.5361%" height="15" fill="rgb(229,109,7)"/><text x="47.7787%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (50 samples, 0.54%)</title><rect x="47.5287%" y="1077" width="0.5361%" height="15" fill="rgb(251,131,51)"/><text x="47.7787%" y="1087.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (45 samples, 0.48%)</title><rect x="47.5823%" y="1061" width="0.4825%" height="15" fill="rgb(251,180,35)"/><text x="47.8323%" y="1071.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (45 samples, 0.48%)</title><rect x="47.5823%" y="1045" width="0.4825%" height="15" fill="rgb(211,46,32)"/><text x="47.8323%" y="1055.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="48.0326%" y="1029" width="0.0322%" height="15" fill="rgb(248,123,17)"/><text x="48.2826%" y="1039.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="48.0326%" y="1013" width="0.0322%" height="15" fill="rgb(227,141,18)"/><text x="48.2826%" y="1023.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="48.0326%" y="997" width="0.0322%" height="15" fill="rgb(216,102,9)"/><text x="48.2826%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="48.0326%" y="981" width="0.0322%" height="15" fill="rgb(253,47,13)"/><text x="48.2826%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.03%)</title><rect x="48.0326%" y="965" width="0.0322%" height="15" fill="rgb(226,93,23)"/><text x="48.2826%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.03%)</title><rect x="48.0326%" y="949" width="0.0322%" height="15" fill="rgb(247,104,17)"/><text x="48.2826%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.03%)</title><rect x="48.0326%" y="933" width="0.0322%" height="15" fill="rgb(233,203,26)"/><text x="48.2826%" y="943.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="48.0540%" y="917" width="0.0107%" height="15" fill="rgb(244,98,49)"/><text x="48.3040%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="48.0540%" y="901" width="0.0107%" height="15" fill="rgb(235,134,22)"/><text x="48.3040%" y="911.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::clone::Clone&gt;::clone (52 samples, 0.56%)</title><rect x="47.5287%" y="1189" width="0.5575%" height="15" fill="rgb(221,70,32)"/><text x="47.7787%" y="1199.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::convert::From&lt;&amp;[&lt;A as smallvec::Array&gt;::Item]&gt;&gt;::from (52 samples, 0.56%)</title><rect x="47.5287%" y="1173" width="0.5575%" height="15" fill="rgb(238,15,50)"/><text x="47.7787%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (52 samples, 0.56%)</title><rect x="47.5287%" y="1157" width="0.5575%" height="15" fill="rgb(215,221,48)"/><text x="47.7787%" y="1167.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (52 samples, 0.56%)</title><rect x="47.5287%" y="1141" width="0.5575%" height="15" fill="rgb(236,73,3)"/><text x="47.7787%" y="1151.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (52 samples, 0.56%)</title><rect x="47.5287%" y="1125" width="0.5575%" height="15" fill="rgb(250,107,11)"/><text x="47.7787%" y="1135.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="48.0648%" y="1109" width="0.0214%" height="15" fill="rgb(242,39,14)"/><text x="48.3148%" y="1119.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="48.0648%" y="1093" width="0.0214%" height="15" fill="rgb(248,164,37)"/><text x="48.3148%" y="1103.50"></text></g><g><title>&lt;rho_runtime::interpreter::reduce::environment::Env&lt;T&gt; as core::clone::Clone&gt;::clone (58 samples, 0.62%)</title><rect x="47.5287%" y="1205" width="0.6219%" height="15" fill="rgb(217,60,12)"/><text x="47.7787%" y="1215.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.06%)</title><rect x="48.0862%" y="1189" width="0.0643%" height="15" fill="rgb(240,125,29)"/><text x="48.3362%" y="1199.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="48.1505%" y="1205" width="0.0107%" height="15" fill="rgb(208,207,28)"/><text x="48.4005%" y="1215.50"></text></g><g><title>core::future::from_generator (4 samples, 0.04%)</title><rect x="48.1613%" y="1205" width="0.0429%" height="15" fill="rgb(209,159,27)"/><text x="48.4113%" y="1215.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.04%)</title><rect x="48.1613%" y="1189" width="0.0429%" height="15" fill="rgb(251,176,53)"/><text x="48.4113%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::join::JoinHandle&lt;()&gt;&gt; (4 samples, 0.04%)</title><rect x="48.2041%" y="1205" width="0.0429%" height="15" fill="rgb(211,85,7)"/><text x="48.4541%" y="1215.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="48.2041%" y="1189" width="0.0429%" height="15" fill="rgb(216,64,54)"/><text x="48.4541%" y="1199.50"></text></g><g><title>tokio::runtime::task::state::State::drop_join_handle_fast (3 samples, 0.03%)</title><rect x="48.2149%" y="1173" width="0.0322%" height="15" fill="rgb(217,54,24)"/><text x="48.4649%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (2 samples, 0.02%)</title><rect x="48.2256%" y="1157" width="0.0214%" height="15" fill="rgb(208,206,53)"/><text x="48.4756%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.02%)</title><rect x="48.2256%" y="1141" width="0.0214%" height="15" fill="rgb(251,74,39)"/><text x="48.4756%" y="1151.50"></text></g><g><title>rho_runtime::interpreter::AsynWaitGroup::acquire (7 samples, 0.08%)</title><rect x="48.2470%" y="1205" width="0.0751%" height="15" fill="rgb(226,47,5)"/><text x="48.4970%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicI32::fetch_add (7 samples, 0.08%)</title><rect x="48.2470%" y="1189" width="0.0751%" height="15" fill="rgb(234,111,33)"/><text x="48.4970%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_add (7 samples, 0.08%)</title><rect x="48.2470%" y="1173" width="0.0751%" height="15" fill="rgb(251,14,10)"/><text x="48.4970%" y="1183.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.06%)</title><rect x="48.3328%" y="1189" width="0.0643%" height="15" fill="rgb(232,43,0)"/><text x="48.5828%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::spawner::Spawner&gt; (4 samples, 0.04%)</title><rect x="48.3971%" y="1189" width="0.0429%" height="15" fill="rgb(222,68,43)"/><text x="48.6471%" y="1199.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate (97 samples, 1.04%)</title><rect x="47.4322%" y="1237" width="1.0400%" height="15" fill="rgb(217,24,23)"/><text x="47.6822%" y="1247.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation (90 samples, 0.96%)</title><rect x="47.5072%" y="1221" width="0.9649%" height="15" fill="rgb(229,209,14)"/><text x="47.7572%" y="1231.50"></text></g><g><title>tokio::task::spawn::spawn (14 samples, 0.15%)</title><rect x="48.3221%" y="1205" width="0.1501%" height="15" fill="rgb(250,149,48)"/><text x="48.5721%" y="1215.50"></text></g><g><title>tokio::runtime::context::spawn_handle (3 samples, 0.03%)</title><rect x="48.4400%" y="1189" width="0.0322%" height="15" fill="rgb(210,120,37)"/><text x="48.6900%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.03%)</title><rect x="48.4400%" y="1173" width="0.0322%" height="15" fill="rgb(210,21,8)"/><text x="48.6900%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.03%)</title><rect x="48.4400%" y="1157" width="0.0322%" height="15" fill="rgb(243,145,7)"/><text x="48.6900%" y="1167.50"></text></g><g><title>tokio::runtime::context::spawn_handle::{{closure}} (3 samples, 0.03%)</title><rect x="48.4400%" y="1141" width="0.0322%" height="15" fill="rgb(238,178,32)"/><text x="48.6900%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.03%)</title><rect x="48.4400%" y="1125" width="0.0322%" height="15" fill="rgb(222,4,10)"/><text x="48.6900%" y="1135.50"></text></g><g><title>tokio::runtime::context::spawn_handle::{{closure}}::{{closure}} (3 samples, 0.03%)</title><rect x="48.4400%" y="1109" width="0.0322%" height="15" fill="rgb(239,7,37)"/><text x="48.6900%" y="1119.50"></text></g><g><title>&lt;tokio::runtime::spawner::Spawner as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="48.4400%" y="1093" width="0.0322%" height="15" fill="rgb(215,31,37)"/><text x="48.6900%" y="1103.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.05%)</title><rect x="48.4722%" y="1173" width="0.0536%" height="15" fill="rgb(224,83,33)"/><text x="48.7222%" y="1183.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate (137 samples, 1.47%)</title><rect x="47.0784%" y="1269" width="1.4689%" height="15" fill="rgb(239,55,3)"/><text x="47.3284%" y="1279.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_match::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Match&gt;::evaluate (105 samples, 1.13%)</title><rect x="47.4215%" y="1253" width="1.1258%" height="15" fill="rgb(247,92,11)"/><text x="47.6715%" y="1263.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute (7 samples, 0.08%)</title><rect x="48.4722%" y="1237" width="0.0751%" height="15" fill="rgb(239,200,7)"/><text x="48.7222%" y="1247.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute_no_sort (7 samples, 0.08%)</title><rect x="48.4722%" y="1221" width="0.0751%" height="15" fill="rgb(227,115,8)"/><text x="48.7222%" y="1231.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::substitute_expressions_in_par (7 samples, 0.08%)</title><rect x="48.4722%" y="1205" width="0.0751%" height="15" fill="rgb(215,189,27)"/><text x="48.7222%" y="1215.50"></text></g><g><title>model::rho_types::Par::append_expr (7 samples, 0.08%)</title><rect x="48.4722%" y="1189" width="0.0751%" height="15" fill="rgb(251,216,39)"/><text x="48.7222%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.02%)</title><rect x="48.5258%" y="1173" width="0.0214%" height="15" fill="rgb(207,29,47)"/><text x="48.7758%" y="1183.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="48.5258%" y="1157" width="0.0214%" height="15" fill="rgb(210,71,34)"/><text x="48.7758%" y="1167.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="48.5258%" y="1141" width="0.0214%" height="15" fill="rgb(253,217,51)"/><text x="48.7758%" y="1151.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute_no_sort (1 samples, 0.01%)</title><rect x="48.5472%" y="1269" width="0.0107%" height="15" fill="rgb(222,117,46)"/><text x="48.7972%" y="1279.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::substitute_expressions_in_par (3 samples, 0.03%)</title><rect x="48.5580%" y="1269" width="0.0322%" height="15" fill="rgb(226,132,6)"/><text x="48.8080%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (1 samples, 0.01%)</title><rect x="48.5794%" y="1253" width="0.0107%" height="15" fill="rgb(254,145,51)"/><text x="48.8294%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="48.5794%" y="1237" width="0.0107%" height="15" fill="rgb(231,199,27)"/><text x="48.8294%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="48.5794%" y="1221" width="0.0107%" height="15" fill="rgb(245,158,14)"/><text x="48.8294%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="48.6223%" y="933" width="0.0322%" height="15" fill="rgb(240,113,14)"/><text x="48.8723%" y="943.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="48.6866%" y="901" width="0.0107%" height="15" fill="rgb(210,20,13)"/><text x="48.9366%" y="911.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for bool&gt;::clone (1 samples, 0.01%)</title><rect x="48.6866%" y="885" width="0.0107%" height="15" fill="rgb(241,144,13)"/><text x="48.9366%" y="895.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="48.6652%" y="917" width="0.0429%" height="15" fill="rgb(235,43,34)"/><text x="48.9152%" y="927.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="48.6973%" y="901" width="0.0107%" height="15" fill="rgb(208,36,20)"/><text x="48.9473%" y="911.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (8 samples, 0.09%)</title><rect x="48.6544%" y="933" width="0.0858%" height="15" fill="rgb(239,204,10)"/><text x="48.9044%" y="943.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="48.7081%" y="917" width="0.0322%" height="15" fill="rgb(217,84,43)"/><text x="48.9581%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.04%)</title><rect x="48.7938%" y="821" width="0.0429%" height="15" fill="rgb(241,170,50)"/><text x="49.0438%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="48.8260%" y="805" width="0.0107%" height="15" fill="rgb(226,205,29)"/><text x="49.0760%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="48.8689%" y="773" width="0.0214%" height="15" fill="rgb(233,113,1)"/><text x="49.1189%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.03%)</title><rect x="49.0726%" y="661" width="0.0322%" height="15" fill="rgb(253,98,13)"/><text x="49.3226%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (2 samples, 0.02%)</title><rect x="49.0833%" y="645" width="0.0214%" height="15" fill="rgb(211,115,12)"/><text x="49.3333%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.01%)</title><rect x="49.1047%" y="613" width="0.0107%" height="15" fill="rgb(208,12,16)"/><text x="49.3547%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="49.1798%" y="565" width="0.0214%" height="15" fill="rgb(237,193,54)"/><text x="49.4298%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="49.1798%" y="549" width="0.0214%" height="15" fill="rgb(243,22,42)"/><text x="49.4298%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.17%)</title><rect x="49.0619%" y="677" width="0.1715%" height="15" fill="rgb(233,151,36)"/><text x="49.3119%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.13%)</title><rect x="49.1047%" y="661" width="0.1287%" height="15" fill="rgb(237,57,45)"/><text x="49.3547%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.13%)</title><rect x="49.1047%" y="645" width="0.1287%" height="15" fill="rgb(221,88,17)"/><text x="49.3547%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.13%)</title><rect x="49.1047%" y="629" width="0.1287%" height="15" fill="rgb(230,79,15)"/><text x="49.3547%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (11 samples, 0.12%)</title><rect x="49.1155%" y="613" width="0.1179%" height="15" fill="rgb(213,57,13)"/><text x="49.3655%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.05%)</title><rect x="49.1798%" y="597" width="0.0536%" height="15" fill="rgb(222,116,39)"/><text x="49.4298%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.05%)</title><rect x="49.1798%" y="581" width="0.0536%" height="15" fill="rgb(245,107,2)"/><text x="49.4298%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (3 samples, 0.03%)</title><rect x="49.2012%" y="565" width="0.0322%" height="15" fill="rgb(238,1,10)"/><text x="49.4512%" y="575.50"></text></g><g><title>__rg_alloc (2 samples, 0.02%)</title><rect x="49.2656%" y="469" width="0.0214%" height="15" fill="rgb(249,4,48)"/><text x="49.5156%" y="479.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (2 samples, 0.02%)</title><rect x="49.2656%" y="453" width="0.0214%" height="15" fill="rgb(223,151,18)"/><text x="49.5156%" y="463.50"></text></g><g><title>jemallocator::layout_to_flags (1 samples, 0.01%)</title><rect x="49.2763%" y="437" width="0.0107%" height="15" fill="rgb(227,65,43)"/><text x="49.5263%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.09%)</title><rect x="49.2334%" y="565" width="0.0858%" height="15" fill="rgb(218,40,45)"/><text x="49.4834%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.09%)</title><rect x="49.2334%" y="549" width="0.0858%" height="15" fill="rgb(252,121,31)"/><text x="49.4834%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.09%)</title><rect x="49.2334%" y="533" width="0.0858%" height="15" fill="rgb(219,158,43)"/><text x="49.4834%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.09%)</title><rect x="49.2334%" y="517" width="0.0858%" height="15" fill="rgb(231,162,42)"/><text x="49.4834%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.09%)</title><rect x="49.2334%" y="501" width="0.0858%" height="15" fill="rgb(217,179,25)"/><text x="49.4834%" y="511.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.09%)</title><rect x="49.2334%" y="485" width="0.0858%" height="15" fill="rgb(206,212,31)"/><text x="49.4834%" y="495.50"></text></g><g><title>_rjem_mallocx (3 samples, 0.03%)</title><rect x="49.2870%" y="469" width="0.0322%" height="15" fill="rgb(235,144,12)"/><text x="49.5370%" y="479.50"></text></g><g><title>imalloc (2 samples, 0.02%)</title><rect x="49.2977%" y="453" width="0.0214%" height="15" fill="rgb(213,51,10)"/><text x="49.5477%" y="463.50"></text></g><g><title>imalloc_body (2 samples, 0.02%)</title><rect x="49.2977%" y="437" width="0.0214%" height="15" fill="rgb(231,145,14)"/><text x="49.5477%" y="447.50"></text></g><g><title>imalloc_no_sample (2 samples, 0.02%)</title><rect x="49.2977%" y="421" width="0.0214%" height="15" fill="rgb(235,15,28)"/><text x="49.5477%" y="431.50"></text></g><g><title>iallocztm (2 samples, 0.02%)</title><rect x="49.2977%" y="405" width="0.0214%" height="15" fill="rgb(237,206,10)"/><text x="49.5477%" y="415.50"></text></g><g><title>arena_malloc (2 samples, 0.02%)</title><rect x="49.2977%" y="389" width="0.0214%" height="15" fill="rgb(236,227,27)"/><text x="49.5477%" y="399.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.02%)</title><rect x="49.2977%" y="373" width="0.0214%" height="15" fill="rgb(246,83,35)"/><text x="49.5477%" y="383.50"></text></g><g><title>cache_bin_alloc_easy (2 samples, 0.02%)</title><rect x="49.2977%" y="357" width="0.0214%" height="15" fill="rgb(220,136,24)"/><text x="49.5477%" y="367.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (34 samples, 0.36%)</title><rect x="48.9654%" y="693" width="0.3645%" height="15" fill="rgb(217,3,25)"/><text x="49.2154%" y="703.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.10%)</title><rect x="49.2334%" y="677" width="0.0965%" height="15" fill="rgb(239,24,14)"/><text x="49.4834%" y="687.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (9 samples, 0.10%)</title><rect x="49.2334%" y="661" width="0.0965%" height="15" fill="rgb(244,16,53)"/><text x="49.4834%" y="671.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (9 samples, 0.10%)</title><rect x="49.2334%" y="645" width="0.0965%" height="15" fill="rgb(208,175,44)"/><text x="49.4834%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.10%)</title><rect x="49.2334%" y="629" width="0.0965%" height="15" fill="rgb(252,18,48)"/><text x="49.4834%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.10%)</title><rect x="49.2334%" y="613" width="0.0965%" height="15" fill="rgb(234,199,32)"/><text x="49.4834%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.10%)</title><rect x="49.2334%" y="597" width="0.0965%" height="15" fill="rgb(225,77,54)"/><text x="49.4834%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.10%)</title><rect x="49.2334%" y="581" width="0.0965%" height="15" fill="rgb(225,42,25)"/><text x="49.4834%" y="591.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="49.3192%" y="565" width="0.0107%" height="15" fill="rgb(242,227,46)"/><text x="49.5692%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="49.3192%" y="549" width="0.0107%" height="15" fill="rgb(246,197,35)"/><text x="49.5692%" y="559.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="49.3192%" y="533" width="0.0107%" height="15" fill="rgb(215,159,26)"/><text x="49.5692%" y="543.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (43 samples, 0.46%)</title><rect x="48.9225%" y="757" width="0.4610%" height="15" fill="rgb(212,194,50)"/><text x="49.1725%" y="767.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (42 samples, 0.45%)</title><rect x="48.9332%" y="741" width="0.4503%" height="15" fill="rgb(246,132,1)"/><text x="49.1832%" y="751.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (42 samples, 0.45%)</title><rect x="48.9332%" y="725" width="0.4503%" height="15" fill="rgb(217,71,7)"/><text x="49.1832%" y="735.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (40 samples, 0.43%)</title><rect x="48.9546%" y="709" width="0.4289%" height="15" fill="rgb(252,59,32)"/><text x="49.2046%" y="719.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.05%)</title><rect x="49.3299%" y="693" width="0.0536%" height="15" fill="rgb(253,204,25)"/><text x="49.5799%" y="703.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (49 samples, 0.53%)</title><rect x="48.8903%" y="773" width="0.5254%" height="15" fill="rgb(232,21,16)"/><text x="49.1403%" y="783.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="49.3835%" y="757" width="0.0322%" height="15" fill="rgb(248,90,29)"/><text x="49.6335%" y="767.50"></text></g><g><title>arena_bin_malloc_hard (1 samples, 0.01%)</title><rect x="49.5014%" y="533" width="0.0107%" height="15" fill="rgb(249,223,7)"/><text x="49.7514%" y="543.50"></text></g><g><title>arena_bin_nonfull_slab_get (1 samples, 0.01%)</title><rect x="49.5014%" y="517" width="0.0107%" height="15" fill="rgb(231,119,42)"/><text x="49.7514%" y="527.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.01%)</title><rect x="49.5014%" y="501" width="0.0107%" height="15" fill="rgb(215,41,35)"/><text x="49.7514%" y="511.50"></text></g><g><title>sz_size2index (1 samples, 0.01%)</title><rect x="49.5014%" y="485" width="0.0107%" height="15" fill="rgb(220,44,45)"/><text x="49.7514%" y="495.50"></text></g><g><title>sz_size2index_lookup (1 samples, 0.01%)</title><rect x="49.5014%" y="469" width="0.0107%" height="15" fill="rgb(253,197,36)"/><text x="49.7514%" y="479.50"></text></g><g><title>arena_slab_reg_alloc (1 samples, 0.01%)</title><rect x="49.5122%" y="533" width="0.0107%" height="15" fill="rgb(245,225,54)"/><text x="49.7622%" y="543.50"></text></g><g><title>bitmap_sfu (1 samples, 0.01%)</title><rect x="49.5122%" y="517" width="0.0107%" height="15" fill="rgb(239,94,37)"/><text x="49.7622%" y="527.50"></text></g><g><title>ffs_lu (1 samples, 0.01%)</title><rect x="49.5122%" y="501" width="0.0107%" height="15" fill="rgb(242,217,10)"/><text x="49.7622%" y="511.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (3 samples, 0.03%)</title><rect x="49.5014%" y="565" width="0.0322%" height="15" fill="rgb(250,193,7)"/><text x="49.7514%" y="575.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (3 samples, 0.03%)</title><rect x="49.5014%" y="549" width="0.0322%" height="15" fill="rgb(230,104,19)"/><text x="49.7514%" y="559.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.01%)</title><rect x="49.5229%" y="533" width="0.0107%" height="15" fill="rgb(230,181,4)"/><text x="49.7729%" y="543.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.01%)</title><rect x="49.5229%" y="517" width="0.0107%" height="15" fill="rgb(216,219,49)"/><text x="49.7729%" y="527.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.01%)</title><rect x="49.5229%" y="501" width="0.0107%" height="15" fill="rgb(254,144,0)"/><text x="49.7729%" y="511.50"></text></g><g><title>arena_choose (1 samples, 0.01%)</title><rect x="49.5336%" y="565" width="0.0107%" height="15" fill="rgb(205,209,38)"/><text x="49.7836%" y="575.50"></text></g><g><title>arena_choose_impl (1 samples, 0.01%)</title><rect x="49.5336%" y="549" width="0.0107%" height="15" fill="rgb(240,21,42)"/><text x="49.7836%" y="559.50"></text></g><g><title>tsd_arena_get (1 samples, 0.01%)</title><rect x="49.5336%" y="533" width="0.0107%" height="15" fill="rgb(241,132,3)"/><text x="49.7836%" y="543.50"></text></g><g><title>imalloc_body (6 samples, 0.06%)</title><rect x="49.4907%" y="645" width="0.0643%" height="15" fill="rgb(225,14,2)"/><text x="49.7407%" y="655.50"></text></g><g><title>imalloc_no_sample (6 samples, 0.06%)</title><rect x="49.4907%" y="629" width="0.0643%" height="15" fill="rgb(210,141,35)"/><text x="49.7407%" y="639.50"></text></g><g><title>iallocztm (5 samples, 0.05%)</title><rect x="49.5014%" y="613" width="0.0536%" height="15" fill="rgb(251,14,44)"/><text x="49.7514%" y="623.50"></text></g><g><title>arena_malloc (5 samples, 0.05%)</title><rect x="49.5014%" y="597" width="0.0536%" height="15" fill="rgb(247,48,18)"/><text x="49.7514%" y="607.50"></text></g><g><title>tcache_alloc_small (5 samples, 0.05%)</title><rect x="49.5014%" y="581" width="0.0536%" height="15" fill="rgb(225,0,40)"/><text x="49.7514%" y="591.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.01%)</title><rect x="49.5443%" y="565" width="0.0107%" height="15" fill="rgb(221,31,33)"/><text x="49.7943%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.09%)</title><rect x="49.4800%" y="725" width="0.0858%" height="15" fill="rgb(237,42,40)"/><text x="49.7300%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.09%)</title><rect x="49.4800%" y="709" width="0.0858%" height="15" fill="rgb(233,51,29)"/><text x="49.7300%" y="719.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.08%)</title><rect x="49.4907%" y="693" width="0.0751%" height="15" fill="rgb(226,58,20)"/><text x="49.7407%" y="703.50"></text></g><g><title>_rjem_mallocx (7 samples, 0.08%)</title><rect x="49.4907%" y="677" width="0.0751%" height="15" fill="rgb(208,98,7)"/><text x="49.7407%" y="687.50"></text></g><g><title>imalloc (7 samples, 0.08%)</title><rect x="49.4907%" y="661" width="0.0751%" height="15" fill="rgb(228,143,44)"/><text x="49.7407%" y="671.50"></text></g><g><title>tsd_fetch (1 samples, 0.01%)</title><rect x="49.5551%" y="645" width="0.0107%" height="15" fill="rgb(246,55,38)"/><text x="49.8051%" y="655.50"></text></g><g><title>tsd_fetch_impl (1 samples, 0.01%)</title><rect x="49.5551%" y="629" width="0.0107%" height="15" fill="rgb(247,87,16)"/><text x="49.8051%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (18 samples, 0.19%)</title><rect x="49.4157%" y="773" width="0.1930%" height="15" fill="rgb(234,129,42)"/><text x="49.6657%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.13%)</title><rect x="49.4800%" y="757" width="0.1287%" height="15" fill="rgb(220,82,16)"/><text x="49.7300%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.13%)</title><rect x="49.4800%" y="741" width="0.1287%" height="15" fill="rgb(211,88,4)"/><text x="49.7300%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (4 samples, 0.04%)</title><rect x="49.5658%" y="725" width="0.0429%" height="15" fill="rgb(248,151,21)"/><text x="49.8158%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (81 samples, 0.87%)</title><rect x="48.7938%" y="837" width="0.8684%" height="15" fill="rgb(238,163,6)"/><text x="49.0438%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (77 samples, 0.83%)</title><rect x="48.8367%" y="821" width="0.8256%" height="15" fill="rgb(209,183,11)"/><text x="49.0867%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (77 samples, 0.83%)</title><rect x="48.8367%" y="805" width="0.8256%" height="15" fill="rgb(219,37,20)"/><text x="49.0867%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (77 samples, 0.83%)</title><rect x="48.8367%" y="789" width="0.8256%" height="15" fill="rgb(210,158,4)"/><text x="49.0867%" y="799.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (5 samples, 0.05%)</title><rect x="49.6087%" y="773" width="0.0536%" height="15" fill="rgb(221,167,53)"/><text x="49.8587%" y="783.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="49.6408%" y="757" width="0.0214%" height="15" fill="rgb(237,151,45)"/><text x="49.8908%" y="767.50"></text></g><g><title>__rg_alloc (1 samples, 0.01%)</title><rect x="49.6944%" y="629" width="0.0107%" height="15" fill="rgb(231,39,3)"/><text x="49.9444%" y="639.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.01%)</title><rect x="49.6944%" y="613" width="0.0107%" height="15" fill="rgb(212,167,28)"/><text x="49.9444%" y="623.50"></text></g><g><title>jemallocator::layout_to_flags (1 samples, 0.01%)</title><rect x="49.6944%" y="597" width="0.0107%" height="15" fill="rgb(232,178,8)"/><text x="49.9444%" y="607.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.01%)</title><rect x="49.7373%" y="517" width="0.0107%" height="15" fill="rgb(225,151,20)"/><text x="49.9873%" y="527.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (1 samples, 0.01%)</title><rect x="49.7373%" y="501" width="0.0107%" height="15" fill="rgb(238,3,37)"/><text x="49.9873%" y="511.50"></text></g><g><title>imalloc_body (2 samples, 0.02%)</title><rect x="49.7373%" y="597" width="0.0214%" height="15" fill="rgb(251,147,42)"/><text x="49.9873%" y="607.50"></text></g><g><title>imalloc_no_sample (2 samples, 0.02%)</title><rect x="49.7373%" y="581" width="0.0214%" height="15" fill="rgb(208,173,10)"/><text x="49.9873%" y="591.50"></text></g><g><title>iallocztm (2 samples, 0.02%)</title><rect x="49.7373%" y="565" width="0.0214%" height="15" fill="rgb(246,225,4)"/><text x="49.9873%" y="575.50"></text></g><g><title>arena_malloc (2 samples, 0.02%)</title><rect x="49.7373%" y="549" width="0.0214%" height="15" fill="rgb(248,102,6)"/><text x="49.9873%" y="559.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.02%)</title><rect x="49.7373%" y="533" width="0.0214%" height="15" fill="rgb(232,6,21)"/><text x="49.9873%" y="543.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.01%)</title><rect x="49.7480%" y="517" width="0.0107%" height="15" fill="rgb(221,179,22)"/><text x="49.9980%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.10%)</title><rect x="49.6837%" y="677" width="0.0965%" height="15" fill="rgb(252,50,20)"/><text x="49.9337%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.10%)</title><rect x="49.6837%" y="661" width="0.0965%" height="15" fill="rgb(222,56,38)"/><text x="49.9337%" y="671.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.10%)</title><rect x="49.6837%" y="645" width="0.0965%" height="15" fill="rgb(206,193,29)"/><text x="49.9337%" y="655.50"></text></g><g><title>_rjem_mallocx (7 samples, 0.08%)</title><rect x="49.7052%" y="629" width="0.0751%" height="15" fill="rgb(239,192,45)"/><text x="49.9552%" y="639.50"></text></g><g><title>imalloc (4 samples, 0.04%)</title><rect x="49.7373%" y="613" width="0.0429%" height="15" fill="rgb(254,18,36)"/><text x="49.9873%" y="623.50"></text></g><g><title>tsd_fetch (2 samples, 0.02%)</title><rect x="49.7588%" y="597" width="0.0214%" height="15" fill="rgb(221,127,11)"/><text x="50.0088%" y="607.50"></text></g><g><title>tsd_fetch_impl (2 samples, 0.02%)</title><rect x="49.7588%" y="581" width="0.0214%" height="15" fill="rgb(234,146,35)"/><text x="50.0088%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (10 samples, 0.11%)</title><rect x="49.6837%" y="725" width="0.1072%" height="15" fill="rgb(254,201,37)"/><text x="49.9337%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.11%)</title><rect x="49.6837%" y="709" width="0.1072%" height="15" fill="rgb(211,202,23)"/><text x="49.9337%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.11%)</title><rect x="49.6837%" y="693" width="0.1072%" height="15" fill="rgb(237,91,2)"/><text x="49.9337%" y="703.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="49.7802%" y="677" width="0.0107%" height="15" fill="rgb(226,228,36)"/><text x="50.0302%" y="687.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1 samples, 0.01%)</title><rect x="49.7802%" y="661" width="0.0107%" height="15" fill="rgb(213,63,50)"/><text x="50.0302%" y="671.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.01%)</title><rect x="49.7802%" y="645" width="0.0107%" height="15" fill="rgb(235,194,19)"/><text x="50.0302%" y="655.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.01%)</title><rect x="49.7802%" y="629" width="0.0107%" height="15" fill="rgb(207,204,18)"/><text x="50.0302%" y="639.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (99 samples, 1.06%)</title><rect x="48.7509%" y="853" width="1.0614%" height="15" fill="rgb(248,8,7)"/><text x="49.0009%" y="863.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (14 samples, 0.15%)</title><rect x="49.6623%" y="837" width="0.1501%" height="15" fill="rgb(223,145,47)"/><text x="49.9123%" y="847.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (12 samples, 0.13%)</title><rect x="49.6837%" y="821" width="0.1287%" height="15" fill="rgb(228,84,11)"/><text x="49.9337%" y="831.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (12 samples, 0.13%)</title><rect x="49.6837%" y="805" width="0.1287%" height="15" fill="rgb(218,76,45)"/><text x="49.9337%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.13%)</title><rect x="49.6837%" y="789" width="0.1287%" height="15" fill="rgb(223,80,15)"/><text x="49.9337%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.13%)</title><rect x="49.6837%" y="773" width="0.1287%" height="15" fill="rgb(219,218,33)"/><text x="49.9337%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.13%)</title><rect x="49.6837%" y="757" width="0.1287%" height="15" fill="rgb(208,51,11)"/><text x="49.9337%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.13%)</title><rect x="49.6837%" y="741" width="0.1287%" height="15" fill="rgb(229,165,39)"/><text x="49.9337%" y="751.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.02%)</title><rect x="49.7909%" y="725" width="0.0214%" height="15" fill="rgb(241,100,24)"/><text x="50.0409%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="49.7909%" y="709" width="0.0214%" height="15" fill="rgb(228,14,23)"/><text x="50.0409%" y="719.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="49.8017%" y="693" width="0.0107%" height="15" fill="rgb(247,116,52)"/><text x="50.0517%" y="703.50"></text></g><g><title>arena_bin_slabs_nonfull_tryget (2 samples, 0.02%)</title><rect x="49.8338%" y="581" width="0.0214%" height="15" fill="rgb(216,149,33)"/><text x="50.0838%" y="591.50"></text></g><g><title>_rjem_je_extent_heap_remove_first (2 samples, 0.02%)</title><rect x="49.8338%" y="565" width="0.0214%" height="15" fill="rgb(238,142,29)"/><text x="50.0838%" y="575.50"></text></g><g><title>extent_snad_comp (1 samples, 0.01%)</title><rect x="49.8445%" y="549" width="0.0107%" height="15" fill="rgb(224,83,40)"/><text x="50.0945%" y="559.50"></text></g><g><title>extent_sn_comp (1 samples, 0.01%)</title><rect x="49.8445%" y="533" width="0.0107%" height="15" fill="rgb(234,165,11)"/><text x="50.0945%" y="543.50"></text></g><g><title>extent_sn_get (1 samples, 0.01%)</title><rect x="49.8445%" y="517" width="0.0107%" height="15" fill="rgb(215,96,23)"/><text x="50.0945%" y="527.50"></text></g><g><title>arena_bin_nonfull_slab_get (3 samples, 0.03%)</title><rect x="49.8338%" y="597" width="0.0322%" height="15" fill="rgb(233,179,26)"/><text x="50.0838%" y="607.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.01%)</title><rect x="49.8553%" y="581" width="0.0107%" height="15" fill="rgb(225,129,33)"/><text x="50.1053%" y="591.50"></text></g><g><title>_rjem_je_extents_alloc (1 samples, 0.01%)</title><rect x="49.8553%" y="565" width="0.0107%" height="15" fill="rgb(237,49,13)"/><text x="50.1053%" y="575.50"></text></g><g><title>extent_recycle (1 samples, 0.01%)</title><rect x="49.8553%" y="549" width="0.0107%" height="15" fill="rgb(211,3,31)"/><text x="50.1053%" y="559.50"></text></g><g><title>extent_recycle_extract (1 samples, 0.01%)</title><rect x="49.8553%" y="533" width="0.0107%" height="15" fill="rgb(216,152,19)"/><text x="50.1053%" y="543.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.01%)</title><rect x="49.8553%" y="517" width="0.0107%" height="15" fill="rgb(251,121,35)"/><text x="50.1053%" y="527.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.01%)</title><rect x="49.8553%" y="501" width="0.0107%" height="15" fill="rgb(210,217,47)"/><text x="50.1053%" y="511.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.01%)</title><rect x="49.8553%" y="485" width="0.0107%" height="15" fill="rgb(244,116,22)"/><text x="50.1053%" y="495.50"></text></g><g><title>imalloc_no_sample (4 samples, 0.04%)</title><rect x="49.8338%" y="709" width="0.0429%" height="15" fill="rgb(228,17,21)"/><text x="50.0838%" y="719.50"></text></g><g><title>iallocztm (4 samples, 0.04%)</title><rect x="49.8338%" y="693" width="0.0429%" height="15" fill="rgb(240,149,34)"/><text x="50.0838%" y="703.50"></text></g><g><title>arena_malloc (4 samples, 0.04%)</title><rect x="49.8338%" y="677" width="0.0429%" height="15" fill="rgb(208,125,47)"/><text x="50.0838%" y="687.50"></text></g><g><title>tcache_alloc_small (4 samples, 0.04%)</title><rect x="49.8338%" y="661" width="0.0429%" height="15" fill="rgb(249,186,39)"/><text x="50.0838%" y="671.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (4 samples, 0.04%)</title><rect x="49.8338%" y="645" width="0.0429%" height="15" fill="rgb(240,220,33)"/><text x="50.0838%" y="655.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (4 samples, 0.04%)</title><rect x="49.8338%" y="629" width="0.0429%" height="15" fill="rgb(243,110,23)"/><text x="50.0838%" y="639.50"></text></g><g><title>arena_bin_malloc_hard (4 samples, 0.04%)</title><rect x="49.8338%" y="613" width="0.0429%" height="15" fill="rgb(219,163,46)"/><text x="50.0838%" y="623.50"></text></g><g><title>arena_bin_slabs_full_insert (1 samples, 0.01%)</title><rect x="49.8660%" y="597" width="0.0107%" height="15" fill="rgb(216,126,30)"/><text x="50.1160%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.08%)</title><rect x="49.8124%" y="853" width="0.0751%" height="15" fill="rgb(208,139,11)"/><text x="50.0624%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.08%)</title><rect x="49.8124%" y="837" width="0.0751%" height="15" fill="rgb(213,118,36)"/><text x="50.0624%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.08%)</title><rect x="49.8124%" y="821" width="0.0751%" height="15" fill="rgb(226,43,17)"/><text x="50.0624%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.08%)</title><rect x="49.8124%" y="805" width="0.0751%" height="15" fill="rgb(254,217,4)"/><text x="50.0624%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.08%)</title><rect x="49.8124%" y="789" width="0.0751%" height="15" fill="rgb(210,134,47)"/><text x="50.0624%" y="799.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.06%)</title><rect x="49.8231%" y="773" width="0.0643%" height="15" fill="rgb(237,24,49)"/><text x="50.0731%" y="783.50"></text></g><g><title>_rjem_mallocx (5 samples, 0.05%)</title><rect x="49.8338%" y="757" width="0.0536%" height="15" fill="rgb(251,39,46)"/><text x="50.0838%" y="767.50"></text></g><g><title>imalloc (5 samples, 0.05%)</title><rect x="49.8338%" y="741" width="0.0536%" height="15" fill="rgb(251,220,3)"/><text x="50.0838%" y="751.50"></text></g><g><title>imalloc_body (5 samples, 0.05%)</title><rect x="49.8338%" y="725" width="0.0536%" height="15" fill="rgb(228,105,12)"/><text x="50.0838%" y="735.50"></text></g><g><title>sz_index2size (1 samples, 0.01%)</title><rect x="49.8767%" y="709" width="0.0107%" height="15" fill="rgb(215,196,1)"/><text x="50.1267%" y="719.50"></text></g><g><title>sz_index2size_lookup (1 samples, 0.01%)</title><rect x="49.8767%" y="693" width="0.0107%" height="15" fill="rgb(214,33,39)"/><text x="50.1267%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (108 samples, 1.16%)</title><rect x="48.7509%" y="917" width="1.1579%" height="15" fill="rgb(220,19,52)"/><text x="49.0009%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (108 samples, 1.16%)</title><rect x="48.7509%" y="901" width="1.1579%" height="15" fill="rgb(221,78,38)"/><text x="49.0009%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (108 samples, 1.16%)</title><rect x="48.7509%" y="885" width="1.1579%" height="15" fill="rgb(253,30,16)"/><text x="49.0009%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (108 samples, 1.16%)</title><rect x="48.7509%" y="869" width="1.1579%" height="15" fill="rgb(242,65,0)"/><text x="49.0009%" y="879.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2 samples, 0.02%)</title><rect x="49.8874%" y="853" width="0.0214%" height="15" fill="rgb(235,201,12)"/><text x="50.1374%" y="863.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="49.8874%" y="837" width="0.0214%" height="15" fill="rgb(233,161,9)"/><text x="50.1374%" y="847.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.01%)</title><rect x="49.9196%" y="597" width="0.0107%" height="15" fill="rgb(241,207,41)"/><text x="50.1696%" y="607.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (1 samples, 0.01%)</title><rect x="49.9196%" y="581" width="0.0107%" height="15" fill="rgb(212,69,46)"/><text x="50.1696%" y="591.50"></text></g><g><title>arena_slab_reg_alloc (1 samples, 0.01%)</title><rect x="49.9196%" y="565" width="0.0107%" height="15" fill="rgb(239,69,45)"/><text x="50.1696%" y="575.50"></text></g><g><title>bitmap_sfu (1 samples, 0.01%)</title><rect x="49.9196%" y="549" width="0.0107%" height="15" fill="rgb(242,117,48)"/><text x="50.1696%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="49.9196%" y="533" width="0.0107%" height="15" fill="rgb(228,41,36)"/><text x="50.1696%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="49.9196%" y="517" width="0.0107%" height="15" fill="rgb(212,3,32)"/><text x="50.1696%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="49.9196%" y="501" width="0.0107%" height="15" fill="rgb(233,41,49)"/><text x="50.1696%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="49.9196%" y="485" width="0.0107%" height="15" fill="rgb(252,170,49)"/><text x="50.1696%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="49.9196%" y="469" width="0.0107%" height="15" fill="rgb(229,53,26)"/><text x="50.1696%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="49.9196%" y="453" width="0.0107%" height="15" fill="rgb(217,157,12)"/><text x="50.1696%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="49.9196%" y="437" width="0.0107%" height="15" fill="rgb(227,17,9)"/><text x="50.1696%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="49.9196%" y="421" width="0.0107%" height="15" fill="rgb(218,84,12)"/><text x="50.1696%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="49.9196%" y="405" width="0.0107%" height="15" fill="rgb(212,79,24)"/><text x="50.1696%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="49.9196%" y="389" width="0.0107%" height="15" fill="rgb(217,222,37)"/><text x="50.1696%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="49.9196%" y="805" width="0.0214%" height="15" fill="rgb(246,208,8)"/><text x="50.1696%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="49.9196%" y="789" width="0.0214%" height="15" fill="rgb(244,133,10)"/><text x="50.1696%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="49.9196%" y="773" width="0.0214%" height="15" fill="rgb(209,219,41)"/><text x="50.1696%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="49.9196%" y="757" width="0.0214%" height="15" fill="rgb(253,175,45)"/><text x="50.1696%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="49.9196%" y="741" width="0.0214%" height="15" fill="rgb(235,100,37)"/><text x="50.1696%" y="751.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="49.9196%" y="725" width="0.0214%" height="15" fill="rgb(225,87,19)"/><text x="50.1696%" y="735.50"></text></g><g><title>_rjem_mallocx (2 samples, 0.02%)</title><rect x="49.9196%" y="709" width="0.0214%" height="15" fill="rgb(217,152,17)"/><text x="50.1696%" y="719.50"></text></g><g><title>imalloc (2 samples, 0.02%)</title><rect x="49.9196%" y="693" width="0.0214%" height="15" fill="rgb(235,72,13)"/><text x="50.1696%" y="703.50"></text></g><g><title>imalloc_body (2 samples, 0.02%)</title><rect x="49.9196%" y="677" width="0.0214%" height="15" fill="rgb(233,140,18)"/><text x="50.1696%" y="687.50"></text></g><g><title>imalloc_no_sample (2 samples, 0.02%)</title><rect x="49.9196%" y="661" width="0.0214%" height="15" fill="rgb(207,212,28)"/><text x="50.1696%" y="671.50"></text></g><g><title>iallocztm (2 samples, 0.02%)</title><rect x="49.9196%" y="645" width="0.0214%" height="15" fill="rgb(220,130,25)"/><text x="50.1696%" y="655.50"></text></g><g><title>arena_malloc (2 samples, 0.02%)</title><rect x="49.9196%" y="629" width="0.0214%" height="15" fill="rgb(205,55,34)"/><text x="50.1696%" y="639.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.02%)</title><rect x="49.9196%" y="613" width="0.0214%" height="15" fill="rgb(237,54,35)"/><text x="50.1696%" y="623.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.01%)</title><rect x="49.9303%" y="597" width="0.0107%" height="15" fill="rgb(208,67,23)"/><text x="50.1803%" y="607.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="49.9196%" y="901" width="0.0429%" height="15" fill="rgb(206,207,50)"/><text x="50.1696%" y="911.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="49.9196%" y="885" width="0.0429%" height="15" fill="rgb(213,211,42)"/><text x="50.1696%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="49.9196%" y="869" width="0.0429%" height="15" fill="rgb(252,197,50)"/><text x="50.1696%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.04%)</title><rect x="49.9196%" y="853" width="0.0429%" height="15" fill="rgb(251,211,41)"/><text x="50.1696%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.04%)</title><rect x="49.9196%" y="837" width="0.0429%" height="15" fill="rgb(229,211,5)"/><text x="50.1696%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.04%)</title><rect x="49.9196%" y="821" width="0.0429%" height="15" fill="rgb(239,36,31)"/><text x="50.1696%" y="831.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.02%)</title><rect x="49.9410%" y="805" width="0.0214%" height="15" fill="rgb(248,67,31)"/><text x="50.1910%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="49.9410%" y="789" width="0.0214%" height="15" fill="rgb(249,55,44)"/><text x="50.1910%" y="799.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="49.9410%" y="773" width="0.0214%" height="15" fill="rgb(216,82,12)"/><text x="50.1910%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="49.9839%" y="869" width="0.0214%" height="15" fill="rgb(242,174,1)"/><text x="50.2339%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="50.0054%" y="821" width="0.0322%" height="15" fill="rgb(208,120,29)"/><text x="50.2554%" y="831.50"></text></g><g><title>&lt;model::rho_types::GUnforgeable as core::clone::Clone&gt;::clone (14 samples, 0.15%)</title><rect x="50.0375%" y="821" width="0.1501%" height="15" fill="rgb(221,105,43)"/><text x="50.2875%" y="831.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (13 samples, 0.14%)</title><rect x="50.0482%" y="805" width="0.1394%" height="15" fill="rgb(234,124,22)"/><text x="50.2982%" y="815.50"></text></g><g><title>&lt;model::rho_types::g_unforgeable::UnfInstance as core::clone::Clone&gt;::clone (10 samples, 0.11%)</title><rect x="50.0804%" y="789" width="0.1072%" height="15" fill="rgb(212,23,30)"/><text x="50.3304%" y="799.50"></text></g><g><title>&lt;model::rho_types::GPrivate as core::clone::Clone&gt;::clone (9 samples, 0.10%)</title><rect x="50.0911%" y="773" width="0.0965%" height="15" fill="rgb(219,122,53)"/><text x="50.3411%" y="783.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (9 samples, 0.10%)</title><rect x="50.0911%" y="757" width="0.0965%" height="15" fill="rgb(248,84,24)"/><text x="50.3411%" y="767.50"></text></g><g><title>bytes::bytes::shared_clone (8 samples, 0.09%)</title><rect x="50.1019%" y="741" width="0.0858%" height="15" fill="rgb(245,115,18)"/><text x="50.3519%" y="751.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (8 samples, 0.09%)</title><rect x="50.1019%" y="725" width="0.0858%" height="15" fill="rgb(227,176,51)"/><text x="50.3519%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (7 samples, 0.08%)</title><rect x="50.1126%" y="709" width="0.0751%" height="15" fill="rgb(229,63,42)"/><text x="50.3626%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_add (7 samples, 0.08%)</title><rect x="50.1126%" y="693" width="0.0751%" height="15" fill="rgb(247,202,24)"/><text x="50.3626%" y="703.50"></text></g><g><title>imalloc_no_sample (3 samples, 0.03%)</title><rect x="50.2091%" y="677" width="0.0322%" height="15" fill="rgb(244,173,20)"/><text x="50.4591%" y="687.50"></text></g><g><title>iallocztm (2 samples, 0.02%)</title><rect x="50.2198%" y="661" width="0.0214%" height="15" fill="rgb(242,81,47)"/><text x="50.4698%" y="671.50"></text></g><g><title>arena_malloc (2 samples, 0.02%)</title><rect x="50.2198%" y="645" width="0.0214%" height="15" fill="rgb(231,185,54)"/><text x="50.4698%" y="655.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.02%)</title><rect x="50.2198%" y="629" width="0.0214%" height="15" fill="rgb(243,55,32)"/><text x="50.4698%" y="639.50"></text></g><g><title>cache_bin_alloc_easy (2 samples, 0.02%)</title><rect x="50.2198%" y="613" width="0.0214%" height="15" fill="rgb(208,167,19)"/><text x="50.4698%" y="623.50"></text></g><g><title>sz_index2size (1 samples, 0.01%)</title><rect x="50.2412%" y="677" width="0.0107%" height="15" fill="rgb(231,72,35)"/><text x="50.4912%" y="687.50"></text></g><g><title>sz_index2size_lookup (1 samples, 0.01%)</title><rect x="50.2412%" y="661" width="0.0107%" height="15" fill="rgb(250,173,51)"/><text x="50.4912%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.08%)</title><rect x="50.1876%" y="773" width="0.0751%" height="15" fill="rgb(209,5,22)"/><text x="50.4376%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.08%)</title><rect x="50.1876%" y="757" width="0.0751%" height="15" fill="rgb(250,174,19)"/><text x="50.4376%" y="767.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.08%)</title><rect x="50.1876%" y="741" width="0.0751%" height="15" fill="rgb(217,3,49)"/><text x="50.4376%" y="751.50"></text></g><g><title>_rjem_mallocx (7 samples, 0.08%)</title><rect x="50.1876%" y="725" width="0.0751%" height="15" fill="rgb(218,225,5)"/><text x="50.4376%" y="735.50"></text></g><g><title>imalloc (5 samples, 0.05%)</title><rect x="50.2091%" y="709" width="0.0536%" height="15" fill="rgb(236,89,11)"/><text x="50.4591%" y="719.50"></text></g><g><title>imalloc_body (5 samples, 0.05%)</title><rect x="50.2091%" y="693" width="0.0536%" height="15" fill="rgb(206,33,28)"/><text x="50.4591%" y="703.50"></text></g><g><title>sz_size2index (1 samples, 0.01%)</title><rect x="50.2520%" y="677" width="0.0107%" height="15" fill="rgb(241,56,42)"/><text x="50.5020%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (3 samples, 0.03%)</title><rect x="50.2627%" y="773" width="0.0322%" height="15" fill="rgb(222,44,11)"/><text x="50.5127%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (32 samples, 0.34%)</title><rect x="49.9839%" y="885" width="0.3431%" height="15" fill="rgb(234,111,20)"/><text x="50.2339%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (30 samples, 0.32%)</title><rect x="50.0054%" y="869" width="0.3216%" height="15" fill="rgb(237,77,6)"/><text x="50.2554%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (30 samples, 0.32%)</title><rect x="50.0054%" y="853" width="0.3216%" height="15" fill="rgb(235,111,23)"/><text x="50.2554%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (30 samples, 0.32%)</title><rect x="50.0054%" y="837" width="0.3216%" height="15" fill="rgb(251,135,29)"/><text x="50.2554%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13 samples, 0.14%)</title><rect x="50.1876%" y="821" width="0.1394%" height="15" fill="rgb(217,57,1)"/><text x="50.4376%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.14%)</title><rect x="50.1876%" y="805" width="0.1394%" height="15" fill="rgb(249,119,31)"/><text x="50.4376%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.14%)</title><rect x="50.1876%" y="789" width="0.1394%" height="15" fill="rgb(233,164,33)"/><text x="50.4376%" y="799.50"></text></g><g><title>core::alloc::layout::Layout::array (3 samples, 0.03%)</title><rect x="50.2948%" y="773" width="0.0322%" height="15" fill="rgb(250,217,43)"/><text x="50.5448%" y="783.50"></text></g><g><title>core::alloc::layout::Layout::repeat (3 samples, 0.03%)</title><rect x="50.2948%" y="757" width="0.0322%" height="15" fill="rgb(232,154,50)"/><text x="50.5448%" y="767.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (3 samples, 0.03%)</title><rect x="50.2948%" y="741" width="0.0322%" height="15" fill="rgb(227,190,8)"/><text x="50.5448%" y="751.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (3 samples, 0.03%)</title><rect x="50.2948%" y="725" width="0.0322%" height="15" fill="rgb(209,217,32)"/><text x="50.5448%" y="735.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (37 samples, 0.40%)</title><rect x="49.9625%" y="901" width="0.3967%" height="15" fill="rgb(243,203,50)"/><text x="50.2125%" y="911.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="50.3270%" y="885" width="0.0322%" height="15" fill="rgb(232,152,27)"/><text x="50.5770%" y="895.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="50.3270%" y="869" width="0.0322%" height="15" fill="rgb(240,34,29)"/><text x="50.5770%" y="879.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="50.3270%" y="853" width="0.0322%" height="15" fill="rgb(215,185,52)"/><text x="50.5770%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="50.3270%" y="837" width="0.0322%" height="15" fill="rgb(240,89,49)"/><text x="50.5770%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.03%)</title><rect x="50.3270%" y="821" width="0.0322%" height="15" fill="rgb(225,12,52)"/><text x="50.5770%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.03%)</title><rect x="50.3270%" y="805" width="0.0322%" height="15" fill="rgb(239,128,45)"/><text x="50.5770%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.03%)</title><rect x="50.3270%" y="789" width="0.0322%" height="15" fill="rgb(211,78,47)"/><text x="50.5770%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="50.3270%" y="773" width="0.0322%" height="15" fill="rgb(232,31,21)"/><text x="50.5770%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="50.3270%" y="757" width="0.0322%" height="15" fill="rgb(222,168,14)"/><text x="50.5770%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.03%)</title><rect x="50.3270%" y="741" width="0.0322%" height="15" fill="rgb(209,128,24)"/><text x="50.5770%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.03%)</title><rect x="50.3270%" y="725" width="0.0322%" height="15" fill="rgb(249,35,13)"/><text x="50.5770%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.03%)</title><rect x="50.3270%" y="709" width="0.0322%" height="15" fill="rgb(218,7,2)"/><text x="50.5770%" y="719.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.03%)</title><rect x="50.3270%" y="693" width="0.0322%" height="15" fill="rgb(238,107,27)"/><text x="50.5770%" y="703.50"></text></g><g><title>_rjem_mallocx (3 samples, 0.03%)</title><rect x="50.3270%" y="677" width="0.0322%" height="15" fill="rgb(217,88,38)"/><text x="50.5770%" y="687.50"></text></g><g><title>imalloc (1 samples, 0.01%)</title><rect x="50.3485%" y="661" width="0.0107%" height="15" fill="rgb(230,207,0)"/><text x="50.5985%" y="671.50"></text></g><g><title>imalloc_body (1 samples, 0.01%)</title><rect x="50.3485%" y="645" width="0.0107%" height="15" fill="rgb(249,64,54)"/><text x="50.5985%" y="655.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.01%)</title><rect x="50.3485%" y="629" width="0.0107%" height="15" fill="rgb(231,7,11)"/><text x="50.5985%" y="639.50"></text></g><g><title>iallocztm (1 samples, 0.01%)</title><rect x="50.3485%" y="613" width="0.0107%" height="15" fill="rgb(205,149,21)"/><text x="50.5985%" y="623.50"></text></g><g><title>arena_malloc (1 samples, 0.01%)</title><rect x="50.3485%" y="597" width="0.0107%" height="15" fill="rgb(215,126,34)"/><text x="50.5985%" y="607.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.01%)</title><rect x="50.3485%" y="581" width="0.0107%" height="15" fill="rgb(241,132,45)"/><text x="50.5985%" y="591.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.01%)</title><rect x="50.3485%" y="565" width="0.0107%" height="15" fill="rgb(252,69,32)"/><text x="50.5985%" y="575.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (48 samples, 0.51%)</title><rect x="49.9089%" y="917" width="0.5146%" height="15" fill="rgb(232,204,19)"/><text x="50.1589%" y="927.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.06%)</title><rect x="50.3592%" y="901" width="0.0643%" height="15" fill="rgb(249,15,47)"/><text x="50.6092%" y="911.50"></text></g><g><title>&lt;model::rho_types::Send as core::clone::Clone&gt;::clone (159 samples, 1.70%)</title><rect x="48.7402%" y="933" width="1.7047%" height="15" fill="rgb(209,227,23)"/><text x="48.9902%" y="943.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="50.4235%" y="917" width="0.0214%" height="15" fill="rgb(248,92,24)"/><text x="50.6735%" y="927.50"></text></g><g><title>__rg_alloc (3 samples, 0.03%)</title><rect x="50.5414%" y="837" width="0.0322%" height="15" fill="rgb(247,59,2)"/><text x="50.7914%" y="847.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (3 samples, 0.03%)</title><rect x="50.5414%" y="821" width="0.0322%" height="15" fill="rgb(221,30,5)"/><text x="50.7914%" y="831.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="50.5736%" y="837" width="0.0107%" height="15" fill="rgb(208,108,53)"/><text x="50.8236%" y="847.50"></text></g><g><title>arena_bin_slabs_nonfull_tryget (1 samples, 0.01%)</title><rect x="50.6594%" y="661" width="0.0107%" height="15" fill="rgb(211,183,26)"/><text x="50.9094%" y="671.50"></text></g><g><title>_rjem_je_extent_heap_remove_first (1 samples, 0.01%)</title><rect x="50.6594%" y="645" width="0.0107%" height="15" fill="rgb(232,132,4)"/><text x="50.9094%" y="655.50"></text></g><g><title>extents_fit_locked (1 samples, 0.01%)</title><rect x="50.6808%" y="597" width="0.0107%" height="15" fill="rgb(253,128,37)"/><text x="50.9308%" y="607.50"></text></g><g><title>extent_size_quantize_ceil (1 samples, 0.01%)</title><rect x="50.6808%" y="581" width="0.0107%" height="15" fill="rgb(221,58,24)"/><text x="50.9308%" y="591.50"></text></g><g><title>extent_size_quantize_floor (1 samples, 0.01%)</title><rect x="50.6808%" y="565" width="0.0107%" height="15" fill="rgb(230,54,45)"/><text x="50.9308%" y="575.50"></text></g><g><title>arena_slab_alloc (3 samples, 0.03%)</title><rect x="50.6701%" y="661" width="0.0322%" height="15" fill="rgb(254,21,18)"/><text x="50.9201%" y="671.50"></text></g><g><title>_rjem_je_extents_alloc (3 samples, 0.03%)</title><rect x="50.6701%" y="645" width="0.0322%" height="15" fill="rgb(221,108,0)"/><text x="50.9201%" y="655.50"></text></g><g><title>extent_recycle (3 samples, 0.03%)</title><rect x="50.6701%" y="629" width="0.0322%" height="15" fill="rgb(206,95,1)"/><text x="50.9201%" y="639.50"></text></g><g><title>extent_recycle_extract (2 samples, 0.02%)</title><rect x="50.6808%" y="613" width="0.0214%" height="15" fill="rgb(237,52,5)"/><text x="50.9308%" y="623.50"></text></g><g><title>malloc_mutex_unlock (1 samples, 0.01%)</title><rect x="50.6915%" y="597" width="0.0107%" height="15" fill="rgb(218,150,34)"/><text x="50.9415%" y="607.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="50.6915%" y="581" width="0.0107%" height="15" fill="rgb(235,194,28)"/><text x="50.9415%" y="591.50"></text></g><g><title>arena_bin_malloc_hard (6 samples, 0.06%)</title><rect x="50.6487%" y="693" width="0.0643%" height="15" fill="rgb(245,92,18)"/><text x="50.8987%" y="703.50"></text></g><g><title>arena_bin_nonfull_slab_get (5 samples, 0.05%)</title><rect x="50.6594%" y="677" width="0.0536%" height="15" fill="rgb(253,203,53)"/><text x="50.9094%" y="687.50"></text></g><g><title>malloc_mutex_unlock (1 samples, 0.01%)</title><rect x="50.7023%" y="661" width="0.0107%" height="15" fill="rgb(249,185,47)"/><text x="50.9523%" y="671.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="50.7023%" y="645" width="0.0107%" height="15" fill="rgb(252,194,52)"/><text x="50.9523%" y="655.50"></text></g><g><title>arena_slab_reg_alloc (1 samples, 0.01%)</title><rect x="50.7130%" y="693" width="0.0107%" height="15" fill="rgb(210,53,36)"/><text x="50.9630%" y="703.50"></text></g><g><title>bitmap_sfu (1 samples, 0.01%)</title><rect x="50.7130%" y="677" width="0.0107%" height="15" fill="rgb(237,37,25)"/><text x="50.9630%" y="687.50"></text></g><g><title>bitmap_set (1 samples, 0.01%)</title><rect x="50.7130%" y="661" width="0.0107%" height="15" fill="rgb(242,116,27)"/><text x="50.9630%" y="671.50"></text></g><g><title>imalloc_no_sample (11 samples, 0.12%)</title><rect x="50.6165%" y="789" width="0.1179%" height="15" fill="rgb(213,185,26)"/><text x="50.8665%" y="799.50"></text></g><g><title>iallocztm (10 samples, 0.11%)</title><rect x="50.6272%" y="773" width="0.1072%" height="15" fill="rgb(225,204,8)"/><text x="50.8772%" y="783.50"></text></g><g><title>arena_malloc (10 samples, 0.11%)</title><rect x="50.6272%" y="757" width="0.1072%" height="15" fill="rgb(254,111,37)"/><text x="50.8772%" y="767.50"></text></g><g><title>tcache_alloc_small (10 samples, 0.11%)</title><rect x="50.6272%" y="741" width="0.1072%" height="15" fill="rgb(242,35,9)"/><text x="50.8772%" y="751.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (9 samples, 0.10%)</title><rect x="50.6379%" y="725" width="0.0965%" height="15" fill="rgb(232,138,49)"/><text x="50.8879%" y="735.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (9 samples, 0.10%)</title><rect x="50.6379%" y="709" width="0.0965%" height="15" fill="rgb(247,56,4)"/><text x="50.8879%" y="719.50"></text></g><g><title>extent_nfree_get (1 samples, 0.01%)</title><rect x="50.7237%" y="693" width="0.0107%" height="15" fill="rgb(226,179,17)"/><text x="50.9737%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (23 samples, 0.25%)</title><rect x="50.4986%" y="885" width="0.2466%" height="15" fill="rgb(216,163,45)"/><text x="50.7486%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (23 samples, 0.25%)</title><rect x="50.4986%" y="869" width="0.2466%" height="15" fill="rgb(211,157,3)"/><text x="50.7486%" y="879.50"></text></g><g><title>alloc::alloc::alloc (19 samples, 0.20%)</title><rect x="50.5414%" y="853" width="0.2037%" height="15" fill="rgb(234,44,20)"/><text x="50.7914%" y="863.50"></text></g><g><title>_rjem_mallocx (15 samples, 0.16%)</title><rect x="50.5843%" y="837" width="0.1608%" height="15" fill="rgb(254,138,23)"/><text x="50.8343%" y="847.50"></text></g><g><title>imalloc (13 samples, 0.14%)</title><rect x="50.6058%" y="821" width="0.1394%" height="15" fill="rgb(206,119,39)"/><text x="50.8558%" y="831.50"></text></g><g><title>imalloc_body (13 samples, 0.14%)</title><rect x="50.6058%" y="805" width="0.1394%" height="15" fill="rgb(231,105,52)"/><text x="50.8558%" y="815.50"></text></g><g><title>sz_size2index (1 samples, 0.01%)</title><rect x="50.7344%" y="789" width="0.0107%" height="15" fill="rgb(250,20,5)"/><text x="50.9844%" y="799.50"></text></g><g><title>sz_size2index_lookup (1 samples, 0.01%)</title><rect x="50.7344%" y="773" width="0.0107%" height="15" fill="rgb(215,198,30)"/><text x="50.9844%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (4 samples, 0.04%)</title><rect x="50.7451%" y="885" width="0.0429%" height="15" fill="rgb(246,142,8)"/><text x="50.9951%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (36 samples, 0.39%)</title><rect x="50.4449%" y="933" width="0.3860%" height="15" fill="rgb(243,26,38)"/><text x="50.6949%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (32 samples, 0.34%)</title><rect x="50.4878%" y="917" width="0.3431%" height="15" fill="rgb(205,133,28)"/><text x="50.7378%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (32 samples, 0.34%)</title><rect x="50.4878%" y="901" width="0.3431%" height="15" fill="rgb(212,34,0)"/><text x="50.7378%" y="911.50"></text></g><g><title>core::alloc::layout::Layout::array (4 samples, 0.04%)</title><rect x="50.7880%" y="885" width="0.0429%" height="15" fill="rgb(251,226,22)"/><text x="51.0380%" y="895.50"></text></g><g><title>core::alloc::layout::Layout::repeat (4 samples, 0.04%)</title><rect x="50.7880%" y="869" width="0.0429%" height="15" fill="rgb(252,119,9)"/><text x="51.0380%" y="879.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (4 samples, 0.04%)</title><rect x="50.7880%" y="853" width="0.0429%" height="15" fill="rgb(213,150,50)"/><text x="51.0380%" y="863.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (4 samples, 0.04%)</title><rect x="50.7880%" y="837" width="0.0429%" height="15" fill="rgb(212,24,39)"/><text x="51.0380%" y="847.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.11%)</title><rect x="50.8416%" y="917" width="0.1072%" height="15" fill="rgb(213,46,39)"/><text x="51.0916%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (221 samples, 2.37%)</title><rect x="48.5901%" y="1109" width="2.3695%" height="15" fill="rgb(239,106,12)"/><text x="48.8401%" y="1119.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (221 samples, 2.37%)</title><rect x="48.5901%" y="1093" width="2.3695%" height="15" fill="rgb(249,229,21)"/><text x="48.8401%" y="1103.50">al..</text></g><g><title>alloc::slice::hack::to_vec (221 samples, 2.37%)</title><rect x="48.5901%" y="1077" width="2.3695%" height="15" fill="rgb(212,158,3)"/><text x="48.8401%" y="1087.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (221 samples, 2.37%)</title><rect x="48.5901%" y="1061" width="2.3695%" height="15" fill="rgb(253,26,48)"/><text x="48.8401%" y="1071.50">&lt;T..</text></g><g><title>&lt;model::rho_types::MatchCase as core::clone::Clone&gt;::clone (221 samples, 2.37%)</title><rect x="48.5901%" y="1045" width="2.3695%" height="15" fill="rgb(238,178,20)"/><text x="48.8401%" y="1055.50">&lt;m..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (221 samples, 2.37%)</title><rect x="48.5901%" y="1029" width="2.3695%" height="15" fill="rgb(208,86,15)"/><text x="48.8401%" y="1039.50">&lt;c..</text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (221 samples, 2.37%)</title><rect x="48.5901%" y="1013" width="2.3695%" height="15" fill="rgb(239,42,53)"/><text x="48.8401%" y="1023.50">&lt;m..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (221 samples, 2.37%)</title><rect x="48.5901%" y="997" width="2.3695%" height="15" fill="rgb(245,226,8)"/><text x="48.8401%" y="1007.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (219 samples, 2.35%)</title><rect x="48.6116%" y="981" width="2.3480%" height="15" fill="rgb(216,176,32)"/><text x="48.8616%" y="991.50">a..</text></g><g><title>alloc::slice::hack::to_vec (219 samples, 2.35%)</title><rect x="48.6116%" y="965" width="2.3480%" height="15" fill="rgb(231,186,21)"/><text x="48.8616%" y="975.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (219 samples, 2.35%)</title><rect x="48.6116%" y="949" width="2.3480%" height="15" fill="rgb(205,95,49)"/><text x="48.8616%" y="959.50">&lt;..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (12 samples, 0.13%)</title><rect x="50.8309%" y="933" width="0.1287%" height="15" fill="rgb(217,145,8)"/><text x="51.0809%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="50.9489%" y="917" width="0.0107%" height="15" fill="rgb(239,144,48)"/><text x="51.1989%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="50.9489%" y="901" width="0.0107%" height="15" fill="rgb(214,189,23)"/><text x="51.1989%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="50.9489%" y="885" width="0.0107%" height="15" fill="rgb(229,157,17)"/><text x="51.1989%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="50.9489%" y="869" width="0.0107%" height="15" fill="rgb(230,5,48)"/><text x="51.1989%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="50.9489%" y="853" width="0.0107%" height="15" fill="rgb(224,156,48)"/><text x="51.1989%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.03%)</title><rect x="51.0882%" y="901" width="0.0322%" height="15" fill="rgb(223,14,29)"/><text x="51.3382%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="51.1097%" y="885" width="0.0107%" height="15" fill="rgb(229,96,36)"/><text x="51.3597%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="51.1311%" y="853" width="0.0107%" height="15" fill="rgb(231,102,53)"/><text x="51.3811%" y="863.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="51.1418%" y="837" width="0.0429%" height="15" fill="rgb(210,77,38)"/><text x="51.3918%" y="847.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="51.1740%" y="821" width="0.0107%" height="15" fill="rgb(235,131,6)"/><text x="51.4240%" y="831.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (7 samples, 0.08%)</title><rect x="51.1418%" y="853" width="0.0751%" height="15" fill="rgb(252,55,38)"/><text x="51.3918%" y="863.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="51.1847%" y="837" width="0.0322%" height="15" fill="rgb(246,38,14)"/><text x="51.4347%" y="847.50"></text></g><g><title>tcache_alloc_large (1 samples, 0.01%)</title><rect x="51.2598%" y="661" width="0.0107%" height="15" fill="rgb(242,27,5)"/><text x="51.5098%" y="671.50"></text></g><g><title>tcache_event (1 samples, 0.01%)</title><rect x="51.2598%" y="645" width="0.0107%" height="15" fill="rgb(228,65,35)"/><text x="51.5098%" y="655.50"></text></g><g><title>_rjem_je_tcache_event_hard (1 samples, 0.01%)</title><rect x="51.2598%" y="629" width="0.0107%" height="15" fill="rgb(245,93,11)"/><text x="51.5098%" y="639.50"></text></g><g><title>imalloc_no_sample (3 samples, 0.03%)</title><rect x="51.2598%" y="709" width="0.0322%" height="15" fill="rgb(213,1,31)"/><text x="51.5098%" y="719.50"></text></g><g><title>iallocztm (3 samples, 0.03%)</title><rect x="51.2598%" y="693" width="0.0322%" height="15" fill="rgb(237,205,14)"/><text x="51.5098%" y="703.50"></text></g><g><title>arena_malloc (3 samples, 0.03%)</title><rect x="51.2598%" y="677" width="0.0322%" height="15" fill="rgb(232,118,45)"/><text x="51.5098%" y="687.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.02%)</title><rect x="51.2705%" y="661" width="0.0214%" height="15" fill="rgb(218,5,6)"/><text x="51.5205%" y="671.50"></text></g><g><title>cache_bin_alloc_easy (2 samples, 0.02%)</title><rect x="51.2705%" y="645" width="0.0214%" height="15" fill="rgb(251,87,51)"/><text x="51.5205%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.06%)</title><rect x="51.2383%" y="805" width="0.0643%" height="15" fill="rgb(207,225,20)"/><text x="51.4883%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.06%)</title><rect x="51.2383%" y="789" width="0.0643%" height="15" fill="rgb(222,78,54)"/><text x="51.4883%" y="799.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.05%)</title><rect x="51.2491%" y="773" width="0.0536%" height="15" fill="rgb(232,85,16)"/><text x="51.4991%" y="783.50"></text></g><g><title>_rjem_mallocx (4 samples, 0.04%)</title><rect x="51.2598%" y="757" width="0.0429%" height="15" fill="rgb(244,25,33)"/><text x="51.5098%" y="767.50"></text></g><g><title>imalloc (4 samples, 0.04%)</title><rect x="51.2598%" y="741" width="0.0429%" height="15" fill="rgb(233,24,36)"/><text x="51.5098%" y="751.50"></text></g><g><title>imalloc_body (4 samples, 0.04%)</title><rect x="51.2598%" y="725" width="0.0429%" height="15" fill="rgb(253,49,54)"/><text x="51.5098%" y="735.50"></text></g><g><title>sz_size2index (1 samples, 0.01%)</title><rect x="51.2919%" y="709" width="0.0107%" height="15" fill="rgb(245,12,22)"/><text x="51.5419%" y="719.50"></text></g><g><title>sz_size2index_lookup (1 samples, 0.01%)</title><rect x="51.2919%" y="693" width="0.0107%" height="15" fill="rgb(253,141,28)"/><text x="51.5419%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (3 samples, 0.03%)</title><rect x="51.3027%" y="805" width="0.0322%" height="15" fill="rgb(225,207,27)"/><text x="51.5527%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.13%)</title><rect x="51.2169%" y="853" width="0.1287%" height="15" fill="rgb(220,84,2)"/><text x="51.4669%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (10 samples, 0.11%)</title><rect x="51.2383%" y="837" width="0.1072%" height="15" fill="rgb(224,37,37)"/><text x="51.4883%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (10 samples, 0.11%)</title><rect x="51.2383%" y="821" width="0.1072%" height="15" fill="rgb(220,143,18)"/><text x="51.4883%" y="831.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="51.3348%" y="805" width="0.0107%" height="15" fill="rgb(210,88,33)"/><text x="51.5848%" y="815.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1 samples, 0.01%)</title><rect x="51.3348%" y="789" width="0.0107%" height="15" fill="rgb(219,87,51)"/><text x="51.5848%" y="799.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.01%)</title><rect x="51.3348%" y="773" width="0.0107%" height="15" fill="rgb(211,7,35)"/><text x="51.5848%" y="783.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.01%)</title><rect x="51.3348%" y="757" width="0.0107%" height="15" fill="rgb(232,77,2)"/><text x="51.5848%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (31 samples, 0.33%)</title><rect x="51.0882%" y="917" width="0.3324%" height="15" fill="rgb(249,94,25)"/><text x="51.3382%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (28 samples, 0.30%)</title><rect x="51.1204%" y="901" width="0.3002%" height="15" fill="rgb(215,112,2)"/><text x="51.3704%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (28 samples, 0.30%)</title><rect x="51.1204%" y="885" width="0.3002%" height="15" fill="rgb(226,115,48)"/><text x="51.3704%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (28 samples, 0.30%)</title><rect x="51.1204%" y="869" width="0.3002%" height="15" fill="rgb(249,196,10)"/><text x="51.3704%" y="879.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (7 samples, 0.08%)</title><rect x="51.3456%" y="853" width="0.0751%" height="15" fill="rgb(237,109,14)"/><text x="51.5956%" y="863.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="51.3992%" y="837" width="0.0214%" height="15" fill="rgb(217,103,53)"/><text x="51.6492%" y="847.50"></text></g><g><title>__rg_alloc (1 samples, 0.01%)</title><rect x="51.4313%" y="709" width="0.0107%" height="15" fill="rgb(244,137,9)"/><text x="51.6813%" y="719.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.01%)</title><rect x="51.4313%" y="693" width="0.0107%" height="15" fill="rgb(227,201,3)"/><text x="51.6813%" y="703.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.01%)</title><rect x="51.4528%" y="597" width="0.0107%" height="15" fill="rgb(243,94,6)"/><text x="51.7028%" y="607.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (1 samples, 0.01%)</title><rect x="51.4528%" y="581" width="0.0107%" height="15" fill="rgb(235,118,5)"/><text x="51.7028%" y="591.50"></text></g><g><title>arena_slab_reg_alloc (1 samples, 0.01%)</title><rect x="51.4528%" y="565" width="0.0107%" height="15" fill="rgb(247,10,30)"/><text x="51.7028%" y="575.50"></text></g><g><title>bitmap_sfu (1 samples, 0.01%)</title><rect x="51.4528%" y="549" width="0.0107%" height="15" fill="rgb(205,26,28)"/><text x="51.7028%" y="559.50"></text></g><g><title>ffs_lu (1 samples, 0.01%)</title><rect x="51.4528%" y="533" width="0.0107%" height="15" fill="rgb(206,99,35)"/><text x="51.7028%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.05%)</title><rect x="51.4206%" y="757" width="0.0536%" height="15" fill="rgb(238,130,40)"/><text x="51.6706%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.05%)</title><rect x="51.4206%" y="741" width="0.0536%" height="15" fill="rgb(224,126,31)"/><text x="51.6706%" y="751.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.05%)</title><rect x="51.4206%" y="725" width="0.0536%" height="15" fill="rgb(254,105,17)"/><text x="51.6706%" y="735.50"></text></g><g><title>_rjem_mallocx (3 samples, 0.03%)</title><rect x="51.4420%" y="709" width="0.0322%" height="15" fill="rgb(216,87,36)"/><text x="51.6920%" y="719.50"></text></g><g><title>imalloc (3 samples, 0.03%)</title><rect x="51.4420%" y="693" width="0.0322%" height="15" fill="rgb(240,21,12)"/><text x="51.6920%" y="703.50"></text></g><g><title>imalloc_body (3 samples, 0.03%)</title><rect x="51.4420%" y="677" width="0.0322%" height="15" fill="rgb(245,192,34)"/><text x="51.6920%" y="687.50"></text></g><g><title>imalloc_no_sample (2 samples, 0.02%)</title><rect x="51.4528%" y="661" width="0.0214%" height="15" fill="rgb(226,100,49)"/><text x="51.7028%" y="671.50"></text></g><g><title>iallocztm (2 samples, 0.02%)</title><rect x="51.4528%" y="645" width="0.0214%" height="15" fill="rgb(245,188,27)"/><text x="51.7028%" y="655.50"></text></g><g><title>arena_malloc (2 samples, 0.02%)</title><rect x="51.4528%" y="629" width="0.0214%" height="15" fill="rgb(212,170,8)"/><text x="51.7028%" y="639.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.02%)</title><rect x="51.4528%" y="613" width="0.0214%" height="15" fill="rgb(217,113,29)"/><text x="51.7028%" y="623.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.01%)</title><rect x="51.4635%" y="597" width="0.0107%" height="15" fill="rgb(237,30,3)"/><text x="51.7135%" y="607.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (43 samples, 0.46%)</title><rect x="51.0239%" y="933" width="0.4610%" height="15" fill="rgb(227,19,28)"/><text x="51.2739%" y="943.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.06%)</title><rect x="51.4206%" y="917" width="0.0643%" height="15" fill="rgb(239,172,45)"/><text x="51.6706%" y="927.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (6 samples, 0.06%)</title><rect x="51.4206%" y="901" width="0.0643%" height="15" fill="rgb(254,55,39)"/><text x="51.6706%" y="911.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (6 samples, 0.06%)</title><rect x="51.4206%" y="885" width="0.0643%" height="15" fill="rgb(249,208,12)"/><text x="51.6706%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.06%)</title><rect x="51.4206%" y="869" width="0.0643%" height="15" fill="rgb(240,52,13)"/><text x="51.6706%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.06%)</title><rect x="51.4206%" y="853" width="0.0643%" height="15" fill="rgb(252,149,13)"/><text x="51.6706%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.06%)</title><rect x="51.4206%" y="837" width="0.0643%" height="15" fill="rgb(232,81,48)"/><text x="51.6706%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.06%)</title><rect x="51.4206%" y="821" width="0.0643%" height="15" fill="rgb(222,144,2)"/><text x="51.6706%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.06%)</title><rect x="51.4206%" y="805" width="0.0643%" height="15" fill="rgb(216,81,32)"/><text x="51.6706%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.06%)</title><rect x="51.4206%" y="789" width="0.0643%" height="15" fill="rgb(244,78,51)"/><text x="51.6706%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.06%)</title><rect x="51.4206%" y="773" width="0.0643%" height="15" fill="rgb(217,66,21)"/><text x="51.6706%" y="783.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="51.4742%" y="757" width="0.0107%" height="15" fill="rgb(247,101,42)"/><text x="51.7242%" y="767.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1 samples, 0.01%)</title><rect x="51.4742%" y="741" width="0.0107%" height="15" fill="rgb(227,81,39)"/><text x="51.7242%" y="751.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (49 samples, 0.53%)</title><rect x="51.0132%" y="949" width="0.5254%" height="15" fill="rgb(220,223,44)"/><text x="51.2632%" y="959.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.05%)</title><rect x="51.4849%" y="933" width="0.0536%" height="15" fill="rgb(205,218,2)"/><text x="51.7349%" y="943.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (52 samples, 0.56%)</title><rect x="50.9917%" y="981" width="0.5575%" height="15" fill="rgb(212,207,28)"/><text x="51.2417%" y="991.50"></text></g><g><title>&lt;model::rho_types::ELt as core::clone::Clone&gt;::clone (52 samples, 0.56%)</title><rect x="50.9917%" y="965" width="0.5575%" height="15" fill="rgb(224,12,41)"/><text x="51.2417%" y="975.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="51.5385%" y="949" width="0.0107%" height="15" fill="rgb(216,118,12)"/><text x="51.7885%" y="959.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (56 samples, 0.60%)</title><rect x="50.9596%" y="1013" width="0.6004%" height="15" fill="rgb(252,97,46)"/><text x="51.2096%" y="1023.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (56 samples, 0.60%)</title><rect x="50.9596%" y="997" width="0.6004%" height="15" fill="rgb(244,206,19)"/><text x="51.2096%" y="1007.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="51.5493%" y="981" width="0.0107%" height="15" fill="rgb(231,84,31)"/><text x="51.7993%" y="991.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.01%)</title><rect x="51.5707%" y="805" width="0.0107%" height="15" fill="rgb(244,133,0)"/><text x="51.8207%" y="815.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (1 samples, 0.01%)</title><rect x="51.5707%" y="789" width="0.0107%" height="15" fill="rgb(223,15,50)"/><text x="51.8207%" y="799.50"></text></g><g><title>imalloc_body (2 samples, 0.02%)</title><rect x="51.5707%" y="885" width="0.0214%" height="15" fill="rgb(250,118,49)"/><text x="51.8207%" y="895.50"></text></g><g><title>imalloc_no_sample (2 samples, 0.02%)</title><rect x="51.5707%" y="869" width="0.0214%" height="15" fill="rgb(248,25,38)"/><text x="51.8207%" y="879.50"></text></g><g><title>iallocztm (2 samples, 0.02%)</title><rect x="51.5707%" y="853" width="0.0214%" height="15" fill="rgb(215,70,14)"/><text x="51.8207%" y="863.50"></text></g><g><title>arena_malloc (2 samples, 0.02%)</title><rect x="51.5707%" y="837" width="0.0214%" height="15" fill="rgb(215,28,15)"/><text x="51.8207%" y="847.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.02%)</title><rect x="51.5707%" y="821" width="0.0214%" height="15" fill="rgb(243,6,28)"/><text x="51.8207%" y="831.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.01%)</title><rect x="51.5814%" y="805" width="0.0107%" height="15" fill="rgb(222,130,1)"/><text x="51.8314%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.04%)</title><rect x="51.5600%" y="1013" width="0.0429%" height="15" fill="rgb(236,166,44)"/><text x="51.8100%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.04%)</title><rect x="51.5600%" y="997" width="0.0429%" height="15" fill="rgb(221,108,14)"/><text x="51.8100%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.04%)</title><rect x="51.5600%" y="981" width="0.0429%" height="15" fill="rgb(252,3,45)"/><text x="51.8100%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.03%)</title><rect x="51.5707%" y="965" width="0.0322%" height="15" fill="rgb(237,68,30)"/><text x="51.8207%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.03%)</title><rect x="51.5707%" y="949" width="0.0322%" height="15" fill="rgb(211,79,22)"/><text x="51.8207%" y="959.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.03%)</title><rect x="51.5707%" y="933" width="0.0322%" height="15" fill="rgb(252,185,21)"/><text x="51.8207%" y="943.50"></text></g><g><title>_rjem_mallocx (3 samples, 0.03%)</title><rect x="51.5707%" y="917" width="0.0322%" height="15" fill="rgb(225,189,26)"/><text x="51.8207%" y="927.50"></text></g><g><title>imalloc (3 samples, 0.03%)</title><rect x="51.5707%" y="901" width="0.0322%" height="15" fill="rgb(241,30,40)"/><text x="51.8207%" y="911.50"></text></g><g><title>tsd_fetch (1 samples, 0.01%)</title><rect x="51.5922%" y="885" width="0.0107%" height="15" fill="rgb(235,215,44)"/><text x="51.8422%" y="895.50"></text></g><g><title>tsd_fetch_impl (1 samples, 0.01%)</title><rect x="51.5922%" y="869" width="0.0107%" height="15" fill="rgb(205,8,29)"/><text x="51.8422%" y="879.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2 samples, 0.02%)</title><rect x="51.6029%" y="1013" width="0.0214%" height="15" fill="rgb(241,137,42)"/><text x="51.8529%" y="1023.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="51.6029%" y="997" width="0.0214%" height="15" fill="rgb(237,155,2)"/><text x="51.8529%" y="1007.50"></text></g><g><title>rho_runtime::storage::transit::Transit::join (284 samples, 3.04%)</title><rect x="48.5901%" y="1269" width="3.0449%" height="15" fill="rgb(245,29,42)"/><text x="48.8401%" y="1279.50">rho..</text></g><g><title>&lt;rho_runtime::storage::TaggedContinuation as core::clone::Clone&gt;::clone (284 samples, 3.04%)</title><rect x="48.5901%" y="1253" width="3.0449%" height="15" fill="rgb(234,101,35)"/><text x="48.8401%" y="1263.50">&lt;rh..</text></g><g><title>&lt;model::rho_types::ParWithRandom as core::clone::Clone&gt;::clone (284 samples, 3.04%)</title><rect x="48.5901%" y="1237" width="3.0449%" height="15" fill="rgb(228,64,37)"/><text x="48.8401%" y="1247.50">&lt;mo..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (284 samples, 3.04%)</title><rect x="48.5901%" y="1221" width="3.0449%" height="15" fill="rgb(217,214,36)"/><text x="48.8401%" y="1231.50">&lt;co..</text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (284 samples, 3.04%)</title><rect x="48.5901%" y="1205" width="3.0449%" height="15" fill="rgb(243,70,3)"/><text x="48.8401%" y="1215.50">&lt;mo..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (284 samples, 3.04%)</title><rect x="48.5901%" y="1189" width="3.0449%" height="15" fill="rgb(253,158,52)"/><text x="48.8401%" y="1199.50">&lt;al..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (284 samples, 3.04%)</title><rect x="48.5901%" y="1173" width="3.0449%" height="15" fill="rgb(234,111,54)"/><text x="48.8401%" y="1183.50">all..</text></g><g><title>alloc::slice::hack::to_vec (284 samples, 3.04%)</title><rect x="48.5901%" y="1157" width="3.0449%" height="15" fill="rgb(217,70,32)"/><text x="48.8401%" y="1167.50">all..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (284 samples, 3.04%)</title><rect x="48.5901%" y="1141" width="3.0449%" height="15" fill="rgb(234,18,33)"/><text x="48.8401%" y="1151.50">&lt;T ..</text></g><g><title>&lt;model::rho_types::Match as core::clone::Clone&gt;::clone (284 samples, 3.04%)</title><rect x="48.5901%" y="1125" width="3.0449%" height="15" fill="rgb(234,12,49)"/><text x="48.8401%" y="1135.50">&lt;mo..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (63 samples, 0.68%)</title><rect x="50.9596%" y="1109" width="0.6755%" height="15" fill="rgb(236,10,21)"/><text x="51.2096%" y="1119.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (63 samples, 0.68%)</title><rect x="50.9596%" y="1093" width="0.6755%" height="15" fill="rgb(248,182,45)"/><text x="51.2096%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (63 samples, 0.68%)</title><rect x="50.9596%" y="1077" width="0.6755%" height="15" fill="rgb(217,95,36)"/><text x="51.2096%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (63 samples, 0.68%)</title><rect x="50.9596%" y="1061" width="0.6755%" height="15" fill="rgb(212,110,31)"/><text x="51.2096%" y="1071.50"></text></g><g><title>alloc::slice::hack::to_vec (63 samples, 0.68%)</title><rect x="50.9596%" y="1045" width="0.6755%" height="15" fill="rgb(206,32,53)"/><text x="51.2096%" y="1055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (63 samples, 0.68%)</title><rect x="50.9596%" y="1029" width="0.6755%" height="15" fill="rgb(246,141,37)"/><text x="51.2096%" y="1039.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.01%)</title><rect x="51.6243%" y="1013" width="0.0107%" height="15" fill="rgb(219,16,7)"/><text x="51.8743%" y="1023.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="51.6243%" y="997" width="0.0107%" height="15" fill="rgb(230,205,45)"/><text x="51.8743%" y="1007.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::reserve (1 samples, 0.01%)</title><rect x="51.6350%" y="1269" width="0.0107%" height="15" fill="rgb(231,43,49)"/><text x="51.8850%" y="1279.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.21%)</title><rect x="51.6994%" y="533" width="0.2144%" height="15" fill="rgb(212,106,34)"/><text x="51.9494%" y="543.50"></text></g><g><title>core::ptr::read (20 samples, 0.21%)</title><rect x="51.6994%" y="517" width="0.2144%" height="15" fill="rgb(206,83,17)"/><text x="51.9494%" y="527.50"></text></g><g><title>[libc-2.31.so] (20 samples, 0.21%)</title><rect x="51.6994%" y="501" width="0.2144%" height="15" fill="rgb(244,154,49)"/><text x="51.9494%" y="511.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.05%)</title><rect x="51.9138%" y="533" width="0.0536%" height="15" fill="rgb(244,149,49)"/><text x="52.1638%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.03%)</title><rect x="51.9674%" y="517" width="0.0322%" height="15" fill="rgb(227,134,18)"/><text x="52.2174%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.03%)</title><rect x="51.9674%" y="501" width="0.0322%" height="15" fill="rgb(237,116,36)"/><text x="52.2174%" y="511.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="51.9674%" y="485" width="0.0322%" height="15" fill="rgb(205,129,40)"/><text x="52.2174%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (4 samples, 0.04%)</title><rect x="51.9674%" y="533" width="0.0429%" height="15" fill="rgb(236,178,4)"/><text x="52.2174%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_slice (1 samples, 0.01%)</title><rect x="51.9996%" y="517" width="0.0107%" height="15" fill="rgb(251,76,53)"/><text x="52.2496%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="51.9996%" y="501" width="0.0107%" height="15" fill="rgb(242,92,40)"/><text x="52.2496%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="51.9996%" y="485" width="0.0107%" height="15" fill="rgb(209,45,30)"/><text x="52.2496%" y="495.50"></text></g><g><title>__rg_alloc (1 samples, 0.01%)</title><rect x="52.0103%" y="421" width="0.0107%" height="15" fill="rgb(218,157,36)"/><text x="52.2603%" y="431.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.01%)</title><rect x="52.0103%" y="405" width="0.0107%" height="15" fill="rgb(222,186,16)"/><text x="52.2603%" y="415.50"></text></g><g><title>jemallocator::layout_to_flags (1 samples, 0.01%)</title><rect x="52.0103%" y="389" width="0.0107%" height="15" fill="rgb(254,72,35)"/><text x="52.2603%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.03%)</title><rect x="52.0103%" y="533" width="0.0322%" height="15" fill="rgb(224,25,35)"/><text x="52.2603%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="52.0103%" y="517" width="0.0322%" height="15" fill="rgb(206,135,52)"/><text x="52.2603%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.03%)</title><rect x="52.0103%" y="501" width="0.0322%" height="15" fill="rgb(229,174,47)"/><text x="52.2603%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.03%)</title><rect x="52.0103%" y="485" width="0.0322%" height="15" fill="rgb(242,184,21)"/><text x="52.2603%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.03%)</title><rect x="52.0103%" y="469" width="0.0322%" height="15" fill="rgb(213,22,45)"/><text x="52.2603%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.03%)</title><rect x="52.0103%" y="453" width="0.0322%" height="15" fill="rgb(237,81,54)"/><text x="52.2603%" y="463.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.03%)</title><rect x="52.0103%" y="437" width="0.0322%" height="15" fill="rgb(248,177,18)"/><text x="52.2603%" y="447.50"></text></g><g><title>_rjem_mallocx (2 samples, 0.02%)</title><rect x="52.0210%" y="421" width="0.0214%" height="15" fill="rgb(254,31,16)"/><text x="52.2710%" y="431.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (41 samples, 0.44%)</title><rect x="51.6458%" y="1269" width="0.4396%" height="15" fill="rgb(235,20,31)"/><text x="51.8958%" y="1279.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (41 samples, 0.44%)</title><rect x="51.6458%" y="1253" width="0.4396%" height="15" fill="rgb(240,56,43)"/><text x="51.8958%" y="1263.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (41 samples, 0.44%)</title><rect x="51.6458%" y="1237" width="0.4396%" height="15" fill="rgb(237,197,51)"/><text x="51.8958%" y="1247.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (41 samples, 0.44%)</title><rect x="51.6458%" y="1221" width="0.4396%" height="15" fill="rgb(241,162,44)"/><text x="51.8958%" y="1231.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (41 samples, 0.44%)</title><rect x="51.6458%" y="1205" width="0.4396%" height="15" fill="rgb(224,23,20)"/><text x="51.8958%" y="1215.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (41 samples, 0.44%)</title><rect x="51.6458%" y="1189" width="0.4396%" height="15" fill="rgb(250,109,34)"/><text x="51.8958%" y="1199.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (41 samples, 0.44%)</title><rect x="51.6458%" y="1173" width="0.4396%" height="15" fill="rgb(214,175,50)"/><text x="51.8958%" y="1183.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (41 samples, 0.44%)</title><rect x="51.6458%" y="1157" width="0.4396%" height="15" fill="rgb(213,182,5)"/><text x="51.8958%" y="1167.50"></text></g><g><title>std::panic::catch_unwind (41 samples, 0.44%)</title><rect x="51.6458%" y="1141" width="0.4396%" height="15" fill="rgb(209,199,19)"/><text x="51.8958%" y="1151.50"></text></g><g><title>std::panicking::try (41 samples, 0.44%)</title><rect x="51.6458%" y="1125" width="0.4396%" height="15" fill="rgb(236,224,42)"/><text x="51.8958%" y="1135.50"></text></g><g><title>std::panicking::try::do_call (41 samples, 0.44%)</title><rect x="51.6458%" y="1109" width="0.4396%" height="15" fill="rgb(246,226,29)"/><text x="51.8958%" y="1119.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (41 samples, 0.44%)</title><rect x="51.6458%" y="1093" width="0.4396%" height="15" fill="rgb(227,223,11)"/><text x="51.8958%" y="1103.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (41 samples, 0.44%)</title><rect x="51.6458%" y="1077" width="0.4396%" height="15" fill="rgb(219,7,51)"/><text x="51.8958%" y="1087.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (41 samples, 0.44%)</title><rect x="51.6458%" y="1061" width="0.4396%" height="15" fill="rgb(245,167,10)"/><text x="51.8958%" y="1071.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (41 samples, 0.44%)</title><rect x="51.6458%" y="1045" width="0.4396%" height="15" fill="rgb(237,224,16)"/><text x="51.8958%" y="1055.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (41 samples, 0.44%)</title><rect x="51.6458%" y="1029" width="0.4396%" height="15" fill="rgb(226,132,13)"/><text x="51.8958%" y="1039.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (41 samples, 0.44%)</title><rect x="51.6458%" y="1013" width="0.4396%" height="15" fill="rgb(214,140,3)"/><text x="51.8958%" y="1023.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (41 samples, 0.44%)</title><rect x="51.6458%" y="997" width="0.4396%" height="15" fill="rgb(221,177,4)"/><text x="51.8958%" y="1007.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (41 samples, 0.44%)</title><rect x="51.6458%" y="981" width="0.4396%" height="15" fill="rgb(238,139,3)"/><text x="51.8958%" y="991.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (41 samples, 0.44%)</title><rect x="51.6458%" y="965" width="0.4396%" height="15" fill="rgb(216,17,39)"/><text x="51.8958%" y="975.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (41 samples, 0.44%)</title><rect x="51.6458%" y="949" width="0.4396%" height="15" fill="rgb(238,120,9)"/><text x="51.8958%" y="959.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (41 samples, 0.44%)</title><rect x="51.6458%" y="933" width="0.4396%" height="15" fill="rgb(244,92,53)"/><text x="51.8958%" y="943.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (41 samples, 0.44%)</title><rect x="51.6458%" y="917" width="0.4396%" height="15" fill="rgb(224,148,33)"/><text x="51.8958%" y="927.50"></text></g><g><title>tokio::coop::budget (41 samples, 0.44%)</title><rect x="51.6458%" y="901" width="0.4396%" height="15" fill="rgb(243,6,36)"/><text x="51.8958%" y="911.50"></text></g><g><title>tokio::coop::with_budget (41 samples, 0.44%)</title><rect x="51.6458%" y="885" width="0.4396%" height="15" fill="rgb(230,102,11)"/><text x="51.8958%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (41 samples, 0.44%)</title><rect x="51.6458%" y="869" width="0.4396%" height="15" fill="rgb(234,148,36)"/><text x="51.8958%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (41 samples, 0.44%)</title><rect x="51.6458%" y="853" width="0.4396%" height="15" fill="rgb(251,153,25)"/><text x="51.8958%" y="863.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (41 samples, 0.44%)</title><rect x="51.6458%" y="837" width="0.4396%" height="15" fill="rgb(215,129,8)"/><text x="51.8958%" y="847.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (41 samples, 0.44%)</title><rect x="51.6458%" y="821" width="0.4396%" height="15" fill="rgb(224,128,35)"/><text x="51.8958%" y="831.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (41 samples, 0.44%)</title><rect x="51.6458%" y="805" width="0.4396%" height="15" fill="rgb(237,56,52)"/><text x="51.8958%" y="815.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (41 samples, 0.44%)</title><rect x="51.6458%" y="789" width="0.4396%" height="15" fill="rgb(234,213,19)"/><text x="51.8958%" y="799.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (41 samples, 0.44%)</title><rect x="51.6458%" y="773" width="0.4396%" height="15" fill="rgb(252,82,23)"/><text x="51.8958%" y="783.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (41 samples, 0.44%)</title><rect x="51.6458%" y="757" width="0.4396%" height="15" fill="rgb(254,201,21)"/><text x="51.8958%" y="767.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (41 samples, 0.44%)</title><rect x="51.6458%" y="741" width="0.4396%" height="15" fill="rgb(250,186,11)"/><text x="51.8958%" y="751.50"></text></g><g><title>std::panic::catch_unwind (41 samples, 0.44%)</title><rect x="51.6458%" y="725" width="0.4396%" height="15" fill="rgb(211,174,5)"/><text x="51.8958%" y="735.50"></text></g><g><title>std::panicking::try (41 samples, 0.44%)</title><rect x="51.6458%" y="709" width="0.4396%" height="15" fill="rgb(214,121,10)"/><text x="51.8958%" y="719.50"></text></g><g><title>std::panicking::try::do_call (41 samples, 0.44%)</title><rect x="51.6458%" y="693" width="0.4396%" height="15" fill="rgb(241,66,2)"/><text x="51.8958%" y="703.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (41 samples, 0.44%)</title><rect x="51.6458%" y="677" width="0.4396%" height="15" fill="rgb(220,167,19)"/><text x="51.8958%" y="687.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (41 samples, 0.44%)</title><rect x="51.6458%" y="661" width="0.4396%" height="15" fill="rgb(231,54,50)"/><text x="51.8958%" y="671.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (41 samples, 0.44%)</title><rect x="51.6458%" y="645" width="0.4396%" height="15" fill="rgb(239,217,53)"/><text x="51.8958%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (41 samples, 0.44%)</title><rect x="51.6458%" y="629" width="0.4396%" height="15" fill="rgb(248,8,0)"/><text x="51.8958%" y="639.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation::{{closure}} (41 samples, 0.44%)</title><rect x="51.6458%" y="613" width="0.4396%" height="15" fill="rgb(229,118,37)"/><text x="51.8958%" y="623.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_send::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Send&gt;::evaluate (41 samples, 0.44%)</title><rect x="51.6458%" y="597" width="0.4396%" height="15" fill="rgb(253,223,43)"/><text x="51.8958%" y="607.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute (41 samples, 0.44%)</title><rect x="51.6458%" y="581" width="0.4396%" height="15" fill="rgb(211,77,36)"/><text x="51.8958%" y="591.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute_no_sort (41 samples, 0.44%)</title><rect x="51.6458%" y="565" width="0.4396%" height="15" fill="rgb(219,3,53)"/><text x="51.8958%" y="575.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::substitute_expressions_in_par (41 samples, 0.44%)</title><rect x="51.6458%" y="549" width="0.4396%" height="15" fill="rgb(244,45,42)"/><text x="51.8958%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;model::rho_types::Expr&gt;&gt; (4 samples, 0.04%)</title><rect x="52.0425%" y="533" width="0.0429%" height="15" fill="rgb(225,95,27)"/><text x="52.2925%" y="543.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="52.0425%" y="517" width="0.0429%" height="15" fill="rgb(207,74,8)"/><text x="52.2925%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;model::rho_types::Expr,alloc::alloc::Global&gt;&gt; (3 samples, 0.03%)</title><rect x="52.0532%" y="501" width="0.0322%" height="15" fill="rgb(243,63,36)"/><text x="52.3032%" y="511.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="52.0532%" y="485" width="0.0322%" height="15" fill="rgb(211,180,12)"/><text x="52.3032%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (3 samples, 0.03%)</title><rect x="52.0532%" y="469" width="0.0322%" height="15" fill="rgb(254,166,49)"/><text x="52.3032%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="52.0532%" y="453" width="0.0322%" height="15" fill="rgb(205,19,0)"/><text x="52.3032%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.03%)</title><rect x="52.0532%" y="437" width="0.0322%" height="15" fill="rgb(224,172,32)"/><text x="52.3032%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.03%)</title><rect x="52.0532%" y="421" width="0.0322%" height="15" fill="rgb(254,136,30)"/><text x="52.3032%" y="431.50"></text></g><g><title>_rjem_sdallocx (3 samples, 0.03%)</title><rect x="52.0532%" y="405" width="0.0322%" height="15" fill="rgb(246,19,35)"/><text x="52.3032%" y="415.50"></text></g><g><title>isfree (2 samples, 0.02%)</title><rect x="52.0639%" y="389" width="0.0214%" height="15" fill="rgb(219,24,36)"/><text x="52.3139%" y="399.50"></text></g><g><title>isdalloct (2 samples, 0.02%)</title><rect x="52.0639%" y="373" width="0.0214%" height="15" fill="rgb(251,55,1)"/><text x="52.3139%" y="383.50"></text></g><g><title>arena_sdalloc (2 samples, 0.02%)</title><rect x="52.0639%" y="357" width="0.0214%" height="15" fill="rgb(218,117,39)"/><text x="52.3139%" y="367.50"></text></g><g><title>tcache_dalloc_small (2 samples, 0.02%)</title><rect x="52.0639%" y="341" width="0.0214%" height="15" fill="rgb(248,169,11)"/><text x="52.3139%" y="351.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="52.0853%" y="1269" width="0.0107%" height="15" fill="rgb(244,40,44)"/><text x="52.3353%" y="1279.50"></text></g><g><title>syscall (2 samples, 0.02%)</title><rect x="52.0961%" y="1269" width="0.0214%" height="15" fill="rgb(234,62,37)"/><text x="52.3461%" y="1279.50"></text></g><g><title>tokio::runtime::queue::Local&lt;T&gt;::push_back (1 samples, 0.01%)</title><rect x="52.1175%" y="789" width="0.0107%" height="15" fill="rgb(207,117,42)"/><text x="52.3675%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (6 samples, 0.06%)</title><rect x="52.1282%" y="757" width="0.0643%" height="15" fill="rgb(213,43,2)"/><text x="52.3782%" y="767.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="52.1926%" y="757" width="0.0107%" height="15" fill="rgb(244,202,51)"/><text x="52.4426%" y="767.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.01%)</title><rect x="52.1926%" y="741" width="0.0107%" height="15" fill="rgb(253,174,46)"/><text x="52.4426%" y="751.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.01%)</title><rect x="52.1926%" y="725" width="0.0107%" height="15" fill="rgb(251,23,1)"/><text x="52.4426%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.01%)</title><rect x="52.1926%" y="709" width="0.0107%" height="15" fill="rgb(253,26,1)"/><text x="52.4426%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="52.1926%" y="693" width="0.0107%" height="15" fill="rgb(216,89,31)"/><text x="52.4426%" y="703.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (19 samples, 0.20%)</title><rect x="52.1175%" y="1269" width="0.2037%" height="15" fill="rgb(209,109,5)"/><text x="52.3675%" y="1279.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (19 samples, 0.20%)</title><rect x="52.1175%" y="1253" width="0.2037%" height="15" fill="rgb(229,63,13)"/><text x="52.3675%" y="1263.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (19 samples, 0.20%)</title><rect x="52.1175%" y="1237" width="0.2037%" height="15" fill="rgb(238,137,54)"/><text x="52.3675%" y="1247.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (19 samples, 0.20%)</title><rect x="52.1175%" y="1221" width="0.2037%" height="15" fill="rgb(228,1,9)"/><text x="52.3675%" y="1231.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (19 samples, 0.20%)</title><rect x="52.1175%" y="1205" width="0.2037%" height="15" fill="rgb(249,120,48)"/><text x="52.3675%" y="1215.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (19 samples, 0.20%)</title><rect x="52.1175%" y="1189" width="0.2037%" height="15" fill="rgb(209,72,36)"/><text x="52.3675%" y="1199.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (19 samples, 0.20%)</title><rect x="52.1175%" y="1173" width="0.2037%" height="15" fill="rgb(247,98,49)"/><text x="52.3675%" y="1183.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (19 samples, 0.20%)</title><rect x="52.1175%" y="1157" width="0.2037%" height="15" fill="rgb(233,75,36)"/><text x="52.3675%" y="1167.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (19 samples, 0.20%)</title><rect x="52.1175%" y="1141" width="0.2037%" height="15" fill="rgb(225,14,24)"/><text x="52.3675%" y="1151.50"></text></g><g><title>tokio::coop::budget (19 samples, 0.20%)</title><rect x="52.1175%" y="1125" width="0.2037%" height="15" fill="rgb(237,193,20)"/><text x="52.3675%" y="1135.50"></text></g><g><title>tokio::coop::with_budget (19 samples, 0.20%)</title><rect x="52.1175%" y="1109" width="0.2037%" height="15" fill="rgb(239,122,19)"/><text x="52.3675%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (19 samples, 0.20%)</title><rect x="52.1175%" y="1093" width="0.2037%" height="15" fill="rgb(231,220,10)"/><text x="52.3675%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (19 samples, 0.20%)</title><rect x="52.1175%" y="1077" width="0.2037%" height="15" fill="rgb(220,66,15)"/><text x="52.3675%" y="1087.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (19 samples, 0.20%)</title><rect x="52.1175%" y="1061" width="0.2037%" height="15" fill="rgb(215,171,52)"/><text x="52.3675%" y="1071.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (19 samples, 0.20%)</title><rect x="52.1175%" y="1045" width="0.2037%" height="15" fill="rgb(241,169,50)"/><text x="52.3675%" y="1055.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (19 samples, 0.20%)</title><rect x="52.1175%" y="1029" width="0.2037%" height="15" fill="rgb(236,189,0)"/><text x="52.3675%" y="1039.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (19 samples, 0.20%)</title><rect x="52.1175%" y="1013" width="0.2037%" height="15" fill="rgb(217,147,20)"/><text x="52.3675%" y="1023.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (19 samples, 0.20%)</title><rect x="52.1175%" y="997" width="0.2037%" height="15" fill="rgb(206,188,39)"/><text x="52.3675%" y="1007.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (19 samples, 0.20%)</title><rect x="52.1175%" y="981" width="0.2037%" height="15" fill="rgb(227,118,25)"/><text x="52.3675%" y="991.50"></text></g><g><title>tokio::runtime::task::harness::transition_to_complete (19 samples, 0.20%)</title><rect x="52.1175%" y="965" width="0.2037%" height="15" fill="rgb(248,171,40)"/><text x="52.3675%" y="975.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (19 samples, 0.20%)</title><rect x="52.1175%" y="949" width="0.2037%" height="15" fill="rgb(251,90,54)"/><text x="52.3675%" y="959.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_ref (19 samples, 0.20%)</title><rect x="52.1175%" y="933" width="0.2037%" height="15" fill="rgb(234,11,46)"/><text x="52.3675%" y="943.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::schedule (19 samples, 0.20%)</title><rect x="52.1175%" y="917" width="0.2037%" height="15" fill="rgb(229,134,13)"/><text x="52.3675%" y="927.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (19 samples, 0.20%)</title><rect x="52.1175%" y="901" width="0.2037%" height="15" fill="rgb(223,129,3)"/><text x="52.3675%" y="911.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::schedule::{{closure}} (19 samples, 0.20%)</title><rect x="52.1175%" y="885" width="0.2037%" height="15" fill="rgb(221,124,13)"/><text x="52.3675%" y="895.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::schedule (19 samples, 0.20%)</title><rect x="52.1175%" y="869" width="0.2037%" height="15" fill="rgb(234,3,18)"/><text x="52.3675%" y="879.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (19 samples, 0.20%)</title><rect x="52.1175%" y="853" width="0.2037%" height="15" fill="rgb(249,199,20)"/><text x="52.3675%" y="863.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (19 samples, 0.20%)</title><rect x="52.1175%" y="837" width="0.2037%" height="15" fill="rgb(224,134,6)"/><text x="52.3675%" y="847.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (19 samples, 0.20%)</title><rect x="52.1175%" y="821" width="0.2037%" height="15" fill="rgb(254,83,26)"/><text x="52.3675%" y="831.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule_local (19 samples, 0.20%)</title><rect x="52.1175%" y="805" width="0.2037%" height="15" fill="rgb(217,88,9)"/><text x="52.3675%" y="815.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (18 samples, 0.19%)</title><rect x="52.1282%" y="789" width="0.1930%" height="15" fill="rgb(225,73,2)"/><text x="52.3782%" y="799.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::worker_to_notify (18 samples, 0.19%)</title><rect x="52.1282%" y="773" width="0.1930%" height="15" fill="rgb(226,44,39)"/><text x="52.3782%" y="783.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::notify_should_wakeup (11 samples, 0.12%)</title><rect x="52.2033%" y="757" width="0.1179%" height="15" fill="rgb(228,53,17)"/><text x="52.4533%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (9 samples, 0.10%)</title><rect x="52.2247%" y="741" width="0.0965%" height="15" fill="rgb(212,27,27)"/><text x="52.4747%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_add (9 samples, 0.10%)</title><rect x="52.2247%" y="725" width="0.0965%" height="15" fill="rgb(241,50,6)"/><text x="52.4747%" y="735.50"></text></g><g><title>parking_lot_core::parking_lot::hash (1 samples, 0.01%)</title><rect x="52.3212%" y="805" width="0.0107%" height="15" fill="rgb(225,28,51)"/><text x="52.5712%" y="815.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="52.3212%" y="789" width="0.0107%" height="15" fill="rgb(215,33,16)"/><text x="52.5712%" y="799.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (6 samples, 0.06%)</title><rect x="52.3212%" y="1269" width="0.0643%" height="15" fill="rgb(243,40,39)"/><text x="52.5712%" y="1279.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (6 samples, 0.06%)</title><rect x="52.3212%" y="1253" width="0.0643%" height="15" fill="rgb(225,11,42)"/><text x="52.5712%" y="1263.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (6 samples, 0.06%)</title><rect x="52.3212%" y="1237" width="0.0643%" height="15" fill="rgb(241,220,38)"/><text x="52.5712%" y="1247.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (6 samples, 0.06%)</title><rect x="52.3212%" y="1221" width="0.0643%" height="15" fill="rgb(244,52,35)"/><text x="52.5712%" y="1231.50"></text></g><g><title>tokio::coop::budget (6 samples, 0.06%)</title><rect x="52.3212%" y="1205" width="0.0643%" height="15" fill="rgb(246,42,46)"/><text x="52.5712%" y="1215.50"></text></g><g><title>tokio::coop::with_budget (6 samples, 0.06%)</title><rect x="52.3212%" y="1189" width="0.0643%" height="15" fill="rgb(205,184,13)"/><text x="52.5712%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.06%)</title><rect x="52.3212%" y="1173" width="0.0643%" height="15" fill="rgb(209,48,36)"/><text x="52.5712%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.06%)</title><rect x="52.3212%" y="1157" width="0.0643%" height="15" fill="rgb(244,34,51)"/><text x="52.5712%" y="1167.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (6 samples, 0.06%)</title><rect x="52.3212%" y="1141" width="0.0643%" height="15" fill="rgb(221,107,33)"/><text x="52.5712%" y="1151.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (6 samples, 0.06%)</title><rect x="52.3212%" y="1125" width="0.0643%" height="15" fill="rgb(224,203,12)"/><text x="52.5712%" y="1135.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (6 samples, 0.06%)</title><rect x="52.3212%" y="1109" width="0.0643%" height="15" fill="rgb(230,215,18)"/><text x="52.5712%" y="1119.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (6 samples, 0.06%)</title><rect x="52.3212%" y="1093" width="0.0643%" height="15" fill="rgb(206,185,35)"/><text x="52.5712%" y="1103.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (6 samples, 0.06%)</title><rect x="52.3212%" y="1077" width="0.0643%" height="15" fill="rgb(228,140,34)"/><text x="52.5712%" y="1087.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (6 samples, 0.06%)</title><rect x="52.3212%" y="1061" width="0.0643%" height="15" fill="rgb(208,93,13)"/><text x="52.5712%" y="1071.50"></text></g><g><title>tokio::runtime::task::harness::transition_to_complete (6 samples, 0.06%)</title><rect x="52.3212%" y="1045" width="0.0643%" height="15" fill="rgb(221,193,39)"/><text x="52.5712%" y="1055.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (6 samples, 0.06%)</title><rect x="52.3212%" y="1029" width="0.0643%" height="15" fill="rgb(241,132,34)"/><text x="52.5712%" y="1039.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_ref (6 samples, 0.06%)</title><rect x="52.3212%" y="1013" width="0.0643%" height="15" fill="rgb(221,141,10)"/><text x="52.5712%" y="1023.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::schedule (6 samples, 0.06%)</title><rect x="52.3212%" y="997" width="0.0643%" height="15" fill="rgb(226,90,31)"/><text x="52.5712%" y="1007.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (6 samples, 0.06%)</title><rect x="52.3212%" y="981" width="0.0643%" height="15" fill="rgb(243,75,5)"/><text x="52.5712%" y="991.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::schedule::{{closure}} (6 samples, 0.06%)</title><rect x="52.3212%" y="965" width="0.0643%" height="15" fill="rgb(227,156,21)"/><text x="52.5712%" y="975.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::schedule (6 samples, 0.06%)</title><rect x="52.3212%" y="949" width="0.0643%" height="15" fill="rgb(250,195,8)"/><text x="52.5712%" y="959.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (6 samples, 0.06%)</title><rect x="52.3212%" y="933" width="0.0643%" height="15" fill="rgb(220,134,5)"/><text x="52.5712%" y="943.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (6 samples, 0.06%)</title><rect x="52.3212%" y="917" width="0.0643%" height="15" fill="rgb(246,106,34)"/><text x="52.5712%" y="927.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (6 samples, 0.06%)</title><rect x="52.3212%" y="901" width="0.0643%" height="15" fill="rgb(205,1,4)"/><text x="52.5712%" y="911.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule_local (6 samples, 0.06%)</title><rect x="52.3212%" y="885" width="0.0643%" height="15" fill="rgb(224,151,29)"/><text x="52.5712%" y="895.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (6 samples, 0.06%)</title><rect x="52.3212%" y="869" width="0.0643%" height="15" fill="rgb(251,196,0)"/><text x="52.5712%" y="879.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (6 samples, 0.06%)</title><rect x="52.3212%" y="853" width="0.0643%" height="15" fill="rgb(212,127,0)"/><text x="52.5712%" y="863.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (6 samples, 0.06%)</title><rect x="52.3212%" y="837" width="0.0643%" height="15" fill="rgb(236,71,53)"/><text x="52.5712%" y="847.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (6 samples, 0.06%)</title><rect x="52.3212%" y="821" width="0.0643%" height="15" fill="rgb(227,99,0)"/><text x="52.5712%" y="831.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (5 samples, 0.05%)</title><rect x="52.3319%" y="805" width="0.0536%" height="15" fill="rgb(239,89,21)"/><text x="52.5819%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (4 samples, 0.04%)</title><rect x="52.3427%" y="789" width="0.0429%" height="15" fill="rgb(243,122,19)"/><text x="52.5927%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (4 samples, 0.04%)</title><rect x="52.3427%" y="773" width="0.0429%" height="15" fill="rgb(229,192,45)"/><text x="52.5927%" y="783.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (3 samples, 0.03%)</title><rect x="52.3855%" y="1269" width="0.0322%" height="15" fill="rgb(235,165,35)"/><text x="52.6355%" y="1279.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::store_output (20 samples, 0.21%)</title><rect x="52.4284%" y="773" width="0.2144%" height="15" fill="rgb(253,202,0)"/><text x="52.6784%" y="783.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::set_stage (20 samples, 0.21%)</title><rect x="52.4284%" y="757" width="0.2144%" height="15" fill="rgb(235,51,20)"/><text x="52.6784%" y="767.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (20 samples, 0.21%)</title><rect x="52.4284%" y="741" width="0.2144%" height="15" fill="rgb(218,95,46)"/><text x="52.6784%" y="751.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::set_stage::{{closure}} (20 samples, 0.21%)</title><rect x="52.4284%" y="725" width="0.2144%" height="15" fill="rgb(212,81,10)"/><text x="52.6784%" y="735.50"></text></g><g><title>[libc-2.31.so] (20 samples, 0.21%)</title><rect x="52.4284%" y="709" width="0.2144%" height="15" fill="rgb(240,59,0)"/><text x="52.6784%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="52.6429%" y="677" width="0.0107%" height="15" fill="rgb(212,191,42)"/><text x="52.8929%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="52.6429%" y="661" width="0.0107%" height="15" fill="rgb(233,140,3)"/><text x="52.8929%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::CURRENT::FOO::__getit (1 samples, 0.01%)</title><rect x="52.6429%" y="645" width="0.0107%" height="15" fill="rgb(215,69,23)"/><text x="52.8929%" y="655.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="52.6429%" y="629" width="0.0107%" height="15" fill="rgb(240,202,20)"/><text x="52.8929%" y="639.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="52.6429%" y="613" width="0.0107%" height="15" fill="rgb(209,146,50)"/><text x="52.8929%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="52.6429%" y="597" width="0.0107%" height="15" fill="rgb(253,102,54)"/><text x="52.8929%" y="607.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Worker::eq (3 samples, 0.03%)</title><rect x="52.6536%" y="661" width="0.0322%" height="15" fill="rgb(250,173,47)"/><text x="52.9036%" y="671.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::ne (1 samples, 0.01%)</title><rect x="52.6858%" y="645" width="0.0107%" height="15" fill="rgb(232,142,7)"/><text x="52.9358%" y="655.50"></text></g><g><title>tokio::runtime::task::harness::SchedulerView&lt;S&gt;::transition_to_terminal (6 samples, 0.06%)</title><rect x="52.6429%" y="773" width="0.0643%" height="15" fill="rgb(230,157,47)"/><text x="52.8929%" y="783.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::release (6 samples, 0.06%)</title><rect x="52.6429%" y="757" width="0.0643%" height="15" fill="rgb(214,177,35)"/><text x="52.8929%" y="767.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (6 samples, 0.06%)</title><rect x="52.6429%" y="741" width="0.0643%" height="15" fill="rgb(234,119,46)"/><text x="52.8929%" y="751.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::release::{{closure}} (6 samples, 0.06%)</title><rect x="52.6429%" y="725" width="0.0643%" height="15" fill="rgb(241,180,50)"/><text x="52.8929%" y="735.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::release (6 samples, 0.06%)</title><rect x="52.6429%" y="709" width="0.0643%" height="15" fill="rgb(221,54,25)"/><text x="52.8929%" y="719.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (6 samples, 0.06%)</title><rect x="52.6429%" y="693" width="0.0643%" height="15" fill="rgb(209,157,44)"/><text x="52.8929%" y="703.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::release::{{closure}} (5 samples, 0.05%)</title><rect x="52.6536%" y="677" width="0.0536%" height="15" fill="rgb(246,115,41)"/><text x="52.9036%" y="687.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (2 samples, 0.02%)</title><rect x="52.6858%" y="661" width="0.0214%" height="15" fill="rgb(229,86,1)"/><text x="52.9358%" y="671.50"></text></g><g><title>tokio::util::linked_list::Pointers&lt;T&gt;::get_next (1 samples, 0.01%)</title><rect x="52.6965%" y="645" width="0.0107%" height="15" fill="rgb(240,108,53)"/><text x="52.9465%" y="655.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="52.6965%" y="629" width="0.0107%" height="15" fill="rgb(227,134,2)"/><text x="52.9465%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="52.6965%" y="613" width="0.0107%" height="15" fill="rgb(213,129,25)"/><text x="52.9465%" y="623.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::has_join_waker (2 samples, 0.02%)</title><rect x="52.7072%" y="757" width="0.0214%" height="15" fill="rgb(226,35,21)"/><text x="52.9572%" y="767.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_complete (2 samples, 0.02%)</title><rect x="52.7286%" y="757" width="0.0214%" height="15" fill="rgb(208,129,26)"/><text x="52.9786%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_xor (2 samples, 0.02%)</title><rect x="52.7286%" y="741" width="0.0214%" height="15" fill="rgb(224,83,6)"/><text x="52.9786%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_xor (2 samples, 0.02%)</title><rect x="52.7286%" y="725" width="0.0214%" height="15" fill="rgb(227,52,39)"/><text x="52.9786%" y="735.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (32 samples, 0.34%)</title><rect x="52.4177%" y="1269" width="0.3431%" height="15" fill="rgb(241,30,17)"/><text x="52.6677%" y="1279.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (32 samples, 0.34%)</title><rect x="52.4177%" y="1253" width="0.3431%" height="15" fill="rgb(246,186,42)"/><text x="52.6677%" y="1263.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (32 samples, 0.34%)</title><rect x="52.4177%" y="1237" width="0.3431%" height="15" fill="rgb(221,169,15)"/><text x="52.6677%" y="1247.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (32 samples, 0.34%)</title><rect x="52.4177%" y="1221" width="0.3431%" height="15" fill="rgb(235,108,21)"/><text x="52.6677%" y="1231.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (32 samples, 0.34%)</title><rect x="52.4177%" y="1205" width="0.3431%" height="15" fill="rgb(219,148,30)"/><text x="52.6677%" y="1215.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (32 samples, 0.34%)</title><rect x="52.4177%" y="1189" width="0.3431%" height="15" fill="rgb(220,109,5)"/><text x="52.6677%" y="1199.50"></text></g><g><title>std::panic::catch_unwind (32 samples, 0.34%)</title><rect x="52.4177%" y="1173" width="0.3431%" height="15" fill="rgb(213,203,48)"/><text x="52.6677%" y="1183.50"></text></g><g><title>std::panicking::try (32 samples, 0.34%)</title><rect x="52.4177%" y="1157" width="0.3431%" height="15" fill="rgb(244,71,33)"/><text x="52.6677%" y="1167.50"></text></g><g><title>std::panicking::try::do_call (32 samples, 0.34%)</title><rect x="52.4177%" y="1141" width="0.3431%" height="15" fill="rgb(209,23,2)"/><text x="52.6677%" y="1151.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (32 samples, 0.34%)</title><rect x="52.4177%" y="1125" width="0.3431%" height="15" fill="rgb(219,97,7)"/><text x="52.6677%" y="1135.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (32 samples, 0.34%)</title><rect x="52.4177%" y="1109" width="0.3431%" height="15" fill="rgb(216,161,23)"/><text x="52.6677%" y="1119.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (32 samples, 0.34%)</title><rect x="52.4177%" y="1093" width="0.3431%" height="15" fill="rgb(207,45,42)"/><text x="52.6677%" y="1103.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (32 samples, 0.34%)</title><rect x="52.4177%" y="1077" width="0.3431%" height="15" fill="rgb(241,61,4)"/><text x="52.6677%" y="1087.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (32 samples, 0.34%)</title><rect x="52.4177%" y="1061" width="0.3431%" height="15" fill="rgb(236,170,1)"/><text x="52.6677%" y="1071.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (32 samples, 0.34%)</title><rect x="52.4177%" y="1045" width="0.3431%" height="15" fill="rgb(239,72,5)"/><text x="52.6677%" y="1055.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (32 samples, 0.34%)</title><rect x="52.4177%" y="1029" width="0.3431%" height="15" fill="rgb(214,13,50)"/><text x="52.6677%" y="1039.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (32 samples, 0.34%)</title><rect x="52.4177%" y="1013" width="0.3431%" height="15" fill="rgb(224,88,9)"/><text x="52.6677%" y="1023.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (32 samples, 0.34%)</title><rect x="52.4177%" y="997" width="0.3431%" height="15" fill="rgb(238,192,34)"/><text x="52.6677%" y="1007.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (32 samples, 0.34%)</title><rect x="52.4177%" y="981" width="0.3431%" height="15" fill="rgb(217,203,50)"/><text x="52.6677%" y="991.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (32 samples, 0.34%)</title><rect x="52.4177%" y="965" width="0.3431%" height="15" fill="rgb(241,123,32)"/><text x="52.6677%" y="975.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (32 samples, 0.34%)</title><rect x="52.4177%" y="949" width="0.3431%" height="15" fill="rgb(248,151,39)"/><text x="52.6677%" y="959.50"></text></g><g><title>tokio::coop::budget (32 samples, 0.34%)</title><rect x="52.4177%" y="933" width="0.3431%" height="15" fill="rgb(208,89,6)"/><text x="52.6677%" y="943.50"></text></g><g><title>tokio::coop::with_budget (32 samples, 0.34%)</title><rect x="52.4177%" y="917" width="0.3431%" height="15" fill="rgb(254,43,26)"/><text x="52.6677%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (32 samples, 0.34%)</title><rect x="52.4177%" y="901" width="0.3431%" height="15" fill="rgb(216,158,13)"/><text x="52.6677%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (32 samples, 0.34%)</title><rect x="52.4177%" y="885" width="0.3431%" height="15" fill="rgb(212,47,37)"/><text x="52.6677%" y="895.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (32 samples, 0.34%)</title><rect x="52.4177%" y="869" width="0.3431%" height="15" fill="rgb(254,16,10)"/><text x="52.6677%" y="879.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (32 samples, 0.34%)</title><rect x="52.4177%" y="853" width="0.3431%" height="15" fill="rgb(223,228,16)"/><text x="52.6677%" y="863.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (32 samples, 0.34%)</title><rect x="52.4177%" y="837" width="0.3431%" height="15" fill="rgb(249,108,50)"/><text x="52.6677%" y="847.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (32 samples, 0.34%)</title><rect x="52.4177%" y="821" width="0.3431%" height="15" fill="rgb(208,220,5)"/><text x="52.6677%" y="831.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (32 samples, 0.34%)</title><rect x="52.4177%" y="805" width="0.3431%" height="15" fill="rgb(217,89,48)"/><text x="52.6677%" y="815.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (32 samples, 0.34%)</title><rect x="52.4177%" y="789" width="0.3431%" height="15" fill="rgb(212,113,41)"/><text x="52.6677%" y="799.50"></text></g><g><title>tokio::runtime::task::harness::transition_to_complete (5 samples, 0.05%)</title><rect x="52.7072%" y="773" width="0.0536%" height="15" fill="rgb(231,127,5)"/><text x="52.9572%" y="783.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (1 samples, 0.01%)</title><rect x="52.7501%" y="757" width="0.0107%" height="15" fill="rgb(217,141,17)"/><text x="53.0001%" y="767.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_ref (1 samples, 0.01%)</title><rect x="52.7501%" y="741" width="0.0107%" height="15" fill="rgb(245,125,54)"/><text x="53.0001%" y="751.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified (1 samples, 0.01%)</title><rect x="52.7501%" y="725" width="0.0107%" height="15" fill="rgb(248,125,3)"/><text x="53.0001%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.01%)</title><rect x="52.7501%" y="709" width="0.0107%" height="15" fill="rgb(236,119,51)"/><text x="53.0001%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.01%)</title><rect x="52.7501%" y="693" width="0.0107%" height="15" fill="rgb(239,99,8)"/><text x="53.0001%" y="703.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::steal_into (4 samples, 0.04%)</title><rect x="52.7608%" y="1269" width="0.0429%" height="15" fill="rgb(224,228,4)"/><text x="53.0108%" y="1279.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (1 samples, 0.01%)</title><rect x="52.8037%" y="1269" width="0.0107%" height="15" fill="rgb(220,131,45)"/><text x="53.0537%" y="1279.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (1 samples, 0.01%)</title><rect x="52.8144%" y="1269" width="0.0107%" height="15" fill="rgb(215,62,5)"/><text x="53.0644%" y="1279.50"></text></g><g><title>core::mem::drop (1 samples, 0.01%)</title><rect x="52.8144%" y="1253" width="0.0107%" height="15" fill="rgb(253,12,24)"/><text x="53.0644%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Send&gt;::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="52.8144%" y="1237" width="0.0107%" height="15" fill="rgb(248,120,50)"/><text x="53.0644%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Send&gt;::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="52.8144%" y="1221" width="0.0107%" height="15" fill="rgb(245,194,10)"/><text x="53.0644%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Core&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Send&gt;::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="52.8144%" y="1205" width="0.0107%" height="15" fill="rgb(241,149,38)"/><text x="53.0644%" y="1215.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::store_output (29 samples, 0.31%)</title><rect x="52.8895%" y="821" width="0.3109%" height="15" fill="rgb(219,215,7)"/><text x="53.1395%" y="831.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::set_stage (29 samples, 0.31%)</title><rect x="52.8895%" y="805" width="0.3109%" height="15" fill="rgb(208,120,31)"/><text x="53.1395%" y="815.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (29 samples, 0.31%)</title><rect x="52.8895%" y="789" width="0.3109%" height="15" fill="rgb(244,30,8)"/><text x="53.1395%" y="799.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::set_stage::{{closure}} (29 samples, 0.31%)</title><rect x="52.8895%" y="773" width="0.3109%" height="15" fill="rgb(238,35,44)"/><text x="53.1395%" y="783.50"></text></g><g><title>[libc-2.31.so] (29 samples, 0.31%)</title><rect x="52.8895%" y="757" width="0.3109%" height="15" fill="rgb(243,218,37)"/><text x="53.1395%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="53.1897%" y="741" width="0.0107%" height="15" fill="rgb(218,169,10)"/><text x="53.4397%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="53.1897%" y="725" width="0.0107%" height="15" fill="rgb(221,144,10)"/><text x="53.4397%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="53.1897%" y="709" width="0.0107%" height="15" fill="rgb(226,41,38)"/><text x="53.4397%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="53.1897%" y="693" width="0.0107%" height="15" fill="rgb(228,3,1)"/><text x="53.4397%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="53.1897%" y="677" width="0.0107%" height="15" fill="rgb(209,129,12)"/><text x="53.4397%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="53.1897%" y="661" width="0.0107%" height="15" fill="rgb(213,136,33)"/><text x="53.4397%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="53.1897%" y="645" width="0.0107%" height="15" fill="rgb(209,181,29)"/><text x="53.4397%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="53.1897%" y="629" width="0.0107%" height="15" fill="rgb(234,173,18)"/><text x="53.4397%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="53.1897%" y="613" width="0.0107%" height="15" fill="rgb(227,73,47)"/><text x="53.4397%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="53.1897%" y="597" width="0.0107%" height="15" fill="rgb(234,9,34)"/><text x="53.4397%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="53.1897%" y="581" width="0.0107%" height="15" fill="rgb(235,172,15)"/><text x="53.4397%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="53.1897%" y="565" width="0.0107%" height="15" fill="rgb(245,61,2)"/><text x="53.4397%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="53.1897%" y="549" width="0.0107%" height="15" fill="rgb(238,39,47)"/><text x="53.4397%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="53.1897%" y="533" width="0.0107%" height="15" fill="rgb(234,37,24)"/><text x="53.4397%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="53.1897%" y="517" width="0.0107%" height="15" fill="rgb(248,223,24)"/><text x="53.4397%" y="527.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="53.2004%" y="741" width="0.0107%" height="15" fill="rgb(223,12,15)"/><text x="53.4504%" y="751.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::release::{{closure}} (1 samples, 0.01%)</title><rect x="53.2004%" y="725" width="0.0107%" height="15" fill="rgb(249,6,3)"/><text x="53.4504%" y="735.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Worker::eq (1 samples, 0.01%)</title><rect x="53.2004%" y="709" width="0.0107%" height="15" fill="rgb(237,105,33)"/><text x="53.4504%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::queue::Pointers&gt;&gt; (4 samples, 0.04%)</title><rect x="53.2111%" y="725" width="0.0429%" height="15" fill="rgb(252,208,35)"/><text x="53.4611%" y="735.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="53.2111%" y="709" width="0.0429%" height="15" fill="rgb(215,181,35)"/><text x="53.4611%" y="719.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (4 samples, 0.04%)</title><rect x="53.2111%" y="693" width="0.0429%" height="15" fill="rgb(246,212,3)"/><text x="53.4611%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (4 samples, 0.04%)</title><rect x="53.2111%" y="677" width="0.0429%" height="15" fill="rgb(247,156,24)"/><text x="53.4611%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.04%)</title><rect x="53.2111%" y="661" width="0.0429%" height="15" fill="rgb(248,9,31)"/><text x="53.4611%" y="671.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::is_closed (6 samples, 0.06%)</title><rect x="53.2111%" y="741" width="0.0643%" height="15" fill="rgb(234,26,45)"/><text x="53.4611%" y="751.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (2 samples, 0.02%)</title><rect x="53.2540%" y="725" width="0.0214%" height="15" fill="rgb(249,11,32)"/><text x="53.5040%" y="735.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.02%)</title><rect x="53.2540%" y="709" width="0.0214%" height="15" fill="rgb(249,162,33)"/><text x="53.5040%" y="719.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.02%)</title><rect x="53.2540%" y="693" width="0.0214%" height="15" fill="rgb(232,4,32)"/><text x="53.5040%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (2 samples, 0.02%)</title><rect x="53.2540%" y="677" width="0.0214%" height="15" fill="rgb(212,5,45)"/><text x="53.5040%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.02%)</title><rect x="53.2540%" y="661" width="0.0214%" height="15" fill="rgb(227,95,13)"/><text x="53.5040%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::compare_exchange (5 samples, 0.05%)</title><rect x="53.2754%" y="725" width="0.0536%" height="15" fill="rgb(223,205,10)"/><text x="53.5254%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (5 samples, 0.05%)</title><rect x="53.2754%" y="709" width="0.0536%" height="15" fill="rgb(222,178,8)"/><text x="53.5254%" y="719.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::release (15 samples, 0.16%)</title><rect x="53.2004%" y="805" width="0.1608%" height="15" fill="rgb(216,13,22)"/><text x="53.4504%" y="815.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (15 samples, 0.16%)</title><rect x="53.2004%" y="789" width="0.1608%" height="15" fill="rgb(240,167,12)"/><text x="53.4504%" y="799.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::release::{{closure}} (15 samples, 0.16%)</title><rect x="53.2004%" y="773" width="0.1608%" height="15" fill="rgb(235,68,35)"/><text x="53.4504%" y="783.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::release (15 samples, 0.16%)</title><rect x="53.2004%" y="757" width="0.1608%" height="15" fill="rgb(253,40,27)"/><text x="53.4504%" y="767.50"></text></g><g><title>tokio::runtime::task::stack::TransferStack&lt;T&gt;::push (8 samples, 0.09%)</title><rect x="53.2754%" y="741" width="0.0858%" height="15" fill="rgb(214,19,28)"/><text x="53.5254%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (3 samples, 0.03%)</title><rect x="53.3290%" y="725" width="0.0322%" height="15" fill="rgb(210,167,45)"/><text x="53.5790%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.03%)</title><rect x="53.3290%" y="709" width="0.0322%" height="15" fill="rgb(232,97,40)"/><text x="53.5790%" y="719.50"></text></g><g><title>tokio::runtime::task::harness::SchedulerView&lt;S&gt;::transition_to_terminal (17 samples, 0.18%)</title><rect x="53.2004%" y="821" width="0.1823%" height="15" fill="rgb(250,35,23)"/><text x="53.4504%" y="831.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_terminal (2 samples, 0.02%)</title><rect x="53.3612%" y="805" width="0.0214%" height="15" fill="rgb(248,47,53)"/><text x="53.6112%" y="815.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update (2 samples, 0.02%)</title><rect x="53.3612%" y="789" width="0.0214%" height="15" fill="rgb(226,58,50)"/><text x="53.6112%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (2 samples, 0.02%)</title><rect x="53.3612%" y="773" width="0.0214%" height="15" fill="rgb(217,105,26)"/><text x="53.6112%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.02%)</title><rect x="53.3612%" y="757" width="0.0214%" height="15" fill="rgb(208,64,1)"/><text x="53.6112%" y="767.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_complete (3 samples, 0.03%)</title><rect x="53.3827%" y="805" width="0.0322%" height="15" fill="rgb(214,80,1)"/><text x="53.6327%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_xor (3 samples, 0.03%)</title><rect x="53.3827%" y="789" width="0.0322%" height="15" fill="rgb(206,175,26)"/><text x="53.6327%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_xor (3 samples, 0.03%)</title><rect x="53.3827%" y="773" width="0.0322%" height="15" fill="rgb(235,156,37)"/><text x="53.6327%" y="783.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::schedule (1 samples, 0.01%)</title><rect x="53.4148%" y="773" width="0.0107%" height="15" fill="rgb(213,100,9)"/><text x="53.6648%" y="783.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="53.4148%" y="757" width="0.0107%" height="15" fill="rgb(241,15,13)"/><text x="53.6648%" y="767.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::schedule::{{closure}} (1 samples, 0.01%)</title><rect x="53.4148%" y="741" width="0.0107%" height="15" fill="rgb(205,97,43)"/><text x="53.6648%" y="751.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::schedule (1 samples, 0.01%)</title><rect x="53.4148%" y="725" width="0.0107%" height="15" fill="rgb(216,106,32)"/><text x="53.6648%" y="735.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="53.4148%" y="709" width="0.0107%" height="15" fill="rgb(226,200,8)"/><text x="53.6648%" y="719.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (60 samples, 0.64%)</title><rect x="52.8573%" y="837" width="0.6433%" height="15" fill="rgb(244,54,29)"/><text x="53.1073%" y="847.50"></text></g><g><title>tokio::runtime::task::harness::transition_to_complete (11 samples, 0.12%)</title><rect x="53.3827%" y="821" width="0.1179%" height="15" fill="rgb(252,169,12)"/><text x="53.6327%" y="831.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (8 samples, 0.09%)</title><rect x="53.4148%" y="805" width="0.0858%" height="15" fill="rgb(231,199,11)"/><text x="53.6648%" y="815.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_ref (8 samples, 0.09%)</title><rect x="53.4148%" y="789" width="0.0858%" height="15" fill="rgb(233,191,18)"/><text x="53.6648%" y="799.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified (7 samples, 0.08%)</title><rect x="53.4255%" y="773" width="0.0751%" height="15" fill="rgb(215,83,47)"/><text x="53.6755%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (7 samples, 0.08%)</title><rect x="53.4255%" y="757" width="0.0751%" height="15" fill="rgb(251,67,19)"/><text x="53.6755%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_or (7 samples, 0.08%)</title><rect x="53.4255%" y="741" width="0.0751%" height="15" fill="rgb(240,7,20)"/><text x="53.6755%" y="751.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="53.5113%" y="597" width="0.0322%" height="15" fill="rgb(210,150,26)"/><text x="53.7613%" y="607.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (70 samples, 0.75%)</title><rect x="52.8251%" y="1269" width="0.7505%" height="15" fill="rgb(228,75,42)"/><text x="53.0751%" y="1279.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (67 samples, 0.72%)</title><rect x="52.8573%" y="1253" width="0.7183%" height="15" fill="rgb(237,134,48)"/><text x="53.1073%" y="1263.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (67 samples, 0.72%)</title><rect x="52.8573%" y="1237" width="0.7183%" height="15" fill="rgb(205,80,50)"/><text x="53.1073%" y="1247.50"></text></g><g><title>std::panic::catch_unwind (67 samples, 0.72%)</title><rect x="52.8573%" y="1221" width="0.7183%" height="15" fill="rgb(217,74,48)"/><text x="53.1073%" y="1231.50"></text></g><g><title>std::panicking::try (67 samples, 0.72%)</title><rect x="52.8573%" y="1205" width="0.7183%" height="15" fill="rgb(205,82,50)"/><text x="53.1073%" y="1215.50"></text></g><g><title>std::panicking::try::do_call (67 samples, 0.72%)</title><rect x="52.8573%" y="1189" width="0.7183%" height="15" fill="rgb(228,1,33)"/><text x="53.1073%" y="1199.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (67 samples, 0.72%)</title><rect x="52.8573%" y="1173" width="0.7183%" height="15" fill="rgb(214,50,23)"/><text x="53.1073%" y="1183.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (67 samples, 0.72%)</title><rect x="52.8573%" y="1157" width="0.7183%" height="15" fill="rgb(210,62,9)"/><text x="53.1073%" y="1167.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (67 samples, 0.72%)</title><rect x="52.8573%" y="1141" width="0.7183%" height="15" fill="rgb(210,104,37)"/><text x="53.1073%" y="1151.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (67 samples, 0.72%)</title><rect x="52.8573%" y="1125" width="0.7183%" height="15" fill="rgb(232,104,43)"/><text x="53.1073%" y="1135.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (67 samples, 0.72%)</title><rect x="52.8573%" y="1109" width="0.7183%" height="15" fill="rgb(244,52,6)"/><text x="53.1073%" y="1119.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (67 samples, 0.72%)</title><rect x="52.8573%" y="1093" width="0.7183%" height="15" fill="rgb(211,174,52)"/><text x="53.1073%" y="1103.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (67 samples, 0.72%)</title><rect x="52.8573%" y="1077" width="0.7183%" height="15" fill="rgb(229,48,4)"/><text x="53.1073%" y="1087.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (67 samples, 0.72%)</title><rect x="52.8573%" y="1061" width="0.7183%" height="15" fill="rgb(205,155,16)"/><text x="53.1073%" y="1071.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (67 samples, 0.72%)</title><rect x="52.8573%" y="1045" width="0.7183%" height="15" fill="rgb(211,141,53)"/><text x="53.1073%" y="1055.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (67 samples, 0.72%)</title><rect x="52.8573%" y="1029" width="0.7183%" height="15" fill="rgb(240,148,11)"/><text x="53.1073%" y="1039.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (67 samples, 0.72%)</title><rect x="52.8573%" y="1013" width="0.7183%" height="15" fill="rgb(214,45,23)"/><text x="53.1073%" y="1023.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (67 samples, 0.72%)</title><rect x="52.8573%" y="997" width="0.7183%" height="15" fill="rgb(248,74,26)"/><text x="53.1073%" y="1007.50"></text></g><g><title>tokio::coop::budget (67 samples, 0.72%)</title><rect x="52.8573%" y="981" width="0.7183%" height="15" fill="rgb(218,121,16)"/><text x="53.1073%" y="991.50"></text></g><g><title>tokio::coop::with_budget (67 samples, 0.72%)</title><rect x="52.8573%" y="965" width="0.7183%" height="15" fill="rgb(218,10,47)"/><text x="53.1073%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (67 samples, 0.72%)</title><rect x="52.8573%" y="949" width="0.7183%" height="15" fill="rgb(227,99,14)"/><text x="53.1073%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (67 samples, 0.72%)</title><rect x="52.8573%" y="933" width="0.7183%" height="15" fill="rgb(229,83,46)"/><text x="53.1073%" y="943.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (67 samples, 0.72%)</title><rect x="52.8573%" y="917" width="0.7183%" height="15" fill="rgb(228,25,1)"/><text x="53.1073%" y="927.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (67 samples, 0.72%)</title><rect x="52.8573%" y="901" width="0.7183%" height="15" fill="rgb(252,190,15)"/><text x="53.1073%" y="911.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (67 samples, 0.72%)</title><rect x="52.8573%" y="885" width="0.7183%" height="15" fill="rgb(213,103,51)"/><text x="53.1073%" y="895.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (67 samples, 0.72%)</title><rect x="52.8573%" y="869" width="0.7183%" height="15" fill="rgb(220,38,44)"/><text x="53.1073%" y="879.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (67 samples, 0.72%)</title><rect x="52.8573%" y="853" width="0.7183%" height="15" fill="rgb(210,45,26)"/><text x="53.1073%" y="863.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (7 samples, 0.08%)</title><rect x="53.5006%" y="837" width="0.0751%" height="15" fill="rgb(205,95,48)"/><text x="53.7506%" y="847.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (7 samples, 0.08%)</title><rect x="53.5006%" y="821" width="0.0751%" height="15" fill="rgb(225,179,37)"/><text x="53.7506%" y="831.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.08%)</title><rect x="53.5006%" y="805" width="0.0751%" height="15" fill="rgb(230,209,3)"/><text x="53.7506%" y="815.50"></text></g><g><title>std::panicking::try (7 samples, 0.08%)</title><rect x="53.5006%" y="789" width="0.0751%" height="15" fill="rgb(248,12,46)"/><text x="53.7506%" y="799.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.08%)</title><rect x="53.5006%" y="773" width="0.0751%" height="15" fill="rgb(234,18,0)"/><text x="53.7506%" y="783.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7 samples, 0.08%)</title><rect x="53.5006%" y="757" width="0.0751%" height="15" fill="rgb(238,197,14)"/><text x="53.7506%" y="767.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (7 samples, 0.08%)</title><rect x="53.5006%" y="741" width="0.0751%" height="15" fill="rgb(251,162,48)"/><text x="53.7506%" y="751.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (7 samples, 0.08%)</title><rect x="53.5006%" y="725" width="0.0751%" height="15" fill="rgb(237,73,42)"/><text x="53.7506%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.08%)</title><rect x="53.5006%" y="709" width="0.0751%" height="15" fill="rgb(211,108,8)"/><text x="53.7506%" y="719.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation::{{closure}} (7 samples, 0.08%)</title><rect x="53.5006%" y="693" width="0.0751%" height="15" fill="rgb(213,45,22)"/><text x="53.7506%" y="703.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_send::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Send&gt;::evaluate (7 samples, 0.08%)</title><rect x="53.5006%" y="677" width="0.0751%" height="15" fill="rgb(252,154,5)"/><text x="53.7506%" y="687.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute (7 samples, 0.08%)</title><rect x="53.5006%" y="661" width="0.0751%" height="15" fill="rgb(221,79,52)"/><text x="53.7506%" y="671.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute_no_sort (7 samples, 0.08%)</title><rect x="53.5006%" y="645" width="0.0751%" height="15" fill="rgb(229,220,36)"/><text x="53.7506%" y="655.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::substitute_expressions_in_par (7 samples, 0.08%)</title><rect x="53.5006%" y="629" width="0.0751%" height="15" fill="rgb(211,17,16)"/><text x="53.7506%" y="639.50"></text></g><g><title>model::rho_types::Par::append_expr (7 samples, 0.08%)</title><rect x="53.5006%" y="613" width="0.0751%" height="15" fill="rgb(222,55,31)"/><text x="53.7506%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.03%)</title><rect x="53.5435%" y="597" width="0.0322%" height="15" fill="rgb(221,221,31)"/><text x="53.7935%" y="607.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="53.5542%" y="581" width="0.0214%" height="15" fill="rgb(227,168,26)"/><text x="53.8042%" y="591.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="53.5542%" y="565" width="0.0214%" height="15" fill="rgb(224,139,9)"/><text x="53.8042%" y="575.50"></text></g><g><title>tokio::runtime::task::harness::can_read_output (1 samples, 0.01%)</title><rect x="53.5756%" y="1269" width="0.0107%" height="15" fill="rgb(254,172,0)"/><text x="53.8256%" y="1279.50"></text></g><g><title>tokio::runtime::task::state::State::load (1 samples, 0.01%)</title><rect x="53.5756%" y="1253" width="0.0107%" height="15" fill="rgb(235,203,1)"/><text x="53.8256%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="53.5756%" y="1237" width="0.0107%" height="15" fill="rgb(216,205,24)"/><text x="53.8256%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="53.5756%" y="1221" width="0.0107%" height="15" fill="rgb(233,24,6)"/><text x="53.8256%" y="1231.50"></text></g><g><title>[libc-2.31.so] (37 samples, 0.40%)</title><rect x="53.6936%" y="1253" width="0.3967%" height="15" fill="rgb(244,110,9)"/><text x="53.9436%" y="1263.50"></text></g><g><title>[libc-2.31.so] (32 samples, 0.34%)</title><rect x="54.1760%" y="1077" width="0.3431%" height="15" fill="rgb(239,222,42)"/><text x="54.4260%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::oneshot::Receiver&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="54.5191%" y="1077" width="0.0107%" height="15" fill="rgb(218,145,13)"/><text x="54.7691%" y="1087.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="54.5191%" y="1061" width="0.0107%" height="15" fill="rgb(207,69,11)"/><text x="54.7691%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (2 samples, 0.02%)</title><rect x="54.5299%" y="1061" width="0.0214%" height="15" fill="rgb(220,223,22)"/><text x="54.7799%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.02%)</title><rect x="54.5299%" y="1045" width="0.0214%" height="15" fill="rgb(245,102,5)"/><text x="54.7799%" y="1055.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::push (17 samples, 0.18%)</title><rect x="54.5299%" y="1077" width="0.1823%" height="15" fill="rgb(211,148,2)"/><text x="54.7799%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (15 samples, 0.16%)</title><rect x="54.5513%" y="1061" width="0.1608%" height="15" fill="rgb(241,13,44)"/><text x="54.8013%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_load (15 samples, 0.16%)</title><rect x="54.5513%" y="1045" width="0.1608%" height="15" fill="rgb(219,137,21)"/><text x="54.8013%" y="1055.50"></text></g><g><title>core::mem::drop (1 samples, 0.01%)</title><rect x="54.7228%" y="1061" width="0.0107%" height="15" fill="rgb(242,206,5)"/><text x="54.9728%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::util::linked_list::LinkedList&lt;tokio::sync::notify::Waiter,tokio::sync::notify::Waiter&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="54.7228%" y="1045" width="0.0107%" height="15" fill="rgb(217,114,22)"/><text x="54.9728%" y="1055.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="54.7228%" y="1029" width="0.0107%" height="15" fill="rgb(253,206,42)"/><text x="54.9728%" y="1039.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.01%)</title><rect x="54.7228%" y="1013" width="0.0107%" height="15" fill="rgb(236,102,18)"/><text x="54.9728%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.01%)</title><rect x="54.7228%" y="997" width="0.0107%" height="15" fill="rgb(208,59,49)"/><text x="54.9728%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="54.7228%" y="981" width="0.0107%" height="15" fill="rgb(215,194,28)"/><text x="54.9728%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (15 samples, 0.16%)</title><rect x="54.7336%" y="1061" width="0.1608%" height="15" fill="rgb(243,207,11)"/><text x="54.9836%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (15 samples, 0.16%)</title><rect x="54.7336%" y="1045" width="0.1608%" height="15" fill="rgb(254,179,35)"/><text x="54.9836%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (6 samples, 0.06%)</title><rect x="54.8944%" y="1061" width="0.0643%" height="15" fill="rgb(235,97,3)"/><text x="55.1444%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.06%)</title><rect x="54.8944%" y="1045" width="0.0643%" height="15" fill="rgb(215,155,33)"/><text x="55.1444%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.01%)</title><rect x="54.9587%" y="981" width="0.0107%" height="15" fill="rgb(223,128,12)"/><text x="55.2087%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="54.9587%" y="965" width="0.0107%" height="15" fill="rgb(208,157,18)"/><text x="55.2087%" y="975.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (250 samples, 2.68%)</title><rect x="54.9802%" y="949" width="2.6804%" height="15" fill="rgb(249,70,54)"/><text x="55.2302%" y="959.50">&lt;p..</text></g><g><title>syscall (250 samples, 2.68%)</title><rect x="54.9802%" y="933" width="2.6804%" height="15" fill="rgb(244,118,24)"/><text x="55.2302%" y="943.50">sy..</text></g><g><title>[unknown] (247 samples, 2.65%)</title><rect x="55.0123%" y="917" width="2.6482%" height="15" fill="rgb(211,54,0)"/><text x="55.2623%" y="927.50">[u..</text></g><g><title>[unknown] (244 samples, 2.62%)</title><rect x="55.0445%" y="901" width="2.6161%" height="15" fill="rgb(245,137,45)"/><text x="55.2945%" y="911.50">[u..</text></g><g><title>[unknown] (243 samples, 2.61%)</title><rect x="55.0552%" y="885" width="2.6053%" height="15" fill="rgb(232,154,31)"/><text x="55.3052%" y="895.50">[u..</text></g><g><title>[unknown] (241 samples, 2.58%)</title><rect x="55.0767%" y="869" width="2.5839%" height="15" fill="rgb(253,6,39)"/><text x="55.3267%" y="879.50">[u..</text></g><g><title>[unknown] (240 samples, 2.57%)</title><rect x="55.0874%" y="853" width="2.5732%" height="15" fill="rgb(234,183,24)"/><text x="55.3374%" y="863.50">[u..</text></g><g><title>[unknown] (213 samples, 2.28%)</title><rect x="55.3769%" y="837" width="2.2837%" height="15" fill="rgb(252,84,40)"/><text x="55.6269%" y="847.50">[..</text></g><g><title>[unknown] (200 samples, 2.14%)</title><rect x="55.5162%" y="821" width="2.1443%" height="15" fill="rgb(224,65,2)"/><text x="55.7662%" y="831.50">[..</text></g><g><title>[unknown] (186 samples, 1.99%)</title><rect x="55.6663%" y="805" width="1.9942%" height="15" fill="rgb(229,38,24)"/><text x="55.9163%" y="815.50">[..</text></g><g><title>[unknown] (142 samples, 1.52%)</title><rect x="56.1381%" y="789" width="1.5225%" height="15" fill="rgb(218,131,50)"/><text x="56.3881%" y="799.50"></text></g><g><title>[unknown] (107 samples, 1.15%)</title><rect x="56.5133%" y="773" width="1.1472%" height="15" fill="rgb(233,106,18)"/><text x="56.7633%" y="783.50"></text></g><g><title>[unknown] (50 samples, 0.54%)</title><rect x="57.1245%" y="757" width="0.5361%" height="15" fill="rgb(220,216,11)"/><text x="57.3745%" y="767.50"></text></g><g><title>[unknown] (8 samples, 0.09%)</title><rect x="57.5748%" y="741" width="0.0858%" height="15" fill="rgb(251,100,45)"/><text x="57.8248%" y="751.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="57.6177%" y="725" width="0.0429%" height="15" fill="rgb(235,143,32)"/><text x="57.8677%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.02%)</title><rect x="57.6606%" y="949" width="0.0214%" height="15" fill="rgb(248,124,34)"/><text x="57.9106%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="57.6606%" y="933" width="0.0214%" height="15" fill="rgb(225,221,4)"/><text x="57.9106%" y="943.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (4 samples, 0.04%)</title><rect x="57.6820%" y="949" width="0.0429%" height="15" fill="rgb(242,27,43)"/><text x="57.9320%" y="959.50"></text></g><g><title>std::time::Instant::now (4 samples, 0.04%)</title><rect x="57.6820%" y="933" width="0.0429%" height="15" fill="rgb(227,54,8)"/><text x="57.9320%" y="943.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (4 samples, 0.04%)</title><rect x="57.6820%" y="917" width="0.0429%" height="15" fill="rgb(253,139,49)"/><text x="57.9320%" y="927.50"></text></g><g><title>std::sys::unix::time::inner::now (4 samples, 0.04%)</title><rect x="57.6820%" y="901" width="0.0429%" height="15" fill="rgb(231,26,43)"/><text x="57.9320%" y="911.50"></text></g><g><title>__clock_gettime (3 samples, 0.03%)</title><rect x="57.6927%" y="885" width="0.0322%" height="15" fill="rgb(207,121,39)"/><text x="57.9427%" y="895.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="57.7142%" y="869" width="0.0107%" height="15" fill="rgb(223,101,35)"/><text x="57.9642%" y="879.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (4 samples, 0.04%)</title><rect x="57.7249%" y="949" width="0.0429%" height="15" fill="rgb(232,87,23)"/><text x="57.9749%" y="959.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (4 samples, 0.04%)</title><rect x="57.7249%" y="933" width="0.0429%" height="15" fill="rgb(225,180,29)"/><text x="57.9749%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (3 samples, 0.03%)</title><rect x="57.7356%" y="917" width="0.0322%" height="15" fill="rgb(225,25,17)"/><text x="57.9856%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.03%)</title><rect x="57.7356%" y="901" width="0.0322%" height="15" fill="rgb(223,8,52)"/><text x="57.9856%" y="911.50"></text></g><g><title>core::task::wake::Waker::wake (267 samples, 2.86%)</title><rect x="54.9587%" y="1061" width="2.8627%" height="15" fill="rgb(246,42,21)"/><text x="55.2087%" y="1071.50">co..</text></g><g><title>tokio::park::thread::wake (267 samples, 2.86%)</title><rect x="54.9587%" y="1045" width="2.8627%" height="15" fill="rgb(205,64,43)"/><text x="55.2087%" y="1055.50">to..</text></g><g><title>tokio::park::thread::Inner::unpark (267 samples, 2.86%)</title><rect x="54.9587%" y="1029" width="2.8627%" height="15" fill="rgb(221,160,13)"/><text x="55.2087%" y="1039.50">to..</text></g><g><title>tokio::loom::std::parking_lot::Condvar::notify_one (267 samples, 2.86%)</title><rect x="54.9587%" y="1013" width="2.8627%" height="15" fill="rgb(239,58,35)"/><text x="55.2087%" y="1023.50">to..</text></g><g><title>parking_lot::condvar::Condvar::notify_one (267 samples, 2.86%)</title><rect x="54.9587%" y="997" width="2.8627%" height="15" fill="rgb(251,26,40)"/><text x="55.2087%" y="1007.50">pa..</text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (266 samples, 2.85%)</title><rect x="54.9694%" y="981" width="2.8519%" height="15" fill="rgb(247,0,4)"/><text x="55.2194%" y="991.50">pa..</text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (266 samples, 2.85%)</title><rect x="54.9694%" y="965" width="2.8519%" height="15" fill="rgb(218,130,10)"/><text x="55.2194%" y="975.50">pa..</text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (5 samples, 0.05%)</title><rect x="57.7678%" y="949" width="0.0536%" height="15" fill="rgb(239,32,7)"/><text x="58.0178%" y="959.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (5 samples, 0.05%)</title><rect x="57.7678%" y="933" width="0.0536%" height="15" fill="rgb(210,192,24)"/><text x="58.0178%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (5 samples, 0.05%)</title><rect x="57.7678%" y="917" width="0.0536%" height="15" fill="rgb(226,212,17)"/><text x="58.0178%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_sub (5 samples, 0.05%)</title><rect x="57.7678%" y="901" width="0.0536%" height="15" fill="rgb(219,201,28)"/><text x="58.0178%" y="911.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (18 samples, 0.19%)</title><rect x="57.8214%" y="1061" width="0.1930%" height="15" fill="rgb(235,207,41)"/><text x="58.0714%" y="1071.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (18 samples, 0.19%)</title><rect x="57.8214%" y="1045" width="0.1930%" height="15" fill="rgb(241,95,54)"/><text x="58.0714%" y="1055.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (18 samples, 0.19%)</title><rect x="57.8214%" y="1029" width="0.1930%" height="15" fill="rgb(248,12,23)"/><text x="58.0714%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (18 samples, 0.19%)</title><rect x="57.8214%" y="1013" width="0.1930%" height="15" fill="rgb(228,173,4)"/><text x="58.0714%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (18 samples, 0.19%)</title><rect x="57.8214%" y="997" width="0.1930%" height="15" fill="rgb(254,99,5)"/><text x="58.0714%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (2 samples, 0.02%)</title><rect x="58.0144%" y="1045" width="0.0214%" height="15" fill="rgb(212,184,17)"/><text x="58.2644%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (2 samples, 0.02%)</title><rect x="58.0144%" y="1029" width="0.0214%" height="15" fill="rgb(252,174,1)"/><text x="58.2644%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (12 samples, 0.13%)</title><rect x="58.0358%" y="1045" width="0.1287%" height="15" fill="rgb(241,118,51)"/><text x="58.2858%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_store (12 samples, 0.13%)</title><rect x="58.0358%" y="1029" width="0.1287%" height="15" fill="rgb(227,94,47)"/><text x="58.2858%" y="1039.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (2 samples, 0.02%)</title><rect x="58.1645%" y="1045" width="0.0214%" height="15" fill="rgb(229,104,2)"/><text x="58.4145%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (2 samples, 0.02%)</title><rect x="58.1645%" y="1029" width="0.0214%" height="15" fill="rgb(219,28,31)"/><text x="58.4145%" y="1039.50"></text></g><g><title>tokio::sync::notify::Notify::notify_one (328 samples, 3.52%)</title><rect x="54.7121%" y="1077" width="3.5167%" height="15" fill="rgb(233,109,36)"/><text x="54.9621%" y="1087.50">tok..</text></g><g><title>tokio::sync::notify::notify_locked (20 samples, 0.21%)</title><rect x="58.0144%" y="1061" width="0.2144%" height="15" fill="rgb(246,88,11)"/><text x="58.2644%" y="1071.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::pop_back (4 samples, 0.04%)</title><rect x="58.1859%" y="1045" width="0.0429%" height="15" fill="rgb(209,212,17)"/><text x="58.4359%" y="1055.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.09%)</title><rect x="58.2288%" y="1061" width="0.0858%" height="15" fill="rgb(243,59,29)"/><text x="58.4788%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (8 samples, 0.09%)</title><rect x="58.2288%" y="1045" width="0.0858%" height="15" fill="rgb(244,205,48)"/><text x="58.4788%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_add (8 samples, 0.09%)</title><rect x="58.2288%" y="1029" width="0.0858%" height="15" fill="rgb(227,30,6)"/><text x="58.4788%" y="1039.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.08%)</title><rect x="58.3253%" y="1045" width="0.0751%" height="15" fill="rgb(220,205,48)"/><text x="58.5753%" y="1055.50"></text></g><g><title>__rg_alloc (1 samples, 0.01%)</title><rect x="58.4003%" y="981" width="0.0107%" height="15" fill="rgb(250,94,14)"/><text x="58.6503%" y="991.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.01%)</title><rect x="58.4003%" y="965" width="0.0107%" height="15" fill="rgb(216,119,42)"/><text x="58.6503%" y="975.50"></text></g><g><title>arena_slab_reg_alloc (1 samples, 0.01%)</title><rect x="58.4218%" y="837" width="0.0107%" height="15" fill="rgb(232,155,0)"/><text x="58.6718%" y="847.50"></text></g><g><title>bitmap_sfu (1 samples, 0.01%)</title><rect x="58.4218%" y="821" width="0.0107%" height="15" fill="rgb(212,24,32)"/><text x="58.6718%" y="831.50"></text></g><g><title>ffs_lu (1 samples, 0.01%)</title><rect x="58.4218%" y="805" width="0.0107%" height="15" fill="rgb(216,69,20)"/><text x="58.6718%" y="815.50"></text></g><g><title>&lt;rho_runtime::storage::coordinator::AsyncStore as rho_runtime::storage::Storage&gt;::produce::{{closure}} (403 samples, 4.32%)</title><rect x="54.1224%" y="1093" width="4.3208%" height="15" fill="rgb(229,73,31)"/><text x="54.3724%" y="1103.50">&lt;rho_..</text></g><g><title>tokio::sync::oneshot::channel (20 samples, 0.21%)</title><rect x="58.2288%" y="1077" width="0.2144%" height="15" fill="rgb(224,219,20)"/><text x="58.4788%" y="1087.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (12 samples, 0.13%)</title><rect x="58.3146%" y="1061" width="0.1287%" height="15" fill="rgb(215,146,41)"/><text x="58.5646%" y="1071.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.04%)</title><rect x="58.4003%" y="1045" width="0.0429%" height="15" fill="rgb(244,71,31)"/><text x="58.6503%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.04%)</title><rect x="58.4003%" y="1029" width="0.0429%" height="15" fill="rgb(224,24,11)"/><text x="58.6503%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.04%)</title><rect x="58.4003%" y="1013" width="0.0429%" height="15" fill="rgb(229,76,15)"/><text x="58.6503%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.04%)</title><rect x="58.4003%" y="997" width="0.0429%" height="15" fill="rgb(209,93,2)"/><text x="58.6503%" y="1007.50"></text></g><g><title>_rjem_mallocx (3 samples, 0.03%)</title><rect x="58.4111%" y="981" width="0.0322%" height="15" fill="rgb(216,200,50)"/><text x="58.6611%" y="991.50"></text></g><g><title>imalloc (3 samples, 0.03%)</title><rect x="58.4111%" y="965" width="0.0322%" height="15" fill="rgb(211,67,34)"/><text x="58.6611%" y="975.50"></text></g><g><title>imalloc_body (3 samples, 0.03%)</title><rect x="58.4111%" y="949" width="0.0322%" height="15" fill="rgb(225,87,47)"/><text x="58.6611%" y="959.50"></text></g><g><title>imalloc_no_sample (3 samples, 0.03%)</title><rect x="58.4111%" y="933" width="0.0322%" height="15" fill="rgb(217,185,16)"/><text x="58.6611%" y="943.50"></text></g><g><title>iallocztm (3 samples, 0.03%)</title><rect x="58.4111%" y="917" width="0.0322%" height="15" fill="rgb(205,0,0)"/><text x="58.6611%" y="927.50"></text></g><g><title>arena_malloc (3 samples, 0.03%)</title><rect x="58.4111%" y="901" width="0.0322%" height="15" fill="rgb(207,116,45)"/><text x="58.6611%" y="911.50"></text></g><g><title>tcache_alloc_small (3 samples, 0.03%)</title><rect x="58.4111%" y="885" width="0.0322%" height="15" fill="rgb(221,156,26)"/><text x="58.6611%" y="895.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (2 samples, 0.02%)</title><rect x="58.4218%" y="869" width="0.0214%" height="15" fill="rgb(213,140,4)"/><text x="58.6718%" y="879.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (2 samples, 0.02%)</title><rect x="58.4218%" y="853" width="0.0214%" height="15" fill="rgb(231,224,15)"/><text x="58.6718%" y="863.50"></text></g><g><title>malloc_mutex_unlock (1 samples, 0.01%)</title><rect x="58.4325%" y="837" width="0.0107%" height="15" fill="rgb(244,76,20)"/><text x="58.6825%" y="847.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="58.4325%" y="821" width="0.0107%" height="15" fill="rgb(238,117,7)"/><text x="58.6825%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (407 samples, 4.36%)</title><rect x="54.1224%" y="1157" width="4.3637%" height="15" fill="rgb(235,1,10)"/><text x="54.3724%" y="1167.50">&lt;core..</text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::produce::{{closure}} (407 samples, 4.36%)</title><rect x="54.1224%" y="1141" width="4.3637%" height="15" fill="rgb(216,165,6)"/><text x="54.3724%" y="1151.50">rho_r..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (407 samples, 4.36%)</title><rect x="54.1224%" y="1125" width="4.3637%" height="15" fill="rgb(246,91,35)"/><text x="54.3724%" y="1135.50">&lt;core..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (407 samples, 4.36%)</title><rect x="54.1224%" y="1109" width="4.3637%" height="15" fill="rgb(228,96,24)"/><text x="54.3724%" y="1119.50">&lt;core..</text></g><g><title>[libc-2.31.so] (4 samples, 0.04%)</title><rect x="58.4432%" y="1093" width="0.0429%" height="15" fill="rgb(254,217,53)"/><text x="58.6932%" y="1103.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2 samples, 0.02%)</title><rect x="58.4861%" y="1157" width="0.0214%" height="15" fill="rgb(209,60,0)"/><text x="58.7361%" y="1167.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (1 samples, 0.01%)</title><rect x="58.4968%" y="1141" width="0.0107%" height="15" fill="rgb(250,93,26)"/><text x="58.7468%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="58.4968%" y="1125" width="0.0107%" height="15" fill="rgb(211,9,40)"/><text x="58.7468%" y="1135.50"></text></g><g><title>__rust_probestack (1 samples, 0.01%)</title><rect x="58.4968%" y="1109" width="0.0107%" height="15" fill="rgb(242,57,20)"/><text x="58.7468%" y="1119.50"></text></g><g><title>[libc-2.31.so] (64 samples, 0.69%)</title><rect x="58.5504%" y="1093" width="0.6862%" height="15" fill="rgb(248,85,48)"/><text x="58.8004%" y="1103.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (483 samples, 5.18%)</title><rect x="54.0903%" y="1205" width="5.1785%" height="15" fill="rgb(212,117,2)"/><text x="54.3403%" y="1215.50">&lt;std::..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (483 samples, 5.18%)</title><rect x="54.0903%" y="1189" width="5.1785%" height="15" fill="rgb(243,19,3)"/><text x="54.3403%" y="1199.50">tokio:..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (483 samples, 5.18%)</title><rect x="54.0903%" y="1173" width="5.1785%" height="15" fill="rgb(232,217,24)"/><text x="54.3403%" y="1183.50">tokio:..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::drop_future_or_output (71 samples, 0.76%)</title><rect x="58.5076%" y="1157" width="0.7612%" height="15" fill="rgb(224,175,40)"/><text x="58.7576%" y="1167.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::set_stage (71 samples, 0.76%)</title><rect x="58.5076%" y="1141" width="0.7612%" height="15" fill="rgb(212,162,32)"/><text x="58.7576%" y="1151.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (71 samples, 0.76%)</title><rect x="58.5076%" y="1125" width="0.7612%" height="15" fill="rgb(215,9,4)"/><text x="58.7576%" y="1135.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::set_stage::{{closure}} (71 samples, 0.76%)</title><rect x="58.5076%" y="1109" width="0.7612%" height="15" fill="rgb(242,42,7)"/><text x="58.7576%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_join_double::{{closure}}&gt;&gt;&gt; (3 samples, 0.03%)</title><rect x="59.2366%" y="1093" width="0.0322%" height="15" fill="rgb(242,184,45)"/><text x="59.4866%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (534 samples, 5.73%)</title><rect x="54.0903%" y="1253" width="5.7253%" height="15" fill="rgb(228,111,51)"/><text x="54.3403%" y="1263.50">std::pa..</text></g><g><title>std::panicking::try (534 samples, 5.73%)</title><rect x="54.0903%" y="1237" width="5.7253%" height="15" fill="rgb(236,147,17)"/><text x="54.3403%" y="1247.50">std::pa..</text></g><g><title>std::panicking::try::do_call (534 samples, 5.73%)</title><rect x="54.0903%" y="1221" width="5.7253%" height="15" fill="rgb(210,75,22)"/><text x="54.3403%" y="1231.50">std::pa..</text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (51 samples, 0.55%)</title><rect x="59.2688%" y="1205" width="0.5468%" height="15" fill="rgb(217,159,45)"/><text x="59.5188%" y="1215.50"></text></g><g><title>[libc-2.31.so] (51 samples, 0.55%)</title><rect x="59.2688%" y="1189" width="0.5468%" height="15" fill="rgb(245,165,53)"/><text x="59.5188%" y="1199.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (587 samples, 6.29%)</title><rect x="53.5864%" y="1269" width="6.2936%" height="15" fill="rgb(251,190,50)"/><text x="53.8364%" y="1279.50">tokio::r..</text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (6 samples, 0.06%)</title><rect x="59.8156%" y="1253" width="0.0643%" height="15" fill="rgb(208,203,29)"/><text x="60.0656%" y="1263.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update (6 samples, 0.06%)</title><rect x="59.8156%" y="1237" width="0.0643%" height="15" fill="rgb(207,209,35)"/><text x="60.0656%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (6 samples, 0.06%)</title><rect x="59.8156%" y="1221" width="0.0643%" height="15" fill="rgb(230,144,49)"/><text x="60.0656%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.06%)</title><rect x="59.8156%" y="1205" width="0.0643%" height="15" fill="rgb(229,31,6)"/><text x="60.0656%" y="1215.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::has_join_waker (1 samples, 0.01%)</title><rect x="59.8799%" y="1269" width="0.0107%" height="15" fill="rgb(251,129,24)"/><text x="60.1299%" y="1279.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (2 samples, 0.02%)</title><rect x="59.8906%" y="1269" width="0.0214%" height="15" fill="rgb(235,105,15)"/><text x="60.1406%" y="1279.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (1 samples, 0.01%)</title><rect x="59.9121%" y="1269" width="0.0107%" height="15" fill="rgb(216,52,43)"/><text x="60.1621%" y="1279.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (1 samples, 0.01%)</title><rect x="59.9121%" y="1253" width="0.0107%" height="15" fill="rgb(238,144,41)"/><text x="60.1621%" y="1263.50"></text></g><g><title>tokio::coop::budget (1 samples, 0.01%)</title><rect x="59.9121%" y="1237" width="0.0107%" height="15" fill="rgb(243,63,9)"/><text x="60.1621%" y="1247.50"></text></g><g><title>tokio::coop::with_budget (1 samples, 0.01%)</title><rect x="59.9121%" y="1221" width="0.0107%" height="15" fill="rgb(246,208,1)"/><text x="60.1621%" y="1231.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="59.9121%" y="1205" width="0.0107%" height="15" fill="rgb(233,182,18)"/><text x="60.1621%" y="1215.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="59.9121%" y="1189" width="0.0107%" height="15" fill="rgb(242,224,8)"/><text x="60.1621%" y="1199.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (1 samples, 0.01%)</title><rect x="59.9121%" y="1173" width="0.0107%" height="15" fill="rgb(243,54,37)"/><text x="60.1621%" y="1183.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (1 samples, 0.01%)</title><rect x="59.9121%" y="1157" width="0.0107%" height="15" fill="rgb(233,192,12)"/><text x="60.1621%" y="1167.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (1 samples, 0.01%)</title><rect x="59.9121%" y="1141" width="0.0107%" height="15" fill="rgb(251,192,53)"/><text x="60.1621%" y="1151.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (1 samples, 0.01%)</title><rect x="59.9121%" y="1125" width="0.0107%" height="15" fill="rgb(246,141,26)"/><text x="60.1621%" y="1135.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1 samples, 0.01%)</title><rect x="59.9121%" y="1109" width="0.0107%" height="15" fill="rgb(239,195,19)"/><text x="60.1621%" y="1119.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1 samples, 0.01%)</title><rect x="59.9121%" y="1093" width="0.0107%" height="15" fill="rgb(241,16,39)"/><text x="60.1621%" y="1103.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (1 samples, 0.01%)</title><rect x="59.9121%" y="1077" width="0.0107%" height="15" fill="rgb(223,13,53)"/><text x="60.1621%" y="1087.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.01%)</title><rect x="59.9121%" y="1061" width="0.0107%" height="15" fill="rgb(214,227,0)"/><text x="60.1621%" y="1071.50"></text></g><g><title>std::panicking::try (1 samples, 0.01%)</title><rect x="59.9121%" y="1045" width="0.0107%" height="15" fill="rgb(228,103,26)"/><text x="60.1621%" y="1055.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.01%)</title><rect x="59.9121%" y="1029" width="0.0107%" height="15" fill="rgb(254,177,53)"/><text x="60.1621%" y="1039.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.01%)</title><rect x="59.9121%" y="1013" width="0.0107%" height="15" fill="rgb(208,201,34)"/><text x="60.1621%" y="1023.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (1 samples, 0.01%)</title><rect x="59.9121%" y="997" width="0.0107%" height="15" fill="rgb(212,39,5)"/><text x="60.1621%" y="1007.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (1 samples, 0.01%)</title><rect x="59.9121%" y="981" width="0.0107%" height="15" fill="rgb(246,117,3)"/><text x="60.1621%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="59.9121%" y="965" width="0.0107%" height="15" fill="rgb(244,118,39)"/><text x="60.1621%" y="975.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::produce::{{closure}} (1 samples, 0.01%)</title><rect x="59.9121%" y="949" width="0.0107%" height="15" fill="rgb(241,64,10)"/><text x="60.1621%" y="959.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::handle_comm_events (1 samples, 0.01%)</title><rect x="59.9121%" y="933" width="0.0107%" height="15" fill="rgb(229,39,44)"/><text x="60.1621%" y="943.50"></text></g><g><title>__rust_probestack (1 samples, 0.01%)</title><rect x="59.9121%" y="917" width="0.0107%" height="15" fill="rgb(230,226,3)"/><text x="60.1621%" y="927.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (3 samples, 0.03%)</title><rect x="59.9228%" y="1269" width="0.0322%" height="15" fill="rgb(222,13,42)"/><text x="60.1728%" y="1279.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::drain_pending_drop (1 samples, 0.01%)</title><rect x="59.9550%" y="1269" width="0.0107%" height="15" fill="rgb(247,180,54)"/><text x="60.2050%" y="1279.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (1 samples, 0.01%)</title><rect x="59.9657%" y="1269" width="0.0107%" height="15" fill="rgb(205,96,16)"/><text x="60.2157%" y="1279.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (5 samples, 0.05%)</title><rect x="60.0193%" y="805" width="0.0536%" height="15" fill="rgb(205,100,21)"/><text x="60.2693%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_swap (5 samples, 0.05%)</title><rect x="60.0193%" y="789" width="0.0536%" height="15" fill="rgb(248,51,4)"/><text x="60.2693%" y="799.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (10 samples, 0.11%)</title><rect x="59.9764%" y="837" width="0.1072%" height="15" fill="rgb(217,197,30)"/><text x="60.2264%" y="847.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (6 samples, 0.06%)</title><rect x="60.0193%" y="821" width="0.0643%" height="15" fill="rgb(240,179,40)"/><text x="60.2693%" y="831.50"></text></g><g><title>tokio::runtime::park::Inner::unpark_condvar (1 samples, 0.01%)</title><rect x="60.0729%" y="805" width="0.0107%" height="15" fill="rgb(212,185,35)"/><text x="60.3229%" y="815.50"></text></g><g><title>core::mem::drop (1 samples, 0.01%)</title><rect x="60.0729%" y="789" width="0.0107%" height="15" fill="rgb(251,222,31)"/><text x="60.3229%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,()&gt;&gt; (1 samples, 0.01%)</title><rect x="60.0729%" y="773" width="0.0107%" height="15" fill="rgb(208,140,36)"/><text x="60.3229%" y="783.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="60.0729%" y="757" width="0.0107%" height="15" fill="rgb(220,148,1)"/><text x="60.3229%" y="767.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.01%)</title><rect x="60.0729%" y="741" width="0.0107%" height="15" fill="rgb(254,4,28)"/><text x="60.3229%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.01%)</title><rect x="60.0729%" y="725" width="0.0107%" height="15" fill="rgb(222,185,44)"/><text x="60.3229%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="60.0729%" y="709" width="0.0107%" height="15" fill="rgb(215,74,39)"/><text x="60.3229%" y="719.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (104 samples, 1.12%)</title><rect x="60.0836%" y="805" width="1.1150%" height="15" fill="rgb(247,86,4)"/><text x="60.3336%" y="815.50"></text></g><g><title>syscall (104 samples, 1.12%)</title><rect x="60.0836%" y="789" width="1.1150%" height="15" fill="rgb(231,105,32)"/><text x="60.3336%" y="799.50"></text></g><g><title>[unknown] (103 samples, 1.10%)</title><rect x="60.0943%" y="773" width="1.1043%" height="15" fill="rgb(222,65,35)"/><text x="60.3443%" y="783.50"></text></g><g><title>[unknown] (103 samples, 1.10%)</title><rect x="60.0943%" y="757" width="1.1043%" height="15" fill="rgb(218,145,35)"/><text x="60.3443%" y="767.50"></text></g><g><title>[unknown] (97 samples, 1.04%)</title><rect x="60.1587%" y="741" width="1.0400%" height="15" fill="rgb(208,7,15)"/><text x="60.4087%" y="751.50"></text></g><g><title>[unknown] (96 samples, 1.03%)</title><rect x="60.1694%" y="725" width="1.0293%" height="15" fill="rgb(209,83,13)"/><text x="60.4194%" y="735.50"></text></g><g><title>[unknown] (95 samples, 1.02%)</title><rect x="60.1801%" y="709" width="1.0185%" height="15" fill="rgb(218,3,10)"/><text x="60.4301%" y="719.50"></text></g><g><title>[unknown] (82 samples, 0.88%)</title><rect x="60.3195%" y="693" width="0.8792%" height="15" fill="rgb(211,219,4)"/><text x="60.5695%" y="703.50"></text></g><g><title>[unknown] (72 samples, 0.77%)</title><rect x="60.4267%" y="677" width="0.7720%" height="15" fill="rgb(228,194,12)"/><text x="60.6767%" y="687.50"></text></g><g><title>[unknown] (64 samples, 0.69%)</title><rect x="60.5125%" y="661" width="0.6862%" height="15" fill="rgb(210,175,7)"/><text x="60.7625%" y="671.50"></text></g><g><title>[unknown] (53 samples, 0.57%)</title><rect x="60.6304%" y="645" width="0.5682%" height="15" fill="rgb(243,132,6)"/><text x="60.8804%" y="655.50"></text></g><g><title>[unknown] (47 samples, 0.50%)</title><rect x="60.6948%" y="629" width="0.5039%" height="15" fill="rgb(207,72,18)"/><text x="60.9448%" y="639.50"></text></g><g><title>[unknown] (30 samples, 0.32%)</title><rect x="60.8770%" y="613" width="0.3216%" height="15" fill="rgb(236,1,18)"/><text x="61.1270%" y="623.50"></text></g><g><title>[unknown] (9 samples, 0.10%)</title><rect x="61.1022%" y="597" width="0.0965%" height="15" fill="rgb(227,0,18)"/><text x="61.3522%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="61.1879%" y="581" width="0.0107%" height="15" fill="rgb(247,37,5)"/><text x="61.4379%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (5 samples, 0.05%)</title><rect x="61.1987%" y="805" width="0.0536%" height="15" fill="rgb(237,179,24)"/><text x="61.4487%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.05%)</title><rect x="61.1987%" y="789" width="0.0536%" height="15" fill="rgb(226,53,20)"/><text x="61.4487%" y="799.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (123 samples, 1.32%)</title><rect x="59.9764%" y="1045" width="1.3188%" height="15" fill="rgb(247,75,7)"/><text x="60.2264%" y="1055.50"></text></g><g><title>tokio::runtime::task::harness::transition_to_complete (123 samples, 1.32%)</title><rect x="59.9764%" y="1029" width="1.3188%" height="15" fill="rgb(233,96,12)"/><text x="60.2264%" y="1039.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (123 samples, 1.32%)</title><rect x="59.9764%" y="1013" width="1.3188%" height="15" fill="rgb(224,125,0)"/><text x="60.2264%" y="1023.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_ref (123 samples, 1.32%)</title><rect x="59.9764%" y="997" width="1.3188%" height="15" fill="rgb(224,92,25)"/><text x="60.2264%" y="1007.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::schedule (123 samples, 1.32%)</title><rect x="59.9764%" y="981" width="1.3188%" height="15" fill="rgb(224,42,24)"/><text x="60.2264%" y="991.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (123 samples, 1.32%)</title><rect x="59.9764%" y="965" width="1.3188%" height="15" fill="rgb(234,132,49)"/><text x="60.2264%" y="975.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::schedule::{{closure}} (123 samples, 1.32%)</title><rect x="59.9764%" y="949" width="1.3188%" height="15" fill="rgb(248,100,35)"/><text x="60.2264%" y="959.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::schedule (123 samples, 1.32%)</title><rect x="59.9764%" y="933" width="1.3188%" height="15" fill="rgb(239,94,40)"/><text x="60.2264%" y="943.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (123 samples, 1.32%)</title><rect x="59.9764%" y="917" width="1.3188%" height="15" fill="rgb(235,139,28)"/><text x="60.2264%" y="927.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (123 samples, 1.32%)</title><rect x="59.9764%" y="901" width="1.3188%" height="15" fill="rgb(217,144,7)"/><text x="60.2264%" y="911.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (123 samples, 1.32%)</title><rect x="59.9764%" y="885" width="1.3188%" height="15" fill="rgb(227,55,4)"/><text x="60.2264%" y="895.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule_local (123 samples, 1.32%)</title><rect x="59.9764%" y="869" width="1.3188%" height="15" fill="rgb(252,82,54)"/><text x="60.2264%" y="879.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (123 samples, 1.32%)</title><rect x="59.9764%" y="853" width="1.3188%" height="15" fill="rgb(245,172,4)"/><text x="60.2264%" y="863.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (113 samples, 1.21%)</title><rect x="60.0836%" y="837" width="1.2115%" height="15" fill="rgb(207,26,27)"/><text x="60.3336%" y="847.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (113 samples, 1.21%)</title><rect x="60.0836%" y="821" width="1.2115%" height="15" fill="rgb(252,98,18)"/><text x="60.3336%" y="831.50"></text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (4 samples, 0.04%)</title><rect x="61.2523%" y="805" width="0.0429%" height="15" fill="rgb(244,8,26)"/><text x="61.5023%" y="815.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (4 samples, 0.04%)</title><rect x="61.2523%" y="789" width="0.0429%" height="15" fill="rgb(237,173,45)"/><text x="61.5023%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4 samples, 0.04%)</title><rect x="61.2523%" y="773" width="0.0429%" height="15" fill="rgb(208,213,49)"/><text x="61.5023%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_sub (4 samples, 0.04%)</title><rect x="61.2523%" y="757" width="0.0429%" height="15" fill="rgb(212,122,37)"/><text x="61.5023%" y="767.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (126 samples, 1.35%)</title><rect x="59.9764%" y="1269" width="1.3509%" height="15" fill="rgb(213,80,17)"/><text x="60.2264%" y="1279.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (126 samples, 1.35%)</title><rect x="59.9764%" y="1253" width="1.3509%" height="15" fill="rgb(206,210,43)"/><text x="60.2264%" y="1263.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (126 samples, 1.35%)</title><rect x="59.9764%" y="1237" width="1.3509%" height="15" fill="rgb(229,214,3)"/><text x="60.2264%" y="1247.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (126 samples, 1.35%)</title><rect x="59.9764%" y="1221" width="1.3509%" height="15" fill="rgb(235,213,29)"/><text x="60.2264%" y="1231.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (126 samples, 1.35%)</title><rect x="59.9764%" y="1205" width="1.3509%" height="15" fill="rgb(248,135,26)"/><text x="60.2264%" y="1215.50"></text></g><g><title>tokio::coop::budget (126 samples, 1.35%)</title><rect x="59.9764%" y="1189" width="1.3509%" height="15" fill="rgb(242,188,12)"/><text x="60.2264%" y="1199.50"></text></g><g><title>tokio::coop::with_budget (126 samples, 1.35%)</title><rect x="59.9764%" y="1173" width="1.3509%" height="15" fill="rgb(245,38,12)"/><text x="60.2264%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (126 samples, 1.35%)</title><rect x="59.9764%" y="1157" width="1.3509%" height="15" fill="rgb(218,42,13)"/><text x="60.2264%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (126 samples, 1.35%)</title><rect x="59.9764%" y="1141" width="1.3509%" height="15" fill="rgb(238,132,49)"/><text x="60.2264%" y="1151.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (126 samples, 1.35%)</title><rect x="59.9764%" y="1125" width="1.3509%" height="15" fill="rgb(209,196,19)"/><text x="60.2264%" y="1135.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (126 samples, 1.35%)</title><rect x="59.9764%" y="1109" width="1.3509%" height="15" fill="rgb(244,131,22)"/><text x="60.2264%" y="1119.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (126 samples, 1.35%)</title><rect x="59.9764%" y="1093" width="1.3509%" height="15" fill="rgb(223,18,34)"/><text x="60.2264%" y="1103.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (126 samples, 1.35%)</title><rect x="59.9764%" y="1077" width="1.3509%" height="15" fill="rgb(252,124,54)"/><text x="60.2264%" y="1087.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (126 samples, 1.35%)</title><rect x="59.9764%" y="1061" width="1.3509%" height="15" fill="rgb(229,106,42)"/><text x="60.2264%" y="1071.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (3 samples, 0.03%)</title><rect x="61.2952%" y="1045" width="0.0322%" height="15" fill="rgb(221,129,1)"/><text x="61.5452%" y="1055.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (3 samples, 0.03%)</title><rect x="61.2952%" y="1029" width="0.0322%" height="15" fill="rgb(229,74,15)"/><text x="61.5452%" y="1039.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.03%)</title><rect x="61.2952%" y="1013" width="0.0322%" height="15" fill="rgb(210,206,50)"/><text x="61.5452%" y="1023.50"></text></g><g><title>std::panicking::try (3 samples, 0.03%)</title><rect x="61.2952%" y="997" width="0.0322%" height="15" fill="rgb(251,114,31)"/><text x="61.5452%" y="1007.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.03%)</title><rect x="61.2952%" y="981" width="0.0322%" height="15" fill="rgb(215,225,28)"/><text x="61.5452%" y="991.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.03%)</title><rect x="61.2952%" y="965" width="0.0322%" height="15" fill="rgb(237,109,14)"/><text x="61.5452%" y="975.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (3 samples, 0.03%)</title><rect x="61.2952%" y="949" width="0.0322%" height="15" fill="rgb(230,13,37)"/><text x="61.5452%" y="959.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (3 samples, 0.03%)</title><rect x="61.2952%" y="933" width="0.0322%" height="15" fill="rgb(231,40,28)"/><text x="61.5452%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.03%)</title><rect x="61.2952%" y="917" width="0.0322%" height="15" fill="rgb(231,202,18)"/><text x="61.5452%" y="927.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation::{{closure}} (3 samples, 0.03%)</title><rect x="61.2952%" y="901" width="0.0322%" height="15" fill="rgb(225,33,18)"/><text x="61.5452%" y="911.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_send::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Send&gt;::evaluate (3 samples, 0.03%)</title><rect x="61.2952%" y="885" width="0.0322%" height="15" fill="rgb(223,64,47)"/><text x="61.5452%" y="895.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_nested_expressions (3 samples, 0.03%)</title><rect x="61.2952%" y="869" width="0.0322%" height="15" fill="rgb(234,114,13)"/><text x="61.5452%" y="879.50"></text></g><g><title>__rust_probestack (3 samples, 0.03%)</title><rect x="61.2952%" y="853" width="0.0322%" height="15" fill="rgb(248,56,40)"/><text x="61.5452%" y="863.50"></text></g><g><title>tokio::sync::oneshot::State::new (2 samples, 0.02%)</title><rect x="61.3273%" y="1269" width="0.0214%" height="15" fill="rgb(221,194,21)"/><text x="61.5773%" y="1279.50"></text></g><g><title>[unknown] (4,041 samples, 43.33%)</title><rect x="18.0337%" y="1285" width="43.3258%" height="15" fill="rgb(242,108,46)"/><text x="18.2837%" y="1295.50">[unknown]</text></g><g><title>tokio::sync::oneshot::Task::set_task (1 samples, 0.01%)</title><rect x="61.3488%" y="1269" width="0.0107%" height="15" fill="rgb(220,106,10)"/><text x="61.5988%" y="1279.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.01%)</title><rect x="61.3488%" y="1253" width="0.0107%" height="15" fill="rgb(211,88,4)"/><text x="61.5988%" y="1263.50"></text></g><g><title>tokio::sync::oneshot::Task::set_task::{{closure}} (1 samples, 0.01%)</title><rect x="61.3488%" y="1237" width="0.0107%" height="15" fill="rgb(214,95,34)"/><text x="61.5988%" y="1247.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="61.3488%" y="1221" width="0.0107%" height="15" fill="rgb(250,160,33)"/><text x="61.5988%" y="1231.50"></text></g><g><title>__vdso_clock_gettime (2 samples, 0.02%)</title><rect x="61.3595%" y="1285" width="0.0214%" height="15" fill="rgb(225,29,10)"/><text x="61.6095%" y="1295.50"></text></g><g><title>_rjem_mallocx (1 samples, 0.01%)</title><rect x="61.3809%" y="1285" width="0.0107%" height="15" fill="rgb(224,28,30)"/><text x="61.6309%" y="1295.50"></text></g><g><title>alloc::slice::merge_sort (2 samples, 0.02%)</title><rect x="61.3917%" y="1285" width="0.0214%" height="15" fill="rgb(231,77,4)"/><text x="61.6417%" y="1295.50"></text></g><g><title>anon.33484ea21f1293ef7aedd885d4ebe797.6.llvm.11667570739738663356 (1 samples, 0.01%)</title><rect x="61.4131%" y="1285" width="0.0107%" height="15" fill="rgb(209,63,21)"/><text x="61.6631%" y="1295.50"></text></g><g><title>tokio::runtime::task::state::State::unset_join_interested (1 samples, 0.01%)</title><rect x="61.4131%" y="1269" width="0.0107%" height="15" fill="rgb(226,22,11)"/><text x="61.6631%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="61.4238%" y="1269" width="0.0107%" height="15" fill="rgb(216,82,30)"/><text x="61.6738%" y="1279.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="61.4345%" y="1269" width="0.0107%" height="15" fill="rgb(246,227,38)"/><text x="61.6845%" y="1279.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="61.4453%" y="1269" width="0.0107%" height="15" fill="rgb(251,203,53)"/><text x="61.6953%" y="1279.50"></text></g><g><title>anon.c2a769d2bf43e59d4bfb4943ddd9e6b5.3.llvm.9706455969161532628 (5 samples, 0.05%)</title><rect x="61.4238%" y="1285" width="0.0536%" height="15" fill="rgb(254,101,1)"/><text x="61.6738%" y="1295.50"></text></g><g><title>blake3::Hasher::update (2 samples, 0.02%)</title><rect x="61.4560%" y="1269" width="0.0214%" height="15" fill="rgb(241,180,5)"/><text x="61.7060%" y="1279.50"></text></g><g><title>anon.ff7fd81b8d6f221f67d075658d85a514.57.llvm.13947084464035088480 (1 samples, 0.01%)</title><rect x="61.4774%" y="1285" width="0.0107%" height="15" fill="rgb(218,168,4)"/><text x="61.7274%" y="1295.50"></text></g><g><title>tokio::runtime::thread_pool::worker::CURRENT::FOO::__getit (1 samples, 0.01%)</title><rect x="61.4774%" y="1269" width="0.0107%" height="15" fill="rgb(224,223,32)"/><text x="61.7274%" y="1279.50"></text></g><g><title>blake3::ChunkState::update (1 samples, 0.01%)</title><rect x="61.4882%" y="1285" width="0.0107%" height="15" fill="rgb(236,106,22)"/><text x="61.7382%" y="1295.50"></text></g><g><title>blake3::ChunkState::fill_buf (1 samples, 0.01%)</title><rect x="61.4882%" y="1269" width="0.0107%" height="15" fill="rgb(206,121,5)"/><text x="61.7382%" y="1279.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.01%)</title><rect x="61.4882%" y="1253" width="0.0107%" height="15" fill="rgb(233,87,28)"/><text x="61.7382%" y="1263.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="61.4882%" y="1237" width="0.0107%" height="15" fill="rgb(236,137,17)"/><text x="61.7382%" y="1247.50"></text></g><g><title>blake3_compress_in_place_avx512 (17 samples, 0.18%)</title><rect x="61.4989%" y="1285" width="0.1823%" height="15" fill="rgb(209,183,38)"/><text x="61.7489%" y="1295.50"></text></g><g><title>a0idalloc (1 samples, 0.01%)</title><rect x="61.6811%" y="1205" width="0.0107%" height="15" fill="rgb(206,162,44)"/><text x="61.9311%" y="1215.50"></text></g><g><title>idalloctm (1 samples, 0.01%)</title><rect x="61.6811%" y="1189" width="0.0107%" height="15" fill="rgb(237,70,39)"/><text x="61.9311%" y="1199.50"></text></g><g><title>arena_dalloc (1 samples, 0.01%)</title><rect x="61.6811%" y="1173" width="0.0107%" height="15" fill="rgb(212,176,5)"/><text x="61.9311%" y="1183.50"></text></g><g><title>arena_dalloc_no_tcache (1 samples, 0.01%)</title><rect x="61.6811%" y="1157" width="0.0107%" height="15" fill="rgb(232,95,16)"/><text x="61.9311%" y="1167.50"></text></g><g><title>_rjem_je_arena_dalloc_small (1 samples, 0.01%)</title><rect x="61.6811%" y="1141" width="0.0107%" height="15" fill="rgb(219,115,35)"/><text x="61.9311%" y="1151.50"></text></g><g><title>arena_dalloc_bin (1 samples, 0.01%)</title><rect x="61.6811%" y="1125" width="0.0107%" height="15" fill="rgb(251,67,27)"/><text x="61.9311%" y="1135.50"></text></g><g><title>malloc_mutex_unlock (1 samples, 0.01%)</title><rect x="61.6811%" y="1109" width="0.0107%" height="15" fill="rgb(222,95,40)"/><text x="61.9311%" y="1119.50"></text></g><g><title>__nptl_deallocate_tsd.part.0 (2 samples, 0.02%)</title><rect x="61.6811%" y="1253" width="0.0214%" height="15" fill="rgb(250,35,16)"/><text x="61.9311%" y="1263.50"></text></g><g><title>_rjem_je_tsd_cleanup (2 samples, 0.02%)</title><rect x="61.6811%" y="1237" width="0.0214%" height="15" fill="rgb(224,86,44)"/><text x="61.9311%" y="1247.50"></text></g><g><title>tsd_do_data_cleanup (2 samples, 0.02%)</title><rect x="61.6811%" y="1221" width="0.0214%" height="15" fill="rgb(237,53,53)"/><text x="61.9311%" y="1231.50"></text></g><g><title>tcache_destroy (1 samples, 0.01%)</title><rect x="61.6919%" y="1205" width="0.0107%" height="15" fill="rgb(208,171,33)"/><text x="61.9419%" y="1215.50"></text></g><g><title>tcache_flush_cache (1 samples, 0.01%)</title><rect x="61.6919%" y="1189" width="0.0107%" height="15" fill="rgb(222,64,27)"/><text x="61.9419%" y="1199.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.01%)</title><rect x="61.6919%" y="1173" width="0.0107%" height="15" fill="rgb(221,121,35)"/><text x="61.9419%" y="1183.50"></text></g><g><title>extent_arena_get (1 samples, 0.01%)</title><rect x="61.6919%" y="1157" width="0.0107%" height="15" fill="rgb(228,137,42)"/><text x="61.9419%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="61.7026%" y="853" width="0.0107%" height="15" fill="rgb(227,54,21)"/><text x="61.9526%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="61.7026%" y="837" width="0.0107%" height="15" fill="rgb(240,168,33)"/><text x="61.9526%" y="847.50"></text></g><g><title>parking_lot_core::parking_lot::get_hashtable (1 samples, 0.01%)</title><rect x="61.7133%" y="837" width="0.0107%" height="15" fill="rgb(243,159,6)"/><text x="61.9633%" y="847.50"></text></g><g><title>parking_lot_core::parking_lot::create_hashtable (1 samples, 0.01%)</title><rect x="61.7133%" y="821" width="0.0107%" height="15" fill="rgb(205,211,41)"/><text x="61.9633%" y="831.50"></text></g><g><title>parking_lot_core::parking_lot::HashTable::new (1 samples, 0.01%)</title><rect x="61.7133%" y="805" width="0.0107%" height="15" fill="rgb(253,30,1)"/><text x="61.9633%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.01%)</title><rect x="61.7133%" y="789" width="0.0107%" height="15" fill="rgb(226,80,18)"/><text x="61.9633%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="61.7133%" y="773" width="0.0107%" height="15" fill="rgb(253,156,46)"/><text x="61.9633%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="61.7133%" y="757" width="0.0107%" height="15" fill="rgb(248,87,27)"/><text x="61.9633%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="61.7133%" y="741" width="0.0107%" height="15" fill="rgb(227,122,2)"/><text x="61.9633%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="61.7133%" y="725" width="0.0107%" height="15" fill="rgb(229,94,39)"/><text x="61.9633%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="61.7133%" y="709" width="0.0107%" height="15" fill="rgb(225,173,31)"/><text x="61.9633%" y="719.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="61.7133%" y="693" width="0.0107%" height="15" fill="rgb(239,176,30)"/><text x="61.9633%" y="703.50"></text></g><g><title>_rjem_mallocx (1 samples, 0.01%)</title><rect x="61.7133%" y="677" width="0.0107%" height="15" fill="rgb(212,104,21)"/><text x="61.9633%" y="687.50"></text></g><g><title>imalloc (1 samples, 0.01%)</title><rect x="61.7133%" y="661" width="0.0107%" height="15" fill="rgb(240,209,40)"/><text x="61.9633%" y="671.50"></text></g><g><title>tsd_fetch (1 samples, 0.01%)</title><rect x="61.7133%" y="645" width="0.0107%" height="15" fill="rgb(234,195,5)"/><text x="61.9633%" y="655.50"></text></g><g><title>tsd_fetch_impl (1 samples, 0.01%)</title><rect x="61.7133%" y="629" width="0.0107%" height="15" fill="rgb(238,213,1)"/><text x="61.9633%" y="639.50"></text></g><g><title>_rjem_je_tsd_fetch_slow (1 samples, 0.01%)</title><rect x="61.7133%" y="613" width="0.0107%" height="15" fill="rgb(235,182,54)"/><text x="61.9633%" y="623.50"></text></g><g><title>tsd_data_init (1 samples, 0.01%)</title><rect x="61.7133%" y="597" width="0.0107%" height="15" fill="rgb(229,50,46)"/><text x="61.9633%" y="607.50"></text></g><g><title>_rjem_je_tsd_tcache_enabled_data_init (1 samples, 0.01%)</title><rect x="61.7133%" y="581" width="0.0107%" height="15" fill="rgb(219,145,13)"/><text x="61.9633%" y="591.50"></text></g><g><title>_rjem_je_tsd_tcache_data_init (1 samples, 0.01%)</title><rect x="61.7133%" y="565" width="0.0107%" height="15" fill="rgb(220,226,10)"/><text x="61.9633%" y="575.50"></text></g><g><title>arena_choose (1 samples, 0.01%)</title><rect x="61.7133%" y="549" width="0.0107%" height="15" fill="rgb(248,47,30)"/><text x="61.9633%" y="559.50"></text></g><g><title>arena_choose_impl (1 samples, 0.01%)</title><rect x="61.7133%" y="533" width="0.0107%" height="15" fill="rgb(231,209,44)"/><text x="61.9633%" y="543.50"></text></g><g><title>_rjem_je_arena_choose_hard (1 samples, 0.01%)</title><rect x="61.7133%" y="517" width="0.0107%" height="15" fill="rgb(209,80,30)"/><text x="61.9633%" y="527.50"></text></g><g><title>arena_init_locked (1 samples, 0.01%)</title><rect x="61.7133%" y="501" width="0.0107%" height="15" fill="rgb(232,9,14)"/><text x="61.9633%" y="511.50"></text></g><g><title>_rjem_je_arena_new (1 samples, 0.01%)</title><rect x="61.7133%" y="485" width="0.0107%" height="15" fill="rgb(243,91,43)"/><text x="61.9633%" y="495.50"></text></g><g><title>_rjem_je_base_new (1 samples, 0.01%)</title><rect x="61.7133%" y="469" width="0.0107%" height="15" fill="rgb(231,90,52)"/><text x="61.9633%" y="479.50"></text></g><g><title>base_block_alloc (1 samples, 0.01%)</title><rect x="61.7133%" y="453" width="0.0107%" height="15" fill="rgb(253,192,44)"/><text x="61.9633%" y="463.50"></text></g><g><title>base_map (1 samples, 0.01%)</title><rect x="61.7133%" y="437" width="0.0107%" height="15" fill="rgb(241,66,31)"/><text x="61.9633%" y="447.50"></text></g><g><title>_rjem_je_extent_alloc_mmap (1 samples, 0.01%)</title><rect x="61.7133%" y="421" width="0.0107%" height="15" fill="rgb(235,81,37)"/><text x="61.9633%" y="431.50"></text></g><g><title>_rjem_je_pages_map (1 samples, 0.01%)</title><rect x="61.7133%" y="405" width="0.0107%" height="15" fill="rgb(223,221,9)"/><text x="61.9633%" y="415.50"></text></g><g><title>pages_map_slow (1 samples, 0.01%)</title><rect x="61.7133%" y="389" width="0.0107%" height="15" fill="rgb(242,180,7)"/><text x="61.9633%" y="399.50"></text></g><g><title>os_pages_trim (1 samples, 0.01%)</title><rect x="61.7133%" y="373" width="0.0107%" height="15" fill="rgb(243,78,19)"/><text x="61.9633%" y="383.50"></text></g><g><title>os_pages_unmap (1 samples, 0.01%)</title><rect x="61.7133%" y="357" width="0.0107%" height="15" fill="rgb(233,23,17)"/><text x="61.9633%" y="367.50"></text></g><g><title>__munmap (1 samples, 0.01%)</title><rect x="61.7133%" y="341" width="0.0107%" height="15" fill="rgb(252,122,45)"/><text x="61.9633%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="61.7133%" y="325" width="0.0107%" height="15" fill="rgb(247,108,20)"/><text x="61.9633%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="61.7133%" y="309" width="0.0107%" height="15" fill="rgb(235,84,21)"/><text x="61.9633%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="61.7133%" y="293" width="0.0107%" height="15" fill="rgb(247,129,10)"/><text x="61.9633%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="61.7133%" y="277" width="0.0107%" height="15" fill="rgb(208,173,14)"/><text x="61.9633%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="61.7133%" y="261" width="0.0107%" height="15" fill="rgb(236,31,38)"/><text x="61.9633%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="61.7133%" y="245" width="0.0107%" height="15" fill="rgb(232,65,17)"/><text x="61.9633%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="61.7133%" y="229" width="0.0107%" height="15" fill="rgb(224,45,49)"/><text x="61.9633%" y="239.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (7 samples, 0.08%)</title><rect x="61.7026%" y="1045" width="0.0751%" height="15" fill="rgb(225,2,53)"/><text x="61.9526%" y="1055.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (7 samples, 0.08%)</title><rect x="61.7026%" y="1029" width="0.0751%" height="15" fill="rgb(248,210,53)"/><text x="61.9526%" y="1039.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (7 samples, 0.08%)</title><rect x="61.7026%" y="1013" width="0.0751%" height="15" fill="rgb(211,1,30)"/><text x="61.9526%" y="1023.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (7 samples, 0.08%)</title><rect x="61.7026%" y="997" width="0.0751%" height="15" fill="rgb(224,96,15)"/><text x="61.9526%" y="1007.50"></text></g><g><title>parking_lot_core::parking_lot::park (7 samples, 0.08%)</title><rect x="61.7026%" y="981" width="0.0751%" height="15" fill="rgb(252,45,11)"/><text x="61.9526%" y="991.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (7 samples, 0.08%)</title><rect x="61.7026%" y="965" width="0.0751%" height="15" fill="rgb(220,125,38)"/><text x="61.9526%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7 samples, 0.08%)</title><rect x="61.7026%" y="949" width="0.0751%" height="15" fill="rgb(243,161,33)"/><text x="61.9526%" y="959.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_initialize (7 samples, 0.08%)</title><rect x="61.7026%" y="933" width="0.0751%" height="15" fill="rgb(248,197,34)"/><text x="61.9526%" y="943.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::initialize (7 samples, 0.08%)</title><rect x="61.7026%" y="917" width="0.0751%" height="15" fill="rgb(228,165,23)"/><text x="61.9526%" y="927.50"></text></g><g><title>core::ops::function::FnOnce::call_once (7 samples, 0.08%)</title><rect x="61.7026%" y="901" width="0.0751%" height="15" fill="rgb(236,94,38)"/><text x="61.9526%" y="911.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::__init (7 samples, 0.08%)</title><rect x="61.7026%" y="885" width="0.0751%" height="15" fill="rgb(220,13,23)"/><text x="61.9526%" y="895.50"></text></g><g><title>parking_lot_core::parking_lot::ThreadData::new (7 samples, 0.08%)</title><rect x="61.7026%" y="869" width="0.0751%" height="15" fill="rgb(234,26,39)"/><text x="61.9526%" y="879.50"></text></g><g><title>parking_lot_core::parking_lot::grow_hashtable (6 samples, 0.06%)</title><rect x="61.7133%" y="853" width="0.0643%" height="15" fill="rgb(205,117,44)"/><text x="61.9633%" y="863.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (5 samples, 0.05%)</title><rect x="61.7240%" y="837" width="0.0536%" height="15" fill="rgb(250,42,2)"/><text x="61.9740%" y="847.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock_slow (5 samples, 0.05%)</title><rect x="61.7240%" y="821" width="0.0536%" height="15" fill="rgb(223,83,14)"/><text x="61.9740%" y="831.50"></text></g><g><title>parking_lot_core::word_lock::with_thread_data (5 samples, 0.05%)</title><rect x="61.7240%" y="805" width="0.0536%" height="15" fill="rgb(241,147,50)"/><text x="61.9740%" y="815.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock_slow::{{closure}} (5 samples, 0.05%)</title><rect x="61.7240%" y="789" width="0.0536%" height="15" fill="rgb(218,90,6)"/><text x="61.9740%" y="799.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (5 samples, 0.05%)</title><rect x="61.7240%" y="773" width="0.0536%" height="15" fill="rgb(210,191,5)"/><text x="61.9740%" y="783.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (5 samples, 0.05%)</title><rect x="61.7240%" y="757" width="0.0536%" height="15" fill="rgb(225,139,19)"/><text x="61.9740%" y="767.50"></text></g><g><title>syscall (5 samples, 0.05%)</title><rect x="61.7240%" y="741" width="0.0536%" height="15" fill="rgb(210,1,33)"/><text x="61.9740%" y="751.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="61.7240%" y="725" width="0.0536%" height="15" fill="rgb(213,50,3)"/><text x="61.9740%" y="735.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="61.7240%" y="709" width="0.0536%" height="15" fill="rgb(234,227,4)"/><text x="61.9740%" y="719.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="61.7240%" y="693" width="0.0536%" height="15" fill="rgb(246,63,5)"/><text x="61.9740%" y="703.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="61.7240%" y="677" width="0.0536%" height="15" fill="rgb(245,136,27)"/><text x="61.9740%" y="687.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="61.7240%" y="661" width="0.0536%" height="15" fill="rgb(247,199,27)"/><text x="61.9740%" y="671.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="61.7347%" y="645" width="0.0429%" height="15" fill="rgb(252,158,49)"/><text x="61.9847%" y="655.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="61.7347%" y="629" width="0.0429%" height="15" fill="rgb(254,73,1)"/><text x="61.9847%" y="639.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="61.7347%" y="613" width="0.0429%" height="15" fill="rgb(248,93,19)"/><text x="61.9847%" y="623.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="61.7347%" y="597" width="0.0429%" height="15" fill="rgb(206,67,5)"/><text x="61.9847%" y="607.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="61.7347%" y="581" width="0.0429%" height="15" fill="rgb(209,210,4)"/><text x="61.9847%" y="591.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="61.7347%" y="565" width="0.0429%" height="15" fill="rgb(214,185,36)"/><text x="61.9847%" y="575.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="61.7347%" y="549" width="0.0429%" height="15" fill="rgb(233,191,26)"/><text x="61.9847%" y="559.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="61.7347%" y="533" width="0.0429%" height="15" fill="rgb(248,94,17)"/><text x="61.9847%" y="543.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="61.7347%" y="517" width="0.0429%" height="15" fill="rgb(250,64,4)"/><text x="61.9847%" y="527.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park_timeout (1 samples, 0.01%)</title><rect x="61.9492%" y="709" width="0.0107%" height="15" fill="rgb(218,41,53)"/><text x="62.1992%" y="719.50"></text></g><g><title>tokio::util::try_lock::TryLock&lt;T&gt;::try_lock (1 samples, 0.01%)</title><rect x="61.9492%" y="693" width="0.0107%" height="15" fill="rgb(251,176,28)"/><text x="62.1992%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (1 samples, 0.01%)</title><rect x="61.9492%" y="677" width="0.0107%" height="15" fill="rgb(247,22,9)"/><text x="62.1992%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="61.9492%" y="661" width="0.0107%" height="15" fill="rgb(218,201,14)"/><text x="62.1992%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (3 samples, 0.03%)</title><rect x="61.9385%" y="725" width="0.0322%" height="15" fill="rgb(218,94,10)"/><text x="62.1885%" y="735.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.01%)</title><rect x="61.9599%" y="709" width="0.0107%" height="15" fill="rgb(222,183,52)"/><text x="62.2099%" y="719.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.01%)</title><rect x="61.9599%" y="693" width="0.0107%" height="15" fill="rgb(242,140,25)"/><text x="62.2099%" y="703.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.01%)</title><rect x="61.9599%" y="677" width="0.0107%" height="15" fill="rgb(235,197,38)"/><text x="62.2099%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::queue::Pointers&gt;&gt; (1 samples, 0.01%)</title><rect x="61.9706%" y="693" width="0.0107%" height="15" fill="rgb(237,136,15)"/><text x="62.2206%" y="703.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="61.9706%" y="677" width="0.0107%" height="15" fill="rgb(223,44,49)"/><text x="62.2206%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.01%)</title><rect x="61.9706%" y="661" width="0.0107%" height="15" fill="rgb(227,71,15)"/><text x="62.2206%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.01%)</title><rect x="61.9706%" y="645" width="0.0107%" height="15" fill="rgb(225,153,20)"/><text x="62.2206%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="61.9706%" y="629" width="0.0107%" height="15" fill="rgb(210,190,26)"/><text x="62.2206%" y="639.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::maintenance (5 samples, 0.05%)</title><rect x="61.9385%" y="741" width="0.0536%" height="15" fill="rgb(223,147,5)"/><text x="62.1885%" y="751.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::maintenance (2 samples, 0.02%)</title><rect x="61.9706%" y="725" width="0.0214%" height="15" fill="rgb(207,14,23)"/><text x="62.2206%" y="735.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::is_closed (2 samples, 0.02%)</title><rect x="61.9706%" y="709" width="0.0214%" height="15" fill="rgb(211,195,53)"/><text x="62.2206%" y="719.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="61.9813%" y="693" width="0.0107%" height="15" fill="rgb(237,75,46)"/><text x="62.2313%" y="703.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.01%)</title><rect x="61.9813%" y="677" width="0.0107%" height="15" fill="rgb(254,55,14)"/><text x="62.2313%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.01%)</title><rect x="61.9813%" y="661" width="0.0107%" height="15" fill="rgb(230,185,30)"/><text x="62.2313%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.01%)</title><rect x="61.9813%" y="645" width="0.0107%" height="15" fill="rgb(220,14,11)"/><text x="62.2313%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="61.9813%" y="629" width="0.0107%" height="15" fill="rgb(215,169,44)"/><text x="62.2313%" y="639.50"></text></g><g><title>__sched_yield (578 samples, 6.20%)</title><rect x="62.1743%" y="677" width="6.1971%" height="15" fill="rgb(253,203,20)"/><text x="62.4243%" y="687.50">__sched_..</text></g><g><title>[unknown] (539 samples, 5.78%)</title><rect x="62.5925%" y="661" width="5.7789%" height="15" fill="rgb(229,225,17)"/><text x="62.8425%" y="671.50">[unknow..</text></g><g><title>[unknown] (470 samples, 5.04%)</title><rect x="63.3323%" y="645" width="5.0391%" height="15" fill="rgb(236,76,26)"/><text x="63.5823%" y="655.50">[unkno..</text></g><g><title>[unknown] (446 samples, 4.78%)</title><rect x="63.5896%" y="629" width="4.7818%" height="15" fill="rgb(234,15,30)"/><text x="63.8396%" y="639.50">[unkno..</text></g><g><title>[unknown] (435 samples, 4.66%)</title><rect x="63.7075%" y="613" width="4.6639%" height="15" fill="rgb(211,113,48)"/><text x="63.9575%" y="623.50">[unkn..</text></g><g><title>[unknown] (384 samples, 4.12%)</title><rect x="64.2543%" y="597" width="4.1171%" height="15" fill="rgb(221,31,36)"/><text x="64.5043%" y="607.50">[unk..</text></g><g><title>[unknown] (363 samples, 3.89%)</title><rect x="64.4795%" y="581" width="3.8919%" height="15" fill="rgb(215,118,52)"/><text x="64.7295%" y="591.50">[unk..</text></g><g><title>[unknown] (260 samples, 2.79%)</title><rect x="65.5838%" y="565" width="2.7876%" height="15" fill="rgb(241,151,27)"/><text x="65.8338%" y="575.50">[u..</text></g><g><title>[unknown] (179 samples, 1.92%)</title><rect x="66.4522%" y="549" width="1.9192%" height="15" fill="rgb(253,51,3)"/><text x="66.7022%" y="559.50">[..</text></g><g><title>[unknown] (104 samples, 1.12%)</title><rect x="67.2564%" y="533" width="1.1150%" height="15" fill="rgb(216,201,24)"/><text x="67.5064%" y="543.50"></text></g><g><title>[unknown] (8 samples, 0.09%)</title><rect x="68.2856%" y="517" width="0.0858%" height="15" fill="rgb(231,107,4)"/><text x="68.5356%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (32 samples, 0.34%)</title><rect x="68.3714%" y="677" width="0.3431%" height="15" fill="rgb(243,97,54)"/><text x="68.6214%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (32 samples, 0.34%)</title><rect x="68.3714%" y="661" width="0.3431%" height="15" fill="rgb(221,32,51)"/><text x="68.6214%" y="671.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (4 samples, 0.04%)</title><rect x="68.7145%" y="677" width="0.0429%" height="15" fill="rgb(218,171,35)"/><text x="68.9645%" y="687.50"></text></g><g><title>parking_lot_core::parking_lot::park (4 samples, 0.04%)</title><rect x="68.7145%" y="661" width="0.0429%" height="15" fill="rgb(214,20,53)"/><text x="68.9645%" y="671.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (4 samples, 0.04%)</title><rect x="68.7145%" y="645" width="0.0429%" height="15" fill="rgb(239,9,52)"/><text x="68.9645%" y="655.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (4 samples, 0.04%)</title><rect x="68.7145%" y="629" width="0.0429%" height="15" fill="rgb(215,114,45)"/><text x="68.9645%" y="639.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (4 samples, 0.04%)</title><rect x="68.7145%" y="613" width="0.0429%" height="15" fill="rgb(208,118,9)"/><text x="68.9645%" y="623.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (4 samples, 0.04%)</title><rect x="68.7145%" y="597" width="0.0429%" height="15" fill="rgb(235,7,39)"/><text x="68.9645%" y="607.50"></text></g><g><title>syscall (4 samples, 0.04%)</title><rect x="68.7145%" y="581" width="0.0429%" height="15" fill="rgb(243,225,15)"/><text x="68.9645%" y="591.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="68.7145%" y="565" width="0.0429%" height="15" fill="rgb(225,216,18)"/><text x="68.9645%" y="575.50"></text></g><g><title>std::thread::yield_now (2 samples, 0.02%)</title><rect x="68.7574%" y="677" width="0.0214%" height="15" fill="rgb(233,36,38)"/><text x="69.0074%" y="687.50"></text></g><g><title>std::sys::unix::thread::Thread::yield_now (2 samples, 0.02%)</title><rect x="68.7574%" y="661" width="0.0214%" height="15" fill="rgb(239,88,23)"/><text x="69.0074%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,()&gt;&gt; (5 samples, 0.05%)</title><rect x="68.8003%" y="661" width="0.0536%" height="15" fill="rgb(219,181,35)"/><text x="69.0503%" y="671.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="68.8003%" y="645" width="0.0536%" height="15" fill="rgb(215,18,46)"/><text x="69.0503%" y="655.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (5 samples, 0.05%)</title><rect x="68.8003%" y="629" width="0.0536%" height="15" fill="rgb(241,38,11)"/><text x="69.0503%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (5 samples, 0.05%)</title><rect x="68.8003%" y="613" width="0.0536%" height="15" fill="rgb(248,169,45)"/><text x="69.0503%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (5 samples, 0.05%)</title><rect x="68.8003%" y="597" width="0.0536%" height="15" fill="rgb(239,50,49)"/><text x="69.0503%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (18 samples, 0.19%)</title><rect x="68.8539%" y="661" width="0.1930%" height="15" fill="rgb(231,96,31)"/><text x="69.1039%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (18 samples, 0.19%)</title><rect x="68.8539%" y="645" width="0.1930%" height="15" fill="rgb(224,193,37)"/><text x="69.1039%" y="655.50"></text></g><g><title>__sched_yield (4 samples, 0.04%)</title><rect x="69.0469%" y="629" width="0.0429%" height="15" fill="rgb(227,153,50)"/><text x="69.2969%" y="639.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="69.0469%" y="613" width="0.0429%" height="15" fill="rgb(249,228,3)"/><text x="69.2969%" y="623.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (15 samples, 0.16%)</title><rect x="69.1219%" y="613" width="0.1608%" height="15" fill="rgb(219,164,43)"/><text x="69.3719%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (15 samples, 0.16%)</title><rect x="69.1219%" y="597" width="0.1608%" height="15" fill="rgb(216,45,41)"/><text x="69.3719%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (15 samples, 0.16%)</title><rect x="69.1219%" y="581" width="0.1608%" height="15" fill="rgb(210,226,51)"/><text x="69.3719%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (58 samples, 0.62%)</title><rect x="69.3149%" y="549" width="0.6219%" height="15" fill="rgb(209,117,49)"/><text x="69.5649%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_load (58 samples, 0.62%)</title><rect x="69.3149%" y="533" width="0.6219%" height="15" fill="rgb(206,196,24)"/><text x="69.5649%" y="543.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (1,003 samples, 10.75%)</title><rect x="69.2934%" y="565" width="10.7537%" height="15" fill="rgb(253,218,3)"/><text x="69.5434%" y="575.50">&lt;parking_lot_cor..</text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (943 samples, 10.11%)</title><rect x="69.9367%" y="549" width="10.1104%" height="15" fill="rgb(252,166,2)"/><text x="70.1867%" y="559.50">parking_lot_cor..</text></g><g><title>syscall (943 samples, 10.11%)</title><rect x="69.9367%" y="533" width="10.1104%" height="15" fill="rgb(236,218,26)"/><text x="70.1867%" y="543.50">syscall</text></g><g><title>[unknown] (928 samples, 9.95%)</title><rect x="70.0976%" y="517" width="9.9496%" height="15" fill="rgb(254,84,19)"/><text x="70.3476%" y="527.50">[unknown]</text></g><g><title>[unknown] (886 samples, 9.50%)</title><rect x="70.5479%" y="501" width="9.4993%" height="15" fill="rgb(219,137,29)"/><text x="70.7979%" y="511.50">[unknown]</text></g><g><title>[unknown] (874 samples, 9.37%)</title><rect x="70.6765%" y="485" width="9.3706%" height="15" fill="rgb(227,47,52)"/><text x="70.9265%" y="495.50">[unknown]</text></g><g><title>[unknown] (848 samples, 9.09%)</title><rect x="70.9553%" y="469" width="9.0919%" height="15" fill="rgb(229,167,24)"/><text x="71.2053%" y="479.50">[unknown]</text></g><g><title>[unknown] (827 samples, 8.87%)</title><rect x="71.1804%" y="453" width="8.8667%" height="15" fill="rgb(233,164,1)"/><text x="71.4304%" y="463.50">[unknown]</text></g><g><title>[unknown] (764 samples, 8.19%)</title><rect x="71.8559%" y="437" width="8.1913%" height="15" fill="rgb(218,88,48)"/><text x="72.1059%" y="447.50">[unknown]</text></g><g><title>[unknown] (663 samples, 7.11%)</title><rect x="72.9388%" y="421" width="7.1084%" height="15" fill="rgb(226,214,24)"/><text x="73.1888%" y="431.50">[unknown]</text></g><g><title>[unknown] (618 samples, 6.63%)</title><rect x="73.4213%" y="405" width="6.6259%" height="15" fill="rgb(233,29,12)"/><text x="73.6713%" y="415.50">[unknown]</text></g><g><title>[unknown] (566 samples, 6.07%)</title><rect x="73.9788%" y="389" width="6.0684%" height="15" fill="rgb(219,120,34)"/><text x="74.2288%" y="399.50">[unknown]</text></g><g><title>[unknown] (427 samples, 4.58%)</title><rect x="75.4691%" y="373" width="4.5781%" height="15" fill="rgb(226,78,44)"/><text x="75.7191%" y="383.50">[unkn..</text></g><g><title>[unknown] (308 samples, 3.30%)</title><rect x="76.7449%" y="357" width="3.3022%" height="15" fill="rgb(240,15,48)"/><text x="76.9949%" y="367.50">[un..</text></g><g><title>[unknown] (229 samples, 2.46%)</title><rect x="77.5919%" y="341" width="2.4552%" height="15" fill="rgb(253,176,7)"/><text x="77.8419%" y="351.50">[u..</text></g><g><title>[unknown] (167 samples, 1.79%)</title><rect x="78.2567%" y="325" width="1.7905%" height="15" fill="rgb(206,166,28)"/><text x="78.5067%" y="335.50">[..</text></g><g><title>[unknown] (124 samples, 1.33%)</title><rect x="78.7177%" y="309" width="1.3295%" height="15" fill="rgb(241,53,51)"/><text x="78.9677%" y="319.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="80.0150%" y="293" width="0.0322%" height="15" fill="rgb(249,112,30)"/><text x="80.2650%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="80.0365%" y="277" width="0.0107%" height="15" fill="rgb(217,85,30)"/><text x="80.2865%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="80.0365%" y="261" width="0.0107%" height="15" fill="rgb(233,49,7)"/><text x="80.2865%" y="271.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.01%)</title><rect x="80.0472%" y="565" width="0.0107%" height="15" fill="rgb(234,109,9)"/><text x="80.2972%" y="575.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.01%)</title><rect x="80.0472%" y="549" width="0.0107%" height="15" fill="rgb(253,95,22)"/><text x="80.2972%" y="559.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="80.0472%" y="533" width="0.0107%" height="15" fill="rgb(233,176,25)"/><text x="80.2972%" y="543.50"></text></g><g><title>core::mem::swap (1 samples, 0.01%)</title><rect x="80.0472%" y="517" width="0.0107%" height="15" fill="rgb(236,33,39)"/><text x="80.2972%" y="527.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.01%)</title><rect x="80.0472%" y="501" width="0.0107%" height="15" fill="rgb(223,226,42)"/><text x="80.2972%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="80.0472%" y="485" width="0.0107%" height="15" fill="rgb(216,99,33)"/><text x="80.2972%" y="495.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (5 samples, 0.05%)</title><rect x="80.0579%" y="533" width="0.0536%" height="15" fill="rgb(235,84,23)"/><text x="80.3079%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (5 samples, 0.05%)</title><rect x="80.0579%" y="517" width="0.0536%" height="15" fill="rgb(232,2,27)"/><text x="80.3079%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (5 samples, 0.05%)</title><rect x="80.0579%" y="501" width="0.0536%" height="15" fill="rgb(241,23,22)"/><text x="80.3079%" y="511.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.06%)</title><rect x="80.0579%" y="565" width="0.0643%" height="15" fill="rgb(211,73,27)"/><text x="80.3079%" y="575.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal::{{closure}} (6 samples, 0.06%)</title><rect x="80.0579%" y="549" width="0.0643%" height="15" fill="rgb(235,109,49)"/><text x="80.3079%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.01%)</title><rect x="80.1115%" y="533" width="0.0107%" height="15" fill="rgb(230,99,29)"/><text x="80.3615%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="80.1115%" y="517" width="0.0107%" height="15" fill="rgb(245,199,7)"/><text x="80.3615%" y="527.50"></text></g><g><title>parking_lot_core::parking_lot::get_hashtable (1 samples, 0.01%)</title><rect x="80.1222%" y="549" width="0.0107%" height="15" fill="rgb(217,179,10)"/><text x="80.3722%" y="559.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (17 samples, 0.18%)</title><rect x="80.1222%" y="565" width="0.1823%" height="15" fill="rgb(254,99,47)"/><text x="80.3722%" y="575.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (16 samples, 0.17%)</title><rect x="80.1329%" y="549" width="0.1715%" height="15" fill="rgb(251,121,7)"/><text x="80.3829%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (15 samples, 0.16%)</title><rect x="80.1437%" y="533" width="0.1608%" height="15" fill="rgb(250,177,26)"/><text x="80.3937%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (15 samples, 0.16%)</title><rect x="80.1437%" y="517" width="0.1608%" height="15" fill="rgb(232,88,15)"/><text x="80.3937%" y="527.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (1,059 samples, 11.35%)</title><rect x="69.2827%" y="581" width="11.3541%" height="15" fill="rgb(251,54,54)"/><text x="69.5327%" y="591.50">parking_lot_core:..</text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (31 samples, 0.33%)</title><rect x="80.3045%" y="565" width="0.3324%" height="15" fill="rgb(208,177,15)"/><text x="80.5545%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (31 samples, 0.33%)</title><rect x="80.3045%" y="549" width="0.3324%" height="15" fill="rgb(205,97,32)"/><text x="80.5545%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_sub (31 samples, 0.33%)</title><rect x="80.3045%" y="533" width="0.3324%" height="15" fill="rgb(217,192,13)"/><text x="80.5545%" y="543.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (1,082 samples, 11.60%)</title><rect x="69.0469%" y="661" width="11.6007%" height="15" fill="rgb(215,163,41)"/><text x="69.2969%" y="671.50">tokio::loom::std:..</text></g><g><title>parking_lot::condvar::Condvar::wait (1,082 samples, 11.60%)</title><rect x="69.0469%" y="645" width="11.6007%" height="15" fill="rgb(246,83,29)"/><text x="69.2969%" y="655.50">parking_lot::cond..</text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (1,078 samples, 11.56%)</title><rect x="69.0897%" y="629" width="11.5578%" height="15" fill="rgb(219,2,45)"/><text x="69.3397%" y="639.50">parking_lot::cond..</text></g><g><title>parking_lot_core::parking_lot::park (1,060 samples, 11.36%)</title><rect x="69.2827%" y="613" width="11.3649%" height="15" fill="rgb(242,215,33)"/><text x="69.5327%" y="623.50">parking_lot_core:..</text></g><g><title>parking_lot_core::parking_lot::with_thread_data (1,060 samples, 11.36%)</title><rect x="69.2827%" y="597" width="11.3649%" height="15" fill="rgb(217,1,6)"/><text x="69.5327%" y="607.50">parking_lot_core:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="80.6369%" y="581" width="0.0107%" height="15" fill="rgb(207,85,52)"/><text x="80.8869%" y="591.50"></text></g><g><title>tokio::runtime::park::Inner::park_condvar (1,114 samples, 11.94%)</title><rect x="68.7788%" y="677" width="11.9438%" height="15" fill="rgb(231,171,19)"/><text x="69.0288%" y="687.50">tokio::runtime::pa..</text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (7 samples, 0.08%)</title><rect x="80.6476%" y="661" width="0.0751%" height="15" fill="rgb(207,128,4)"/><text x="80.8976%" y="671.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (7 samples, 0.08%)</title><rect x="80.6476%" y="645" width="0.0751%" height="15" fill="rgb(219,208,4)"/><text x="80.8976%" y="655.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (7 samples, 0.08%)</title><rect x="80.6476%" y="629" width="0.0751%" height="15" fill="rgb(235,161,42)"/><text x="80.8976%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (7 samples, 0.08%)</title><rect x="80.6476%" y="613" width="0.0751%" height="15" fill="rgb(247,218,18)"/><text x="80.8976%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (7 samples, 0.08%)</title><rect x="80.6476%" y="597" width="0.0751%" height="15" fill="rgb(232,114,51)"/><text x="80.8976%" y="607.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (1,773 samples, 19.01%)</title><rect x="62.0993%" y="709" width="19.0093%" height="15" fill="rgb(222,95,3)"/><text x="62.3493%" y="719.50">&lt;tokio::runtime::park::Parker ..</text></g><g><title>tokio::runtime::park::Inner::park (1,773 samples, 19.01%)</title><rect x="62.0993%" y="693" width="19.0093%" height="15" fill="rgb(240,65,29)"/><text x="62.3493%" y="703.50">tokio::runtime::park::Inner::p..</text></g><g><title>tokio::util::try_lock::TryLock&lt;T&gt;::try_lock (36 samples, 0.39%)</title><rect x="80.7226%" y="677" width="0.3860%" height="15" fill="rgb(249,209,20)"/><text x="80.9726%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (35 samples, 0.38%)</title><rect x="80.7334%" y="661" width="0.3753%" height="15" fill="rgb(241,48,37)"/><text x="80.9834%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (35 samples, 0.38%)</title><rect x="80.7334%" y="645" width="0.3753%" height="15" fill="rgb(230,140,42)"/><text x="80.9834%" y="655.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (11 samples, 0.12%)</title><rect x="81.1086%" y="709" width="0.1179%" height="15" fill="rgb(230,176,45)"/><text x="81.3586%" y="719.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (11 samples, 0.12%)</title><rect x="81.1086%" y="693" width="0.1179%" height="15" fill="rgb(245,112,21)"/><text x="81.3586%" y="703.50"></text></g><g><title>core::cell::BorrowRefMut::new (11 samples, 0.12%)</title><rect x="81.1086%" y="677" width="0.1179%" height="15" fill="rgb(207,183,35)"/><text x="81.3586%" y="687.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (5 samples, 0.05%)</title><rect x="81.1729%" y="661" width="0.0536%" height="15" fill="rgb(227,44,33)"/><text x="81.4229%" y="671.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (5 samples, 0.05%)</title><rect x="81.1729%" y="645" width="0.0536%" height="15" fill="rgb(246,120,21)"/><text x="81.4229%" y="655.50"></text></g><g><title>core::mem::replace (5 samples, 0.05%)</title><rect x="81.1729%" y="629" width="0.0536%" height="15" fill="rgb(235,57,52)"/><text x="81.4229%" y="639.50"></text></g><g><title>core::mem::swap (5 samples, 0.05%)</title><rect x="81.1729%" y="613" width="0.0536%" height="15" fill="rgb(238,84,10)"/><text x="81.4229%" y="623.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (5 samples, 0.05%)</title><rect x="81.1729%" y="597" width="0.0536%" height="15" fill="rgb(251,200,32)"/><text x="81.4229%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.05%)</title><rect x="81.1729%" y="581" width="0.0536%" height="15" fill="rgb(247,159,13)"/><text x="81.4229%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::expect (2 samples, 0.02%)</title><rect x="81.2265%" y="709" width="0.0214%" height="15" fill="rgb(238,64,4)"/><text x="81.4765%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;core::option::Option&lt;alloc::boxed::Box&lt;tokio::runtime::thread_pool::worker::Core&gt;&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="81.2480%" y="709" width="0.0214%" height="15" fill="rgb(221,131,51)"/><text x="81.4980%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (2 samples, 0.02%)</title><rect x="81.2480%" y="693" width="0.0214%" height="15" fill="rgb(242,5,29)"/><text x="81.4980%" y="703.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="81.2480%" y="677" width="0.0214%" height="15" fill="rgb(214,130,32)"/><text x="81.4980%" y="687.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.02%)</title><rect x="81.2480%" y="661" width="0.0214%" height="15" fill="rgb(244,210,16)"/><text x="81.4980%" y="671.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.02%)</title><rect x="81.2480%" y="645" width="0.0214%" height="15" fill="rgb(234,48,26)"/><text x="81.4980%" y="655.50"></text></g><g><title>core::mem::replace (2 samples, 0.02%)</title><rect x="81.2480%" y="629" width="0.0214%" height="15" fill="rgb(231,82,38)"/><text x="81.4980%" y="639.50"></text></g><g><title>core::mem::swap (2 samples, 0.02%)</title><rect x="81.2480%" y="613" width="0.0214%" height="15" fill="rgb(254,128,41)"/><text x="81.4980%" y="623.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.02%)</title><rect x="81.2480%" y="597" width="0.0214%" height="15" fill="rgb(212,73,49)"/><text x="81.4980%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="81.2480%" y="581" width="0.0214%" height="15" fill="rgb(205,62,54)"/><text x="81.4980%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::park::Parker&gt;&gt; (6 samples, 0.06%)</title><rect x="81.2694%" y="709" width="0.0643%" height="15" fill="rgb(228,0,8)"/><text x="81.5194%" y="719.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (1,813 samples, 19.44%)</title><rect x="62.0778%" y="725" width="19.4382%" height="15" fill="rgb(251,28,17)"/><text x="62.3278%" y="735.50">tokio::runtime::thread_pool::w..</text></g><g><title>core::result::Result&lt;T,E&gt;::expect (17 samples, 0.18%)</title><rect x="81.3338%" y="709" width="0.1823%" height="15" fill="rgb(238,105,27)"/><text x="81.5838%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::queue::Pointers&gt;&gt; (12 samples, 0.13%)</title><rect x="81.5268%" y="693" width="0.1287%" height="15" fill="rgb(237,216,33)"/><text x="81.7768%" y="703.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.13%)</title><rect x="81.5268%" y="677" width="0.1287%" height="15" fill="rgb(229,228,25)"/><text x="81.7768%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (12 samples, 0.13%)</title><rect x="81.5268%" y="661" width="0.1287%" height="15" fill="rgb(233,75,23)"/><text x="81.7768%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (12 samples, 0.13%)</title><rect x="81.5268%" y="645" width="0.1287%" height="15" fill="rgb(231,207,16)"/><text x="81.7768%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (12 samples, 0.13%)</title><rect x="81.5268%" y="629" width="0.1287%" height="15" fill="rgb(231,191,45)"/><text x="81.7768%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (7 samples, 0.08%)</title><rect x="81.6661%" y="645" width="0.0751%" height="15" fill="rgb(224,133,17)"/><text x="81.9161%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (7 samples, 0.08%)</title><rect x="81.6661%" y="629" width="0.0751%" height="15" fill="rgb(209,178,27)"/><text x="81.9161%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.01%)</title><rect x="81.7412%" y="629" width="0.0107%" height="15" fill="rgb(218,37,11)"/><text x="81.9912%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="81.7412%" y="613" width="0.0107%" height="15" fill="rgb(251,226,25)"/><text x="81.9912%" y="623.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::is_closed (23 samples, 0.25%)</title><rect x="81.5268%" y="709" width="0.2466%" height="15" fill="rgb(209,222,27)"/><text x="81.7768%" y="719.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (11 samples, 0.12%)</title><rect x="81.6554%" y="693" width="0.1179%" height="15" fill="rgb(238,22,21)"/><text x="81.9054%" y="703.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (11 samples, 0.12%)</title><rect x="81.6554%" y="677" width="0.1179%" height="15" fill="rgb(233,161,25)"/><text x="81.9054%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (11 samples, 0.12%)</title><rect x="81.6554%" y="661" width="0.1179%" height="15" fill="rgb(226,122,53)"/><text x="81.9054%" y="671.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (3 samples, 0.03%)</title><rect x="81.7412%" y="645" width="0.0322%" height="15" fill="rgb(220,123,17)"/><text x="81.9912%" y="655.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (2 samples, 0.02%)</title><rect x="81.7519%" y="629" width="0.0214%" height="15" fill="rgb(230,224,35)"/><text x="82.0019%" y="639.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (2 samples, 0.02%)</title><rect x="81.7519%" y="613" width="0.0214%" height="15" fill="rgb(246,83,8)"/><text x="82.0019%" y="623.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (2 samples, 0.02%)</title><rect x="81.7519%" y="597" width="0.0214%" height="15" fill="rgb(230,214,17)"/><text x="82.0019%" y="607.50"></text></g><g><title>core::hint::spin_loop (2 samples, 0.02%)</title><rect x="81.7519%" y="581" width="0.0214%" height="15" fill="rgb(222,97,18)"/><text x="82.0019%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (2 samples, 0.02%)</title><rect x="81.7519%" y="565" width="0.0214%" height="15" fill="rgb(206,79,1)"/><text x="82.0019%" y="575.50"></text></g><g><title>&lt;tokio::runtime::task::stack::TransferStack&lt;T&gt;::drain::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.11%)</title><rect x="81.7733%" y="693" width="0.1072%" height="15" fill="rgb(214,121,34)"/><text x="82.0233%" y="703.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (10 samples, 0.11%)</title><rect x="81.7733%" y="677" width="0.1072%" height="15" fill="rgb(249,199,46)"/><text x="82.0233%" y="687.50"></text></g><g><title>__rg_dealloc (2 samples, 0.02%)</title><rect x="81.8806%" y="629" width="0.0214%" height="15" fill="rgb(214,222,46)"/><text x="82.1306%" y="639.50"></text></g><g><title>_rjem_sdallocx (3 samples, 0.03%)</title><rect x="81.9020%" y="629" width="0.0322%" height="15" fill="rgb(248,168,30)"/><text x="82.1520%" y="639.50"></text></g><g><title>isfree (3 samples, 0.03%)</title><rect x="81.9020%" y="613" width="0.0322%" height="15" fill="rgb(226,14,28)"/><text x="82.1520%" y="623.50"></text></g><g><title>isdalloct (3 samples, 0.03%)</title><rect x="81.9020%" y="597" width="0.0322%" height="15" fill="rgb(253,123,1)"/><text x="82.1520%" y="607.50"></text></g><g><title>arena_sdalloc (3 samples, 0.03%)</title><rect x="81.9020%" y="581" width="0.0322%" height="15" fill="rgb(225,24,42)"/><text x="82.1520%" y="591.50"></text></g><g><title>tcache_dalloc_small (3 samples, 0.03%)</title><rect x="81.9020%" y="565" width="0.0322%" height="15" fill="rgb(216,161,37)"/><text x="82.1520%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Core&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::produce::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (4 samples, 0.04%)</title><rect x="81.9342%" y="565" width="0.0429%" height="15" fill="rgb(251,164,26)"/><text x="82.1842%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Scheduler&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (4 samples, 0.04%)</title><rect x="81.9342%" y="549" width="0.0429%" height="15" fill="rgb(219,177,3)"/><text x="82.1842%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (4 samples, 0.04%)</title><rect x="81.9342%" y="533" width="0.0429%" height="15" fill="rgb(222,65,0)"/><text x="82.1842%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (4 samples, 0.04%)</title><rect x="81.9342%" y="517" width="0.0429%" height="15" fill="rgb(223,69,54)"/><text x="82.1842%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (4 samples, 0.04%)</title><rect x="81.9342%" y="501" width="0.0429%" height="15" fill="rgb(235,30,27)"/><text x="82.1842%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt; (4 samples, 0.04%)</title><rect x="81.9342%" y="485" width="0.0429%" height="15" fill="rgb(220,183,50)"/><text x="82.1842%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="81.9342%" y="469" width="0.0429%" height="15" fill="rgb(248,198,15)"/><text x="82.1842%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4 samples, 0.04%)</title><rect x="81.9342%" y="453" width="0.0429%" height="15" fill="rgb(222,211,4)"/><text x="82.1842%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_sub (4 samples, 0.04%)</title><rect x="81.9342%" y="437" width="0.0429%" height="15" fill="rgb(214,102,34)"/><text x="82.1842%" y="447.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::dealloc (10 samples, 0.11%)</title><rect x="81.8806%" y="645" width="0.1072%" height="15" fill="rgb(245,92,5)"/><text x="82.1306%" y="655.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (5 samples, 0.05%)</title><rect x="81.9342%" y="629" width="0.0536%" height="15" fill="rgb(252,72,51)"/><text x="82.1842%" y="639.50"></text></g><g><title>core::mem::drop (5 samples, 0.05%)</title><rect x="81.9342%" y="613" width="0.0536%" height="15" fill="rgb(252,208,19)"/><text x="82.1842%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::produce::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (5 samples, 0.05%)</title><rect x="81.9342%" y="597" width="0.0536%" height="15" fill="rgb(211,69,7)"/><text x="82.1842%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::produce::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (5 samples, 0.05%)</title><rect x="81.9342%" y="581" width="0.0536%" height="15" fill="rgb(211,27,16)"/><text x="82.1842%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Trailer&gt; (1 samples, 0.01%)</title><rect x="81.9771%" y="565" width="0.0107%" height="15" fill="rgb(219,216,14)"/><text x="82.2271%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="81.9771%" y="549" width="0.0107%" height="15" fill="rgb(219,71,8)"/><text x="82.2271%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="81.9771%" y="533" width="0.0107%" height="15" fill="rgb(223,170,53)"/><text x="82.2271%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (1 samples, 0.01%)</title><rect x="81.9771%" y="517" width="0.0107%" height="15" fill="rgb(246,21,26)"/><text x="82.2271%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (19 samples, 0.20%)</title><rect x="81.8806%" y="693" width="0.2037%" height="15" fill="rgb(248,20,46)"/><text x="82.1306%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (19 samples, 0.20%)</title><rect x="81.8806%" y="677" width="0.2037%" height="15" fill="rgb(252,94,11)"/><text x="82.1306%" y="687.50"></text></g><g><title>&lt;tokio::runtime::task::Task&lt;S&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.20%)</title><rect x="81.8806%" y="661" width="0.2037%" height="15" fill="rgb(236,163,8)"/><text x="82.1306%" y="671.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (9 samples, 0.10%)</title><rect x="81.9878%" y="645" width="0.0965%" height="15" fill="rgb(217,221,45)"/><text x="82.2378%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (9 samples, 0.10%)</title><rect x="81.9878%" y="629" width="0.0965%" height="15" fill="rgb(238,38,17)"/><text x="82.2378%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_sub (9 samples, 0.10%)</title><rect x="81.9878%" y="613" width="0.0965%" height="15" fill="rgb(242,210,23)"/><text x="82.2378%" y="623.50"></text></g><g><title>tokio::runtime::task::stack::TransferStack&lt;T&gt;::drain (38 samples, 0.41%)</title><rect x="82.0843%" y="693" width="0.4074%" height="15" fill="rgb(250,86,53)"/><text x="82.3343%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::swap (38 samples, 0.41%)</title><rect x="82.0843%" y="677" width="0.4074%" height="15" fill="rgb(223,168,25)"/><text x="82.3343%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_swap (38 samples, 0.41%)</title><rect x="82.0843%" y="661" width="0.4074%" height="15" fill="rgb(251,189,4)"/><text x="82.3343%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::maintenance (129 samples, 1.38%)</title><rect x="81.5160%" y="725" width="1.3831%" height="15" fill="rgb(245,19,28)"/><text x="81.7660%" y="735.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::drain_pending_drop (105 samples, 1.13%)</title><rect x="81.7733%" y="709" width="1.1258%" height="15" fill="rgb(207,10,34)"/><text x="82.0233%" y="719.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Worker::remote (38 samples, 0.41%)</title><rect x="82.4917%" y="693" width="0.4074%" height="15" fill="rgb(235,153,31)"/><text x="82.7417%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="82.9098%" y="693" width="0.0107%" height="15" fill="rgb(228,72,37)"/><text x="83.1598%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="82.9098%" y="677" width="0.0107%" height="15" fill="rgb(215,15,16)"/><text x="83.1598%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;usize&gt;&gt;&gt; (10 samples, 0.11%)</title><rect x="82.9206%" y="693" width="0.1072%" height="15" fill="rgb(250,119,29)"/><text x="83.1706%" y="703.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.11%)</title><rect x="82.9206%" y="677" width="0.1072%" height="15" fill="rgb(214,59,1)"/><text x="83.1706%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (10 samples, 0.11%)</title><rect x="82.9206%" y="661" width="0.1072%" height="15" fill="rgb(223,109,25)"/><text x="83.1706%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (10 samples, 0.11%)</title><rect x="82.9206%" y="645" width="0.1072%" height="15" fill="rgb(230,198,22)"/><text x="83.1706%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (10 samples, 0.11%)</title><rect x="82.9206%" y="629" width="0.1072%" height="15" fill="rgb(245,184,46)"/><text x="83.1706%" y="639.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (7 samples, 0.08%)</title><rect x="83.0278%" y="693" width="0.0751%" height="15" fill="rgb(253,73,16)"/><text x="83.2778%" y="703.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (7 samples, 0.08%)</title><rect x="83.0278%" y="677" width="0.0751%" height="15" fill="rgb(206,94,45)"/><text x="83.2778%" y="687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (7 samples, 0.08%)</title><rect x="83.0278%" y="661" width="0.0751%" height="15" fill="rgb(236,83,27)"/><text x="83.2778%" y="671.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (6 samples, 0.06%)</title><rect x="83.0385%" y="645" width="0.0643%" height="15" fill="rgb(220,196,8)"/><text x="83.2885%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (6 samples, 0.06%)</title><rect x="83.0385%" y="629" width="0.0643%" height="15" fill="rgb(254,185,14)"/><text x="83.2885%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (8 samples, 0.09%)</title><rect x="83.1135%" y="645" width="0.0858%" height="15" fill="rgb(226,50,22)"/><text x="83.3635%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (8 samples, 0.09%)</title><rect x="83.1135%" y="629" width="0.0858%" height="15" fill="rgb(253,147,0)"/><text x="83.3635%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.01%)</title><rect x="83.1993%" y="629" width="0.0107%" height="15" fill="rgb(252,46,33)"/><text x="83.4493%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="83.1993%" y="613" width="0.0107%" height="15" fill="rgb(242,22,54)"/><text x="83.4493%" y="623.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_from_parked (30 samples, 0.32%)</title><rect x="82.8991%" y="725" width="0.3216%" height="15" fill="rgb(223,178,32)"/><text x="83.1491%" y="735.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::is_parked (30 samples, 0.32%)</title><rect x="82.8991%" y="709" width="0.3216%" height="15" fill="rgb(214,106,53)"/><text x="83.1491%" y="719.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (11 samples, 0.12%)</title><rect x="83.1028%" y="693" width="0.1179%" height="15" fill="rgb(232,65,50)"/><text x="83.3528%" y="703.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (11 samples, 0.12%)</title><rect x="83.1028%" y="677" width="0.1179%" height="15" fill="rgb(231,110,28)"/><text x="83.3528%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (11 samples, 0.12%)</title><rect x="83.1028%" y="661" width="0.1179%" height="15" fill="rgb(216,71,40)"/><text x="83.3528%" y="671.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (2 samples, 0.02%)</title><rect x="83.1993%" y="645" width="0.0214%" height="15" fill="rgb(229,89,53)"/><text x="83.4493%" y="655.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (1 samples, 0.01%)</title><rect x="83.2100%" y="629" width="0.0107%" height="15" fill="rgb(210,124,14)"/><text x="83.4600%" y="639.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (1 samples, 0.01%)</title><rect x="83.2100%" y="613" width="0.0107%" height="15" fill="rgb(236,213,6)"/><text x="83.4600%" y="623.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (1 samples, 0.01%)</title><rect x="83.2100%" y="597" width="0.0107%" height="15" fill="rgb(228,41,5)"/><text x="83.4600%" y="607.50"></text></g><g><title>core::hint::spin_loop (1 samples, 0.01%)</title><rect x="83.2100%" y="581" width="0.0107%" height="15" fill="rgb(221,167,25)"/><text x="83.4600%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.01%)</title><rect x="83.2100%" y="565" width="0.0107%" height="15" fill="rgb(228,144,37)"/><text x="83.4600%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.02%)</title><rect x="83.2315%" y="693" width="0.0214%" height="15" fill="rgb(227,189,38)"/><text x="83.4815%" y="703.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="83.2422%" y="677" width="0.0107%" height="15" fill="rgb(218,8,2)"/><text x="83.4922%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;usize&gt;&gt;&gt; (23 samples, 0.25%)</title><rect x="83.2529%" y="693" width="0.2466%" height="15" fill="rgb(209,61,28)"/><text x="83.5029%" y="703.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.25%)</title><rect x="83.2529%" y="677" width="0.2466%" height="15" fill="rgb(233,140,39)"/><text x="83.5029%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (23 samples, 0.25%)</title><rect x="83.2529%" y="661" width="0.2466%" height="15" fill="rgb(251,66,48)"/><text x="83.5029%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (22 samples, 0.24%)</title><rect x="83.2636%" y="645" width="0.2359%" height="15" fill="rgb(210,44,45)"/><text x="83.5136%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (22 samples, 0.24%)</title><rect x="83.2636%" y="629" width="0.2359%" height="15" fill="rgb(214,136,46)"/><text x="83.5136%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (12 samples, 0.13%)</title><rect x="83.4995%" y="645" width="0.1287%" height="15" fill="rgb(207,130,50)"/><text x="83.7495%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (12 samples, 0.13%)</title><rect x="83.4995%" y="629" width="0.1287%" height="15" fill="rgb(228,102,49)"/><text x="83.7495%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (1 samples, 0.01%)</title><rect x="83.6389%" y="629" width="0.0107%" height="15" fill="rgb(253,55,1)"/><text x="83.8889%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="83.6389%" y="613" width="0.0107%" height="15" fill="rgb(238,222,9)"/><text x="83.8889%" y="623.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (16 samples, 0.17%)</title><rect x="83.4995%" y="693" width="0.1715%" height="15" fill="rgb(246,99,6)"/><text x="83.7495%" y="703.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (16 samples, 0.17%)</title><rect x="83.4995%" y="677" width="0.1715%" height="15" fill="rgb(219,110,26)"/><text x="83.7495%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (16 samples, 0.17%)</title><rect x="83.4995%" y="661" width="0.1715%" height="15" fill="rgb(239,160,33)"/><text x="83.7495%" y="671.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (4 samples, 0.04%)</title><rect x="83.6282%" y="645" width="0.0429%" height="15" fill="rgb(220,202,23)"/><text x="83.8782%" y="655.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (2 samples, 0.02%)</title><rect x="83.6496%" y="629" width="0.0214%" height="15" fill="rgb(208,80,26)"/><text x="83.8996%" y="639.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (2 samples, 0.02%)</title><rect x="83.6496%" y="613" width="0.0214%" height="15" fill="rgb(243,85,7)"/><text x="83.8996%" y="623.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (2 samples, 0.02%)</title><rect x="83.6496%" y="597" width="0.0214%" height="15" fill="rgb(228,77,47)"/><text x="83.8996%" y="607.50"></text></g><g><title>core::hint::spin_loop (2 samples, 0.02%)</title><rect x="83.6496%" y="581" width="0.0214%" height="15" fill="rgb(212,226,8)"/><text x="83.8996%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (2 samples, 0.02%)</title><rect x="83.6496%" y="565" width="0.0214%" height="15" fill="rgb(241,120,54)"/><text x="83.8996%" y="575.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::transition_worker_to_parked (47 samples, 0.50%)</title><rect x="83.2315%" y="709" width="0.5039%" height="15" fill="rgb(226,80,16)"/><text x="83.4815%" y="719.50"></text></g><g><title>tokio::runtime::thread_pool::idle::State::dec_num_unparked (6 samples, 0.06%)</title><rect x="83.6711%" y="693" width="0.0643%" height="15" fill="rgb(240,76,13)"/><text x="83.9211%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (6 samples, 0.06%)</title><rect x="83.6711%" y="677" width="0.0643%" height="15" fill="rgb(252,74,8)"/><text x="83.9211%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_sub (6 samples, 0.06%)</title><rect x="83.6711%" y="661" width="0.0643%" height="15" fill="rgb(244,155,2)"/><text x="83.9211%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="83.7568%" y="693" width="0.0107%" height="15" fill="rgb(215,81,35)"/><text x="84.0068%" y="703.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::is_empty (1 samples, 0.01%)</title><rect x="83.7676%" y="693" width="0.0107%" height="15" fill="rgb(206,55,2)"/><text x="84.0176%" y="703.50"></text></g><g><title>tokio::runtime::queue::Inner&lt;T&gt;::is_empty (1 samples, 0.01%)</title><rect x="83.7676%" y="677" width="0.0107%" height="15" fill="rgb(231,2,34)"/><text x="84.0176%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicU16::load (1 samples, 0.01%)</title><rect x="83.7676%" y="661" width="0.0107%" height="15" fill="rgb(242,176,48)"/><text x="84.0176%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="83.7676%" y="645" width="0.0107%" height="15" fill="rgb(249,31,36)"/><text x="84.0176%" y="655.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (1 samples, 0.01%)</title><rect x="83.7783%" y="677" width="0.0107%" height="15" fill="rgb(205,18,17)"/><text x="84.0283%" y="687.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (1 samples, 0.01%)</title><rect x="83.7783%" y="661" width="0.0107%" height="15" fill="rgb(254,130,5)"/><text x="84.0283%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (1 samples, 0.01%)</title><rect x="83.7783%" y="645" width="0.0107%" height="15" fill="rgb(229,42,45)"/><text x="84.0283%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_swap (1 samples, 0.01%)</title><rect x="83.7783%" y="629" width="0.0107%" height="15" fill="rgb(245,95,25)"/><text x="84.0283%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.01%)</title><rect x="83.7890%" y="613" width="0.0107%" height="15" fill="rgb(249,193,38)"/><text x="84.0390%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="83.7890%" y="597" width="0.0107%" height="15" fill="rgb(241,140,43)"/><text x="84.0390%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.01%)</title><rect x="83.7997%" y="597" width="0.0107%" height="15" fill="rgb(245,78,48)"/><text x="84.0497%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="83.7997%" y="581" width="0.0107%" height="15" fill="rgb(214,92,39)"/><text x="84.0497%" y="591.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park (2,036 samples, 21.83%)</title><rect x="61.9921%" y="741" width="21.8291%" height="15" fill="rgb(211,189,14)"/><text x="62.2421%" y="751.50">tokio::runtime::thread_pool::worke..</text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_to_parked (56 samples, 0.60%)</title><rect x="83.2208%" y="725" width="0.6004%" height="15" fill="rgb(218,7,24)"/><text x="83.4708%" y="735.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_if_work_pending (8 samples, 0.09%)</title><rect x="83.7354%" y="709" width="0.0858%" height="15" fill="rgb(224,200,49)"/><text x="83.9854%" y="719.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (4 samples, 0.04%)</title><rect x="83.7783%" y="693" width="0.0429%" height="15" fill="rgb(218,210,14)"/><text x="84.0283%" y="703.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::worker_to_notify (3 samples, 0.03%)</title><rect x="83.7890%" y="677" width="0.0322%" height="15" fill="rgb(234,142,31)"/><text x="84.0390%" y="687.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (3 samples, 0.03%)</title><rect x="83.7890%" y="661" width="0.0322%" height="15" fill="rgb(227,165,2)"/><text x="84.0390%" y="671.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (3 samples, 0.03%)</title><rect x="83.7890%" y="645" width="0.0322%" height="15" fill="rgb(232,44,46)"/><text x="84.0390%" y="655.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (3 samples, 0.03%)</title><rect x="83.7890%" y="629" width="0.0322%" height="15" fill="rgb(236,149,47)"/><text x="84.0390%" y="639.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (2 samples, 0.02%)</title><rect x="83.7997%" y="613" width="0.0214%" height="15" fill="rgb(227,45,31)"/><text x="84.0497%" y="623.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (1 samples, 0.01%)</title><rect x="83.8104%" y="597" width="0.0107%" height="15" fill="rgb(240,176,51)"/><text x="84.0604%" y="607.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (1 samples, 0.01%)</title><rect x="83.8104%" y="581" width="0.0107%" height="15" fill="rgb(249,146,41)"/><text x="84.0604%" y="591.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (1 samples, 0.01%)</title><rect x="83.8104%" y="565" width="0.0107%" height="15" fill="rgb(213,208,4)"/><text x="84.0604%" y="575.50"></text></g><g><title>core::hint::spin_loop (1 samples, 0.01%)</title><rect x="83.8104%" y="549" width="0.0107%" height="15" fill="rgb(245,84,36)"/><text x="84.0604%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.01%)</title><rect x="83.8104%" y="533" width="0.0107%" height="15" fill="rgb(254,84,18)"/><text x="84.0604%" y="543.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (3 samples, 0.03%)</title><rect x="83.8426%" y="693" width="0.0322%" height="15" fill="rgb(225,38,54)"/><text x="84.0926%" y="703.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (3 samples, 0.03%)</title><rect x="83.8426%" y="677" width="0.0322%" height="15" fill="rgb(246,50,30)"/><text x="84.0926%" y="687.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (3 samples, 0.03%)</title><rect x="83.8426%" y="661" width="0.0322%" height="15" fill="rgb(246,148,9)"/><text x="84.0926%" y="671.50"></text></g><g><title>syscall (3 samples, 0.03%)</title><rect x="83.8426%" y="645" width="0.0322%" height="15" fill="rgb(223,75,4)"/><text x="84.0926%" y="655.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="83.8426%" y="629" width="0.0322%" height="15" fill="rgb(239,148,41)"/><text x="84.0926%" y="639.50"></text></g><g><title>tokio::coop::CURRENT::__getit (1 samples, 0.01%)</title><rect x="83.8962%" y="661" width="0.0107%" height="15" fill="rgb(205,195,3)"/><text x="84.1462%" y="671.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="83.8962%" y="645" width="0.0107%" height="15" fill="rgb(254,161,1)"/><text x="84.1462%" y="655.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="83.8962%" y="629" width="0.0107%" height="15" fill="rgb(211,229,8)"/><text x="84.1462%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="83.8962%" y="613" width="0.0107%" height="15" fill="rgb(220,97,9)"/><text x="84.1462%" y="623.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.02%)</title><rect x="83.9069%" y="645" width="0.0214%" height="15" fill="rgb(240,218,8)"/><text x="84.1569%" y="655.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.02%)</title><rect x="83.9069%" y="629" width="0.0214%" height="15" fill="rgb(250,44,0)"/><text x="84.1569%" y="639.50"></text></g><g><title>core::mem::replace (2 samples, 0.02%)</title><rect x="83.9069%" y="613" width="0.0214%" height="15" fill="rgb(236,41,53)"/><text x="84.1569%" y="623.50"></text></g><g><title>core::mem::swap (2 samples, 0.02%)</title><rect x="83.9069%" y="597" width="0.0214%" height="15" fill="rgb(218,227,13)"/><text x="84.1569%" y="607.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (2 samples, 0.02%)</title><rect x="83.9069%" y="581" width="0.0214%" height="15" fill="rgb(217,94,32)"/><text x="84.1569%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="83.9069%" y="565" width="0.0214%" height="15" fill="rgb(213,217,12)"/><text x="84.1569%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::coop::with_budget::ResetGuard&gt; (3 samples, 0.03%)</title><rect x="83.9284%" y="645" width="0.0322%" height="15" fill="rgb(229,13,46)"/><text x="84.1784%" y="655.50"></text></g><g><title>&lt;tokio::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="83.9284%" y="629" width="0.0322%" height="15" fill="rgb(243,139,5)"/><text x="84.1784%" y="639.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (3 samples, 0.03%)</title><rect x="83.9284%" y="613" width="0.0322%" height="15" fill="rgb(249,38,45)"/><text x="84.1784%" y="623.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (3 samples, 0.03%)</title><rect x="83.9284%" y="597" width="0.0322%" height="15" fill="rgb(216,70,11)"/><text x="84.1784%" y="607.50"></text></g><g><title>core::mem::replace (3 samples, 0.03%)</title><rect x="83.9284%" y="581" width="0.0322%" height="15" fill="rgb(253,101,25)"/><text x="84.1784%" y="591.50"></text></g><g><title>core::mem::swap (3 samples, 0.03%)</title><rect x="83.9284%" y="565" width="0.0322%" height="15" fill="rgb(207,197,30)"/><text x="84.1784%" y="575.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (3 samples, 0.03%)</title><rect x="83.9284%" y="549" width="0.0322%" height="15" fill="rgb(238,87,13)"/><text x="84.1784%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.03%)</title><rect x="83.9284%" y="533" width="0.0322%" height="15" fill="rgb(215,155,8)"/><text x="84.1784%" y="543.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (5 samples, 0.05%)</title><rect x="84.0356%" y="629" width="0.0536%" height="15" fill="rgb(239,166,38)"/><text x="84.2856%" y="639.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (5 samples, 0.05%)</title><rect x="84.0356%" y="613" width="0.0536%" height="15" fill="rgb(240,194,35)"/><text x="84.2856%" y="623.50"></text></g><g><title>core::cell::BorrowRefMut::new (5 samples, 0.05%)</title><rect x="84.0356%" y="597" width="0.0536%" height="15" fill="rgb(219,10,44)"/><text x="84.2856%" y="607.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.01%)</title><rect x="84.0785%" y="581" width="0.0107%" height="15" fill="rgb(251,220,35)"/><text x="84.3285%" y="591.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.01%)</title><rect x="84.0785%" y="565" width="0.0107%" height="15" fill="rgb(218,117,13)"/><text x="84.3285%" y="575.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="84.0785%" y="549" width="0.0107%" height="15" fill="rgb(221,213,40)"/><text x="84.3285%" y="559.50"></text></g><g><title>core::mem::swap (1 samples, 0.01%)</title><rect x="84.0785%" y="533" width="0.0107%" height="15" fill="rgb(251,224,35)"/><text x="84.3285%" y="543.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.01%)</title><rect x="84.0785%" y="517" width="0.0107%" height="15" fill="rgb(241,33,39)"/><text x="84.3285%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="84.0785%" y="501" width="0.0107%" height="15" fill="rgb(222,74,17)"/><text x="84.3285%" y="511.50"></text></g><g><title>tokio::coop::has_budget_remaining (1 samples, 0.01%)</title><rect x="84.0892%" y="629" width="0.0107%" height="15" fill="rgb(225,103,0)"/><text x="84.3392%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="84.0892%" y="613" width="0.0107%" height="15" fill="rgb(240,0,12)"/><text x="84.3392%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="84.0892%" y="597" width="0.0107%" height="15" fill="rgb(233,213,37)"/><text x="84.3392%" y="607.50"></text></g><g><title>tokio::coop::CURRENT::__getit (1 samples, 0.01%)</title><rect x="84.0892%" y="581" width="0.0107%" height="15" fill="rgb(225,84,52)"/><text x="84.3392%" y="591.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="84.0892%" y="565" width="0.0107%" height="15" fill="rgb(247,160,51)"/><text x="84.3392%" y="575.50"></text></g><g><title>[libc-2.31.so] (15 samples, 0.16%)</title><rect x="84.3465%" y="581" width="0.1608%" height="15" fill="rgb(244,60,51)"/><text x="84.5965%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="84.5073%" y="581" width="0.0107%" height="15" fill="rgb(233,114,7)"/><text x="84.7573%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="84.5073%" y="565" width="0.0107%" height="15" fill="rgb(246,136,16)"/><text x="84.7573%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="84.5073%" y="549" width="0.0107%" height="15" fill="rgb(243,114,45)"/><text x="84.7573%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="84.5073%" y="533" width="0.0107%" height="15" fill="rgb(247,183,43)"/><text x="84.7573%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="84.5073%" y="517" width="0.0107%" height="15" fill="rgb(251,210,42)"/><text x="84.7573%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="84.5073%" y="501" width="0.0107%" height="15" fill="rgb(221,88,35)"/><text x="84.7573%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="84.5073%" y="485" width="0.0107%" height="15" fill="rgb(242,21,20)"/><text x="84.7573%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="84.5073%" y="469" width="0.0107%" height="15" fill="rgb(233,226,36)"/><text x="84.7573%" y="479.50"></text></g><g><title>__rust_probestack (2 samples, 0.02%)</title><rect x="84.5181%" y="581" width="0.0214%" height="15" fill="rgb(243,189,34)"/><text x="84.7681%" y="591.50"></text></g><g><title>__rg_dealloc (1 samples, 0.01%)</title><rect x="84.5502%" y="565" width="0.0107%" height="15" fill="rgb(207,145,50)"/><text x="84.8002%" y="575.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.01%)</title><rect x="84.5502%" y="549" width="0.0107%" height="15" fill="rgb(242,1,50)"/><text x="84.8002%" y="559.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="84.5610%" y="565" width="0.0107%" height="15" fill="rgb(231,65,32)"/><text x="84.8110%" y="575.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.02%)</title><rect x="84.5717%" y="565" width="0.0214%" height="15" fill="rgb(208,68,49)"/><text x="84.8217%" y="575.50"></text></g><g><title>isfree (1 samples, 0.01%)</title><rect x="84.5824%" y="549" width="0.0107%" height="15" fill="rgb(253,54,49)"/><text x="84.8324%" y="559.50"></text></g><g><title>isdalloct (1 samples, 0.01%)</title><rect x="84.5824%" y="533" width="0.0107%" height="15" fill="rgb(245,186,24)"/><text x="84.8324%" y="543.50"></text></g><g><title>arena_sdalloc (1 samples, 0.01%)</title><rect x="84.5824%" y="517" width="0.0107%" height="15" fill="rgb(209,2,41)"/><text x="84.8324%" y="527.50"></text></g><g><title>tcache_dalloc_small (1 samples, 0.01%)</title><rect x="84.5824%" y="501" width="0.0107%" height="15" fill="rgb(242,208,54)"/><text x="84.8324%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;(),tokio::runtime::task::error::JoinError&gt;&gt; (1 samples, 0.01%)</title><rect x="84.5931%" y="565" width="0.0107%" height="15" fill="rgb(225,9,51)"/><text x="84.8431%" y="575.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (2 samples, 0.02%)</title><rect x="84.6038%" y="565" width="0.0214%" height="15" fill="rgb(207,207,25)"/><text x="84.8538%" y="575.50"></text></g><g><title>core::mem::drop (2 samples, 0.02%)</title><rect x="84.6038%" y="549" width="0.0214%" height="15" fill="rgb(253,96,18)"/><text x="84.8538%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Send&gt;::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="84.6038%" y="533" width="0.0214%" height="15" fill="rgb(252,215,20)"/><text x="84.8538%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Send&gt;::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="84.6038%" y="517" width="0.0214%" height="15" fill="rgb(245,227,26)"/><text x="84.8538%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Core&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Send&gt;::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="84.6038%" y="501" width="0.0214%" height="15" fill="rgb(241,208,0)"/><text x="84.8538%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Scheduler&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="84.6038%" y="485" width="0.0214%" height="15" fill="rgb(224,130,10)"/><text x="84.8538%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="84.6038%" y="469" width="0.0214%" height="15" fill="rgb(237,29,0)"/><text x="84.8538%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="84.6038%" y="453" width="0.0214%" height="15" fill="rgb(219,27,41)"/><text x="84.8538%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="84.6038%" y="437" width="0.0214%" height="15" fill="rgb(245,101,19)"/><text x="84.8538%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt; (2 samples, 0.02%)</title><rect x="84.6038%" y="421" width="0.0214%" height="15" fill="rgb(243,44,37)"/><text x="84.8538%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="84.6038%" y="405" width="0.0214%" height="15" fill="rgb(228,213,43)"/><text x="84.8538%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.02%)</title><rect x="84.6038%" y="389" width="0.0214%" height="15" fill="rgb(219,163,21)"/><text x="84.8538%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.02%)</title><rect x="84.6038%" y="373" width="0.0214%" height="15" fill="rgb(234,86,24)"/><text x="84.8538%" y="383.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (2 samples, 0.02%)</title><rect x="84.6360%" y="453" width="0.0214%" height="15" fill="rgb(225,10,24)"/><text x="84.8860%" y="463.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (2 samples, 0.02%)</title><rect x="84.6360%" y="437" width="0.0214%" height="15" fill="rgb(218,109,7)"/><text x="84.8860%" y="447.50"></text></g><g><title>core::cell::BorrowRefMut::new (2 samples, 0.02%)</title><rect x="84.6360%" y="421" width="0.0214%" height="15" fill="rgb(210,20,26)"/><text x="84.8860%" y="431.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (3 samples, 0.03%)</title><rect x="84.6360%" y="485" width="0.0322%" height="15" fill="rgb(216,18,1)"/><text x="84.8860%" y="495.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::release::{{closure}} (3 samples, 0.03%)</title><rect x="84.6360%" y="469" width="0.0322%" height="15" fill="rgb(206,163,23)"/><text x="84.8860%" y="479.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (1 samples, 0.01%)</title><rect x="84.6574%" y="453" width="0.0107%" height="15" fill="rgb(229,150,31)"/><text x="84.9074%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::queue::Pointers&gt;&gt; (2 samples, 0.02%)</title><rect x="84.6682%" y="469" width="0.0214%" height="15" fill="rgb(231,10,5)"/><text x="84.9182%" y="479.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="84.6682%" y="453" width="0.0214%" height="15" fill="rgb(250,40,50)"/><text x="84.9182%" y="463.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (2 samples, 0.02%)</title><rect x="84.6682%" y="437" width="0.0214%" height="15" fill="rgb(217,119,7)"/><text x="84.9182%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (2 samples, 0.02%)</title><rect x="84.6682%" y="421" width="0.0214%" height="15" fill="rgb(245,214,40)"/><text x="84.9182%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.02%)</title><rect x="84.6682%" y="405" width="0.0214%" height="15" fill="rgb(216,187,1)"/><text x="84.9182%" y="415.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::is_closed (6 samples, 0.06%)</title><rect x="84.6682%" y="485" width="0.0643%" height="15" fill="rgb(237,146,21)"/><text x="84.9182%" y="495.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (4 samples, 0.04%)</title><rect x="84.6896%" y="469" width="0.0429%" height="15" fill="rgb(210,174,47)"/><text x="84.9396%" y="479.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (4 samples, 0.04%)</title><rect x="84.6896%" y="453" width="0.0429%" height="15" fill="rgb(218,111,39)"/><text x="84.9396%" y="463.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (4 samples, 0.04%)</title><rect x="84.6896%" y="437" width="0.0429%" height="15" fill="rgb(224,95,19)"/><text x="84.9396%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (4 samples, 0.04%)</title><rect x="84.6896%" y="421" width="0.0429%" height="15" fill="rgb(234,15,38)"/><text x="84.9396%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (4 samples, 0.04%)</title><rect x="84.6896%" y="405" width="0.0429%" height="15" fill="rgb(246,56,12)"/><text x="84.9396%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::compare_exchange (2 samples, 0.02%)</title><rect x="84.7325%" y="469" width="0.0214%" height="15" fill="rgb(247,16,17)"/><text x="84.9825%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.02%)</title><rect x="84.7325%" y="453" width="0.0214%" height="15" fill="rgb(215,151,11)"/><text x="84.9825%" y="463.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::release (13 samples, 0.14%)</title><rect x="84.6253%" y="549" width="0.1394%" height="15" fill="rgb(225,16,24)"/><text x="84.8753%" y="559.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (13 samples, 0.14%)</title><rect x="84.6253%" y="533" width="0.1394%" height="15" fill="rgb(217,117,5)"/><text x="84.8753%" y="543.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::release::{{closure}} (13 samples, 0.14%)</title><rect x="84.6253%" y="517" width="0.1394%" height="15" fill="rgb(246,187,53)"/><text x="84.8753%" y="527.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::release (13 samples, 0.14%)</title><rect x="84.6253%" y="501" width="0.1394%" height="15" fill="rgb(241,71,40)"/><text x="84.8753%" y="511.50"></text></g><g><title>tokio::runtime::task::stack::TransferStack&lt;T&gt;::push (3 samples, 0.03%)</title><rect x="84.7325%" y="485" width="0.0322%" height="15" fill="rgb(231,67,39)"/><text x="84.9825%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.01%)</title><rect x="84.7539%" y="469" width="0.0107%" height="15" fill="rgb(222,120,24)"/><text x="85.0039%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="84.7539%" y="453" width="0.0107%" height="15" fill="rgb(248,3,3)"/><text x="85.0039%" y="463.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (25 samples, 0.27%)</title><rect x="84.5395%" y="581" width="0.2680%" height="15" fill="rgb(228,218,5)"/><text x="84.7895%" y="591.50"></text></g><g><title>tokio::runtime::task::harness::SchedulerView&lt;S&gt;::transition_to_terminal (17 samples, 0.18%)</title><rect x="84.6253%" y="565" width="0.1823%" height="15" fill="rgb(212,202,43)"/><text x="84.8753%" y="575.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_terminal (4 samples, 0.04%)</title><rect x="84.7647%" y="549" width="0.0429%" height="15" fill="rgb(235,183,2)"/><text x="85.0147%" y="559.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update (4 samples, 0.04%)</title><rect x="84.7647%" y="533" width="0.0429%" height="15" fill="rgb(230,165,10)"/><text x="85.0147%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (4 samples, 0.04%)</title><rect x="84.7647%" y="517" width="0.0429%" height="15" fill="rgb(219,54,40)"/><text x="85.0147%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.04%)</title><rect x="84.7647%" y="501" width="0.0429%" height="15" fill="rgb(244,73,9)"/><text x="85.0147%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="84.8290%" y="517" width="0.0107%" height="15" fill="rgb(212,32,45)"/><text x="85.0790%" y="527.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="84.8290%" y="501" width="0.0107%" height="15" fill="rgb(205,58,31)"/><text x="85.0790%" y="511.50"></text></g><g><title>tokio::runtime::thread_pool::worker::CURRENT::FOO::__getit (1 samples, 0.01%)</title><rect x="84.8290%" y="485" width="0.0107%" height="15" fill="rgb(250,120,43)"/><text x="85.0790%" y="495.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="84.8290%" y="469" width="0.0107%" height="15" fill="rgb(235,13,10)"/><text x="85.0790%" y="479.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="84.8290%" y="453" width="0.0107%" height="15" fill="rgb(232,219,31)"/><text x="85.0790%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="84.8290%" y="437" width="0.0107%" height="15" fill="rgb(218,157,51)"/><text x="85.0790%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (23 samples, 0.25%)</title><rect x="84.8397%" y="501" width="0.2466%" height="15" fill="rgb(211,91,52)"/><text x="85.0897%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (23 samples, 0.25%)</title><rect x="84.8397%" y="485" width="0.2466%" height="15" fill="rgb(240,173,1)"/><text x="85.0897%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_add (23 samples, 0.25%)</title><rect x="84.8397%" y="469" width="0.2466%" height="15" fill="rgb(248,20,47)"/><text x="85.0897%" y="479.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (1 samples, 0.01%)</title><rect x="85.0863%" y="501" width="0.0107%" height="15" fill="rgb(217,221,40)"/><text x="85.3363%" y="511.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (1 samples, 0.01%)</title><rect x="85.0863%" y="485" width="0.0107%" height="15" fill="rgb(226,149,51)"/><text x="85.3363%" y="495.50"></text></g><g><title>core::cell::BorrowRefMut::new (1 samples, 0.01%)</title><rect x="85.0863%" y="469" width="0.0107%" height="15" fill="rgb(252,193,7)"/><text x="85.3363%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1 samples, 0.01%)</title><rect x="85.0970%" y="501" width="0.0107%" height="15" fill="rgb(205,123,0)"/><text x="85.3470%" y="511.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.03%)</title><rect x="85.1292%" y="485" width="0.0322%" height="15" fill="rgb(233,173,25)"/><text x="85.3792%" y="495.50"></text></g><g><title>tokio::util::linked_list::Pointers&lt;T&gt;::set_next (2 samples, 0.02%)</title><rect x="85.1614%" y="485" width="0.0214%" height="15" fill="rgb(216,63,32)"/><text x="85.4114%" y="495.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="85.1614%" y="469" width="0.0214%" height="15" fill="rgb(209,56,45)"/><text x="85.4114%" y="479.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (35 samples, 0.38%)</title><rect x="84.8290%" y="533" width="0.3753%" height="15" fill="rgb(226,111,49)"/><text x="85.0790%" y="543.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::bind::{{closure}} (34 samples, 0.36%)</title><rect x="84.8397%" y="517" width="0.3645%" height="15" fill="rgb(244,181,21)"/><text x="85.0897%" y="527.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (9 samples, 0.10%)</title><rect x="85.1078%" y="501" width="0.0965%" height="15" fill="rgb(222,126,15)"/><text x="85.3578%" y="511.50"></text></g><g><title>tokio::util::linked_list::Pointers&lt;T&gt;::set_prev (2 samples, 0.02%)</title><rect x="85.1828%" y="485" width="0.0214%" height="15" fill="rgb(222,95,17)"/><text x="85.4328%" y="495.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="85.1828%" y="469" width="0.0214%" height="15" fill="rgb(254,46,5)"/><text x="85.4328%" y="479.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::bind_scheduler (39 samples, 0.42%)</title><rect x="84.8290%" y="549" width="0.4181%" height="15" fill="rgb(236,216,35)"/><text x="85.0790%" y="559.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::bind (4 samples, 0.04%)</title><rect x="85.2042%" y="533" width="0.0429%" height="15" fill="rgb(217,187,26)"/><text x="85.4542%" y="543.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::is_bound (2 samples, 0.02%)</title><rect x="85.2471%" y="549" width="0.0214%" height="15" fill="rgb(207,192,25)"/><text x="85.4971%" y="559.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="85.2471%" y="533" width="0.0214%" height="15" fill="rgb(253,135,27)"/><text x="85.4971%" y="543.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::is_bound::{{closure}} (2 samples, 0.02%)</title><rect x="85.2471%" y="517" width="0.0214%" height="15" fill="rgb(211,122,29)"/><text x="85.4971%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (2 samples, 0.02%)</title><rect x="85.2471%" y="501" width="0.0214%" height="15" fill="rgb(233,162,40)"/><text x="85.4971%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (11 samples, 0.12%)</title><rect x="85.2793%" y="517" width="0.1179%" height="15" fill="rgb(222,184,47)"/><text x="85.5293%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (11 samples, 0.12%)</title><rect x="85.2793%" y="501" width="0.1179%" height="15" fill="rgb(249,99,23)"/><text x="85.5293%" y="511.50"></text></g><g><title>tokio::runtime::task::harness::SchedulerView&lt;S&gt;::transition_to_running (55 samples, 0.59%)</title><rect x="84.8290%" y="565" width="0.5897%" height="15" fill="rgb(214,60,12)"/><text x="85.0790%" y="575.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (14 samples, 0.15%)</title><rect x="85.2686%" y="549" width="0.1501%" height="15" fill="rgb(250,229,36)"/><text x="85.5186%" y="559.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update (14 samples, 0.15%)</title><rect x="85.2686%" y="533" width="0.1501%" height="15" fill="rgb(232,195,10)"/><text x="85.5186%" y="543.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running::{{closure}} (2 samples, 0.02%)</title><rect x="85.3972%" y="517" width="0.0214%" height="15" fill="rgb(205,213,31)"/><text x="85.6472%" y="527.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::ref_inc (1 samples, 0.01%)</title><rect x="85.4080%" y="501" width="0.0107%" height="15" fill="rgb(237,43,8)"/><text x="85.6580%" y="511.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="85.6760%" y="421" width="0.0214%" height="15" fill="rgb(216,208,3)"/><text x="85.9260%" y="431.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="85.6760%" y="405" width="0.0214%" height="15" fill="rgb(228,179,44)"/><text x="85.9260%" y="415.50"></text></g><g><title>__rust_probestack (2 samples, 0.02%)</title><rect x="85.6760%" y="389" width="0.0214%" height="15" fill="rgb(230,192,27)"/><text x="85.9260%" y="399.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="85.6974%" y="405" width="0.0107%" height="15" fill="rgb(251,30,38)"/><text x="85.9474%" y="415.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="85.7403%" y="389" width="0.0322%" height="15" fill="rgb(246,55,52)"/><text x="85.9903%" y="399.50"></text></g><g><title>__rg_alloc (1 samples, 0.01%)</title><rect x="85.7725%" y="325" width="0.0107%" height="15" fill="rgb(249,79,26)"/><text x="86.0225%" y="335.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.01%)</title><rect x="85.7725%" y="309" width="0.0107%" height="15" fill="rgb(220,202,16)"/><text x="86.0225%" y="319.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.01%)</title><rect x="85.7939%" y="213" width="0.0107%" height="15" fill="rgb(250,170,23)"/><text x="86.0439%" y="223.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (1 samples, 0.01%)</title><rect x="85.7939%" y="197" width="0.0107%" height="15" fill="rgb(230,7,37)"/><text x="86.0439%" y="207.50"></text></g><g><title>malloc_mutex_unlock (1 samples, 0.01%)</title><rect x="85.7939%" y="181" width="0.0107%" height="15" fill="rgb(213,71,1)"/><text x="86.0439%" y="191.50"></text></g><g><title>[rho_runtime] (1 samples, 0.01%)</title><rect x="85.7939%" y="165" width="0.0107%" height="15" fill="rgb(227,87,39)"/><text x="86.0439%" y="175.50"></text></g><g><title>imalloc_body (2 samples, 0.02%)</title><rect x="85.7939%" y="293" width="0.0214%" height="15" fill="rgb(210,41,29)"/><text x="86.0439%" y="303.50"></text></g><g><title>imalloc_no_sample (2 samples, 0.02%)</title><rect x="85.7939%" y="277" width="0.0214%" height="15" fill="rgb(206,191,31)"/><text x="86.0439%" y="287.50"></text></g><g><title>iallocztm (2 samples, 0.02%)</title><rect x="85.7939%" y="261" width="0.0214%" height="15" fill="rgb(247,75,54)"/><text x="86.0439%" y="271.50"></text></g><g><title>arena_malloc (2 samples, 0.02%)</title><rect x="85.7939%" y="245" width="0.0214%" height="15" fill="rgb(208,54,50)"/><text x="86.0439%" y="255.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.02%)</title><rect x="85.7939%" y="229" width="0.0214%" height="15" fill="rgb(214,90,37)"/><text x="86.0439%" y="239.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.01%)</title><rect x="85.8047%" y="213" width="0.0107%" height="15" fill="rgb(220,132,6)"/><text x="86.0547%" y="223.50"></text></g><g><title>&lt;rho_runtime::storage::coordinator::AsyncStore as rho_runtime::storage::Storage&gt;::produce (12 samples, 0.13%)</title><rect x="85.6974%" y="421" width="0.1287%" height="15" fill="rgb(213,167,7)"/><text x="85.9474%" y="431.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (11 samples, 0.12%)</title><rect x="85.7082%" y="405" width="0.1179%" height="15" fill="rgb(243,36,27)"/><text x="85.9582%" y="415.50"></text></g><g><title>alloc::alloc::exchange_malloc (5 samples, 0.05%)</title><rect x="85.7725%" y="389" width="0.0536%" height="15" fill="rgb(235,147,12)"/><text x="86.0225%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.05%)</title><rect x="85.7725%" y="373" width="0.0536%" height="15" fill="rgb(212,198,44)"/><text x="86.0225%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.05%)</title><rect x="85.7725%" y="357" width="0.0536%" height="15" fill="rgb(218,68,50)"/><text x="86.0225%" y="367.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.05%)</title><rect x="85.7725%" y="341" width="0.0536%" height="15" fill="rgb(224,79,48)"/><text x="86.0225%" y="351.50"></text></g><g><title>_rjem_mallocx (4 samples, 0.04%)</title><rect x="85.7832%" y="325" width="0.0429%" height="15" fill="rgb(213,191,50)"/><text x="86.0332%" y="335.50"></text></g><g><title>imalloc (3 samples, 0.03%)</title><rect x="85.7939%" y="309" width="0.0322%" height="15" fill="rgb(254,146,10)"/><text x="86.0439%" y="319.50"></text></g><g><title>tsd_fetch (1 samples, 0.01%)</title><rect x="85.8154%" y="293" width="0.0107%" height="15" fill="rgb(215,175,11)"/><text x="86.0654%" y="303.50"></text></g><g><title>tsd_fetch_impl (1 samples, 0.01%)</title><rect x="85.8154%" y="277" width="0.0107%" height="15" fill="rgb(207,49,7)"/><text x="86.0654%" y="287.50"></text></g><g><title>[libc-2.31.so] (16 samples, 0.17%)</title><rect x="85.8261%" y="421" width="0.1715%" height="15" fill="rgb(234,144,29)"/><text x="86.0761%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="85.9976%" y="421" width="0.0107%" height="15" fill="rgb(213,222,48)"/><text x="86.2476%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="85.9976%" y="405" width="0.0107%" height="15" fill="rgb(222,8,6)"/><text x="86.2476%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="85.9976%" y="389" width="0.0107%" height="15" fill="rgb(221,114,49)"/><text x="86.2476%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="85.9976%" y="373" width="0.0107%" height="15" fill="rgb(250,140,42)"/><text x="86.2476%" y="383.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="86.0298%" y="341" width="0.0107%" height="15" fill="rgb(250,150,27)"/><text x="86.2798%" y="351.50"></text></g><g><title>isfree (3 samples, 0.03%)</title><rect x="86.0405%" y="325" width="0.0322%" height="15" fill="rgb(252,159,3)"/><text x="86.2905%" y="335.50"></text></g><g><title>isdalloct (3 samples, 0.03%)</title><rect x="86.0405%" y="309" width="0.0322%" height="15" fill="rgb(241,182,3)"/><text x="86.2905%" y="319.50"></text></g><g><title>arena_sdalloc (3 samples, 0.03%)</title><rect x="86.0405%" y="293" width="0.0322%" height="15" fill="rgb(236,3,9)"/><text x="86.2905%" y="303.50"></text></g><g><title>tcache_dalloc_small (3 samples, 0.03%)</title><rect x="86.0405%" y="277" width="0.0322%" height="15" fill="rgb(223,227,51)"/><text x="86.2905%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;+core::marker::Send&gt;&gt;&gt; (7 samples, 0.08%)</title><rect x="86.0084%" y="421" width="0.0751%" height="15" fill="rgb(232,133,30)"/><text x="86.2584%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;+core::marker::Send&gt;&gt; (7 samples, 0.08%)</title><rect x="86.0084%" y="405" width="0.0751%" height="15" fill="rgb(209,93,27)"/><text x="86.2584%" y="415.50"></text></g><g><title>alloc::alloc::box_free (6 samples, 0.06%)</title><rect x="86.0191%" y="389" width="0.0643%" height="15" fill="rgb(208,108,34)"/><text x="86.2691%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.05%)</title><rect x="86.0298%" y="373" width="0.0536%" height="15" fill="rgb(215,189,13)"/><text x="86.2798%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.05%)</title><rect x="86.0298%" y="357" width="0.0536%" height="15" fill="rgb(206,88,23)"/><text x="86.2798%" y="367.50"></text></g><g><title>_rjem_sdallocx (4 samples, 0.04%)</title><rect x="86.0405%" y="341" width="0.0429%" height="15" fill="rgb(240,173,0)"/><text x="86.2905%" y="351.50"></text></g><g><title>tsd_fetch (1 samples, 0.01%)</title><rect x="86.0727%" y="325" width="0.0107%" height="15" fill="rgb(223,106,52)"/><text x="86.3227%" y="335.50"></text></g><g><title>tsd_fetch_impl (1 samples, 0.01%)</title><rect x="86.0727%" y="309" width="0.0107%" height="15" fill="rgb(206,130,16)"/><text x="86.3227%" y="319.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::produce::{{closure}} (50 samples, 0.54%)</title><rect x="85.6331%" y="437" width="0.5361%" height="15" fill="rgb(220,54,25)"/><text x="85.8831%" y="447.50"></text></g><g><title>rho_runtime::interpreter::AsynWaitGroup::release (8 samples, 0.09%)</title><rect x="86.0834%" y="421" width="0.0858%" height="15" fill="rgb(210,4,38)"/><text x="86.3334%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicI32::fetch_sub (8 samples, 0.09%)</title><rect x="86.0834%" y="405" width="0.0858%" height="15" fill="rgb(238,94,39)"/><text x="86.3334%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_sub (8 samples, 0.09%)</title><rect x="86.0834%" y="389" width="0.0858%" height="15" fill="rgb(234,124,34)"/><text x="86.3334%" y="399.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.02%)</title><rect x="86.2014%" y="421" width="0.0214%" height="15" fill="rgb(221,91,40)"/><text x="86.4514%" y="431.50"></text></g><g><title>__rg_dealloc (1 samples, 0.01%)</title><rect x="86.2228%" y="421" width="0.0107%" height="15" fill="rgb(246,53,28)"/><text x="86.4728%" y="431.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.01%)</title><rect x="86.2228%" y="405" width="0.0107%" height="15" fill="rgb(229,109,7)"/><text x="86.4728%" y="415.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.01%)</title><rect x="86.2335%" y="421" width="0.0107%" height="15" fill="rgb(249,117,8)"/><text x="86.4835%" y="431.50"></text></g><g><title>isfree (1 samples, 0.01%)</title><rect x="86.2335%" y="405" width="0.0107%" height="15" fill="rgb(210,181,1)"/><text x="86.4835%" y="415.50"></text></g><g><title>isdalloct (1 samples, 0.01%)</title><rect x="86.2335%" y="389" width="0.0107%" height="15" fill="rgb(211,66,1)"/><text x="86.4835%" y="399.50"></text></g><g><title>arena_sdalloc (1 samples, 0.01%)</title><rect x="86.2335%" y="373" width="0.0107%" height="15" fill="rgb(221,90,14)"/><text x="86.4835%" y="383.50"></text></g><g><title>tcache_dalloc_small (1 samples, 0.01%)</title><rect x="86.2335%" y="357" width="0.0107%" height="15" fill="rgb(219,222,44)"/><text x="86.4835%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="86.2442%" y="421" width="0.0107%" height="15" fill="rgb(246,34,33)"/><text x="86.4942%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="86.2442%" y="405" width="0.0107%" height="15" fill="rgb(227,135,41)"/><text x="86.4942%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="86.2442%" y="389" width="0.0107%" height="15" fill="rgb(226,15,14)"/><text x="86.4942%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="86.2442%" y="373" width="0.0107%" height="15" fill="rgb(236,148,47)"/><text x="86.4942%" y="383.50"></text></g><g><title>arena_slab_regind (1 samples, 0.01%)</title><rect x="86.2657%" y="181" width="0.0107%" height="15" fill="rgb(233,162,52)"/><text x="86.5157%" y="191.50"></text></g><g><title>div_compute (1 samples, 0.01%)</title><rect x="86.2657%" y="165" width="0.0107%" height="15" fill="rgb(244,35,28)"/><text x="86.5157%" y="175.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (2 samples, 0.02%)</title><rect x="86.2657%" y="229" width="0.0214%" height="15" fill="rgb(205,121,10)"/><text x="86.5157%" y="239.50"></text></g><g><title>arena_dalloc_bin_locked_impl (2 samples, 0.02%)</title><rect x="86.2657%" y="213" width="0.0214%" height="15" fill="rgb(250,58,18)"/><text x="86.5157%" y="223.50"></text></g><g><title>arena_slab_reg_dalloc (2 samples, 0.02%)</title><rect x="86.2657%" y="197" width="0.0214%" height="15" fill="rgb(216,37,13)"/><text x="86.5157%" y="207.50"></text></g><g><title>extent_nfree_inc (1 samples, 0.01%)</title><rect x="86.2764%" y="181" width="0.0107%" height="15" fill="rgb(221,215,42)"/><text x="86.5264%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Send&gt; (4 samples, 0.04%)</title><rect x="86.2550%" y="421" width="0.0429%" height="15" fill="rgb(217,214,19)"/><text x="86.5050%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Par&gt;&gt; (4 samples, 0.04%)</title><rect x="86.2550%" y="405" width="0.0429%" height="15" fill="rgb(233,139,13)"/><text x="86.5050%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Par&gt;&gt; (4 samples, 0.04%)</title><rect x="86.2550%" y="389" width="0.0429%" height="15" fill="rgb(247,168,23)"/><text x="86.5050%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="86.2550%" y="373" width="0.0429%" height="15" fill="rgb(207,202,1)"/><text x="86.5050%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.04%)</title><rect x="86.2550%" y="357" width="0.0429%" height="15" fill="rgb(220,155,48)"/><text x="86.5050%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.04%)</title><rect x="86.2550%" y="341" width="0.0429%" height="15" fill="rgb(250,43,26)"/><text x="86.5050%" y="351.50"></text></g><g><title>_rjem_sdallocx (4 samples, 0.04%)</title><rect x="86.2550%" y="325" width="0.0429%" height="15" fill="rgb(212,190,23)"/><text x="86.5050%" y="335.50"></text></g><g><title>isfree (4 samples, 0.04%)</title><rect x="86.2550%" y="309" width="0.0429%" height="15" fill="rgb(216,39,24)"/><text x="86.5050%" y="319.50"></text></g><g><title>isdalloct (4 samples, 0.04%)</title><rect x="86.2550%" y="293" width="0.0429%" height="15" fill="rgb(252,113,16)"/><text x="86.5050%" y="303.50"></text></g><g><title>arena_sdalloc (4 samples, 0.04%)</title><rect x="86.2550%" y="277" width="0.0429%" height="15" fill="rgb(208,113,19)"/><text x="86.5050%" y="287.50"></text></g><g><title>tcache_dalloc_small (4 samples, 0.04%)</title><rect x="86.2550%" y="261" width="0.0429%" height="15" fill="rgb(234,107,25)"/><text x="86.5050%" y="271.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (3 samples, 0.03%)</title><rect x="86.2657%" y="245" width="0.0322%" height="15" fill="rgb(234,217,51)"/><text x="86.5157%" y="255.50"></text></g><g><title>malloc_mutex_unlock (1 samples, 0.01%)</title><rect x="86.2871%" y="229" width="0.0107%" height="15" fill="rgb(251,29,42)"/><text x="86.5371%" y="239.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="86.2871%" y="213" width="0.0107%" height="15" fill="rgb(221,62,51)"/><text x="86.5371%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="86.2978%" y="325" width="0.0536%" height="15" fill="rgb(240,192,43)"/><text x="86.5478%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Expr]&gt; (5 samples, 0.05%)</title><rect x="86.2978%" y="309" width="0.0536%" height="15" fill="rgb(224,157,47)"/><text x="86.5478%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Expr&gt; (5 samples, 0.05%)</title><rect x="86.2978%" y="293" width="0.0536%" height="15" fill="rgb(226,84,45)"/><text x="86.5478%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::expr::ExprInstance&gt;&gt; (5 samples, 0.05%)</title><rect x="86.2978%" y="277" width="0.0536%" height="15" fill="rgb(208,207,23)"/><text x="86.5478%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::expr::ExprInstance&gt; (1 samples, 0.01%)</title><rect x="86.3407%" y="261" width="0.0107%" height="15" fill="rgb(253,34,51)"/><text x="86.5907%" y="271.50"></text></g><g><title>__rg_dealloc (1 samples, 0.01%)</title><rect x="86.3622%" y="261" width="0.0107%" height="15" fill="rgb(227,26,34)"/><text x="86.6122%" y="271.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.01%)</title><rect x="86.3622%" y="245" width="0.0107%" height="15" fill="rgb(245,75,19)"/><text x="86.6122%" y="255.50"></text></g><g><title>jemallocator::layout_to_flags (1 samples, 0.01%)</title><rect x="86.3622%" y="229" width="0.0107%" height="15" fill="rgb(250,191,31)"/><text x="86.6122%" y="239.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="86.3729%" y="261" width="0.0107%" height="15" fill="rgb(224,11,50)"/><text x="86.6229%" y="271.50"></text></g><g><title>arena_bin_lower_slab (1 samples, 0.01%)</title><rect x="86.5016%" y="133" width="0.0107%" height="15" fill="rgb(231,171,7)"/><text x="86.7516%" y="143.50"></text></g><g><title>extent_snad_comp (1 samples, 0.01%)</title><rect x="86.5016%" y="117" width="0.0107%" height="15" fill="rgb(252,214,10)"/><text x="86.7516%" y="127.50"></text></g><g><title>extent_ad_comp (1 samples, 0.01%)</title><rect x="86.5016%" y="101" width="0.0107%" height="15" fill="rgb(249,45,46)"/><text x="86.7516%" y="111.50"></text></g><g><title>extent_deactivate_locked (1 samples, 0.01%)</title><rect x="86.5123%" y="69" width="0.0107%" height="15" fill="rgb(240,173,7)"/><text x="86.7623%" y="79.50"></text></g><g><title>extents_insert_locked (1 samples, 0.01%)</title><rect x="86.5123%" y="53" width="0.0107%" height="15" fill="rgb(235,214,13)"/><text x="86.7623%" y="63.50"></text></g><g><title>extent_size_quantize_floor (1 samples, 0.01%)</title><rect x="86.5123%" y="37" width="0.0107%" height="15" fill="rgb(245,156,8)"/><text x="86.7623%" y="47.50"></text></g><g><title>arena_dalloc_bin_slab (2 samples, 0.02%)</title><rect x="86.5123%" y="133" width="0.0214%" height="15" fill="rgb(235,46,12)"/><text x="86.7623%" y="143.50"></text></g><g><title>arena_slab_dalloc (2 samples, 0.02%)</title><rect x="86.5123%" y="117" width="0.0214%" height="15" fill="rgb(221,81,14)"/><text x="86.7623%" y="127.50"></text></g><g><title>_rjem_je_arena_extents_dirty_dalloc (2 samples, 0.02%)</title><rect x="86.5123%" y="101" width="0.0214%" height="15" fill="rgb(238,207,9)"/><text x="86.7623%" y="111.50"></text></g><g><title>extent_record (2 samples, 0.02%)</title><rect x="86.5123%" y="85" width="0.0214%" height="15" fill="rgb(224,129,35)"/><text x="86.7623%" y="95.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.01%)</title><rect x="86.5230%" y="69" width="0.0107%" height="15" fill="rgb(243,218,34)"/><text x="86.7730%" y="79.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.01%)</title><rect x="86.5230%" y="53" width="0.0107%" height="15" fill="rgb(220,166,13)"/><text x="86.7730%" y="63.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.01%)</title><rect x="86.5230%" y="37" width="0.0107%" height="15" fill="rgb(227,167,49)"/><text x="86.7730%" y="47.50"></text></g><g><title>arena_dissociate_bin_slab (1 samples, 0.01%)</title><rect x="86.5337%" y="133" width="0.0107%" height="15" fill="rgb(234,142,12)"/><text x="86.7837%" y="143.50"></text></g><g><title>arena_bin_slabs_nonfull_remove (1 samples, 0.01%)</title><rect x="86.5337%" y="117" width="0.0107%" height="15" fill="rgb(207,100,48)"/><text x="86.7837%" y="127.50"></text></g><g><title>_rjem_je_extent_heap_remove (1 samples, 0.01%)</title><rect x="86.5337%" y="101" width="0.0107%" height="15" fill="rgb(210,25,14)"/><text x="86.7837%" y="111.50"></text></g><g><title>bitmap_unset (1 samples, 0.01%)</title><rect x="86.5444%" y="117" width="0.0107%" height="15" fill="rgb(246,116,27)"/><text x="86.7944%" y="127.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (8 samples, 0.09%)</title><rect x="86.4801%" y="165" width="0.0858%" height="15" fill="rgb(214,193,42)"/><text x="86.7301%" y="175.50"></text></g><g><title>arena_dalloc_bin_locked_impl (7 samples, 0.08%)</title><rect x="86.4908%" y="149" width="0.0751%" height="15" fill="rgb(214,122,8)"/><text x="86.7408%" y="159.50"></text></g><g><title>arena_slab_reg_dalloc (2 samples, 0.02%)</title><rect x="86.5444%" y="133" width="0.0214%" height="15" fill="rgb(244,173,18)"/><text x="86.7944%" y="143.50"></text></g><g><title>extent_nfree_inc (1 samples, 0.01%)</title><rect x="86.5552%" y="117" width="0.0107%" height="15" fill="rgb(232,68,19)"/><text x="86.8052%" y="127.50"></text></g><g><title>arena_decay_ticks (2 samples, 0.02%)</title><rect x="86.5659%" y="165" width="0.0214%" height="15" fill="rgb(236,224,1)"/><text x="86.8159%" y="175.50"></text></g><g><title>decay_ticker_get (2 samples, 0.02%)</title><rect x="86.5659%" y="149" width="0.0214%" height="15" fill="rgb(240,11,8)"/><text x="86.8159%" y="159.50"></text></g><g><title>arena_tdata_get (2 samples, 0.02%)</title><rect x="86.5659%" y="133" width="0.0214%" height="15" fill="rgb(244,159,20)"/><text x="86.8159%" y="143.50"></text></g><g><title>tsd_arenas_tdata_get (1 samples, 0.01%)</title><rect x="86.5766%" y="117" width="0.0107%" height="15" fill="rgb(240,223,54)"/><text x="86.8266%" y="127.50"></text></g><g><title>extent_arena_get (1 samples, 0.01%)</title><rect x="86.5873%" y="165" width="0.0107%" height="15" fill="rgb(237,146,5)"/><text x="86.8373%" y="175.50"></text></g><g><title>atomic_load_p (1 samples, 0.01%)</title><rect x="86.5873%" y="149" width="0.0107%" height="15" fill="rgb(218,221,32)"/><text x="86.8373%" y="159.50"></text></g><g><title>malloc_mutex_lock (2 samples, 0.02%)</title><rect x="86.5980%" y="165" width="0.0214%" height="15" fill="rgb(244,96,26)"/><text x="86.8480%" y="175.50"></text></g><g><title>malloc_mutex_trylock_final (2 samples, 0.02%)</title><rect x="86.5980%" y="149" width="0.0214%" height="15" fill="rgb(245,184,37)"/><text x="86.8480%" y="159.50"></text></g><g><title>__GI___pthread_mutex_trylock (2 samples, 0.02%)</title><rect x="86.5980%" y="133" width="0.0214%" height="15" fill="rgb(248,91,47)"/><text x="86.8480%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (31 samples, 0.33%)</title><rect x="86.2978%" y="341" width="0.3324%" height="15" fill="rgb(243,199,8)"/><text x="86.5478%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (26 samples, 0.28%)</title><rect x="86.3515%" y="325" width="0.2788%" height="15" fill="rgb(249,12,15)"/><text x="86.6015%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.28%)</title><rect x="86.3515%" y="309" width="0.2788%" height="15" fill="rgb(245,97,12)"/><text x="86.6015%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (26 samples, 0.28%)</title><rect x="86.3515%" y="293" width="0.2788%" height="15" fill="rgb(244,61,1)"/><text x="86.6015%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (25 samples, 0.27%)</title><rect x="86.3622%" y="277" width="0.2680%" height="15" fill="rgb(222,194,10)"/><text x="86.6122%" y="287.50"></text></g><g><title>_rjem_sdallocx (23 samples, 0.25%)</title><rect x="86.3836%" y="261" width="0.2466%" height="15" fill="rgb(226,178,8)"/><text x="86.6336%" y="271.50"></text></g><g><title>isfree (21 samples, 0.23%)</title><rect x="86.4051%" y="245" width="0.2252%" height="15" fill="rgb(241,32,34)"/><text x="86.6551%" y="255.50"></text></g><g><title>isdalloct (21 samples, 0.23%)</title><rect x="86.4051%" y="229" width="0.2252%" height="15" fill="rgb(254,26,6)"/><text x="86.6551%" y="239.50"></text></g><g><title>arena_sdalloc (21 samples, 0.23%)</title><rect x="86.4051%" y="213" width="0.2252%" height="15" fill="rgb(249,71,11)"/><text x="86.6551%" y="223.50"></text></g><g><title>tcache_dalloc_small (21 samples, 0.23%)</title><rect x="86.4051%" y="197" width="0.2252%" height="15" fill="rgb(232,170,27)"/><text x="86.6551%" y="207.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (17 samples, 0.18%)</title><rect x="86.4479%" y="181" width="0.1823%" height="15" fill="rgb(214,223,17)"/><text x="86.6979%" y="191.50"></text></g><g><title>malloc_mutex_unlock (1 samples, 0.01%)</title><rect x="86.6195%" y="165" width="0.0107%" height="15" fill="rgb(250,18,15)"/><text x="86.8695%" y="175.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="86.6195%" y="149" width="0.0107%" height="15" fill="rgb(212,153,51)"/><text x="86.8695%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::New&gt;&gt; (2 samples, 0.02%)</title><rect x="86.6302%" y="341" width="0.0214%" height="15" fill="rgb(219,194,12)"/><text x="86.8802%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::New&gt;&gt; (2 samples, 0.02%)</title><rect x="86.6302%" y="325" width="0.0214%" height="15" fill="rgb(212,58,17)"/><text x="86.8802%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="86.6302%" y="309" width="0.0214%" height="15" fill="rgb(254,5,10)"/><text x="86.8802%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.02%)</title><rect x="86.6302%" y="293" width="0.0214%" height="15" fill="rgb(246,91,7)"/><text x="86.8802%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;rho_runtime::interpreter::reduce::environment::Env&gt; (36 samples, 0.39%)</title><rect x="86.2978%" y="421" width="0.3860%" height="15" fill="rgb(218,108,49)"/><text x="86.5478%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[model::rho_types::Par: 6]&gt;&gt; (36 samples, 0.39%)</title><rect x="86.2978%" y="405" width="0.3860%" height="15" fill="rgb(238,123,20)"/><text x="86.5478%" y="415.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.39%)</title><rect x="86.2978%" y="389" width="0.3860%" height="15" fill="rgb(231,69,23)"/><text x="86.5478%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Par]&gt; (36 samples, 0.39%)</title><rect x="86.2978%" y="373" width="0.3860%" height="15" fill="rgb(230,209,3)"/><text x="86.5478%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (36 samples, 0.39%)</title><rect x="86.2978%" y="357" width="0.3860%" height="15" fill="rgb(231,19,0)"/><text x="86.5478%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Send&gt;&gt; (3 samples, 0.03%)</title><rect x="86.6517%" y="341" width="0.0322%" height="15" fill="rgb(226,192,25)"/><text x="86.9017%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="86.6517%" y="325" width="0.0322%" height="15" fill="rgb(223,175,53)"/><text x="86.9017%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Send]&gt; (3 samples, 0.03%)</title><rect x="86.6517%" y="309" width="0.0322%" height="15" fill="rgb(248,35,51)"/><text x="86.9017%" y="319.50"></text></g><g><title>rho_runtime::interpreter::AsynWaitGroup::release (2 samples, 0.02%)</title><rect x="86.6838%" y="421" width="0.0214%" height="15" fill="rgb(230,37,26)"/><text x="86.9338%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicI32::fetch_sub (2 samples, 0.02%)</title><rect x="86.6838%" y="405" width="0.0214%" height="15" fill="rgb(206,120,22)"/><text x="86.9338%" y="415.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.02%)</title><rect x="86.6838%" y="389" width="0.0214%" height="15" fill="rgb(207,165,28)"/><text x="86.9338%" y="399.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (1 samples, 0.01%)</title><rect x="86.8339%" y="405" width="0.0107%" height="15" fill="rgb(226,23,46)"/><text x="87.0839%" y="415.50"></text></g><g><title>&lt;model::rho_types::ListParWithRandom as core::default::Default&gt;::default (2 samples, 0.02%)</title><rect x="86.8446%" y="405" width="0.0214%" height="15" fill="rgb(208,130,44)"/><text x="87.0946%" y="415.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="86.8768%" y="293" width="0.0107%" height="15" fill="rgb(231,67,8)"/><text x="87.1268%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.06%)</title><rect x="86.8661%" y="373" width="0.0643%" height="15" fill="rgb(205,183,22)"/><text x="87.1161%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.06%)</title><rect x="86.8661%" y="357" width="0.0643%" height="15" fill="rgb(224,47,9)"/><text x="87.1161%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (6 samples, 0.06%)</title><rect x="86.8661%" y="341" width="0.0643%" height="15" fill="rgb(250,183,49)"/><text x="87.1161%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.06%)</title><rect x="86.8661%" y="325" width="0.0643%" height="15" fill="rgb(220,151,39)"/><text x="87.1161%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.06%)</title><rect x="86.8661%" y="309" width="0.0643%" height="15" fill="rgb(220,118,20)"/><text x="87.1161%" y="319.50"></text></g><g><title>_rjem_mallocx (4 samples, 0.04%)</title><rect x="86.8875%" y="293" width="0.0429%" height="15" fill="rgb(231,65,51)"/><text x="87.1375%" y="303.50"></text></g><g><title>imalloc (3 samples, 0.03%)</title><rect x="86.8983%" y="277" width="0.0322%" height="15" fill="rgb(253,125,37)"/><text x="87.1483%" y="287.50"></text></g><g><title>imalloc_body (3 samples, 0.03%)</title><rect x="86.8983%" y="261" width="0.0322%" height="15" fill="rgb(232,102,6)"/><text x="87.1483%" y="271.50"></text></g><g><title>imalloc_no_sample (3 samples, 0.03%)</title><rect x="86.8983%" y="245" width="0.0322%" height="15" fill="rgb(251,105,13)"/><text x="87.1483%" y="255.50"></text></g><g><title>iallocztm (2 samples, 0.02%)</title><rect x="86.9090%" y="229" width="0.0214%" height="15" fill="rgb(222,179,29)"/><text x="87.1590%" y="239.50"></text></g><g><title>arena_malloc (2 samples, 0.02%)</title><rect x="86.9090%" y="213" width="0.0214%" height="15" fill="rgb(229,180,53)"/><text x="87.1590%" y="223.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.02%)</title><rect x="86.9090%" y="197" width="0.0214%" height="15" fill="rgb(238,104,13)"/><text x="87.1590%" y="207.50"></text></g><g><title>cache_bin_alloc_easy (2 samples, 0.02%)</title><rect x="86.9090%" y="181" width="0.0214%" height="15" fill="rgb(210,130,5)"/><text x="87.1590%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (11 samples, 0.12%)</title><rect x="86.8661%" y="405" width="0.1179%" height="15" fill="rgb(233,87,49)"/><text x="87.1161%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (11 samples, 0.12%)</title><rect x="86.8661%" y="389" width="0.1179%" height="15" fill="rgb(243,34,9)"/><text x="87.1161%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.05%)</title><rect x="86.9304%" y="373" width="0.0536%" height="15" fill="rgb(235,225,10)"/><text x="87.1804%" y="383.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.05%)</title><rect x="86.9304%" y="357" width="0.0536%" height="15" fill="rgb(212,0,30)"/><text x="87.1804%" y="367.50"></text></g><g><title>model::rho_types::Par::single_bundle (3 samples, 0.03%)</title><rect x="86.9840%" y="405" width="0.0322%" height="15" fill="rgb(211,177,0)"/><text x="87.2340%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (3 samples, 0.03%)</title><rect x="86.9840%" y="389" width="0.0322%" height="15" fill="rgb(225,220,11)"/><text x="87.2340%" y="399.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="87.0162%" y="389" width="0.0429%" height="15" fill="rgb(215,10,13)"/><text x="87.2662%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (4 samples, 0.04%)</title><rect x="87.0162%" y="373" width="0.0429%" height="15" fill="rgb(240,177,14)"/><text x="87.2662%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_add (4 samples, 0.04%)</title><rect x="87.0162%" y="357" width="0.0429%" height="15" fill="rgb(243,7,39)"/><text x="87.2662%" y="367.50"></text></g><g><title>core::future::from_generator (1 samples, 0.01%)</title><rect x="87.0591%" y="389" width="0.0107%" height="15" fill="rgb(212,99,0)"/><text x="87.3091%" y="399.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.01%)</title><rect x="87.0591%" y="373" width="0.0107%" height="15" fill="rgb(225,162,48)"/><text x="87.3091%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::join::JoinHandle&lt;()&gt;&gt; (2 samples, 0.02%)</title><rect x="87.0698%" y="389" width="0.0214%" height="15" fill="rgb(246,16,25)"/><text x="87.3198%" y="399.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="87.0698%" y="373" width="0.0214%" height="15" fill="rgb(220,150,2)"/><text x="87.3198%" y="383.50"></text></g><g><title>tokio::runtime::task::state::State::drop_join_handle_fast (2 samples, 0.02%)</title><rect x="87.0698%" y="357" width="0.0214%" height="15" fill="rgb(237,113,11)"/><text x="87.3198%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (2 samples, 0.02%)</title><rect x="87.0698%" y="341" width="0.0214%" height="15" fill="rgb(236,70,20)"/><text x="87.3198%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.02%)</title><rect x="87.0698%" y="325" width="0.0214%" height="15" fill="rgb(234,94,7)"/><text x="87.3198%" y="335.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="87.0912%" y="373" width="0.0322%" height="15" fill="rgb(250,221,0)"/><text x="87.3412%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::spawner::Spawner&gt; (1 samples, 0.01%)</title><rect x="87.1234%" y="373" width="0.0107%" height="15" fill="rgb(245,149,46)"/><text x="87.3734%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::thread_pool::Spawner&gt; (1 samples, 0.01%)</title><rect x="87.1234%" y="357" width="0.0107%" height="15" fill="rgb(215,37,27)"/><text x="87.3734%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt; (1 samples, 0.01%)</title><rect x="87.1234%" y="341" width="0.0107%" height="15" fill="rgb(232,65,3)"/><text x="87.3734%" y="351.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="87.1234%" y="325" width="0.0107%" height="15" fill="rgb(214,2,16)"/><text x="87.3734%" y="335.50"></text></g><g><title>tokio::runtime::context::spawn_handle (5 samples, 0.05%)</title><rect x="87.1341%" y="373" width="0.0536%" height="15" fill="rgb(227,131,50)"/><text x="87.3841%" y="383.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.05%)</title><rect x="87.1341%" y="357" width="0.0536%" height="15" fill="rgb(247,131,45)"/><text x="87.3841%" y="367.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.05%)</title><rect x="87.1341%" y="341" width="0.0536%" height="15" fill="rgb(215,97,47)"/><text x="87.3841%" y="351.50"></text></g><g><title>tokio::runtime::context::spawn_handle::{{closure}} (5 samples, 0.05%)</title><rect x="87.1341%" y="325" width="0.0536%" height="15" fill="rgb(233,143,12)"/><text x="87.3841%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.05%)</title><rect x="87.1341%" y="309" width="0.0536%" height="15" fill="rgb(222,57,17)"/><text x="87.3841%" y="319.50"></text></g><g><title>tokio::runtime::context::spawn_handle::{{closure}}::{{closure}} (5 samples, 0.05%)</title><rect x="87.1341%" y="293" width="0.0536%" height="15" fill="rgb(214,119,38)"/><text x="87.3841%" y="303.50"></text></g><g><title>&lt;tokio::runtime::spawner::Spawner as core::clone::Clone&gt;::clone (5 samples, 0.05%)</title><rect x="87.1341%" y="277" width="0.0536%" height="15" fill="rgb(217,28,47)"/><text x="87.3841%" y="287.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="87.1985%" y="341" width="0.0107%" height="15" fill="rgb(231,14,52)"/><text x="87.4485%" y="351.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="87.2092%" y="309" width="0.0322%" height="15" fill="rgb(220,158,18)"/><text x="87.4592%" y="319.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.03%)</title><rect x="87.2413%" y="293" width="0.0322%" height="15" fill="rgb(222,143,46)"/><text x="87.4913%" y="303.50"></text></g><g><title>tcache_alloc_large (1 samples, 0.01%)</title><rect x="87.2735%" y="117" width="0.0107%" height="15" fill="rgb(227,165,5)"/><text x="87.5235%" y="127.50"></text></g><g><title>tcache_event (1 samples, 0.01%)</title><rect x="87.2735%" y="101" width="0.0107%" height="15" fill="rgb(216,222,49)"/><text x="87.5235%" y="111.50"></text></g><g><title>_rjem_je_tcache_event_hard (1 samples, 0.01%)</title><rect x="87.2735%" y="85" width="0.0107%" height="15" fill="rgb(238,73,39)"/><text x="87.5235%" y="95.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.01%)</title><rect x="87.2735%" y="69" width="0.0107%" height="15" fill="rgb(252,115,9)"/><text x="87.5235%" y="79.50"></text></g><g><title>imalloc_body (5 samples, 0.05%)</title><rect x="87.2735%" y="181" width="0.0536%" height="15" fill="rgb(238,202,4)"/><text x="87.5235%" y="191.50"></text></g><g><title>imalloc_no_sample (5 samples, 0.05%)</title><rect x="87.2735%" y="165" width="0.0536%" height="15" fill="rgb(252,153,44)"/><text x="87.5235%" y="175.50"></text></g><g><title>iallocztm (5 samples, 0.05%)</title><rect x="87.2735%" y="149" width="0.0536%" height="15" fill="rgb(235,128,27)"/><text x="87.5235%" y="159.50"></text></g><g><title>arena_malloc (5 samples, 0.05%)</title><rect x="87.2735%" y="133" width="0.0536%" height="15" fill="rgb(221,121,47)"/><text x="87.5235%" y="143.50"></text></g><g><title>tcache_alloc_small (4 samples, 0.04%)</title><rect x="87.2842%" y="117" width="0.0429%" height="15" fill="rgb(247,211,47)"/><text x="87.5342%" y="127.50"></text></g><g><title>cache_bin_alloc_easy (4 samples, 0.04%)</title><rect x="87.2842%" y="101" width="0.0429%" height="15" fill="rgb(252,47,49)"/><text x="87.5342%" y="111.50"></text></g><g><title>tokio::runtime::task::joinable (12 samples, 0.13%)</title><rect x="87.2092%" y="341" width="0.1287%" height="15" fill="rgb(219,119,53)"/><text x="87.4592%" y="351.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (12 samples, 0.13%)</title><rect x="87.2092%" y="325" width="0.1287%" height="15" fill="rgb(243,165,53)"/><text x="87.4592%" y="335.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (9 samples, 0.10%)</title><rect x="87.2413%" y="309" width="0.0965%" height="15" fill="rgb(230,12,35)"/><text x="87.4913%" y="319.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (6 samples, 0.06%)</title><rect x="87.2735%" y="293" width="0.0643%" height="15" fill="rgb(239,57,49)"/><text x="87.5235%" y="303.50"></text></g><g><title>alloc::alloc::exchange_malloc (6 samples, 0.06%)</title><rect x="87.2735%" y="277" width="0.0643%" height="15" fill="rgb(231,154,7)"/><text x="87.5235%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.06%)</title><rect x="87.2735%" y="261" width="0.0643%" height="15" fill="rgb(248,81,34)"/><text x="87.5235%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.06%)</title><rect x="87.2735%" y="245" width="0.0643%" height="15" fill="rgb(247,9,5)"/><text x="87.5235%" y="255.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.06%)</title><rect x="87.2735%" y="229" width="0.0643%" height="15" fill="rgb(228,172,27)"/><text x="87.5235%" y="239.50"></text></g><g><title>_rjem_mallocx (6 samples, 0.06%)</title><rect x="87.2735%" y="213" width="0.0643%" height="15" fill="rgb(230,57,44)"/><text x="87.5235%" y="223.50"></text></g><g><title>imalloc (6 samples, 0.06%)</title><rect x="87.2735%" y="197" width="0.0643%" height="15" fill="rgb(249,35,22)"/><text x="87.5235%" y="207.50"></text></g><g><title>tsd_fetch (1 samples, 0.01%)</title><rect x="87.3271%" y="181" width="0.0107%" height="15" fill="rgb(250,137,27)"/><text x="87.5771%" y="191.50"></text></g><g><title>tsd_fetch_impl (1 samples, 0.01%)</title><rect x="87.3271%" y="165" width="0.0107%" height="15" fill="rgb(251,57,31)"/><text x="87.5771%" y="175.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::produce (38 samples, 0.41%)</title><rect x="87.0162%" y="405" width="0.4074%" height="15" fill="rgb(238,60,0)"/><text x="87.2662%" y="415.50"></text></g><g><title>tokio::task::spawn::spawn (31 samples, 0.33%)</title><rect x="87.0912%" y="389" width="0.3324%" height="15" fill="rgb(242,185,39)"/><text x="87.3412%" y="399.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (22 samples, 0.24%)</title><rect x="87.1877%" y="373" width="0.2359%" height="15" fill="rgb(240,63,43)"/><text x="87.4377%" y="383.50"></text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (22 samples, 0.24%)</title><rect x="87.1877%" y="357" width="0.2359%" height="15" fill="rgb(236,155,6)"/><text x="87.4377%" y="367.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (8 samples, 0.09%)</title><rect x="87.3378%" y="341" width="0.0858%" height="15" fill="rgb(215,11,29)"/><text x="87.5878%" y="351.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (8 samples, 0.09%)</title><rect x="87.3378%" y="325" width="0.0858%" height="15" fill="rgb(228,180,48)"/><text x="87.5878%" y="335.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (1 samples, 0.01%)</title><rect x="87.4129%" y="309" width="0.0107%" height="15" fill="rgb(241,102,12)"/><text x="87.6629%" y="319.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (5 samples, 0.05%)</title><rect x="87.4665%" y="373" width="0.0536%" height="15" fill="rgb(246,213,4)"/><text x="87.7165%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (5 samples, 0.05%)</title><rect x="87.4665%" y="357" width="0.0536%" height="15" fill="rgb(218,134,35)"/><text x="87.7165%" y="367.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (1 samples, 0.01%)</title><rect x="87.5201%" y="373" width="0.0107%" height="15" fill="rgb(251,117,35)"/><text x="87.7701%" y="383.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="87.5308%" y="373" width="0.0107%" height="15" fill="rgb(206,156,45)"/><text x="87.7808%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (1 samples, 0.01%)</title><rect x="87.5415%" y="341" width="0.0107%" height="15" fill="rgb(218,52,27)"/><text x="87.7915%" y="351.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (180 samples, 1.93%)</title><rect x="85.6331%" y="453" width="1.9299%" height="15" fill="rgb(238,83,36)"/><text x="85.8831%" y="463.50">&lt;..</text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation::{{closure}} (130 samples, 1.39%)</title><rect x="86.1692%" y="437" width="1.3938%" height="15" fill="rgb(218,53,43)"/><text x="86.4192%" y="447.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_send::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Send&gt;::evaluate (80 samples, 0.86%)</title><rect x="86.7053%" y="421" width="0.8577%" height="15" fill="rgb(239,54,39)"/><text x="86.9553%" y="431.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute (13 samples, 0.14%)</title><rect x="87.4236%" y="405" width="0.1394%" height="15" fill="rgb(212,198,13)"/><text x="87.6736%" y="415.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute_no_sort (13 samples, 0.14%)</title><rect x="87.4236%" y="389" width="0.1394%" height="15" fill="rgb(234,54,46)"/><text x="87.6736%" y="399.50"></text></g><g><title>model::bitset::BitSet&lt;B&gt;::truncate (2 samples, 0.02%)</title><rect x="87.5415%" y="373" width="0.0214%" height="15" fill="rgb(217,120,7)"/><text x="87.7915%" y="383.50"></text></g><g><title>bit_vec::BitVec&lt;B&gt;::truncate (2 samples, 0.02%)</title><rect x="87.5415%" y="357" width="0.0214%" height="15" fill="rgb(246,39,15)"/><text x="87.7915%" y="367.50"></text></g><g><title>bit_vec::BitVec&lt;B&gt;::fix_last_block (1 samples, 0.01%)</title><rect x="87.5523%" y="341" width="0.0107%" height="15" fill="rgb(242,143,31)"/><text x="87.8023%" y="351.50"></text></g><g><title>bit_vec::BitVec&lt;B&gt;::last_block_mut_with_mask (1 samples, 0.01%)</title><rect x="87.5523%" y="325" width="0.0107%" height="15" fill="rgb(252,60,24)"/><text x="87.8023%" y="335.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.05%)</title><rect x="87.5952%" y="389" width="0.0536%" height="15" fill="rgb(249,220,7)"/><text x="87.8452%" y="399.50"></text></g><g><title>std::panic::catch_unwind (190 samples, 2.04%)</title><rect x="85.6224%" y="549" width="2.0371%" height="15" fill="rgb(236,67,13)"/><text x="85.8724%" y="559.50">s..</text></g><g><title>std::panicking::try (190 samples, 2.04%)</title><rect x="85.6224%" y="533" width="2.0371%" height="15" fill="rgb(210,62,39)"/><text x="85.8724%" y="543.50">s..</text></g><g><title>std::panicking::try::do_call (190 samples, 2.04%)</title><rect x="85.6224%" y="517" width="2.0371%" height="15" fill="rgb(219,122,53)"/><text x="85.8724%" y="527.50">s..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (190 samples, 2.04%)</title><rect x="85.6224%" y="501" width="2.0371%" height="15" fill="rgb(218,87,25)"/><text x="85.8724%" y="511.50">&lt;..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (190 samples, 2.04%)</title><rect x="85.6224%" y="485" width="2.0371%" height="15" fill="rgb(234,179,48)"/><text x="85.8724%" y="495.50">t..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (190 samples, 2.04%)</title><rect x="85.6224%" y="469" width="2.0371%" height="15" fill="rgb(248,90,0)"/><text x="85.8724%" y="479.50">t..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::drop_future_or_output (9 samples, 0.10%)</title><rect x="87.5630%" y="453" width="0.0965%" height="15" fill="rgb(207,228,37)"/><text x="87.8130%" y="463.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::set_stage (9 samples, 0.10%)</title><rect x="87.5630%" y="437" width="0.0965%" height="15" fill="rgb(235,214,15)"/><text x="87.8130%" y="447.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (9 samples, 0.10%)</title><rect x="87.5630%" y="421" width="0.0965%" height="15" fill="rgb(210,144,39)"/><text x="87.8130%" y="431.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::set_stage::{{closure}} (9 samples, 0.10%)</title><rect x="87.5630%" y="405" width="0.0965%" height="15" fill="rgb(222,67,41)"/><text x="87.8130%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Send&gt;::{{closure}}&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="87.6488%" y="389" width="0.0107%" height="15" fill="rgb(205,35,37)"/><text x="87.8988%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Send&gt;::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="87.6488%" y="373" width="0.0107%" height="15" fill="rgb(216,125,40)"/><text x="87.8988%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Send&gt;::{{closure}}&gt; (1 samples, 0.01%)</title><rect x="87.6488%" y="357" width="0.0107%" height="15" fill="rgb(228,227,20)"/><text x="87.8988%" y="367.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::is_cancelled (1 samples, 0.01%)</title><rect x="87.6595%" y="549" width="0.0107%" height="15" fill="rgb(242,173,45)"/><text x="87.9095%" y="559.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (330 samples, 3.54%)</title><rect x="84.1535%" y="597" width="3.5381%" height="15" fill="rgb(215,79,24)"/><text x="84.4035%" y="607.50">tok..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (269 samples, 2.88%)</title><rect x="84.8075%" y="581" width="2.8841%" height="15" fill="rgb(238,164,38)"/><text x="85.0575%" y="591.50">to..</text></g><g><title>tokio::runtime::task::harness::poll_future (212 samples, 2.27%)</title><rect x="85.4187%" y="565" width="2.2730%" height="15" fill="rgb(245,196,38)"/><text x="85.6687%" y="575.50">t..</text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (2 samples, 0.02%)</title><rect x="87.6702%" y="549" width="0.0214%" height="15" fill="rgb(231,217,29)"/><text x="87.9202%" y="559.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update (2 samples, 0.02%)</title><rect x="87.6702%" y="533" width="0.0214%" height="15" fill="rgb(245,6,4)"/><text x="87.9202%" y="543.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle::{{closure}} (1 samples, 0.01%)</title><rect x="87.6809%" y="517" width="0.0107%" height="15" fill="rgb(214,76,49)"/><text x="87.9309%" y="527.50"></text></g><g><title>tokio::runtime::task::state::Snapshot::unset_running (1 samples, 0.01%)</title><rect x="87.6809%" y="501" width="0.0107%" height="15" fill="rgb(205,96,12)"/><text x="87.9309%" y="511.50"></text></g><g><title>tokio::coop::budget (362 samples, 3.88%)</title><rect x="83.8319%" y="725" width="3.8812%" height="15" fill="rgb(243,131,4)"/><text x="84.0819%" y="735.50">toki..</text></g><g><title>tokio::coop::with_budget (362 samples, 3.88%)</title><rect x="83.8319%" y="709" width="3.8812%" height="15" fill="rgb(214,114,4)"/><text x="84.0819%" y="719.50">toki..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (358 samples, 3.84%)</title><rect x="83.8748%" y="693" width="3.8383%" height="15" fill="rgb(234,215,15)"/><text x="84.1248%" y="703.50">std:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (356 samples, 3.82%)</title><rect x="83.8962%" y="677" width="3.8169%" height="15" fill="rgb(250,216,45)"/><text x="84.1462%" y="687.50">std:..</text></g><g><title>tokio::coop::with_budget::{{closure}} (355 samples, 3.81%)</title><rect x="83.9069%" y="661" width="3.8062%" height="15" fill="rgb(236,128,4)"/><text x="84.1569%" y="671.50">toki..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (350 samples, 3.75%)</title><rect x="83.9605%" y="645" width="3.7525%" height="15" fill="rgb(234,50,33)"/><text x="84.2105%" y="655.50">toki..</text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (337 samples, 3.61%)</title><rect x="84.0999%" y="629" width="3.6132%" height="15" fill="rgb(253,131,37)"/><text x="84.3499%" y="639.50">toki..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (337 samples, 3.61%)</title><rect x="84.0999%" y="613" width="3.6132%" height="15" fill="rgb(218,55,27)"/><text x="84.3499%" y="623.50">toki..</text></g><g><title>tokio::runtime::task::raw::poll (2 samples, 0.02%)</title><rect x="87.6916%" y="597" width="0.0214%" height="15" fill="rgb(241,220,28)"/><text x="87.9416%" y="607.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::transition_worker_from_searching (6 samples, 0.06%)</title><rect x="87.7131%" y="693" width="0.0643%" height="15" fill="rgb(241,90,48)"/><text x="87.9631%" y="703.50"></text></g><g><title>tokio::runtime::thread_pool::idle::State::dec_num_searching (6 samples, 0.06%)</title><rect x="87.7131%" y="677" width="0.0643%" height="15" fill="rgb(216,43,37)"/><text x="87.9631%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (6 samples, 0.06%)</title><rect x="87.7131%" y="661" width="0.0643%" height="15" fill="rgb(207,173,9)"/><text x="87.9631%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_sub (6 samples, 0.06%)</title><rect x="87.7131%" y="645" width="0.0643%" height="15" fill="rgb(240,126,30)"/><text x="87.9631%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (15 samples, 0.16%)</title><rect x="87.7989%" y="645" width="0.1608%" height="15" fill="rgb(228,178,53)"/><text x="88.0489%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_swap (15 samples, 0.16%)</title><rect x="87.7989%" y="629" width="0.1608%" height="15" fill="rgb(217,33,4)"/><text x="88.0489%" y="639.50"></text></g><g><title>core::mem::drop (3 samples, 0.03%)</title><rect x="87.9597%" y="629" width="0.0322%" height="15" fill="rgb(206,124,34)"/><text x="88.2097%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,()&gt;&gt; (3 samples, 0.03%)</title><rect x="87.9597%" y="613" width="0.0322%" height="15" fill="rgb(208,122,53)"/><text x="88.2097%" y="623.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="87.9597%" y="597" width="0.0322%" height="15" fill="rgb(215,202,26)"/><text x="88.2097%" y="607.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (3 samples, 0.03%)</title><rect x="87.9597%" y="581" width="0.0322%" height="15" fill="rgb(232,198,31)"/><text x="88.2097%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (2 samples, 0.02%)</title><rect x="87.9704%" y="565" width="0.0214%" height="15" fill="rgb(222,23,35)"/><text x="88.2204%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.02%)</title><rect x="87.9704%" y="549" width="0.0214%" height="15" fill="rgb(242,27,53)"/><text x="88.2204%" y="559.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::notify_one (1 samples, 0.01%)</title><rect x="87.9919%" y="629" width="0.0107%" height="15" fill="rgb(210,216,42)"/><text x="88.2419%" y="639.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one (1 samples, 0.01%)</title><rect x="87.9919%" y="613" width="0.0107%" height="15" fill="rgb(234,39,38)"/><text x="88.2419%" y="623.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (23 samples, 0.25%)</title><rect x="87.7881%" y="677" width="0.2466%" height="15" fill="rgb(235,126,54)"/><text x="88.0381%" y="687.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (23 samples, 0.25%)</title><rect x="87.7881%" y="661" width="0.2466%" height="15" fill="rgb(235,150,33)"/><text x="88.0381%" y="671.50"></text></g><g><title>tokio::runtime::park::Inner::unpark_condvar (7 samples, 0.08%)</title><rect x="87.9597%" y="645" width="0.0751%" height="15" fill="rgb(249,49,53)"/><text x="88.2097%" y="655.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (3 samples, 0.03%)</title><rect x="88.0026%" y="629" width="0.0322%" height="15" fill="rgb(238,60,50)"/><text x="88.2526%" y="639.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (3 samples, 0.03%)</title><rect x="88.0026%" y="613" width="0.0322%" height="15" fill="rgb(210,5,2)"/><text x="88.2526%" y="623.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (3 samples, 0.03%)</title><rect x="88.0026%" y="597" width="0.0322%" height="15" fill="rgb(214,207,24)"/><text x="88.2526%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (3 samples, 0.03%)</title><rect x="88.0026%" y="581" width="0.0322%" height="15" fill="rgb(228,173,2)"/><text x="88.2526%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.03%)</title><rect x="88.0026%" y="565" width="0.0322%" height="15" fill="rgb(244,26,8)"/><text x="88.2526%" y="575.50"></text></g><g><title>std::time::Instant::now (6 samples, 0.06%)</title><rect x="88.0991%" y="629" width="0.0643%" height="15" fill="rgb(249,153,35)"/><text x="88.3491%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (6 samples, 0.06%)</title><rect x="88.0991%" y="613" width="0.0643%" height="15" fill="rgb(221,215,40)"/><text x="88.3491%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::now (6 samples, 0.06%)</title><rect x="88.0991%" y="597" width="0.0643%" height="15" fill="rgb(238,106,35)"/><text x="88.3491%" y="607.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (6 samples, 0.06%)</title><rect x="88.0991%" y="581" width="0.0643%" height="15" fill="rgb(207,195,21)"/><text x="88.3491%" y="591.50"></text></g><g><title>parking_lot_core::parking_lot::park (6 samples, 0.06%)</title><rect x="88.0991%" y="565" width="0.0643%" height="15" fill="rgb(205,43,29)"/><text x="88.3491%" y="575.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (6 samples, 0.06%)</title><rect x="88.0991%" y="549" width="0.0643%" height="15" fill="rgb(236,35,21)"/><text x="88.3491%" y="559.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (6 samples, 0.06%)</title><rect x="88.0991%" y="533" width="0.0643%" height="15" fill="rgb(244,74,8)"/><text x="88.3491%" y="543.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (6 samples, 0.06%)</title><rect x="88.0991%" y="517" width="0.0643%" height="15" fill="rgb(241,229,7)"/><text x="88.3491%" y="527.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (6 samples, 0.06%)</title><rect x="88.0991%" y="501" width="0.0643%" height="15" fill="rgb(212,223,25)"/><text x="88.3491%" y="511.50"></text></g><g><title>syscall (6 samples, 0.06%)</title><rect x="88.0991%" y="485" width="0.0643%" height="15" fill="rgb(234,58,53)"/><text x="88.3491%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.06%)</title><rect x="88.0991%" y="469" width="0.0643%" height="15" fill="rgb(244,36,1)"/><text x="88.3491%" y="479.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (788 samples, 8.45%)</title><rect x="88.0776%" y="645" width="8.4486%" height="15" fill="rgb(222,40,54)"/><text x="88.3276%" y="655.50">&lt;parking_lot..</text></g><g><title>syscall (780 samples, 8.36%)</title><rect x="88.1634%" y="629" width="8.3628%" height="15" fill="rgb(210,207,39)"/><text x="88.4134%" y="639.50">syscall</text></g><g><title>[unknown] (770 samples, 8.26%)</title><rect x="88.2706%" y="613" width="8.2556%" height="15" fill="rgb(234,52,14)"/><text x="88.5206%" y="623.50">[unknown]</text></g><g><title>[unknown] (760 samples, 8.15%)</title><rect x="88.3778%" y="597" width="8.1484%" height="15" fill="rgb(239,108,46)"/><text x="88.6278%" y="607.50">[unknown]</text></g><g><title>[unknown] (753 samples, 8.07%)</title><rect x="88.4529%" y="581" width="8.0733%" height="15" fill="rgb(252,223,5)"/><text x="88.7029%" y="591.50">[unknown]</text></g><g><title>[unknown] (748 samples, 8.02%)</title><rect x="88.5065%" y="565" width="8.0197%" height="15" fill="rgb(227,181,11)"/><text x="88.7565%" y="575.50">[unknown]</text></g><g><title>[unknown] (740 samples, 7.93%)</title><rect x="88.5923%" y="549" width="7.9340%" height="15" fill="rgb(248,126,40)"/><text x="88.8423%" y="559.50">[unknown]</text></g><g><title>[unknown] (634 samples, 6.80%)</title><rect x="89.7287%" y="533" width="6.7975%" height="15" fill="rgb(243,1,18)"/><text x="89.9787%" y="543.50">[unknown]</text></g><g><title>[unknown] (583 samples, 6.25%)</title><rect x="90.2755%" y="517" width="6.2507%" height="15" fill="rgb(214,145,23)"/><text x="90.5255%" y="527.50">[unknown]</text></g><g><title>[unknown] (520 samples, 5.58%)</title><rect x="90.9510%" y="501" width="5.5752%" height="15" fill="rgb(241,218,11)"/><text x="91.2010%" y="511.50">[unknow..</text></g><g><title>[unknown] (405 samples, 4.34%)</title><rect x="92.1840%" y="485" width="4.3422%" height="15" fill="rgb(214,219,24)"/><text x="92.4340%" y="495.50">[unkn..</text></g><g><title>[unknown] (322 samples, 3.45%)</title><rect x="93.0739%" y="469" width="3.4523%" height="15" fill="rgb(235,32,7)"/><text x="93.3239%" y="479.50">[un..</text></g><g><title>[unknown] (168 samples, 1.80%)</title><rect x="94.7250%" y="453" width="1.8012%" height="15" fill="rgb(227,121,28)"/><text x="94.9750%" y="463.50">[..</text></g><g><title>[unknown] (59 samples, 0.63%)</title><rect x="95.8936%" y="437" width="0.6326%" height="15" fill="rgb(216,129,49)"/><text x="96.1436%" y="447.50"></text></g><g><title>[unknown] (8 samples, 0.09%)</title><rect x="96.4404%" y="421" width="0.0858%" height="15" fill="rgb(207,194,50)"/><text x="96.6904%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.5155%" y="405" width="0.0107%" height="15" fill="rgb(207,4,18)"/><text x="96.7655%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.5155%" y="389" width="0.0107%" height="15" fill="rgb(213,50,30)"/><text x="96.7655%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.5155%" y="373" width="0.0107%" height="15" fill="rgb(208,77,22)"/><text x="96.7655%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.5155%" y="357" width="0.0107%" height="15" fill="rgb(244,204,34)"/><text x="96.7655%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.5155%" y="341" width="0.0107%" height="15" fill="rgb(230,20,17)"/><text x="96.7655%" y="351.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.01%)</title><rect x="96.5262%" y="645" width="0.0107%" height="15" fill="rgb(237,83,15)"/><text x="96.7762%" y="655.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.01%)</title><rect x="96.5262%" y="629" width="0.0107%" height="15" fill="rgb(221,109,25)"/><text x="96.7762%" y="639.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="96.5262%" y="613" width="0.0107%" height="15" fill="rgb(205,194,52)"/><text x="96.7762%" y="623.50"></text></g><g><title>core::mem::swap (1 samples, 0.01%)</title><rect x="96.5262%" y="597" width="0.0107%" height="15" fill="rgb(244,173,54)"/><text x="96.7762%" y="607.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.01%)</title><rect x="96.5262%" y="581" width="0.0107%" height="15" fill="rgb(227,181,18)"/><text x="96.7762%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="96.5262%" y="565" width="0.0107%" height="15" fill="rgb(238,36,30)"/><text x="96.7762%" y="575.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.01%)</title><rect x="96.5369%" y="645" width="0.0107%" height="15" fill="rgb(254,85,0)"/><text x="96.7869%" y="655.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow::{{closure}} (1 samples, 0.01%)</title><rect x="96.5369%" y="629" width="0.0107%" height="15" fill="rgb(247,63,33)"/><text x="96.7869%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (12 samples, 0.13%)</title><rect x="96.5477%" y="645" width="0.1287%" height="15" fill="rgb(220,7,54)"/><text x="96.7977%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_load (12 samples, 0.13%)</title><rect x="96.5477%" y="629" width="0.1287%" height="15" fill="rgb(238,227,21)"/><text x="96.7977%" y="639.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (21 samples, 0.23%)</title><rect x="96.6763%" y="645" width="0.2252%" height="15" fill="rgb(237,29,31)"/><text x="96.9263%" y="655.50"></text></g><g><title>std::time::Instant::now (21 samples, 0.23%)</title><rect x="96.6763%" y="629" width="0.2252%" height="15" fill="rgb(211,21,50)"/><text x="96.9263%" y="639.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (21 samples, 0.23%)</title><rect x="96.6763%" y="613" width="0.2252%" height="15" fill="rgb(239,119,2)"/><text x="96.9263%" y="623.50"></text></g><g><title>std::sys::unix::time::inner::now (21 samples, 0.23%)</title><rect x="96.6763%" y="597" width="0.2252%" height="15" fill="rgb(250,2,39)"/><text x="96.9263%" y="607.50"></text></g><g><title>__clock_gettime (20 samples, 0.21%)</title><rect x="96.6870%" y="581" width="0.2144%" height="15" fill="rgb(244,46,53)"/><text x="96.9370%" y="591.50"></text></g><g><title>__vdso_clock_gettime (19 samples, 0.20%)</title><rect x="96.6978%" y="565" width="0.2037%" height="15" fill="rgb(209,21,19)"/><text x="96.9478%" y="575.50"></text></g><g><title>parking_lot_core::parking_lot::get_hashtable (1 samples, 0.01%)</title><rect x="96.9015%" y="629" width="0.0107%" height="15" fill="rgb(236,145,4)"/><text x="97.1515%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.01%)</title><rect x="96.9015%" y="613" width="0.0107%" height="15" fill="rgb(220,133,36)"/><text x="97.1515%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.01%)</title><rect x="96.9015%" y="597" width="0.0107%" height="15" fill="rgb(244,18,3)"/><text x="97.1515%" y="607.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (18 samples, 0.19%)</title><rect x="96.9015%" y="645" width="0.1930%" height="15" fill="rgb(232,171,48)"/><text x="97.1515%" y="655.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (17 samples, 0.18%)</title><rect x="96.9122%" y="629" width="0.1823%" height="15" fill="rgb(223,223,53)"/><text x="97.1622%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (17 samples, 0.18%)</title><rect x="96.9122%" y="613" width="0.1823%" height="15" fill="rgb(246,92,13)"/><text x="97.1622%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (17 samples, 0.18%)</title><rect x="96.9122%" y="597" width="0.1823%" height="15" fill="rgb(229,171,10)"/><text x="97.1622%" y="607.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (872 samples, 9.35%)</title><rect x="88.0347%" y="677" width="9.3492%" height="15" fill="rgb(213,131,26)"/><text x="88.2847%" y="687.50">parking_lot::..</text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (871 samples, 9.34%)</title><rect x="88.0455%" y="661" width="9.3385%" height="15" fill="rgb(242,87,54)"/><text x="88.2955%" y="671.50">parking_lot_c..</text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (27 samples, 0.29%)</title><rect x="97.0945%" y="645" width="0.2895%" height="15" fill="rgb(237,21,35)"/><text x="97.3445%" y="655.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (27 samples, 0.29%)</title><rect x="97.0945%" y="629" width="0.2895%" height="15" fill="rgb(253,13,47)"/><text x="97.3445%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (27 samples, 0.29%)</title><rect x="97.0945%" y="613" width="0.2895%" height="15" fill="rgb(215,122,49)"/><text x="97.3445%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_sub (27 samples, 0.29%)</title><rect x="97.0945%" y="597" width="0.2895%" height="15" fill="rgb(209,179,30)"/><text x="97.3445%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (2 samples, 0.02%)</title><rect x="97.3839%" y="661" width="0.0214%" height="15" fill="rgb(235,100,24)"/><text x="97.6339%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;usize&gt;&gt;&gt; (18 samples, 0.19%)</title><rect x="97.4054%" y="661" width="0.1930%" height="15" fill="rgb(209,67,24)"/><text x="97.6554%" y="671.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.19%)</title><rect x="97.4054%" y="645" width="0.1930%" height="15" fill="rgb(206,74,32)"/><text x="97.6554%" y="655.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (18 samples, 0.19%)</title><rect x="97.4054%" y="629" width="0.1930%" height="15" fill="rgb(212,45,25)"/><text x="97.6554%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (18 samples, 0.19%)</title><rect x="97.4054%" y="613" width="0.1930%" height="15" fill="rgb(239,26,3)"/><text x="97.6554%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (18 samples, 0.19%)</title><rect x="97.4054%" y="597" width="0.1930%" height="15" fill="rgb(218,36,15)"/><text x="97.6554%" y="607.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (6 samples, 0.06%)</title><rect x="97.5984%" y="661" width="0.0643%" height="15" fill="rgb(206,108,24)"/><text x="97.8484%" y="671.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (6 samples, 0.06%)</title><rect x="97.5984%" y="645" width="0.0643%" height="15" fill="rgb(234,204,42)"/><text x="97.8484%" y="655.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (6 samples, 0.06%)</title><rect x="97.5984%" y="629" width="0.0643%" height="15" fill="rgb(229,2,11)"/><text x="97.8484%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (6 samples, 0.06%)</title><rect x="97.5984%" y="613" width="0.0643%" height="15" fill="rgb(221,20,48)"/><text x="97.8484%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (6 samples, 0.06%)</title><rect x="97.5984%" y="597" width="0.0643%" height="15" fill="rgb(244,164,10)"/><text x="97.8484%" y="607.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::notify_should_wakeup (16 samples, 0.17%)</title><rect x="97.6627%" y="661" width="0.1715%" height="15" fill="rgb(243,229,2)"/><text x="97.9127%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (16 samples, 0.17%)</title><rect x="97.6627%" y="645" width="0.1715%" height="15" fill="rgb(232,131,37)"/><text x="97.9127%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_add (16 samples, 0.17%)</title><rect x="97.6627%" y="629" width="0.1715%" height="15" fill="rgb(217,156,11)"/><text x="97.9127%" y="639.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (1,310 samples, 14.05%)</title><rect x="83.8212%" y="741" width="14.0452%" height="15" fill="rgb(239,99,48)"/><text x="84.0712%" y="751.50">tokio::runtime::threa..</text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_from_searching (947 samples, 10.15%)</title><rect x="87.7131%" y="725" width="10.1533%" height="15" fill="rgb(231,209,9)"/><text x="87.9631%" y="735.50">tokio::runtime:..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::transition_worker_from_searching (947 samples, 10.15%)</title><rect x="87.7131%" y="709" width="10.1533%" height="15" fill="rgb(254,97,27)"/><text x="87.9631%" y="719.50">tokio::runtime:..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (941 samples, 10.09%)</title><rect x="87.7774%" y="693" width="10.0890%" height="15" fill="rgb(223,151,38)"/><text x="88.0274%" y="703.50">tokio::runtime:..</text></g><g><title>tokio::runtime::thread_pool::idle::Idle::worker_to_notify (45 samples, 0.48%)</title><rect x="97.3839%" y="677" width="0.4825%" height="15" fill="rgb(219,206,35)"/><text x="97.6339%" y="687.50"></text></g><g><title>tokio::runtime::thread_pool::idle::State::unpark_one (3 samples, 0.03%)</title><rect x="97.8342%" y="661" width="0.0322%" height="15" fill="rgb(216,130,31)"/><text x="98.0842%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3 samples, 0.03%)</title><rect x="97.8342%" y="645" width="0.0322%" height="15" fill="rgb(251,97,34)"/><text x="98.0842%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.03%)</title><rect x="97.8342%" y="629" width="0.0322%" height="15" fill="rgb(246,159,47)"/><text x="98.0842%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::task::Notified&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="97.9522%" y="709" width="0.0214%" height="15" fill="rgb(232,87,10)"/><text x="98.2022%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::queue::Pointers&gt;&gt; (22 samples, 0.24%)</title><rect x="97.9843%" y="677" width="0.2359%" height="15" fill="rgb(249,1,37)"/><text x="98.2343%" y="687.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.24%)</title><rect x="97.9843%" y="661" width="0.2359%" height="15" fill="rgb(239,135,14)"/><text x="98.2343%" y="671.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (22 samples, 0.24%)</title><rect x="97.9843%" y="645" width="0.2359%" height="15" fill="rgb(253,116,46)"/><text x="98.2343%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (22 samples, 0.24%)</title><rect x="97.9843%" y="629" width="0.2359%" height="15" fill="rgb(222,217,37)"/><text x="98.2343%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (22 samples, 0.24%)</title><rect x="97.9843%" y="613" width="0.2359%" height="15" fill="rgb(252,96,8)"/><text x="98.2343%" y="623.50"></text></g><g><title>tokio::loom::std::atomic_usize::AtomicUsize::unsync_load (1 samples, 0.01%)</title><rect x="98.2202%" y="677" width="0.0107%" height="15" fill="rgb(254,103,41)"/><text x="98.4702%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (6 samples, 0.06%)</title><rect x="98.2309%" y="629" width="0.0643%" height="15" fill="rgb(218,213,19)"/><text x="98.4809%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (6 samples, 0.06%)</title><rect x="98.2309%" y="613" width="0.0643%" height="15" fill="rgb(253,95,21)"/><text x="98.4809%" y="623.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (7 samples, 0.08%)</title><rect x="98.2309%" y="677" width="0.0751%" height="15" fill="rgb(229,26,28)"/><text x="98.4809%" y="687.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (7 samples, 0.08%)</title><rect x="98.2309%" y="661" width="0.0751%" height="15" fill="rgb(230,129,16)"/><text x="98.4809%" y="671.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (7 samples, 0.08%)</title><rect x="98.2309%" y="645" width="0.0751%" height="15" fill="rgb(236,126,17)"/><text x="98.4809%" y="655.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (1 samples, 0.01%)</title><rect x="98.2953%" y="629" width="0.0107%" height="15" fill="rgb(209,33,33)"/><text x="98.5453%" y="639.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (1 samples, 0.01%)</title><rect x="98.2953%" y="613" width="0.0107%" height="15" fill="rgb(227,85,29)"/><text x="98.5453%" y="623.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (1 samples, 0.01%)</title><rect x="98.2953%" y="597" width="0.0107%" height="15" fill="rgb(241,53,46)"/><text x="98.5453%" y="607.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (1 samples, 0.01%)</title><rect x="98.2953%" y="581" width="0.0107%" height="15" fill="rgb(228,167,53)"/><text x="98.5453%" y="591.50"></text></g><g><title>core::hint::spin_loop (1 samples, 0.01%)</title><rect x="98.2953%" y="565" width="0.0107%" height="15" fill="rgb(238,195,45)"/><text x="98.5453%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.01%)</title><rect x="98.2953%" y="549" width="0.0107%" height="15" fill="rgb(252,124,45)"/><text x="98.5453%" y="559.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::is_empty (8 samples, 0.09%)</title><rect x="98.3060%" y="677" width="0.0858%" height="15" fill="rgb(251,38,35)"/><text x="98.5560%" y="687.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::len (8 samples, 0.09%)</title><rect x="98.3060%" y="661" width="0.0858%" height="15" fill="rgb(227,33,2)"/><text x="98.5560%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (8 samples, 0.09%)</title><rect x="98.3060%" y="645" width="0.0858%" height="15" fill="rgb(223,157,46)"/><text x="98.5560%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_load (8 samples, 0.09%)</title><rect x="98.3060%" y="629" width="0.0858%" height="15" fill="rgb(222,78,41)"/><text x="98.5560%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (43 samples, 0.46%)</title><rect x="97.9522%" y="725" width="0.4610%" height="15" fill="rgb(248,176,11)"/><text x="98.2022%" y="735.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_task::{{closure}} (41 samples, 0.44%)</title><rect x="97.9736%" y="709" width="0.4396%" height="15" fill="rgb(241,221,18)"/><text x="98.2236%" y="719.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::pop (41 samples, 0.44%)</title><rect x="97.9736%" y="693" width="0.4396%" height="15" fill="rgb(218,85,22)"/><text x="98.2236%" y="703.50"></text></g><g><title>tokio::runtime::queue::get_next (2 samples, 0.02%)</title><rect x="98.3918%" y="677" width="0.0214%" height="15" fill="rgb(222,223,7)"/><text x="98.6418%" y="687.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="98.3918%" y="661" width="0.0214%" height="15" fill="rgb(254,59,39)"/><text x="98.6418%" y="671.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::pop (1 samples, 0.01%)</title><rect x="98.4132%" y="725" width="0.0107%" height="15" fill="rgb(247,100,27)"/><text x="98.6632%" y="735.50"></text></g><g><title>tokio::runtime::queue::get_next (1 samples, 0.01%)</title><rect x="98.4132%" y="709" width="0.0107%" height="15" fill="rgb(237,207,10)"/><text x="98.6632%" y="719.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="98.4132%" y="693" width="0.0107%" height="15" fill="rgb(220,121,28)"/><text x="98.6632%" y="703.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_task (58 samples, 0.62%)</title><rect x="97.8664%" y="741" width="0.6219%" height="15" fill="rgb(213,223,20)"/><text x="98.1164%" y="751.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_local_task (6 samples, 0.06%)</title><rect x="98.4239%" y="725" width="0.0643%" height="15" fill="rgb(205,121,27)"/><text x="98.6739%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (6 samples, 0.06%)</title><rect x="98.4239%" y="709" width="0.0643%" height="15" fill="rgb(253,24,53)"/><text x="98.6739%" y="719.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_local_task::{{closure}} (6 samples, 0.06%)</title><rect x="98.4239%" y="693" width="0.0643%" height="15" fill="rgb(224,224,47)"/><text x="98.6739%" y="703.50"></text></g><g><title>tokio::runtime::queue::Local&lt;T&gt;::pop (6 samples, 0.06%)</title><rect x="98.4239%" y="677" width="0.0643%" height="15" fill="rgb(250,125,36)"/><text x="98.6739%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (5 samples, 0.05%)</title><rect x="98.4347%" y="661" width="0.0536%" height="15" fill="rgb(240,144,38)"/><text x="98.6847%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.05%)</title><rect x="98.4347%" y="645" width="0.0536%" height="15" fill="rgb(250,15,50)"/><text x="98.6847%" y="655.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (3 samples, 0.03%)</title><rect x="98.8421%" y="725" width="0.0322%" height="15" fill="rgb(210,24,26)"/><text x="99.0921%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (2 samples, 0.02%)</title><rect x="98.8528%" y="709" width="0.0214%" height="15" fill="rgb(234,53,53)"/><text x="99.1028%" y="719.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="98.8742%" y="709" width="0.0107%" height="15" fill="rgb(208,108,28)"/><text x="99.1242%" y="719.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.01%)</title><rect x="98.8742%" y="693" width="0.0107%" height="15" fill="rgb(227,143,7)"/><text x="99.1242%" y="703.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.01%)</title><rect x="98.8742%" y="677" width="0.0107%" height="15" fill="rgb(238,189,38)"/><text x="99.1242%" y="687.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (1 samples, 0.01%)</title><rect x="98.8742%" y="661" width="0.0107%" height="15" fill="rgb(222,69,15)"/><text x="99.1242%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU8::load (1 samples, 0.01%)</title><rect x="98.8742%" y="645" width="0.0107%" height="15" fill="rgb(213,169,7)"/><text x="99.1242%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="98.8742%" y="629" width="0.0107%" height="15" fill="rgb(251,219,4)"/><text x="99.1242%" y="639.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::pop (4 samples, 0.04%)</title><rect x="98.8742%" y="725" width="0.0429%" height="15" fill="rgb(241,55,40)"/><text x="99.1242%" y="735.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::is_empty (3 samples, 0.03%)</title><rect x="98.8850%" y="709" width="0.0322%" height="15" fill="rgb(243,57,30)"/><text x="99.1350%" y="719.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::len (3 samples, 0.03%)</title><rect x="98.8850%" y="693" width="0.0322%" height="15" fill="rgb(234,50,30)"/><text x="99.1350%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.03%)</title><rect x="98.8850%" y="677" width="0.0322%" height="15" fill="rgb(239,23,42)"/><text x="99.1350%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.03%)</title><rect x="98.8850%" y="661" width="0.0322%" height="15" fill="rgb(217,38,19)"/><text x="99.1350%" y="671.50"></text></g><g><title>core::num::&lt;impl u16&gt;::wrapping_sub (2 samples, 0.02%)</title><rect x="98.9493%" y="709" width="0.0214%" height="15" fill="rgb(215,179,16)"/><text x="99.1993%" y="719.50"></text></g><g><title>tokio::loom::std::atomic_u16::AtomicU16::unsync_load (2 samples, 0.02%)</title><rect x="98.9707%" y="709" width="0.0214%" height="15" fill="rgb(254,21,37)"/><text x="99.2207%" y="719.50"></text></g><g><title>core::num::&lt;impl u16&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="99.0565%" y="693" width="0.0214%" height="15" fill="rgb(219,207,48)"/><text x="99.3065%" y="703.50"></text></g><g><title>core::num::&lt;impl u16&gt;::wrapping_sub (3 samples, 0.03%)</title><rect x="99.0779%" y="693" width="0.0322%" height="15" fill="rgb(227,225,41)"/><text x="99.3279%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (10 samples, 0.11%)</title><rect x="99.1101%" y="693" width="0.1072%" height="15" fill="rgb(223,130,1)"/><text x="99.3601%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (10 samples, 0.11%)</title><rect x="99.1101%" y="677" width="0.1072%" height="15" fill="rgb(249,54,42)"/><text x="99.3601%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (18 samples, 0.19%)</title><rect x="99.2173%" y="693" width="0.1930%" height="15" fill="rgb(248,69,25)"/><text x="99.4673%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (18 samples, 0.19%)</title><rect x="99.2173%" y="677" width="0.1930%" height="15" fill="rgb(234,21,32)"/><text x="99.4673%" y="687.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (5 samples, 0.05%)</title><rect x="99.4103%" y="693" width="0.0536%" height="15" fill="rgb(252,136,6)"/><text x="99.6603%" y="703.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::steal_into2::{{closure}} (5 samples, 0.05%)</title><rect x="99.4103%" y="677" width="0.0536%" height="15" fill="rgb(245,87,12)"/><text x="99.6603%" y="687.50"></text></g><g><title>core::ptr::read (5 samples, 0.05%)</title><rect x="99.4103%" y="661" width="0.0536%" height="15" fill="rgb(208,12,15)"/><text x="99.6603%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.05%)</title><rect x="99.4103%" y="645" width="0.0536%" height="15" fill="rgb(250,98,2)"/><text x="99.6603%" y="655.50"></text></g><g><title>tokio::runtime::queue::pack (1 samples, 0.01%)</title><rect x="99.4639%" y="693" width="0.0107%" height="15" fill="rgb(205,213,15)"/><text x="99.7139%" y="703.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::steal_into (57 samples, 0.61%)</title><rect x="98.9171%" y="725" width="0.6111%" height="15" fill="rgb(248,192,44)"/><text x="99.1671%" y="735.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::steal_into2 (50 samples, 0.54%)</title><rect x="98.9922%" y="709" width="0.5361%" height="15" fill="rgb(221,89,17)"/><text x="99.2422%" y="719.50"></text></g><g><title>tokio::runtime::queue::unpack (5 samples, 0.05%)</title><rect x="99.4746%" y="693" width="0.0536%" height="15" fill="rgb(209,55,3)"/><text x="99.7246%" y="703.50"></text></g><g><title>tokio::runtime::thread_pool::idle::State::inc_num_searching (12 samples, 0.13%)</title><rect x="99.5819%" y="693" width="0.1287%" height="15" fill="rgb(247,23,45)"/><text x="99.8319%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (12 samples, 0.13%)</title><rect x="99.5819%" y="677" width="0.1287%" height="15" fill="rgb(235,152,23)"/><text x="99.8319%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_add (12 samples, 0.13%)</title><rect x="99.5819%" y="661" width="0.1287%" height="15" fill="rgb(244,63,13)"/><text x="99.8319%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::steal_work (115 samples, 1.23%)</title><rect x="98.4883%" y="741" width="1.2330%" height="15" fill="rgb(227,30,37)"/><text x="98.7383%" y="751.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_to_searching (18 samples, 0.19%)</title><rect x="99.5283%" y="725" width="0.1930%" height="15" fill="rgb(224,49,42)"/><text x="99.7783%" y="735.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::transition_worker_to_searching (16 samples, 0.17%)</title><rect x="99.5497%" y="709" width="0.1715%" height="15" fill="rgb(218,129,5)"/><text x="99.7997%" y="719.50"></text></g><g><title>tokio::runtime::thread_pool::idle::State::load (1 samples, 0.01%)</title><rect x="99.7105%" y="693" width="0.0107%" height="15" fill="rgb(240,199,54)"/><text x="99.9605%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="99.7105%" y="677" width="0.0107%" height="15" fill="rgb(234,31,13)"/><text x="99.9605%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="99.7105%" y="661" width="0.0107%" height="15" fill="rgb(219,73,54)"/><text x="99.9605%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::tick (1 samples, 0.01%)</title><rect x="99.7212%" y="741" width="0.0107%" height="15" fill="rgb(251,162,10)"/><text x="99.9712%" y="751.50"></text></g><g><title>core::num::&lt;impl u8&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="99.7212%" y="725" width="0.0107%" height="15" fill="rgb(240,138,47)"/><text x="99.9712%" y="735.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.01%)</title><rect x="99.7320%" y="725" width="0.0107%" height="15" fill="rgb(216,138,26)"/><text x="99.9820%" y="735.50"></text></g><g><title>isfree (1 samples, 0.01%)</title><rect x="99.7320%" y="709" width="0.0107%" height="15" fill="rgb(243,17,35)"/><text x="99.9820%" y="719.50"></text></g><g><title>isdalloct (1 samples, 0.01%)</title><rect x="99.7320%" y="693" width="0.0107%" height="15" fill="rgb(241,60,18)"/><text x="99.9820%" y="703.50"></text></g><g><title>arena_sdalloc (1 samples, 0.01%)</title><rect x="99.7320%" y="677" width="0.0107%" height="15" fill="rgb(234,2,44)"/><text x="99.9820%" y="687.50"></text></g><g><title>tcache_dalloc_small (1 samples, 0.01%)</title><rect x="99.7320%" y="661" width="0.0107%" height="15" fill="rgb(225,225,33)"/><text x="99.9820%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7320%" y="645" width="0.0107%" height="15" fill="rgb(234,50,31)"/><text x="99.9820%" y="655.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7320%" y="629" width="0.0107%" height="15" fill="rgb(249,6,25)"/><text x="99.9820%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7320%" y="613" width="0.0107%" height="15" fill="rgb(241,5,17)"/><text x="99.9820%" y="623.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7320%" y="597" width="0.0107%" height="15" fill="rgb(207,116,10)"/><text x="99.9820%" y="607.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7320%" y="581" width="0.0107%" height="15" fill="rgb(222,128,18)"/><text x="99.9820%" y="591.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7320%" y="565" width="0.0107%" height="15" fill="rgb(229,109,25)"/><text x="99.9820%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7320%" y="549" width="0.0107%" height="15" fill="rgb(222,102,25)"/><text x="99.9820%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7320%" y="533" width="0.0107%" height="15" fill="rgb(239,211,5)"/><text x="99.9820%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7320%" y="517" width="0.0107%" height="15" fill="rgb(223,136,26)"/><text x="99.9820%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.7320%" y="501" width="0.0107%" height="15" fill="rgb(227,30,15)"/><text x="99.9820%" y="511.50"></text></g><g><title>clone (3,555 samples, 38.12%)</title><rect x="61.6811%" y="1285" width="38.1151%" height="15" fill="rgb(247,76,4)"/><text x="61.9311%" y="1295.50">clone</text></g><g><title>start_thread (3,555 samples, 38.12%)</title><rect x="61.6811%" y="1269" width="38.1151%" height="15" fill="rgb(245,38,48)"/><text x="61.9311%" y="1279.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (3,553 samples, 38.09%)</title><rect x="61.7026%" y="1253" width="38.0937%" height="15" fill="rgb(210,220,14)"/><text x="61.9526%" y="1263.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3,553 samples, 38.09%)</title><rect x="61.7026%" y="1237" width="38.0937%" height="15" fill="rgb(224,60,51)"/><text x="61.9526%" y="1247.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (3,553 samples, 38.09%)</title><rect x="61.7026%" y="1221" width="38.0937%" height="15" fill="rgb(212,133,49)"/><text x="61.9526%" y="1231.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (3,553 samples, 38.09%)</title><rect x="61.7026%" y="1205" width="38.0937%" height="15" fill="rgb(231,39,22)"/><text x="61.9526%" y="1215.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (3,553 samples, 38.09%)</title><rect x="61.7026%" y="1189" width="38.0937%" height="15" fill="rgb(236,173,22)"/><text x="61.9526%" y="1199.50">std::thread::Builder::spawn_unchecked::{{closure}}</text></g><g><title>std::panic::catch_unwind (3,553 samples, 38.09%)</title><rect x="61.7026%" y="1173" width="38.0937%" height="15" fill="rgb(210,70,0)"/><text x="61.9526%" y="1183.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (3,553 samples, 38.09%)</title><rect x="61.7026%" y="1157" width="38.0937%" height="15" fill="rgb(215,170,11)"/><text x="61.9526%" y="1167.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (3,553 samples, 38.09%)</title><rect x="61.7026%" y="1141" width="38.0937%" height="15" fill="rgb(220,154,28)"/><text x="61.9526%" y="1151.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,553 samples, 38.09%)</title><rect x="61.7026%" y="1125" width="38.0937%" height="15" fill="rgb(240,160,41)"/><text x="61.9526%" y="1135.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnc..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (3,553 samples, 38.09%)</title><rect x="61.7026%" y="1109" width="38.0937%" height="15" fill="rgb(243,215,41)"/><text x="61.9526%" y="1119.50">std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3,553 samples, 38.09%)</title><rect x="61.7026%" y="1093" width="38.0937%" height="15" fill="rgb(214,208,31)"/><text x="61.9526%" y="1103.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (3,553 samples, 38.09%)</title><rect x="61.7026%" y="1077" width="38.0937%" height="15" fill="rgb(247,57,22)"/><text x="61.9526%" y="1087.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closu..</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (3,553 samples, 38.09%)</title><rect x="61.7026%" y="1061" width="38.0937%" height="15" fill="rgb(228,73,52)"/><text x="61.9526%" y="1071.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (3,546 samples, 38.02%)</title><rect x="61.7776%" y="1045" width="38.0187%" height="15" fill="rgb(252,60,9)"/><text x="62.0276%" y="1055.50">tokio::runtime::task::Notified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (3,546 samples, 38.02%)</title><rect x="61.7776%" y="1029" width="38.0187%" height="15" fill="rgb(233,9,51)"/><text x="62.0276%" y="1039.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (3,546 samples, 38.02%)</title><rect x="61.7776%" y="1013" width="38.0187%" height="15" fill="rgb(223,67,14)"/><text x="62.0276%" y="1023.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (3,546 samples, 38.02%)</title><rect x="61.7776%" y="997" width="38.0187%" height="15" fill="rgb(222,86,2)"/><text x="62.0276%" y="1007.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (3,546 samples, 38.02%)</title><rect x="61.7776%" y="981" width="38.0187%" height="15" fill="rgb(243,58,54)"/><text x="62.0276%" y="991.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (3,546 samples, 38.02%)</title><rect x="61.7776%" y="965" width="38.0187%" height="15" fill="rgb(210,200,39)"/><text x="62.0276%" y="975.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (3,546 samples, 38.02%)</title><rect x="61.7776%" y="949" width="38.0187%" height="15" fill="rgb(238,135,9)"/><text x="62.0276%" y="959.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (3,546 samples, 38.02%)</title><rect x="61.7776%" y="933" width="38.0187%" height="15" fill="rgb(232,179,7)"/><text x="62.0276%" y="943.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,546 samples, 38.02%)</title><rect x="61.7776%" y="917" width="38.0187%" height="15" fill="rgb(245,65,41)"/><text x="62.0276%" y="927.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnc..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (3,546 samples, 38.02%)</title><rect x="61.7776%" y="901" width="38.0187%" height="15" fill="rgb(227,43,8)"/><text x="62.0276%" y="911.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (3,546 samples, 38.02%)</title><rect x="61.7776%" y="885" width="38.0187%" height="15" fill="rgb(235,91,14)"/><text x="62.0276%" y="895.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3,546 samples, 38.02%)</title><rect x="61.7776%" y="869" width="38.0187%" height="15" fill="rgb(235,219,31)"/><text x="62.0276%" y="879.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (3,546 samples, 38.02%)</title><rect x="61.7776%" y="853" width="38.0187%" height="15" fill="rgb(227,121,25)"/><text x="62.0276%" y="863.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}}</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (3,546 samples, 38.02%)</title><rect x="61.7776%" y="837" width="38.0187%" height="15" fill="rgb(254,129,24)"/><text x="62.0276%" y="847.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::futu..</text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (3,546 samples, 38.02%)</title><rect x="61.7776%" y="821" width="38.0187%" height="15" fill="rgb(226,144,49)"/><text x="62.0276%" y="831.50">tokio::runtime::thread_pool::worker::Launch::launch::{{closure..</text></g><g><title>tokio::runtime::thread_pool::worker::run (3,546 samples, 38.02%)</title><rect x="61.7776%" y="805" width="38.0187%" height="15" fill="rgb(214,187,32)"/><text x="62.0276%" y="815.50">tokio::runtime::thread_pool::worker::run</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (3,546 samples, 38.02%)</title><rect x="61.7776%" y="789" width="38.0187%" height="15" fill="rgb(243,129,46)"/><text x="62.0276%" y="799.50">tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (3,546 samples, 38.02%)</title><rect x="61.7776%" y="773" width="38.0187%" height="15" fill="rgb(221,185,35)"/><text x="62.0276%" y="783.50">tokio::runtime::thread_pool::worker::run::{{closure}}</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (3,546 samples, 38.02%)</title><rect x="61.7776%" y="757" width="38.0187%" height="15" fill="rgb(205,0,32)"/><text x="62.0276%" y="767.50">tokio::runtime::thread_pool::worker::Context::run</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::shutdown (6 samples, 0.06%)</title><rect x="99.7320%" y="741" width="0.0643%" height="15" fill="rgb(229,179,12)"/><text x="99.9820%" y="751.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (5 samples, 0.05%)</title><rect x="99.7427%" y="725" width="0.0536%" height="15" fill="rgb(252,107,19)"/><text x="99.9927%" y="735.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (5 samples, 0.05%)</title><rect x="99.7427%" y="709" width="0.0536%" height="15" fill="rgb(220,95,27)"/><text x="99.9927%" y="719.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (5 samples, 0.05%)</title><rect x="99.7427%" y="693" width="0.0536%" height="15" fill="rgb(240,113,40)"/><text x="99.9927%" y="703.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (5 samples, 0.05%)</title><rect x="99.7427%" y="677" width="0.0536%" height="15" fill="rgb(208,4,43)"/><text x="99.9927%" y="687.50"></text></g><g><title>parking_lot_core::parking_lot::park (5 samples, 0.05%)</title><rect x="99.7427%" y="661" width="0.0536%" height="15" fill="rgb(247,189,30)"/><text x="99.9927%" y="671.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (5 samples, 0.05%)</title><rect x="99.7427%" y="645" width="0.0536%" height="15" fill="rgb(231,157,17)"/><text x="99.9927%" y="655.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (5 samples, 0.05%)</title><rect x="99.7427%" y="629" width="0.0536%" height="15" fill="rgb(224,139,6)"/><text x="99.9927%" y="639.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (5 samples, 0.05%)</title><rect x="99.7427%" y="613" width="0.0536%" height="15" fill="rgb(223,83,16)"/><text x="99.9927%" y="623.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (5 samples, 0.05%)</title><rect x="99.7427%" y="597" width="0.0536%" height="15" fill="rgb(232,211,20)"/><text x="99.9927%" y="607.50"></text></g><g><title>syscall (5 samples, 0.05%)</title><rect x="99.7427%" y="581" width="0.0536%" height="15" fill="rgb(225,203,35)"/><text x="99.9927%" y="591.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.7427%" y="565" width="0.0536%" height="15" fill="rgb(215,211,44)"/><text x="99.9927%" y="575.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.7427%" y="549" width="0.0536%" height="15" fill="rgb(248,213,26)"/><text x="99.9927%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.7427%" y="533" width="0.0536%" height="15" fill="rgb(214,23,52)"/><text x="99.9927%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.7427%" y="517" width="0.0536%" height="15" fill="rgb(225,173,50)"/><text x="99.9927%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.7427%" y="501" width="0.0536%" height="15" fill="rgb(206,150,22)"/><text x="99.9927%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.7427%" y="485" width="0.0536%" height="15" fill="rgb(239,64,23)"/><text x="99.9927%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.7427%" y="469" width="0.0536%" height="15" fill="rgb(242,50,38)"/><text x="99.9927%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.7427%" y="453" width="0.0536%" height="15" fill="rgb(217,91,15)"/><text x="99.9927%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.7427%" y="437" width="0.0536%" height="15" fill="rgb(230,172,6)"/><text x="99.9927%" y="447.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="99.7534%" y="421" width="0.0429%" height="15" fill="rgb(221,98,26)"/><text x="100.0034%" y="431.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="99.7534%" y="405" width="0.0429%" height="15" fill="rgb(227,210,45)"/><text x="100.0034%" y="415.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="99.7534%" y="389" width="0.0429%" height="15" fill="rgb(206,8,30)"/><text x="100.0034%" y="399.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="99.7534%" y="373" width="0.0429%" height="15" fill="rgb(241,219,17)"/><text x="100.0034%" y="383.50"></text></g><g><title>[unknown] (4 samples, 0.04%)</title><rect x="99.7534%" y="357" width="0.0429%" height="15" fill="rgb(247,121,29)"/><text x="100.0034%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::expr::ExprInstance&gt;&gt; (1 samples, 0.01%)</title><rect x="99.7963%" y="1285" width="0.0107%" height="15" fill="rgb(219,169,49)"/><text x="100.0463%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::CoreStage&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_join_double::{{closure}}&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="99.8070%" y="1285" width="0.0107%" height="15" fill="rgb(253,49,49)"/><text x="100.0570%" y="1295.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (1 samples, 0.01%)</title><rect x="99.8177%" y="1285" width="0.0107%" height="15" fill="rgb(217,178,3)"/><text x="100.0677%" y="1295.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (1 samples, 0.01%)</title><rect x="99.8177%" y="1269" width="0.0107%" height="15" fill="rgb(234,73,37)"/><text x="100.0677%" y="1279.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (1 samples, 0.01%)</title><rect x="99.8177%" y="1253" width="0.0107%" height="15" fill="rgb(250,98,22)"/><text x="100.0677%" y="1263.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (1 samples, 0.01%)</title><rect x="99.8285%" y="1285" width="0.0107%" height="15" fill="rgb(220,108,37)"/><text x="100.0785%" y="1295.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate (1 samples, 0.01%)</title><rect x="99.8392%" y="1285" width="0.0107%" height="15" fill="rgb(225,168,10)"/><text x="100.0892%" y="1295.50"></text></g><g><title>tokio::coop::Budget::decrement (1 samples, 0.01%)</title><rect x="99.8499%" y="1285" width="0.0107%" height="15" fill="rgb(247,215,21)"/><text x="100.0999%" y="1295.50"></text></g><g><title>tokio::runtime::task::core::Trailer::wake_join (1 samples, 0.01%)</title><rect x="99.8606%" y="1285" width="0.0107%" height="15" fill="rgb(253,189,31)"/><text x="100.1106%" y="1295.50"></text></g><g><title>tokio::runtime::task::harness::SchedulerView&lt;S&gt;::transition_to_terminal (2 samples, 0.02%)</title><rect x="99.8713%" y="1269" width="0.0214%" height="15" fill="rgb(241,54,22)"/><text x="100.1213%" y="1279.50"></text></g><g><title>tokio::runtime::task::harness::SchedulerView&lt;S&gt;::to_task (2 samples, 0.02%)</title><rect x="99.8713%" y="1253" width="0.0214%" height="15" fill="rgb(211,87,4)"/><text x="100.1213%" y="1263.50"></text></g><g><title>tokio::runtime::task::Task&lt;S&gt;::from_raw (2 samples, 0.02%)</title><rect x="99.8713%" y="1237" width="0.0214%" height="15" fill="rgb(245,112,24)"/><text x="100.1213%" y="1247.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (3 samples, 0.03%)</title><rect x="99.8713%" y="1285" width="0.0322%" height="15" fill="rgb(235,190,41)"/><text x="100.1213%" y="1295.50"></text></g><g><title>tokio::runtime::task::harness::transition_to_complete (1 samples, 0.01%)</title><rect x="99.8928%" y="1269" width="0.0107%" height="15" fill="rgb(214,89,8)"/><text x="100.1428%" y="1279.50"></text></g><g><title>tokio::runtime::task::raw::drop_join_handle_slow (1 samples, 0.01%)</title><rect x="99.9035%" y="1285" width="0.0107%" height="15" fill="rgb(249,155,35)"/><text x="100.1535%" y="1295.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (1 samples, 0.01%)</title><rect x="99.9035%" y="1269" width="0.0107%" height="15" fill="rgb(249,88,26)"/><text x="100.1535%" y="1279.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (1 samples, 0.01%)</title><rect x="99.9035%" y="1253" width="0.0107%" height="15" fill="rgb(232,56,8)"/><text x="100.1535%" y="1263.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park (3 samples, 0.03%)</title><rect x="99.9142%" y="1269" width="0.0322%" height="15" fill="rgb(240,95,3)"/><text x="100.1642%" y="1279.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::maintenance (3 samples, 0.03%)</title><rect x="99.9142%" y="1253" width="0.0322%" height="15" fill="rgb(222,44,28)"/><text x="100.1642%" y="1263.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_task (1 samples, 0.01%)</title><rect x="99.9464%" y="1269" width="0.0107%" height="15" fill="rgb(234,16,30)"/><text x="100.1964%" y="1279.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_local_task (1 samples, 0.01%)</title><rect x="99.9464%" y="1253" width="0.0107%" height="15" fill="rgb(223,26,17)"/><text x="100.1964%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.01%)</title><rect x="99.9464%" y="1237" width="0.0107%" height="15" fill="rgb(239,187,47)"/><text x="100.1964%" y="1247.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_local_task::{{closure}} (1 samples, 0.01%)</title><rect x="99.9464%" y="1221" width="0.0107%" height="15" fill="rgb(247,102,50)"/><text x="100.1964%" y="1231.50"></text></g><g><title>all (9,327 samples, 100%)</title><rect x="0.0000%" y="1317" width="100.0000%" height="15" fill="rgb(231,216,22)"/><text x="0.2500%" y="1327.50"></text></g><g><title>tokio-runtime-w (7,925 samples, 84.97%)</title><rect x="15.0316%" y="1301" width="84.9684%" height="15" fill="rgb(216,201,26)"/><text x="15.2816%" y="1311.50">tokio-runtime-w</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (8 samples, 0.09%)</title><rect x="99.9142%" y="1285" width="0.0858%" height="15" fill="rgb(214,186,23)"/><text x="100.1642%" y="1295.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::steal_work (4 samples, 0.04%)</title><rect x="99.9571%" y="1269" width="0.0429%" height="15" fill="rgb(235,184,4)"/><text x="100.2071%" y="1279.50"></text></g></svg></svg>