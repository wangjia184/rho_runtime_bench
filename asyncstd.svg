<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1286" onload="init(evt)" viewBox="0 0 1200 1286" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1286" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1269.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1269.00"> </text><svg id="frames" x="10" width="1180"><g><title>async-io (1 samples, 0.02%)</title><rect x="0.0000%" y="1221" width="0.0154%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="1231.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="0.0000%" y="1205" width="0.0154%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="1215.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (1 samples, 0.02%)</title><rect x="0.0000%" y="1189" width="0.0154%" height="15" fill="rgb(221,193,54)"/><text x="0.2500%" y="1199.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (1 samples, 0.02%)</title><rect x="0.0000%" y="1173" width="0.0154%" height="15" fill="rgb(248,212,6)"/><text x="0.2500%" y="1183.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="0.0154%" y="1205" width="0.0154%" height="15" fill="rgb(208,68,35)"/><text x="0.2654%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="0.0307%" y="1205" width="0.0154%" height="15" fill="rgb(232,128,0)"/><text x="0.2807%" y="1215.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="0.0461%" y="1205" width="0.0154%" height="15" fill="rgb(207,160,47)"/><text x="0.2961%" y="1215.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (3 samples, 0.05%)</title><rect x="0.0615%" y="1205" width="0.0461%" height="15" fill="rgb(228,23,34)"/><text x="0.3115%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.05%)</title><rect x="0.0615%" y="1189" width="0.0461%" height="15" fill="rgb(218,30,26)"/><text x="0.3115%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.03%)</title><rect x="0.0768%" y="1173" width="0.0307%" height="15" fill="rgb(220,122,19)"/><text x="0.3268%" y="1183.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.03%)</title><rect x="0.0768%" y="1157" width="0.0307%" height="15" fill="rgb(250,228,42)"/><text x="0.3268%" y="1167.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash (1 samples, 0.02%)</title><rect x="0.1075%" y="1205" width="0.0154%" height="15" fill="rgb(240,193,28)"/><text x="0.3575%" y="1215.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="0.1229%" y="1205" width="0.0154%" height="15" fill="rgb(216,20,37)"/><text x="0.3729%" y="1215.50"></text></g><g><title>[[stack]] (1 samples, 0.02%)</title><rect x="0.1383%" y="1205" width="0.0154%" height="15" fill="rgb(206,188,39)"/><text x="0.3883%" y="1215.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="0.1383%" y="1189" width="0.0154%" height="15" fill="rgb(217,207,13)"/><text x="0.3883%" y="1199.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="0.2919%" y="1173" width="0.0307%" height="15" fill="rgb(231,73,38)"/><text x="0.5419%" y="1183.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="0.3073%" y="1157" width="0.0154%" height="15" fill="rgb(225,20,46)"/><text x="0.5573%" y="1167.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.18%)</title><rect x="0.1536%" y="1189" width="0.1844%" height="15" fill="rgb(210,31,41)"/><text x="0.4036%" y="1199.50"></text></g><g><title>&lt;model::rho_types::Match as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="0.3226%" y="1173" width="0.0154%" height="15" fill="rgb(221,200,47)"/><text x="0.5726%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="0.3226%" y="1157" width="0.0154%" height="15" fill="rgb(226,26,5)"/><text x="0.5726%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="0.3226%" y="1141" width="0.0154%" height="15" fill="rgb(249,33,26)"/><text x="0.5726%" y="1151.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="0.3226%" y="1125" width="0.0154%" height="15" fill="rgb(235,183,28)"/><text x="0.5726%" y="1135.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="0.3226%" y="1109" width="0.0154%" height="15" fill="rgb(221,5,38)"/><text x="0.5726%" y="1119.50"></text></g><g><title>&lt;model::rho_types::MatchCase as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="0.3226%" y="1093" width="0.0154%" height="15" fill="rgb(247,18,42)"/><text x="0.5726%" y="1103.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="0.3226%" y="1077" width="0.0154%" height="15" fill="rgb(241,131,45)"/><text x="0.5726%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.08%)</title><rect x="0.3534%" y="1173" width="0.0768%" height="15" fill="rgb(249,31,29)"/><text x="0.6034%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.11%)</title><rect x="0.3380%" y="1189" width="0.1075%" height="15" fill="rgb(225,111,53)"/><text x="0.5880%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="0.4302%" y="1173" width="0.0154%" height="15" fill="rgb(238,160,17)"/><text x="0.6802%" y="1183.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="0.4302%" y="1157" width="0.0154%" height="15" fill="rgb(214,148,48)"/><text x="0.6802%" y="1167.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="0.4302%" y="1141" width="0.0154%" height="15" fill="rgb(232,36,49)"/><text x="0.6802%" y="1151.50"></text></g><g><title>&lt;model::rho_types::Send as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="0.4302%" y="1125" width="0.0154%" height="15" fill="rgb(209,103,24)"/><text x="0.6802%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="0.4302%" y="1109" width="0.0154%" height="15" fill="rgb(229,88,8)"/><text x="0.6802%" y="1119.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="0.4455%" y="1189" width="0.0154%" height="15" fill="rgb(213,181,19)"/><text x="0.6955%" y="1199.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="0.4609%" y="1189" width="0.0154%" height="15" fill="rgb(254,191,54)"/><text x="0.7109%" y="1199.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}}::{{closure}} (1 samples, 0.02%)</title><rect x="0.4609%" y="1173" width="0.0154%" height="15" fill="rgb(241,83,37)"/><text x="0.7109%" y="1183.50"></text></g><g><title>core::mem::drop (1 samples, 0.02%)</title><rect x="0.4609%" y="1157" width="0.0154%" height="15" fill="rgb(233,36,39)"/><text x="0.7109%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (1 samples, 0.02%)</title><rect x="0.4609%" y="1141" width="0.0154%" height="15" fill="rgb(226,3,54)"/><text x="0.7109%" y="1151.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="0.4609%" y="1125" width="0.0154%" height="15" fill="rgb(245,192,40)"/><text x="0.7109%" y="1135.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression::{{closure}} (3 samples, 0.05%)</title><rect x="0.6299%" y="1173" width="0.0461%" height="15" fill="rgb(238,167,29)"/><text x="0.8799%" y="1183.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (1 samples, 0.02%)</title><rect x="0.6606%" y="1157" width="0.0154%" height="15" fill="rgb(232,182,51)"/><text x="0.9106%" y="1167.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1 samples, 0.02%)</title><rect x="0.6606%" y="1141" width="0.0154%" height="15" fill="rgb(231,60,39)"/><text x="0.9106%" y="1151.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.02%)</title><rect x="0.6606%" y="1125" width="0.0154%" height="15" fill="rgb(208,69,12)"/><text x="0.9106%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="0.6606%" y="1109" width="0.0154%" height="15" fill="rgb(235,93,37)"/><text x="0.9106%" y="1119.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="0.6606%" y="1093" width="0.0154%" height="15" fill="rgb(213,116,39)"/><text x="0.9106%" y="1103.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="0.6606%" y="1077" width="0.0154%" height="15" fill="rgb(222,207,29)"/><text x="0.9106%" y="1087.50"></text></g><g><title>&lt;rho_runtime::storage::coordinator::AsyncStore as rho_runtime::storage::Storage&gt;::produce::{{closure}} (2 samples, 0.03%)</title><rect x="0.6760%" y="1173" width="0.0307%" height="15" fill="rgb(206,96,30)"/><text x="0.9260%" y="1183.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1 samples, 0.02%)</title><rect x="0.7067%" y="1173" width="0.0154%" height="15" fill="rgb(218,138,4)"/><text x="0.9567%" y="1183.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="0.7221%" y="1157" width="0.0154%" height="15" fill="rgb(250,191,14)"/><text x="0.9721%" y="1167.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1 samples, 0.02%)</title><rect x="0.7221%" y="1141" width="0.0154%" height="15" fill="rgb(239,60,40)"/><text x="0.9721%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Par&gt;::{{closure}}&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="0.7374%" y="1157" width="0.0154%" height="15" fill="rgb(206,27,48)"/><text x="0.9874%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper&gt; (1 samples, 0.02%)</title><rect x="0.7374%" y="1141" width="0.0154%" height="15" fill="rgb(225,35,8)"/><text x="0.9874%" y="1151.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (3 samples, 0.05%)</title><rect x="0.7221%" y="1173" width="0.0461%" height="15" fill="rgb(250,213,24)"/><text x="0.9721%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_produce::{{closure}}&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="0.7528%" y="1157" width="0.0154%" height="15" fill="rgb(247,123,22)"/><text x="1.0028%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper&gt; (1 samples, 0.02%)</title><rect x="0.7528%" y="1141" width="0.0154%" height="15" fill="rgb(231,138,38)"/><text x="1.0028%" y="1151.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (1 samples, 0.02%)</title><rect x="0.7682%" y="1173" width="0.0154%" height="15" fill="rgb(231,145,46)"/><text x="1.0182%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="0.7682%" y="1157" width="0.0154%" height="15" fill="rgb(251,118,11)"/><text x="1.0182%" y="1167.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (1 samples, 0.02%)</title><rect x="0.7682%" y="1141" width="0.0154%" height="15" fill="rgb(217,147,25)"/><text x="1.0182%" y="1151.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::eval_eplus::&lt;impl rho_runtime::interpreter::reduce::eval_expression::AsyncExprInstanceEvaluator&lt;S&gt; for model::rho_types::EPlus&gt;::evaluate::{{closure}} (2 samples, 0.03%)</title><rect x="0.7835%" y="1173" width="0.0307%" height="15" fill="rgb(247,81,37)"/><text x="1.0335%" y="1183.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (2 samples, 0.03%)</title><rect x="0.7835%" y="1157" width="0.0307%" height="15" fill="rgb(209,12,38)"/><text x="1.0335%" y="1167.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (2 samples, 0.03%)</title><rect x="0.7835%" y="1141" width="0.0307%" height="15" fill="rgb(227,1,9)"/><text x="1.0335%" y="1151.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 0.03%)</title><rect x="0.8296%" y="1157" width="0.0307%" height="15" fill="rgb(248,47,43)"/><text x="1.0796%" y="1167.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (1 samples, 0.02%)</title><rect x="0.8603%" y="1157" width="0.0154%" height="15" fill="rgb(221,10,30)"/><text x="1.1103%" y="1167.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (1 samples, 0.02%)</title><rect x="0.8757%" y="1157" width="0.0154%" height="15" fill="rgb(210,229,1)"/><text x="1.1257%" y="1167.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1 samples, 0.02%)</title><rect x="0.8757%" y="1141" width="0.0154%" height="15" fill="rgb(222,148,37)"/><text x="1.1257%" y="1151.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.02%)</title><rect x="0.8757%" y="1125" width="0.0154%" height="15" fill="rgb(234,67,33)"/><text x="1.1257%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="0.8757%" y="1109" width="0.0154%" height="15" fill="rgb(247,98,35)"/><text x="1.1257%" y="1119.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="0.8757%" y="1093" width="0.0154%" height="15" fill="rgb(247,138,52)"/><text x="1.1257%" y="1103.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="0.8757%" y="1077" width="0.0154%" height="15" fill="rgb(213,79,30)"/><text x="1.1257%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::expr::ExprInstance&gt;&gt; (1 samples, 0.02%)</title><rect x="0.8911%" y="1157" width="0.0154%" height="15" fill="rgb(246,177,23)"/><text x="1.1411%" y="1167.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate::{{closure}} (7 samples, 0.11%)</title><rect x="0.8143%" y="1173" width="0.1075%" height="15" fill="rgb(230,62,27)"/><text x="1.0643%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;model::rho_types::Expr,model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="0.9064%" y="1157" width="0.0154%" height="15" fill="rgb(216,154,8)"/><text x="1.1564%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;model::rho_types::Expr,model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (1 samples, 0.02%)</title><rect x="0.9064%" y="1141" width="0.0154%" height="15" fill="rgb(244,35,45)"/><text x="1.1564%" y="1151.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.02%)</title><rect x="0.9064%" y="1125" width="0.0154%" height="15" fill="rgb(251,115,12)"/><text x="1.1564%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="0.9064%" y="1109" width="0.0154%" height="15" fill="rgb(240,54,50)"/><text x="1.1564%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="0.9064%" y="1093" width="0.0154%" height="15" fill="rgb(233,84,52)"/><text x="1.1564%" y="1103.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_match::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Match&gt;::evaluate::{{closure}} (3 samples, 0.05%)</title><rect x="0.9218%" y="1173" width="0.0461%" height="15" fill="rgb(207,117,47)"/><text x="1.1718%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="0.9525%" y="1157" width="0.0154%" height="15" fill="rgb(249,43,39)"/><text x="1.2025%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (1 samples, 0.02%)</title><rect x="0.9525%" y="1141" width="0.0154%" height="15" fill="rgb(209,38,44)"/><text x="1.2025%" y="1151.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.02%)</title><rect x="0.9525%" y="1125" width="0.0154%" height="15" fill="rgb(236,212,23)"/><text x="1.2025%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="0.9525%" y="1109" width="0.0154%" height="15" fill="rgb(242,79,21)"/><text x="1.2025%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="0.9525%" y="1093" width="0.0154%" height="15" fill="rgb(211,96,35)"/><text x="1.2025%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (33 samples, 0.51%)</title><rect x="0.4763%" y="1189" width="0.5070%" height="15" fill="rgb(253,215,40)"/><text x="0.7263%" y="1199.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate::{{closure}} (1 samples, 0.02%)</title><rect x="0.9679%" y="1173" width="0.0154%" height="15" fill="rgb(211,81,21)"/><text x="1.2179%" y="1183.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="0.9679%" y="1157" width="0.0154%" height="15" fill="rgb(208,190,38)"/><text x="1.2179%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.02%)</title><rect x="0.9833%" y="1189" width="0.0154%" height="15" fill="rgb(235,213,38)"/><text x="1.2333%" y="1199.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="0.9986%" y="1189" width="0.0154%" height="15" fill="rgb(237,122,38)"/><text x="1.2486%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.11%)</title><rect x="1.0293%" y="1141" width="0.1075%" height="15" fill="rgb(244,218,35)"/><text x="1.2793%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (7 samples, 0.11%)</title><rect x="1.0293%" y="1125" width="0.1075%" height="15" fill="rgb(240,68,47)"/><text x="1.2793%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.11%)</title><rect x="1.0293%" y="1109" width="0.1075%" height="15" fill="rgb(210,16,53)"/><text x="1.2793%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.11%)</title><rect x="1.0293%" y="1093" width="0.1075%" height="15" fill="rgb(235,124,12)"/><text x="1.2793%" y="1103.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (4 samples, 0.06%)</title><rect x="1.1369%" y="1141" width="0.0615%" height="15" fill="rgb(224,169,11)"/><text x="1.3869%" y="1151.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (13 samples, 0.20%)</title><rect x="1.0140%" y="1189" width="0.1997%" height="15" fill="rgb(250,166,2)"/><text x="1.2640%" y="1199.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (13 samples, 0.20%)</title><rect x="1.0140%" y="1173" width="0.1997%" height="15" fill="rgb(242,216,29)"/><text x="1.2640%" y="1183.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (12 samples, 0.18%)</title><rect x="1.0293%" y="1157" width="0.1844%" height="15" fill="rgb(230,116,27)"/><text x="1.2793%" y="1167.50"></text></g><g><title>fastrand::usize (1 samples, 0.02%)</title><rect x="1.1983%" y="1141" width="0.0154%" height="15" fill="rgb(228,99,48)"/><text x="1.4483%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.05%)</title><rect x="1.2444%" y="1173" width="0.0461%" height="15" fill="rgb(253,11,6)"/><text x="1.4944%" y="1183.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.05%)</title><rect x="1.2444%" y="1157" width="0.0461%" height="15" fill="rgb(247,143,39)"/><text x="1.4944%" y="1167.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.05%)</title><rect x="1.2444%" y="1141" width="0.0461%" height="15" fill="rgb(236,97,10)"/><text x="1.4944%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.03%)</title><rect x="1.2905%" y="1061" width="0.0307%" height="15" fill="rgb(233,208,19)"/><text x="1.5405%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.03%)</title><rect x="1.2905%" y="1045" width="0.0307%" height="15" fill="rgb(216,164,2)"/><text x="1.5405%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.03%)</title><rect x="1.2905%" y="1029" width="0.0307%" height="15" fill="rgb(220,129,5)"/><text x="1.5405%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.03%)</title><rect x="1.2905%" y="1013" width="0.0307%" height="15" fill="rgb(242,17,10)"/><text x="1.5405%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.03%)</title><rect x="1.2905%" y="997" width="0.0307%" height="15" fill="rgb(242,107,0)"/><text x="1.5405%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.03%)</title><rect x="1.2905%" y="981" width="0.0307%" height="15" fill="rgb(251,28,31)"/><text x="1.5405%" y="991.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (9 samples, 0.14%)</title><rect x="1.2137%" y="1189" width="0.1383%" height="15" fill="rgb(233,223,10)"/><text x="1.4637%" y="1199.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.06%)</title><rect x="1.2905%" y="1173" width="0.0615%" height="15" fill="rgb(215,21,27)"/><text x="1.5405%" y="1183.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (4 samples, 0.06%)</title><rect x="1.2905%" y="1157" width="0.0615%" height="15" fill="rgb(232,23,21)"/><text x="1.5405%" y="1167.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (4 samples, 0.06%)</title><rect x="1.2905%" y="1141" width="0.0615%" height="15" fill="rgb(244,5,23)"/><text x="1.5405%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.06%)</title><rect x="1.2905%" y="1125" width="0.0615%" height="15" fill="rgb(226,81,46)"/><text x="1.5405%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.06%)</title><rect x="1.2905%" y="1109" width="0.0615%" height="15" fill="rgb(247,70,30)"/><text x="1.5405%" y="1119.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.06%)</title><rect x="1.2905%" y="1093" width="0.0615%" height="15" fill="rgb(212,68,19)"/><text x="1.5405%" y="1103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.06%)</title><rect x="1.2905%" y="1077" width="0.0615%" height="15" fill="rgb(240,187,13)"/><text x="1.5405%" y="1087.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.03%)</title><rect x="1.3212%" y="1061" width="0.0307%" height="15" fill="rgb(223,113,26)"/><text x="1.5712%" y="1071.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.03%)</title><rect x="1.3212%" y="1045" width="0.0307%" height="15" fill="rgb(206,192,2)"/><text x="1.5712%" y="1055.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash (1 samples, 0.02%)</title><rect x="1.3520%" y="1189" width="0.0154%" height="15" fill="rgb(241,108,4)"/><text x="1.6020%" y="1199.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="1.3673%" y="1189" width="0.0154%" height="15" fill="rgb(247,173,49)"/><text x="1.6173%" y="1199.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="1.3827%" y="1189" width="0.0307%" height="15" fill="rgb(224,114,35)"/><text x="1.6327%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (5 samples, 0.08%)</title><rect x="1.4134%" y="1173" width="0.0768%" height="15" fill="rgb(245,159,27)"/><text x="1.6634%" y="1183.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.09%)</title><rect x="1.4134%" y="1189" width="0.0922%" height="15" fill="rgb(245,172,44)"/><text x="1.6634%" y="1199.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::poll_recv (1 samples, 0.02%)</title><rect x="1.4902%" y="1173" width="0.0154%" height="15" fill="rgb(236,23,11)"/><text x="1.7402%" y="1183.50"></text></g><g><title>tokio::coop::poll_proceed (1 samples, 0.02%)</title><rect x="1.4902%" y="1157" width="0.0154%" height="15" fill="rgb(205,117,38)"/><text x="1.7402%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.02%)</title><rect x="1.4902%" y="1141" width="0.0154%" height="15" fill="rgb(237,72,25)"/><text x="1.7402%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.02%)</title><rect x="1.4902%" y="1125" width="0.0154%" height="15" fill="rgb(244,70,9)"/><text x="1.7402%" y="1135.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (1 samples, 0.02%)</title><rect x="1.4902%" y="1109" width="0.0154%" height="15" fill="rgb(217,125,39)"/><text x="1.7402%" y="1119.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.08%)</title><rect x="1.5056%" y="1189" width="0.0768%" height="15" fill="rgb(235,36,10)"/><text x="1.7556%" y="1199.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="1.5824%" y="1189" width="0.0154%" height="15" fill="rgb(251,123,47)"/><text x="1.8324%" y="1199.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="1.5978%" y="1189" width="0.0154%" height="15" fill="rgb(221,13,13)"/><text x="1.8478%" y="1199.50"></text></g><g><title>__GI___pthread_rwlock_rdlock (1 samples, 0.02%)</title><rect x="1.6132%" y="1189" width="0.0154%" height="15" fill="rgb(238,131,9)"/><text x="1.8632%" y="1199.50"></text></g><g><title>__pthread_cond_signal (1 samples, 0.02%)</title><rect x="1.6285%" y="1189" width="0.0154%" height="15" fill="rgb(211,50,8)"/><text x="1.8785%" y="1199.50"></text></g><g><title>__pthread_cond_wait (2 samples, 0.03%)</title><rect x="1.6439%" y="1189" width="0.0307%" height="15" fill="rgb(245,182,24)"/><text x="1.8939%" y="1199.50"></text></g><g><title>__rg_alloc (1 samples, 0.02%)</title><rect x="1.6746%" y="1189" width="0.0154%" height="15" fill="rgb(242,14,37)"/><text x="1.9246%" y="1199.50"></text></g><g><title>__rg_dealloc (10 samples, 0.15%)</title><rect x="1.6900%" y="1189" width="0.1536%" height="15" fill="rgb(246,228,12)"/><text x="1.9400%" y="1199.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (7 samples, 0.11%)</title><rect x="1.7361%" y="1173" width="0.1075%" height="15" fill="rgb(213,55,15)"/><text x="1.9861%" y="1183.50"></text></g><g><title>__rust_probestack (2 samples, 0.03%)</title><rect x="1.8436%" y="1189" width="0.0307%" height="15" fill="rgb(209,9,3)"/><text x="2.0936%" y="1199.50"></text></g><g><title>_rjem_mallocx (7 samples, 0.11%)</title><rect x="1.8743%" y="1189" width="0.1075%" height="15" fill="rgb(230,59,30)"/><text x="2.1243%" y="1199.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.03%)</title><rect x="1.9819%" y="1189" width="0.0307%" height="15" fill="rgb(209,121,21)"/><text x="2.2319%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="2.0126%" y="1189" width="0.0154%" height="15" fill="rgb(220,109,13)"/><text x="2.2626%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="2.0126%" y="1173" width="0.0154%" height="15" fill="rgb(232,18,1)"/><text x="2.2626%" y="1183.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="2.0126%" y="1157" width="0.0154%" height="15" fill="rgb(215,41,42)"/><text x="2.2626%" y="1167.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="2.0126%" y="1141" width="0.0154%" height="15" fill="rgb(224,123,36)"/><text x="2.2626%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.03%)</title><rect x="2.0280%" y="1189" width="0.0307%" height="15" fill="rgb(240,125,3)"/><text x="2.2780%" y="1199.50"></text></g><g><title>alloc::slice::merge_sort (2 samples, 0.03%)</title><rect x="2.0587%" y="1189" width="0.0307%" height="15" fill="rgb(205,98,50)"/><text x="2.3087%" y="1199.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.02%)</title><rect x="2.0894%" y="1189" width="0.0154%" height="15" fill="rgb(205,185,37)"/><text x="2.3394%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::oneshot::Inner&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="2.0894%" y="1173" width="0.0154%" height="15" fill="rgb(238,207,15)"/><text x="2.3394%" y="1183.50"></text></g><g><title>&lt;tokio::sync::oneshot::Inner&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="2.0894%" y="1157" width="0.0154%" height="15" fill="rgb(213,199,42)"/><text x="2.3394%" y="1167.50"></text></g><g><title>async_executor::Ticker::sleep (1 samples, 0.02%)</title><rect x="2.1048%" y="1189" width="0.0154%" height="15" fill="rgb(235,201,11)"/><text x="2.3548%" y="1199.50"></text></g><g><title>async_executor::Ticker::wake (3 samples, 0.05%)</title><rect x="2.1201%" y="1189" width="0.0461%" height="15" fill="rgb(207,46,11)"/><text x="2.3701%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (1 samples, 0.02%)</title><rect x="2.1509%" y="1173" width="0.0154%" height="15" fill="rgb(241,35,35)"/><text x="2.4009%" y="1183.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="2.1509%" y="1157" width="0.0154%" height="15" fill="rgb(243,32,47)"/><text x="2.4009%" y="1167.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.02%)</title><rect x="2.1509%" y="1141" width="0.0154%" height="15" fill="rgb(247,202,23)"/><text x="2.4009%" y="1151.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.02%)</title><rect x="2.1509%" y="1125" width="0.0154%" height="15" fill="rgb(219,102,11)"/><text x="2.4009%" y="1135.50"></text></g><g><title>async_executor::steal (5 samples, 0.08%)</title><rect x="2.1662%" y="1189" width="0.0768%" height="15" fill="rgb(243,110,44)"/><text x="2.4162%" y="1199.50"></text></g><g><title>async_io::driver::block_on (6 samples, 0.09%)</title><rect x="2.2430%" y="1189" width="0.0922%" height="15" fill="rgb(222,74,54)"/><text x="2.4930%" y="1199.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (2 samples, 0.03%)</title><rect x="2.3045%" y="1173" width="0.0307%" height="15" fill="rgb(216,99,12)"/><text x="2.5545%" y="1183.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (1 samples, 0.02%)</title><rect x="2.3352%" y="1189" width="0.0154%" height="15" fill="rgb(226,22,26)"/><text x="2.5852%" y="1199.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (1 samples, 0.02%)</title><rect x="2.3506%" y="1189" width="0.0154%" height="15" fill="rgb(217,163,10)"/><text x="2.6006%" y="1199.50"></text></g><g><title>blake3::Hasher::update (1 samples, 0.02%)</title><rect x="2.3660%" y="1189" width="0.0154%" height="15" fill="rgb(213,25,53)"/><text x="2.6160%" y="1199.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (8 samples, 0.12%)</title><rect x="2.3813%" y="1189" width="0.1229%" height="15" fill="rgb(252,105,26)"/><text x="2.6313%" y="1199.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (2 samples, 0.03%)</title><rect x="2.5042%" y="1189" width="0.0307%" height="15" fill="rgb(220,39,43)"/><text x="2.7542%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;rho_runtime::storage::coordinator::AsyncStore&gt;&gt;::evaluate_nested_expressions::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="2.5350%" y="1189" width="0.0154%" height="15" fill="rgb(229,68,48)"/><text x="2.7850%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;rho_runtime::storage::coordinator::AsyncStore&gt;&gt;::evaluate_single_expression::{{closure}}&gt;&gt; (2 samples, 0.03%)</title><rect x="2.5503%" y="1189" width="0.0307%" height="15" fill="rgb(252,8,32)"/><text x="2.8003%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Par&gt;::{{closure}}&gt;&gt; (2 samples, 0.03%)</title><rect x="2.5810%" y="1189" width="0.0307%" height="15" fill="rgb(223,20,43)"/><text x="2.8310%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;rho_runtime::storage::coordinator::AsyncStore&gt; for model::rho_types::Expr&gt;::evaluate::{{closure}}&gt;&gt; (3 samples, 0.05%)</title><rect x="2.6118%" y="1189" width="0.0461%" height="15" fill="rgb(229,81,49)"/><text x="2.8618%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Expr&gt; (1 samples, 0.02%)</title><rect x="2.6579%" y="1189" width="0.0154%" height="15" fill="rgb(236,28,36)"/><text x="2.9079%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (1 samples, 0.02%)</title><rect x="2.6732%" y="1189" width="0.0154%" height="15" fill="rgb(249,185,26)"/><text x="2.9232%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Send&gt; (1 samples, 0.02%)</title><rect x="2.6886%" y="1189" width="0.0154%" height="15" fill="rgb(249,174,33)"/><text x="2.9386%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Par&gt;&gt; (1 samples, 0.02%)</title><rect x="2.6886%" y="1173" width="0.0154%" height="15" fill="rgb(233,201,37)"/><text x="2.9386%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Par&gt;&gt; (1 samples, 0.02%)</title><rect x="2.6886%" y="1157" width="0.0154%" height="15" fill="rgb(221,78,26)"/><text x="2.9386%" y="1167.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="2.6886%" y="1141" width="0.0154%" height="15" fill="rgb(250,127,30)"/><text x="2.9386%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="2.6886%" y="1125" width="0.0154%" height="15" fill="rgb(230,49,44)"/><text x="2.9386%" y="1135.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="2.6886%" y="1109" width="0.0154%" height="15" fill="rgb(229,67,23)"/><text x="2.9386%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::expr::ExprInstance&gt; (1 samples, 0.02%)</title><rect x="2.7039%" y="1189" width="0.0154%" height="15" fill="rgb(249,83,47)"/><text x="2.9539%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::EMethod&gt; (1 samples, 0.02%)</title><rect x="2.7039%" y="1173" width="0.0154%" height="15" fill="rgb(215,43,3)"/><text x="2.9539%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Par&gt;&gt; (1 samples, 0.02%)</title><rect x="2.7039%" y="1157" width="0.0154%" height="15" fill="rgb(238,154,13)"/><text x="2.9539%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="2.7039%" y="1141" width="0.0154%" height="15" fill="rgb(219,56,2)"/><text x="2.9539%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Par]&gt; (1 samples, 0.02%)</title><rect x="2.7039%" y="1125" width="0.0154%" height="15" fill="rgb(233,0,4)"/><text x="2.9539%" y="1135.50"></text></g><g><title>__rg_dealloc (1 samples, 0.02%)</title><rect x="2.7039%" y="1109" width="0.0154%" height="15" fill="rgb(235,30,7)"/><text x="2.9539%" y="1119.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.02%)</title><rect x="2.7039%" y="1093" width="0.0154%" height="15" fill="rgb(250,79,13)"/><text x="2.9539%" y="1103.50"></text></g><g><title>fastrand::RNG::__getit (1 samples, 0.02%)</title><rect x="2.7193%" y="1189" width="0.0154%" height="15" fill="rgb(211,146,34)"/><text x="2.9693%" y="1199.50"></text></g><g><title>jemallocator::layout_to_flags (3 samples, 0.05%)</title><rect x="2.7347%" y="1189" width="0.0461%" height="15" fill="rgb(228,22,38)"/><text x="2.9847%" y="1199.50"></text></g><g><title>model::ordering::sort_par::&lt;impl model::ordering::Sortable for model::rho_types::Par&gt;::sort (1 samples, 0.02%)</title><rect x="2.7808%" y="1189" width="0.0154%" height="15" fill="rgb(235,168,5)"/><text x="3.0308%" y="1199.50"></text></g><g><title>model::ordering::sort_unforgeable::UnforgeableScoreTreeIter::private_body_next (2 samples, 0.03%)</title><rect x="2.7961%" y="1189" width="0.0307%" height="15" fill="rgb(221,155,16)"/><text x="3.0461%" y="1199.50"></text></g><g><title>model::rho_types::Par::append_expr (2 samples, 0.03%)</title><rect x="2.8269%" y="1189" width="0.0307%" height="15" fill="rgb(215,215,53)"/><text x="3.0769%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="2.8422%" y="1173" width="0.0154%" height="15" fill="rgb(223,4,10)"/><text x="3.0922%" y="1183.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="2.8422%" y="1157" width="0.0154%" height="15" fill="rgb(234,103,6)"/><text x="3.0922%" y="1167.50"></text></g><g><title>parking::Inner::park (2 samples, 0.03%)</title><rect x="2.8576%" y="1189" width="0.0307%" height="15" fill="rgb(227,97,0)"/><text x="3.1076%" y="1199.50"></text></g><g><title>std::sync::condvar::Condvar::wait (2 samples, 0.03%)</title><rect x="2.8576%" y="1173" width="0.0307%" height="15" fill="rgb(234,150,53)"/><text x="3.1076%" y="1183.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (2 samples, 0.03%)</title><rect x="2.8576%" y="1157" width="0.0307%" height="15" fill="rgb(228,201,54)"/><text x="3.1076%" y="1167.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (1 samples, 0.02%)</title><rect x="2.8729%" y="1141" width="0.0154%" height="15" fill="rgb(222,22,37)"/><text x="3.1229%" y="1151.50"></text></g><g><title>parking::Parker::park (2 samples, 0.03%)</title><rect x="2.8883%" y="1189" width="0.0307%" height="15" fill="rgb(237,53,32)"/><text x="3.1383%" y="1199.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute_no_sort (2 samples, 0.03%)</title><rect x="2.9190%" y="1189" width="0.0307%" height="15" fill="rgb(233,25,53)"/><text x="3.1690%" y="1199.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::substitute_expressions_in_par (1 samples, 0.02%)</title><rect x="2.9498%" y="1189" width="0.0154%" height="15" fill="rgb(210,40,34)"/><text x="3.1998%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;model::rho_types::Expr&gt;&gt; (1 samples, 0.02%)</title><rect x="2.9498%" y="1173" width="0.0154%" height="15" fill="rgb(241,220,44)"/><text x="3.1998%" y="1183.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="2.9498%" y="1157" width="0.0154%" height="15" fill="rgb(235,28,35)"/><text x="3.1998%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;model::rho_types::Expr,alloc::alloc::Global&gt;&gt; (1 samples, 0.02%)</title><rect x="2.9498%" y="1141" width="0.0154%" height="15" fill="rgb(210,56,17)"/><text x="3.1998%" y="1151.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="2.9498%" y="1125" width="0.0154%" height="15" fill="rgb(224,130,29)"/><text x="3.1998%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (1 samples, 0.02%)</title><rect x="2.9498%" y="1109" width="0.0154%" height="15" fill="rgb(235,212,8)"/><text x="3.1998%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="2.9498%" y="1093" width="0.0154%" height="15" fill="rgb(223,33,50)"/><text x="3.1998%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="2.9498%" y="1077" width="0.0154%" height="15" fill="rgb(219,149,13)"/><text x="3.1998%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="2.9498%" y="1061" width="0.0154%" height="15" fill="rgb(250,156,29)"/><text x="3.1998%" y="1071.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (2 samples, 0.03%)</title><rect x="2.9651%" y="1189" width="0.0307%" height="15" fill="rgb(216,193,19)"/><text x="3.2151%" y="1199.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::complete (2 samples, 0.03%)</title><rect x="2.9651%" y="1173" width="0.0307%" height="15" fill="rgb(216,135,14)"/><text x="3.2151%" y="1183.50"></text></g><g><title>[anon] (190 samples, 2.92%)</title><rect x="0.1536%" y="1205" width="2.9190%" height="15" fill="rgb(241,47,5)"/><text x="0.4036%" y="1215.50">[a..</text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (5 samples, 0.08%)</title><rect x="2.9959%" y="1189" width="0.0768%" height="15" fill="rgb(233,42,35)"/><text x="3.2459%" y="1199.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (5 samples, 0.08%)</title><rect x="2.9959%" y="1173" width="0.0768%" height="15" fill="rgb(231,13,6)"/><text x="3.2459%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.05%)</title><rect x="3.0266%" y="1157" width="0.0461%" height="15" fill="rgb(207,181,40)"/><text x="3.2766%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.05%)</title><rect x="3.0266%" y="1141" width="0.0461%" height="15" fill="rgb(254,173,49)"/><text x="3.2766%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (1 samples, 0.02%)</title><rect x="3.1188%" y="1189" width="0.0154%" height="15" fill="rgb(221,1,38)"/><text x="3.3688%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::expr::ExprInstance&gt; (1 samples, 0.02%)</title><rect x="3.1341%" y="1189" width="0.0154%" height="15" fill="rgb(206,124,46)"/><text x="3.3841%" y="1199.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.09%)</title><rect x="3.0727%" y="1205" width="0.0922%" height="15" fill="rgb(249,21,11)"/><text x="3.3227%" y="1215.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (1 samples, 0.02%)</title><rect x="3.1495%" y="1189" width="0.0154%" height="15" fill="rgb(222,201,40)"/><text x="3.3995%" y="1199.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::complete (1 samples, 0.02%)</title><rect x="3.1495%" y="1173" width="0.0154%" height="15" fill="rgb(235,61,29)"/><text x="3.3995%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="3.1648%" y="1189" width="0.0154%" height="15" fill="rgb(219,207,3)"/><text x="3.4148%" y="1199.50"></text></g><g><title>async_executor::State::notify (1 samples, 0.02%)</title><rect x="3.1802%" y="1189" width="0.0154%" height="15" fill="rgb(222,56,46)"/><text x="3.4302%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="3.1956%" y="1173" width="0.0154%" height="15" fill="rgb(239,76,54)"/><text x="3.4456%" y="1183.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (1 samples, 0.02%)</title><rect x="3.1956%" y="1157" width="0.0154%" height="15" fill="rgb(231,124,27)"/><text x="3.4456%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="3.1956%" y="1141" width="0.0154%" height="15" fill="rgb(249,195,6)"/><text x="3.4456%" y="1151.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1 samples, 0.02%)</title><rect x="3.1956%" y="1125" width="0.0154%" height="15" fill="rgb(237,174,47)"/><text x="3.4456%" y="1135.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="3.1956%" y="1109" width="0.0154%" height="15" fill="rgb(206,201,31)"/><text x="3.4456%" y="1119.50"></text></g><g><title>[rho_runtime] (5 samples, 0.08%)</title><rect x="3.1648%" y="1205" width="0.0768%" height="15" fill="rgb(231,57,52)"/><text x="3.4148%" y="1215.50"></text></g><g><title>parking::Parker::park (3 samples, 0.05%)</title><rect x="3.1956%" y="1189" width="0.0461%" height="15" fill="rgb(248,177,22)"/><text x="3.4456%" y="1199.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.03%)</title><rect x="3.2109%" y="1173" width="0.0307%" height="15" fill="rgb(215,211,37)"/><text x="3.4609%" y="1183.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15 samples, 0.23%)</title><rect x="3.4568%" y="1189" width="0.2305%" height="15" fill="rgb(241,128,51)"/><text x="3.7068%" y="1199.50"></text></g><g><title>&lt;model::rho_types::Match as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="3.6718%" y="1173" width="0.0154%" height="15" fill="rgb(227,165,31)"/><text x="3.9218%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="3.6718%" y="1157" width="0.0154%" height="15" fill="rgb(228,167,24)"/><text x="3.9218%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="3.6718%" y="1141" width="0.0154%" height="15" fill="rgb(228,143,12)"/><text x="3.9218%" y="1151.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="3.6718%" y="1125" width="0.0154%" height="15" fill="rgb(249,149,8)"/><text x="3.9218%" y="1135.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="3.6718%" y="1109" width="0.0154%" height="15" fill="rgb(243,35,44)"/><text x="3.9218%" y="1119.50"></text></g><g><title>&lt;model::rho_types::MatchCase as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="3.6718%" y="1093" width="0.0154%" height="15" fill="rgb(246,89,9)"/><text x="3.9218%" y="1103.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="3.6718%" y="1077" width="0.0154%" height="15" fill="rgb(233,213,13)"/><text x="3.9218%" y="1087.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="3.6718%" y="1061" width="0.0154%" height="15" fill="rgb(233,141,41)"/><text x="3.9218%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="3.6718%" y="1045" width="0.0154%" height="15" fill="rgb(239,167,4)"/><text x="3.9218%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="3.6718%" y="1029" width="0.0154%" height="15" fill="rgb(209,217,16)"/><text x="3.9218%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="3.6718%" y="1013" width="0.0154%" height="15" fill="rgb(219,88,35)"/><text x="3.9218%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="3.6718%" y="997" width="0.0154%" height="15" fill="rgb(220,193,23)"/><text x="3.9218%" y="1007.50"></text></g><g><title>&lt;model::rho_types::Send as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="3.6718%" y="981" width="0.0154%" height="15" fill="rgb(230,90,52)"/><text x="3.9218%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="3.6718%" y="965" width="0.0154%" height="15" fill="rgb(252,106,19)"/><text x="3.9218%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="3.6718%" y="949" width="0.0154%" height="15" fill="rgb(206,74,20)"/><text x="3.9218%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="3.6718%" y="933" width="0.0154%" height="15" fill="rgb(230,138,44)"/><text x="3.9218%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="3.6718%" y="917" width="0.0154%" height="15" fill="rgb(235,182,43)"/><text x="3.9218%" y="927.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="3.6718%" y="901" width="0.0154%" height="15" fill="rgb(242,16,51)"/><text x="3.9218%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="3.6718%" y="885" width="0.0154%" height="15" fill="rgb(248,9,4)"/><text x="3.9218%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="3.6718%" y="869" width="0.0154%" height="15" fill="rgb(210,31,22)"/><text x="3.9218%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="3.6718%" y="853" width="0.0154%" height="15" fill="rgb(239,54,39)"/><text x="3.9218%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="3.6718%" y="837" width="0.0154%" height="15" fill="rgb(230,99,41)"/><text x="3.9218%" y="847.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="3.6718%" y="821" width="0.0154%" height="15" fill="rgb(253,106,12)"/><text x="3.9218%" y="831.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="3.6718%" y="805" width="0.0154%" height="15" fill="rgb(213,46,41)"/><text x="3.9218%" y="815.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="3.6718%" y="789" width="0.0154%" height="15" fill="rgb(215,133,35)"/><text x="3.9218%" y="799.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="3.6718%" y="773" width="0.0154%" height="15" fill="rgb(213,28,5)"/><text x="3.9218%" y="783.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="3.6718%" y="757" width="0.0154%" height="15" fill="rgb(215,77,49)"/><text x="3.9218%" y="767.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="3.6718%" y="741" width="0.0154%" height="15" fill="rgb(248,100,22)"/><text x="3.9218%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="3.6718%" y="725" width="0.0154%" height="15" fill="rgb(208,67,9)"/><text x="3.9218%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="3.6718%" y="709" width="0.0154%" height="15" fill="rgb(219,133,21)"/><text x="3.9218%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="3.6718%" y="693" width="0.0154%" height="15" fill="rgb(246,46,29)"/><text x="3.9218%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="3.6718%" y="677" width="0.0154%" height="15" fill="rgb(246,185,52)"/><text x="3.9218%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="3.6718%" y="661" width="0.0154%" height="15" fill="rgb(252,136,11)"/><text x="3.9218%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="3.6718%" y="645" width="0.0154%" height="15" fill="rgb(219,138,53)"/><text x="3.9218%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="3.6718%" y="629" width="0.0154%" height="15" fill="rgb(211,51,23)"/><text x="3.9218%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="3.6718%" y="613" width="0.0154%" height="15" fill="rgb(247,221,28)"/><text x="3.9218%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="3.6718%" y="597" width="0.0154%" height="15" fill="rgb(251,222,45)"/><text x="3.9218%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="3.6718%" y="581" width="0.0154%" height="15" fill="rgb(217,162,53)"/><text x="3.9218%" y="591.50"></text></g><g><title>_rjem_mallocx (1 samples, 0.02%)</title><rect x="3.6718%" y="565" width="0.0154%" height="15" fill="rgb(229,93,14)"/><text x="3.9218%" y="575.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="3.6718%" y="549" width="0.0154%" height="15" fill="rgb(209,67,49)"/><text x="3.9218%" y="559.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="3.6718%" y="533" width="0.0154%" height="15" fill="rgb(213,87,29)"/><text x="3.9218%" y="543.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="3.6718%" y="517" width="0.0154%" height="15" fill="rgb(205,151,52)"/><text x="3.9218%" y="527.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="3.6718%" y="501" width="0.0154%" height="15" fill="rgb(253,215,39)"/><text x="3.9218%" y="511.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="3.6718%" y="485" width="0.0154%" height="15" fill="rgb(221,220,41)"/><text x="3.9218%" y="495.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="3.6718%" y="469" width="0.0154%" height="15" fill="rgb(218,133,21)"/><text x="3.9218%" y="479.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect x="3.6718%" y="453" width="0.0154%" height="15" fill="rgb(221,193,43)"/><text x="3.9218%" y="463.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (1 samples, 0.02%)</title><rect x="3.6718%" y="437" width="0.0154%" height="15" fill="rgb(240,128,52)"/><text x="3.9218%" y="447.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect x="3.6718%" y="421" width="0.0154%" height="15" fill="rgb(253,114,12)"/><text x="3.9218%" y="431.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect x="3.6718%" y="405" width="0.0154%" height="15" fill="rgb(215,223,47)"/><text x="3.9218%" y="415.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="3.6718%" y="389" width="0.0154%" height="15" fill="rgb(248,225,23)"/><text x="3.9218%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.14%)</title><rect x="3.6872%" y="1189" width="0.1383%" height="15" fill="rgb(250,108,0)"/><text x="3.9372%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="3.8101%" y="1173" width="0.0154%" height="15" fill="rgb(228,208,7)"/><text x="4.0601%" y="1183.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.12%)</title><rect x="4.3478%" y="1061" width="0.1229%" height="15" fill="rgb(244,45,10)"/><text x="4.5978%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (33 samples, 0.51%)</title><rect x="4.4707%" y="1061" width="0.5070%" height="15" fill="rgb(207,125,25)"/><text x="4.7207%" y="1071.50"></text></g><g><title>core::ptr::read (33 samples, 0.51%)</title><rect x="4.4707%" y="1045" width="0.5070%" height="15" fill="rgb(210,195,18)"/><text x="4.7207%" y="1055.50"></text></g><g><title>[libc-2.31.so] (33 samples, 0.51%)</title><rect x="4.4707%" y="1029" width="0.5070%" height="15" fill="rgb(249,80,12)"/><text x="4.7207%" y="1039.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.02%)</title><rect x="4.9777%" y="1029" width="0.0154%" height="15" fill="rgb(221,65,9)"/><text x="5.2277%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="4.9777%" y="1013" width="0.0154%" height="15" fill="rgb(235,49,36)"/><text x="5.2277%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="4.9777%" y="997" width="0.0154%" height="15" fill="rgb(225,32,20)"/><text x="5.2277%" y="1007.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="4.9777%" y="981" width="0.0154%" height="15" fill="rgb(215,141,46)"/><text x="5.2277%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="4.9777%" y="1061" width="0.0307%" height="15" fill="rgb(250,160,47)"/><text x="5.2277%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (2 samples, 0.03%)</title><rect x="4.9777%" y="1045" width="0.0307%" height="15" fill="rgb(216,222,40)"/><text x="5.2277%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;rho_runtime::storage::coordinator::AsyncStore&gt; for model::rho_types::Expr&gt;::evaluate::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="4.9931%" y="1029" width="0.0154%" height="15" fill="rgb(234,217,39)"/><text x="5.2431%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;rho_runtime::storage::coordinator::AsyncStore&gt; for model::rho_types::Expr&gt;::evaluate::{{closure}}&gt; (1 samples, 0.02%)</title><rect x="4.9931%" y="1013" width="0.0154%" height="15" fill="rgb(207,178,40)"/><text x="5.2431%" y="1023.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.05%)</title><rect x="5.0084%" y="1029" width="0.0461%" height="15" fill="rgb(221,136,13)"/><text x="5.2584%" y="1039.50"></text></g><g><title>__rg_alloc (1 samples, 0.02%)</title><rect x="5.0545%" y="965" width="0.0154%" height="15" fill="rgb(249,199,10)"/><text x="5.3045%" y="975.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect x="5.0545%" y="949" width="0.0154%" height="15" fill="rgb(249,222,13)"/><text x="5.3045%" y="959.50"></text></g><g><title>jemallocator::layout_to_flags (1 samples, 0.02%)</title><rect x="5.0545%" y="933" width="0.0154%" height="15" fill="rgb(244,185,38)"/><text x="5.3045%" y="943.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression::{{closure}} (55 samples, 0.84%)</title><rect x="4.2556%" y="1077" width="0.8450%" height="15" fill="rgb(236,202,9)"/><text x="4.5056%" y="1087.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (6 samples, 0.09%)</title><rect x="5.0084%" y="1061" width="0.0922%" height="15" fill="rgb(250,229,37)"/><text x="5.2584%" y="1071.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (6 samples, 0.09%)</title><rect x="5.0084%" y="1045" width="0.0922%" height="15" fill="rgb(206,174,23)"/><text x="5.2584%" y="1055.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.05%)</title><rect x="5.0545%" y="1029" width="0.0461%" height="15" fill="rgb(211,33,43)"/><text x="5.3045%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.05%)</title><rect x="5.0545%" y="1013" width="0.0461%" height="15" fill="rgb(245,58,50)"/><text x="5.3045%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.05%)</title><rect x="5.0545%" y="997" width="0.0461%" height="15" fill="rgb(244,68,36)"/><text x="5.3045%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.05%)</title><rect x="5.0545%" y="981" width="0.0461%" height="15" fill="rgb(232,229,15)"/><text x="5.3045%" y="991.50"></text></g><g><title>_rjem_mallocx (2 samples, 0.03%)</title><rect x="5.0699%" y="965" width="0.0307%" height="15" fill="rgb(254,30,23)"/><text x="5.3199%" y="975.50"></text></g><g><title>imalloc (2 samples, 0.03%)</title><rect x="5.0699%" y="949" width="0.0307%" height="15" fill="rgb(235,160,14)"/><text x="5.3199%" y="959.50"></text></g><g><title>imalloc_body (2 samples, 0.03%)</title><rect x="5.0699%" y="933" width="0.0307%" height="15" fill="rgb(212,155,44)"/><text x="5.3199%" y="943.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="5.0853%" y="917" width="0.0154%" height="15" fill="rgb(226,2,50)"/><text x="5.3353%" y="927.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="5.0853%" y="901" width="0.0154%" height="15" fill="rgb(234,177,6)"/><text x="5.3353%" y="911.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="5.0853%" y="885" width="0.0154%" height="15" fill="rgb(217,24,9)"/><text x="5.3353%" y="895.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="5.0853%" y="869" width="0.0154%" height="15" fill="rgb(220,13,46)"/><text x="5.3353%" y="879.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect x="5.0853%" y="853" width="0.0154%" height="15" fill="rgb(239,221,27)"/><text x="5.3353%" y="863.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="5.1006%" y="1077" width="0.0307%" height="15" fill="rgb(222,198,25)"/><text x="5.3506%" y="1087.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (3 samples, 0.05%)</title><rect x="5.1314%" y="1061" width="0.0461%" height="15" fill="rgb(211,99,13)"/><text x="5.3814%" y="1071.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.05%)</title><rect x="5.1314%" y="1045" width="0.0461%" height="15" fill="rgb(232,111,31)"/><text x="5.3814%" y="1055.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.08%)</title><rect x="5.1928%" y="1029" width="0.0768%" height="15" fill="rgb(245,82,37)"/><text x="5.4428%" y="1039.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (8 samples, 0.12%)</title><rect x="5.1774%" y="1061" width="0.1229%" height="15" fill="rgb(227,149,46)"/><text x="5.4274%" y="1071.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (8 samples, 0.12%)</title><rect x="5.1774%" y="1045" width="0.1229%" height="15" fill="rgb(218,36,50)"/><text x="5.4274%" y="1055.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.03%)</title><rect x="5.2696%" y="1029" width="0.0307%" height="15" fill="rgb(226,80,48)"/><text x="5.5196%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.03%)</title><rect x="5.2696%" y="1013" width="0.0307%" height="15" fill="rgb(238,224,15)"/><text x="5.5196%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.03%)</title><rect x="5.2696%" y="997" width="0.0307%" height="15" fill="rgb(241,136,10)"/><text x="5.5196%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.03%)</title><rect x="5.2696%" y="981" width="0.0307%" height="15" fill="rgb(208,32,45)"/><text x="5.5196%" y="991.50"></text></g><g><title>_rjem_mallocx (2 samples, 0.03%)</title><rect x="5.2696%" y="965" width="0.0307%" height="15" fill="rgb(207,135,9)"/><text x="5.5196%" y="975.50"></text></g><g><title>imalloc (2 samples, 0.03%)</title><rect x="5.2696%" y="949" width="0.0307%" height="15" fill="rgb(206,86,44)"/><text x="5.5196%" y="959.50"></text></g><g><title>imalloc_body (2 samples, 0.03%)</title><rect x="5.2696%" y="933" width="0.0307%" height="15" fill="rgb(245,177,15)"/><text x="5.5196%" y="943.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="5.2850%" y="917" width="0.0154%" height="15" fill="rgb(206,64,50)"/><text x="5.5350%" y="927.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="5.2850%" y="901" width="0.0154%" height="15" fill="rgb(234,36,40)"/><text x="5.5350%" y="911.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="5.2850%" y="885" width="0.0154%" height="15" fill="rgb(213,64,8)"/><text x="5.5350%" y="895.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="5.2850%" y="869" width="0.0154%" height="15" fill="rgb(210,75,36)"/><text x="5.5350%" y="879.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.14%)</title><rect x="5.3004%" y="1061" width="0.1383%" height="15" fill="rgb(229,88,21)"/><text x="5.5504%" y="1071.50"></text></g><g><title>__rg_dealloc (1 samples, 0.02%)</title><rect x="5.4386%" y="981" width="0.0154%" height="15" fill="rgb(252,204,47)"/><text x="5.6886%" y="991.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.02%)</title><rect x="5.4386%" y="965" width="0.0154%" height="15" fill="rgb(208,77,27)"/><text x="5.6886%" y="975.50"></text></g><g><title>jemallocator::layout_to_flags (1 samples, 0.02%)</title><rect x="5.4386%" y="949" width="0.0154%" height="15" fill="rgb(221,76,26)"/><text x="5.6886%" y="959.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="5.4540%" y="981" width="0.0154%" height="15" fill="rgb(225,139,18)"/><text x="5.7040%" y="991.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (81 samples, 1.24%)</title><rect x="4.2403%" y="1109" width="1.2444%" height="15" fill="rgb(230,137,11)"/><text x="4.4903%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (80 samples, 1.23%)</title><rect x="4.2556%" y="1093" width="1.2291%" height="15" fill="rgb(212,28,1)"/><text x="4.5056%" y="1103.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::eval_eplus::&lt;impl rho_runtime::interpreter::reduce::eval_expression::AsyncExprInstanceEvaluator&lt;S&gt; for model::rho_types::EPlus&gt;::evaluate::{{closure}} (23 samples, 0.35%)</title><rect x="5.1314%" y="1077" width="0.3534%" height="15" fill="rgb(248,164,17)"/><text x="5.3814%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;model::rho_types::Expr,model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (3 samples, 0.05%)</title><rect x="5.4386%" y="1061" width="0.0461%" height="15" fill="rgb(222,171,42)"/><text x="5.6886%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;model::rho_types::Expr,model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (3 samples, 0.05%)</title><rect x="5.4386%" y="1045" width="0.0461%" height="15" fill="rgb(243,84,45)"/><text x="5.6886%" y="1055.50"></text></g><g><title>alloc::alloc::box_free (3 samples, 0.05%)</title><rect x="5.4386%" y="1029" width="0.0461%" height="15" fill="rgb(252,49,23)"/><text x="5.6886%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.05%)</title><rect x="5.4386%" y="1013" width="0.0461%" height="15" fill="rgb(215,19,7)"/><text x="5.6886%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.05%)</title><rect x="5.4386%" y="997" width="0.0461%" height="15" fill="rgb(238,81,41)"/><text x="5.6886%" y="1007.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="5.4694%" y="981" width="0.0154%" height="15" fill="rgb(210,199,37)"/><text x="5.7194%" y="991.50"></text></g><g><title>tsd_tcachep_get (1 samples, 0.02%)</title><rect x="5.4694%" y="965" width="0.0154%" height="15" fill="rgb(244,192,49)"/><text x="5.7194%" y="975.50"></text></g><g><title>tsd_tcachep_get_unsafe (1 samples, 0.02%)</title><rect x="5.4694%" y="949" width="0.0154%" height="15" fill="rgb(226,211,11)"/><text x="5.7194%" y="959.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (5 samples, 0.08%)</title><rect x="5.4847%" y="1109" width="0.0768%" height="15" fill="rgb(236,162,54)"/><text x="5.7347%" y="1119.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.08%)</title><rect x="5.4847%" y="1093" width="0.0768%" height="15" fill="rgb(220,229,9)"/><text x="5.7347%" y="1103.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.14%)</title><rect x="5.6383%" y="1077" width="0.1383%" height="15" fill="rgb(250,87,22)"/><text x="5.8883%" y="1087.50"></text></g><g><title>__rg_alloc (1 samples, 0.02%)</title><rect x="5.7766%" y="1013" width="0.0154%" height="15" fill="rgb(239,43,17)"/><text x="6.0266%" y="1023.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect x="5.7766%" y="997" width="0.0154%" height="15" fill="rgb(231,177,25)"/><text x="6.0266%" y="1007.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="5.7920%" y="1013" width="0.0154%" height="15" fill="rgb(219,179,1)"/><text x="6.0420%" y="1023.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect x="5.8534%" y="901" width="0.0154%" height="15" fill="rgb(238,219,53)"/><text x="6.1034%" y="911.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (1 samples, 0.02%)</title><rect x="5.8534%" y="885" width="0.0154%" height="15" fill="rgb(232,167,36)"/><text x="6.1034%" y="895.50"></text></g><g><title>arena_bin_malloc_hard (1 samples, 0.02%)</title><rect x="5.8534%" y="869" width="0.0154%" height="15" fill="rgb(244,19,51)"/><text x="6.1034%" y="879.50"></text></g><g><title>arena_bin_nonfull_slab_get (1 samples, 0.02%)</title><rect x="5.8534%" y="853" width="0.0154%" height="15" fill="rgb(224,6,22)"/><text x="6.1034%" y="863.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.02%)</title><rect x="5.8534%" y="837" width="0.0154%" height="15" fill="rgb(224,145,5)"/><text x="6.1034%" y="847.50"></text></g><g><title>_rjem_je_extents_alloc (1 samples, 0.02%)</title><rect x="5.8534%" y="821" width="0.0154%" height="15" fill="rgb(234,130,49)"/><text x="6.1034%" y="831.50"></text></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect x="5.8534%" y="805" width="0.0154%" height="15" fill="rgb(254,6,2)"/><text x="6.1034%" y="815.50"></text></g><g><title>extent_recycle_extract (1 samples, 0.02%)</title><rect x="5.8534%" y="789" width="0.0154%" height="15" fill="rgb(208,96,46)"/><text x="6.1034%" y="799.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect x="5.8534%" y="773" width="0.0154%" height="15" fill="rgb(239,3,39)"/><text x="6.1034%" y="783.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect x="5.8534%" y="757" width="0.0154%" height="15" fill="rgb(233,210,1)"/><text x="6.1034%" y="767.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="5.8534%" y="741" width="0.0154%" height="15" fill="rgb(244,137,37)"/><text x="6.1034%" y="751.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect x="5.8688%" y="901" width="0.0154%" height="15" fill="rgb(240,136,2)"/><text x="6.1188%" y="911.50"></text></g><g><title>imalloc_no_sample (4 samples, 0.06%)</title><rect x="5.8381%" y="965" width="0.0615%" height="15" fill="rgb(239,18,37)"/><text x="6.0881%" y="975.50"></text></g><g><title>iallocztm (3 samples, 0.05%)</title><rect x="5.8534%" y="949" width="0.0461%" height="15" fill="rgb(218,185,22)"/><text x="6.1034%" y="959.50"></text></g><g><title>arena_malloc (3 samples, 0.05%)</title><rect x="5.8534%" y="933" width="0.0461%" height="15" fill="rgb(225,218,4)"/><text x="6.1034%" y="943.50"></text></g><g><title>tcache_alloc_small (3 samples, 0.05%)</title><rect x="5.8534%" y="917" width="0.0461%" height="15" fill="rgb(230,182,32)"/><text x="6.1034%" y="927.50"></text></g><g><title>tcache_event (1 samples, 0.02%)</title><rect x="5.8842%" y="901" width="0.0154%" height="15" fill="rgb(242,56,43)"/><text x="6.1342%" y="911.50"></text></g><g><title>ticker_tick (1 samples, 0.02%)</title><rect x="5.8842%" y="885" width="0.0154%" height="15" fill="rgb(233,99,24)"/><text x="6.1342%" y="895.50"></text></g><g><title>ticker_ticks (1 samples, 0.02%)</title><rect x="5.8842%" y="869" width="0.0154%" height="15" fill="rgb(234,209,42)"/><text x="6.1342%" y="879.50"></text></g><g><title>sz_index2size (1 samples, 0.02%)</title><rect x="5.8995%" y="965" width="0.0154%" height="15" fill="rgb(227,7,12)"/><text x="6.1495%" y="975.50"></text></g><g><title>sz_index2size_lookup (1 samples, 0.02%)</title><rect x="5.8995%" y="949" width="0.0154%" height="15" fill="rgb(245,203,43)"/><text x="6.1495%" y="959.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (24 samples, 0.37%)</title><rect x="5.5615%" y="1109" width="0.3687%" height="15" fill="rgb(238,205,33)"/><text x="5.8115%" y="1119.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (24 samples, 0.37%)</title><rect x="5.5615%" y="1093" width="0.3687%" height="15" fill="rgb(231,56,7)"/><text x="5.8115%" y="1103.50"></text></g><g><title>alloc::alloc::exchange_malloc (10 samples, 0.15%)</title><rect x="5.7766%" y="1077" width="0.1536%" height="15" fill="rgb(244,186,29)"/><text x="6.0266%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (10 samples, 0.15%)</title><rect x="5.7766%" y="1061" width="0.1536%" height="15" fill="rgb(234,111,31)"/><text x="6.0266%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (10 samples, 0.15%)</title><rect x="5.7766%" y="1045" width="0.1536%" height="15" fill="rgb(241,149,10)"/><text x="6.0266%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (10 samples, 0.15%)</title><rect x="5.7766%" y="1029" width="0.1536%" height="15" fill="rgb(249,206,44)"/><text x="6.0266%" y="1039.50"></text></g><g><title>_rjem_mallocx (8 samples, 0.12%)</title><rect x="5.8073%" y="1013" width="0.1229%" height="15" fill="rgb(251,153,30)"/><text x="6.0573%" y="1023.50"></text></g><g><title>imalloc (7 samples, 0.11%)</title><rect x="5.8227%" y="997" width="0.1075%" height="15" fill="rgb(239,152,38)"/><text x="6.0727%" y="1007.50"></text></g><g><title>imalloc_body (6 samples, 0.09%)</title><rect x="5.8381%" y="981" width="0.0922%" height="15" fill="rgb(249,139,47)"/><text x="6.0881%" y="991.50"></text></g><g><title>sz_size2index (1 samples, 0.02%)</title><rect x="5.9149%" y="965" width="0.0154%" height="15" fill="rgb(244,64,35)"/><text x="6.1649%" y="975.50"></text></g><g><title>sz_size2index_lookup (1 samples, 0.02%)</title><rect x="5.9149%" y="949" width="0.0154%" height="15" fill="rgb(216,46,15)"/><text x="6.1649%" y="959.50"></text></g><g><title>[libc-2.31.so] (14 samples, 0.22%)</title><rect x="5.9303%" y="1109" width="0.2151%" height="15" fill="rgb(250,74,19)"/><text x="6.1803%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Connective&gt;&gt; (1 samples, 0.02%)</title><rect x="6.1453%" y="1077" width="0.0154%" height="15" fill="rgb(249,42,33)"/><text x="6.3953%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="6.1453%" y="1061" width="0.0154%" height="15" fill="rgb(242,149,17)"/><text x="6.3953%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Connective]&gt; (1 samples, 0.02%)</title><rect x="6.1453%" y="1045" width="0.0154%" height="15" fill="rgb(244,29,21)"/><text x="6.3953%" y="1055.50"></text></g><g><title>_rjem_je_tcache_event_hard (1 samples, 0.02%)</title><rect x="6.1607%" y="997" width="0.0154%" height="15" fill="rgb(220,130,37)"/><text x="6.4107%" y="1007.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="6.1607%" y="981" width="0.0154%" height="15" fill="rgb(211,67,2)"/><text x="6.4107%" y="991.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (1 samples, 0.02%)</title><rect x="6.1607%" y="965" width="0.0154%" height="15" fill="rgb(235,68,52)"/><text x="6.4107%" y="975.50"></text></g><g><title>arena_dalloc_bin_locked_impl (1 samples, 0.02%)</title><rect x="6.1607%" y="949" width="0.0154%" height="15" fill="rgb(246,142,3)"/><text x="6.4107%" y="959.50"></text></g><g><title>arena_bin_lower_slab (1 samples, 0.02%)</title><rect x="6.1607%" y="933" width="0.0154%" height="15" fill="rgb(241,25,7)"/><text x="6.4107%" y="943.50"></text></g><g><title>extent_snad_comp (1 samples, 0.02%)</title><rect x="6.1607%" y="917" width="0.0154%" height="15" fill="rgb(242,119,39)"/><text x="6.4107%" y="927.50"></text></g><g><title>extent_sn_comp (1 samples, 0.02%)</title><rect x="6.1607%" y="901" width="0.0154%" height="15" fill="rgb(241,98,45)"/><text x="6.4107%" y="911.50"></text></g><g><title>isfree (4 samples, 0.06%)</title><rect x="6.1761%" y="981" width="0.0615%" height="15" fill="rgb(254,28,30)"/><text x="6.4261%" y="991.50"></text></g><g><title>isdalloct (4 samples, 0.06%)</title><rect x="6.1761%" y="965" width="0.0615%" height="15" fill="rgb(241,142,54)"/><text x="6.4261%" y="975.50"></text></g><g><title>arena_sdalloc (4 samples, 0.06%)</title><rect x="6.1761%" y="949" width="0.0615%" height="15" fill="rgb(222,85,15)"/><text x="6.4261%" y="959.50"></text></g><g><title>tcache_dalloc_small (4 samples, 0.06%)</title><rect x="6.1761%" y="933" width="0.0615%" height="15" fill="rgb(210,85,47)"/><text x="6.4261%" y="943.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="6.2222%" y="917" width="0.0154%" height="15" fill="rgb(224,206,25)"/><text x="6.4722%" y="927.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect x="6.2222%" y="901" width="0.0154%" height="15" fill="rgb(243,201,19)"/><text x="6.4722%" y="911.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect x="6.2222%" y="885" width="0.0154%" height="15" fill="rgb(236,59,4)"/><text x="6.4722%" y="895.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="6.2222%" y="869" width="0.0154%" height="15" fill="rgb(254,179,45)"/><text x="6.4722%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (6 samples, 0.09%)</title><rect x="6.1607%" y="1077" width="0.0922%" height="15" fill="rgb(226,14,10)"/><text x="6.4107%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (6 samples, 0.09%)</title><rect x="6.1607%" y="1061" width="0.0922%" height="15" fill="rgb(244,27,41)"/><text x="6.4107%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.09%)</title><rect x="6.1607%" y="1045" width="0.0922%" height="15" fill="rgb(235,35,32)"/><text x="6.4107%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.09%)</title><rect x="6.1607%" y="1029" width="0.0922%" height="15" fill="rgb(218,68,31)"/><text x="6.4107%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.09%)</title><rect x="6.1607%" y="1013" width="0.0922%" height="15" fill="rgb(207,120,37)"/><text x="6.4107%" y="1023.50"></text></g><g><title>_rjem_sdallocx (5 samples, 0.08%)</title><rect x="6.1761%" y="997" width="0.0768%" height="15" fill="rgb(227,98,0)"/><text x="6.4261%" y="1007.50"></text></g><g><title>tsd_tcachep_get (1 samples, 0.02%)</title><rect x="6.2375%" y="981" width="0.0154%" height="15" fill="rgb(207,7,3)"/><text x="6.4875%" y="991.50"></text></g><g><title>tsd_tcachep_get_unsafe (1 samples, 0.02%)</title><rect x="6.2375%" y="965" width="0.0154%" height="15" fill="rgb(206,98,19)"/><text x="6.4875%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (8 samples, 0.12%)</title><rect x="6.1453%" y="1093" width="0.1229%" height="15" fill="rgb(217,5,26)"/><text x="6.3953%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Receive&gt;&gt; (1 samples, 0.02%)</title><rect x="6.2529%" y="1077" width="0.0154%" height="15" fill="rgb(235,190,38)"/><text x="6.5029%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="6.2529%" y="1061" width="0.0154%" height="15" fill="rgb(247,86,24)"/><text x="6.5029%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.02%)</title><rect x="6.2529%" y="1045" width="0.0154%" height="15" fill="rgb(205,101,16)"/><text x="6.5029%" y="1055.50"></text></g><g><title>__rg_dealloc (1 samples, 0.02%)</title><rect x="6.2682%" y="1045" width="0.0154%" height="15" fill="rgb(246,168,33)"/><text x="6.5182%" y="1055.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="6.2836%" y="1045" width="0.0154%" height="15" fill="rgb(231,114,1)"/><text x="6.5336%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="6.2990%" y="1013" width="0.0154%" height="15" fill="rgb(207,184,53)"/><text x="6.5490%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Expr]&gt; (1 samples, 0.02%)</title><rect x="6.2990%" y="997" width="0.0154%" height="15" fill="rgb(224,95,51)"/><text x="6.5490%" y="1007.50"></text></g><g><title>__rg_dealloc (1 samples, 0.02%)</title><rect x="6.3143%" y="949" width="0.0154%" height="15" fill="rgb(212,188,45)"/><text x="6.5643%" y="959.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.02%)</title><rect x="6.3143%" y="933" width="0.0154%" height="15" fill="rgb(223,154,38)"/><text x="6.5643%" y="943.50"></text></g><g><title>arena_decay_ticks (1 samples, 0.02%)</title><rect x="6.3604%" y="853" width="0.0154%" height="15" fill="rgb(251,22,52)"/><text x="6.6104%" y="863.50"></text></g><g><title>_rjem_je_arena_decay (1 samples, 0.02%)</title><rect x="6.3604%" y="837" width="0.0154%" height="15" fill="rgb(229,209,22)"/><text x="6.6104%" y="847.50"></text></g><g><title>arena_decay_dirty (1 samples, 0.02%)</title><rect x="6.3604%" y="821" width="0.0154%" height="15" fill="rgb(234,138,34)"/><text x="6.6104%" y="831.50"></text></g><g><title>arena_decay_impl (1 samples, 0.02%)</title><rect x="6.3604%" y="805" width="0.0154%" height="15" fill="rgb(212,95,11)"/><text x="6.6104%" y="815.50"></text></g><g><title>arena_maybe_decay (1 samples, 0.02%)</title><rect x="6.3604%" y="789" width="0.0154%" height="15" fill="rgb(240,179,47)"/><text x="6.6104%" y="799.50"></text></g><g><title>arena_maybe_decay (1 samples, 0.02%)</title><rect x="6.3604%" y="773" width="0.0154%" height="15" fill="rgb(240,163,11)"/><text x="6.6104%" y="783.50"></text></g><g><title>arena_decay_try_purge (1 samples, 0.02%)</title><rect x="6.3604%" y="757" width="0.0154%" height="15" fill="rgb(236,37,12)"/><text x="6.6104%" y="767.50"></text></g><g><title>arena_decay_try_purge (1 samples, 0.02%)</title><rect x="6.3604%" y="741" width="0.0154%" height="15" fill="rgb(232,164,16)"/><text x="6.6104%" y="751.50"></text></g><g><title>arena_decay_to_limit (1 samples, 0.02%)</title><rect x="6.3604%" y="725" width="0.0154%" height="15" fill="rgb(244,205,15)"/><text x="6.6104%" y="735.50"></text></g><g><title>arena_stash_decayed (1 samples, 0.02%)</title><rect x="6.3604%" y="709" width="0.0154%" height="15" fill="rgb(223,117,47)"/><text x="6.6104%" y="719.50"></text></g><g><title>_rjem_je_extents_evict (1 samples, 0.02%)</title><rect x="6.3604%" y="693" width="0.0154%" height="15" fill="rgb(244,107,35)"/><text x="6.6104%" y="703.50"></text></g><g><title>extent_try_delayed_coalesce (1 samples, 0.02%)</title><rect x="6.3604%" y="677" width="0.0154%" height="15" fill="rgb(205,140,8)"/><text x="6.6104%" y="687.50"></text></g><g><title>extent_try_coalesce (1 samples, 0.02%)</title><rect x="6.3604%" y="661" width="0.0154%" height="15" fill="rgb(228,84,46)"/><text x="6.6104%" y="671.50"></text></g><g><title>extent_coalesce (1 samples, 0.02%)</title><rect x="6.3604%" y="645" width="0.0154%" height="15" fill="rgb(254,188,9)"/><text x="6.6104%" y="655.50"></text></g><g><title>extent_merge_impl (1 samples, 0.02%)</title><rect x="6.3604%" y="629" width="0.0154%" height="15" fill="rgb(206,112,54)"/><text x="6.6104%" y="639.50"></text></g><g><title>_rjem_je_extent_dalloc (1 samples, 0.02%)</title><rect x="6.3604%" y="613" width="0.0154%" height="15" fill="rgb(216,84,49)"/><text x="6.6104%" y="623.50"></text></g><g><title>malloc_mutex_unlock (1 samples, 0.02%)</title><rect x="6.3604%" y="597" width="0.0154%" height="15" fill="rgb(214,194,35)"/><text x="6.6104%" y="607.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="6.3604%" y="581" width="0.0154%" height="15" fill="rgb(249,28,3)"/><text x="6.6104%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::ELt&gt; (8 samples, 0.12%)</title><rect x="6.2682%" y="1077" width="0.1229%" height="15" fill="rgb(222,56,52)"/><text x="6.5182%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::Par&gt;&gt; (8 samples, 0.12%)</title><rect x="6.2682%" y="1061" width="0.1229%" height="15" fill="rgb(245,217,50)"/><text x="6.5182%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (6 samples, 0.09%)</title><rect x="6.2990%" y="1045" width="0.0922%" height="15" fill="rgb(213,201,24)"/><text x="6.5490%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (6 samples, 0.09%)</title><rect x="6.2990%" y="1029" width="0.0922%" height="15" fill="rgb(248,116,28)"/><text x="6.5490%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (5 samples, 0.08%)</title><rect x="6.3143%" y="1013" width="0.0768%" height="15" fill="rgb(219,72,43)"/><text x="6.5643%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.08%)</title><rect x="6.3143%" y="997" width="0.0768%" height="15" fill="rgb(209,138,14)"/><text x="6.5643%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.08%)</title><rect x="6.3143%" y="981" width="0.0768%" height="15" fill="rgb(222,18,33)"/><text x="6.5643%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.08%)</title><rect x="6.3143%" y="965" width="0.0768%" height="15" fill="rgb(213,199,7)"/><text x="6.5643%" y="975.50"></text></g><g><title>_rjem_sdallocx (4 samples, 0.06%)</title><rect x="6.3297%" y="949" width="0.0615%" height="15" fill="rgb(250,110,10)"/><text x="6.5797%" y="959.50"></text></g><g><title>isfree (4 samples, 0.06%)</title><rect x="6.3297%" y="933" width="0.0615%" height="15" fill="rgb(248,123,6)"/><text x="6.5797%" y="943.50"></text></g><g><title>isdalloct (4 samples, 0.06%)</title><rect x="6.3297%" y="917" width="0.0615%" height="15" fill="rgb(206,91,31)"/><text x="6.5797%" y="927.50"></text></g><g><title>arena_sdalloc (4 samples, 0.06%)</title><rect x="6.3297%" y="901" width="0.0615%" height="15" fill="rgb(211,154,13)"/><text x="6.5797%" y="911.50"></text></g><g><title>tcache_dalloc_small (3 samples, 0.05%)</title><rect x="6.3451%" y="885" width="0.0461%" height="15" fill="rgb(225,148,7)"/><text x="6.5951%" y="895.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (3 samples, 0.05%)</title><rect x="6.3451%" y="869" width="0.0461%" height="15" fill="rgb(220,160,43)"/><text x="6.5951%" y="879.50"></text></g><g><title>iealloc (1 samples, 0.02%)</title><rect x="6.3758%" y="853" width="0.0154%" height="15" fill="rgb(213,52,39)"/><text x="6.6258%" y="863.50"></text></g><g><title>rtree_extent_read (1 samples, 0.02%)</title><rect x="6.3758%" y="837" width="0.0154%" height="15" fill="rgb(243,137,7)"/><text x="6.6258%" y="847.50"></text></g><g><title>rtree_leaf_elm_extent_read (1 samples, 0.02%)</title><rect x="6.3758%" y="821" width="0.0154%" height="15" fill="rgb(230,79,13)"/><text x="6.6258%" y="831.50"></text></g><g><title>rtree_leaf_elm_bits_read (1 samples, 0.02%)</title><rect x="6.3758%" y="805" width="0.0154%" height="15" fill="rgb(247,105,23)"/><text x="6.6258%" y="815.50"></text></g><g><title>atomic_load_p (1 samples, 0.02%)</title><rect x="6.3758%" y="789" width="0.0154%" height="15" fill="rgb(223,179,41)"/><text x="6.6258%" y="799.50"></text></g><g><title>arena_dalloc_bin_slab (1 samples, 0.02%)</title><rect x="6.4372%" y="821" width="0.0154%" height="15" fill="rgb(218,9,34)"/><text x="6.6872%" y="831.50"></text></g><g><title>arena_slab_dalloc (1 samples, 0.02%)</title><rect x="6.4372%" y="805" width="0.0154%" height="15" fill="rgb(222,106,8)"/><text x="6.6872%" y="815.50"></text></g><g><title>_rjem_je_arena_extents_dirty_dalloc (1 samples, 0.02%)</title><rect x="6.4372%" y="789" width="0.0154%" height="15" fill="rgb(211,220,0)"/><text x="6.6872%" y="799.50"></text></g><g><title>extent_record (1 samples, 0.02%)</title><rect x="6.4372%" y="773" width="0.0154%" height="15" fill="rgb(229,52,16)"/><text x="6.6872%" y="783.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect x="6.4372%" y="757" width="0.0154%" height="15" fill="rgb(212,155,18)"/><text x="6.6872%" y="767.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect x="6.4372%" y="741" width="0.0154%" height="15" fill="rgb(242,21,14)"/><text x="6.6872%" y="751.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="6.4372%" y="725" width="0.0154%" height="15" fill="rgb(222,19,48)"/><text x="6.6872%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::expr::ExprInstance&gt;&gt; (21 samples, 0.32%)</title><rect x="6.1453%" y="1109" width="0.3226%" height="15" fill="rgb(232,45,27)"/><text x="6.3953%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::expr::ExprInstance&gt; (13 samples, 0.20%)</title><rect x="6.2682%" y="1093" width="0.1997%" height="15" fill="rgb(249,103,42)"/><text x="6.5182%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::EPlus&gt; (5 samples, 0.08%)</title><rect x="6.3912%" y="1077" width="0.0768%" height="15" fill="rgb(246,81,33)"/><text x="6.6412%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::Par&gt;&gt; (5 samples, 0.08%)</title><rect x="6.3912%" y="1061" width="0.0768%" height="15" fill="rgb(252,33,42)"/><text x="6.6412%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (5 samples, 0.08%)</title><rect x="6.3912%" y="1045" width="0.0768%" height="15" fill="rgb(209,212,41)"/><text x="6.6412%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (5 samples, 0.08%)</title><rect x="6.3912%" y="1029" width="0.0768%" height="15" fill="rgb(207,154,6)"/><text x="6.6412%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (5 samples, 0.08%)</title><rect x="6.3912%" y="1013" width="0.0768%" height="15" fill="rgb(223,64,47)"/><text x="6.6412%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.08%)</title><rect x="6.3912%" y="997" width="0.0768%" height="15" fill="rgb(211,161,38)"/><text x="6.6412%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.08%)</title><rect x="6.3912%" y="981" width="0.0768%" height="15" fill="rgb(219,138,40)"/><text x="6.6412%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.08%)</title><rect x="6.3912%" y="965" width="0.0768%" height="15" fill="rgb(241,228,46)"/><text x="6.6412%" y="975.50"></text></g><g><title>_rjem_sdallocx (5 samples, 0.08%)</title><rect x="6.3912%" y="949" width="0.0768%" height="15" fill="rgb(223,209,38)"/><text x="6.6412%" y="959.50"></text></g><g><title>isfree (5 samples, 0.08%)</title><rect x="6.3912%" y="933" width="0.0768%" height="15" fill="rgb(236,164,45)"/><text x="6.6412%" y="943.50"></text></g><g><title>isdalloct (5 samples, 0.08%)</title><rect x="6.3912%" y="917" width="0.0768%" height="15" fill="rgb(231,15,5)"/><text x="6.6412%" y="927.50"></text></g><g><title>arena_sdalloc (5 samples, 0.08%)</title><rect x="6.3912%" y="901" width="0.0768%" height="15" fill="rgb(252,35,15)"/><text x="6.6412%" y="911.50"></text></g><g><title>tcache_dalloc_small (5 samples, 0.08%)</title><rect x="6.3912%" y="885" width="0.0768%" height="15" fill="rgb(248,181,18)"/><text x="6.6412%" y="895.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (3 samples, 0.05%)</title><rect x="6.4219%" y="869" width="0.0461%" height="15" fill="rgb(233,39,42)"/><text x="6.6719%" y="879.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (2 samples, 0.03%)</title><rect x="6.4372%" y="853" width="0.0307%" height="15" fill="rgb(238,110,33)"/><text x="6.6872%" y="863.50"></text></g><g><title>arena_dalloc_bin_locked_impl (2 samples, 0.03%)</title><rect x="6.4372%" y="837" width="0.0307%" height="15" fill="rgb(233,195,10)"/><text x="6.6872%" y="847.50"></text></g><g><title>arena_dissociate_bin_slab (1 samples, 0.02%)</title><rect x="6.4526%" y="821" width="0.0154%" height="15" fill="rgb(254,105,3)"/><text x="6.7026%" y="831.50"></text></g><g><title>arena_bin_slabs_nonfull_remove (1 samples, 0.02%)</title><rect x="6.4526%" y="805" width="0.0154%" height="15" fill="rgb(221,225,9)"/><text x="6.7026%" y="815.50"></text></g><g><title>_rjem_je_extent_heap_remove (1 samples, 0.02%)</title><rect x="6.4526%" y="789" width="0.0154%" height="15" fill="rgb(224,227,45)"/><text x="6.7026%" y="799.50"></text></g><g><title>inallocx (1 samples, 0.02%)</title><rect x="6.4680%" y="1013" width="0.0154%" height="15" fill="rgb(229,198,43)"/><text x="6.7180%" y="1023.50"></text></g><g><title>sz_s2u (1 samples, 0.02%)</title><rect x="6.4680%" y="997" width="0.0154%" height="15" fill="rgb(206,209,35)"/><text x="6.7180%" y="1007.50"></text></g><g><title>sz_s2u_lookup (1 samples, 0.02%)</title><rect x="6.4680%" y="981" width="0.0154%" height="15" fill="rgb(245,195,53)"/><text x="6.7180%" y="991.50"></text></g><g><title>sz_index2size_lookup (1 samples, 0.02%)</title><rect x="6.4680%" y="965" width="0.0154%" height="15" fill="rgb(240,92,26)"/><text x="6.7180%" y="975.50"></text></g><g><title>alloc::alloc::box_free (2 samples, 0.03%)</title><rect x="6.4680%" y="1077" width="0.0307%" height="15" fill="rgb(207,40,23)"/><text x="6.7180%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.03%)</title><rect x="6.4680%" y="1061" width="0.0307%" height="15" fill="rgb(223,111,35)"/><text x="6.7180%" y="1071.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.03%)</title><rect x="6.4680%" y="1045" width="0.0307%" height="15" fill="rgb(229,147,28)"/><text x="6.7180%" y="1055.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.03%)</title><rect x="6.4680%" y="1029" width="0.0307%" height="15" fill="rgb(211,29,28)"/><text x="6.7180%" y="1039.50"></text></g><g><title>tsd_tcachep_get (1 samples, 0.02%)</title><rect x="6.4833%" y="1013" width="0.0154%" height="15" fill="rgb(228,72,33)"/><text x="6.7333%" y="1023.50"></text></g><g><title>tsd_tcachep_get_unsafe (1 samples, 0.02%)</title><rect x="6.4833%" y="997" width="0.0154%" height="15" fill="rgb(205,214,31)"/><text x="6.7333%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;model::rho_types::Expr,model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (3 samples, 0.05%)</title><rect x="6.4680%" y="1109" width="0.0461%" height="15" fill="rgb(224,111,15)"/><text x="6.7180%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;model::rho_types::Expr,model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (3 samples, 0.05%)</title><rect x="6.4680%" y="1093" width="0.0461%" height="15" fill="rgb(253,21,26)"/><text x="6.7180%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;rho_runtime::storage::coordinator::AsyncStore&gt;&gt;::evaluate_single_expression::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="6.4987%" y="1077" width="0.0154%" height="15" fill="rgb(245,139,43)"/><text x="6.7487%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;rho_runtime::storage::coordinator::AsyncStore&gt;&gt;::evaluate_single_expression::{{closure}}&gt; (1 samples, 0.02%)</title><rect x="6.4987%" y="1061" width="0.0154%" height="15" fill="rgb(252,170,7)"/><text x="6.7487%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;model::rho_types::expr::ExprInstance,model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="6.5141%" y="1109" width="0.0154%" height="15" fill="rgb(231,118,14)"/><text x="6.7641%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;model::rho_types::expr::ExprInstance,model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (1 samples, 0.02%)</title><rect x="6.5141%" y="1093" width="0.0154%" height="15" fill="rgb(238,83,0)"/><text x="6.7641%" y="1103.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.02%)</title><rect x="6.5141%" y="1077" width="0.0154%" height="15" fill="rgb(221,39,39)"/><text x="6.7641%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="6.5141%" y="1061" width="0.0154%" height="15" fill="rgb(222,119,46)"/><text x="6.7641%" y="1071.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="6.5141%" y="1045" width="0.0154%" height="15" fill="rgb(222,165,49)"/><text x="6.7641%" y="1055.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="6.5141%" y="1029" width="0.0154%" height="15" fill="rgb(219,113,52)"/><text x="6.7641%" y="1039.50"></text></g><g><title>inallocx (1 samples, 0.02%)</title><rect x="6.5141%" y="1013" width="0.0154%" height="15" fill="rgb(214,7,15)"/><text x="6.7641%" y="1023.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.05%)</title><rect x="6.5294%" y="1077" width="0.0461%" height="15" fill="rgb(235,32,4)"/><text x="6.7794%" y="1087.50"></text></g><g><title>__rg_alloc (1 samples, 0.02%)</title><rect x="6.5755%" y="1013" width="0.0154%" height="15" fill="rgb(238,90,54)"/><text x="6.8255%" y="1023.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect x="6.5755%" y="997" width="0.0154%" height="15" fill="rgb(213,208,19)"/><text x="6.8255%" y="1007.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (157 samples, 2.41%)</title><rect x="4.1942%" y="1157" width="2.4120%" height="15" fill="rgb(233,156,4)"/><text x="4.4442%" y="1167.50">&lt;c..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (157 samples, 2.41%)</title><rect x="4.1942%" y="1141" width="2.4120%" height="15" fill="rgb(207,194,5)"/><text x="4.4442%" y="1151.50">&lt;c..</text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate::{{closure}} (157 samples, 2.41%)</title><rect x="4.1942%" y="1125" width="2.4120%" height="15" fill="rgb(206,111,30)"/><text x="4.4442%" y="1135.50">rh..</text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::eval_eplus::&lt;impl rho_runtime::interpreter::reduce::eval_expression::AsyncExprInstanceEvaluator&lt;S&gt; for model::rho_types::EPlus&gt;::evaluate (5 samples, 0.08%)</title><rect x="6.5294%" y="1109" width="0.0768%" height="15" fill="rgb(243,70,54)"/><text x="6.7794%" y="1119.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (5 samples, 0.08%)</title><rect x="6.5294%" y="1093" width="0.0768%" height="15" fill="rgb(242,28,8)"/><text x="6.7794%" y="1103.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.03%)</title><rect x="6.5755%" y="1077" width="0.0307%" height="15" fill="rgb(219,106,18)"/><text x="6.8255%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.03%)</title><rect x="6.5755%" y="1061" width="0.0307%" height="15" fill="rgb(244,222,10)"/><text x="6.8255%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.03%)</title><rect x="6.5755%" y="1045" width="0.0307%" height="15" fill="rgb(236,179,52)"/><text x="6.8255%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.03%)</title><rect x="6.5755%" y="1029" width="0.0307%" height="15" fill="rgb(213,23,39)"/><text x="6.8255%" y="1039.50"></text></g><g><title>_rjem_mallocx (1 samples, 0.02%)</title><rect x="6.5909%" y="1013" width="0.0154%" height="15" fill="rgb(238,48,10)"/><text x="6.8409%" y="1023.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="6.5909%" y="997" width="0.0154%" height="15" fill="rgb(251,196,23)"/><text x="6.8409%" y="1007.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="6.5909%" y="981" width="0.0154%" height="15" fill="rgb(250,152,24)"/><text x="6.8409%" y="991.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="6.5909%" y="965" width="0.0154%" height="15" fill="rgb(209,150,17)"/><text x="6.8409%" y="975.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="6.5909%" y="949" width="0.0154%" height="15" fill="rgb(234,202,34)"/><text x="6.8409%" y="959.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="6.5909%" y="933" width="0.0154%" height="15" fill="rgb(253,148,53)"/><text x="6.8409%" y="943.50"></text></g><g><title>tcache_alloc_large (1 samples, 0.02%)</title><rect x="6.5909%" y="917" width="0.0154%" height="15" fill="rgb(218,129,16)"/><text x="6.8409%" y="927.50"></text></g><g><title>tcache_event (1 samples, 0.02%)</title><rect x="6.5909%" y="901" width="0.0154%" height="15" fill="rgb(216,85,19)"/><text x="6.8409%" y="911.50"></text></g><g><title>_rjem_je_tcache_event_hard (1 samples, 0.02%)</title><rect x="6.5909%" y="885" width="0.0154%" height="15" fill="rgb(235,228,7)"/><text x="6.8409%" y="895.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="6.5909%" y="869" width="0.0154%" height="15" fill="rgb(245,175,0)"/><text x="6.8409%" y="879.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (1 samples, 0.02%)</title><rect x="6.5909%" y="853" width="0.0154%" height="15" fill="rgb(208,168,36)"/><text x="6.8409%" y="863.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.06%)</title><rect x="6.6062%" y="1157" width="0.0615%" height="15" fill="rgb(246,171,24)"/><text x="6.8562%" y="1167.50"></text></g><g><title>core::ptr::read (4 samples, 0.06%)</title><rect x="6.6062%" y="1141" width="0.0615%" height="15" fill="rgb(215,142,24)"/><text x="6.8562%" y="1151.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.05%)</title><rect x="6.6216%" y="1125" width="0.0461%" height="15" fill="rgb(250,187,7)"/><text x="6.8716%" y="1135.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="6.8367%" y="1125" width="0.0154%" height="15" fill="rgb(228,66,33)"/><text x="7.0867%" y="1135.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.40%)</title><rect x="6.8367%" y="1141" width="0.3994%" height="15" fill="rgb(234,215,21)"/><text x="7.0867%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (25 samples, 0.38%)</title><rect x="6.8521%" y="1125" width="0.3841%" height="15" fill="rgb(222,191,20)"/><text x="7.1021%" y="1135.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (25 samples, 0.38%)</title><rect x="6.8521%" y="1109" width="0.3841%" height="15" fill="rgb(245,79,54)"/><text x="7.1021%" y="1119.50"></text></g><g><title>core::ptr::read (25 samples, 0.38%)</title><rect x="6.8521%" y="1093" width="0.3841%" height="15" fill="rgb(240,10,37)"/><text x="7.1021%" y="1103.50"></text></g><g><title>[libc-2.31.so] (12 samples, 0.18%)</title><rect x="7.0518%" y="1077" width="0.1844%" height="15" fill="rgb(214,192,32)"/><text x="7.3018%" y="1087.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.02%)</title><rect x="7.2361%" y="1141" width="0.0154%" height="15" fill="rgb(209,36,54)"/><text x="7.4861%" y="1151.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.02%)</title><rect x="7.2361%" y="1125" width="0.0154%" height="15" fill="rgb(220,10,11)"/><text x="7.4861%" y="1135.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (39 samples, 0.60%)</title><rect x="6.6677%" y="1157" width="0.5992%" height="15" fill="rgb(221,106,17)"/><text x="6.9177%" y="1167.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="7.2515%" y="1141" width="0.0154%" height="15" fill="rgb(251,142,44)"/><text x="7.5015%" y="1151.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="7.2515%" y="1125" width="0.0154%" height="15" fill="rgb(238,13,15)"/><text x="7.5015%" y="1135.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (12 samples, 0.18%)</title><rect x="7.2669%" y="1157" width="0.1844%" height="15" fill="rgb(208,107,27)"/><text x="7.5169%" y="1167.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.15%)</title><rect x="7.2976%" y="1141" width="0.1536%" height="15" fill="rgb(205,136,37)"/><text x="7.5476%" y="1151.50"></text></g><g><title>[libc-2.31.so] (36 samples, 0.55%)</title><rect x="7.4512%" y="1157" width="0.5531%" height="15" fill="rgb(250,205,27)"/><text x="7.7012%" y="1167.50"></text></g><g><title>_rjem_je_tcache_event_hard (1 samples, 0.02%)</title><rect x="8.0197%" y="1077" width="0.0154%" height="15" fill="rgb(210,80,43)"/><text x="8.2697%" y="1087.50"></text></g><g><title>alloc::alloc::box_free (3 samples, 0.05%)</title><rect x="8.0197%" y="1125" width="0.0461%" height="15" fill="rgb(247,160,36)"/><text x="8.2697%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.05%)</title><rect x="8.0197%" y="1109" width="0.0461%" height="15" fill="rgb(234,13,49)"/><text x="8.2697%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.05%)</title><rect x="8.0197%" y="1093" width="0.0461%" height="15" fill="rgb(234,122,0)"/><text x="8.2697%" y="1103.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.03%)</title><rect x="8.0350%" y="1077" width="0.0307%" height="15" fill="rgb(207,146,38)"/><text x="8.2850%" y="1087.50"></text></g><g><title>isfree (1 samples, 0.02%)</title><rect x="8.0504%" y="1061" width="0.0154%" height="15" fill="rgb(207,177,25)"/><text x="8.3004%" y="1071.50"></text></g><g><title>isdalloct (1 samples, 0.02%)</title><rect x="8.0504%" y="1045" width="0.0154%" height="15" fill="rgb(211,178,42)"/><text x="8.3004%" y="1055.50"></text></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect x="8.0504%" y="1029" width="0.0154%" height="15" fill="rgb(230,69,54)"/><text x="8.3004%" y="1039.50"></text></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect x="8.0504%" y="1013" width="0.0154%" height="15" fill="rgb(214,135,41)"/><text x="8.3004%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (5 samples, 0.08%)</title><rect x="8.0043%" y="1157" width="0.0768%" height="15" fill="rgb(237,67,25)"/><text x="8.2543%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (5 samples, 0.08%)</title><rect x="8.0043%" y="1141" width="0.0768%" height="15" fill="rgb(222,189,50)"/><text x="8.2543%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;rho_runtime::storage::coordinator::AsyncStore&gt; for model::rho_types::Expr&gt;::evaluate::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="8.0658%" y="1125" width="0.0154%" height="15" fill="rgb(245,148,34)"/><text x="8.3158%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;rho_runtime::storage::coordinator::AsyncStore&gt; for model::rho_types::Expr&gt;::evaluate::{{closure}}&gt; (1 samples, 0.02%)</title><rect x="8.0658%" y="1109" width="0.0154%" height="15" fill="rgb(222,29,6)"/><text x="8.3158%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::IntoIter&lt;[model::rho_types::Expr: 5]&gt;&gt; (1 samples, 0.02%)</title><rect x="8.0811%" y="1157" width="0.0154%" height="15" fill="rgb(221,189,43)"/><text x="8.3311%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[model::rho_types::Expr: 5]&gt;&gt; (1 samples, 0.02%)</title><rect x="8.0811%" y="1141" width="0.0154%" height="15" fill="rgb(207,36,27)"/><text x="8.3311%" y="1151.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="8.0811%" y="1125" width="0.0154%" height="15" fill="rgb(217,90,24)"/><text x="8.3311%" y="1135.50"></text></g><g><title>&lt;model::locally_free::ExprInstanceLocallyFree as model::locally_free::HasLocallyFree&lt;model::rho_types::expr::ExprInstance&gt;&gt;::connective_used (1 samples, 0.02%)</title><rect x="8.0965%" y="1141" width="0.0154%" height="15" fill="rgb(224,66,35)"/><text x="8.3465%" y="1151.50"></text></g><g><title>&lt;model::locally_free::ExprInstanceLocallyFree as model::locally_free::HasLocallyFree&lt;model::rho_types::expr::ExprInstance&gt;&gt;::locally_free (1 samples, 0.02%)</title><rect x="8.1118%" y="1141" width="0.0154%" height="15" fill="rgb(221,13,50)"/><text x="8.3618%" y="1151.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="8.1272%" y="1141" width="0.0307%" height="15" fill="rgb(236,68,49)"/><text x="8.3772%" y="1151.50"></text></g><g><title>model::rho_types::Par::append_expr (5 samples, 0.08%)</title><rect x="8.0965%" y="1157" width="0.0768%" height="15" fill="rgb(229,146,28)"/><text x="8.3465%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="8.1579%" y="1141" width="0.0154%" height="15" fill="rgb(225,31,38)"/><text x="8.4079%" y="1151.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="8.1579%" y="1125" width="0.0154%" height="15" fill="rgb(250,208,3)"/><text x="8.4079%" y="1135.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="8.1579%" y="1109" width="0.0154%" height="15" fill="rgb(246,54,23)"/><text x="8.4079%" y="1119.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.05%)</title><rect x="8.1733%" y="1125" width="0.0461%" height="15" fill="rgb(243,76,11)"/><text x="8.4233%" y="1135.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="8.2501%" y="1029" width="0.0154%" height="15" fill="rgb(245,21,50)"/><text x="8.5001%" y="1039.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="8.2501%" y="1013" width="0.0154%" height="15" fill="rgb(228,9,43)"/><text x="8.5001%" y="1023.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="8.2501%" y="997" width="0.0154%" height="15" fill="rgb(208,100,47)"/><text x="8.5001%" y="1007.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="8.2501%" y="981" width="0.0154%" height="15" fill="rgb(232,26,8)"/><text x="8.5001%" y="991.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="8.2501%" y="965" width="0.0154%" height="15" fill="rgb(216,166,38)"/><text x="8.5001%" y="975.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect x="8.2501%" y="949" width="0.0154%" height="15" fill="rgb(251,202,51)"/><text x="8.5001%" y="959.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_nested_expressions::{{closure}} (282 samples, 4.33%)</title><rect x="3.9484%" y="1173" width="4.3325%" height="15" fill="rgb(254,216,34)"/><text x="4.1984%" y="1183.50">&lt;mode..</text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (7 samples, 0.11%)</title><rect x="8.1733%" y="1157" width="0.1075%" height="15" fill="rgb(251,32,27)"/><text x="8.4233%" y="1167.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (7 samples, 0.11%)</title><rect x="8.1733%" y="1141" width="0.1075%" height="15" fill="rgb(208,127,28)"/><text x="8.4233%" y="1151.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.06%)</title><rect x="8.2194%" y="1125" width="0.0615%" height="15" fill="rgb(224,137,22)"/><text x="8.4694%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.06%)</title><rect x="8.2194%" y="1109" width="0.0615%" height="15" fill="rgb(254,70,32)"/><text x="8.4694%" y="1119.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.06%)</title><rect x="8.2194%" y="1093" width="0.0615%" height="15" fill="rgb(229,75,37)"/><text x="8.4694%" y="1103.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.06%)</title><rect x="8.2194%" y="1077" width="0.0615%" height="15" fill="rgb(252,64,23)"/><text x="8.4694%" y="1087.50"></text></g><g><title>_rjem_mallocx (4 samples, 0.06%)</title><rect x="8.2194%" y="1061" width="0.0615%" height="15" fill="rgb(232,162,48)"/><text x="8.4694%" y="1071.50"></text></g><g><title>imalloc (2 samples, 0.03%)</title><rect x="8.2501%" y="1045" width="0.0307%" height="15" fill="rgb(246,160,12)"/><text x="8.5001%" y="1055.50"></text></g><g><title>tsd_fetch (1 samples, 0.02%)</title><rect x="8.2655%" y="1029" width="0.0154%" height="15" fill="rgb(247,166,0)"/><text x="8.5155%" y="1039.50"></text></g><g><title>tsd_fetch_impl (1 samples, 0.02%)</title><rect x="8.2655%" y="1013" width="0.0154%" height="15" fill="rgb(249,219,21)"/><text x="8.5155%" y="1023.50"></text></g><g><title>[libc-2.31.so] (15 samples, 0.23%)</title><rect x="8.2808%" y="1141" width="0.2305%" height="15" fill="rgb(205,209,3)"/><text x="8.5308%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.03%)</title><rect x="8.5113%" y="1141" width="0.0307%" height="15" fill="rgb(243,44,1)"/><text x="8.7613%" y="1151.50"></text></g><g><title>__rust_probestack (2 samples, 0.03%)</title><rect x="8.5113%" y="1125" width="0.0307%" height="15" fill="rgb(206,159,16)"/><text x="8.7613%" y="1135.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="8.5574%" y="1093" width="0.0154%" height="15" fill="rgb(244,77,30)"/><text x="8.8074%" y="1103.50"></text></g><g><title>isfree (1 samples, 0.02%)</title><rect x="8.5574%" y="1077" width="0.0154%" height="15" fill="rgb(218,69,12)"/><text x="8.8074%" y="1087.50"></text></g><g><title>isdalloct (1 samples, 0.02%)</title><rect x="8.5574%" y="1061" width="0.0154%" height="15" fill="rgb(212,87,7)"/><text x="8.8074%" y="1071.50"></text></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect x="8.5574%" y="1045" width="0.0154%" height="15" fill="rgb(245,114,25)"/><text x="8.8074%" y="1055.50"></text></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect x="8.5574%" y="1029" width="0.0154%" height="15" fill="rgb(210,61,42)"/><text x="8.8074%" y="1039.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="8.5574%" y="1013" width="0.0154%" height="15" fill="rgb(211,52,33)"/><text x="8.8074%" y="1023.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (1 samples, 0.02%)</title><rect x="8.5574%" y="997" width="0.0154%" height="15" fill="rgb(234,58,33)"/><text x="8.8074%" y="1007.50"></text></g><g><title>arena_dalloc_bin_locked_impl (1 samples, 0.02%)</title><rect x="8.5574%" y="981" width="0.0154%" height="15" fill="rgb(220,115,36)"/><text x="8.8074%" y="991.50"></text></g><g><title>arena_dalloc_bin_slab (1 samples, 0.02%)</title><rect x="8.5574%" y="965" width="0.0154%" height="15" fill="rgb(243,153,54)"/><text x="8.8074%" y="975.50"></text></g><g><title>malloc_mutex_unlock (1 samples, 0.02%)</title><rect x="8.5574%" y="949" width="0.0154%" height="15" fill="rgb(251,47,18)"/><text x="8.8074%" y="959.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="8.5574%" y="933" width="0.0154%" height="15" fill="rgb(242,102,42)"/><text x="8.8074%" y="943.50"></text></g><g><title>core::mem::drop (1 samples, 0.02%)</title><rect x="8.5727%" y="1077" width="0.0154%" height="15" fill="rgb(234,31,38)"/><text x="8.8227%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;tokio::sync::oneshot::Inner&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="8.5727%" y="1061" width="0.0154%" height="15" fill="rgb(221,117,51)"/><text x="8.8227%" y="1071.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="8.5727%" y="1045" width="0.0154%" height="15" fill="rgb(212,20,18)"/><text x="8.8227%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.02%)</title><rect x="8.5727%" y="1029" width="0.0154%" height="15" fill="rgb(245,133,36)"/><text x="8.8227%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.02%)</title><rect x="8.5727%" y="1013" width="0.0154%" height="15" fill="rgb(212,6,19)"/><text x="8.8227%" y="1023.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.05%)</title><rect x="8.5727%" y="1093" width="0.0461%" height="15" fill="rgb(218,1,36)"/><text x="8.8227%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::oneshot::Inner&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="8.5881%" y="1077" width="0.0307%" height="15" fill="rgb(246,84,54)"/><text x="8.8381%" y="1087.50"></text></g><g><title>&lt;tokio::sync::oneshot::Inner&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="8.5881%" y="1061" width="0.0307%" height="15" fill="rgb(242,110,6)"/><text x="8.8381%" y="1071.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (2 samples, 0.03%)</title><rect x="8.5881%" y="1045" width="0.0307%" height="15" fill="rgb(214,47,5)"/><text x="8.8381%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.03%)</title><rect x="8.5881%" y="1029" width="0.0307%" height="15" fill="rgb(218,159,25)"/><text x="8.8381%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.03%)</title><rect x="8.5881%" y="1013" width="0.0307%" height="15" fill="rgb(215,211,28)"/><text x="8.8381%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt;&gt;&gt; (10 samples, 0.15%)</title><rect x="8.5420%" y="1141" width="0.1536%" height="15" fill="rgb(238,59,32)"/><text x="8.7920%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt;&gt; (9 samples, 0.14%)</title><rect x="8.5574%" y="1125" width="0.1383%" height="15" fill="rgb(226,82,3)"/><text x="8.8074%" y="1135.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.14%)</title><rect x="8.5574%" y="1109" width="0.1383%" height="15" fill="rgb(240,164,32)"/><text x="8.8074%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (5 samples, 0.08%)</title><rect x="8.6188%" y="1093" width="0.0768%" height="15" fill="rgb(232,46,7)"/><text x="8.8688%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_sub (5 samples, 0.08%)</title><rect x="8.6188%" y="1077" width="0.0768%" height="15" fill="rgb(229,129,53)"/><text x="8.8688%" y="1087.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.11%)</title><rect x="8.7417%" y="1125" width="0.1075%" height="15" fill="rgb(234,188,29)"/><text x="8.9917%" y="1135.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::consume_value (23 samples, 0.35%)</title><rect x="8.8493%" y="1125" width="0.3534%" height="15" fill="rgb(246,141,4)"/><text x="9.0993%" y="1135.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (23 samples, 0.35%)</title><rect x="8.8493%" y="1109" width="0.3534%" height="15" fill="rgb(229,23,39)"/><text x="9.0993%" y="1119.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::consume_value::{{closure}} (23 samples, 0.35%)</title><rect x="8.8493%" y="1093" width="0.3534%" height="15" fill="rgb(206,12,3)"/><text x="9.0993%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (23 samples, 0.35%)</title><rect x="8.8493%" y="1077" width="0.3534%" height="15" fill="rgb(252,226,20)"/><text x="9.0993%" y="1087.50"></text></g><g><title>core::mem::take (23 samples, 0.35%)</title><rect x="8.8493%" y="1061" width="0.3534%" height="15" fill="rgb(216,123,35)"/><text x="9.0993%" y="1071.50"></text></g><g><title>core::mem::replace (23 samples, 0.35%)</title><rect x="8.8493%" y="1045" width="0.3534%" height="15" fill="rgb(212,68,40)"/><text x="9.0993%" y="1055.50"></text></g><g><title>core::mem::swap (23 samples, 0.35%)</title><rect x="8.8493%" y="1029" width="0.3534%" height="15" fill="rgb(254,125,32)"/><text x="9.0993%" y="1039.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (23 samples, 0.35%)</title><rect x="8.8493%" y="1013" width="0.3534%" height="15" fill="rgb(253,97,22)"/><text x="9.0993%" y="1023.50"></text></g><g><title>core::ptr::swap_nonoverlapping (23 samples, 0.35%)</title><rect x="8.8493%" y="997" width="0.3534%" height="15" fill="rgb(241,101,14)"/><text x="9.0993%" y="1007.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (23 samples, 0.35%)</title><rect x="8.8493%" y="981" width="0.3534%" height="15" fill="rgb(238,103,29)"/><text x="9.0993%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (21 samples, 0.32%)</title><rect x="8.8800%" y="965" width="0.3226%" height="15" fill="rgb(233,195,47)"/><text x="9.1300%" y="975.50"></text></g><g><title>tokio::sync::oneshot::State::is_complete (1 samples, 0.02%)</title><rect x="9.2026%" y="1125" width="0.0154%" height="15" fill="rgb(246,218,30)"/><text x="9.4526%" y="1135.50"></text></g><g><title>tokio::sync::oneshot::State::load (3 samples, 0.05%)</title><rect x="9.2180%" y="1125" width="0.0461%" height="15" fill="rgb(219,145,47)"/><text x="9.4680%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.05%)</title><rect x="9.2180%" y="1109" width="0.0461%" height="15" fill="rgb(243,12,26)"/><text x="9.4680%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.05%)</title><rect x="9.2180%" y="1093" width="0.0461%" height="15" fill="rgb(214,87,16)"/><text x="9.4680%" y="1103.50"></text></g><g><title>tokio::sync::oneshot::State::set_rx_task (1 samples, 0.02%)</title><rect x="9.2641%" y="1125" width="0.0154%" height="15" fill="rgb(208,99,42)"/><text x="9.5141%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.02%)</title><rect x="9.2641%" y="1109" width="0.0154%" height="15" fill="rgb(253,99,2)"/><text x="9.5141%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.02%)</title><rect x="9.2641%" y="1093" width="0.0154%" height="15" fill="rgb(220,168,23)"/><text x="9.5141%" y="1103.50"></text></g><g><title>&lt;rho_runtime::storage::coordinator::AsyncStore as rho_runtime::storage::Storage&gt;::produce::{{closure}} (67 samples, 1.03%)</title><rect x="8.2808%" y="1173" width="1.0293%" height="15" fill="rgb(242,38,24)"/><text x="8.5308%" y="1183.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (67 samples, 1.03%)</title><rect x="8.2808%" y="1157" width="1.0293%" height="15" fill="rgb(225,182,9)"/><text x="8.5308%" y="1167.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::poll_recv (40 samples, 0.61%)</title><rect x="8.6957%" y="1141" width="0.6145%" height="15" fill="rgb(243,178,37)"/><text x="8.9457%" y="1151.50"></text></g><g><title>tokio::sync::oneshot::Task::set_task (2 samples, 0.03%)</title><rect x="9.2795%" y="1125" width="0.0307%" height="15" fill="rgb(232,139,19)"/><text x="9.5295%" y="1135.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2 samples, 0.03%)</title><rect x="9.2795%" y="1109" width="0.0307%" height="15" fill="rgb(225,201,24)"/><text x="9.5295%" y="1119.50"></text></g><g><title>tokio::sync::oneshot::Task::set_task::{{closure}} (2 samples, 0.03%)</title><rect x="9.2795%" y="1093" width="0.0307%" height="15" fill="rgb(221,47,46)"/><text x="9.5295%" y="1103.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="9.2795%" y="1077" width="0.0307%" height="15" fill="rgb(249,23,13)"/><text x="9.5295%" y="1087.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (2 samples, 0.03%)</title><rect x="9.2795%" y="1061" width="0.0307%" height="15" fill="rgb(219,9,5)"/><text x="9.5295%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.03%)</title><rect x="9.2795%" y="1045" width="0.0307%" height="15" fill="rgb(254,171,16)"/><text x="9.5295%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.03%)</title><rect x="9.2795%" y="1029" width="0.0307%" height="15" fill="rgb(230,171,20)"/><text x="9.5295%" y="1039.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="9.4485%" y="1013" width="0.0307%" height="15" fill="rgb(210,71,41)"/><text x="9.6985%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="9.4792%" y="1013" width="0.0154%" height="15" fill="rgb(206,173,20)"/><text x="9.7292%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="9.4792%" y="997" width="0.0154%" height="15" fill="rgb(233,88,34)"/><text x="9.7292%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="9.4792%" y="981" width="0.0154%" height="15" fill="rgb(223,209,46)"/><text x="9.7292%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="9.4792%" y="965" width="0.0154%" height="15" fill="rgb(250,43,18)"/><text x="9.7292%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="9.4792%" y="949" width="0.0154%" height="15" fill="rgb(208,13,10)"/><text x="9.7292%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="9.4792%" y="933" width="0.0154%" height="15" fill="rgb(212,200,36)"/><text x="9.7292%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="9.4792%" y="917" width="0.0154%" height="15" fill="rgb(225,90,30)"/><text x="9.7292%" y="927.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="9.4792%" y="901" width="0.0154%" height="15" fill="rgb(236,182,39)"/><text x="9.7292%" y="911.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="9.4792%" y="885" width="0.0154%" height="15" fill="rgb(212,144,35)"/><text x="9.7292%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="9.4792%" y="869" width="0.0154%" height="15" fill="rgb(228,63,44)"/><text x="9.7292%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="9.4792%" y="853" width="0.0154%" height="15" fill="rgb(228,109,6)"/><text x="9.7292%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="9.4792%" y="837" width="0.0154%" height="15" fill="rgb(238,117,24)"/><text x="9.7292%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="9.4792%" y="821" width="0.0154%" height="15" fill="rgb(242,26,26)"/><text x="9.7292%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (3 samples, 0.05%)</title><rect x="9.4945%" y="1013" width="0.0461%" height="15" fill="rgb(221,92,48)"/><text x="9.7445%" y="1023.50"></text></g><g><title>core::ptr::read (3 samples, 0.05%)</title><rect x="9.4945%" y="997" width="0.0461%" height="15" fill="rgb(209,209,32)"/><text x="9.7445%" y="1007.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.05%)</title><rect x="9.4945%" y="981" width="0.0461%" height="15" fill="rgb(221,70,22)"/><text x="9.7445%" y="991.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="9.5406%" y="981" width="0.0154%" height="15" fill="rgb(248,145,5)"/><text x="9.7906%" y="991.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression::{{closure}} (13 samples, 0.20%)</title><rect x="9.3716%" y="1029" width="0.1997%" height="15" fill="rgb(226,116,26)"/><text x="9.6216%" y="1039.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (2 samples, 0.03%)</title><rect x="9.5406%" y="1013" width="0.0307%" height="15" fill="rgb(244,5,17)"/><text x="9.7906%" y="1023.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (2 samples, 0.03%)</title><rect x="9.5406%" y="997" width="0.0307%" height="15" fill="rgb(252,159,33)"/><text x="9.7906%" y="1007.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.02%)</title><rect x="9.5560%" y="981" width="0.0154%" height="15" fill="rgb(206,71,0)"/><text x="9.8060%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="9.5560%" y="965" width="0.0154%" height="15" fill="rgb(233,118,54)"/><text x="9.8060%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="9.5560%" y="949" width="0.0154%" height="15" fill="rgb(234,83,48)"/><text x="9.8060%" y="959.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="9.5560%" y="933" width="0.0154%" height="15" fill="rgb(228,3,54)"/><text x="9.8060%" y="943.50"></text></g><g><title>_rjem_mallocx (1 samples, 0.02%)</title><rect x="9.5560%" y="917" width="0.0154%" height="15" fill="rgb(226,155,13)"/><text x="9.8060%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="9.5867%" y="981" width="0.0154%" height="15" fill="rgb(241,28,37)"/><text x="9.8367%" y="991.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (5 samples, 0.08%)</title><rect x="9.6482%" y="933" width="0.0768%" height="15" fill="rgb(233,93,10)"/><text x="9.8982%" y="943.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.05%)</title><rect x="9.6789%" y="917" width="0.0461%" height="15" fill="rgb(225,113,19)"/><text x="9.9289%" y="927.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="9.6943%" y="901" width="0.0307%" height="15" fill="rgb(241,2,18)"/><text x="9.9443%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="9.7404%" y="885" width="0.0154%" height="15" fill="rgb(228,207,21)"/><text x="9.9904%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="9.7404%" y="869" width="0.0154%" height="15" fill="rgb(213,211,35)"/><text x="9.9904%" y="879.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="9.7404%" y="853" width="0.0154%" height="15" fill="rgb(209,83,10)"/><text x="9.9904%" y="863.50"></text></g><g><title>_rjem_mallocx (1 samples, 0.02%)</title><rect x="9.7404%" y="837" width="0.0154%" height="15" fill="rgb(209,164,1)"/><text x="9.9904%" y="847.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="9.7404%" y="821" width="0.0154%" height="15" fill="rgb(213,184,43)"/><text x="9.9904%" y="831.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="9.7404%" y="805" width="0.0154%" height="15" fill="rgb(231,61,34)"/><text x="9.9904%" y="815.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="9.7404%" y="789" width="0.0154%" height="15" fill="rgb(235,75,3)"/><text x="9.9904%" y="799.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="9.7404%" y="773" width="0.0154%" height="15" fill="rgb(220,106,47)"/><text x="9.9904%" y="783.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="9.7404%" y="757" width="0.0154%" height="15" fill="rgb(210,196,33)"/><text x="9.9904%" y="767.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="9.7404%" y="741" width="0.0154%" height="15" fill="rgb(229,154,42)"/><text x="9.9904%" y="751.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect x="9.7404%" y="725" width="0.0154%" height="15" fill="rgb(228,114,26)"/><text x="9.9904%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.05%)</title><rect x="9.7250%" y="933" width="0.0461%" height="15" fill="rgb(208,144,1)"/><text x="9.9750%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.03%)</title><rect x="9.7404%" y="917" width="0.0307%" height="15" fill="rgb(239,112,37)"/><text x="9.9904%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.03%)</title><rect x="9.7404%" y="901" width="0.0307%" height="15" fill="rgb(210,96,50)"/><text x="9.9904%" y="911.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="9.7557%" y="885" width="0.0154%" height="15" fill="rgb(222,178,2)"/><text x="10.0057%" y="895.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1 samples, 0.02%)</title><rect x="9.7557%" y="869" width="0.0154%" height="15" fill="rgb(226,74,18)"/><text x="10.0057%" y="879.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.02%)</title><rect x="9.7557%" y="853" width="0.0154%" height="15" fill="rgb(225,67,54)"/><text x="10.0057%" y="863.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.02%)</title><rect x="9.7557%" y="837" width="0.0154%" height="15" fill="rgb(251,92,32)"/><text x="10.0057%" y="847.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (17 samples, 0.26%)</title><rect x="9.5714%" y="1013" width="0.2612%" height="15" fill="rgb(228,149,22)"/><text x="9.8214%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (16 samples, 0.25%)</title><rect x="9.5867%" y="997" width="0.2458%" height="15" fill="rgb(243,54,13)"/><text x="9.8367%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15 samples, 0.23%)</title><rect x="9.6021%" y="981" width="0.2305%" height="15" fill="rgb(243,180,28)"/><text x="9.8521%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 0.23%)</title><rect x="9.6021%" y="965" width="0.2305%" height="15" fill="rgb(208,167,24)"/><text x="9.8521%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14 samples, 0.22%)</title><rect x="9.6175%" y="949" width="0.2151%" height="15" fill="rgb(245,73,45)"/><text x="9.8675%" y="959.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (4 samples, 0.06%)</title><rect x="9.7711%" y="933" width="0.0615%" height="15" fill="rgb(237,203,48)"/><text x="10.0211%" y="943.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="9.8018%" y="917" width="0.0307%" height="15" fill="rgb(211,197,16)"/><text x="10.0518%" y="927.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (31 samples, 0.48%)</title><rect x="9.3716%" y="1061" width="0.4763%" height="15" fill="rgb(243,99,51)"/><text x="9.6216%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (31 samples, 0.48%)</title><rect x="9.3716%" y="1045" width="0.4763%" height="15" fill="rgb(215,123,29)"/><text x="9.6216%" y="1055.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_var::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S,model::rho_types::Par&gt; for model::rho_types::Var&gt;::evaluate::{{closure}} (18 samples, 0.28%)</title><rect x="9.5714%" y="1029" width="0.2765%" height="15" fill="rgb(239,186,37)"/><text x="9.8214%" y="1039.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="9.8325%" y="1013" width="0.0154%" height="15" fill="rgb(252,136,39)"/><text x="10.0825%" y="1023.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.09%)</title><rect x="9.8479%" y="1061" width="0.0922%" height="15" fill="rgb(223,213,32)"/><text x="10.0979%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (1 samples, 0.02%)</title><rect x="9.9401%" y="1061" width="0.0154%" height="15" fill="rgb(233,115,5)"/><text x="10.1901%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (1 samples, 0.02%)</title><rect x="9.9401%" y="1045" width="0.0154%" height="15" fill="rgb(207,226,44)"/><text x="10.1901%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (1 samples, 0.02%)</title><rect x="9.9401%" y="1029" width="0.0154%" height="15" fill="rgb(208,126,0)"/><text x="10.1901%" y="1039.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="9.9401%" y="1013" width="0.0154%" height="15" fill="rgb(244,66,21)"/><text x="10.1901%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="9.9401%" y="997" width="0.0154%" height="15" fill="rgb(222,97,12)"/><text x="10.1901%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="9.9401%" y="981" width="0.0154%" height="15" fill="rgb(219,213,19)"/><text x="10.1901%" y="991.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="9.9401%" y="965" width="0.0154%" height="15" fill="rgb(252,169,30)"/><text x="10.1901%" y="975.50"></text></g><g><title>inallocx (1 samples, 0.02%)</title><rect x="9.9401%" y="949" width="0.0154%" height="15" fill="rgb(206,32,51)"/><text x="10.1901%" y="959.50"></text></g><g><title>sz_s2u (1 samples, 0.02%)</title><rect x="9.9401%" y="933" width="0.0154%" height="15" fill="rgb(250,172,42)"/><text x="10.1901%" y="943.50"></text></g><g><title>sz_s2u_lookup (1 samples, 0.02%)</title><rect x="9.9401%" y="917" width="0.0154%" height="15" fill="rgb(209,34,43)"/><text x="10.1901%" y="927.50"></text></g><g><title>sz_index2size_lookup (1 samples, 0.02%)</title><rect x="9.9401%" y="901" width="0.0154%" height="15" fill="rgb(223,11,35)"/><text x="10.1901%" y="911.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="9.9554%" y="917" width="0.0154%" height="15" fill="rgb(251,219,26)"/><text x="10.2054%" y="927.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="9.9554%" y="901" width="0.0154%" height="15" fill="rgb(231,119,3)"/><text x="10.2054%" y="911.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="9.9554%" y="885" width="0.0154%" height="15" fill="rgb(216,97,11)"/><text x="10.2054%" y="895.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="9.9554%" y="869" width="0.0154%" height="15" fill="rgb(223,59,9)"/><text x="10.2054%" y="879.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect x="9.9554%" y="853" width="0.0154%" height="15" fill="rgb(233,93,31)"/><text x="10.2054%" y="863.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::eval_eplus::&lt;impl rho_runtime::interpreter::reduce::eval_expression::AsyncExprInstanceEvaluator&lt;S&gt; for model::rho_types::EPlus&gt;::evaluate::{{closure}} (44 samples, 0.68%)</title><rect x="9.3102%" y="1173" width="0.6760%" height="15" fill="rgb(239,81,33)"/><text x="9.5602%" y="1183.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (44 samples, 0.68%)</title><rect x="9.3102%" y="1157" width="0.6760%" height="15" fill="rgb(213,120,34)"/><text x="9.5602%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (44 samples, 0.68%)</title><rect x="9.3102%" y="1141" width="0.6760%" height="15" fill="rgb(243,49,53)"/><text x="9.5602%" y="1151.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression::{{closure}} (44 samples, 0.68%)</title><rect x="9.3102%" y="1125" width="0.6760%" height="15" fill="rgb(247,216,33)"/><text x="9.5602%" y="1135.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (44 samples, 0.68%)</title><rect x="9.3102%" y="1109" width="0.6760%" height="15" fill="rgb(226,26,14)"/><text x="9.5602%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (44 samples, 0.68%)</title><rect x="9.3102%" y="1093" width="0.6760%" height="15" fill="rgb(215,49,53)"/><text x="9.5602%" y="1103.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate::{{closure}} (44 samples, 0.68%)</title><rect x="9.3102%" y="1077" width="0.6760%" height="15" fill="rgb(245,162,40)"/><text x="9.5602%" y="1087.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_var::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S,model::rho_types::Par&gt; for model::rho_types::Var&gt;::evaluate (2 samples, 0.03%)</title><rect x="9.9554%" y="1061" width="0.0307%" height="15" fill="rgb(229,68,17)"/><text x="10.2054%" y="1071.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (2 samples, 0.03%)</title><rect x="9.9554%" y="1045" width="0.0307%" height="15" fill="rgb(213,182,10)"/><text x="10.2054%" y="1055.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.03%)</title><rect x="9.9554%" y="1029" width="0.0307%" height="15" fill="rgb(245,125,30)"/><text x="10.2054%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.03%)</title><rect x="9.9554%" y="1013" width="0.0307%" height="15" fill="rgb(232,202,2)"/><text x="10.2054%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.03%)</title><rect x="9.9554%" y="997" width="0.0307%" height="15" fill="rgb(237,140,51)"/><text x="10.2054%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.03%)</title><rect x="9.9554%" y="981" width="0.0307%" height="15" fill="rgb(236,157,25)"/><text x="10.2054%" y="991.50"></text></g><g><title>_rjem_mallocx (2 samples, 0.03%)</title><rect x="9.9554%" y="965" width="0.0307%" height="15" fill="rgb(219,209,0)"/><text x="10.2054%" y="975.50"></text></g><g><title>imalloc (2 samples, 0.03%)</title><rect x="9.9554%" y="949" width="0.0307%" height="15" fill="rgb(240,116,54)"/><text x="10.2054%" y="959.50"></text></g><g><title>imalloc_body (2 samples, 0.03%)</title><rect x="9.9554%" y="933" width="0.0307%" height="15" fill="rgb(216,10,36)"/><text x="10.2054%" y="943.50"></text></g><g><title>sz_index2size (1 samples, 0.02%)</title><rect x="9.9708%" y="917" width="0.0154%" height="15" fill="rgb(222,72,44)"/><text x="10.2208%" y="927.50"></text></g><g><title>sz_index2size_lookup (1 samples, 0.02%)</title><rect x="9.9708%" y="901" width="0.0154%" height="15" fill="rgb(232,159,9)"/><text x="10.2208%" y="911.50"></text></g><g><title>[libc-2.31.so] (18 samples, 0.28%)</title><rect x="10.0937%" y="1013" width="0.2765%" height="15" fill="rgb(210,39,32)"/><text x="10.3437%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.02%)</title><rect x="10.3703%" y="1013" width="0.0154%" height="15" fill="rgb(216,194,45)"/><text x="10.6203%" y="1023.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="10.3703%" y="997" width="0.0154%" height="15" fill="rgb(218,18,35)"/><text x="10.6203%" y="1007.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="10.3703%" y="981" width="0.0154%" height="15" fill="rgb(207,83,51)"/><text x="10.6203%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="10.3856%" y="1013" width="0.0154%" height="15" fill="rgb(225,63,43)"/><text x="10.6356%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (1 samples, 0.02%)</title><rect x="10.3856%" y="997" width="0.0154%" height="15" fill="rgb(207,57,36)"/><text x="10.6356%" y="1007.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.02%)</title><rect x="10.3856%" y="981" width="0.0154%" height="15" fill="rgb(216,99,33)"/><text x="10.6356%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="10.3856%" y="965" width="0.0154%" height="15" fill="rgb(225,42,16)"/><text x="10.6356%" y="975.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="10.3856%" y="949" width="0.0154%" height="15" fill="rgb(220,201,45)"/><text x="10.6356%" y="959.50"></text></g><g><title>_rjem_je_tcache_event_hard (1 samples, 0.02%)</title><rect x="10.3856%" y="933" width="0.0154%" height="15" fill="rgb(225,33,4)"/><text x="10.6356%" y="943.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="10.3856%" y="917" width="0.0154%" height="15" fill="rgb(224,33,50)"/><text x="10.6356%" y="927.50"></text></g><g><title>extent_arena_get (1 samples, 0.02%)</title><rect x="10.3856%" y="901" width="0.0154%" height="15" fill="rgb(246,198,51)"/><text x="10.6356%" y="911.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="10.4010%" y="981" width="0.0154%" height="15" fill="rgb(205,22,4)"/><text x="10.6510%" y="991.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="10.4471%" y="869" width="0.0154%" height="15" fill="rgb(206,3,8)"/><text x="10.6971%" y="879.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression::{{closure}} (29 samples, 0.45%)</title><rect x="10.0323%" y="1029" width="0.4455%" height="15" fill="rgb(251,23,15)"/><text x="10.2823%" y="1039.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (5 samples, 0.08%)</title><rect x="10.4010%" y="1013" width="0.0768%" height="15" fill="rgb(252,88,28)"/><text x="10.6510%" y="1023.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (5 samples, 0.08%)</title><rect x="10.4010%" y="997" width="0.0768%" height="15" fill="rgb(212,127,14)"/><text x="10.6510%" y="1007.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.06%)</title><rect x="10.4163%" y="981" width="0.0615%" height="15" fill="rgb(247,145,37)"/><text x="10.6663%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.06%)</title><rect x="10.4163%" y="965" width="0.0615%" height="15" fill="rgb(209,117,53)"/><text x="10.6663%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.06%)</title><rect x="10.4163%" y="949" width="0.0615%" height="15" fill="rgb(212,90,42)"/><text x="10.6663%" y="959.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.06%)</title><rect x="10.4163%" y="933" width="0.0615%" height="15" fill="rgb(218,164,37)"/><text x="10.6663%" y="943.50"></text></g><g><title>_rjem_mallocx (4 samples, 0.06%)</title><rect x="10.4163%" y="917" width="0.0615%" height="15" fill="rgb(246,65,34)"/><text x="10.6663%" y="927.50"></text></g><g><title>imalloc (2 samples, 0.03%)</title><rect x="10.4471%" y="901" width="0.0307%" height="15" fill="rgb(231,100,33)"/><text x="10.6971%" y="911.50"></text></g><g><title>imalloc_body (2 samples, 0.03%)</title><rect x="10.4471%" y="885" width="0.0307%" height="15" fill="rgb(228,126,14)"/><text x="10.6971%" y="895.50"></text></g><g><title>sz_size2index (1 samples, 0.02%)</title><rect x="10.4624%" y="869" width="0.0154%" height="15" fill="rgb(215,173,21)"/><text x="10.7124%" y="879.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.06%)</title><rect x="10.4778%" y="1029" width="0.0615%" height="15" fill="rgb(210,6,40)"/><text x="10.7278%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.05%)</title><rect x="10.6314%" y="981" width="0.0461%" height="15" fill="rgb(212,48,18)"/><text x="10.8814%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.06%)</title><rect x="10.8004%" y="933" width="0.0615%" height="15" fill="rgb(230,214,11)"/><text x="11.0504%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="10.8465%" y="917" width="0.0154%" height="15" fill="rgb(254,105,39)"/><text x="11.0965%" y="927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="10.8465%" y="901" width="0.0154%" height="15" fill="rgb(245,158,5)"/><text x="11.0965%" y="911.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="10.8926%" y="917" width="0.0307%" height="15" fill="rgb(249,208,11)"/><text x="11.1426%" y="927.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (7 samples, 0.11%)</title><rect x="10.8619%" y="933" width="0.1075%" height="15" fill="rgb(210,39,28)"/><text x="11.1119%" y="943.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.05%)</title><rect x="10.9233%" y="917" width="0.0461%" height="15" fill="rgb(211,56,53)"/><text x="11.1733%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.03%)</title><rect x="11.0309%" y="885" width="0.0307%" height="15" fill="rgb(226,201,30)"/><text x="11.2809%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.03%)</title><rect x="11.0309%" y="869" width="0.0307%" height="15" fill="rgb(239,101,34)"/><text x="11.2809%" y="879.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="11.0462%" y="853" width="0.0154%" height="15" fill="rgb(226,209,5)"/><text x="11.2962%" y="863.50"></text></g><g><title>_rjem_mallocx (1 samples, 0.02%)</title><rect x="11.0462%" y="837" width="0.0154%" height="15" fill="rgb(250,105,47)"/><text x="11.2962%" y="847.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="11.0462%" y="821" width="0.0154%" height="15" fill="rgb(230,72,3)"/><text x="11.2962%" y="831.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="11.0462%" y="805" width="0.0154%" height="15" fill="rgb(232,218,39)"/><text x="11.2962%" y="815.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="11.0462%" y="789" width="0.0154%" height="15" fill="rgb(248,166,6)"/><text x="11.2962%" y="799.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="11.0462%" y="773" width="0.0154%" height="15" fill="rgb(247,89,20)"/><text x="11.2962%" y="783.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="11.0462%" y="757" width="0.0154%" height="15" fill="rgb(248,130,54)"/><text x="11.2962%" y="767.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="11.0462%" y="741" width="0.0154%" height="15" fill="rgb(234,196,4)"/><text x="11.2962%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.11%)</title><rect x="10.9694%" y="933" width="0.1075%" height="15" fill="rgb(250,143,31)"/><text x="11.2194%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.05%)</title><rect x="11.0309%" y="917" width="0.0461%" height="15" fill="rgb(211,110,34)"/><text x="11.2809%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.05%)</title><rect x="11.0309%" y="901" width="0.0461%" height="15" fill="rgb(215,124,48)"/><text x="11.2809%" y="911.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="11.0616%" y="885" width="0.0154%" height="15" fill="rgb(216,46,13)"/><text x="11.3116%" y="895.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1 samples, 0.02%)</title><rect x="11.0616%" y="869" width="0.0154%" height="15" fill="rgb(205,184,25)"/><text x="11.3116%" y="879.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.02%)</title><rect x="11.0616%" y="853" width="0.0154%" height="15" fill="rgb(228,1,10)"/><text x="11.3116%" y="863.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.02%)</title><rect x="11.0616%" y="837" width="0.0154%" height="15" fill="rgb(213,116,27)"/><text x="11.3116%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (30 samples, 0.46%)</title><rect x="10.6314%" y="997" width="0.4609%" height="15" fill="rgb(241,95,50)"/><text x="10.8814%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (27 samples, 0.41%)</title><rect x="10.6775%" y="981" width="0.4148%" height="15" fill="rgb(238,48,32)"/><text x="10.9275%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (27 samples, 0.41%)</title><rect x="10.6775%" y="965" width="0.4148%" height="15" fill="rgb(235,113,49)"/><text x="10.9275%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (27 samples, 0.41%)</title><rect x="10.6775%" y="949" width="0.4148%" height="15" fill="rgb(205,127,43)"/><text x="10.9275%" y="959.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.02%)</title><rect x="11.0770%" y="933" width="0.0154%" height="15" fill="rgb(250,162,2)"/><text x="11.3270%" y="943.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (39 samples, 0.60%)</title><rect x="10.5546%" y="1013" width="0.5992%" height="15" fill="rgb(220,13,41)"/><text x="10.8046%" y="1023.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.06%)</title><rect x="11.0923%" y="997" width="0.0615%" height="15" fill="rgb(249,221,25)"/><text x="11.3423%" y="1007.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="11.1231%" y="981" width="0.0307%" height="15" fill="rgb(215,208,19)"/><text x="11.3731%" y="991.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="11.1231%" y="965" width="0.0307%" height="15" fill="rgb(236,175,2)"/><text x="11.3731%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="11.1231%" y="949" width="0.0307%" height="15" fill="rgb(241,52,2)"/><text x="11.3731%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.03%)</title><rect x="11.1231%" y="933" width="0.0307%" height="15" fill="rgb(248,140,14)"/><text x="11.3731%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.03%)</title><rect x="11.1231%" y="917" width="0.0307%" height="15" fill="rgb(253,22,42)"/><text x="11.3731%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.03%)</title><rect x="11.1231%" y="901" width="0.0307%" height="15" fill="rgb(234,61,47)"/><text x="11.3731%" y="911.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.03%)</title><rect x="11.1231%" y="885" width="0.0307%" height="15" fill="rgb(208,226,15)"/><text x="11.3731%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.03%)</title><rect x="11.1231%" y="869" width="0.0307%" height="15" fill="rgb(217,221,4)"/><text x="11.3731%" y="879.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="11.1231%" y="853" width="0.0307%" height="15" fill="rgb(212,174,34)"/><text x="11.3731%" y="863.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (75 samples, 1.15%)</title><rect x="10.0169%" y="1061" width="1.1523%" height="15" fill="rgb(253,83,4)"/><text x="10.2669%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (75 samples, 1.15%)</title><rect x="10.0169%" y="1045" width="1.1523%" height="15" fill="rgb(250,195,49)"/><text x="10.2669%" y="1055.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_var::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S,model::rho_types::Par&gt; for model::rho_types::Var&gt;::evaluate::{{closure}} (41 samples, 0.63%)</title><rect x="10.5393%" y="1029" width="0.6299%" height="15" fill="rgb(241,192,25)"/><text x="10.7893%" y="1039.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="11.1538%" y="1013" width="0.0154%" height="15" fill="rgb(208,124,10)"/><text x="11.4038%" y="1023.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (2 samples, 0.03%)</title><rect x="11.1692%" y="1061" width="0.0307%" height="15" fill="rgb(222,33,0)"/><text x="11.4192%" y="1071.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="11.1692%" y="1045" width="0.0307%" height="15" fill="rgb(234,209,28)"/><text x="11.4192%" y="1055.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect x="11.2152%" y="853" width="0.0154%" height="15" fill="rgb(224,11,23)"/><text x="11.4652%" y="863.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (1 samples, 0.02%)</title><rect x="11.2152%" y="837" width="0.0154%" height="15" fill="rgb(232,99,1)"/><text x="11.4652%" y="847.50"></text></g><g><title>arena_bin_malloc_hard (1 samples, 0.02%)</title><rect x="11.2152%" y="821" width="0.0154%" height="15" fill="rgb(237,95,45)"/><text x="11.4652%" y="831.50"></text></g><g><title>imalloc_no_sample (2 samples, 0.03%)</title><rect x="11.2152%" y="917" width="0.0307%" height="15" fill="rgb(208,109,11)"/><text x="11.4652%" y="927.50"></text></g><g><title>iallocztm (2 samples, 0.03%)</title><rect x="11.2152%" y="901" width="0.0307%" height="15" fill="rgb(216,190,48)"/><text x="11.4652%" y="911.50"></text></g><g><title>arena_malloc (2 samples, 0.03%)</title><rect x="11.2152%" y="885" width="0.0307%" height="15" fill="rgb(251,171,36)"/><text x="11.4652%" y="895.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.03%)</title><rect x="11.2152%" y="869" width="0.0307%" height="15" fill="rgb(230,62,22)"/><text x="11.4652%" y="879.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect x="11.2306%" y="853" width="0.0154%" height="15" fill="rgb(225,114,35)"/><text x="11.4806%" y="863.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (4 samples, 0.06%)</title><rect x="11.1999%" y="1061" width="0.0615%" height="15" fill="rgb(215,118,42)"/><text x="11.4499%" y="1071.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (4 samples, 0.06%)</title><rect x="11.1999%" y="1045" width="0.0615%" height="15" fill="rgb(243,119,21)"/><text x="11.4499%" y="1055.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.06%)</title><rect x="11.1999%" y="1029" width="0.0615%" height="15" fill="rgb(252,177,53)"/><text x="11.4499%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.06%)</title><rect x="11.1999%" y="1013" width="0.0615%" height="15" fill="rgb(237,209,29)"/><text x="11.4499%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.06%)</title><rect x="11.1999%" y="997" width="0.0615%" height="15" fill="rgb(212,65,23)"/><text x="11.4499%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.06%)</title><rect x="11.1999%" y="981" width="0.0615%" height="15" fill="rgb(230,222,46)"/><text x="11.4499%" y="991.50"></text></g><g><title>_rjem_mallocx (4 samples, 0.06%)</title><rect x="11.1999%" y="965" width="0.0615%" height="15" fill="rgb(215,135,32)"/><text x="11.4499%" y="975.50"></text></g><g><title>imalloc (3 samples, 0.05%)</title><rect x="11.2152%" y="949" width="0.0461%" height="15" fill="rgb(246,101,22)"/><text x="11.4652%" y="959.50"></text></g><g><title>imalloc_body (3 samples, 0.05%)</title><rect x="11.2152%" y="933" width="0.0461%" height="15" fill="rgb(206,107,13)"/><text x="11.4652%" y="943.50"></text></g><g><title>sz_size2index (1 samples, 0.02%)</title><rect x="11.2460%" y="917" width="0.0154%" height="15" fill="rgb(250,100,44)"/><text x="11.4960%" y="927.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.08%)</title><rect x="11.2613%" y="1061" width="0.0768%" height="15" fill="rgb(231,147,38)"/><text x="11.5113%" y="1071.50"></text></g><g><title>__rg_dealloc (1 samples, 0.02%)</title><rect x="11.3381%" y="981" width="0.0154%" height="15" fill="rgb(229,8,40)"/><text x="11.5881%" y="991.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.02%)</title><rect x="11.3381%" y="965" width="0.0154%" height="15" fill="rgb(221,135,30)"/><text x="11.5881%" y="975.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="11.3535%" y="981" width="0.0154%" height="15" fill="rgb(249,193,18)"/><text x="11.6035%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;model::rho_types::Expr,model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (6 samples, 0.09%)</title><rect x="11.3381%" y="1061" width="0.0922%" height="15" fill="rgb(209,133,39)"/><text x="11.5881%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;model::rho_types::Expr,model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (6 samples, 0.09%)</title><rect x="11.3381%" y="1045" width="0.0922%" height="15" fill="rgb(232,100,14)"/><text x="11.5881%" y="1055.50"></text></g><g><title>alloc::alloc::box_free (6 samples, 0.09%)</title><rect x="11.3381%" y="1029" width="0.0922%" height="15" fill="rgb(224,185,1)"/><text x="11.5881%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.09%)</title><rect x="11.3381%" y="1013" width="0.0922%" height="15" fill="rgb(223,139,8)"/><text x="11.5881%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.09%)</title><rect x="11.3381%" y="997" width="0.0922%" height="15" fill="rgb(232,213,38)"/><text x="11.5881%" y="1007.50"></text></g><g><title>_rjem_sdallocx (4 samples, 0.06%)</title><rect x="11.3689%" y="981" width="0.0615%" height="15" fill="rgb(207,94,22)"/><text x="11.6189%" y="991.50"></text></g><g><title>isfree (3 samples, 0.05%)</title><rect x="11.3842%" y="965" width="0.0461%" height="15" fill="rgb(219,183,54)"/><text x="11.6342%" y="975.50"></text></g><g><title>isdalloct (2 samples, 0.03%)</title><rect x="11.3996%" y="949" width="0.0307%" height="15" fill="rgb(216,185,54)"/><text x="11.6496%" y="959.50"></text></g><g><title>arena_sdalloc (2 samples, 0.03%)</title><rect x="11.3996%" y="933" width="0.0307%" height="15" fill="rgb(254,217,39)"/><text x="11.6496%" y="943.50"></text></g><g><title>tcache_dalloc_small (2 samples, 0.03%)</title><rect x="11.3996%" y="917" width="0.0307%" height="15" fill="rgb(240,178,23)"/><text x="11.6496%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;model::rho_types::Par,model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="11.4303%" y="1061" width="0.0154%" height="15" fill="rgb(218,11,47)"/><text x="11.6803%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;model::rho_types::Par,model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (1 samples, 0.02%)</title><rect x="11.4303%" y="1045" width="0.0154%" height="15" fill="rgb(218,51,51)"/><text x="11.6803%" y="1055.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.02%)</title><rect x="11.4303%" y="1029" width="0.0154%" height="15" fill="rgb(238,126,27)"/><text x="11.6803%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="11.4303%" y="1013" width="0.0154%" height="15" fill="rgb(249,202,22)"/><text x="11.6803%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="11.4303%" y="997" width="0.0154%" height="15" fill="rgb(254,195,49)"/><text x="11.6803%" y="1007.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="11.4303%" y="981" width="0.0154%" height="15" fill="rgb(208,123,14)"/><text x="11.6803%" y="991.50"></text></g><g><title>isfree (1 samples, 0.02%)</title><rect x="11.4303%" y="965" width="0.0154%" height="15" fill="rgb(224,200,8)"/><text x="11.6803%" y="975.50"></text></g><g><title>isdalloct (1 samples, 0.02%)</title><rect x="11.4303%" y="949" width="0.0154%" height="15" fill="rgb(217,61,36)"/><text x="11.6803%" y="959.50"></text></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect x="11.4303%" y="933" width="0.0154%" height="15" fill="rgb(206,35,45)"/><text x="11.6803%" y="943.50"></text></g><g><title>sz_size2index (1 samples, 0.02%)</title><rect x="11.4303%" y="917" width="0.0154%" height="15" fill="rgb(217,65,33)"/><text x="11.6803%" y="927.50"></text></g><g><title>__rg_dealloc (1 samples, 0.02%)</title><rect x="11.4457%" y="965" width="0.0154%" height="15" fill="rgb(222,158,48)"/><text x="11.6957%" y="975.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.02%)</title><rect x="11.4457%" y="949" width="0.0154%" height="15" fill="rgb(254,2,54)"/><text x="11.6957%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (3 samples, 0.05%)</title><rect x="11.4457%" y="1061" width="0.0461%" height="15" fill="rgb(250,143,38)"/><text x="11.6957%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (3 samples, 0.05%)</title><rect x="11.4457%" y="1045" width="0.0461%" height="15" fill="rgb(248,25,0)"/><text x="11.6957%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (3 samples, 0.05%)</title><rect x="11.4457%" y="1029" width="0.0461%" height="15" fill="rgb(206,152,27)"/><text x="11.6957%" y="1039.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="11.4457%" y="1013" width="0.0461%" height="15" fill="rgb(240,77,30)"/><text x="11.6957%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.05%)</title><rect x="11.4457%" y="997" width="0.0461%" height="15" fill="rgb(231,5,3)"/><text x="11.6957%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.05%)</title><rect x="11.4457%" y="981" width="0.0461%" height="15" fill="rgb(207,226,32)"/><text x="11.6957%" y="991.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.03%)</title><rect x="11.4611%" y="965" width="0.0307%" height="15" fill="rgb(222,207,47)"/><text x="11.7111%" y="975.50"></text></g><g><title>isfree (1 samples, 0.02%)</title><rect x="11.4764%" y="949" width="0.0154%" height="15" fill="rgb(229,115,45)"/><text x="11.7264%" y="959.50"></text></g><g><title>isdalloct (1 samples, 0.02%)</title><rect x="11.4764%" y="933" width="0.0154%" height="15" fill="rgb(224,191,6)"/><text x="11.7264%" y="943.50"></text></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect x="11.4764%" y="917" width="0.0154%" height="15" fill="rgb(230,227,24)"/><text x="11.7264%" y="927.50"></text></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect x="11.4764%" y="901" width="0.0154%" height="15" fill="rgb(228,80,19)"/><text x="11.7264%" y="911.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression::{{closure}} (99 samples, 1.52%)</title><rect x="9.9862%" y="1125" width="1.5210%" height="15" fill="rgb(247,229,0)"/><text x="10.2362%" y="1135.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (99 samples, 1.52%)</title><rect x="9.9862%" y="1109" width="1.5210%" height="15" fill="rgb(237,194,15)"/><text x="10.2362%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (99 samples, 1.52%)</title><rect x="9.9862%" y="1093" width="1.5210%" height="15" fill="rgb(219,203,20)"/><text x="10.2362%" y="1103.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate::{{closure}} (99 samples, 1.52%)</title><rect x="9.9862%" y="1077" width="1.5210%" height="15" fill="rgb(234,128,8)"/><text x="10.2362%" y="1087.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_var::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S,model::rho_types::Par&gt; for model::rho_types::Var&gt;::evaluate (1 samples, 0.02%)</title><rect x="11.4918%" y="1061" width="0.0154%" height="15" fill="rgb(248,202,8)"/><text x="11.7418%" y="1071.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1 samples, 0.02%)</title><rect x="11.4918%" y="1045" width="0.0154%" height="15" fill="rgb(206,104,37)"/><text x="11.7418%" y="1055.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.02%)</title><rect x="11.4918%" y="1029" width="0.0154%" height="15" fill="rgb(223,8,27)"/><text x="11.7418%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="11.4918%" y="1013" width="0.0154%" height="15" fill="rgb(216,217,28)"/><text x="11.7418%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="11.4918%" y="997" width="0.0154%" height="15" fill="rgb(249,199,1)"/><text x="11.7418%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="11.4918%" y="981" width="0.0154%" height="15" fill="rgb(240,85,17)"/><text x="11.7418%" y="991.50"></text></g><g><title>_rjem_mallocx (1 samples, 0.02%)</title><rect x="11.4918%" y="965" width="0.0154%" height="15" fill="rgb(206,108,45)"/><text x="11.7418%" y="975.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="11.4918%" y="949" width="0.0154%" height="15" fill="rgb(245,210,41)"/><text x="11.7418%" y="959.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="11.4918%" y="933" width="0.0154%" height="15" fill="rgb(206,13,37)"/><text x="11.7418%" y="943.50"></text></g><g><title>sz_size2index (1 samples, 0.02%)</title><rect x="11.4918%" y="917" width="0.0154%" height="15" fill="rgb(250,61,18)"/><text x="11.7418%" y="927.50"></text></g><g><title>sz_size2index_lookup (1 samples, 0.02%)</title><rect x="11.4918%" y="901" width="0.0154%" height="15" fill="rgb(235,172,48)"/><text x="11.7418%" y="911.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.15%)</title><rect x="11.5225%" y="1061" width="0.1536%" height="15" fill="rgb(249,201,17)"/><text x="11.7725%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (20 samples, 0.31%)</title><rect x="11.6761%" y="1061" width="0.3073%" height="15" fill="rgb(219,208,6)"/><text x="11.9261%" y="1071.50"></text></g><g><title>core::ptr::read (20 samples, 0.31%)</title><rect x="11.6761%" y="1045" width="0.3073%" height="15" fill="rgb(248,31,23)"/><text x="11.9261%" y="1055.50"></text></g><g><title>[libc-2.31.so] (20 samples, 0.31%)</title><rect x="11.6761%" y="1029" width="0.3073%" height="15" fill="rgb(245,15,42)"/><text x="11.9261%" y="1039.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression::{{closure}} (32 samples, 0.49%)</title><rect x="11.5071%" y="1077" width="0.4916%" height="15" fill="rgb(222,217,39)"/><text x="11.7571%" y="1087.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (1 samples, 0.02%)</title><rect x="11.9834%" y="1061" width="0.0154%" height="15" fill="rgb(210,219,27)"/><text x="12.2334%" y="1071.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (1 samples, 0.02%)</title><rect x="11.9834%" y="1045" width="0.0154%" height="15" fill="rgb(252,166,36)"/><text x="12.2334%" y="1055.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="11.9834%" y="1029" width="0.0154%" height="15" fill="rgb(245,132,34)"/><text x="12.2334%" y="1039.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate::{{closure}} (134 samples, 2.06%)</title><rect x="9.9862%" y="1173" width="2.0587%" height="15" fill="rgb(236,54,3)"/><text x="10.2362%" y="1183.50">r..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (134 samples, 2.06%)</title><rect x="9.9862%" y="1157" width="2.0587%" height="15" fill="rgb(241,173,43)"/><text x="10.2362%" y="1167.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (134 samples, 2.06%)</title><rect x="9.9862%" y="1141" width="2.0587%" height="15" fill="rgb(215,190,9)"/><text x="10.2362%" y="1151.50">&lt;..</text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::eval_eplus::&lt;impl rho_runtime::interpreter::reduce::eval_expression::AsyncExprInstanceEvaluator&lt;S&gt; for model::rho_types::EPlus&gt;::evaluate::{{closure}} (35 samples, 0.54%)</title><rect x="11.5071%" y="1125" width="0.5377%" height="15" fill="rgb(242,101,16)"/><text x="11.7571%" y="1135.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (35 samples, 0.54%)</title><rect x="11.5071%" y="1109" width="0.5377%" height="15" fill="rgb(223,190,21)"/><text x="11.7571%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (35 samples, 0.54%)</title><rect x="11.5071%" y="1093" width="0.5377%" height="15" fill="rgb(215,228,25)"/><text x="11.7571%" y="1103.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.05%)</title><rect x="11.9988%" y="1077" width="0.0461%" height="15" fill="rgb(225,36,22)"/><text x="12.2488%" y="1087.50"></text></g><g><title>__rust_probestack (1 samples, 0.02%)</title><rect x="12.0449%" y="1125" width="0.0154%" height="15" fill="rgb(251,106,46)"/><text x="12.2949%" y="1135.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="12.1985%" y="1109" width="0.0154%" height="15" fill="rgb(208,90,1)"/><text x="12.4485%" y="1119.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::as_mut (1 samples, 0.02%)</title><rect x="12.1985%" y="1093" width="0.0154%" height="15" fill="rgb(243,10,4)"/><text x="12.4485%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.02%)</title><rect x="12.1985%" y="1077" width="0.0154%" height="15" fill="rgb(212,137,27)"/><text x="12.4485%" y="1087.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (1 samples, 0.02%)</title><rect x="12.2139%" y="1109" width="0.0154%" height="15" fill="rgb(231,220,49)"/><text x="12.4639%" y="1119.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.06%)</title><rect x="12.2292%" y="1109" width="0.0615%" height="15" fill="rgb(237,96,20)"/><text x="12.4792%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (6 samples, 0.09%)</title><rect x="12.2907%" y="1109" width="0.0922%" height="15" fill="rgb(239,229,30)"/><text x="12.5407%" y="1119.50"></text></g><g><title>core::ptr::read (3 samples, 0.05%)</title><rect x="12.3368%" y="1093" width="0.0461%" height="15" fill="rgb(219,65,33)"/><text x="12.5868%" y="1103.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.05%)</title><rect x="12.3368%" y="1077" width="0.0461%" height="15" fill="rgb(243,134,7)"/><text x="12.5868%" y="1087.50"></text></g><g><title>iealloc (1 samples, 0.02%)</title><rect x="12.3982%" y="933" width="0.0154%" height="15" fill="rgb(216,177,54)"/><text x="12.6482%" y="943.50"></text></g><g><title>rtree_extent_read (1 samples, 0.02%)</title><rect x="12.3982%" y="917" width="0.0154%" height="15" fill="rgb(211,160,20)"/><text x="12.6482%" y="927.50"></text></g><g><title>rtree_read (1 samples, 0.02%)</title><rect x="12.3982%" y="901" width="0.0154%" height="15" fill="rgb(239,85,39)"/><text x="12.6482%" y="911.50"></text></g><g><title>rtree_leaf_elm_lookup (1 samples, 0.02%)</title><rect x="12.3982%" y="885" width="0.0154%" height="15" fill="rgb(232,125,22)"/><text x="12.6482%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (3 samples, 0.05%)</title><rect x="12.3829%" y="1109" width="0.0461%" height="15" fill="rgb(244,57,34)"/><text x="12.6329%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (3 samples, 0.05%)</title><rect x="12.3829%" y="1093" width="0.0461%" height="15" fill="rgb(214,203,32)"/><text x="12.6329%" y="1103.50"></text></g><g><title>alloc::alloc::box_free (3 samples, 0.05%)</title><rect x="12.3829%" y="1077" width="0.0461%" height="15" fill="rgb(207,58,43)"/><text x="12.6329%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.05%)</title><rect x="12.3829%" y="1061" width="0.0461%" height="15" fill="rgb(215,193,15)"/><text x="12.6329%" y="1071.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.05%)</title><rect x="12.3829%" y="1045" width="0.0461%" height="15" fill="rgb(232,15,44)"/><text x="12.6329%" y="1055.50"></text></g><g><title>_rjem_sdallocx (3 samples, 0.05%)</title><rect x="12.3829%" y="1029" width="0.0461%" height="15" fill="rgb(212,3,48)"/><text x="12.6329%" y="1039.50"></text></g><g><title>isfree (3 samples, 0.05%)</title><rect x="12.3829%" y="1013" width="0.0461%" height="15" fill="rgb(218,128,7)"/><text x="12.6329%" y="1023.50"></text></g><g><title>isdalloct (3 samples, 0.05%)</title><rect x="12.3829%" y="997" width="0.0461%" height="15" fill="rgb(226,216,39)"/><text x="12.6329%" y="1007.50"></text></g><g><title>arena_sdalloc (3 samples, 0.05%)</title><rect x="12.3829%" y="981" width="0.0461%" height="15" fill="rgb(243,47,51)"/><text x="12.6329%" y="991.50"></text></g><g><title>tcache_dalloc_small (3 samples, 0.05%)</title><rect x="12.3829%" y="965" width="0.0461%" height="15" fill="rgb(241,183,40)"/><text x="12.6329%" y="975.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (3 samples, 0.05%)</title><rect x="12.3829%" y="949" width="0.0461%" height="15" fill="rgb(231,217,32)"/><text x="12.6329%" y="959.50"></text></g><g><title>malloc_mutex_unlock (1 samples, 0.02%)</title><rect x="12.4136%" y="933" width="0.0154%" height="15" fill="rgb(229,61,38)"/><text x="12.6636%" y="943.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="12.4136%" y="917" width="0.0154%" height="15" fill="rgb(225,210,5)"/><text x="12.6636%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Par&gt;&gt; (4 samples, 0.06%)</title><rect x="12.4289%" y="1093" width="0.0615%" height="15" fill="rgb(231,79,45)"/><text x="12.6789%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Par&gt;&gt; (4 samples, 0.06%)</title><rect x="12.4289%" y="1077" width="0.0615%" height="15" fill="rgb(224,100,7)"/><text x="12.6789%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.06%)</title><rect x="12.4289%" y="1061" width="0.0615%" height="15" fill="rgb(241,198,18)"/><text x="12.6789%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.06%)</title><rect x="12.4289%" y="1045" width="0.0615%" height="15" fill="rgb(252,97,53)"/><text x="12.6789%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.06%)</title><rect x="12.4289%" y="1029" width="0.0615%" height="15" fill="rgb(220,88,7)"/><text x="12.6789%" y="1039.50"></text></g><g><title>_rjem_sdallocx (4 samples, 0.06%)</title><rect x="12.4289%" y="1013" width="0.0615%" height="15" fill="rgb(213,176,14)"/><text x="12.6789%" y="1023.50"></text></g><g><title>isfree (4 samples, 0.06%)</title><rect x="12.4289%" y="997" width="0.0615%" height="15" fill="rgb(246,73,7)"/><text x="12.6789%" y="1007.50"></text></g><g><title>isdalloct (4 samples, 0.06%)</title><rect x="12.4289%" y="981" width="0.0615%" height="15" fill="rgb(245,64,36)"/><text x="12.6789%" y="991.50"></text></g><g><title>arena_sdalloc (4 samples, 0.06%)</title><rect x="12.4289%" y="965" width="0.0615%" height="15" fill="rgb(245,80,10)"/><text x="12.6789%" y="975.50"></text></g><g><title>tcache_dalloc_small (4 samples, 0.06%)</title><rect x="12.4289%" y="949" width="0.0615%" height="15" fill="rgb(232,107,50)"/><text x="12.6789%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Send&gt; (5 samples, 0.08%)</title><rect x="12.4289%" y="1109" width="0.0768%" height="15" fill="rgb(253,3,0)"/><text x="12.6789%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::Par&gt;&gt; (1 samples, 0.02%)</title><rect x="12.4904%" y="1093" width="0.0154%" height="15" fill="rgb(212,99,53)"/><text x="12.7404%" y="1103.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.08%)</title><rect x="12.5058%" y="1077" width="0.0768%" height="15" fill="rgb(249,111,54)"/><text x="12.7558%" y="1087.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (36 samples, 0.55%)</title><rect x="12.0449%" y="1157" width="0.5531%" height="15" fill="rgb(249,55,30)"/><text x="12.2949%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (36 samples, 0.55%)</title><rect x="12.0449%" y="1141" width="0.5531%" height="15" fill="rgb(237,47,42)"/><text x="12.2949%" y="1151.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate::{{closure}} (35 samples, 0.54%)</title><rect x="12.0602%" y="1125" width="0.5377%" height="15" fill="rgb(211,20,18)"/><text x="12.3102%" y="1135.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_send::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Send&gt;::evaluate (6 samples, 0.09%)</title><rect x="12.5058%" y="1109" width="0.0922%" height="15" fill="rgb(231,203,46)"/><text x="12.7558%" y="1119.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (6 samples, 0.09%)</title><rect x="12.5058%" y="1093" width="0.0922%" height="15" fill="rgb(237,142,3)"/><text x="12.7558%" y="1103.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.02%)</title><rect x="12.5826%" y="1077" width="0.0154%" height="15" fill="rgb(241,107,1)"/><text x="12.8326%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="12.5826%" y="1061" width="0.0154%" height="15" fill="rgb(229,83,13)"/><text x="12.8326%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="12.5826%" y="1045" width="0.0154%" height="15" fill="rgb(241,91,40)"/><text x="12.8326%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="12.5826%" y="1029" width="0.0154%" height="15" fill="rgb(225,3,45)"/><text x="12.8326%" y="1039.50"></text></g><g><title>_rjem_mallocx (1 samples, 0.02%)</title><rect x="12.5826%" y="1013" width="0.0154%" height="15" fill="rgb(244,223,14)"/><text x="12.8326%" y="1023.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="12.5826%" y="997" width="0.0154%" height="15" fill="rgb(224,124,37)"/><text x="12.8326%" y="1007.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="12.5826%" y="981" width="0.0154%" height="15" fill="rgb(251,171,30)"/><text x="12.8326%" y="991.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="12.5826%" y="965" width="0.0154%" height="15" fill="rgb(236,46,54)"/><text x="12.8326%" y="975.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="12.5826%" y="949" width="0.0154%" height="15" fill="rgb(245,213,5)"/><text x="12.8326%" y="959.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="12.5826%" y="933" width="0.0154%" height="15" fill="rgb(230,144,27)"/><text x="12.8326%" y="943.50"></text></g><g><title>tcache_alloc_large (1 samples, 0.02%)</title><rect x="12.5826%" y="917" width="0.0154%" height="15" fill="rgb(220,86,6)"/><text x="12.8326%" y="927.50"></text></g><g><title>tcache_event (1 samples, 0.02%)</title><rect x="12.5826%" y="901" width="0.0154%" height="15" fill="rgb(240,20,13)"/><text x="12.8326%" y="911.50"></text></g><g><title>_rjem_je_tcache_event_hard (1 samples, 0.02%)</title><rect x="12.5826%" y="885" width="0.0154%" height="15" fill="rgb(217,89,34)"/><text x="12.8326%" y="895.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="12.5826%" y="869" width="0.0154%" height="15" fill="rgb(229,13,5)"/><text x="12.8326%" y="879.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (1 samples, 0.02%)</title><rect x="12.5826%" y="853" width="0.0154%" height="15" fill="rgb(244,67,35)"/><text x="12.8326%" y="863.50"></text></g><g><title>arena_dalloc_bin_locked_impl (1 samples, 0.02%)</title><rect x="12.5826%" y="837" width="0.0154%" height="15" fill="rgb(221,40,2)"/><text x="12.8326%" y="847.50"></text></g><g><title>arena_dalloc_bin_slab (1 samples, 0.02%)</title><rect x="12.5826%" y="821" width="0.0154%" height="15" fill="rgb(237,157,21)"/><text x="12.8326%" y="831.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.14%)</title><rect x="12.6133%" y="1109" width="0.1383%" height="15" fill="rgb(222,94,11)"/><text x="12.8633%" y="1119.50"></text></g><g><title>core::ptr::read (8 samples, 0.12%)</title><rect x="12.6287%" y="1093" width="0.1229%" height="15" fill="rgb(249,113,6)"/><text x="12.8787%" y="1103.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.12%)</title><rect x="12.6287%" y="1077" width="0.1229%" height="15" fill="rgb(238,137,36)"/><text x="12.8787%" y="1087.50"></text></g><g><title>[libc-2.31.so] (8 samples, 0.12%)</title><rect x="12.7516%" y="1109" width="0.1229%" height="15" fill="rgb(210,102,26)"/><text x="13.0016%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (20 samples, 0.31%)</title><rect x="12.8745%" y="1109" width="0.3073%" height="15" fill="rgb(218,30,30)"/><text x="13.1245%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (20 samples, 0.31%)</title><rect x="12.8745%" y="1093" width="0.3073%" height="15" fill="rgb(214,67,26)"/><text x="13.1245%" y="1103.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (20 samples, 0.31%)</title><rect x="12.8745%" y="1077" width="0.3073%" height="15" fill="rgb(251,9,53)"/><text x="13.1245%" y="1087.50"></text></g><g><title>[libc-2.31.so] (20 samples, 0.31%)</title><rect x="12.8745%" y="1061" width="0.3073%" height="15" fill="rgb(228,204,25)"/><text x="13.1245%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.03%)</title><rect x="13.1817%" y="1109" width="0.0307%" height="15" fill="rgb(207,153,8)"/><text x="13.4317%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.03%)</title><rect x="13.1817%" y="1093" width="0.0307%" height="15" fill="rgb(242,9,16)"/><text x="13.4317%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.03%)</title><rect x="13.1817%" y="1077" width="0.0307%" height="15" fill="rgb(217,211,10)"/><text x="13.4317%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.03%)</title><rect x="13.1817%" y="1061" width="0.0307%" height="15" fill="rgb(219,228,52)"/><text x="13.4317%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.03%)</title><rect x="13.1817%" y="1045" width="0.0307%" height="15" fill="rgb(231,92,29)"/><text x="13.4317%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.03%)</title><rect x="13.1817%" y="1029" width="0.0307%" height="15" fill="rgb(232,8,23)"/><text x="13.4317%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.03%)</title><rect x="13.1817%" y="1013" width="0.0307%" height="15" fill="rgb(216,211,34)"/><text x="13.4317%" y="1023.50"></text></g><g><title>_rjem_mallocx (2 samples, 0.03%)</title><rect x="13.1817%" y="997" width="0.0307%" height="15" fill="rgb(236,151,0)"/><text x="13.4317%" y="1007.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="13.1971%" y="981" width="0.0154%" height="15" fill="rgb(209,168,3)"/><text x="13.4471%" y="991.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="13.1971%" y="965" width="0.0154%" height="15" fill="rgb(208,129,28)"/><text x="13.4471%" y="975.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="13.1971%" y="949" width="0.0154%" height="15" fill="rgb(229,78,22)"/><text x="13.4471%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;model::rho_types::Expr&gt;&gt; (3 samples, 0.05%)</title><rect x="13.2125%" y="1109" width="0.0461%" height="15" fill="rgb(228,187,13)"/><text x="13.4625%" y="1119.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="13.2125%" y="1093" width="0.0461%" height="15" fill="rgb(240,119,24)"/><text x="13.4625%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;model::rho_types::Expr,alloc::alloc::Global&gt;&gt; (3 samples, 0.05%)</title><rect x="13.2125%" y="1077" width="0.0461%" height="15" fill="rgb(209,194,42)"/><text x="13.4625%" y="1087.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="13.2125%" y="1061" width="0.0461%" height="15" fill="rgb(247,200,46)"/><text x="13.4625%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (3 samples, 0.05%)</title><rect x="13.2125%" y="1045" width="0.0461%" height="15" fill="rgb(218,76,16)"/><text x="13.4625%" y="1055.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="13.2125%" y="1029" width="0.0461%" height="15" fill="rgb(225,21,48)"/><text x="13.4625%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.05%)</title><rect x="13.2125%" y="1013" width="0.0461%" height="15" fill="rgb(239,223,50)"/><text x="13.4625%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.05%)</title><rect x="13.2125%" y="997" width="0.0461%" height="15" fill="rgb(244,45,21)"/><text x="13.4625%" y="1007.50"></text></g><g><title>_rjem_sdallocx (3 samples, 0.05%)</title><rect x="13.2125%" y="981" width="0.0461%" height="15" fill="rgb(232,33,43)"/><text x="13.4625%" y="991.50"></text></g><g><title>isfree (1 samples, 0.02%)</title><rect x="13.2432%" y="965" width="0.0154%" height="15" fill="rgb(209,8,3)"/><text x="13.4932%" y="975.50"></text></g><g><title>isdalloct (1 samples, 0.02%)</title><rect x="13.2432%" y="949" width="0.0154%" height="15" fill="rgb(214,25,53)"/><text x="13.4932%" y="959.50"></text></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect x="13.2432%" y="933" width="0.0154%" height="15" fill="rgb(254,186,54)"/><text x="13.4932%" y="943.50"></text></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect x="13.2432%" y="917" width="0.0154%" height="15" fill="rgb(208,174,49)"/><text x="13.4932%" y="927.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.05%)</title><rect x="13.2586%" y="1093" width="0.0461%" height="15" fill="rgb(233,191,51)"/><text x="13.5086%" y="1103.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_match::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Match&gt;::evaluate::{{closure}} (87 samples, 1.34%)</title><rect x="12.0449%" y="1173" width="1.3366%" height="15" fill="rgb(222,134,10)"/><text x="12.2949%" y="1183.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute (51 samples, 0.78%)</title><rect x="12.5979%" y="1157" width="0.7835%" height="15" fill="rgb(230,226,20)"/><text x="12.8479%" y="1167.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute_no_sort (51 samples, 0.78%)</title><rect x="12.5979%" y="1141" width="0.7835%" height="15" fill="rgb(251,111,25)"/><text x="12.8479%" y="1151.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::substitute_expressions_in_par (51 samples, 0.78%)</title><rect x="12.5979%" y="1125" width="0.7835%" height="15" fill="rgb(224,40,46)"/><text x="12.8479%" y="1135.50"></text></g><g><title>model::rho_types::Par::append_expr (8 samples, 0.12%)</title><rect x="13.2586%" y="1109" width="0.1229%" height="15" fill="rgb(236,108,47)"/><text x="13.5086%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.08%)</title><rect x="13.3047%" y="1093" width="0.0768%" height="15" fill="rgb(234,93,0)"/><text x="13.5547%" y="1103.50"></text></g><g><title>core::ptr::write (4 samples, 0.06%)</title><rect x="13.3200%" y="1077" width="0.0615%" height="15" fill="rgb(224,213,32)"/><text x="13.5700%" y="1087.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.06%)</title><rect x="13.3200%" y="1061" width="0.0615%" height="15" fill="rgb(251,11,48)"/><text x="13.5700%" y="1071.50"></text></g><g><title>[libc-2.31.so] (25 samples, 0.38%)</title><rect x="13.7963%" y="1077" width="0.3841%" height="15" fill="rgb(236,173,5)"/><text x="14.0463%" y="1087.50"></text></g><g><title>tcache_alloc_large (1 samples, 0.02%)</title><rect x="14.1804%" y="917" width="0.0154%" height="15" fill="rgb(230,95,12)"/><text x="14.4304%" y="927.50"></text></g><g><title>tcache_event (1 samples, 0.02%)</title><rect x="14.1804%" y="901" width="0.0154%" height="15" fill="rgb(232,209,1)"/><text x="14.4304%" y="911.50"></text></g><g><title>ticker_tick (1 samples, 0.02%)</title><rect x="14.1804%" y="885" width="0.0154%" height="15" fill="rgb(232,6,1)"/><text x="14.4304%" y="895.50"></text></g><g><title>ticker_tick (1 samples, 0.02%)</title><rect x="14.1804%" y="869" width="0.0154%" height="15" fill="rgb(210,224,50)"/><text x="14.4304%" y="879.50"></text></g><g><title>ticker_ticks (1 samples, 0.02%)</title><rect x="14.1804%" y="853" width="0.0154%" height="15" fill="rgb(228,127,35)"/><text x="14.4304%" y="863.50"></text></g><g><title>ticker_fixup (1 samples, 0.02%)</title><rect x="14.1804%" y="837" width="0.0154%" height="15" fill="rgb(245,102,45)"/><text x="14.4304%" y="847.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_nested_expressions (28 samples, 0.43%)</title><rect x="13.7963%" y="1109" width="0.4302%" height="15" fill="rgb(214,1,49)"/><text x="14.0463%" y="1119.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (28 samples, 0.43%)</title><rect x="13.7963%" y="1093" width="0.4302%" height="15" fill="rgb(226,163,40)"/><text x="14.0463%" y="1103.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.05%)</title><rect x="14.1804%" y="1077" width="0.0461%" height="15" fill="rgb(239,212,28)"/><text x="14.4304%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.05%)</title><rect x="14.1804%" y="1061" width="0.0461%" height="15" fill="rgb(220,20,13)"/><text x="14.4304%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.05%)</title><rect x="14.1804%" y="1045" width="0.0461%" height="15" fill="rgb(210,164,35)"/><text x="14.4304%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.05%)</title><rect x="14.1804%" y="1029" width="0.0461%" height="15" fill="rgb(248,109,41)"/><text x="14.4304%" y="1039.50"></text></g><g><title>_rjem_mallocx (3 samples, 0.05%)</title><rect x="14.1804%" y="1013" width="0.0461%" height="15" fill="rgb(238,23,50)"/><text x="14.4304%" y="1023.50"></text></g><g><title>imalloc (3 samples, 0.05%)</title><rect x="14.1804%" y="997" width="0.0461%" height="15" fill="rgb(211,48,49)"/><text x="14.4304%" y="1007.50"></text></g><g><title>imalloc_body (3 samples, 0.05%)</title><rect x="14.1804%" y="981" width="0.0461%" height="15" fill="rgb(223,36,21)"/><text x="14.4304%" y="991.50"></text></g><g><title>imalloc_no_sample (3 samples, 0.05%)</title><rect x="14.1804%" y="965" width="0.0461%" height="15" fill="rgb(207,123,46)"/><text x="14.4304%" y="975.50"></text></g><g><title>iallocztm (3 samples, 0.05%)</title><rect x="14.1804%" y="949" width="0.0461%" height="15" fill="rgb(240,218,32)"/><text x="14.4304%" y="959.50"></text></g><g><title>arena_malloc (3 samples, 0.05%)</title><rect x="14.1804%" y="933" width="0.0461%" height="15" fill="rgb(252,5,43)"/><text x="14.4304%" y="943.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.03%)</title><rect x="14.1957%" y="917" width="0.0307%" height="15" fill="rgb(252,84,19)"/><text x="14.4457%" y="927.50"></text></g><g><title>cache_bin_alloc_easy (2 samples, 0.03%)</title><rect x="14.1957%" y="901" width="0.0307%" height="15" fill="rgb(243,152,39)"/><text x="14.4457%" y="911.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.08%)</title><rect x="14.2265%" y="1109" width="0.0768%" height="15" fill="rgb(234,160,15)"/><text x="14.4765%" y="1119.50"></text></g><g><title>isfree (1 samples, 0.02%)</title><rect x="14.3186%" y="1093" width="0.0154%" height="15" fill="rgb(237,34,20)"/><text x="14.5686%" y="1103.50"></text></g><g><title>isdalloct (1 samples, 0.02%)</title><rect x="14.3186%" y="1077" width="0.0154%" height="15" fill="rgb(229,97,13)"/><text x="14.5686%" y="1087.50"></text></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect x="14.3186%" y="1061" width="0.0154%" height="15" fill="rgb(234,71,50)"/><text x="14.5686%" y="1071.50"></text></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect x="14.3186%" y="1045" width="0.0154%" height="15" fill="rgb(253,155,4)"/><text x="14.5686%" y="1055.50"></text></g><g><title>_rjem_sdallocx (3 samples, 0.05%)</title><rect x="14.3033%" y="1109" width="0.0461%" height="15" fill="rgb(222,185,37)"/><text x="14.5533%" y="1119.50"></text></g><g><title>tsd_tcachep_get (1 samples, 0.02%)</title><rect x="14.3340%" y="1093" width="0.0154%" height="15" fill="rgb(251,177,13)"/><text x="14.5840%" y="1103.50"></text></g><g><title>tsd_tcachep_get_unsafe (1 samples, 0.02%)</title><rect x="14.3340%" y="1077" width="0.0154%" height="15" fill="rgb(250,179,40)"/><text x="14.5840%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (4 samples, 0.06%)</title><rect x="14.3494%" y="1109" width="0.0615%" height="15" fill="rgb(242,44,2)"/><text x="14.5994%" y="1119.50"></text></g><g><title>core::mem::take (4 samples, 0.06%)</title><rect x="14.3494%" y="1093" width="0.0615%" height="15" fill="rgb(216,177,13)"/><text x="14.5994%" y="1103.50"></text></g><g><title>core::mem::replace (4 samples, 0.06%)</title><rect x="14.3494%" y="1077" width="0.0615%" height="15" fill="rgb(216,106,43)"/><text x="14.5994%" y="1087.50"></text></g><g><title>core::mem::swap (3 samples, 0.05%)</title><rect x="14.3647%" y="1061" width="0.0461%" height="15" fill="rgb(216,183,2)"/><text x="14.6147%" y="1071.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (3 samples, 0.05%)</title><rect x="14.3647%" y="1045" width="0.0461%" height="15" fill="rgb(249,75,3)"/><text x="14.6147%" y="1055.50"></text></g><g><title>core::ptr::swap_nonoverlapping (3 samples, 0.05%)</title><rect x="14.3647%" y="1029" width="0.0461%" height="15" fill="rgb(219,67,39)"/><text x="14.6147%" y="1039.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (3 samples, 0.05%)</title><rect x="14.3647%" y="1013" width="0.0461%" height="15" fill="rgb(253,228,2)"/><text x="14.6147%" y="1023.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.05%)</title><rect x="14.3647%" y="997" width="0.0461%" height="15" fill="rgb(235,138,27)"/><text x="14.6147%" y="1007.50"></text></g><g><title>__rg_dealloc (1 samples, 0.02%)</title><rect x="14.4262%" y="1029" width="0.0154%" height="15" fill="rgb(236,97,51)"/><text x="14.6762%" y="1039.50"></text></g><g><title>__rust_dealloc (1 samples, 0.02%)</title><rect x="14.4415%" y="1029" width="0.0154%" height="15" fill="rgb(240,80,30)"/><text x="14.6915%" y="1039.50"></text></g><g><title>isfree (2 samples, 0.03%)</title><rect x="14.4569%" y="1013" width="0.0307%" height="15" fill="rgb(230,178,19)"/><text x="14.7069%" y="1023.50"></text></g><g><title>isdalloct (2 samples, 0.03%)</title><rect x="14.4569%" y="997" width="0.0307%" height="15" fill="rgb(210,190,27)"/><text x="14.7069%" y="1007.50"></text></g><g><title>arena_sdalloc (2 samples, 0.03%)</title><rect x="14.4569%" y="981" width="0.0307%" height="15" fill="rgb(222,107,31)"/><text x="14.7069%" y="991.50"></text></g><g><title>tcache_dalloc_small (2 samples, 0.03%)</title><rect x="14.4569%" y="965" width="0.0307%" height="15" fill="rgb(216,127,34)"/><text x="14.7069%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (6 samples, 0.09%)</title><rect x="14.4108%" y="1109" width="0.0922%" height="15" fill="rgb(234,116,52)"/><text x="14.6608%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (6 samples, 0.09%)</title><rect x="14.4108%" y="1093" width="0.0922%" height="15" fill="rgb(222,124,15)"/><text x="14.6608%" y="1103.50"></text></g><g><title>alloc::alloc::box_free (6 samples, 0.09%)</title><rect x="14.4108%" y="1077" width="0.0922%" height="15" fill="rgb(231,179,28)"/><text x="14.6608%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.08%)</title><rect x="14.4262%" y="1061" width="0.0768%" height="15" fill="rgb(226,93,45)"/><text x="14.6762%" y="1071.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.08%)</title><rect x="14.4262%" y="1045" width="0.0768%" height="15" fill="rgb(215,8,51)"/><text x="14.6762%" y="1055.50"></text></g><g><title>_rjem_sdallocx (3 samples, 0.05%)</title><rect x="14.4569%" y="1029" width="0.0461%" height="15" fill="rgb(223,106,5)"/><text x="14.7069%" y="1039.50"></text></g><g><title>tsd_fetch (1 samples, 0.02%)</title><rect x="14.4876%" y="1013" width="0.0154%" height="15" fill="rgb(250,191,5)"/><text x="14.7376%" y="1023.50"></text></g><g><title>tsd_fetch_impl (1 samples, 0.02%)</title><rect x="14.4876%" y="997" width="0.0154%" height="15" fill="rgb(242,132,44)"/><text x="14.7376%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Match&gt;&gt; (2 samples, 0.03%)</title><rect x="14.5030%" y="1093" width="0.0307%" height="15" fill="rgb(251,152,29)"/><text x="14.7530%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="14.5030%" y="1077" width="0.0307%" height="15" fill="rgb(218,179,5)"/><text x="14.7530%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Match]&gt; (2 samples, 0.03%)</title><rect x="14.5030%" y="1061" width="0.0307%" height="15" fill="rgb(227,67,19)"/><text x="14.7530%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Receive&gt;&gt; (1 samples, 0.02%)</title><rect x="14.5337%" y="1093" width="0.0154%" height="15" fill="rgb(233,119,31)"/><text x="14.7837%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="14.5337%" y="1077" width="0.0154%" height="15" fill="rgb(241,120,22)"/><text x="14.7837%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Receive]&gt; (1 samples, 0.02%)</title><rect x="14.5337%" y="1061" width="0.0154%" height="15" fill="rgb(224,102,30)"/><text x="14.7837%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (4 samples, 0.06%)</title><rect x="14.5030%" y="1109" width="0.0615%" height="15" fill="rgb(210,164,37)"/><text x="14.7530%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Send&gt;&gt; (1 samples, 0.02%)</title><rect x="14.5491%" y="1093" width="0.0154%" height="15" fill="rgb(226,191,16)"/><text x="14.7991%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Send&gt;&gt; (1 samples, 0.02%)</title><rect x="14.5491%" y="1077" width="0.0154%" height="15" fill="rgb(214,40,45)"/><text x="14.7991%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="14.5491%" y="1061" width="0.0154%" height="15" fill="rgb(244,29,26)"/><text x="14.7991%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="14.5491%" y="1045" width="0.0154%" height="15" fill="rgb(216,16,5)"/><text x="14.7991%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="14.5491%" y="1029" width="0.0154%" height="15" fill="rgb(249,76,35)"/><text x="14.7991%" y="1039.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="14.5491%" y="1013" width="0.0154%" height="15" fill="rgb(207,11,44)"/><text x="14.7991%" y="1023.50"></text></g><g><title>isfree (1 samples, 0.02%)</title><rect x="14.5491%" y="997" width="0.0154%" height="15" fill="rgb(228,190,49)"/><text x="14.7991%" y="1007.50"></text></g><g><title>isdalloct (1 samples, 0.02%)</title><rect x="14.5491%" y="981" width="0.0154%" height="15" fill="rgb(214,173,12)"/><text x="14.7991%" y="991.50"></text></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect x="14.5491%" y="965" width="0.0154%" height="15" fill="rgb(218,26,35)"/><text x="14.7991%" y="975.50"></text></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect x="14.5491%" y="949" width="0.0154%" height="15" fill="rgb(220,200,19)"/><text x="14.7991%" y="959.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="14.5644%" y="1077" width="0.0307%" height="15" fill="rgb(239,95,49)"/><text x="14.8144%" y="1087.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate (3 samples, 0.05%)</title><rect x="14.5644%" y="1109" width="0.0461%" height="15" fill="rgb(235,85,53)"/><text x="14.8144%" y="1119.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (3 samples, 0.05%)</title><rect x="14.5644%" y="1093" width="0.0461%" height="15" fill="rgb(233,133,31)"/><text x="14.8144%" y="1103.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.02%)</title><rect x="14.5952%" y="1077" width="0.0154%" height="15" fill="rgb(218,25,20)"/><text x="14.8452%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="14.5952%" y="1061" width="0.0154%" height="15" fill="rgb(252,210,38)"/><text x="14.8452%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="14.5952%" y="1045" width="0.0154%" height="15" fill="rgb(242,134,21)"/><text x="14.8452%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="14.5952%" y="1029" width="0.0154%" height="15" fill="rgb(213,28,48)"/><text x="14.8452%" y="1039.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="14.5952%" y="1013" width="0.0154%" height="15" fill="rgb(250,196,2)"/><text x="14.8452%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.02%)</title><rect x="14.6105%" y="1077" width="0.0154%" height="15" fill="rgb(227,5,17)"/><text x="14.8605%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.02%)</title><rect x="14.6105%" y="1061" width="0.0154%" height="15" fill="rgb(221,226,24)"/><text x="14.8605%" y="1071.50"></text></g><g><title>model::ordering::sort_par::&lt;impl model::ordering::Sortable for model::rho_types::Par&gt;::sort (2 samples, 0.03%)</title><rect x="14.6105%" y="1093" width="0.0307%" height="15" fill="rgb(211,5,48)"/><text x="14.8605%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by (1 samples, 0.02%)</title><rect x="14.6259%" y="1077" width="0.0154%" height="15" fill="rgb(219,150,6)"/><text x="14.8759%" y="1087.50"></text></g><g><title>alloc::slice::merge_sort (1 samples, 0.02%)</title><rect x="14.6259%" y="1061" width="0.0154%" height="15" fill="rgb(251,46,16)"/><text x="14.8759%" y="1071.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_match::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Match&gt;::evaluate::{{closure}} (86 samples, 1.32%)</title><rect x="13.3815%" y="1125" width="1.3212%" height="15" fill="rgb(220,204,40)"/><text x="13.6315%" y="1135.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute (6 samples, 0.09%)</title><rect x="14.6105%" y="1109" width="0.0922%" height="15" fill="rgb(211,85,2)"/><text x="14.8605%" y="1119.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute_no_sort (4 samples, 0.06%)</title><rect x="14.6413%" y="1093" width="0.0615%" height="15" fill="rgb(229,17,7)"/><text x="14.8913%" y="1103.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="14.6720%" y="1077" width="0.0307%" height="15" fill="rgb(239,72,28)"/><text x="14.9220%" y="1087.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="14.9024%" y="1077" width="0.0154%" height="15" fill="rgb(230,47,54)"/><text x="15.1524%" y="1087.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::as_mut (1 samples, 0.02%)</title><rect x="14.9024%" y="1061" width="0.0154%" height="15" fill="rgb(214,50,8)"/><text x="15.1524%" y="1071.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.02%)</title><rect x="14.9024%" y="1045" width="0.0154%" height="15" fill="rgb(216,198,43)"/><text x="15.1524%" y="1055.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="14.9178%" y="1061" width="0.0154%" height="15" fill="rgb(234,20,35)"/><text x="15.1678%" y="1071.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.05%)</title><rect x="14.9332%" y="1045" width="0.0461%" height="15" fill="rgb(254,45,19)"/><text x="15.1832%" y="1055.50"></text></g><g><title>&lt;rho_runtime::storage::coordinator::AsyncStore as rho_runtime::storage::Storage&gt;::produce (5 samples, 0.08%)</title><rect x="14.9178%" y="1077" width="0.0768%" height="15" fill="rgb(219,14,44)"/><text x="15.1678%" y="1087.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (4 samples, 0.06%)</title><rect x="14.9332%" y="1061" width="0.0615%" height="15" fill="rgb(217,220,26)"/><text x="15.1832%" y="1071.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.02%)</title><rect x="14.9793%" y="1045" width="0.0154%" height="15" fill="rgb(213,158,28)"/><text x="15.2293%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="14.9793%" y="1029" width="0.0154%" height="15" fill="rgb(252,51,52)"/><text x="15.2293%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="14.9793%" y="1013" width="0.0154%" height="15" fill="rgb(246,89,16)"/><text x="15.2293%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="14.9793%" y="997" width="0.0154%" height="15" fill="rgb(216,158,49)"/><text x="15.2293%" y="1007.50"></text></g><g><title>_rjem_mallocx (1 samples, 0.02%)</title><rect x="14.9793%" y="981" width="0.0154%" height="15" fill="rgb(236,107,19)"/><text x="15.2293%" y="991.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="14.9793%" y="965" width="0.0154%" height="15" fill="rgb(228,185,30)"/><text x="15.2293%" y="975.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="14.9793%" y="949" width="0.0154%" height="15" fill="rgb(246,134,8)"/><text x="15.2293%" y="959.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="14.9793%" y="933" width="0.0154%" height="15" fill="rgb(214,143,50)"/><text x="15.2293%" y="943.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="14.9793%" y="917" width="0.0154%" height="15" fill="rgb(228,75,8)"/><text x="15.2293%" y="927.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="14.9793%" y="901" width="0.0154%" height="15" fill="rgb(207,175,4)"/><text x="15.2293%" y="911.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="14.9793%" y="885" width="0.0154%" height="15" fill="rgb(205,108,24)"/><text x="15.2293%" y="895.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.09%)</title><rect x="14.9946%" y="1077" width="0.0922%" height="15" fill="rgb(244,120,49)"/><text x="15.2446%" y="1087.50"></text></g><g><title>sz_size2index (1 samples, 0.02%)</title><rect x="15.0868%" y="933" width="0.0154%" height="15" fill="rgb(223,47,38)"/><text x="15.3368%" y="943.50"></text></g><g><title>sz_size2index_lookup (1 samples, 0.02%)</title><rect x="15.0868%" y="917" width="0.0154%" height="15" fill="rgb(229,179,11)"/><text x="15.3368%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (20 samples, 0.31%)</title><rect x="14.8256%" y="1109" width="0.3073%" height="15" fill="rgb(231,122,1)"/><text x="15.0756%" y="1119.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::produce::{{closure}} (20 samples, 0.31%)</title><rect x="14.8256%" y="1093" width="0.3073%" height="15" fill="rgb(245,119,9)"/><text x="15.0756%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;+core::marker::Send&gt;&gt;&gt; (3 samples, 0.05%)</title><rect x="15.0868%" y="1077" width="0.0461%" height="15" fill="rgb(241,163,25)"/><text x="15.3368%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;+core::marker::Send&gt;&gt; (3 samples, 0.05%)</title><rect x="15.0868%" y="1061" width="0.0461%" height="15" fill="rgb(217,214,3)"/><text x="15.3368%" y="1071.50"></text></g><g><title>alloc::alloc::box_free (3 samples, 0.05%)</title><rect x="15.0868%" y="1045" width="0.0461%" height="15" fill="rgb(240,86,28)"/><text x="15.3368%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.05%)</title><rect x="15.0868%" y="1029" width="0.0461%" height="15" fill="rgb(215,47,9)"/><text x="15.3368%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.05%)</title><rect x="15.0868%" y="1013" width="0.0461%" height="15" fill="rgb(252,25,45)"/><text x="15.3368%" y="1023.50"></text></g><g><title>_rjem_sdallocx (3 samples, 0.05%)</title><rect x="15.0868%" y="997" width="0.0461%" height="15" fill="rgb(251,164,9)"/><text x="15.3368%" y="1007.50"></text></g><g><title>isfree (3 samples, 0.05%)</title><rect x="15.0868%" y="981" width="0.0461%" height="15" fill="rgb(233,194,0)"/><text x="15.3368%" y="991.50"></text></g><g><title>isdalloct (3 samples, 0.05%)</title><rect x="15.0868%" y="965" width="0.0461%" height="15" fill="rgb(249,111,24)"/><text x="15.3368%" y="975.50"></text></g><g><title>arena_sdalloc (3 samples, 0.05%)</title><rect x="15.0868%" y="949" width="0.0461%" height="15" fill="rgb(250,223,3)"/><text x="15.3368%" y="959.50"></text></g><g><title>tcache_dalloc_small (2 samples, 0.03%)</title><rect x="15.1022%" y="933" width="0.0307%" height="15" fill="rgb(236,178,37)"/><text x="15.3522%" y="943.50"></text></g><g><title>[libc-2.31.so] (20 samples, 0.31%)</title><rect x="15.1329%" y="1077" width="0.3073%" height="15" fill="rgb(241,158,50)"/><text x="15.3829%" y="1087.50"></text></g><g><title>sz_index2size (1 samples, 0.02%)</title><rect x="15.4555%" y="965" width="0.0154%" height="15" fill="rgb(213,121,41)"/><text x="15.7055%" y="975.50"></text></g><g><title>sz_index2size_lookup (1 samples, 0.02%)</title><rect x="15.4555%" y="949" width="0.0154%" height="15" fill="rgb(240,92,3)"/><text x="15.7055%" y="959.50"></text></g><g><title>imalloc_body (3 samples, 0.05%)</title><rect x="15.4555%" y="981" width="0.0461%" height="15" fill="rgb(205,123,3)"/><text x="15.7055%" y="991.50"></text></g><g><title>sz_size2index (2 samples, 0.03%)</title><rect x="15.4709%" y="965" width="0.0307%" height="15" fill="rgb(205,97,47)"/><text x="15.7209%" y="975.50"></text></g><g><title>sz_size2index_compute (2 samples, 0.03%)</title><rect x="15.4709%" y="949" width="0.0307%" height="15" fill="rgb(247,152,14)"/><text x="15.7209%" y="959.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;S&gt;&gt;::evaluate_nested_expressions (25 samples, 0.38%)</title><rect x="15.1329%" y="1109" width="0.3841%" height="15" fill="rgb(248,195,53)"/><text x="15.3829%" y="1119.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (25 samples, 0.38%)</title><rect x="15.1329%" y="1093" width="0.3841%" height="15" fill="rgb(226,201,16)"/><text x="15.3829%" y="1103.50"></text></g><g><title>alloc::alloc::exchange_malloc (5 samples, 0.08%)</title><rect x="15.4402%" y="1077" width="0.0768%" height="15" fill="rgb(205,98,0)"/><text x="15.6902%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.08%)</title><rect x="15.4402%" y="1061" width="0.0768%" height="15" fill="rgb(214,191,48)"/><text x="15.6902%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.08%)</title><rect x="15.4402%" y="1045" width="0.0768%" height="15" fill="rgb(237,112,39)"/><text x="15.6902%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.08%)</title><rect x="15.4402%" y="1029" width="0.0768%" height="15" fill="rgb(247,203,27)"/><text x="15.6902%" y="1039.50"></text></g><g><title>_rjem_mallocx (5 samples, 0.08%)</title><rect x="15.4402%" y="1013" width="0.0768%" height="15" fill="rgb(235,124,28)"/><text x="15.6902%" y="1023.50"></text></g><g><title>imalloc (4 samples, 0.06%)</title><rect x="15.4555%" y="997" width="0.0615%" height="15" fill="rgb(208,207,46)"/><text x="15.7055%" y="1007.50"></text></g><g><title>tsd_fetch (1 samples, 0.02%)</title><rect x="15.5016%" y="981" width="0.0154%" height="15" fill="rgb(234,176,4)"/><text x="15.7516%" y="991.50"></text></g><g><title>tsd_fetch_impl (1 samples, 0.02%)</title><rect x="15.5016%" y="965" width="0.0154%" height="15" fill="rgb(230,133,28)"/><text x="15.7516%" y="975.50"></text></g><g><title>[libc-2.31.so] (12 samples, 0.18%)</title><rect x="15.5170%" y="1109" width="0.1844%" height="15" fill="rgb(211,137,40)"/><text x="15.7670%" y="1119.50"></text></g><g><title>tcache_alloc_large (1 samples, 0.02%)</title><rect x="15.7321%" y="901" width="0.0154%" height="15" fill="rgb(254,35,13)"/><text x="15.9821%" y="911.50"></text></g><g><title>tcache_event (1 samples, 0.02%)</title><rect x="15.7321%" y="885" width="0.0154%" height="15" fill="rgb(225,49,51)"/><text x="15.9821%" y="895.50"></text></g><g><title>_rjem_je_tcache_event_hard (1 samples, 0.02%)</title><rect x="15.7321%" y="869" width="0.0154%" height="15" fill="rgb(251,10,15)"/><text x="15.9821%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.06%)</title><rect x="15.7013%" y="1029" width="0.0615%" height="15" fill="rgb(228,207,15)"/><text x="15.9513%" y="1039.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.06%)</title><rect x="15.7013%" y="1013" width="0.0615%" height="15" fill="rgb(241,99,19)"/><text x="15.9513%" y="1023.50"></text></g><g><title>_rjem_mallocx (3 samples, 0.05%)</title><rect x="15.7167%" y="997" width="0.0461%" height="15" fill="rgb(207,104,49)"/><text x="15.9667%" y="1007.50"></text></g><g><title>imalloc (3 samples, 0.05%)</title><rect x="15.7167%" y="981" width="0.0461%" height="15" fill="rgb(234,99,18)"/><text x="15.9667%" y="991.50"></text></g><g><title>imalloc_body (3 samples, 0.05%)</title><rect x="15.7167%" y="965" width="0.0461%" height="15" fill="rgb(213,191,49)"/><text x="15.9667%" y="975.50"></text></g><g><title>imalloc_no_sample (2 samples, 0.03%)</title><rect x="15.7321%" y="949" width="0.0307%" height="15" fill="rgb(210,226,19)"/><text x="15.9821%" y="959.50"></text></g><g><title>iallocztm (2 samples, 0.03%)</title><rect x="15.7321%" y="933" width="0.0307%" height="15" fill="rgb(229,97,18)"/><text x="15.9821%" y="943.50"></text></g><g><title>arena_malloc (2 samples, 0.03%)</title><rect x="15.7321%" y="917" width="0.0307%" height="15" fill="rgb(211,167,15)"/><text x="15.9821%" y="927.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="15.7474%" y="901" width="0.0154%" height="15" fill="rgb(210,169,34)"/><text x="15.9974%" y="911.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect x="15.7474%" y="885" width="0.0154%" height="15" fill="rgb(241,121,31)"/><text x="15.9974%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (5 samples, 0.08%)</title><rect x="15.7013%" y="1109" width="0.0768%" height="15" fill="rgb(232,40,11)"/><text x="15.9513%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (5 samples, 0.08%)</title><rect x="15.7013%" y="1093" width="0.0768%" height="15" fill="rgb(205,86,26)"/><text x="15.9513%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.08%)</title><rect x="15.7013%" y="1077" width="0.0768%" height="15" fill="rgb(231,126,28)"/><text x="15.9513%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.08%)</title><rect x="15.7013%" y="1061" width="0.0768%" height="15" fill="rgb(219,221,18)"/><text x="15.9513%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (5 samples, 0.08%)</title><rect x="15.7013%" y="1045" width="0.0768%" height="15" fill="rgb(211,40,0)"/><text x="15.9513%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.02%)</title><rect x="15.7628%" y="1029" width="0.0154%" height="15" fill="rgb(239,85,43)"/><text x="16.0128%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.02%)</title><rect x="15.7782%" y="1109" width="0.0154%" height="15" fill="rgb(231,55,21)"/><text x="16.0282%" y="1119.50"></text></g><g><title>core::mem::take (1 samples, 0.02%)</title><rect x="15.7782%" y="1093" width="0.0154%" height="15" fill="rgb(225,184,43)"/><text x="16.0282%" y="1103.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="15.7782%" y="1077" width="0.0154%" height="15" fill="rgb(251,158,41)"/><text x="16.0282%" y="1087.50"></text></g><g><title>inallocx (1 samples, 0.02%)</title><rect x="15.7935%" y="1013" width="0.0154%" height="15" fill="rgb(234,159,37)"/><text x="16.0435%" y="1023.50"></text></g><g><title>sz_s2u (1 samples, 0.02%)</title><rect x="15.7935%" y="997" width="0.0154%" height="15" fill="rgb(216,204,22)"/><text x="16.0435%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (3 samples, 0.05%)</title><rect x="15.7935%" y="1109" width="0.0461%" height="15" fill="rgb(214,17,3)"/><text x="16.0435%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (3 samples, 0.05%)</title><rect x="15.7935%" y="1093" width="0.0461%" height="15" fill="rgb(212,111,17)"/><text x="16.0435%" y="1103.50"></text></g><g><title>alloc::alloc::box_free (3 samples, 0.05%)</title><rect x="15.7935%" y="1077" width="0.0461%" height="15" fill="rgb(221,157,24)"/><text x="16.0435%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.05%)</title><rect x="15.7935%" y="1061" width="0.0461%" height="15" fill="rgb(252,16,13)"/><text x="16.0435%" y="1071.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.05%)</title><rect x="15.7935%" y="1045" width="0.0461%" height="15" fill="rgb(221,62,2)"/><text x="16.0435%" y="1055.50"></text></g><g><title>_rjem_sdallocx (3 samples, 0.05%)</title><rect x="15.7935%" y="1029" width="0.0461%" height="15" fill="rgb(247,87,22)"/><text x="16.0435%" y="1039.50"></text></g><g><title>tsd_fetch (2 samples, 0.03%)</title><rect x="15.8089%" y="1013" width="0.0307%" height="15" fill="rgb(215,73,9)"/><text x="16.0589%" y="1023.50"></text></g><g><title>tsd_fetch_impl (2 samples, 0.03%)</title><rect x="15.8089%" y="997" width="0.0307%" height="15" fill="rgb(207,175,33)"/><text x="16.0589%" y="1007.50"></text></g><g><title>model::rho_types::Par::single_bundle (2 samples, 0.03%)</title><rect x="15.8396%" y="1109" width="0.0307%" height="15" fill="rgb(243,129,54)"/><text x="16.0896%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (2 samples, 0.03%)</title><rect x="15.8396%" y="1093" width="0.0307%" height="15" fill="rgb(227,119,45)"/><text x="16.0896%" y="1103.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (1 samples, 0.02%)</title><rect x="15.8703%" y="1093" width="0.0154%" height="15" fill="rgb(205,109,36)"/><text x="16.1203%" y="1103.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate::{{closure}} (164 samples, 2.52%)</title><rect x="13.3815%" y="1173" width="2.5196%" height="15" fill="rgb(205,6,39)"/><text x="13.6315%" y="1183.50">rh..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (164 samples, 2.52%)</title><rect x="13.3815%" y="1157" width="2.5196%" height="15" fill="rgb(221,32,16)"/><text x="13.6315%" y="1167.50">&lt;c..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (164 samples, 2.52%)</title><rect x="13.3815%" y="1141" width="2.5196%" height="15" fill="rgb(228,144,50)"/><text x="13.6315%" y="1151.50">&lt;c..</text></g><g><title>rho_runtime::interpreter::reduce::eval_send::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Send&gt;::evaluate::{{closure}} (78 samples, 1.20%)</title><rect x="14.7027%" y="1125" width="1.1983%" height="15" fill="rgb(229,201,53)"/><text x="14.9527%" y="1135.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute (2 samples, 0.03%)</title><rect x="15.8703%" y="1109" width="0.0307%" height="15" fill="rgb(249,153,27)"/><text x="16.1203%" y="1119.50"></text></g><g><title>model::ordering::sort_par::&lt;impl model::ordering::Sortable for model::rho_types::Par&gt;::sort (1 samples, 0.02%)</title><rect x="15.8857%" y="1093" width="0.0154%" height="15" fill="rgb(227,106,25)"/><text x="16.1357%" y="1103.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::news_score (4 samples, 0.06%)</title><rect x="16.0701%" y="1013" width="0.0615%" height="15" fill="rgb(230,65,29)"/><text x="16.3201%" y="1023.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::matches_score (2 samples, 0.03%)</title><rect x="16.1008%" y="997" width="0.0307%" height="15" fill="rgb(221,57,46)"/><text x="16.3508%" y="1007.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::bundles_score (2 samples, 0.03%)</title><rect x="16.1008%" y="981" width="0.0307%" height="15" fill="rgb(229,161,17)"/><text x="16.3508%" y="991.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::connectives_score (2 samples, 0.03%)</title><rect x="16.1008%" y="965" width="0.0307%" height="15" fill="rgb(222,213,11)"/><text x="16.3508%" y="975.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::unforgeables_score (2 samples, 0.03%)</title><rect x="16.1008%" y="949" width="0.0307%" height="15" fill="rgb(235,35,13)"/><text x="16.3508%" y="959.50"></text></g><g><title>model::ordering::sort_unforgeable::&lt;impl model::ordering::Scorable for &amp;model::rho_types::GUnforgeable&gt;::score_tree_iter (2 samples, 0.03%)</title><rect x="16.1008%" y="933" width="0.0307%" height="15" fill="rgb(233,158,34)"/><text x="16.3508%" y="943.50"></text></g><g><title>&lt;model::ordering::ScoreTreeIter as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.11%)</title><rect x="16.0393%" y="1045" width="0.1075%" height="15" fill="rgb(215,151,48)"/><text x="16.2893%" y="1055.50"></text></g><g><title>&lt;model::ordering::sort_par::ParScoreTreeIter as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.08%)</title><rect x="16.0701%" y="1029" width="0.0768%" height="15" fill="rgb(229,84,14)"/><text x="16.3201%" y="1039.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::sends_score (1 samples, 0.02%)</title><rect x="16.1315%" y="1013" width="0.0154%" height="15" fill="rgb(229,68,14)"/><text x="16.3815%" y="1023.50"></text></g><g><title>&lt;model::ordering::ScoreTreeIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="16.1469%" y="1029" width="0.0154%" height="15" fill="rgb(243,106,26)"/><text x="16.3969%" y="1039.50"></text></g><g><title>&lt;model::ordering::sort_unforgeable::UnforgeableScoreTreeIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="16.1469%" y="1013" width="0.0154%" height="15" fill="rgb(206,45,38)"/><text x="16.3969%" y="1023.50"></text></g><g><title>model::ordering::sort_unforgeable::UnforgeableScoreTreeIter::private_body_next (1 samples, 0.02%)</title><rect x="16.1469%" y="997" width="0.0154%" height="15" fill="rgb(226,6,15)"/><text x="16.3969%" y="1007.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash::traverse (9 samples, 0.14%)</title><rect x="16.1469%" y="1045" width="0.1383%" height="15" fill="rgb(232,22,54)"/><text x="16.3969%" y="1055.50"></text></g><g><title>blake3::Hasher::update (8 samples, 0.12%)</title><rect x="16.1622%" y="1029" width="0.1229%" height="15" fill="rgb(229,222,32)"/><text x="16.4122%" y="1039.50"></text></g><g><title>blake3::Hasher::update_with_join (8 samples, 0.12%)</title><rect x="16.1622%" y="1013" width="0.1229%" height="15" fill="rgb(228,62,29)"/><text x="16.4122%" y="1023.50"></text></g><g><title>blake3::ChunkState::update (8 samples, 0.12%)</title><rect x="16.1622%" y="997" width="0.1229%" height="15" fill="rgb(251,103,34)"/><text x="16.4122%" y="1007.50"></text></g><g><title>blake3::ChunkState::fill_buf (6 samples, 0.09%)</title><rect x="16.1930%" y="981" width="0.0922%" height="15" fill="rgb(233,12,30)"/><text x="16.4430%" y="991.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (6 samples, 0.09%)</title><rect x="16.1930%" y="965" width="0.0922%" height="15" fill="rgb(238,52,0)"/><text x="16.4430%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.09%)</title><rect x="16.1930%" y="949" width="0.0922%" height="15" fill="rgb(223,98,5)"/><text x="16.4430%" y="959.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.09%)</title><rect x="16.1930%" y="933" width="0.0922%" height="15" fill="rgb(228,75,37)"/><text x="16.4430%" y="943.50"></text></g><g><title>core::array::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T: N]&gt;::index_mut (1 samples, 0.02%)</title><rect x="16.3466%" y="981" width="0.0154%" height="15" fill="rgb(205,115,49)"/><text x="16.5966%" y="991.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.02%)</title><rect x="16.3466%" y="965" width="0.0154%" height="15" fill="rgb(250,154,43)"/><text x="16.5966%" y="975.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.02%)</title><rect x="16.3466%" y="949" width="0.0154%" height="15" fill="rgb(226,43,29)"/><text x="16.5966%" y="959.50"></text></g><g><title>core::cmp::min (1 samples, 0.02%)</title><rect x="16.3620%" y="981" width="0.0154%" height="15" fill="rgb(249,228,39)"/><text x="16.6120%" y="991.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.02%)</title><rect x="16.3620%" y="965" width="0.0154%" height="15" fill="rgb(216,79,43)"/><text x="16.6120%" y="975.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.02%)</title><rect x="16.3620%" y="949" width="0.0154%" height="15" fill="rgb(228,95,12)"/><text x="16.6120%" y="959.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash::traverse (23 samples, 0.35%)</title><rect x="16.0393%" y="1061" width="0.3534%" height="15" fill="rgb(249,221,15)"/><text x="16.2893%" y="1071.50"></text></g><g><title>blake3::Hasher::update (7 samples, 0.11%)</title><rect x="16.2851%" y="1045" width="0.1075%" height="15" fill="rgb(233,34,13)"/><text x="16.5351%" y="1055.50"></text></g><g><title>blake3::Hasher::update_with_join (7 samples, 0.11%)</title><rect x="16.2851%" y="1029" width="0.1075%" height="15" fill="rgb(214,103,39)"/><text x="16.5351%" y="1039.50"></text></g><g><title>blake3::ChunkState::update (5 samples, 0.08%)</title><rect x="16.3159%" y="1013" width="0.0768%" height="15" fill="rgb(251,126,39)"/><text x="16.5659%" y="1023.50"></text></g><g><title>blake3::ChunkState::fill_buf (3 samples, 0.05%)</title><rect x="16.3466%" y="997" width="0.0461%" height="15" fill="rgb(214,216,36)"/><text x="16.5966%" y="1007.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.02%)</title><rect x="16.3773%" y="981" width="0.0154%" height="15" fill="rgb(220,221,8)"/><text x="16.6273%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="16.3773%" y="965" width="0.0154%" height="15" fill="rgb(240,216,3)"/><text x="16.6273%" y="975.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="16.3773%" y="949" width="0.0154%" height="15" fill="rgb(232,218,17)"/><text x="16.6273%" y="959.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash (24 samples, 0.37%)</title><rect x="16.0393%" y="1077" width="0.3687%" height="15" fill="rgb(229,163,45)"/><text x="16.2893%" y="1087.50"></text></g><g><title>blake3::Hasher::finalize (1 samples, 0.02%)</title><rect x="16.3927%" y="1061" width="0.0154%" height="15" fill="rgb(231,110,42)"/><text x="16.6427%" y="1071.50"></text></g><g><title>blake3::Hasher::final_output (1 samples, 0.02%)</title><rect x="16.3927%" y="1045" width="0.0154%" height="15" fill="rgb(208,170,48)"/><text x="16.6427%" y="1055.50"></text></g><g><title>blake3::ChunkState::output (1 samples, 0.02%)</title><rect x="16.3927%" y="1029" width="0.0154%" height="15" fill="rgb(239,116,25)"/><text x="16.6427%" y="1039.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="16.4081%" y="1077" width="0.0154%" height="15" fill="rgb(219,200,50)"/><text x="16.6581%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="16.4081%" y="1061" width="0.0154%" height="15" fill="rgb(245,200,0)"/><text x="16.6581%" y="1071.50"></text></g><g><title>__rust_probestack (1 samples, 0.02%)</title><rect x="16.4081%" y="1045" width="0.0154%" height="15" fill="rgb(245,119,33)"/><text x="16.6581%" y="1055.50"></text></g><g><title>[libc-2.31.so] (14 samples, 0.22%)</title><rect x="16.4234%" y="1077" width="0.2151%" height="15" fill="rgb(231,125,12)"/><text x="16.6734%" y="1087.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.02%)</title><rect x="16.6385%" y="1061" width="0.0154%" height="15" fill="rgb(216,96,41)"/><text x="16.8885%" y="1071.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="16.6385%" y="1045" width="0.0154%" height="15" fill="rgb(248,43,45)"/><text x="16.8885%" y="1055.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="16.6385%" y="1029" width="0.0154%" height="15" fill="rgb(217,222,7)"/><text x="16.8885%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (7 samples, 0.11%)</title><rect x="16.6539%" y="1061" width="0.1075%" height="15" fill="rgb(233,28,6)"/><text x="16.9039%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (7 samples, 0.11%)</title><rect x="16.6539%" y="1045" width="0.1075%" height="15" fill="rgb(231,218,15)"/><text x="16.9039%" y="1055.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::push (13 samples, 0.20%)</title><rect x="16.6385%" y="1077" width="0.1997%" height="15" fill="rgb(226,171,48)"/><text x="16.8885%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (5 samples, 0.08%)</title><rect x="16.7614%" y="1061" width="0.0768%" height="15" fill="rgb(235,201,9)"/><text x="17.0114%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.08%)</title><rect x="16.7614%" y="1045" width="0.0768%" height="15" fill="rgb(217,80,15)"/><text x="17.0114%" y="1055.50"></text></g><g><title>core::mem::drop (1 samples, 0.02%)</title><rect x="16.8382%" y="1061" width="0.0154%" height="15" fill="rgb(219,152,8)"/><text x="17.0882%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::util::linked_list::LinkedList&lt;tokio::sync::notify::Waiter,tokio::sync::notify::Waiter&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="16.8382%" y="1045" width="0.0154%" height="15" fill="rgb(243,107,38)"/><text x="17.0882%" y="1055.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="16.8382%" y="1029" width="0.0154%" height="15" fill="rgb(231,17,5)"/><text x="17.0882%" y="1039.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.02%)</title><rect x="16.8382%" y="1013" width="0.0154%" height="15" fill="rgb(209,25,54)"/><text x="17.0882%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.02%)</title><rect x="16.8382%" y="997" width="0.0154%" height="15" fill="rgb(219,0,2)"/><text x="17.0882%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.02%)</title><rect x="16.8382%" y="981" width="0.0154%" height="15" fill="rgb(246,9,5)"/><text x="17.0882%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.05%)</title><rect x="16.8536%" y="1061" width="0.0461%" height="15" fill="rgb(226,159,4)"/><text x="17.1036%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.05%)</title><rect x="16.8536%" y="1045" width="0.0461%" height="15" fill="rgb(219,175,34)"/><text x="17.1036%" y="1055.50"></text></g><g><title>__pthread_cond_signal (361 samples, 5.55%)</title><rect x="16.9611%" y="981" width="5.5462%" height="15" fill="rgb(236,10,46)"/><text x="17.2111%" y="991.50">__pthre..</text></g><g><title>[unknown] (348 samples, 5.35%)</title><rect x="17.1609%" y="965" width="5.3464%" height="15" fill="rgb(240,211,16)"/><text x="17.4109%" y="975.50">[unknow..</text></g><g><title>[unknown] (347 samples, 5.33%)</title><rect x="17.1762%" y="949" width="5.3311%" height="15" fill="rgb(205,3,43)"/><text x="17.4262%" y="959.50">[unknow..</text></g><g><title>[unknown] (344 samples, 5.28%)</title><rect x="17.2223%" y="933" width="5.2850%" height="15" fill="rgb(245,7,22)"/><text x="17.4723%" y="943.50">[unkno..</text></g><g><title>[unknown] (342 samples, 5.25%)</title><rect x="17.2530%" y="917" width="5.2543%" height="15" fill="rgb(239,132,32)"/><text x="17.5030%" y="927.50">[unkno..</text></g><g><title>[unknown] (340 samples, 5.22%)</title><rect x="17.2838%" y="901" width="5.2235%" height="15" fill="rgb(228,202,34)"/><text x="17.5338%" y="911.50">[unkno..</text></g><g><title>[unknown] (303 samples, 4.66%)</title><rect x="17.8522%" y="885" width="4.6551%" height="15" fill="rgb(254,200,22)"/><text x="18.1022%" y="895.50">[unkn..</text></g><g><title>[unknown] (278 samples, 4.27%)</title><rect x="18.2363%" y="869" width="4.2710%" height="15" fill="rgb(219,10,39)"/><text x="18.4863%" y="879.50">[unkn..</text></g><g><title>[unknown] (246 samples, 3.78%)</title><rect x="18.7279%" y="853" width="3.7794%" height="15" fill="rgb(226,210,39)"/><text x="18.9779%" y="863.50">[unk..</text></g><g><title>[unknown] (155 samples, 2.38%)</title><rect x="20.1260%" y="837" width="2.3813%" height="15" fill="rgb(208,219,16)"/><text x="20.3760%" y="847.50">[u..</text></g><g><title>[unknown] (116 samples, 1.78%)</title><rect x="20.7251%" y="821" width="1.7821%" height="15" fill="rgb(216,158,51)"/><text x="20.9751%" y="831.50">[..</text></g><g><title>[unknown] (50 samples, 0.77%)</title><rect x="21.7391%" y="805" width="0.7682%" height="15" fill="rgb(233,14,44)"/><text x="21.9891%" y="815.50"></text></g><g><title>[unknown] (13 samples, 0.20%)</title><rect x="22.3076%" y="789" width="0.1997%" height="15" fill="rgb(237,97,39)"/><text x="22.5576%" y="799.50"></text></g><g><title>core::mem::drop (1 samples, 0.02%)</title><rect x="22.5073%" y="981" width="0.0154%" height="15" fill="rgb(218,198,43)"/><text x="22.7573%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (1 samples, 0.02%)</title><rect x="22.5073%" y="965" width="0.0154%" height="15" fill="rgb(231,104,20)"/><text x="22.7573%" y="975.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="22.5073%" y="949" width="0.0154%" height="15" fill="rgb(254,36,13)"/><text x="22.7573%" y="959.50"></text></g><g><title>std::sys_common::poison::Flag::done (1 samples, 0.02%)</title><rect x="22.5073%" y="933" width="0.0154%" height="15" fill="rgb(248,14,50)"/><text x="22.7573%" y="943.50"></text></g><g><title>std::thread::panicking (1 samples, 0.02%)</title><rect x="22.5073%" y="917" width="0.0154%" height="15" fill="rgb(217,107,29)"/><text x="22.7573%" y="927.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.02%)</title><rect x="22.5073%" y="901" width="0.0154%" height="15" fill="rgb(251,169,33)"/><text x="22.7573%" y="911.50"></text></g><g><title>std::panicking::panic_count::is_zero (1 samples, 0.02%)</title><rect x="22.5073%" y="885" width="0.0154%" height="15" fill="rgb(217,108,32)"/><text x="22.7573%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (12 samples, 0.18%)</title><rect x="22.5227%" y="981" width="0.1844%" height="15" fill="rgb(219,66,42)"/><text x="22.7727%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_swap (12 samples, 0.18%)</title><rect x="22.5227%" y="965" width="0.1844%" height="15" fill="rgb(206,180,7)"/><text x="22.7727%" y="975.50"></text></g><g><title>parking::Unparker::unpark (391 samples, 6.01%)</title><rect x="16.8997%" y="1013" width="6.0071%" height="15" fill="rgb(208,226,31)"/><text x="17.1497%" y="1023.50">parking:..</text></g><g><title>parking::Inner::unpark (387 samples, 5.95%)</title><rect x="16.9611%" y="997" width="5.9456%" height="15" fill="rgb(218,26,49)"/><text x="17.2111%" y="1007.50">parking:..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (13 samples, 0.20%)</title><rect x="22.7070%" y="981" width="0.1997%" height="15" fill="rgb(233,197,48)"/><text x="22.9570%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (13 samples, 0.20%)</title><rect x="22.7070%" y="965" width="0.1997%" height="15" fill="rgb(252,181,51)"/><text x="22.9570%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (13 samples, 0.20%)</title><rect x="22.7070%" y="949" width="0.1997%" height="15" fill="rgb(253,90,19)"/><text x="22.9570%" y="959.50"></text></g><g><title>__GI___pthread_mutex_lock (13 samples, 0.20%)</title><rect x="22.7070%" y="933" width="0.1997%" height="15" fill="rgb(215,171,30)"/><text x="22.9570%" y="943.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (393 samples, 6.04%)</title><rect x="16.8997%" y="1029" width="6.0378%" height="15" fill="rgb(214,222,9)"/><text x="17.1497%" y="1039.50">async_io..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.03%)</title><rect x="22.9067%" y="1013" width="0.0307%" height="15" fill="rgb(223,3,22)"/><text x="23.1567%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.03%)</title><rect x="22.9067%" y="997" width="0.0307%" height="15" fill="rgb(225,196,46)"/><text x="23.1567%" y="1007.50"></text></g><g><title>parking::Unparker::unpark (2 samples, 0.03%)</title><rect x="22.9067%" y="981" width="0.0307%" height="15" fill="rgb(209,110,37)"/><text x="23.1567%" y="991.50"></text></g><g><title>parking::Inner::unpark (2 samples, 0.03%)</title><rect x="22.9067%" y="965" width="0.0307%" height="15" fill="rgb(249,89,12)"/><text x="23.1567%" y="975.50"></text></g><g><title>__pthread_cond_signal (2 samples, 0.03%)</title><rect x="22.9067%" y="949" width="0.0307%" height="15" fill="rgb(226,27,33)"/><text x="23.1567%" y="959.50"></text></g><g><title>[unknown] (2 samples, 0.03%)</title><rect x="22.9067%" y="933" width="0.0307%" height="15" fill="rgb(213,82,22)"/><text x="23.1567%" y="943.50"></text></g><g><title>core::task::wake::Waker::wake (400 samples, 6.15%)</title><rect x="16.8997%" y="1061" width="6.1453%" height="15" fill="rgb(248,140,0)"/><text x="17.1497%" y="1071.50">core::ta..</text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (400 samples, 6.15%)</title><rect x="16.8997%" y="1045" width="6.1453%" height="15" fill="rgb(228,106,3)"/><text x="17.1497%" y="1055.50">waker_fn..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;rho_runtime::run::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt;::{{closure}}&gt;&gt; (7 samples, 0.11%)</title><rect x="22.9375%" y="1029" width="0.1075%" height="15" fill="rgb(209,23,37)"/><text x="23.1875%" y="1039.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.11%)</title><rect x="22.9375%" y="1013" width="0.1075%" height="15" fill="rgb(241,93,50)"/><text x="23.1875%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (7 samples, 0.11%)</title><rect x="22.9375%" y="997" width="0.1075%" height="15" fill="rgb(253,46,43)"/><text x="23.1875%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_sub (7 samples, 0.11%)</title><rect x="22.9375%" y="981" width="0.1075%" height="15" fill="rgb(226,206,43)"/><text x="23.1875%" y="991.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (13 samples, 0.20%)</title><rect x="23.0450%" y="1061" width="0.1997%" height="15" fill="rgb(217,54,7)"/><text x="23.2950%" y="1071.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (13 samples, 0.20%)</title><rect x="23.0450%" y="1045" width="0.1997%" height="15" fill="rgb(223,5,52)"/><text x="23.2950%" y="1055.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (13 samples, 0.20%)</title><rect x="23.0450%" y="1029" width="0.1997%" height="15" fill="rgb(206,52,46)"/><text x="23.2950%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (13 samples, 0.20%)</title><rect x="23.0450%" y="1013" width="0.1997%" height="15" fill="rgb(253,136,11)"/><text x="23.2950%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (13 samples, 0.20%)</title><rect x="23.0450%" y="997" width="0.1997%" height="15" fill="rgb(208,106,33)"/><text x="23.2950%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (9 samples, 0.14%)</title><rect x="23.2447%" y="1045" width="0.1383%" height="15" fill="rgb(206,54,4)"/><text x="23.4947%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_store (9 samples, 0.14%)</title><rect x="23.2447%" y="1029" width="0.1383%" height="15" fill="rgb(213,3,15)"/><text x="23.4947%" y="1039.50"></text></g><g><title>tokio::sync::notify::Notify::notify_one (432 samples, 6.64%)</title><rect x="16.8382%" y="1077" width="6.6370%" height="15" fill="rgb(252,211,39)"/><text x="17.0882%" y="1087.50">tokio::sy..</text></g><g><title>tokio::sync::notify::notify_locked (15 samples, 0.23%)</title><rect x="23.2447%" y="1061" width="0.2305%" height="15" fill="rgb(223,6,36)"/><text x="23.4947%" y="1071.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::pop_back (6 samples, 0.09%)</title><rect x="23.3830%" y="1045" width="0.0922%" height="15" fill="rgb(252,169,45)"/><text x="23.6330%" y="1055.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.14%)</title><rect x="23.4752%" y="1061" width="0.1383%" height="15" fill="rgb(212,48,26)"/><text x="23.7252%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (9 samples, 0.14%)</title><rect x="23.4752%" y="1045" width="0.1383%" height="15" fill="rgb(251,102,48)"/><text x="23.7252%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_add (9 samples, 0.14%)</title><rect x="23.4752%" y="1029" width="0.1383%" height="15" fill="rgb(243,208,16)"/><text x="23.7252%" y="1039.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.05%)</title><rect x="23.6135%" y="1045" width="0.0461%" height="15" fill="rgb(219,96,24)"/><text x="23.8635%" y="1055.50"></text></g><g><title>arena_choose (1 samples, 0.02%)</title><rect x="23.6903%" y="869" width="0.0154%" height="15" fill="rgb(219,33,29)"/><text x="23.9403%" y="879.50"></text></g><g><title>arena_choose_impl (1 samples, 0.02%)</title><rect x="23.6903%" y="853" width="0.0154%" height="15" fill="rgb(223,176,5)"/><text x="23.9403%" y="863.50"></text></g><g><title>&lt;rho_runtime::storage::coordinator::AsyncStore as rho_runtime::storage::Storage&gt;::produce::{{closure}} (509 samples, 7.82%)</title><rect x="15.9011%" y="1093" width="7.8199%" height="15" fill="rgb(228,140,14)"/><text x="16.1511%" y="1103.50">&lt;rho_runtim..</text></g><g><title>tokio::sync::oneshot::channel (16 samples, 0.25%)</title><rect x="23.4752%" y="1077" width="0.2458%" height="15" fill="rgb(217,179,31)"/><text x="23.7252%" y="1087.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (7 samples, 0.11%)</title><rect x="23.6135%" y="1061" width="0.1075%" height="15" fill="rgb(230,9,30)"/><text x="23.8635%" y="1071.50"></text></g><g><title>alloc::alloc::exchange_malloc (4 samples, 0.06%)</title><rect x="23.6595%" y="1045" width="0.0615%" height="15" fill="rgb(230,136,20)"/><text x="23.9095%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.06%)</title><rect x="23.6595%" y="1029" width="0.0615%" height="15" fill="rgb(215,210,22)"/><text x="23.9095%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.06%)</title><rect x="23.6595%" y="1013" width="0.0615%" height="15" fill="rgb(218,43,5)"/><text x="23.9095%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.06%)</title><rect x="23.6595%" y="997" width="0.0615%" height="15" fill="rgb(216,11,5)"/><text x="23.9095%" y="1007.50"></text></g><g><title>_rjem_mallocx (4 samples, 0.06%)</title><rect x="23.6595%" y="981" width="0.0615%" height="15" fill="rgb(209,82,29)"/><text x="23.9095%" y="991.50"></text></g><g><title>imalloc (3 samples, 0.05%)</title><rect x="23.6749%" y="965" width="0.0461%" height="15" fill="rgb(244,115,12)"/><text x="23.9249%" y="975.50"></text></g><g><title>imalloc_body (3 samples, 0.05%)</title><rect x="23.6749%" y="949" width="0.0461%" height="15" fill="rgb(222,82,18)"/><text x="23.9249%" y="959.50"></text></g><g><title>imalloc_no_sample (3 samples, 0.05%)</title><rect x="23.6749%" y="933" width="0.0461%" height="15" fill="rgb(249,227,8)"/><text x="23.9249%" y="943.50"></text></g><g><title>iallocztm (2 samples, 0.03%)</title><rect x="23.6903%" y="917" width="0.0307%" height="15" fill="rgb(253,141,45)"/><text x="23.9403%" y="927.50"></text></g><g><title>arena_malloc (2 samples, 0.03%)</title><rect x="23.6903%" y="901" width="0.0307%" height="15" fill="rgb(234,184,4)"/><text x="23.9403%" y="911.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.03%)</title><rect x="23.6903%" y="885" width="0.0307%" height="15" fill="rgb(218,194,23)"/><text x="23.9403%" y="895.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect x="23.7056%" y="869" width="0.0154%" height="15" fill="rgb(235,66,41)"/><text x="23.9556%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (512 samples, 7.87%)</title><rect x="15.9011%" y="1157" width="7.8660%" height="15" fill="rgb(245,217,1)"/><text x="16.1511%" y="1167.50">&lt;core::futu..</text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::produce::{{closure}} (512 samples, 7.87%)</title><rect x="15.9011%" y="1141" width="7.8660%" height="15" fill="rgb(229,91,1)"/><text x="16.1511%" y="1151.50">rho_runtime..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (512 samples, 7.87%)</title><rect x="15.9011%" y="1125" width="7.8660%" height="15" fill="rgb(207,101,30)"/><text x="16.1511%" y="1135.50">&lt;core::pin:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (512 samples, 7.87%)</title><rect x="15.9011%" y="1109" width="7.8660%" height="15" fill="rgb(223,82,49)"/><text x="16.1511%" y="1119.50">&lt;core::futu..</text></g><g><title>[libc-2.31.so] (3 samples, 0.05%)</title><rect x="23.7210%" y="1093" width="0.0461%" height="15" fill="rgb(218,167,17)"/><text x="23.9710%" y="1103.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="23.7671%" y="1157" width="0.0154%" height="15" fill="rgb(208,103,14)"/><text x="24.0171%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="23.7671%" y="1141" width="0.0154%" height="15" fill="rgb(238,20,8)"/><text x="24.0171%" y="1151.50"></text></g><g><title>__rust_probestack (1 samples, 0.02%)</title><rect x="23.7671%" y="1125" width="0.0154%" height="15" fill="rgb(218,80,54)"/><text x="24.0171%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="23.7825%" y="1157" width="0.0154%" height="15" fill="rgb(240,144,17)"/><text x="24.0325%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (1 samples, 0.02%)</title><rect x="23.7825%" y="1141" width="0.0154%" height="15" fill="rgb(245,27,50)"/><text x="24.0325%" y="1151.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.02%)</title><rect x="23.7825%" y="1125" width="0.0154%" height="15" fill="rgb(251,51,7)"/><text x="24.0325%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="23.7825%" y="1109" width="0.0154%" height="15" fill="rgb(245,217,29)"/><text x="24.0325%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="23.7825%" y="1093" width="0.0154%" height="15" fill="rgb(221,176,29)"/><text x="24.0325%" y="1103.50"></text></g><g><title>_rjem_je_tcache_event_hard (1 samples, 0.02%)</title><rect x="23.7825%" y="1077" width="0.0154%" height="15" fill="rgb(212,180,24)"/><text x="24.0325%" y="1087.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="23.7825%" y="1061" width="0.0154%" height="15" fill="rgb(254,24,2)"/><text x="24.0325%" y="1071.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (1 samples, 0.02%)</title><rect x="23.7825%" y="1045" width="0.0154%" height="15" fill="rgb(230,100,2)"/><text x="24.0325%" y="1055.50"></text></g><g><title>arena_dalloc_bin_locked_impl (1 samples, 0.02%)</title><rect x="23.7825%" y="1029" width="0.0154%" height="15" fill="rgb(219,142,25)"/><text x="24.0325%" y="1039.50"></text></g><g><title>arena_dalloc_bin_slab (1 samples, 0.02%)</title><rect x="23.7825%" y="1013" width="0.0154%" height="15" fill="rgb(240,73,43)"/><text x="24.0325%" y="1023.50"></text></g><g><title>arena_slab_dalloc (1 samples, 0.02%)</title><rect x="23.7825%" y="997" width="0.0154%" height="15" fill="rgb(214,114,15)"/><text x="24.0325%" y="1007.50"></text></g><g><title>_rjem_je_arena_extents_dirty_dalloc (1 samples, 0.02%)</title><rect x="23.7825%" y="981" width="0.0154%" height="15" fill="rgb(207,130,4)"/><text x="24.0325%" y="991.50"></text></g><g><title>extent_record (1 samples, 0.02%)</title><rect x="23.7825%" y="965" width="0.0154%" height="15" fill="rgb(221,25,40)"/><text x="24.0325%" y="975.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect x="23.7825%" y="949" width="0.0154%" height="15" fill="rgb(241,184,7)"/><text x="24.0325%" y="959.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect x="23.7825%" y="933" width="0.0154%" height="15" fill="rgb(235,159,4)"/><text x="24.0325%" y="943.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="23.7825%" y="917" width="0.0154%" height="15" fill="rgb(214,87,48)"/><text x="24.0325%" y="927.50"></text></g><g><title>model::ordering::sort_par::&lt;impl model::ordering::Sortable for model::rho_types::Par&gt;::sort (1 samples, 0.02%)</title><rect x="23.7978%" y="1141" width="0.0154%" height="15" fill="rgb(246,198,24)"/><text x="24.0478%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by (1 samples, 0.02%)</title><rect x="23.7978%" y="1125" width="0.0154%" height="15" fill="rgb(209,66,40)"/><text x="24.0478%" y="1135.50"></text></g><g><title>alloc::slice::merge_sort (1 samples, 0.02%)</title><rect x="23.7978%" y="1109" width="0.0154%" height="15" fill="rgb(233,147,39)"/><text x="24.0478%" y="1119.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (7 samples, 0.11%)</title><rect x="23.8132%" y="1125" width="0.1075%" height="15" fill="rgb(231,145,52)"/><text x="24.0632%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (7 samples, 0.11%)</title><rect x="23.8132%" y="1109" width="0.1075%" height="15" fill="rgb(206,20,26)"/><text x="24.0632%" y="1119.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="23.9207%" y="1125" width="0.0154%" height="15" fill="rgb(238,220,4)"/><text x="24.1707%" y="1135.50"></text></g><g><title>model::bitset::BitSet&lt;B&gt;::truncate (1 samples, 0.02%)</title><rect x="23.9361%" y="1125" width="0.0154%" height="15" fill="rgb(252,195,42)"/><text x="24.1861%" y="1135.50"></text></g><g><title>bit_vec::BitVec&lt;B&gt;::truncate (1 samples, 0.02%)</title><rect x="23.9361%" y="1109" width="0.0154%" height="15" fill="rgb(209,10,6)"/><text x="24.1861%" y="1119.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.15%)</title><rect x="23.9515%" y="1109" width="0.1536%" height="15" fill="rgb(229,3,52)"/><text x="24.2015%" y="1119.50"></text></g><g><title>core::ptr::read (10 samples, 0.15%)</title><rect x="23.9515%" y="1093" width="0.1536%" height="15" fill="rgb(253,49,37)"/><text x="24.2015%" y="1103.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.15%)</title><rect x="23.9515%" y="1077" width="0.1536%" height="15" fill="rgb(240,103,49)"/><text x="24.2015%" y="1087.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="24.1051%" y="1109" width="0.0307%" height="15" fill="rgb(250,182,30)"/><text x="24.3551%" y="1119.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="24.1512%" y="1077" width="0.0154%" height="15" fill="rgb(248,8,30)"/><text x="24.4012%" y="1087.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="24.1512%" y="1061" width="0.0154%" height="15" fill="rgb(237,120,30)"/><text x="24.4012%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (3 samples, 0.05%)</title><rect x="24.1358%" y="1109" width="0.0461%" height="15" fill="rgb(221,146,34)"/><text x="24.3858%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.05%)</title><rect x="24.1358%" y="1093" width="0.0461%" height="15" fill="rgb(242,55,13)"/><text x="24.3858%" y="1103.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.02%)</title><rect x="24.1665%" y="1077" width="0.0154%" height="15" fill="rgb(242,112,31)"/><text x="24.4165%" y="1087.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="24.1665%" y="1061" width="0.0154%" height="15" fill="rgb(249,192,27)"/><text x="24.4165%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.05%)</title><rect x="24.1819%" y="1109" width="0.0461%" height="15" fill="rgb(208,204,44)"/><text x="24.4319%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.05%)</title><rect x="24.1819%" y="1093" width="0.0461%" height="15" fill="rgb(208,93,54)"/><text x="24.4319%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="24.2126%" y="1077" width="0.0154%" height="15" fill="rgb(242,1,31)"/><text x="24.4626%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="24.2126%" y="1061" width="0.0154%" height="15" fill="rgb(241,83,25)"/><text x="24.4626%" y="1071.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="24.2280%" y="1093" width="0.0154%" height="15" fill="rgb(205,169,50)"/><text x="24.4780%" y="1103.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_send::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Send&gt;::evaluate::{{closure}} (544 samples, 8.36%)</title><rect x="15.9011%" y="1173" width="8.3577%" height="15" fill="rgb(239,186,37)"/><text x="16.1511%" y="1183.50">rho_runtime:..</text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute (30 samples, 0.46%)</title><rect x="23.7978%" y="1157" width="0.4609%" height="15" fill="rgb(205,221,10)"/><text x="24.0478%" y="1167.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute_no_sort (29 samples, 0.45%)</title><rect x="23.8132%" y="1141" width="0.4455%" height="15" fill="rgb(218,196,15)"/><text x="24.0632%" y="1151.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::substitute_expressions_in_par (20 samples, 0.31%)</title><rect x="23.9515%" y="1125" width="0.3073%" height="15" fill="rgb(218,196,35)"/><text x="24.2015%" y="1135.50"></text></g><g><title>model::rho_types::Par::append_expr (2 samples, 0.03%)</title><rect x="24.2280%" y="1109" width="0.0307%" height="15" fill="rgb(233,63,24)"/><text x="24.4780%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="24.2434%" y="1093" width="0.0154%" height="15" fill="rgb(225,8,4)"/><text x="24.4934%" y="1103.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="24.2434%" y="1077" width="0.0154%" height="15" fill="rgb(234,105,35)"/><text x="24.4934%" y="1087.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="24.2434%" y="1061" width="0.0154%" height="15" fill="rgb(236,21,32)"/><text x="24.4934%" y="1071.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_var::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S,model::rho_types::Par&gt; for model::rho_types::Var&gt;::evaluate::{{closure}} (1 samples, 0.02%)</title><rect x="24.2587%" y="1173" width="0.0154%" height="15" fill="rgb(228,109,6)"/><text x="24.5087%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="24.4431%" y="1061" width="0.0154%" height="15" fill="rgb(229,215,31)"/><text x="24.6931%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.02%)</title><rect x="24.4431%" y="1045" width="0.0154%" height="15" fill="rgb(221,52,54)"/><text x="24.6931%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (9 samples, 0.14%)</title><rect x="24.6121%" y="869" width="0.1383%" height="15" fill="rgb(252,129,43)"/><text x="24.8621%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (3 samples, 0.05%)</title><rect x="24.7043%" y="853" width="0.0461%" height="15" fill="rgb(248,183,27)"/><text x="24.9543%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.20%)</title><rect x="24.6121%" y="885" width="0.1997%" height="15" fill="rgb(250,0,22)"/><text x="24.8621%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.06%)</title><rect x="24.7503%" y="869" width="0.0615%" height="15" fill="rgb(213,166,10)"/><text x="25.0003%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.06%)</title><rect x="24.7503%" y="853" width="0.0615%" height="15" fill="rgb(207,163,36)"/><text x="25.0003%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.06%)</title><rect x="24.7503%" y="837" width="0.0615%" height="15" fill="rgb(208,122,22)"/><text x="25.0003%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.06%)</title><rect x="24.7503%" y="821" width="0.0615%" height="15" fill="rgb(207,104,49)"/><text x="25.0003%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.03%)</title><rect x="24.7811%" y="805" width="0.0307%" height="15" fill="rgb(248,211,50)"/><text x="25.0311%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.03%)</title><rect x="24.7811%" y="789" width="0.0307%" height="15" fill="rgb(217,13,45)"/><text x="25.0311%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (2 samples, 0.03%)</title><rect x="24.7811%" y="773" width="0.0307%" height="15" fill="rgb(211,216,49)"/><text x="25.0311%" y="783.50"></text></g><g><title>__rg_alloc (1 samples, 0.02%)</title><rect x="24.8118%" y="677" width="0.0154%" height="15" fill="rgb(221,58,53)"/><text x="25.0618%" y="687.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect x="24.8118%" y="661" width="0.0154%" height="15" fill="rgb(220,112,41)"/><text x="25.0618%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.03%)</title><rect x="24.8118%" y="773" width="0.0307%" height="15" fill="rgb(236,38,28)"/><text x="25.0618%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.03%)</title><rect x="24.8118%" y="757" width="0.0307%" height="15" fill="rgb(227,195,22)"/><text x="25.0618%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.03%)</title><rect x="24.8118%" y="741" width="0.0307%" height="15" fill="rgb(214,55,33)"/><text x="25.0618%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.03%)</title><rect x="24.8118%" y="725" width="0.0307%" height="15" fill="rgb(248,80,13)"/><text x="25.0618%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.03%)</title><rect x="24.8118%" y="709" width="0.0307%" height="15" fill="rgb(238,52,6)"/><text x="25.0618%" y="719.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.03%)</title><rect x="24.8118%" y="693" width="0.0307%" height="15" fill="rgb(224,198,47)"/><text x="25.0618%" y="703.50"></text></g><g><title>_rjem_mallocx (1 samples, 0.02%)</title><rect x="24.8272%" y="677" width="0.0154%" height="15" fill="rgb(233,171,20)"/><text x="25.0772%" y="687.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="24.8272%" y="661" width="0.0154%" height="15" fill="rgb(241,30,25)"/><text x="25.0772%" y="671.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="24.8272%" y="645" width="0.0154%" height="15" fill="rgb(207,171,38)"/><text x="25.0772%" y="655.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="24.8272%" y="629" width="0.0154%" height="15" fill="rgb(234,70,1)"/><text x="25.0772%" y="639.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="24.8272%" y="613" width="0.0154%" height="15" fill="rgb(232,178,18)"/><text x="25.0772%" y="623.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="24.8272%" y="597" width="0.0154%" height="15" fill="rgb(241,78,40)"/><text x="25.0772%" y="607.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="24.8272%" y="581" width="0.0154%" height="15" fill="rgb(222,35,25)"/><text x="25.0772%" y="591.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect x="24.8272%" y="565" width="0.0154%" height="15" fill="rgb(207,92,16)"/><text x="25.0772%" y="575.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (23 samples, 0.35%)</title><rect x="24.5045%" y="901" width="0.3534%" height="15" fill="rgb(216,59,51)"/><text x="24.7545%" y="911.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.05%)</title><rect x="24.8118%" y="885" width="0.0461%" height="15" fill="rgb(213,80,28)"/><text x="25.0618%" y="895.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (3 samples, 0.05%)</title><rect x="24.8118%" y="869" width="0.0461%" height="15" fill="rgb(220,93,7)"/><text x="25.0618%" y="879.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (3 samples, 0.05%)</title><rect x="24.8118%" y="853" width="0.0461%" height="15" fill="rgb(225,24,44)"/><text x="25.0618%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.05%)</title><rect x="24.8118%" y="837" width="0.0461%" height="15" fill="rgb(243,74,40)"/><text x="25.0618%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.05%)</title><rect x="24.8118%" y="821" width="0.0461%" height="15" fill="rgb(228,39,7)"/><text x="25.0618%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.05%)</title><rect x="24.8118%" y="805" width="0.0461%" height="15" fill="rgb(227,79,8)"/><text x="25.0618%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.05%)</title><rect x="24.8118%" y="789" width="0.0461%" height="15" fill="rgb(236,58,11)"/><text x="25.0618%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.02%)</title><rect x="24.8425%" y="773" width="0.0154%" height="15" fill="rgb(249,63,35)"/><text x="25.0925%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="24.8425%" y="757" width="0.0154%" height="15" fill="rgb(252,114,16)"/><text x="25.0925%" y="767.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="24.8425%" y="741" width="0.0154%" height="15" fill="rgb(254,151,24)"/><text x="25.0925%" y="751.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (30 samples, 0.46%)</title><rect x="24.4892%" y="917" width="0.4609%" height="15" fill="rgb(253,54,39)"/><text x="24.7392%" y="927.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.09%)</title><rect x="24.8579%" y="901" width="0.0922%" height="15" fill="rgb(243,25,45)"/><text x="25.1079%" y="911.50"></text></g><g><title>&lt;model::rho_types::MatchCase as core::clone::Clone&gt;::clone (33 samples, 0.51%)</title><rect x="24.4738%" y="933" width="0.5070%" height="15" fill="rgb(234,134,9)"/><text x="24.7238%" y="943.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="24.9501%" y="917" width="0.0307%" height="15" fill="rgb(227,166,31)"/><text x="25.2001%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.02%)</title><rect x="24.9808%" y="933" width="0.0154%" height="15" fill="rgb(245,143,41)"/><text x="25.2308%" y="943.50"></text></g><g><title>__rg_alloc (1 samples, 0.02%)</title><rect x="24.9962%" y="837" width="0.0154%" height="15" fill="rgb(238,181,32)"/><text x="25.2462%" y="847.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect x="24.9962%" y="821" width="0.0154%" height="15" fill="rgb(224,113,18)"/><text x="25.2462%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.03%)</title><rect x="24.9962%" y="933" width="0.0307%" height="15" fill="rgb(240,229,28)"/><text x="25.2462%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.03%)</title><rect x="24.9962%" y="917" width="0.0307%" height="15" fill="rgb(250,185,3)"/><text x="25.2462%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.03%)</title><rect x="24.9962%" y="901" width="0.0307%" height="15" fill="rgb(212,59,25)"/><text x="25.2462%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.03%)</title><rect x="24.9962%" y="885" width="0.0307%" height="15" fill="rgb(221,87,20)"/><text x="25.2462%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.03%)</title><rect x="24.9962%" y="869" width="0.0307%" height="15" fill="rgb(213,74,28)"/><text x="25.2462%" y="879.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.03%)</title><rect x="24.9962%" y="853" width="0.0307%" height="15" fill="rgb(224,132,34)"/><text x="25.2462%" y="863.50"></text></g><g><title>_rjem_mallocx (1 samples, 0.02%)</title><rect x="25.0115%" y="837" width="0.0154%" height="15" fill="rgb(222,101,24)"/><text x="25.2615%" y="847.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="25.0115%" y="821" width="0.0154%" height="15" fill="rgb(254,142,4)"/><text x="25.2615%" y="831.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="25.0115%" y="805" width="0.0154%" height="15" fill="rgb(230,229,49)"/><text x="25.2615%" y="815.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="25.0115%" y="789" width="0.0154%" height="15" fill="rgb(238,70,47)"/><text x="25.2615%" y="799.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="25.0115%" y="773" width="0.0154%" height="15" fill="rgb(231,160,17)"/><text x="25.2615%" y="783.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="25.0115%" y="757" width="0.0154%" height="15" fill="rgb(218,68,53)"/><text x="25.2615%" y="767.50"></text></g><g><title>tcache_alloc_large (1 samples, 0.02%)</title><rect x="25.0115%" y="741" width="0.0154%" height="15" fill="rgb(236,111,10)"/><text x="25.2615%" y="751.50"></text></g><g><title>tcache_event (1 samples, 0.02%)</title><rect x="25.0115%" y="725" width="0.0154%" height="15" fill="rgb(224,34,41)"/><text x="25.2615%" y="735.50"></text></g><g><title>ticker_tick (1 samples, 0.02%)</title><rect x="25.0115%" y="709" width="0.0154%" height="15" fill="rgb(241,118,19)"/><text x="25.2615%" y="719.50"></text></g><g><title>ticker_tick (1 samples, 0.02%)</title><rect x="25.0115%" y="693" width="0.0154%" height="15" fill="rgb(238,129,25)"/><text x="25.2615%" y="703.50"></text></g><g><title>ticker_ticks (1 samples, 0.02%)</title><rect x="25.0115%" y="677" width="0.0154%" height="15" fill="rgb(238,22,31)"/><text x="25.2615%" y="687.50"></text></g><g><title>ticker_fixup (1 samples, 0.02%)</title><rect x="25.0115%" y="661" width="0.0154%" height="15" fill="rgb(222,174,48)"/><text x="25.2615%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (37 samples, 0.57%)</title><rect x="24.4738%" y="997" width="0.5684%" height="15" fill="rgb(206,152,40)"/><text x="24.7238%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (37 samples, 0.57%)</title><rect x="24.4738%" y="981" width="0.5684%" height="15" fill="rgb(218,99,54)"/><text x="24.7238%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (37 samples, 0.57%)</title><rect x="24.4738%" y="965" width="0.5684%" height="15" fill="rgb(220,174,26)"/><text x="24.7238%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (37 samples, 0.57%)</title><rect x="24.4738%" y="949" width="0.5684%" height="15" fill="rgb(245,116,9)"/><text x="24.7238%" y="959.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.02%)</title><rect x="25.0269%" y="933" width="0.0154%" height="15" fill="rgb(209,72,35)"/><text x="25.2769%" y="943.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="25.0269%" y="917" width="0.0154%" height="15" fill="rgb(226,126,21)"/><text x="25.2769%" y="927.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="25.0422%" y="981" width="0.0154%" height="15" fill="rgb(227,192,1)"/><text x="25.2922%" y="991.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="25.0422%" y="965" width="0.0154%" height="15" fill="rgb(237,180,29)"/><text x="25.2922%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="25.0422%" y="949" width="0.0154%" height="15" fill="rgb(230,197,35)"/><text x="25.2922%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.02%)</title><rect x="25.0422%" y="933" width="0.0154%" height="15" fill="rgb(246,193,31)"/><text x="25.2922%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.02%)</title><rect x="25.0422%" y="917" width="0.0154%" height="15" fill="rgb(241,36,4)"/><text x="25.2922%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.02%)</title><rect x="25.0422%" y="901" width="0.0154%" height="15" fill="rgb(241,130,17)"/><text x="25.2922%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="25.0422%" y="885" width="0.0154%" height="15" fill="rgb(206,137,32)"/><text x="25.2922%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="25.0422%" y="869" width="0.0154%" height="15" fill="rgb(237,228,51)"/><text x="25.2922%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="25.0422%" y="853" width="0.0154%" height="15" fill="rgb(243,6,42)"/><text x="25.2922%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="25.0422%" y="837" width="0.0154%" height="15" fill="rgb(251,74,28)"/><text x="25.2922%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="25.0422%" y="821" width="0.0154%" height="15" fill="rgb(218,20,49)"/><text x="25.2922%" y="831.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="25.0422%" y="805" width="0.0154%" height="15" fill="rgb(238,28,14)"/><text x="25.2922%" y="815.50"></text></g><g><title>__rust_alloc (1 samples, 0.02%)</title><rect x="25.0422%" y="789" width="0.0154%" height="15" fill="rgb(229,40,46)"/><text x="25.2922%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="25.0576%" y="853" width="0.0154%" height="15" fill="rgb(244,195,20)"/><text x="25.3076%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="25.0576%" y="837" width="0.0154%" height="15" fill="rgb(253,56,35)"/><text x="25.3076%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="25.0576%" y="821" width="0.0154%" height="15" fill="rgb(210,149,44)"/><text x="25.3076%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="25.0576%" y="805" width="0.0154%" height="15" fill="rgb(240,135,12)"/><text x="25.3076%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="25.0576%" y="789" width="0.0154%" height="15" fill="rgb(251,24,50)"/><text x="25.3076%" y="799.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="25.0576%" y="773" width="0.0154%" height="15" fill="rgb(243,200,47)"/><text x="25.3076%" y="783.50"></text></g><g><title>_rjem_mallocx (1 samples, 0.02%)</title><rect x="25.0576%" y="757" width="0.0154%" height="15" fill="rgb(224,166,26)"/><text x="25.3076%" y="767.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (3 samples, 0.05%)</title><rect x="25.0576%" y="981" width="0.0461%" height="15" fill="rgb(233,0,47)"/><text x="25.3076%" y="991.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.05%)</title><rect x="25.0576%" y="965" width="0.0461%" height="15" fill="rgb(253,80,5)"/><text x="25.3076%" y="975.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (3 samples, 0.05%)</title><rect x="25.0576%" y="949" width="0.0461%" height="15" fill="rgb(214,133,25)"/><text x="25.3076%" y="959.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (3 samples, 0.05%)</title><rect x="25.0576%" y="933" width="0.0461%" height="15" fill="rgb(209,27,14)"/><text x="25.3076%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.05%)</title><rect x="25.0576%" y="917" width="0.0461%" height="15" fill="rgb(219,102,51)"/><text x="25.3076%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.05%)</title><rect x="25.0576%" y="901" width="0.0461%" height="15" fill="rgb(237,18,16)"/><text x="25.3076%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.05%)</title><rect x="25.0576%" y="885" width="0.0461%" height="15" fill="rgb(241,85,17)"/><text x="25.3076%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.05%)</title><rect x="25.0576%" y="869" width="0.0461%" height="15" fill="rgb(236,90,42)"/><text x="25.3076%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.03%)</title><rect x="25.0730%" y="853" width="0.0307%" height="15" fill="rgb(249,57,21)"/><text x="25.3230%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.03%)</title><rect x="25.0730%" y="837" width="0.0307%" height="15" fill="rgb(243,12,36)"/><text x="25.3230%" y="847.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="25.0730%" y="821" width="0.0307%" height="15" fill="rgb(253,128,47)"/><text x="25.3230%" y="831.50"></text></g><g><title>&lt;model::rho_types::Match as core::clone::Clone&gt;::clone (51 samples, 0.78%)</title><rect x="24.4738%" y="1013" width="0.7835%" height="15" fill="rgb(207,33,20)"/><text x="24.7238%" y="1023.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (14 samples, 0.22%)</title><rect x="25.0422%" y="997" width="0.2151%" height="15" fill="rgb(233,215,35)"/><text x="25.2922%" y="1007.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.15%)</title><rect x="25.1037%" y="981" width="0.1536%" height="15" fill="rgb(249,188,52)"/><text x="25.3537%" y="991.50"></text></g><g><title>imalloc_no_sample (3 samples, 0.05%)</title><rect x="25.2727%" y="869" width="0.0461%" height="15" fill="rgb(225,12,32)"/><text x="25.5227%" y="879.50"></text></g><g><title>iallocztm (3 samples, 0.05%)</title><rect x="25.2727%" y="853" width="0.0461%" height="15" fill="rgb(247,98,14)"/><text x="25.5227%" y="863.50"></text></g><g><title>arena_malloc (3 samples, 0.05%)</title><rect x="25.2727%" y="837" width="0.0461%" height="15" fill="rgb(247,219,48)"/><text x="25.5227%" y="847.50"></text></g><g><title>tcache_alloc_small (3 samples, 0.05%)</title><rect x="25.2727%" y="821" width="0.0461%" height="15" fill="rgb(253,60,48)"/><text x="25.5227%" y="831.50"></text></g><g><title>cache_bin_alloc_easy (2 samples, 0.03%)</title><rect x="25.2881%" y="805" width="0.0307%" height="15" fill="rgb(245,15,52)"/><text x="25.5381%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.08%)</title><rect x="25.2573%" y="1013" width="0.0768%" height="15" fill="rgb(220,133,28)"/><text x="25.5073%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.08%)</title><rect x="25.2573%" y="997" width="0.0768%" height="15" fill="rgb(217,180,4)"/><text x="25.5073%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.08%)</title><rect x="25.2573%" y="981" width="0.0768%" height="15" fill="rgb(251,24,1)"/><text x="25.5073%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.08%)</title><rect x="25.2573%" y="965" width="0.0768%" height="15" fill="rgb(212,185,49)"/><text x="25.5073%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.08%)</title><rect x="25.2573%" y="949" width="0.0768%" height="15" fill="rgb(215,175,22)"/><text x="25.5073%" y="959.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.06%)</title><rect x="25.2727%" y="933" width="0.0615%" height="15" fill="rgb(250,205,14)"/><text x="25.5227%" y="943.50"></text></g><g><title>_rjem_mallocx (4 samples, 0.06%)</title><rect x="25.2727%" y="917" width="0.0615%" height="15" fill="rgb(225,211,22)"/><text x="25.5227%" y="927.50"></text></g><g><title>imalloc (4 samples, 0.06%)</title><rect x="25.2727%" y="901" width="0.0615%" height="15" fill="rgb(251,179,42)"/><text x="25.5227%" y="911.50"></text></g><g><title>imalloc_body (4 samples, 0.06%)</title><rect x="25.2727%" y="885" width="0.0615%" height="15" fill="rgb(208,216,51)"/><text x="25.5227%" y="895.50"></text></g><g><title>sz_size2index (1 samples, 0.02%)</title><rect x="25.3188%" y="869" width="0.0154%" height="15" fill="rgb(235,36,11)"/><text x="25.5688%" y="879.50"></text></g><g><title>sz_size2index_lookup (1 samples, 0.02%)</title><rect x="25.3188%" y="853" width="0.0154%" height="15" fill="rgb(213,189,28)"/><text x="25.5688%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (63 samples, 0.97%)</title><rect x="24.4431%" y="1077" width="0.9679%" height="15" fill="rgb(227,203,42)"/><text x="24.6931%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (62 samples, 0.95%)</title><rect x="24.4584%" y="1061" width="0.9525%" height="15" fill="rgb(244,72,36)"/><text x="24.7084%" y="1071.50"></text></g><g><title>alloc::slice::hack::to_vec (62 samples, 0.95%)</title><rect x="24.4584%" y="1045" width="0.9525%" height="15" fill="rgb(213,53,17)"/><text x="24.7084%" y="1055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (62 samples, 0.95%)</title><rect x="24.4584%" y="1029" width="0.9525%" height="15" fill="rgb(207,167,3)"/><text x="24.7084%" y="1039.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (5 samples, 0.08%)</title><rect x="25.3342%" y="1013" width="0.0768%" height="15" fill="rgb(216,98,30)"/><text x="25.5842%" y="1023.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.08%)</title><rect x="25.3342%" y="997" width="0.0768%" height="15" fill="rgb(236,123,15)"/><text x="25.5842%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="25.4110%" y="965" width="0.0154%" height="15" fill="rgb(248,81,50)"/><text x="25.6610%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="25.4110%" y="949" width="0.0154%" height="15" fill="rgb(214,120,4)"/><text x="25.6610%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="25.4110%" y="933" width="0.0154%" height="15" fill="rgb(208,179,34)"/><text x="25.6610%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="25.4110%" y="917" width="0.0154%" height="15" fill="rgb(227,140,7)"/><text x="25.6610%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="25.4110%" y="901" width="0.0154%" height="15" fill="rgb(214,22,6)"/><text x="25.6610%" y="911.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="25.4110%" y="885" width="0.0154%" height="15" fill="rgb(207,137,27)"/><text x="25.6610%" y="895.50"></text></g><g><title>_rjem_mallocx (1 samples, 0.02%)</title><rect x="25.4110%" y="869" width="0.0154%" height="15" fill="rgb(210,8,46)"/><text x="25.6610%" y="879.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="25.4110%" y="853" width="0.0154%" height="15" fill="rgb(240,16,54)"/><text x="25.6610%" y="863.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="25.4110%" y="837" width="0.0154%" height="15" fill="rgb(211,209,29)"/><text x="25.6610%" y="847.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="25.4110%" y="821" width="0.0154%" height="15" fill="rgb(226,228,24)"/><text x="25.6610%" y="831.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="25.4110%" y="805" width="0.0154%" height="15" fill="rgb(222,84,9)"/><text x="25.6610%" y="815.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="25.4110%" y="789" width="0.0154%" height="15" fill="rgb(234,203,30)"/><text x="25.6610%" y="799.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="25.4110%" y="773" width="0.0154%" height="15" fill="rgb(238,109,14)"/><text x="25.6610%" y="783.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect x="25.4110%" y="757" width="0.0154%" height="15" fill="rgb(233,206,34)"/><text x="25.6610%" y="767.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (1 samples, 0.02%)</title><rect x="25.4110%" y="741" width="0.0154%" height="15" fill="rgb(220,167,47)"/><text x="25.6610%" y="751.50"></text></g><g><title>arena_slab_reg_alloc (1 samples, 0.02%)</title><rect x="25.4110%" y="725" width="0.0154%" height="15" fill="rgb(238,105,10)"/><text x="25.6610%" y="735.50"></text></g><g><title>bitmap_sfu (1 samples, 0.02%)</title><rect x="25.4110%" y="709" width="0.0154%" height="15" fill="rgb(213,227,17)"/><text x="25.6610%" y="719.50"></text></g><g><title>bitmap_set (1 samples, 0.02%)</title><rect x="25.4110%" y="693" width="0.0154%" height="15" fill="rgb(217,132,38)"/><text x="25.6610%" y="703.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (70 samples, 1.08%)</title><rect x="24.3663%" y="1093" width="1.0754%" height="15" fill="rgb(242,146,4)"/><text x="24.6163%" y="1103.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="25.4110%" y="1077" width="0.0307%" height="15" fill="rgb(212,61,9)"/><text x="25.6610%" y="1087.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="25.4110%" y="1061" width="0.0307%" height="15" fill="rgb(247,126,22)"/><text x="25.6610%" y="1071.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="25.4110%" y="1045" width="0.0307%" height="15" fill="rgb(220,196,2)"/><text x="25.6610%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="25.4110%" y="1029" width="0.0307%" height="15" fill="rgb(208,46,4)"/><text x="25.6610%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.03%)</title><rect x="25.4110%" y="1013" width="0.0307%" height="15" fill="rgb(252,104,46)"/><text x="25.6610%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.03%)</title><rect x="25.4110%" y="997" width="0.0307%" height="15" fill="rgb(237,152,48)"/><text x="25.6610%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.03%)</title><rect x="25.4110%" y="981" width="0.0307%" height="15" fill="rgb(221,59,37)"/><text x="25.6610%" y="991.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.02%)</title><rect x="25.4263%" y="965" width="0.0154%" height="15" fill="rgb(209,202,51)"/><text x="25.6763%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="25.4263%" y="949" width="0.0154%" height="15" fill="rgb(228,81,30)"/><text x="25.6763%" y="959.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="25.4263%" y="933" width="0.0154%" height="15" fill="rgb(227,42,39)"/><text x="25.6763%" y="943.50"></text></g><g><title>&lt;model::rho_types::ParWithRandom as core::clone::Clone&gt;::clone (72 samples, 1.11%)</title><rect x="24.3509%" y="1125" width="1.1062%" height="15" fill="rgb(221,26,2)"/><text x="24.6009%" y="1135.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (71 samples, 1.09%)</title><rect x="24.3663%" y="1109" width="1.0908%" height="15" fill="rgb(254,61,31)"/><text x="24.6163%" y="1119.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="25.4417%" y="1093" width="0.0154%" height="15" fill="rgb(222,173,38)"/><text x="25.6917%" y="1103.50"></text></g><g><title>&lt;rho_runtime::storage::TaggedContinuation as core::clone::Clone&gt;::clone (73 samples, 1.12%)</title><rect x="24.3509%" y="1141" width="1.1215%" height="15" fill="rgb(218,50,12)"/><text x="24.6009%" y="1151.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="25.4571%" y="1125" width="0.0154%" height="15" fill="rgb(223,88,40)"/><text x="25.7071%" y="1135.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.15%)</title><rect x="25.4724%" y="1141" width="0.1536%" height="15" fill="rgb(237,54,19)"/><text x="25.7224%" y="1151.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="25.6261%" y="1125" width="0.0154%" height="15" fill="rgb(251,129,25)"/><text x="25.8761%" y="1135.50"></text></g><g><title>isfree (1 samples, 0.02%)</title><rect x="25.6261%" y="1109" width="0.0154%" height="15" fill="rgb(238,97,19)"/><text x="25.8761%" y="1119.50"></text></g><g><title>isdalloct (1 samples, 0.02%)</title><rect x="25.6261%" y="1093" width="0.0154%" height="15" fill="rgb(240,169,18)"/><text x="25.8761%" y="1103.50"></text></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect x="25.6261%" y="1077" width="0.0154%" height="15" fill="rgb(230,187,49)"/><text x="25.8761%" y="1087.50"></text></g><g><title>sz_size2index (1 samples, 0.02%)</title><rect x="25.6261%" y="1061" width="0.0154%" height="15" fill="rgb(209,44,26)"/><text x="25.8761%" y="1071.50"></text></g><g><title>sz_size2index_lookup (1 samples, 0.02%)</title><rect x="25.6261%" y="1045" width="0.0154%" height="15" fill="rgb(244,0,6)"/><text x="25.8761%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.09%)</title><rect x="25.6414%" y="1093" width="0.0922%" height="15" fill="rgb(248,18,21)"/><text x="25.8914%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::GUnforgeable]&gt; (6 samples, 0.09%)</title><rect x="25.6414%" y="1077" width="0.0922%" height="15" fill="rgb(245,180,19)"/><text x="25.8914%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::GUnforgeable&gt; (6 samples, 0.09%)</title><rect x="25.6414%" y="1061" width="0.0922%" height="15" fill="rgb(252,118,36)"/><text x="25.8914%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::g_unforgeable::UnfInstance&gt;&gt; (6 samples, 0.09%)</title><rect x="25.6414%" y="1045" width="0.0922%" height="15" fill="rgb(210,224,19)"/><text x="25.8914%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::g_unforgeable::UnfInstance&gt; (6 samples, 0.09%)</title><rect x="25.6414%" y="1029" width="0.0922%" height="15" fill="rgb(218,30,24)"/><text x="25.8914%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::GPrivate&gt; (6 samples, 0.09%)</title><rect x="25.6414%" y="1013" width="0.0922%" height="15" fill="rgb(219,75,50)"/><text x="25.8914%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (6 samples, 0.09%)</title><rect x="25.6414%" y="997" width="0.0922%" height="15" fill="rgb(234,72,50)"/><text x="25.8914%" y="1007.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (6 samples, 0.09%)</title><rect x="25.6414%" y="981" width="0.0922%" height="15" fill="rgb(219,100,48)"/><text x="25.8914%" y="991.50"></text></g><g><title>bytes::bytes::shared_drop (5 samples, 0.08%)</title><rect x="25.6568%" y="965" width="0.0768%" height="15" fill="rgb(253,5,41)"/><text x="25.9068%" y="975.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (5 samples, 0.08%)</title><rect x="25.6568%" y="949" width="0.0768%" height="15" fill="rgb(247,181,11)"/><text x="25.9068%" y="959.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (5 samples, 0.08%)</title><rect x="25.6568%" y="933" width="0.0768%" height="15" fill="rgb(222,223,25)"/><text x="25.9068%" y="943.50"></text></g><g><title>bytes::bytes::release_shared (5 samples, 0.08%)</title><rect x="25.6568%" y="917" width="0.0768%" height="15" fill="rgb(214,198,28)"/><text x="25.9068%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4 samples, 0.06%)</title><rect x="25.6721%" y="901" width="0.0615%" height="15" fill="rgb(230,46,43)"/><text x="25.9221%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_sub (4 samples, 0.06%)</title><rect x="25.6721%" y="885" width="0.0615%" height="15" fill="rgb(233,65,53)"/><text x="25.9221%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;(blake3::Hash,model::rho_types::Par)&gt; (9 samples, 0.14%)</title><rect x="25.6261%" y="1141" width="0.1383%" height="15" fill="rgb(221,121,27)"/><text x="25.8761%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (8 samples, 0.12%)</title><rect x="25.6414%" y="1125" width="0.1229%" height="15" fill="rgb(247,70,47)"/><text x="25.8914%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::GUnforgeable&gt;&gt; (8 samples, 0.12%)</title><rect x="25.6414%" y="1109" width="0.1229%" height="15" fill="rgb(228,85,35)"/><text x="25.8914%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::GUnforgeable&gt;&gt; (2 samples, 0.03%)</title><rect x="25.7336%" y="1093" width="0.0307%" height="15" fill="rgb(209,50,18)"/><text x="25.9836%" y="1103.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="25.7336%" y="1077" width="0.0307%" height="15" fill="rgb(250,19,35)"/><text x="25.9836%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.03%)</title><rect x="25.7336%" y="1061" width="0.0307%" height="15" fill="rgb(253,107,29)"/><text x="25.9836%" y="1071.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.03%)</title><rect x="25.7336%" y="1045" width="0.0307%" height="15" fill="rgb(252,179,29)"/><text x="25.9836%" y="1055.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.03%)</title><rect x="25.7336%" y="1029" width="0.0307%" height="15" fill="rgb(238,194,6)"/><text x="25.9836%" y="1039.50"></text></g><g><title>isfree (1 samples, 0.02%)</title><rect x="25.7490%" y="1013" width="0.0154%" height="15" fill="rgb(238,164,29)"/><text x="25.9990%" y="1023.50"></text></g><g><title>isdalloct (1 samples, 0.02%)</title><rect x="25.7490%" y="997" width="0.0154%" height="15" fill="rgb(224,25,9)"/><text x="25.9990%" y="1007.50"></text></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect x="25.7490%" y="981" width="0.0154%" height="15" fill="rgb(244,153,23)"/><text x="25.9990%" y="991.50"></text></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect x="25.7490%" y="965" width="0.0154%" height="15" fill="rgb(212,203,14)"/><text x="25.9990%" y="975.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::push (1 samples, 0.02%)</title><rect x="25.7643%" y="1141" width="0.0154%" height="15" fill="rgb(220,164,20)"/><text x="26.0143%" y="1151.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="25.7643%" y="1125" width="0.0154%" height="15" fill="rgb(222,203,48)"/><text x="26.0143%" y="1135.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="25.7643%" y="1109" width="0.0154%" height="15" fill="rgb(215,159,22)"/><text x="26.0143%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="25.7797%" y="1125" width="0.0307%" height="15" fill="rgb(216,183,47)"/><text x="26.0297%" y="1135.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="25.7797%" y="1109" width="0.0307%" height="15" fill="rgb(229,195,25)"/><text x="26.0297%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.03%)</title><rect x="25.7797%" y="1093" width="0.0307%" height="15" fill="rgb(224,132,51)"/><text x="26.0297%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.03%)</title><rect x="25.7797%" y="1077" width="0.0307%" height="15" fill="rgb(240,63,7)"/><text x="26.0297%" y="1087.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (3 samples, 0.05%)</title><rect x="25.8104%" y="1125" width="0.0461%" height="15" fill="rgb(249,182,41)"/><text x="26.0604%" y="1135.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send::{{closure}} (3 samples, 0.05%)</title><rect x="25.8104%" y="1109" width="0.0461%" height="15" fill="rgb(243,47,26)"/><text x="26.0604%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="25.8258%" y="1093" width="0.0307%" height="15" fill="rgb(233,48,2)"/><text x="26.0758%" y="1103.50"></text></g><g><title>tokio::sync::oneshot::State::set_complete (3 samples, 0.05%)</title><rect x="25.8565%" y="1109" width="0.0461%" height="15" fill="rgb(244,165,34)"/><text x="26.1065%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (3 samples, 0.05%)</title><rect x="25.8565%" y="1093" width="0.0461%" height="15" fill="rgb(207,89,7)"/><text x="26.1065%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_or (3 samples, 0.05%)</title><rect x="25.8565%" y="1077" width="0.0461%" height="15" fill="rgb(244,117,36)"/><text x="26.1065%" y="1087.50"></text></g><g><title>async_executor::Sleepers::notify (2 samples, 0.03%)</title><rect x="25.9180%" y="997" width="0.0307%" height="15" fill="rgb(226,144,34)"/><text x="26.1680%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.02%)</title><rect x="25.9333%" y="981" width="0.0154%" height="15" fill="rgb(213,23,19)"/><text x="26.1833%" y="991.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="25.9333%" y="965" width="0.0154%" height="15" fill="rgb(217,75,12)"/><text x="26.1833%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (1 samples, 0.02%)</title><rect x="25.9487%" y="997" width="0.0154%" height="15" fill="rgb(224,159,17)"/><text x="26.1987%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="25.9487%" y="981" width="0.0154%" height="15" fill="rgb(217,118,1)"/><text x="26.1987%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.02%)</title><rect x="25.9487%" y="965" width="0.0154%" height="15" fill="rgb(232,180,48)"/><text x="26.1987%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.02%)</title><rect x="25.9487%" y="949" width="0.0154%" height="15" fill="rgb(230,27,33)"/><text x="26.1987%" y="959.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="25.9487%" y="933" width="0.0154%" height="15" fill="rgb(205,31,21)"/><text x="26.1987%" y="943.50"></text></g><g><title>__pthread_cond_signal (62 samples, 0.95%)</title><rect x="25.9948%" y="917" width="0.9525%" height="15" fill="rgb(253,59,4)"/><text x="26.2448%" y="927.50"></text></g><g><title>[unknown] (53 samples, 0.81%)</title><rect x="26.1330%" y="901" width="0.8143%" height="15" fill="rgb(224,201,9)"/><text x="26.3830%" y="911.50"></text></g><g><title>[unknown] (51 samples, 0.78%)</title><rect x="26.1638%" y="885" width="0.7835%" height="15" fill="rgb(229,206,30)"/><text x="26.4138%" y="895.50"></text></g><g><title>[unknown] (50 samples, 0.77%)</title><rect x="26.1791%" y="869" width="0.7682%" height="15" fill="rgb(212,67,47)"/><text x="26.4291%" y="879.50"></text></g><g><title>[unknown] (49 samples, 0.75%)</title><rect x="26.1945%" y="853" width="0.7528%" height="15" fill="rgb(211,96,50)"/><text x="26.4445%" y="863.50"></text></g><g><title>[unknown] (48 samples, 0.74%)</title><rect x="26.2099%" y="837" width="0.7374%" height="15" fill="rgb(252,114,18)"/><text x="26.4599%" y="847.50"></text></g><g><title>[unknown] (41 samples, 0.63%)</title><rect x="26.3174%" y="821" width="0.6299%" height="15" fill="rgb(223,58,37)"/><text x="26.5674%" y="831.50"></text></g><g><title>[unknown] (38 samples, 0.58%)</title><rect x="26.3635%" y="805" width="0.5838%" height="15" fill="rgb(237,70,4)"/><text x="26.6135%" y="815.50"></text></g><g><title>[unknown] (33 samples, 0.51%)</title><rect x="26.4403%" y="789" width="0.5070%" height="15" fill="rgb(244,85,46)"/><text x="26.6903%" y="799.50"></text></g><g><title>[unknown] (22 samples, 0.34%)</title><rect x="26.6093%" y="773" width="0.3380%" height="15" fill="rgb(223,39,52)"/><text x="26.8593%" y="783.50"></text></g><g><title>[unknown] (17 samples, 0.26%)</title><rect x="26.6861%" y="757" width="0.2612%" height="15" fill="rgb(218,200,14)"/><text x="26.9361%" y="767.50"></text></g><g><title>[unknown] (10 samples, 0.15%)</title><rect x="26.7937%" y="741" width="0.1536%" height="15" fill="rgb(208,171,16)"/><text x="27.0437%" y="751.50"></text></g><g><title>[unknown] (4 samples, 0.06%)</title><rect x="26.8859%" y="725" width="0.0615%" height="15" fill="rgb(234,200,18)"/><text x="27.1359%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="26.9319%" y="709" width="0.0154%" height="15" fill="rgb(228,45,11)"/><text x="27.1819%" y="719.50"></text></g><g><title>core::mem::drop (1 samples, 0.02%)</title><rect x="26.9473%" y="917" width="0.0154%" height="15" fill="rgb(237,182,11)"/><text x="27.1973%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (1 samples, 0.02%)</title><rect x="26.9473%" y="901" width="0.0154%" height="15" fill="rgb(241,175,49)"/><text x="27.1973%" y="911.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="26.9473%" y="885" width="0.0154%" height="15" fill="rgb(247,38,35)"/><text x="27.1973%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.02%)</title><rect x="26.9473%" y="869" width="0.0154%" height="15" fill="rgb(228,39,49)"/><text x="27.1973%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.02%)</title><rect x="26.9473%" y="853" width="0.0154%" height="15" fill="rgb(226,101,26)"/><text x="27.1973%" y="863.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="26.9473%" y="837" width="0.0154%" height="15" fill="rgb(206,141,19)"/><text x="27.1973%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (1 samples, 0.02%)</title><rect x="26.9627%" y="917" width="0.0154%" height="15" fill="rgb(211,200,13)"/><text x="27.2127%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_swap (1 samples, 0.02%)</title><rect x="26.9627%" y="901" width="0.0154%" height="15" fill="rgb(241,121,6)"/><text x="27.2127%" y="911.50"></text></g><g><title>parking::Unparker::unpark (68 samples, 1.04%)</title><rect x="25.9640%" y="949" width="1.0447%" height="15" fill="rgb(234,221,29)"/><text x="26.2140%" y="959.50"></text></g><g><title>parking::Inner::unpark (66 samples, 1.01%)</title><rect x="25.9948%" y="933" width="1.0140%" height="15" fill="rgb(229,136,5)"/><text x="26.2448%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.03%)</title><rect x="26.9780%" y="917" width="0.0307%" height="15" fill="rgb(238,36,11)"/><text x="27.2280%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (2 samples, 0.03%)</title><rect x="26.9780%" y="901" width="0.0307%" height="15" fill="rgb(251,55,41)"/><text x="27.2280%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (2 samples, 0.03%)</title><rect x="26.9780%" y="885" width="0.0307%" height="15" fill="rgb(242,34,40)"/><text x="27.2280%" y="895.50"></text></g><g><title>__GI___pthread_mutex_lock (2 samples, 0.03%)</title><rect x="26.9780%" y="869" width="0.0307%" height="15" fill="rgb(215,42,17)"/><text x="27.2280%" y="879.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (69 samples, 1.06%)</title><rect x="25.9640%" y="965" width="1.0601%" height="15" fill="rgb(207,44,46)"/><text x="26.2140%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.02%)</title><rect x="27.0088%" y="949" width="0.0154%" height="15" fill="rgb(211,206,28)"/><text x="27.2588%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.02%)</title><rect x="27.0088%" y="933" width="0.0154%" height="15" fill="rgb(237,167,16)"/><text x="27.2588%" y="943.50"></text></g><g><title>async_io::driver::block_on::IO_POLLING::__getit (1 samples, 0.02%)</title><rect x="27.0088%" y="917" width="0.0154%" height="15" fill="rgb(233,66,6)"/><text x="27.2588%" y="927.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="27.0088%" y="901" width="0.0154%" height="15" fill="rgb(246,123,29)"/><text x="27.2588%" y="911.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="27.0088%" y="885" width="0.0154%" height="15" fill="rgb(209,62,40)"/><text x="27.2588%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="27.0088%" y="869" width="0.0154%" height="15" fill="rgb(218,4,25)"/><text x="27.2588%" y="879.50"></text></g><g><title>core::task::wake::Waker::wake (70 samples, 1.08%)</title><rect x="25.9640%" y="997" width="1.0754%" height="15" fill="rgb(253,91,49)"/><text x="26.2140%" y="1007.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (70 samples, 1.08%)</title><rect x="25.9640%" y="981" width="1.0754%" height="15" fill="rgb(228,155,29)"/><text x="26.2140%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="27.0241%" y="965" width="0.0154%" height="15" fill="rgb(243,57,37)"/><text x="27.2741%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="27.0241%" y="949" width="0.0154%" height="15" fill="rgb(244,167,17)"/><text x="27.2741%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.02%)</title><rect x="27.0241%" y="933" width="0.0154%" height="15" fill="rgb(207,181,38)"/><text x="27.2741%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.02%)</title><rect x="27.0241%" y="917" width="0.0154%" height="15" fill="rgb(211,8,23)"/><text x="27.2741%" y="927.50"></text></g><g><title>async_executor::State::notify (75 samples, 1.15%)</title><rect x="25.9026%" y="1013" width="1.1523%" height="15" fill="rgb(235,11,44)"/><text x="26.1526%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.02%)</title><rect x="27.0395%" y="997" width="0.0154%" height="15" fill="rgb(248,18,52)"/><text x="27.2895%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.02%)</title><rect x="27.0395%" y="981" width="0.0154%" height="15" fill="rgb(208,4,7)"/><text x="27.2895%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1 samples, 0.02%)</title><rect x="27.0395%" y="965" width="0.0154%" height="15" fill="rgb(240,17,39)"/><text x="27.2895%" y="975.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.02%)</title><rect x="27.0395%" y="949" width="0.0154%" height="15" fill="rgb(207,170,3)"/><text x="27.2895%" y="959.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (76 samples, 1.17%)</title><rect x="25.9026%" y="1029" width="1.1676%" height="15" fill="rgb(236,100,52)"/><text x="26.1526%" y="1039.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1 samples, 0.02%)</title><rect x="27.0548%" y="1013" width="0.0154%" height="15" fill="rgb(246,78,51)"/><text x="27.3048%" y="1023.50"></text></g><g><title>rho_runtime::storage::transit::Transit::produce (183 samples, 2.81%)</title><rect x="24.2741%" y="1157" width="2.8115%" height="15" fill="rgb(211,17,15)"/><text x="24.5241%" y="1167.50">rh..</text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (85 samples, 1.31%)</title><rect x="25.7797%" y="1141" width="1.3059%" height="15" fill="rgb(209,59,46)"/><text x="26.0297%" y="1151.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::complete (80 samples, 1.23%)</title><rect x="25.8565%" y="1125" width="1.2291%" height="15" fill="rgb(210,92,25)"/><text x="26.1065%" y="1135.50"></text></g><g><title>tokio::sync::oneshot::Task::with_task (77 samples, 1.18%)</title><rect x="25.9026%" y="1109" width="1.1830%" height="15" fill="rgb(238,174,52)"/><text x="26.1526%" y="1119.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (77 samples, 1.18%)</title><rect x="25.9026%" y="1093" width="1.1830%" height="15" fill="rgb(230,73,7)"/><text x="26.1526%" y="1103.50"></text></g><g><title>tokio::sync::oneshot::Task::with_task::{{closure}} (77 samples, 1.18%)</title><rect x="25.9026%" y="1077" width="1.1830%" height="15" fill="rgb(243,124,40)"/><text x="26.1526%" y="1087.50"></text></g><g><title>core::ops::function::FnOnce::call_once (77 samples, 1.18%)</title><rect x="25.9026%" y="1061" width="1.1830%" height="15" fill="rgb(244,170,11)"/><text x="26.1526%" y="1071.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (77 samples, 1.18%)</title><rect x="25.9026%" y="1045" width="1.1830%" height="15" fill="rgb(207,114,54)"/><text x="26.1526%" y="1055.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (1 samples, 0.02%)</title><rect x="27.0702%" y="1029" width="0.0154%" height="15" fill="rgb(205,42,20)"/><text x="27.3202%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.02%)</title><rect x="27.0702%" y="1013" width="0.0154%" height="15" fill="rgb(230,30,28)"/><text x="27.3202%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.02%)</title><rect x="27.0702%" y="997" width="0.0154%" height="15" fill="rgb(205,73,54)"/><text x="27.3202%" y="1007.50"></text></g><g><title>[libc-2.31.so] (22 samples, 0.34%)</title><rect x="27.0856%" y="1109" width="0.3380%" height="15" fill="rgb(254,227,23)"/><text x="27.3356%" y="1119.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (36 samples, 0.55%)</title><rect x="27.0856%" y="1141" width="0.5531%" height="15" fill="rgb(228,202,34)"/><text x="27.3356%" y="1151.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send::{{closure}} (36 samples, 0.55%)</title><rect x="27.0856%" y="1125" width="0.5531%" height="15" fill="rgb(222,225,37)"/><text x="27.3356%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;rho_runtime::storage::transit::Transit&gt;&gt; (14 samples, 0.22%)</title><rect x="27.4236%" y="1109" width="0.2151%" height="15" fill="rgb(221,14,54)"/><text x="27.6736%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,676 samples, 25.75%)</title><rect x="3.8255%" y="1189" width="25.7490%" height="15" fill="rgb(254,102,2)"/><text x="4.0755%" y="1199.50">&lt;core::future::from_generator::GenFuture&lt;..</text></g><g><title>rho_runtime::storage::coordinator::Coordinator::handle_produce::{{closure}} (345 samples, 5.30%)</title><rect x="24.2741%" y="1173" width="5.3004%" height="15" fill="rgb(232,104,17)"/><text x="24.5241%" y="1183.50">rho_ru..</text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (162 samples, 2.49%)</title><rect x="27.0856%" y="1157" width="2.4889%" height="15" fill="rgb(250,220,14)"/><text x="27.3356%" y="1167.50">to..</text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::complete (126 samples, 1.94%)</title><rect x="27.6387%" y="1141" width="1.9358%" height="15" fill="rgb(241,158,9)"/><text x="27.8887%" y="1151.50">t..</text></g><g><title>tokio::sync::oneshot::State::set_complete (125 samples, 1.92%)</title><rect x="27.6540%" y="1125" width="1.9204%" height="15" fill="rgb(246,9,43)"/><text x="27.9040%" y="1135.50">t..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (125 samples, 1.92%)</title><rect x="27.6540%" y="1109" width="1.9204%" height="15" fill="rgb(206,73,33)"/><text x="27.9040%" y="1119.50">c..</text></g><g><title>core::sync::atomic::atomic_or (125 samples, 1.92%)</title><rect x="27.6540%" y="1093" width="1.9204%" height="15" fill="rgb(222,79,8)"/><text x="27.9040%" y="1103.50">c..</text></g><g><title>&lt;model::locally_free::ExprInstanceLocallyFree as model::locally_free::HasLocallyFree&lt;model::rho_types::expr::ExprInstance&gt;&gt;::locally_free (1 samples, 0.02%)</title><rect x="29.5744%" y="1189" width="0.0154%" height="15" fill="rgb(234,8,54)"/><text x="29.8244%" y="1199.50"></text></g><g><title>&lt;model::ordering::ScoreTreeIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="29.5898%" y="1189" width="0.0154%" height="15" fill="rgb(209,134,38)"/><text x="29.8398%" y="1199.50"></text></g><g><title>&lt;model::ordering::sort_par::ParScoreTreeIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="29.6052%" y="1189" width="0.0307%" height="15" fill="rgb(230,127,29)"/><text x="29.8552%" y="1199.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (3 samples, 0.05%)</title><rect x="29.6359%" y="1189" width="0.0461%" height="15" fill="rgb(242,44,41)"/><text x="29.8859%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="29.6513%" y="1173" width="0.0307%" height="15" fill="rgb(222,56,43)"/><text x="29.9013%" y="1183.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.03%)</title><rect x="29.6513%" y="1157" width="0.0307%" height="15" fill="rgb(238,39,47)"/><text x="29.9013%" y="1167.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.03%)</title><rect x="29.6513%" y="1141" width="0.0307%" height="15" fill="rgb(226,79,43)"/><text x="29.9013%" y="1151.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash::traverse (1 samples, 0.02%)</title><rect x="29.6820%" y="1189" width="0.0154%" height="15" fill="rgb(242,105,53)"/><text x="29.9320%" y="1199.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.08%)</title><rect x="29.7127%" y="533" width="0.0768%" height="15" fill="rgb(251,132,46)"/><text x="29.9627%" y="543.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.05%)</title><rect x="29.7434%" y="517" width="0.0461%" height="15" fill="rgb(231,77,14)"/><text x="29.9934%" y="527.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (7 samples, 0.11%)</title><rect x="29.7127%" y="549" width="0.1075%" height="15" fill="rgb(240,135,9)"/><text x="29.9627%" y="559.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="29.7895%" y="533" width="0.0307%" height="15" fill="rgb(248,109,14)"/><text x="30.0395%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.03%)</title><rect x="29.8202%" y="549" width="0.0307%" height="15" fill="rgb(227,146,52)"/><text x="30.0702%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.03%)</title><rect x="29.8202%" y="533" width="0.0307%" height="15" fill="rgb(232,54,3)"/><text x="30.0702%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.03%)</title><rect x="29.8202%" y="517" width="0.0307%" height="15" fill="rgb(229,201,43)"/><text x="30.0702%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.03%)</title><rect x="29.8202%" y="501" width="0.0307%" height="15" fill="rgb(252,161,33)"/><text x="30.0702%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.03%)</title><rect x="29.8202%" y="485" width="0.0307%" height="15" fill="rgb(226,146,40)"/><text x="30.0702%" y="495.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.03%)</title><rect x="29.8202%" y="469" width="0.0307%" height="15" fill="rgb(219,47,25)"/><text x="30.0702%" y="479.50"></text></g><g><title>_rjem_mallocx (2 samples, 0.03%)</title><rect x="29.8202%" y="453" width="0.0307%" height="15" fill="rgb(250,135,13)"/><text x="30.0702%" y="463.50"></text></g><g><title>imalloc (2 samples, 0.03%)</title><rect x="29.8202%" y="437" width="0.0307%" height="15" fill="rgb(219,229,18)"/><text x="30.0702%" y="447.50"></text></g><g><title>imalloc_body (2 samples, 0.03%)</title><rect x="29.8202%" y="421" width="0.0307%" height="15" fill="rgb(217,152,27)"/><text x="30.0702%" y="431.50"></text></g><g><title>imalloc_no_sample (2 samples, 0.03%)</title><rect x="29.8202%" y="405" width="0.0307%" height="15" fill="rgb(225,71,47)"/><text x="30.0702%" y="415.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="29.8356%" y="389" width="0.0154%" height="15" fill="rgb(220,139,14)"/><text x="30.0856%" y="399.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="29.8356%" y="373" width="0.0154%" height="15" fill="rgb(247,54,32)"/><text x="30.0856%" y="383.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="29.8356%" y="357" width="0.0154%" height="15" fill="rgb(252,131,39)"/><text x="30.0856%" y="367.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect x="29.8356%" y="341" width="0.0154%" height="15" fill="rgb(210,108,39)"/><text x="30.0856%" y="351.50"></text></g><g><title>&lt;rho_runtime::storage::TaggedContinuation as core::clone::Clone&gt;::clone (12 samples, 0.18%)</title><rect x="29.6973%" y="1189" width="0.1844%" height="15" fill="rgb(205,23,29)"/><text x="29.9473%" y="1199.50"></text></g><g><title>&lt;model::rho_types::ParWithRandom as core::clone::Clone&gt;::clone (12 samples, 0.18%)</title><rect x="29.6973%" y="1173" width="0.1844%" height="15" fill="rgb(246,139,46)"/><text x="29.9473%" y="1183.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 0.18%)</title><rect x="29.6973%" y="1157" width="0.1844%" height="15" fill="rgb(250,81,26)"/><text x="29.9473%" y="1167.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (12 samples, 0.18%)</title><rect x="29.6973%" y="1141" width="0.1844%" height="15" fill="rgb(214,104,7)"/><text x="29.9473%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.18%)</title><rect x="29.6973%" y="1125" width="0.1844%" height="15" fill="rgb(233,189,8)"/><text x="29.9473%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.18%)</title><rect x="29.6973%" y="1109" width="0.1844%" height="15" fill="rgb(228,141,17)"/><text x="29.9473%" y="1119.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.18%)</title><rect x="29.6973%" y="1093" width="0.1844%" height="15" fill="rgb(247,157,1)"/><text x="29.9473%" y="1103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.18%)</title><rect x="29.6973%" y="1077" width="0.1844%" height="15" fill="rgb(249,225,5)"/><text x="29.9473%" y="1087.50"></text></g><g><title>&lt;model::rho_types::Match as core::clone::Clone&gt;::clone (12 samples, 0.18%)</title><rect x="29.6973%" y="1061" width="0.1844%" height="15" fill="rgb(242,55,13)"/><text x="29.9473%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.18%)</title><rect x="29.6973%" y="1045" width="0.1844%" height="15" fill="rgb(230,49,50)"/><text x="29.9473%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.18%)</title><rect x="29.6973%" y="1029" width="0.1844%" height="15" fill="rgb(241,111,38)"/><text x="29.9473%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.18%)</title><rect x="29.6973%" y="1013" width="0.1844%" height="15" fill="rgb(252,155,4)"/><text x="29.9473%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.18%)</title><rect x="29.6973%" y="997" width="0.1844%" height="15" fill="rgb(212,69,32)"/><text x="29.9473%" y="1007.50"></text></g><g><title>&lt;model::rho_types::MatchCase as core::clone::Clone&gt;::clone (12 samples, 0.18%)</title><rect x="29.6973%" y="981" width="0.1844%" height="15" fill="rgb(243,107,47)"/><text x="29.9473%" y="991.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 0.18%)</title><rect x="29.6973%" y="965" width="0.1844%" height="15" fill="rgb(247,130,12)"/><text x="29.9473%" y="975.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (12 samples, 0.18%)</title><rect x="29.6973%" y="949" width="0.1844%" height="15" fill="rgb(233,74,16)"/><text x="29.9473%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.18%)</title><rect x="29.6973%" y="933" width="0.1844%" height="15" fill="rgb(208,58,18)"/><text x="29.9473%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.18%)</title><rect x="29.6973%" y="917" width="0.1844%" height="15" fill="rgb(242,225,1)"/><text x="29.9473%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.18%)</title><rect x="29.6973%" y="901" width="0.1844%" height="15" fill="rgb(249,39,40)"/><text x="29.9473%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.18%)</title><rect x="29.6973%" y="885" width="0.1844%" height="15" fill="rgb(207,72,44)"/><text x="29.9473%" y="895.50"></text></g><g><title>&lt;model::rho_types::Send as core::clone::Clone&gt;::clone (12 samples, 0.18%)</title><rect x="29.6973%" y="869" width="0.1844%" height="15" fill="rgb(215,193,12)"/><text x="29.9473%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.18%)</title><rect x="29.6973%" y="853" width="0.1844%" height="15" fill="rgb(248,41,39)"/><text x="29.9473%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.18%)</title><rect x="29.6973%" y="837" width="0.1844%" height="15" fill="rgb(253,85,4)"/><text x="29.9473%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.18%)</title><rect x="29.6973%" y="821" width="0.1844%" height="15" fill="rgb(243,70,31)"/><text x="29.9473%" y="831.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.18%)</title><rect x="29.6973%" y="805" width="0.1844%" height="15" fill="rgb(253,195,26)"/><text x="29.9473%" y="815.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (12 samples, 0.18%)</title><rect x="29.6973%" y="789" width="0.1844%" height="15" fill="rgb(243,42,11)"/><text x="29.9473%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.18%)</title><rect x="29.6973%" y="773" width="0.1844%" height="15" fill="rgb(239,66,17)"/><text x="29.9473%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.18%)</title><rect x="29.6973%" y="757" width="0.1844%" height="15" fill="rgb(217,132,21)"/><text x="29.9473%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.18%)</title><rect x="29.6973%" y="741" width="0.1844%" height="15" fill="rgb(252,202,21)"/><text x="29.9473%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.18%)</title><rect x="29.6973%" y="725" width="0.1844%" height="15" fill="rgb(233,98,36)"/><text x="29.9473%" y="735.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (12 samples, 0.18%)</title><rect x="29.6973%" y="709" width="0.1844%" height="15" fill="rgb(216,153,54)"/><text x="29.9473%" y="719.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 0.18%)</title><rect x="29.6973%" y="693" width="0.1844%" height="15" fill="rgb(250,99,7)"/><text x="29.9473%" y="703.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (12 samples, 0.18%)</title><rect x="29.6973%" y="677" width="0.1844%" height="15" fill="rgb(207,56,50)"/><text x="29.9473%" y="687.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (12 samples, 0.18%)</title><rect x="29.6973%" y="661" width="0.1844%" height="15" fill="rgb(244,61,34)"/><text x="29.9473%" y="671.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (12 samples, 0.18%)</title><rect x="29.6973%" y="645" width="0.1844%" height="15" fill="rgb(241,50,38)"/><text x="29.9473%" y="655.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (12 samples, 0.18%)</title><rect x="29.6973%" y="629" width="0.1844%" height="15" fill="rgb(212,166,30)"/><text x="29.9473%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.18%)</title><rect x="29.6973%" y="613" width="0.1844%" height="15" fill="rgb(249,127,32)"/><text x="29.9473%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.18%)</title><rect x="29.6973%" y="597" width="0.1844%" height="15" fill="rgb(209,103,0)"/><text x="29.9473%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.18%)</title><rect x="29.6973%" y="581" width="0.1844%" height="15" fill="rgb(238,209,51)"/><text x="29.9473%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.18%)</title><rect x="29.6973%" y="565" width="0.1844%" height="15" fill="rgb(237,56,23)"/><text x="29.9473%" y="575.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2 samples, 0.03%)</title><rect x="29.8510%" y="549" width="0.0307%" height="15" fill="rgb(215,153,46)"/><text x="30.1010%" y="559.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="29.8510%" y="533" width="0.0307%" height="15" fill="rgb(224,49,31)"/><text x="30.1010%" y="543.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="29.8817%" y="1189" width="0.0154%" height="15" fill="rgb(250,18,42)"/><text x="30.1317%" y="1199.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="29.8817%" y="1173" width="0.0154%" height="15" fill="rgb(215,176,39)"/><text x="30.1317%" y="1183.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="29.8817%" y="1157" width="0.0154%" height="15" fill="rgb(223,77,29)"/><text x="30.1317%" y="1167.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.02%)</title><rect x="29.8971%" y="1189" width="0.0154%" height="15" fill="rgb(234,94,52)"/><text x="30.1471%" y="1199.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.17%)</title><rect x="29.9278%" y="1173" width="0.1690%" height="15" fill="rgb(220,154,50)"/><text x="30.1778%" y="1183.50"></text></g><g><title>extent_nfree_get (1 samples, 0.02%)</title><rect x="30.1429%" y="981" width="0.0154%" height="15" fill="rgb(212,11,10)"/><text x="30.3929%" y="991.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (4 samples, 0.06%)</title><rect x="30.1122%" y="1029" width="0.0615%" height="15" fill="rgb(205,166,19)"/><text x="30.3622%" y="1039.50"></text></g><g><title>arena_dalloc_bin_locked_impl (4 samples, 0.06%)</title><rect x="30.1122%" y="1013" width="0.0615%" height="15" fill="rgb(244,198,16)"/><text x="30.3622%" y="1023.50"></text></g><g><title>arena_bin_lower_slab (2 samples, 0.03%)</title><rect x="30.1429%" y="997" width="0.0307%" height="15" fill="rgb(219,69,12)"/><text x="30.3929%" y="1007.50"></text></g><g><title>extent_snad_comp (1 samples, 0.02%)</title><rect x="30.1582%" y="981" width="0.0154%" height="15" fill="rgb(245,30,7)"/><text x="30.4082%" y="991.50"></text></g><g><title>extent_sn_comp (1 samples, 0.02%)</title><rect x="30.1582%" y="965" width="0.0154%" height="15" fill="rgb(218,221,48)"/><text x="30.4082%" y="975.50"></text></g><g><title>extent_arena_get (3 samples, 0.05%)</title><rect x="30.1736%" y="1029" width="0.0461%" height="15" fill="rgb(216,66,15)"/><text x="30.4236%" y="1039.50"></text></g><g><title>atomic_load_p (2 samples, 0.03%)</title><rect x="30.1890%" y="1013" width="0.0307%" height="15" fill="rgb(226,122,50)"/><text x="30.4390%" y="1023.50"></text></g><g><title>iealloc (1 samples, 0.02%)</title><rect x="30.2197%" y="1029" width="0.0154%" height="15" fill="rgb(239,156,16)"/><text x="30.4697%" y="1039.50"></text></g><g><title>rtree_extent_read (1 samples, 0.02%)</title><rect x="30.2197%" y="1013" width="0.0154%" height="15" fill="rgb(224,27,38)"/><text x="30.4697%" y="1023.50"></text></g><g><title>rtree_read (1 samples, 0.02%)</title><rect x="30.2197%" y="997" width="0.0154%" height="15" fill="rgb(224,39,27)"/><text x="30.4697%" y="1007.50"></text></g><g><title>rtree_leaf_elm_lookup (1 samples, 0.02%)</title><rect x="30.2197%" y="981" width="0.0154%" height="15" fill="rgb(215,92,29)"/><text x="30.4697%" y="991.50"></text></g><g><title>_rjem_sdallocx (10 samples, 0.15%)</title><rect x="30.0968%" y="1125" width="0.1536%" height="15" fill="rgb(207,159,16)"/><text x="30.3468%" y="1135.50"></text></g><g><title>isfree (10 samples, 0.15%)</title><rect x="30.0968%" y="1109" width="0.1536%" height="15" fill="rgb(238,163,47)"/><text x="30.3468%" y="1119.50"></text></g><g><title>isdalloct (10 samples, 0.15%)</title><rect x="30.0968%" y="1093" width="0.1536%" height="15" fill="rgb(219,91,49)"/><text x="30.3468%" y="1103.50"></text></g><g><title>arena_sdalloc (10 samples, 0.15%)</title><rect x="30.0968%" y="1077" width="0.1536%" height="15" fill="rgb(227,167,31)"/><text x="30.3468%" y="1087.50"></text></g><g><title>tcache_dalloc_small (10 samples, 0.15%)</title><rect x="30.0968%" y="1061" width="0.1536%" height="15" fill="rgb(234,80,54)"/><text x="30.3468%" y="1071.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (10 samples, 0.15%)</title><rect x="30.0968%" y="1045" width="0.1536%" height="15" fill="rgb(212,114,2)"/><text x="30.3468%" y="1055.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect x="30.2351%" y="1029" width="0.0154%" height="15" fill="rgb(234,50,24)"/><text x="30.4851%" y="1039.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect x="30.2351%" y="1013" width="0.0154%" height="15" fill="rgb(221,68,8)"/><text x="30.4851%" y="1023.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="30.2351%" y="997" width="0.0154%" height="15" fill="rgb(254,180,31)"/><text x="30.4851%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;rho_runtime::storage::transit::Transit&gt;&gt;&gt;&gt; (11 samples, 0.17%)</title><rect x="30.0968%" y="1173" width="0.1690%" height="15" fill="rgb(247,130,50)"/><text x="30.3468%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;rho_runtime::storage::transit::Transit&gt;&gt;&gt; (11 samples, 0.17%)</title><rect x="30.0968%" y="1157" width="0.1690%" height="15" fill="rgb(211,109,4)"/><text x="30.3468%" y="1167.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.17%)</title><rect x="30.0968%" y="1141" width="0.1690%" height="15" fill="rgb(238,50,21)"/><text x="30.3468%" y="1151.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.02%)</title><rect x="30.2504%" y="1125" width="0.0154%" height="15" fill="rgb(225,57,45)"/><text x="30.5004%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::oneshot::Inner&lt;rho_runtime::storage::transit::Transit&gt;&gt; (1 samples, 0.02%)</title><rect x="30.2504%" y="1109" width="0.0154%" height="15" fill="rgb(209,196,50)"/><text x="30.5004%" y="1119.50"></text></g><g><title>&lt;tokio::sync::oneshot::Inner&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="30.2504%" y="1093" width="0.0154%" height="15" fill="rgb(242,140,13)"/><text x="30.5004%" y="1103.50"></text></g><g><title>[libc-2.31.so] (10 samples, 0.15%)</title><rect x="30.2658%" y="1157" width="0.1536%" height="15" fill="rgb(217,111,7)"/><text x="30.5158%" y="1167.50"></text></g><g><title>tokio::coop::poll_proceed (1 samples, 0.02%)</title><rect x="30.4194%" y="1157" width="0.0154%" height="15" fill="rgb(253,193,51)"/><text x="30.6694%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.02%)</title><rect x="30.4194%" y="1141" width="0.0154%" height="15" fill="rgb(252,70,29)"/><text x="30.6694%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.02%)</title><rect x="30.4194%" y="1125" width="0.0154%" height="15" fill="rgb(232,127,12)"/><text x="30.6694%" y="1135.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (1 samples, 0.02%)</title><rect x="30.4194%" y="1109" width="0.0154%" height="15" fill="rgb(211,180,21)"/><text x="30.6694%" y="1119.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::consume_value (100 samples, 1.54%)</title><rect x="30.4348%" y="1157" width="1.5363%" height="15" fill="rgb(229,72,13)"/><text x="30.6848%" y="1167.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (100 samples, 1.54%)</title><rect x="30.4348%" y="1141" width="1.5363%" height="15" fill="rgb(240,211,49)"/><text x="30.6848%" y="1151.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::consume_value::{{closure}} (100 samples, 1.54%)</title><rect x="30.4348%" y="1125" width="1.5363%" height="15" fill="rgb(219,149,40)"/><text x="30.6848%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (100 samples, 1.54%)</title><rect x="30.4348%" y="1109" width="1.5363%" height="15" fill="rgb(210,127,46)"/><text x="30.6848%" y="1119.50"></text></g><g><title>core::mem::take (100 samples, 1.54%)</title><rect x="30.4348%" y="1093" width="1.5363%" height="15" fill="rgb(220,106,7)"/><text x="30.6848%" y="1103.50"></text></g><g><title>core::mem::replace (100 samples, 1.54%)</title><rect x="30.4348%" y="1077" width="1.5363%" height="15" fill="rgb(249,31,22)"/><text x="30.6848%" y="1087.50"></text></g><g><title>core::mem::swap (100 samples, 1.54%)</title><rect x="30.4348%" y="1061" width="1.5363%" height="15" fill="rgb(253,1,49)"/><text x="30.6848%" y="1071.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (100 samples, 1.54%)</title><rect x="30.4348%" y="1045" width="1.5363%" height="15" fill="rgb(227,144,33)"/><text x="30.6848%" y="1055.50"></text></g><g><title>core::ptr::swap_nonoverlapping (100 samples, 1.54%)</title><rect x="30.4348%" y="1029" width="1.5363%" height="15" fill="rgb(249,163,44)"/><text x="30.6848%" y="1039.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (100 samples, 1.54%)</title><rect x="30.4348%" y="1013" width="1.5363%" height="15" fill="rgb(234,15,39)"/><text x="30.6848%" y="1023.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (95 samples, 1.46%)</title><rect x="30.5116%" y="997" width="1.4595%" height="15" fill="rgb(207,66,16)"/><text x="30.7616%" y="1007.50"></text></g><g><title>tokio::sync::oneshot::State::is_complete (1 samples, 0.02%)</title><rect x="31.9711%" y="1157" width="0.0154%" height="15" fill="rgb(233,112,24)"/><text x="32.2211%" y="1167.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (138 samples, 2.12%)</title><rect x="29.9124%" y="1189" width="2.1201%" height="15" fill="rgb(230,90,22)"/><text x="30.1624%" y="1199.50">&lt;..</text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::poll_recv (115 samples, 1.77%)</title><rect x="30.2658%" y="1173" width="1.7668%" height="15" fill="rgb(229,61,13)"/><text x="30.5158%" y="1183.50"></text></g><g><title>tokio::sync::oneshot::State::load (3 samples, 0.05%)</title><rect x="31.9865%" y="1157" width="0.0461%" height="15" fill="rgb(225,57,24)"/><text x="32.2365%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.05%)</title><rect x="31.9865%" y="1141" width="0.0461%" height="15" fill="rgb(208,169,48)"/><text x="32.2365%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.05%)</title><rect x="31.9865%" y="1125" width="0.0461%" height="15" fill="rgb(244,218,51)"/><text x="32.2365%" y="1135.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="32.1401%" y="1173" width="0.0307%" height="15" fill="rgb(214,148,10)"/><text x="32.3901%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="32.1401%" y="1157" width="0.0307%" height="15" fill="rgb(225,174,27)"/><text x="32.3901%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.03%)</title><rect x="32.1401%" y="1141" width="0.0307%" height="15" fill="rgb(230,96,26)"/><text x="32.3901%" y="1151.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.03%)</title><rect x="32.1401%" y="1125" width="0.0307%" height="15" fill="rgb(232,10,30)"/><text x="32.3901%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (1 samples, 0.02%)</title><rect x="32.1708%" y="1173" width="0.0154%" height="15" fill="rgb(222,8,50)"/><text x="32.4208%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (1 samples, 0.02%)</title><rect x="32.1708%" y="1157" width="0.0154%" height="15" fill="rgb(213,81,27)"/><text x="32.4208%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (1 samples, 0.02%)</title><rect x="32.1708%" y="1141" width="0.0154%" height="15" fill="rgb(245,50,10)"/><text x="32.4208%" y="1151.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="32.1708%" y="1125" width="0.0154%" height="15" fill="rgb(216,100,18)"/><text x="32.4208%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="32.1708%" y="1109" width="0.0154%" height="15" fill="rgb(236,147,54)"/><text x="32.4208%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="32.1708%" y="1093" width="0.0154%" height="15" fill="rgb(205,143,26)"/><text x="32.4208%" y="1103.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.17%)</title><rect x="32.0326%" y="1189" width="0.1690%" height="15" fill="rgb(236,26,9)"/><text x="32.2826%" y="1199.50"></text></g><g><title>jemallocator::layout_to_flags (1 samples, 0.02%)</title><rect x="32.1862%" y="1173" width="0.0154%" height="15" fill="rgb(221,165,53)"/><text x="32.4362%" y="1183.50"></text></g><g><title>[unknown] (21 samples, 0.32%)</title><rect x="32.2016%" y="1189" width="0.3226%" height="15" fill="rgb(214,110,17)"/><text x="32.4516%" y="1199.50"></text></g><g><title>[unknown] (21 samples, 0.32%)</title><rect x="32.2016%" y="1173" width="0.3226%" height="15" fill="rgb(237,197,12)"/><text x="32.4516%" y="1183.50"></text></g><g><title>[unknown] (21 samples, 0.32%)</title><rect x="32.2016%" y="1157" width="0.3226%" height="15" fill="rgb(205,84,17)"/><text x="32.4516%" y="1167.50"></text></g><g><title>[unknown] (21 samples, 0.32%)</title><rect x="32.2016%" y="1141" width="0.3226%" height="15" fill="rgb(237,18,45)"/><text x="32.4516%" y="1151.50"></text></g><g><title>[unknown] (21 samples, 0.32%)</title><rect x="32.2016%" y="1125" width="0.3226%" height="15" fill="rgb(221,87,14)"/><text x="32.4516%" y="1135.50"></text></g><g><title>[unknown] (21 samples, 0.32%)</title><rect x="32.2016%" y="1109" width="0.3226%" height="15" fill="rgb(238,186,15)"/><text x="32.4516%" y="1119.50"></text></g><g><title>[unknown] (21 samples, 0.32%)</title><rect x="32.2016%" y="1093" width="0.3226%" height="15" fill="rgb(208,115,11)"/><text x="32.4516%" y="1103.50"></text></g><g><title>[unknown] (21 samples, 0.32%)</title><rect x="32.2016%" y="1077" width="0.3226%" height="15" fill="rgb(254,175,0)"/><text x="32.4516%" y="1087.50"></text></g><g><title>[unknown] (21 samples, 0.32%)</title><rect x="32.2016%" y="1061" width="0.3226%" height="15" fill="rgb(227,24,42)"/><text x="32.4516%" y="1071.50"></text></g><g><title>[unknown] (21 samples, 0.32%)</title><rect x="32.2016%" y="1045" width="0.3226%" height="15" fill="rgb(223,211,37)"/><text x="32.4516%" y="1055.50"></text></g><g><title>[unknown] (21 samples, 0.32%)</title><rect x="32.2016%" y="1029" width="0.3226%" height="15" fill="rgb(235,49,27)"/><text x="32.4516%" y="1039.50"></text></g><g><title>[unknown] (21 samples, 0.32%)</title><rect x="32.2016%" y="1013" width="0.3226%" height="15" fill="rgb(254,97,51)"/><text x="32.4516%" y="1023.50"></text></g><g><title>[unknown] (21 samples, 0.32%)</title><rect x="32.2016%" y="997" width="0.3226%" height="15" fill="rgb(249,51,40)"/><text x="32.4516%" y="1007.50"></text></g><g><title>[unknown] (16 samples, 0.25%)</title><rect x="32.2784%" y="981" width="0.2458%" height="15" fill="rgb(210,128,45)"/><text x="32.5284%" y="991.50"></text></g><g><title>[unknown] (14 samples, 0.22%)</title><rect x="32.3091%" y="965" width="0.2151%" height="15" fill="rgb(224,137,50)"/><text x="32.5591%" y="975.50"></text></g><g><title>[unknown] (13 samples, 0.20%)</title><rect x="32.3245%" y="949" width="0.1997%" height="15" fill="rgb(242,15,9)"/><text x="32.5745%" y="959.50"></text></g><g><title>[unknown] (9 samples, 0.14%)</title><rect x="32.3859%" y="933" width="0.1383%" height="15" fill="rgb(233,187,41)"/><text x="32.6359%" y="943.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="32.4474%" y="917" width="0.0768%" height="15" fill="rgb(227,2,29)"/><text x="32.6974%" y="927.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="32.4781%" y="901" width="0.0461%" height="15" fill="rgb(222,70,3)"/><text x="32.7281%" y="911.50"></text></g><g><title>__pthread_cleanup_pop (2 samples, 0.03%)</title><rect x="32.5242%" y="1189" width="0.0307%" height="15" fill="rgb(213,11,42)"/><text x="32.7742%" y="1199.50"></text></g><g><title>__pthread_cond_signal (3 samples, 0.05%)</title><rect x="32.5549%" y="1189" width="0.0461%" height="15" fill="rgb(225,150,9)"/><text x="32.8049%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="32.5857%" y="1173" width="0.0154%" height="15" fill="rgb(230,162,45)"/><text x="32.8357%" y="1183.50"></text></g><g><title>__rg_dealloc (2 samples, 0.03%)</title><rect x="32.6010%" y="1189" width="0.0307%" height="15" fill="rgb(222,14,52)"/><text x="32.8510%" y="1199.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (2 samples, 0.03%)</title><rect x="32.6010%" y="1173" width="0.0307%" height="15" fill="rgb(254,198,14)"/><text x="32.8510%" y="1183.50"></text></g><g><title>_rjem_mallocx (2 samples, 0.03%)</title><rect x="32.6317%" y="1189" width="0.0307%" height="15" fill="rgb(220,217,30)"/><text x="32.8817%" y="1199.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="32.6625%" y="1189" width="0.0154%" height="15" fill="rgb(215,146,41)"/><text x="32.9125%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="32.6778%" y="1189" width="0.0154%" height="15" fill="rgb(217,27,36)"/><text x="32.9278%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.03%)</title><rect x="32.6932%" y="1189" width="0.0307%" height="15" fill="rgb(219,218,39)"/><text x="32.9432%" y="1199.50"></text></g><g><title>alloc::slice::merge_sort (5 samples, 0.08%)</title><rect x="32.7239%" y="1189" width="0.0768%" height="15" fill="rgb(219,4,42)"/><text x="32.9739%" y="1199.50"></text></g><g><title>async_executor::Sleepers::update (2 samples, 0.03%)</title><rect x="32.8007%" y="1173" width="0.0307%" height="15" fill="rgb(249,119,36)"/><text x="33.0507%" y="1183.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="32.8007%" y="1157" width="0.0307%" height="15" fill="rgb(209,23,33)"/><text x="33.0507%" y="1167.50"></text></g><g><title>async_executor::Ticker::sleep (4 samples, 0.06%)</title><rect x="32.8007%" y="1189" width="0.0615%" height="15" fill="rgb(211,10,0)"/><text x="33.0507%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (2 samples, 0.03%)</title><rect x="32.8315%" y="1173" width="0.0307%" height="15" fill="rgb(208,99,37)"/><text x="33.0815%" y="1183.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="32.8315%" y="1157" width="0.0307%" height="15" fill="rgb(213,132,31)"/><text x="33.0815%" y="1167.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (2 samples, 0.03%)</title><rect x="32.8315%" y="1141" width="0.0307%" height="15" fill="rgb(243,129,40)"/><text x="33.0815%" y="1151.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (2 samples, 0.03%)</title><rect x="32.8315%" y="1125" width="0.0307%" height="15" fill="rgb(210,66,33)"/><text x="33.0815%" y="1135.50"></text></g><g><title>async_executor::steal (5 samples, 0.08%)</title><rect x="32.8622%" y="1189" width="0.0768%" height="15" fill="rgb(209,189,4)"/><text x="33.1122%" y="1199.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.05%)</title><rect x="32.9390%" y="1173" width="0.0461%" height="15" fill="rgb(214,107,37)"/><text x="33.1890%" y="1183.50"></text></g><g><title>[libc-2.31.so] (9 samples, 0.14%)</title><rect x="33.0158%" y="1157" width="0.1383%" height="15" fill="rgb(245,88,54)"/><text x="33.2658%" y="1167.50"></text></g><g><title>async_executor::Executor::schedule (2 samples, 0.03%)</title><rect x="33.1541%" y="1157" width="0.0307%" height="15" fill="rgb(205,146,20)"/><text x="33.4041%" y="1167.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="33.1541%" y="1141" width="0.0307%" height="15" fill="rgb(220,161,25)"/><text x="33.4041%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.03%)</title><rect x="33.1541%" y="1125" width="0.0307%" height="15" fill="rgb(215,152,15)"/><text x="33.4041%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.03%)</title><rect x="33.1541%" y="1109" width="0.0307%" height="15" fill="rgb(233,192,44)"/><text x="33.4041%" y="1119.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (11 samples, 0.17%)</title><rect x="33.1848%" y="1157" width="0.1690%" height="15" fill="rgb(240,170,46)"/><text x="33.4348%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (11 samples, 0.17%)</title><rect x="33.1848%" y="1141" width="0.1690%" height="15" fill="rgb(207,104,33)"/><text x="33.4348%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_add (11 samples, 0.17%)</title><rect x="33.1848%" y="1125" width="0.1690%" height="15" fill="rgb(219,21,39)"/><text x="33.4348%" y="1135.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (3 samples, 0.05%)</title><rect x="33.3692%" y="1077" width="0.0461%" height="15" fill="rgb(214,133,29)"/><text x="33.6192%" y="1087.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (3 samples, 0.05%)</title><rect x="33.3692%" y="1061" width="0.0461%" height="15" fill="rgb(226,93,6)"/><text x="33.6192%" y="1071.50"></text></g><g><title>__GI___pthread_mutex_unlock (3 samples, 0.05%)</title><rect x="33.3692%" y="1045" width="0.0461%" height="15" fill="rgb(252,222,34)"/><text x="33.6192%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (4 samples, 0.06%)</title><rect x="33.3692%" y="1109" width="0.0615%" height="15" fill="rgb(252,92,48)"/><text x="33.6192%" y="1119.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.06%)</title><rect x="33.3692%" y="1093" width="0.0615%" height="15" fill="rgb(245,223,24)"/><text x="33.6192%" y="1103.50"></text></g><g><title>std::sys_common::poison::Flag::done (1 samples, 0.02%)</title><rect x="33.4153%" y="1077" width="0.0154%" height="15" fill="rgb(205,176,3)"/><text x="33.6653%" y="1087.50"></text></g><g><title>__pthread_cond_signal (20 samples, 0.31%)</title><rect x="33.4306%" y="1029" width="0.3073%" height="15" fill="rgb(235,151,15)"/><text x="33.6806%" y="1039.50"></text></g><g><title>[unknown] (18 samples, 0.28%)</title><rect x="33.4614%" y="1013" width="0.2765%" height="15" fill="rgb(237,209,11)"/><text x="33.7114%" y="1023.50"></text></g><g><title>[unknown] (17 samples, 0.26%)</title><rect x="33.4767%" y="997" width="0.2612%" height="15" fill="rgb(243,227,24)"/><text x="33.7267%" y="1007.50"></text></g><g><title>[unknown] (17 samples, 0.26%)</title><rect x="33.4767%" y="981" width="0.2612%" height="15" fill="rgb(239,193,16)"/><text x="33.7267%" y="991.50"></text></g><g><title>[unknown] (13 samples, 0.20%)</title><rect x="33.5382%" y="965" width="0.1997%" height="15" fill="rgb(231,27,9)"/><text x="33.7882%" y="975.50"></text></g><g><title>[unknown] (13 samples, 0.20%)</title><rect x="33.5382%" y="949" width="0.1997%" height="15" fill="rgb(219,169,10)"/><text x="33.7882%" y="959.50"></text></g><g><title>[unknown] (12 samples, 0.18%)</title><rect x="33.5535%" y="933" width="0.1844%" height="15" fill="rgb(244,229,43)"/><text x="33.8035%" y="943.50"></text></g><g><title>[unknown] (12 samples, 0.18%)</title><rect x="33.5535%" y="917" width="0.1844%" height="15" fill="rgb(254,38,20)"/><text x="33.8035%" y="927.50"></text></g><g><title>[unknown] (9 samples, 0.14%)</title><rect x="33.5996%" y="901" width="0.1383%" height="15" fill="rgb(250,47,30)"/><text x="33.8496%" y="911.50"></text></g><g><title>[unknown] (6 samples, 0.09%)</title><rect x="33.6457%" y="885" width="0.0922%" height="15" fill="rgb(224,124,36)"/><text x="33.8957%" y="895.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="33.6611%" y="869" width="0.0768%" height="15" fill="rgb(246,68,51)"/><text x="33.9111%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="33.7225%" y="853" width="0.0154%" height="15" fill="rgb(253,43,49)"/><text x="33.9725%" y="863.50"></text></g><g><title>parking::Unparker::unpark (22 samples, 0.34%)</title><rect x="33.4306%" y="1061" width="0.3380%" height="15" fill="rgb(219,54,36)"/><text x="33.6806%" y="1071.50"></text></g><g><title>parking::Inner::unpark (22 samples, 0.34%)</title><rect x="33.4306%" y="1045" width="0.3380%" height="15" fill="rgb(227,133,34)"/><text x="33.6806%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (2 samples, 0.03%)</title><rect x="33.7379%" y="1029" width="0.0307%" height="15" fill="rgb(247,227,15)"/><text x="33.9879%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_swap (2 samples, 0.03%)</title><rect x="33.7379%" y="1013" width="0.0307%" height="15" fill="rgb(229,96,14)"/><text x="33.9879%" y="1023.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (23 samples, 0.35%)</title><rect x="33.4306%" y="1077" width="0.3534%" height="15" fill="rgb(220,79,17)"/><text x="33.6806%" y="1087.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.02%)</title><rect x="33.7686%" y="1061" width="0.0154%" height="15" fill="rgb(205,131,53)"/><text x="34.0186%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.02%)</title><rect x="33.7686%" y="1045" width="0.0154%" height="15" fill="rgb(209,50,29)"/><text x="34.0186%" y="1055.50"></text></g><g><title>async_io::driver::block_on::IO_POLLING::__getit (1 samples, 0.02%)</title><rect x="33.7686%" y="1029" width="0.0154%" height="15" fill="rgb(245,86,46)"/><text x="34.0186%" y="1039.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="33.7686%" y="1013" width="0.0154%" height="15" fill="rgb(235,66,46)"/><text x="34.0186%" y="1023.50"></text></g><g><title>core::task::wake::Waker::wake (24 samples, 0.37%)</title><rect x="33.4306%" y="1109" width="0.3687%" height="15" fill="rgb(232,148,31)"/><text x="33.6806%" y="1119.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (24 samples, 0.37%)</title><rect x="33.4306%" y="1093" width="0.3687%" height="15" fill="rgb(217,149,8)"/><text x="33.6806%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="33.7840%" y="1077" width="0.0154%" height="15" fill="rgb(209,183,11)"/><text x="34.0340%" y="1087.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="33.7840%" y="1061" width="0.0154%" height="15" fill="rgb(208,55,20)"/><text x="34.0340%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.02%)</title><rect x="33.7840%" y="1045" width="0.0154%" height="15" fill="rgb(218,39,14)"/><text x="34.0340%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.02%)</title><rect x="33.7840%" y="1029" width="0.0154%" height="15" fill="rgb(216,169,33)"/><text x="34.0340%" y="1039.50"></text></g><g><title>async_executor::State::notify (30 samples, 0.46%)</title><rect x="33.3538%" y="1125" width="0.4609%" height="15" fill="rgb(233,80,24)"/><text x="33.6038%" y="1135.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.02%)</title><rect x="33.7994%" y="1109" width="0.0154%" height="15" fill="rgb(213,179,31)"/><text x="34.0494%" y="1119.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.02%)</title><rect x="33.7994%" y="1093" width="0.0154%" height="15" fill="rgb(209,19,5)"/><text x="34.0494%" y="1103.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1 samples, 0.02%)</title><rect x="33.7994%" y="1077" width="0.0154%" height="15" fill="rgb(219,18,35)"/><text x="34.0494%" y="1087.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.02%)</title><rect x="33.7994%" y="1061" width="0.0154%" height="15" fill="rgb(209,169,16)"/><text x="34.0494%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (6 samples, 0.09%)</title><rect x="33.8147%" y="1093" width="0.0922%" height="15" fill="rgb(245,90,51)"/><text x="34.0647%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (6 samples, 0.09%)</title><rect x="33.8147%" y="1077" width="0.0922%" height="15" fill="rgb(220,99,45)"/><text x="34.0647%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.02%)</title><rect x="33.9069%" y="1093" width="0.0154%" height="15" fill="rgb(249,89,25)"/><text x="34.1569%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.02%)</title><rect x="33.9069%" y="1077" width="0.0154%" height="15" fill="rgb(239,193,0)"/><text x="34.1569%" y="1087.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (38 samples, 0.58%)</title><rect x="33.3538%" y="1141" width="0.5838%" height="15" fill="rgb(231,126,1)"/><text x="33.6038%" y="1151.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (8 samples, 0.12%)</title><rect x="33.8147%" y="1125" width="0.1229%" height="15" fill="rgb(243,166,3)"/><text x="34.0647%" y="1135.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (8 samples, 0.12%)</title><rect x="33.8147%" y="1109" width="0.1229%" height="15" fill="rgb(223,22,34)"/><text x="34.0647%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="33.9223%" y="1093" width="0.0154%" height="15" fill="rgb(251,52,51)"/><text x="34.1723%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="33.9223%" y="1077" width="0.0154%" height="15" fill="rgb(221,165,28)"/><text x="34.1723%" y="1087.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (2 samples, 0.03%)</title><rect x="33.9376%" y="1141" width="0.0307%" height="15" fill="rgb(218,121,47)"/><text x="34.1876%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.03%)</title><rect x="33.9376%" y="1125" width="0.0307%" height="15" fill="rgb(209,120,9)"/><text x="34.1876%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.03%)</title><rect x="33.9376%" y="1109" width="0.0307%" height="15" fill="rgb(236,68,12)"/><text x="34.1876%" y="1119.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (43 samples, 0.66%)</title><rect x="33.3538%" y="1157" width="0.6606%" height="15" fill="rgb(225,194,26)"/><text x="33.6038%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (3 samples, 0.05%)</title><rect x="33.9684%" y="1141" width="0.0461%" height="15" fill="rgb(231,84,39)"/><text x="34.2184%" y="1151.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="33.9684%" y="1125" width="0.0461%" height="15" fill="rgb(210,11,45)"/><text x="34.2184%" y="1135.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (3 samples, 0.05%)</title><rect x="33.9684%" y="1109" width="0.0461%" height="15" fill="rgb(224,54,52)"/><text x="34.2184%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.03%)</title><rect x="33.9837%" y="1093" width="0.0307%" height="15" fill="rgb(238,102,14)"/><text x="34.2337%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.03%)</title><rect x="33.9837%" y="1077" width="0.0307%" height="15" fill="rgb(243,160,52)"/><text x="34.2337%" y="1087.50"></text></g><g><title>async_task::runnable::Runnable::schedule (2 samples, 0.03%)</title><rect x="34.0144%" y="1157" width="0.0307%" height="15" fill="rgb(216,114,19)"/><text x="34.2644%" y="1167.50"></text></g><g><title>async_task::runnable::Runnable::waker (2 samples, 0.03%)</title><rect x="34.0452%" y="1157" width="0.0307%" height="15" fill="rgb(244,166,37)"/><text x="34.2952%" y="1167.50"></text></g><g><title>[libc-2.31.so] (14 samples, 0.22%)</title><rect x="34.0913%" y="1141" width="0.2151%" height="15" fill="rgb(246,29,44)"/><text x="34.3413%" y="1151.50"></text></g><g><title>[libc-2.31.so] (22 samples, 0.34%)</title><rect x="34.3063%" y="1125" width="0.3380%" height="15" fill="rgb(215,56,53)"/><text x="34.5563%" y="1135.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (23 samples, 0.35%)</title><rect x="34.3063%" y="1141" width="0.3534%" height="15" fill="rgb(217,60,2)"/><text x="34.5563%" y="1151.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.02%)</title><rect x="34.6443%" y="1125" width="0.0154%" height="15" fill="rgb(207,26,24)"/><text x="34.8943%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="34.6443%" y="1109" width="0.0154%" height="15" fill="rgb(252,210,15)"/><text x="34.8943%" y="1119.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="34.6443%" y="1093" width="0.0154%" height="15" fill="rgb(253,209,26)"/><text x="34.8943%" y="1103.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="34.6443%" y="1077" width="0.0154%" height="15" fill="rgb(238,170,14)"/><text x="34.8943%" y="1087.50"></text></g><g><title>_rjem_mallocx (1 samples, 0.02%)</title><rect x="34.6443%" y="1061" width="0.0154%" height="15" fill="rgb(216,178,15)"/><text x="34.8943%" y="1071.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="34.6443%" y="1045" width="0.0154%" height="15" fill="rgb(250,197,2)"/><text x="34.8943%" y="1055.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="34.6443%" y="1029" width="0.0154%" height="15" fill="rgb(212,70,42)"/><text x="34.8943%" y="1039.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="34.6443%" y="1013" width="0.0154%" height="15" fill="rgb(227,213,9)"/><text x="34.8943%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.11%)</title><rect x="34.6751%" y="1125" width="0.1075%" height="15" fill="rgb(245,99,25)"/><text x="34.9251%" y="1135.50"></text></g><g><title>_rjem_mallocx (7 samples, 0.11%)</title><rect x="34.6751%" y="1109" width="0.1075%" height="15" fill="rgb(250,82,29)"/><text x="34.9251%" y="1119.50"></text></g><g><title>imalloc (5 samples, 0.08%)</title><rect x="34.7058%" y="1093" width="0.0768%" height="15" fill="rgb(241,226,54)"/><text x="34.9558%" y="1103.50"></text></g><g><title>imalloc_body (5 samples, 0.08%)</title><rect x="34.7058%" y="1077" width="0.0768%" height="15" fill="rgb(221,99,41)"/><text x="34.9558%" y="1087.50"></text></g><g><title>imalloc_no_sample (5 samples, 0.08%)</title><rect x="34.7058%" y="1061" width="0.0768%" height="15" fill="rgb(213,90,21)"/><text x="34.9558%" y="1071.50"></text></g><g><title>iallocztm (5 samples, 0.08%)</title><rect x="34.7058%" y="1045" width="0.0768%" height="15" fill="rgb(205,208,24)"/><text x="34.9558%" y="1055.50"></text></g><g><title>arena_malloc (5 samples, 0.08%)</title><rect x="34.7058%" y="1029" width="0.0768%" height="15" fill="rgb(246,31,12)"/><text x="34.9558%" y="1039.50"></text></g><g><title>tcache_alloc_small (5 samples, 0.08%)</title><rect x="34.7058%" y="1013" width="0.0768%" height="15" fill="rgb(213,154,6)"/><text x="34.9558%" y="1023.50"></text></g><g><title>cache_bin_alloc_easy (5 samples, 0.08%)</title><rect x="34.7058%" y="997" width="0.0768%" height="15" fill="rgb(222,163,29)"/><text x="34.9558%" y="1007.50"></text></g><g><title>async_task::runnable::spawn_unchecked (47 samples, 0.72%)</title><rect x="34.0759%" y="1157" width="0.7221%" height="15" fill="rgb(227,201,8)"/><text x="34.3259%" y="1167.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::allocate (9 samples, 0.14%)</title><rect x="34.6597%" y="1141" width="0.1383%" height="15" fill="rgb(233,9,32)"/><text x="34.9097%" y="1151.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.02%)</title><rect x="34.7826%" y="1125" width="0.0154%" height="15" fill="rgb(217,54,24)"/><text x="35.0326%" y="1135.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="34.7826%" y="1109" width="0.0154%" height="15" fill="rgb(235,192,0)"/><text x="35.0326%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;core::task::wake::Waker&gt;&gt;&gt; (4 samples, 0.06%)</title><rect x="34.7980%" y="1157" width="0.0615%" height="15" fill="rgb(235,45,9)"/><text x="35.0480%" y="1167.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.06%)</title><rect x="34.7980%" y="1141" width="0.0615%" height="15" fill="rgb(246,42,40)"/><text x="35.0480%" y="1151.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (4 samples, 0.06%)</title><rect x="34.7980%" y="1125" width="0.0615%" height="15" fill="rgb(248,111,24)"/><text x="35.0480%" y="1135.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (3 samples, 0.05%)</title><rect x="34.8133%" y="1109" width="0.0461%" height="15" fill="rgb(249,65,22)"/><text x="35.0633%" y="1119.50"></text></g><g><title>__GI___pthread_mutex_unlock (3 samples, 0.05%)</title><rect x="34.8133%" y="1093" width="0.0461%" height="15" fill="rgb(238,111,51)"/><text x="35.0633%" y="1103.50"></text></g><g><title>async_executor::Executor::spawn (134 samples, 2.06%)</title><rect x="32.9851%" y="1173" width="2.0587%" height="15" fill="rgb(250,118,22)"/><text x="33.2351%" y="1183.50">a..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (12 samples, 0.18%)</title><rect x="34.8594%" y="1157" width="0.1844%" height="15" fill="rgb(234,84,26)"/><text x="35.1094%" y="1167.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (12 samples, 0.18%)</title><rect x="34.8594%" y="1141" width="0.1844%" height="15" fill="rgb(243,172,12)"/><text x="35.1094%" y="1151.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (8 samples, 0.12%)</title><rect x="34.9209%" y="1125" width="0.1229%" height="15" fill="rgb(236,150,49)"/><text x="35.1709%" y="1135.50"></text></g><g><title>__GI___pthread_mutex_lock (8 samples, 0.12%)</title><rect x="34.9209%" y="1109" width="0.1229%" height="15" fill="rgb(225,197,26)"/><text x="35.1709%" y="1119.50"></text></g><g><title>async_global_executor::executor::spawn (146 samples, 2.24%)</title><rect x="32.9390%" y="1189" width="2.2430%" height="15" fill="rgb(214,17,42)"/><text x="33.1890%" y="1199.50">a..</text></g><g><title>async_global_executor::init::init (9 samples, 0.14%)</title><rect x="35.0438%" y="1173" width="0.1383%" height="15" fill="rgb(224,165,40)"/><text x="35.2938%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (9 samples, 0.14%)</title><rect x="35.0438%" y="1157" width="0.1383%" height="15" fill="rgb(246,100,4)"/><text x="35.2938%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_swap (9 samples, 0.14%)</title><rect x="35.0438%" y="1141" width="0.1383%" height="15" fill="rgb(222,103,0)"/><text x="35.2938%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 0.28%)</title><rect x="35.1821%" y="901" width="0.2765%" height="15" fill="rgb(227,189,26)"/><text x="35.4321%" y="911.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (18 samples, 0.28%)</title><rect x="35.1821%" y="885" width="0.2765%" height="15" fill="rgb(214,202,17)"/><text x="35.4321%" y="895.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (18 samples, 0.28%)</title><rect x="35.1821%" y="869" width="0.2765%" height="15" fill="rgb(229,111,3)"/><text x="35.4321%" y="879.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (18 samples, 0.28%)</title><rect x="35.1821%" y="853" width="0.2765%" height="15" fill="rgb(229,172,15)"/><text x="35.4321%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (18 samples, 0.28%)</title><rect x="35.1821%" y="837" width="0.2765%" height="15" fill="rgb(230,224,35)"/><text x="35.4321%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (18 samples, 0.28%)</title><rect x="35.1821%" y="821" width="0.2765%" height="15" fill="rgb(251,141,6)"/><text x="35.4321%" y="831.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (18 samples, 0.28%)</title><rect x="35.1821%" y="805" width="0.2765%" height="15" fill="rgb(225,208,6)"/><text x="35.4321%" y="815.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (18 samples, 0.28%)</title><rect x="35.1821%" y="789" width="0.2765%" height="15" fill="rgb(246,181,16)"/><text x="35.4321%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 0.28%)</title><rect x="35.1821%" y="773" width="0.2765%" height="15" fill="rgb(227,129,36)"/><text x="35.4321%" y="783.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::handle_produce::{{closure}} (18 samples, 0.28%)</title><rect x="35.1821%" y="757" width="0.2765%" height="15" fill="rgb(248,117,24)"/><text x="35.4321%" y="767.50"></text></g><g><title>[libc-2.31.so] (16 samples, 0.25%)</title><rect x="35.2128%" y="741" width="0.2458%" height="15" fill="rgb(214,185,35)"/><text x="35.4628%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="35.4586%" y="677" width="0.0154%" height="15" fill="rgb(236,150,34)"/><text x="35.7086%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (1 samples, 0.02%)</title><rect x="35.4586%" y="661" width="0.0154%" height="15" fill="rgb(243,228,27)"/><text x="35.7086%" y="671.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.02%)</title><rect x="35.4586%" y="645" width="0.0154%" height="15" fill="rgb(245,77,44)"/><text x="35.7086%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="35.4586%" y="629" width="0.0154%" height="15" fill="rgb(235,214,42)"/><text x="35.7086%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="35.4586%" y="613" width="0.0154%" height="15" fill="rgb(221,74,3)"/><text x="35.7086%" y="623.50"></text></g><g><title>_rjem_je_tcache_event_hard (1 samples, 0.02%)</title><rect x="35.4586%" y="597" width="0.0154%" height="15" fill="rgb(206,121,29)"/><text x="35.7086%" y="607.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="35.4586%" y="581" width="0.0154%" height="15" fill="rgb(249,131,53)"/><text x="35.7086%" y="591.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (1 samples, 0.02%)</title><rect x="35.4740%" y="389" width="0.0154%" height="15" fill="rgb(236,170,29)"/><text x="35.7240%" y="399.50"></text></g><g><title>arena_dalloc_bin_locked_impl (1 samples, 0.02%)</title><rect x="35.4740%" y="373" width="0.0154%" height="15" fill="rgb(247,96,15)"/><text x="35.7240%" y="383.50"></text></g><g><title>arena_bin_lower_slab (1 samples, 0.02%)</title><rect x="35.4740%" y="357" width="0.0154%" height="15" fill="rgb(211,210,7)"/><text x="35.7240%" y="367.50"></text></g><g><title>extent_snad_comp (1 samples, 0.02%)</title><rect x="35.4740%" y="341" width="0.0154%" height="15" fill="rgb(240,88,50)"/><text x="35.7240%" y="351.50"></text></g><g><title>extent_ad_comp (1 samples, 0.02%)</title><rect x="35.4740%" y="325" width="0.0154%" height="15" fill="rgb(209,229,26)"/><text x="35.7240%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (2 samples, 0.03%)</title><rect x="35.4740%" y="565" width="0.0307%" height="15" fill="rgb(210,68,23)"/><text x="35.7240%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (2 samples, 0.03%)</title><rect x="35.4740%" y="549" width="0.0307%" height="15" fill="rgb(229,180,13)"/><text x="35.7240%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="35.4740%" y="533" width="0.0307%" height="15" fill="rgb(236,53,44)"/><text x="35.7240%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.03%)</title><rect x="35.4740%" y="517" width="0.0307%" height="15" fill="rgb(244,214,29)"/><text x="35.7240%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.03%)</title><rect x="35.4740%" y="501" width="0.0307%" height="15" fill="rgb(220,75,29)"/><text x="35.7240%" y="511.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.03%)</title><rect x="35.4740%" y="485" width="0.0307%" height="15" fill="rgb(214,183,37)"/><text x="35.7240%" y="495.50"></text></g><g><title>isfree (2 samples, 0.03%)</title><rect x="35.4740%" y="469" width="0.0307%" height="15" fill="rgb(239,117,29)"/><text x="35.7240%" y="479.50"></text></g><g><title>isdalloct (2 samples, 0.03%)</title><rect x="35.4740%" y="453" width="0.0307%" height="15" fill="rgb(237,171,35)"/><text x="35.7240%" y="463.50"></text></g><g><title>arena_sdalloc (2 samples, 0.03%)</title><rect x="35.4740%" y="437" width="0.0307%" height="15" fill="rgb(229,178,53)"/><text x="35.7240%" y="447.50"></text></g><g><title>tcache_dalloc_small (2 samples, 0.03%)</title><rect x="35.4740%" y="421" width="0.0307%" height="15" fill="rgb(210,102,19)"/><text x="35.7240%" y="431.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (2 samples, 0.03%)</title><rect x="35.4740%" y="405" width="0.0307%" height="15" fill="rgb(235,127,22)"/><text x="35.7240%" y="415.50"></text></g><g><title>iealloc (1 samples, 0.02%)</title><rect x="35.4893%" y="389" width="0.0154%" height="15" fill="rgb(244,31,31)"/><text x="35.7393%" y="399.50"></text></g><g><title>rtree_extent_read (1 samples, 0.02%)</title><rect x="35.4893%" y="373" width="0.0154%" height="15" fill="rgb(231,43,21)"/><text x="35.7393%" y="383.50"></text></g><g><title>rtree_leaf_elm_extent_read (1 samples, 0.02%)</title><rect x="35.4893%" y="357" width="0.0154%" height="15" fill="rgb(217,131,35)"/><text x="35.7393%" y="367.50"></text></g><g><title>rtree_leaf_elm_bits_read (1 samples, 0.02%)</title><rect x="35.4893%" y="341" width="0.0154%" height="15" fill="rgb(221,149,4)"/><text x="35.7393%" y="351.50"></text></g><g><title>atomic_load_p (1 samples, 0.02%)</title><rect x="35.4893%" y="325" width="0.0154%" height="15" fill="rgb(232,170,28)"/><text x="35.7393%" y="335.50"></text></g><g><title>_rjem_je_tcache_event_hard (1 samples, 0.02%)</title><rect x="35.5047%" y="517" width="0.0154%" height="15" fill="rgb(238,56,10)"/><text x="35.7547%" y="527.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="35.5047%" y="501" width="0.0154%" height="15" fill="rgb(235,196,14)"/><text x="35.7547%" y="511.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (1 samples, 0.02%)</title><rect x="35.5047%" y="485" width="0.0154%" height="15" fill="rgb(216,45,48)"/><text x="35.7547%" y="495.50"></text></g><g><title>arena_dalloc_bin_locked_impl (1 samples, 0.02%)</title><rect x="35.5047%" y="469" width="0.0154%" height="15" fill="rgb(238,213,17)"/><text x="35.7547%" y="479.50"></text></g><g><title>arena_slab_reg_dalloc (1 samples, 0.02%)</title><rect x="35.5047%" y="453" width="0.0154%" height="15" fill="rgb(212,13,2)"/><text x="35.7547%" y="463.50"></text></g><g><title>extent_nfree_inc (1 samples, 0.02%)</title><rect x="35.5047%" y="437" width="0.0154%" height="15" fill="rgb(240,114,20)"/><text x="35.7547%" y="447.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (23 samples, 0.35%)</title><rect x="35.1821%" y="1189" width="0.3534%" height="15" fill="rgb(228,41,40)"/><text x="35.4321%" y="1199.50"></text></g><g><title>std::panic::catch_unwind (23 samples, 0.35%)</title><rect x="35.1821%" y="1173" width="0.3534%" height="15" fill="rgb(244,132,35)"/><text x="35.4321%" y="1183.50"></text></g><g><title>std::panicking::try (23 samples, 0.35%)</title><rect x="35.1821%" y="1157" width="0.3534%" height="15" fill="rgb(253,189,4)"/><text x="35.4321%" y="1167.50"></text></g><g><title>std::panicking::try::do_call (23 samples, 0.35%)</title><rect x="35.1821%" y="1141" width="0.3534%" height="15" fill="rgb(224,37,19)"/><text x="35.4321%" y="1151.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (23 samples, 0.35%)</title><rect x="35.1821%" y="1125" width="0.3534%" height="15" fill="rgb(235,223,18)"/><text x="35.4321%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (23 samples, 0.35%)</title><rect x="35.1821%" y="1109" width="0.3534%" height="15" fill="rgb(235,163,25)"/><text x="35.4321%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (23 samples, 0.35%)</title><rect x="35.1821%" y="1093" width="0.3534%" height="15" fill="rgb(217,145,28)"/><text x="35.4321%" y="1103.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (23 samples, 0.35%)</title><rect x="35.1821%" y="1077" width="0.3534%" height="15" fill="rgb(223,223,32)"/><text x="35.4321%" y="1087.50"></text></g><g><title>async_global_executor::reactor::block_on (23 samples, 0.35%)</title><rect x="35.1821%" y="1061" width="0.3534%" height="15" fill="rgb(227,189,39)"/><text x="35.4321%" y="1071.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (23 samples, 0.35%)</title><rect x="35.1821%" y="1045" width="0.3534%" height="15" fill="rgb(248,10,22)"/><text x="35.4321%" y="1055.50"></text></g><g><title>async_io::driver::block_on (23 samples, 0.35%)</title><rect x="35.1821%" y="1029" width="0.3534%" height="15" fill="rgb(248,46,39)"/><text x="35.4321%" y="1039.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (23 samples, 0.35%)</title><rect x="35.1821%" y="1013" width="0.3534%" height="15" fill="rgb(248,113,48)"/><text x="35.4321%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (23 samples, 0.35%)</title><rect x="35.1821%" y="997" width="0.3534%" height="15" fill="rgb(245,16,25)"/><text x="35.4321%" y="1007.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (23 samples, 0.35%)</title><rect x="35.1821%" y="981" width="0.3534%" height="15" fill="rgb(249,152,16)"/><text x="35.4321%" y="991.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (23 samples, 0.35%)</title><rect x="35.1821%" y="965" width="0.3534%" height="15" fill="rgb(250,16,1)"/><text x="35.4321%" y="975.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (23 samples, 0.35%)</title><rect x="35.1821%" y="949" width="0.3534%" height="15" fill="rgb(249,138,3)"/><text x="35.4321%" y="959.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (23 samples, 0.35%)</title><rect x="35.1821%" y="933" width="0.3534%" height="15" fill="rgb(227,71,41)"/><text x="35.4321%" y="943.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (23 samples, 0.35%)</title><rect x="35.1821%" y="917" width="0.3534%" height="15" fill="rgb(209,184,23)"/><text x="35.4321%" y="927.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5 samples, 0.08%)</title><rect x="35.4586%" y="901" width="0.0768%" height="15" fill="rgb(223,215,31)"/><text x="35.7086%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.08%)</title><rect x="35.4586%" y="885" width="0.0768%" height="15" fill="rgb(210,146,28)"/><text x="35.7086%" y="895.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (5 samples, 0.08%)</title><rect x="35.4586%" y="869" width="0.0768%" height="15" fill="rgb(209,183,41)"/><text x="35.7086%" y="879.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (5 samples, 0.08%)</title><rect x="35.4586%" y="853" width="0.0768%" height="15" fill="rgb(209,224,45)"/><text x="35.7086%" y="863.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (5 samples, 0.08%)</title><rect x="35.4586%" y="837" width="0.0768%" height="15" fill="rgb(224,209,51)"/><text x="35.7086%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.08%)</title><rect x="35.4586%" y="821" width="0.0768%" height="15" fill="rgb(223,17,39)"/><text x="35.7086%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.08%)</title><rect x="35.4586%" y="805" width="0.0768%" height="15" fill="rgb(234,204,37)"/><text x="35.7086%" y="815.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (5 samples, 0.08%)</title><rect x="35.4586%" y="789" width="0.0768%" height="15" fill="rgb(236,120,5)"/><text x="35.7086%" y="799.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (5 samples, 0.08%)</title><rect x="35.4586%" y="773" width="0.0768%" height="15" fill="rgb(248,97,27)"/><text x="35.7086%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.08%)</title><rect x="35.4586%" y="757" width="0.0768%" height="15" fill="rgb(240,66,17)"/><text x="35.7086%" y="767.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation::{{closure}} (5 samples, 0.08%)</title><rect x="35.4586%" y="741" width="0.0768%" height="15" fill="rgb(210,79,3)"/><text x="35.7086%" y="751.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (5 samples, 0.08%)</title><rect x="35.4586%" y="725" width="0.0768%" height="15" fill="rgb(214,176,27)"/><text x="35.7086%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.08%)</title><rect x="35.4586%" y="709" width="0.0768%" height="15" fill="rgb(235,185,3)"/><text x="35.7086%" y="719.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate::{{closure}} (5 samples, 0.08%)</title><rect x="35.4586%" y="693" width="0.0768%" height="15" fill="rgb(227,24,12)"/><text x="35.7086%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Match&gt; (4 samples, 0.06%)</title><rect x="35.4740%" y="677" width="0.0615%" height="15" fill="rgb(252,169,48)"/><text x="35.7240%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::MatchCase&gt;&gt; (4 samples, 0.06%)</title><rect x="35.4740%" y="661" width="0.0615%" height="15" fill="rgb(212,65,1)"/><text x="35.7240%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.06%)</title><rect x="35.4740%" y="645" width="0.0615%" height="15" fill="rgb(242,39,24)"/><text x="35.7240%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::MatchCase]&gt; (4 samples, 0.06%)</title><rect x="35.4740%" y="629" width="0.0615%" height="15" fill="rgb(249,32,23)"/><text x="35.7240%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::MatchCase&gt; (4 samples, 0.06%)</title><rect x="35.4740%" y="613" width="0.0615%" height="15" fill="rgb(251,195,23)"/><text x="35.7240%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::Par&gt;&gt; (4 samples, 0.06%)</title><rect x="35.4740%" y="597" width="0.0615%" height="15" fill="rgb(236,174,8)"/><text x="35.7240%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (4 samples, 0.06%)</title><rect x="35.4740%" y="581" width="0.0615%" height="15" fill="rgb(220,197,8)"/><text x="35.7240%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Send&gt;&gt; (2 samples, 0.03%)</title><rect x="35.5047%" y="565" width="0.0307%" height="15" fill="rgb(240,108,37)"/><text x="35.7547%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="35.5047%" y="549" width="0.0307%" height="15" fill="rgb(232,176,24)"/><text x="35.7547%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Send]&gt; (2 samples, 0.03%)</title><rect x="35.5047%" y="533" width="0.0307%" height="15" fill="rgb(243,35,29)"/><text x="35.7547%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Send&gt; (1 samples, 0.02%)</title><rect x="35.5200%" y="517" width="0.0154%" height="15" fill="rgb(210,37,18)"/><text x="35.7700%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Par&gt;&gt; (1 samples, 0.02%)</title><rect x="35.5200%" y="501" width="0.0154%" height="15" fill="rgb(224,184,40)"/><text x="35.7700%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="35.5200%" y="485" width="0.0154%" height="15" fill="rgb(236,39,29)"/><text x="35.7700%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Par]&gt; (1 samples, 0.02%)</title><rect x="35.5200%" y="469" width="0.0154%" height="15" fill="rgb(232,48,39)"/><text x="35.7700%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (1 samples, 0.02%)</title><rect x="35.5200%" y="453" width="0.0154%" height="15" fill="rgb(236,34,42)"/><text x="35.7700%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (1 samples, 0.02%)</title><rect x="35.5200%" y="437" width="0.0154%" height="15" fill="rgb(243,106,37)"/><text x="35.7700%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (1 samples, 0.02%)</title><rect x="35.5200%" y="421" width="0.0154%" height="15" fill="rgb(218,96,6)"/><text x="35.7700%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="35.5200%" y="405" width="0.0154%" height="15" fill="rgb(235,130,12)"/><text x="35.7700%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="35.5200%" y="389" width="0.0154%" height="15" fill="rgb(231,95,0)"/><text x="35.7700%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="35.5200%" y="373" width="0.0154%" height="15" fill="rgb(228,12,23)"/><text x="35.7700%" y="383.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="35.5200%" y="357" width="0.0154%" height="15" fill="rgb(216,12,1)"/><text x="35.7700%" y="367.50"></text></g><g><title>isfree (1 samples, 0.02%)</title><rect x="35.5200%" y="341" width="0.0154%" height="15" fill="rgb(219,59,3)"/><text x="35.7700%" y="351.50"></text></g><g><title>isdalloct (1 samples, 0.02%)</title><rect x="35.5200%" y="325" width="0.0154%" height="15" fill="rgb(215,208,46)"/><text x="35.7700%" y="335.50"></text></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect x="35.5200%" y="309" width="0.0154%" height="15" fill="rgb(254,224,29)"/><text x="35.7700%" y="319.50"></text></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect x="35.5200%" y="293" width="0.0154%" height="15" fill="rgb(232,14,29)"/><text x="35.7700%" y="303.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="35.5200%" y="277" width="0.0154%" height="15" fill="rgb(208,45,52)"/><text x="35.7700%" y="287.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (1 samples, 0.02%)</title><rect x="35.5200%" y="261" width="0.0154%" height="15" fill="rgb(234,191,28)"/><text x="35.7700%" y="271.50"></text></g><g><title>arena_dalloc_bin_locked_impl (1 samples, 0.02%)</title><rect x="35.5200%" y="245" width="0.0154%" height="15" fill="rgb(244,67,43)"/><text x="35.7700%" y="255.50"></text></g><g><title>arena_slab_reg_dalloc (1 samples, 0.02%)</title><rect x="35.5200%" y="229" width="0.0154%" height="15" fill="rgb(236,189,24)"/><text x="35.7700%" y="239.50"></text></g><g><title>bitmap_unset (1 samples, 0.02%)</title><rect x="35.5200%" y="213" width="0.0154%" height="15" fill="rgb(239,214,33)"/><text x="35.7700%" y="223.50"></text></g><g><title>async_std::task::builder::Builder::spawn (2 samples, 0.03%)</title><rect x="35.5354%" y="1189" width="0.0307%" height="15" fill="rgb(226,176,41)"/><text x="35.7854%" y="1199.50"></text></g><g><title>async_global_executor::executor::spawn (2 samples, 0.03%)</title><rect x="35.5354%" y="1173" width="0.0307%" height="15" fill="rgb(248,47,8)"/><text x="35.7854%" y="1183.50"></text></g><g><title>__rust_probestack (2 samples, 0.03%)</title><rect x="35.5354%" y="1157" width="0.0307%" height="15" fill="rgb(218,81,44)"/><text x="35.7854%" y="1167.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::allocate (1 samples, 0.02%)</title><rect x="35.5661%" y="1189" width="0.0154%" height="15" fill="rgb(213,98,6)"/><text x="35.8161%" y="1199.50"></text></g><g><title>blake3::ChunkState::update (3 samples, 0.05%)</title><rect x="35.5815%" y="1189" width="0.0461%" height="15" fill="rgb(222,85,22)"/><text x="35.8315%" y="1199.50"></text></g><g><title>blake3::ChunkState::fill_buf (1 samples, 0.02%)</title><rect x="35.6122%" y="1173" width="0.0154%" height="15" fill="rgb(239,46,39)"/><text x="35.8622%" y="1183.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.02%)</title><rect x="35.6122%" y="1157" width="0.0154%" height="15" fill="rgb(237,12,29)"/><text x="35.8622%" y="1167.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="35.6122%" y="1141" width="0.0154%" height="15" fill="rgb(214,77,8)"/><text x="35.8622%" y="1151.50"></text></g><g><title>blake3::Hasher::update (2 samples, 0.03%)</title><rect x="35.6276%" y="1189" width="0.0307%" height="15" fill="rgb(217,168,37)"/><text x="35.8776%" y="1199.50"></text></g><g><title>bytes::bytes::shared_drop (1 samples, 0.02%)</title><rect x="35.6583%" y="1189" width="0.0154%" height="15" fill="rgb(221,217,23)"/><text x="35.9083%" y="1199.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (3 samples, 0.05%)</title><rect x="35.6737%" y="1189" width="0.0461%" height="15" fill="rgb(243,229,36)"/><text x="35.9237%" y="1199.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (3 samples, 0.05%)</title><rect x="35.7198%" y="1189" width="0.0461%" height="15" fill="rgb(251,163,40)"/><text x="35.9698%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (1 samples, 0.02%)</title><rect x="35.7659%" y="1189" width="0.0154%" height="15" fill="rgb(237,222,12)"/><text x="36.0159%" y="1199.50"></text></g><g><title>jemallocator::layout_to_flags (1 samples, 0.02%)</title><rect x="35.7812%" y="1189" width="0.0154%" height="15" fill="rgb(248,132,6)"/><text x="36.0312%" y="1199.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="35.8120%" y="1173" width="0.0154%" height="15" fill="rgb(227,167,50)"/><text x="36.0620%" y="1183.50"></text></g><g><title>core::ptr::read (1 samples, 0.02%)</title><rect x="35.8120%" y="1157" width="0.0154%" height="15" fill="rgb(242,84,37)"/><text x="36.0620%" y="1167.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="35.8427%" y="1157" width="0.0307%" height="15" fill="rgb(212,4,50)"/><text x="36.0927%" y="1167.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (4 samples, 0.06%)</title><rect x="35.8273%" y="1173" width="0.0615%" height="15" fill="rgb(230,228,32)"/><text x="36.0773%" y="1183.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::len (1 samples, 0.02%)</title><rect x="35.8734%" y="1157" width="0.0154%" height="15" fill="rgb(248,217,23)"/><text x="36.1234%" y="1167.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple (1 samples, 0.02%)</title><rect x="35.8734%" y="1141" width="0.0154%" height="15" fill="rgb(238,197,32)"/><text x="36.1234%" y="1151.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.17%)</title><rect x="35.8888%" y="1173" width="0.1690%" height="15" fill="rgb(236,106,1)"/><text x="36.1388%" y="1183.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.08%)</title><rect x="36.0578%" y="1093" width="0.0768%" height="15" fill="rgb(219,228,13)"/><text x="36.3078%" y="1103.50"></text></g><g><title>core::ptr::read (5 samples, 0.08%)</title><rect x="36.0578%" y="1077" width="0.0768%" height="15" fill="rgb(238,30,35)"/><text x="36.3078%" y="1087.50"></text></g><g><title>[libc-2.31.so] (5 samples, 0.08%)</title><rect x="36.0578%" y="1061" width="0.0768%" height="15" fill="rgb(236,70,23)"/><text x="36.3078%" y="1071.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="36.1346%" y="1045" width="0.0154%" height="15" fill="rgb(249,104,48)"/><text x="36.3846%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="36.1346%" y="1093" width="0.0307%" height="15" fill="rgb(254,117,50)"/><text x="36.3846%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (2 samples, 0.03%)</title><rect x="36.1346%" y="1077" width="0.0307%" height="15" fill="rgb(223,152,4)"/><text x="36.3846%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="36.1346%" y="1061" width="0.0307%" height="15" fill="rgb(245,6,2)"/><text x="36.3846%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="36.1499%" y="1045" width="0.0154%" height="15" fill="rgb(249,150,24)"/><text x="36.3999%" y="1055.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.02%)</title><rect x="36.1499%" y="1029" width="0.0154%" height="15" fill="rgb(228,185,42)"/><text x="36.3999%" y="1039.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="36.1653%" y="1093" width="0.0307%" height="15" fill="rgb(226,39,33)"/><text x="36.4153%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.15%)</title><rect x="36.0578%" y="1125" width="0.1536%" height="15" fill="rgb(221,166,19)"/><text x="36.3078%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.15%)</title><rect x="36.0578%" y="1109" width="0.1536%" height="15" fill="rgb(209,109,2)"/><text x="36.3078%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::into_iter::IntoIter&lt;model::rho_types::Par&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="36.1960%" y="1093" width="0.0154%" height="15" fill="rgb(252,216,26)"/><text x="36.4460%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;model::rho_types::Par&gt;&gt; (1 samples, 0.02%)</title><rect x="36.1960%" y="1077" width="0.0154%" height="15" fill="rgb(227,173,36)"/><text x="36.4460%" y="1087.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="36.1960%" y="1061" width="0.0154%" height="15" fill="rgb(209,90,7)"/><text x="36.4460%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;model::rho_types::Par,alloc::alloc::Global&gt;&gt; (1 samples, 0.02%)</title><rect x="36.1960%" y="1045" width="0.0154%" height="15" fill="rgb(250,194,11)"/><text x="36.4460%" y="1055.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="36.1960%" y="1029" width="0.0154%" height="15" fill="rgb(220,72,50)"/><text x="36.4460%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Par&gt;&gt; (1 samples, 0.02%)</title><rect x="36.1960%" y="1013" width="0.0154%" height="15" fill="rgb(222,106,48)"/><text x="36.4460%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="36.1960%" y="997" width="0.0154%" height="15" fill="rgb(216,220,45)"/><text x="36.4460%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="36.1960%" y="981" width="0.0154%" height="15" fill="rgb(234,112,18)"/><text x="36.4460%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="36.1960%" y="965" width="0.0154%" height="15" fill="rgb(206,179,9)"/><text x="36.4460%" y="975.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="36.1960%" y="949" width="0.0154%" height="15" fill="rgb(215,115,40)"/><text x="36.4460%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::FlatMap&lt;smallvec::IntoIter&lt;[model::rho_types::ListParWithRandom: 3]&gt;,alloc::vec::into_iter::IntoIter&lt;model::rho_types::Par&gt;,rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::handle_comm_events::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="36.2114%" y="1125" width="0.0154%" height="15" fill="rgb(222,69,34)"/><text x="36.4614%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::FlattenCompat&lt;core::iter::adapters::map::Map&lt;smallvec::IntoIter&lt;[model::rho_types::ListParWithRandom: 3]&gt;,rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::handle_comm_events::{{closure}}&gt;,alloc::vec::into_iter::IntoIter&lt;model::rho_types::Par&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="36.2114%" y="1109" width="0.0154%" height="15" fill="rgb(209,161,10)"/><text x="36.4614%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::into_iter::IntoIter&lt;model::rho_types::Par&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="36.2114%" y="1093" width="0.0154%" height="15" fill="rgb(217,6,38)"/><text x="36.4614%" y="1103.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (12 samples, 0.18%)</title><rect x="36.0578%" y="1141" width="0.1844%" height="15" fill="rgb(229,229,48)"/><text x="36.3078%" y="1151.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="36.2268%" y="1125" width="0.0154%" height="15" fill="rgb(225,21,28)"/><text x="36.4768%" y="1135.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (13 samples, 0.20%)</title><rect x="36.0578%" y="1157" width="0.1997%" height="15" fill="rgb(206,33,13)"/><text x="36.3078%" y="1167.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="36.2421%" y="1141" width="0.0154%" height="15" fill="rgb(242,178,17)"/><text x="36.4921%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (14 samples, 0.22%)</title><rect x="36.0578%" y="1173" width="0.2151%" height="15" fill="rgb(220,162,5)"/><text x="36.3078%" y="1183.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="36.2575%" y="1157" width="0.0154%" height="15" fill="rgb(210,33,43)"/><text x="36.5075%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (2 samples, 0.03%)</title><rect x="36.2729%" y="1173" width="0.0307%" height="15" fill="rgb(216,116,54)"/><text x="36.5229%" y="1183.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="36.2729%" y="1157" width="0.0307%" height="15" fill="rgb(249,92,24)"/><text x="36.5229%" y="1167.50"></text></g><g><title>__rg_dealloc (1 samples, 0.02%)</title><rect x="36.3189%" y="1013" width="0.0154%" height="15" fill="rgb(231,189,14)"/><text x="36.5689%" y="1023.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.02%)</title><rect x="36.3189%" y="997" width="0.0154%" height="15" fill="rgb(230,8,41)"/><text x="36.5689%" y="1007.50"></text></g><g><title>jemallocator::layout_to_flags (1 samples, 0.02%)</title><rect x="36.3189%" y="981" width="0.0154%" height="15" fill="rgb(249,7,27)"/><text x="36.5689%" y="991.50"></text></g><g><title>sz_size2index (1 samples, 0.02%)</title><rect x="36.3343%" y="949" width="0.0154%" height="15" fill="rgb(232,86,5)"/><text x="36.5843%" y="959.50"></text></g><g><title>sz_size2index_lookup (1 samples, 0.02%)</title><rect x="36.3343%" y="933" width="0.0154%" height="15" fill="rgb(224,175,18)"/><text x="36.5843%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (3 samples, 0.05%)</title><rect x="36.3189%" y="1093" width="0.0461%" height="15" fill="rgb(220,129,12)"/><text x="36.5689%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (3 samples, 0.05%)</title><rect x="36.3189%" y="1077" width="0.0461%" height="15" fill="rgb(210,19,36)"/><text x="36.5689%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="36.3189%" y="1061" width="0.0461%" height="15" fill="rgb(219,96,14)"/><text x="36.5689%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.05%)</title><rect x="36.3189%" y="1045" width="0.0461%" height="15" fill="rgb(249,106,1)"/><text x="36.5689%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.05%)</title><rect x="36.3189%" y="1029" width="0.0461%" height="15" fill="rgb(249,155,20)"/><text x="36.5689%" y="1039.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.03%)</title><rect x="36.3343%" y="1013" width="0.0307%" height="15" fill="rgb(244,168,9)"/><text x="36.5843%" y="1023.50"></text></g><g><title>isfree (2 samples, 0.03%)</title><rect x="36.3343%" y="997" width="0.0307%" height="15" fill="rgb(216,23,50)"/><text x="36.5843%" y="1007.50"></text></g><g><title>isdalloct (2 samples, 0.03%)</title><rect x="36.3343%" y="981" width="0.0307%" height="15" fill="rgb(224,219,20)"/><text x="36.5843%" y="991.50"></text></g><g><title>arena_sdalloc (2 samples, 0.03%)</title><rect x="36.3343%" y="965" width="0.0307%" height="15" fill="rgb(222,156,15)"/><text x="36.5843%" y="975.50"></text></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect x="36.3497%" y="949" width="0.0154%" height="15" fill="rgb(231,97,17)"/><text x="36.5997%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;rho_runtime::interpreter::reduce::environment::Env&gt; (5 samples, 0.08%)</title><rect x="36.3036%" y="1173" width="0.0768%" height="15" fill="rgb(218,70,48)"/><text x="36.5536%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[model::rho_types::Par: 6]&gt;&gt; (5 samples, 0.08%)</title><rect x="36.3036%" y="1157" width="0.0768%" height="15" fill="rgb(212,196,52)"/><text x="36.5536%" y="1167.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.08%)</title><rect x="36.3036%" y="1141" width="0.0768%" height="15" fill="rgb(243,203,18)"/><text x="36.5536%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Par]&gt; (5 samples, 0.08%)</title><rect x="36.3036%" y="1125" width="0.0768%" height="15" fill="rgb(252,125,41)"/><text x="36.5536%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (4 samples, 0.06%)</title><rect x="36.3189%" y="1109" width="0.0615%" height="15" fill="rgb(223,180,33)"/><text x="36.5689%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::New&gt;&gt; (1 samples, 0.02%)</title><rect x="36.3650%" y="1093" width="0.0154%" height="15" fill="rgb(254,159,46)"/><text x="36.6150%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="36.3650%" y="1077" width="0.0154%" height="15" fill="rgb(254,38,10)"/><text x="36.6150%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::New]&gt; (1 samples, 0.02%)</title><rect x="36.3650%" y="1061" width="0.0154%" height="15" fill="rgb(208,217,32)"/><text x="36.6150%" y="1071.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.05%)</title><rect x="36.3804%" y="1157" width="0.0461%" height="15" fill="rgb(221,120,13)"/><text x="36.6304%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3 samples, 0.05%)</title><rect x="36.3804%" y="1141" width="0.0461%" height="15" fill="rgb(246,54,52)"/><text x="36.6304%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.05%)</title><rect x="36.3804%" y="1125" width="0.0461%" height="15" fill="rgb(242,34,25)"/><text x="36.6304%" y="1135.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="36.4265%" y="1013" width="0.0154%" height="15" fill="rgb(247,209,9)"/><text x="36.6765%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.05%)</title><rect x="36.4572%" y="965" width="0.0461%" height="15" fill="rgb(228,71,26)"/><text x="36.7072%" y="975.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (3 samples, 0.05%)</title><rect x="36.5340%" y="917" width="0.0461%" height="15" fill="rgb(222,145,49)"/><text x="36.7840%" y="927.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="36.5494%" y="901" width="0.0307%" height="15" fill="rgb(218,121,17)"/><text x="36.7994%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (2 samples, 0.03%)</title><rect x="36.5801%" y="917" width="0.0307%" height="15" fill="rgb(244,50,7)"/><text x="36.8301%" y="927.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="36.6569%" y="789" width="0.0154%" height="15" fill="rgb(246,229,37)"/><text x="36.9069%" y="799.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="36.6569%" y="773" width="0.0154%" height="15" fill="rgb(225,18,5)"/><text x="36.9069%" y="783.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="36.6569%" y="757" width="0.0154%" height="15" fill="rgb(213,204,8)"/><text x="36.9069%" y="767.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="36.6569%" y="741" width="0.0154%" height="15" fill="rgb(238,103,6)"/><text x="36.9069%" y="751.50"></text></g><g><title>tcache_alloc_large (1 samples, 0.02%)</title><rect x="36.6569%" y="725" width="0.0154%" height="15" fill="rgb(222,25,35)"/><text x="36.9069%" y="735.50"></text></g><g><title>tcache_event (1 samples, 0.02%)</title><rect x="36.6569%" y="709" width="0.0154%" height="15" fill="rgb(213,203,35)"/><text x="36.9069%" y="719.50"></text></g><g><title>_rjem_je_tcache_event_hard (1 samples, 0.02%)</title><rect x="36.6569%" y="693" width="0.0154%" height="15" fill="rgb(221,79,53)"/><text x="36.9069%" y="703.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="36.6569%" y="677" width="0.0154%" height="15" fill="rgb(243,200,35)"/><text x="36.9069%" y="687.50"></text></g><g><title>extent_arena_get (1 samples, 0.02%)</title><rect x="36.6569%" y="661" width="0.0154%" height="15" fill="rgb(248,60,25)"/><text x="36.9069%" y="671.50"></text></g><g><title>atomic_load_p (1 samples, 0.02%)</title><rect x="36.6569%" y="645" width="0.0154%" height="15" fill="rgb(227,53,46)"/><text x="36.9069%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.03%)</title><rect x="36.6569%" y="869" width="0.0307%" height="15" fill="rgb(216,120,32)"/><text x="36.9069%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.03%)</title><rect x="36.6569%" y="853" width="0.0307%" height="15" fill="rgb(220,134,1)"/><text x="36.9069%" y="863.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.03%)</title><rect x="36.6569%" y="837" width="0.0307%" height="15" fill="rgb(237,168,5)"/><text x="36.9069%" y="847.50"></text></g><g><title>_rjem_mallocx (2 samples, 0.03%)</title><rect x="36.6569%" y="821" width="0.0307%" height="15" fill="rgb(231,100,33)"/><text x="36.9069%" y="831.50"></text></g><g><title>imalloc (2 samples, 0.03%)</title><rect x="36.6569%" y="805" width="0.0307%" height="15" fill="rgb(236,177,47)"/><text x="36.9069%" y="815.50"></text></g><g><title>tsd_fetch (1 samples, 0.02%)</title><rect x="36.6723%" y="789" width="0.0154%" height="15" fill="rgb(235,7,49)"/><text x="36.9223%" y="799.50"></text></g><g><title>tsd_fetch_impl (1 samples, 0.02%)</title><rect x="36.6723%" y="773" width="0.0154%" height="15" fill="rgb(232,119,22)"/><text x="36.9223%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.09%)</title><rect x="36.6108%" y="917" width="0.0922%" height="15" fill="rgb(254,73,53)"/><text x="36.8608%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.06%)</title><rect x="36.6416%" y="901" width="0.0615%" height="15" fill="rgb(251,35,20)"/><text x="36.8916%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.06%)</title><rect x="36.6416%" y="885" width="0.0615%" height="15" fill="rgb(241,119,20)"/><text x="36.8916%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (1 samples, 0.02%)</title><rect x="36.6877%" y="869" width="0.0154%" height="15" fill="rgb(207,102,14)"/><text x="36.9377%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.29%)</title><rect x="36.4265%" y="1061" width="0.2919%" height="15" fill="rgb(248,201,50)"/><text x="36.6765%" y="1071.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (19 samples, 0.29%)</title><rect x="36.4265%" y="1045" width="0.2919%" height="15" fill="rgb(222,185,44)"/><text x="36.6765%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (19 samples, 0.29%)</title><rect x="36.4265%" y="1029" width="0.2919%" height="15" fill="rgb(218,107,18)"/><text x="36.6765%" y="1039.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (18 samples, 0.28%)</title><rect x="36.4418%" y="1013" width="0.2765%" height="15" fill="rgb(237,177,39)"/><text x="36.6918%" y="1023.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (18 samples, 0.28%)</title><rect x="36.4418%" y="997" width="0.2765%" height="15" fill="rgb(246,69,6)"/><text x="36.6918%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.26%)</title><rect x="36.4572%" y="981" width="0.2612%" height="15" fill="rgb(234,208,37)"/><text x="36.7072%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14 samples, 0.22%)</title><rect x="36.5033%" y="965" width="0.2151%" height="15" fill="rgb(225,4,6)"/><text x="36.7533%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.22%)</title><rect x="36.5033%" y="949" width="0.2151%" height="15" fill="rgb(233,45,0)"/><text x="36.7533%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14 samples, 0.22%)</title><rect x="36.5033%" y="933" width="0.2151%" height="15" fill="rgb(226,136,5)"/><text x="36.7533%" y="943.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.02%)</title><rect x="36.7030%" y="917" width="0.0154%" height="15" fill="rgb(211,91,47)"/><text x="36.9530%" y="927.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::clone::Clone&gt;::clone (20 samples, 0.31%)</title><rect x="36.4265%" y="1141" width="0.3073%" height="15" fill="rgb(242,88,51)"/><text x="36.6765%" y="1151.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::convert::From&lt;&amp;[&lt;A as smallvec::Array&gt;::Item]&gt;&gt;::from (20 samples, 0.31%)</title><rect x="36.4265%" y="1125" width="0.3073%" height="15" fill="rgb(230,91,28)"/><text x="36.6765%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (20 samples, 0.31%)</title><rect x="36.4265%" y="1109" width="0.3073%" height="15" fill="rgb(254,186,29)"/><text x="36.6765%" y="1119.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (20 samples, 0.31%)</title><rect x="36.4265%" y="1093" width="0.3073%" height="15" fill="rgb(238,6,4)"/><text x="36.6765%" y="1103.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (20 samples, 0.31%)</title><rect x="36.4265%" y="1077" width="0.3073%" height="15" fill="rgb(221,151,16)"/><text x="36.6765%" y="1087.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="36.7184%" y="1061" width="0.0154%" height="15" fill="rgb(251,143,52)"/><text x="36.9684%" y="1071.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="36.7184%" y="1045" width="0.0154%" height="15" fill="rgb(206,90,15)"/><text x="36.9684%" y="1055.50"></text></g><g><title>&lt;rho_runtime::interpreter::reduce::environment::Env&lt;T&gt; as core::clone::Clone&gt;::clone (22 samples, 0.34%)</title><rect x="36.4265%" y="1157" width="0.3380%" height="15" fill="rgb(218,35,8)"/><text x="36.6765%" y="1167.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="36.7338%" y="1141" width="0.0307%" height="15" fill="rgb(239,215,6)"/><text x="36.9838%" y="1151.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.05%)</title><rect x="36.7645%" y="1141" width="0.0461%" height="15" fill="rgb(245,116,39)"/><text x="37.0145%" y="1151.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.11%)</title><rect x="36.8106%" y="1125" width="0.1075%" height="15" fill="rgb(242,65,28)"/><text x="37.0606%" y="1135.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="36.9181%" y="1109" width="0.0154%" height="15" fill="rgb(252,132,53)"/><text x="37.1681%" y="1119.50"></text></g><g><title>async_std::task::task::Task::new (11 samples, 0.17%)</title><rect x="36.9335%" y="1109" width="0.1690%" height="15" fill="rgb(224,159,50)"/><text x="37.1835%" y="1119.50"></text></g><g><title>async_std::task::task_id::TaskId::generate (11 samples, 0.17%)</title><rect x="36.9335%" y="1093" width="0.1690%" height="15" fill="rgb(224,93,4)"/><text x="37.1835%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (11 samples, 0.17%)</title><rect x="36.9335%" y="1077" width="0.1690%" height="15" fill="rgb(208,81,34)"/><text x="37.1835%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_add (11 samples, 0.17%)</title><rect x="36.9335%" y="1061" width="0.1690%" height="15" fill="rgb(233,92,54)"/><text x="37.1835%" y="1071.50"></text></g><g><title>async_std::task::spawn::spawn (23 samples, 0.35%)</title><rect x="36.7645%" y="1157" width="0.3534%" height="15" fill="rgb(237,21,14)"/><text x="37.0145%" y="1167.50"></text></g><g><title>async_std::task::builder::Builder::spawn (20 samples, 0.31%)</title><rect x="36.8106%" y="1141" width="0.3073%" height="15" fill="rgb(249,128,51)"/><text x="37.0606%" y="1151.50"></text></g><g><title>async_std::task::builder::Builder::build (13 samples, 0.20%)</title><rect x="36.9181%" y="1125" width="0.1997%" height="15" fill="rgb(223,129,24)"/><text x="37.1681%" y="1135.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::new (1 samples, 0.02%)</title><rect x="37.1025%" y="1109" width="0.0154%" height="15" fill="rgb(231,168,25)"/><text x="37.3525%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::task::join_handle::JoinHandle&lt;()&gt;&gt; (1 samples, 0.02%)</title><rect x="37.1178%" y="1157" width="0.0154%" height="15" fill="rgb(224,39,20)"/><text x="37.3678%" y="1167.50"></text></g><g><title>&lt;async_std::task::join_handle::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="37.1178%" y="1141" width="0.0154%" height="15" fill="rgb(225,152,53)"/><text x="37.3678%" y="1151.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::detach (1 samples, 0.02%)</title><rect x="37.1178%" y="1125" width="0.0154%" height="15" fill="rgb(252,17,24)"/><text x="37.3678%" y="1135.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::set_detached (1 samples, 0.02%)</title><rect x="37.1178%" y="1109" width="0.0154%" height="15" fill="rgb(250,114,30)"/><text x="37.3678%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.02%)</title><rect x="37.1178%" y="1093" width="0.0154%" height="15" fill="rgb(229,5,4)"/><text x="37.3678%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.02%)</title><rect x="37.1178%" y="1077" width="0.0154%" height="15" fill="rgb(225,176,49)"/><text x="37.3678%" y="1087.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation (58 samples, 0.89%)</title><rect x="36.3804%" y="1173" width="0.8911%" height="15" fill="rgb(224,221,49)"/><text x="36.6304%" y="1183.50"></text></g><g><title>rho_runtime::interpreter::AsynWaitGroup::acquire (9 samples, 0.14%)</title><rect x="37.1332%" y="1157" width="0.1383%" height="15" fill="rgb(253,169,27)"/><text x="37.3832%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicI32::fetch_add (9 samples, 0.14%)</title><rect x="37.1332%" y="1141" width="0.1383%" height="15" fill="rgb(211,206,16)"/><text x="37.3832%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_add (9 samples, 0.14%)</title><rect x="37.1332%" y="1125" width="0.1383%" height="15" fill="rgb(244,87,35)"/><text x="37.3832%" y="1135.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::handle_comm_events (97 samples, 1.49%)</title><rect x="35.7966%" y="1189" width="1.4902%" height="15" fill="rgb(246,28,10)"/><text x="36.0466%" y="1199.50"></text></g><g><title>rho_runtime::interpreter::reduce::environment::Env&lt;T&gt;::create (1 samples, 0.02%)</title><rect x="37.2715%" y="1173" width="0.0154%" height="15" fill="rgb(229,12,44)"/><text x="37.5215%" y="1183.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="37.2715%" y="1157" width="0.0154%" height="15" fill="rgb(210,145,37)"/><text x="37.5215%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.08%)</title><rect x="37.4097%" y="853" width="0.0768%" height="15" fill="rgb(227,112,52)"/><text x="37.6597%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="37.4712%" y="837" width="0.0154%" height="15" fill="rgb(238,155,34)"/><text x="37.7212%" y="847.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="37.4712%" y="821" width="0.0154%" height="15" fill="rgb(239,226,36)"/><text x="37.7212%" y="831.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="37.5019%" y="821" width="0.0154%" height="15" fill="rgb(230,16,23)"/><text x="37.7519%" y="831.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for bool&gt;::clone (1 samples, 0.02%)</title><rect x="37.5019%" y="805" width="0.0154%" height="15" fill="rgb(236,171,36)"/><text x="37.7519%" y="815.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.05%)</title><rect x="37.4866%" y="837" width="0.0461%" height="15" fill="rgb(221,22,14)"/><text x="37.7366%" y="847.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="37.5173%" y="821" width="0.0154%" height="15" fill="rgb(242,43,11)"/><text x="37.7673%" y="831.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (6 samples, 0.09%)</title><rect x="37.4866%" y="853" width="0.0922%" height="15" fill="rgb(232,69,23)"/><text x="37.7366%" y="863.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.05%)</title><rect x="37.5326%" y="837" width="0.0461%" height="15" fill="rgb(216,180,54)"/><text x="37.7826%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="37.6095%" y="741" width="0.0154%" height="15" fill="rgb(216,5,24)"/><text x="37.8595%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.05%)</title><rect x="37.6863%" y="693" width="0.0461%" height="15" fill="rgb(225,89,9)"/><text x="37.9363%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="37.7170%" y="677" width="0.0154%" height="15" fill="rgb(243,75,33)"/><text x="37.9670%" y="687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="37.7170%" y="661" width="0.0154%" height="15" fill="rgb(247,141,45)"/><text x="37.9670%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.09%)</title><rect x="37.9167%" y="581" width="0.0922%" height="15" fill="rgb(232,177,36)"/><text x="38.1667%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="38.0396%" y="533" width="0.0154%" height="15" fill="rgb(219,125,36)"/><text x="38.2896%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.02%)</title><rect x="38.0550%" y="533" width="0.0154%" height="15" fill="rgb(227,94,9)"/><text x="38.3050%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="38.2240%" y="485" width="0.0154%" height="15" fill="rgb(240,34,52)"/><text x="38.4740%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="38.2240%" y="469" width="0.0154%" height="15" fill="rgb(216,45,12)"/><text x="38.4740%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (1 samples, 0.02%)</title><rect x="38.2394%" y="485" width="0.0154%" height="15" fill="rgb(246,21,19)"/><text x="38.4894%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (23 samples, 0.35%)</title><rect x="37.9167%" y="597" width="0.3534%" height="15" fill="rgb(213,98,42)"/><text x="38.1667%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17 samples, 0.26%)</title><rect x="38.0089%" y="581" width="0.2612%" height="15" fill="rgb(250,136,47)"/><text x="38.2589%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (17 samples, 0.26%)</title><rect x="38.0089%" y="565" width="0.2612%" height="15" fill="rgb(251,124,27)"/><text x="38.2589%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17 samples, 0.26%)</title><rect x="38.0089%" y="549" width="0.2612%" height="15" fill="rgb(229,180,14)"/><text x="38.2589%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13 samples, 0.20%)</title><rect x="38.0704%" y="533" width="0.1997%" height="15" fill="rgb(245,216,25)"/><text x="38.3204%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.08%)</title><rect x="38.1933%" y="517" width="0.0768%" height="15" fill="rgb(251,43,5)"/><text x="38.4433%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.08%)</title><rect x="38.1933%" y="501" width="0.0768%" height="15" fill="rgb(250,128,24)"/><text x="38.4433%" y="511.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="38.2547%" y="485" width="0.0154%" height="15" fill="rgb(217,117,27)"/><text x="38.5047%" y="495.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1 samples, 0.02%)</title><rect x="38.2547%" y="469" width="0.0154%" height="15" fill="rgb(245,147,4)"/><text x="38.5047%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.05%)</title><rect x="38.2701%" y="437" width="0.0461%" height="15" fill="rgb(242,201,35)"/><text x="38.5201%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.05%)</title><rect x="38.2701%" y="421" width="0.0461%" height="15" fill="rgb(218,181,1)"/><text x="38.5201%" y="431.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.05%)</title><rect x="38.2701%" y="405" width="0.0461%" height="15" fill="rgb(222,6,29)"/><text x="38.5201%" y="415.50"></text></g><g><title>_rjem_mallocx (3 samples, 0.05%)</title><rect x="38.2701%" y="389" width="0.0461%" height="15" fill="rgb(208,186,3)"/><text x="38.5201%" y="399.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="38.3008%" y="373" width="0.0154%" height="15" fill="rgb(216,36,26)"/><text x="38.5508%" y="383.50"></text></g><g><title>tsd_fetch (1 samples, 0.02%)</title><rect x="38.3008%" y="357" width="0.0154%" height="15" fill="rgb(248,201,23)"/><text x="38.5508%" y="367.50"></text></g><g><title>tsd_fetch_impl (1 samples, 0.02%)</title><rect x="38.3008%" y="341" width="0.0154%" height="15" fill="rgb(251,170,31)"/><text x="38.5508%" y="351.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (32 samples, 0.49%)</title><rect x="37.8399%" y="613" width="0.4916%" height="15" fill="rgb(207,110,25)"/><text x="38.0899%" y="623.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.06%)</title><rect x="38.2701%" y="597" width="0.0615%" height="15" fill="rgb(250,54,15)"/><text x="38.5201%" y="607.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (4 samples, 0.06%)</title><rect x="38.2701%" y="581" width="0.0615%" height="15" fill="rgb(227,68,33)"/><text x="38.5201%" y="591.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (4 samples, 0.06%)</title><rect x="38.2701%" y="565" width="0.0615%" height="15" fill="rgb(238,34,41)"/><text x="38.5201%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.06%)</title><rect x="38.2701%" y="549" width="0.0615%" height="15" fill="rgb(220,11,15)"/><text x="38.5201%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.06%)</title><rect x="38.2701%" y="533" width="0.0615%" height="15" fill="rgb(246,111,35)"/><text x="38.5201%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.06%)</title><rect x="38.2701%" y="517" width="0.0615%" height="15" fill="rgb(209,88,53)"/><text x="38.5201%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.06%)</title><rect x="38.2701%" y="501" width="0.0615%" height="15" fill="rgb(231,185,47)"/><text x="38.5201%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.06%)</title><rect x="38.2701%" y="485" width="0.0615%" height="15" fill="rgb(233,154,1)"/><text x="38.5201%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.06%)</title><rect x="38.2701%" y="469" width="0.0615%" height="15" fill="rgb(225,15,46)"/><text x="38.5201%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.06%)</title><rect x="38.2701%" y="453" width="0.0615%" height="15" fill="rgb(211,135,41)"/><text x="38.5201%" y="463.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="38.3162%" y="437" width="0.0154%" height="15" fill="rgb(208,54,0)"/><text x="38.5662%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1 samples, 0.02%)</title><rect x="38.3162%" y="421" width="0.0154%" height="15" fill="rgb(244,136,14)"/><text x="38.5662%" y="431.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.02%)</title><rect x="38.3162%" y="405" width="0.0154%" height="15" fill="rgb(241,56,14)"/><text x="38.5662%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.02%)</title><rect x="38.3162%" y="389" width="0.0154%" height="15" fill="rgb(205,80,24)"/><text x="38.5662%" y="399.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (45 samples, 0.69%)</title><rect x="37.7324%" y="677" width="0.6914%" height="15" fill="rgb(220,57,4)"/><text x="37.9824%" y="687.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (41 samples, 0.63%)</title><rect x="37.7938%" y="661" width="0.6299%" height="15" fill="rgb(226,193,50)"/><text x="38.0438%" y="671.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (40 samples, 0.61%)</title><rect x="37.8092%" y="645" width="0.6145%" height="15" fill="rgb(231,168,22)"/><text x="38.0592%" y="655.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (40 samples, 0.61%)</title><rect x="37.8092%" y="629" width="0.6145%" height="15" fill="rgb(254,215,14)"/><text x="38.0592%" y="639.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.09%)</title><rect x="38.3315%" y="613" width="0.0922%" height="15" fill="rgb(211,115,16)"/><text x="38.5815%" y="623.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (48 samples, 0.74%)</title><rect x="37.7324%" y="693" width="0.7374%" height="15" fill="rgb(236,210,16)"/><text x="37.9824%" y="703.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.05%)</title><rect x="38.4237%" y="677" width="0.0461%" height="15" fill="rgb(221,94,12)"/><text x="38.6737%" y="687.50"></text></g><g><title>__rg_alloc (1 samples, 0.02%)</title><rect x="38.5466%" y="597" width="0.0154%" height="15" fill="rgb(235,218,49)"/><text x="38.7966%" y="607.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect x="38.5466%" y="581" width="0.0154%" height="15" fill="rgb(217,114,14)"/><text x="38.7966%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.03%)</title><rect x="38.5466%" y="645" width="0.0307%" height="15" fill="rgb(216,145,22)"/><text x="38.7966%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.03%)</title><rect x="38.5466%" y="629" width="0.0307%" height="15" fill="rgb(217,112,39)"/><text x="38.7966%" y="639.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.03%)</title><rect x="38.5466%" y="613" width="0.0307%" height="15" fill="rgb(225,85,32)"/><text x="38.7966%" y="623.50"></text></g><g><title>_rjem_mallocx (1 samples, 0.02%)</title><rect x="38.5620%" y="597" width="0.0154%" height="15" fill="rgb(245,209,47)"/><text x="38.8120%" y="607.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="38.5620%" y="581" width="0.0154%" height="15" fill="rgb(218,220,15)"/><text x="38.8120%" y="591.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="38.5620%" y="565" width="0.0154%" height="15" fill="rgb(222,202,31)"/><text x="38.8120%" y="575.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="38.5620%" y="549" width="0.0154%" height="15" fill="rgb(243,203,4)"/><text x="38.8120%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.14%)</title><rect x="38.4698%" y="693" width="0.1383%" height="15" fill="rgb(237,92,17)"/><text x="38.7198%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.09%)</title><rect x="38.5159%" y="677" width="0.0922%" height="15" fill="rgb(231,119,7)"/><text x="38.7659%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.09%)</title><rect x="38.5159%" y="661" width="0.0922%" height="15" fill="rgb(237,82,41)"/><text x="38.7659%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (2 samples, 0.03%)</title><rect x="38.5774%" y="645" width="0.0307%" height="15" fill="rgb(226,81,48)"/><text x="38.8274%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (66 samples, 1.01%)</title><rect x="37.6095%" y="757" width="1.0140%" height="15" fill="rgb(234,70,51)"/><text x="37.8595%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (65 samples, 1.00%)</title><rect x="37.6248%" y="741" width="0.9986%" height="15" fill="rgb(251,86,4)"/><text x="37.8748%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (65 samples, 1.00%)</title><rect x="37.6248%" y="725" width="0.9986%" height="15" fill="rgb(244,144,28)"/><text x="37.8748%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (65 samples, 1.00%)</title><rect x="37.6248%" y="709" width="0.9986%" height="15" fill="rgb(232,161,39)"/><text x="37.8748%" y="719.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.02%)</title><rect x="38.6081%" y="693" width="0.0154%" height="15" fill="rgb(247,34,51)"/><text x="38.8581%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.09%)</title><rect x="38.6388%" y="597" width="0.0922%" height="15" fill="rgb(225,132,2)"/><text x="38.8888%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.09%)</title><rect x="38.6388%" y="581" width="0.0922%" height="15" fill="rgb(209,159,44)"/><text x="38.8888%" y="591.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.09%)</title><rect x="38.6388%" y="565" width="0.0922%" height="15" fill="rgb(251,214,1)"/><text x="38.8888%" y="575.50"></text></g><g><title>_rjem_mallocx (6 samples, 0.09%)</title><rect x="38.6388%" y="549" width="0.0922%" height="15" fill="rgb(247,84,47)"/><text x="38.8888%" y="559.50"></text></g><g><title>imalloc (6 samples, 0.09%)</title><rect x="38.6388%" y="533" width="0.0922%" height="15" fill="rgb(240,111,43)"/><text x="38.8888%" y="543.50"></text></g><g><title>imalloc_body (6 samples, 0.09%)</title><rect x="38.6388%" y="517" width="0.0922%" height="15" fill="rgb(215,214,35)"/><text x="38.8888%" y="527.50"></text></g><g><title>imalloc_no_sample (6 samples, 0.09%)</title><rect x="38.6388%" y="501" width="0.0922%" height="15" fill="rgb(248,207,23)"/><text x="38.8888%" y="511.50"></text></g><g><title>iallocztm (5 samples, 0.08%)</title><rect x="38.6542%" y="485" width="0.0768%" height="15" fill="rgb(214,186,4)"/><text x="38.9042%" y="495.50"></text></g><g><title>arena_malloc (5 samples, 0.08%)</title><rect x="38.6542%" y="469" width="0.0768%" height="15" fill="rgb(220,133,22)"/><text x="38.9042%" y="479.50"></text></g><g><title>tcache_alloc_small (5 samples, 0.08%)</title><rect x="38.6542%" y="453" width="0.0768%" height="15" fill="rgb(239,134,19)"/><text x="38.9042%" y="463.50"></text></g><g><title>cache_bin_alloc_easy (4 samples, 0.06%)</title><rect x="38.6695%" y="437" width="0.0615%" height="15" fill="rgb(250,140,9)"/><text x="38.9195%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.11%)</title><rect x="38.6388%" y="645" width="0.1075%" height="15" fill="rgb(225,59,14)"/><text x="38.8888%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.11%)</title><rect x="38.6388%" y="629" width="0.1075%" height="15" fill="rgb(214,152,51)"/><text x="38.8888%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.11%)</title><rect x="38.6388%" y="613" width="0.1075%" height="15" fill="rgb(251,227,43)"/><text x="38.8888%" y="623.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="38.7310%" y="597" width="0.0154%" height="15" fill="rgb(241,96,17)"/><text x="38.9810%" y="607.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1 samples, 0.02%)</title><rect x="38.7310%" y="581" width="0.0154%" height="15" fill="rgb(234,198,43)"/><text x="38.9810%" y="591.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.02%)</title><rect x="38.7310%" y="565" width="0.0154%" height="15" fill="rgb(220,108,29)"/><text x="38.9810%" y="575.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.02%)</title><rect x="38.7310%" y="549" width="0.0154%" height="15" fill="rgb(226,163,33)"/><text x="38.9810%" y="559.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (76 samples, 1.17%)</title><rect x="37.5941%" y="773" width="1.1676%" height="15" fill="rgb(205,194,45)"/><text x="37.8441%" y="783.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.14%)</title><rect x="38.6234%" y="757" width="0.1383%" height="15" fill="rgb(206,143,44)"/><text x="38.8734%" y="767.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (8 samples, 0.12%)</title><rect x="38.6388%" y="741" width="0.1229%" height="15" fill="rgb(236,136,36)"/><text x="38.8888%" y="751.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (8 samples, 0.12%)</title><rect x="38.6388%" y="725" width="0.1229%" height="15" fill="rgb(249,172,42)"/><text x="38.8888%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.12%)</title><rect x="38.6388%" y="709" width="0.1229%" height="15" fill="rgb(216,139,23)"/><text x="38.8888%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.12%)</title><rect x="38.6388%" y="693" width="0.1229%" height="15" fill="rgb(207,166,20)"/><text x="38.8888%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.12%)</title><rect x="38.6388%" y="677" width="0.1229%" height="15" fill="rgb(210,209,22)"/><text x="38.8888%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.12%)</title><rect x="38.6388%" y="661" width="0.1229%" height="15" fill="rgb(232,118,20)"/><text x="38.8888%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.02%)</title><rect x="38.7464%" y="645" width="0.0154%" height="15" fill="rgb(238,113,42)"/><text x="38.9964%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="38.7464%" y="629" width="0.0154%" height="15" fill="rgb(231,42,5)"/><text x="38.9964%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.02%)</title><rect x="38.7617%" y="773" width="0.0154%" height="15" fill="rgb(243,166,24)"/><text x="39.0117%" y="783.50"></text></g><g><title>dynamic_opts_init (1 samples, 0.02%)</title><rect x="38.8232%" y="661" width="0.0154%" height="15" fill="rgb(237,226,12)"/><text x="39.0732%" y="671.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect x="38.8385%" y="565" width="0.0154%" height="15" fill="rgb(229,133,24)"/><text x="39.0885%" y="575.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (1 samples, 0.02%)</title><rect x="38.8385%" y="549" width="0.0154%" height="15" fill="rgb(238,33,43)"/><text x="39.0885%" y="559.50"></text></g><g><title>arena_slab_reg_alloc (1 samples, 0.02%)</title><rect x="38.8385%" y="533" width="0.0154%" height="15" fill="rgb(227,59,38)"/><text x="39.0885%" y="543.50"></text></g><g><title>bitmap_sfu (1 samples, 0.02%)</title><rect x="38.8385%" y="517" width="0.0154%" height="15" fill="rgb(230,97,0)"/><text x="39.0885%" y="527.50"></text></g><g><title>ffs_lu (1 samples, 0.02%)</title><rect x="38.8385%" y="501" width="0.0154%" height="15" fill="rgb(250,173,50)"/><text x="39.0885%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.12%)</title><rect x="38.7771%" y="773" width="0.1229%" height="15" fill="rgb(240,15,50)"/><text x="39.0271%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.12%)</title><rect x="38.7771%" y="757" width="0.1229%" height="15" fill="rgb(221,93,22)"/><text x="39.0271%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.12%)</title><rect x="38.7771%" y="741" width="0.1229%" height="15" fill="rgb(245,180,53)"/><text x="39.0271%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.12%)</title><rect x="38.7771%" y="725" width="0.1229%" height="15" fill="rgb(231,88,51)"/><text x="39.0271%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.12%)</title><rect x="38.7771%" y="709" width="0.1229%" height="15" fill="rgb(240,58,21)"/><text x="39.0271%" y="719.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.12%)</title><rect x="38.7771%" y="693" width="0.1229%" height="15" fill="rgb(237,21,10)"/><text x="39.0271%" y="703.50"></text></g><g><title>_rjem_mallocx (8 samples, 0.12%)</title><rect x="38.7771%" y="677" width="0.1229%" height="15" fill="rgb(218,43,11)"/><text x="39.0271%" y="687.50"></text></g><g><title>imalloc (4 samples, 0.06%)</title><rect x="38.8385%" y="661" width="0.0615%" height="15" fill="rgb(218,221,29)"/><text x="39.0885%" y="671.50"></text></g><g><title>imalloc_body (4 samples, 0.06%)</title><rect x="38.8385%" y="645" width="0.0615%" height="15" fill="rgb(214,118,42)"/><text x="39.0885%" y="655.50"></text></g><g><title>imalloc_no_sample (4 samples, 0.06%)</title><rect x="38.8385%" y="629" width="0.0615%" height="15" fill="rgb(251,200,26)"/><text x="39.0885%" y="639.50"></text></g><g><title>iallocztm (4 samples, 0.06%)</title><rect x="38.8385%" y="613" width="0.0615%" height="15" fill="rgb(237,101,39)"/><text x="39.0885%" y="623.50"></text></g><g><title>arena_malloc (4 samples, 0.06%)</title><rect x="38.8385%" y="597" width="0.0615%" height="15" fill="rgb(251,117,11)"/><text x="39.0885%" y="607.50"></text></g><g><title>tcache_alloc_small (4 samples, 0.06%)</title><rect x="38.8385%" y="581" width="0.0615%" height="15" fill="rgb(216,223,23)"/><text x="39.0885%" y="591.50"></text></g><g><title>cache_bin_alloc_easy (3 samples, 0.05%)</title><rect x="38.8539%" y="565" width="0.0461%" height="15" fill="rgb(251,54,12)"/><text x="39.1039%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (92 samples, 1.41%)</title><rect x="37.5787%" y="837" width="1.4134%" height="15" fill="rgb(254,176,54)"/><text x="37.8287%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (92 samples, 1.41%)</title><rect x="37.5787%" y="821" width="1.4134%" height="15" fill="rgb(210,32,8)"/><text x="37.8287%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (92 samples, 1.41%)</title><rect x="37.5787%" y="805" width="1.4134%" height="15" fill="rgb(235,52,38)"/><text x="37.8287%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (92 samples, 1.41%)</title><rect x="37.5787%" y="789" width="1.4134%" height="15" fill="rgb(231,4,44)"/><text x="37.8287%" y="799.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (6 samples, 0.09%)</title><rect x="38.9000%" y="773" width="0.0922%" height="15" fill="rgb(249,2,32)"/><text x="39.1500%" y="783.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.09%)</title><rect x="38.9000%" y="757" width="0.0922%" height="15" fill="rgb(224,65,26)"/><text x="39.1500%" y="767.50"></text></g><g><title>__rg_alloc (4 samples, 0.06%)</title><rect x="38.9922%" y="629" width="0.0615%" height="15" fill="rgb(250,73,40)"/><text x="39.2422%" y="639.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (4 samples, 0.06%)</title><rect x="38.9922%" y="613" width="0.0615%" height="15" fill="rgb(253,177,16)"/><text x="39.2422%" y="623.50"></text></g><g><title>jemallocator::layout_to_flags (1 samples, 0.02%)</title><rect x="39.0383%" y="597" width="0.0154%" height="15" fill="rgb(217,32,34)"/><text x="39.2883%" y="607.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="39.0536%" y="581" width="0.0154%" height="15" fill="rgb(212,7,10)"/><text x="39.3036%" y="591.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="39.0536%" y="565" width="0.0154%" height="15" fill="rgb(245,89,8)"/><text x="39.3036%" y="575.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="39.0536%" y="549" width="0.0154%" height="15" fill="rgb(237,16,53)"/><text x="39.3036%" y="559.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="39.0536%" y="533" width="0.0154%" height="15" fill="rgb(250,204,30)"/><text x="39.3036%" y="543.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect x="39.0536%" y="517" width="0.0154%" height="15" fill="rgb(208,77,27)"/><text x="39.3036%" y="527.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (6 samples, 0.09%)</title><rect x="38.9922%" y="821" width="0.0922%" height="15" fill="rgb(250,204,28)"/><text x="39.2422%" y="831.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (6 samples, 0.09%)</title><rect x="38.9922%" y="805" width="0.0922%" height="15" fill="rgb(244,63,21)"/><text x="39.2422%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.09%)</title><rect x="38.9922%" y="789" width="0.0922%" height="15" fill="rgb(236,85,44)"/><text x="39.2422%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.09%)</title><rect x="38.9922%" y="773" width="0.0922%" height="15" fill="rgb(215,98,4)"/><text x="39.2422%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.09%)</title><rect x="38.9922%" y="757" width="0.0922%" height="15" fill="rgb(235,38,11)"/><text x="39.2422%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.09%)</title><rect x="38.9922%" y="741" width="0.0922%" height="15" fill="rgb(254,186,25)"/><text x="39.2422%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.09%)</title><rect x="38.9922%" y="725" width="0.0922%" height="15" fill="rgb(225,55,31)"/><text x="39.2422%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.09%)</title><rect x="38.9922%" y="709" width="0.0922%" height="15" fill="rgb(211,15,21)"/><text x="39.2422%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.09%)</title><rect x="38.9922%" y="693" width="0.0922%" height="15" fill="rgb(215,187,41)"/><text x="39.2422%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.09%)</title><rect x="38.9922%" y="677" width="0.0922%" height="15" fill="rgb(248,69,32)"/><text x="39.2422%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.09%)</title><rect x="38.9922%" y="661" width="0.0922%" height="15" fill="rgb(252,102,52)"/><text x="39.2422%" y="671.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.09%)</title><rect x="38.9922%" y="645" width="0.0922%" height="15" fill="rgb(253,140,32)"/><text x="39.2422%" y="655.50"></text></g><g><title>_rjem_mallocx (2 samples, 0.03%)</title><rect x="39.0536%" y="629" width="0.0307%" height="15" fill="rgb(216,56,42)"/><text x="39.3036%" y="639.50"></text></g><g><title>imalloc (2 samples, 0.03%)</title><rect x="39.0536%" y="613" width="0.0307%" height="15" fill="rgb(216,184,14)"/><text x="39.3036%" y="623.50"></text></g><g><title>imalloc_body (2 samples, 0.03%)</title><rect x="39.0536%" y="597" width="0.0307%" height="15" fill="rgb(237,187,27)"/><text x="39.3036%" y="607.50"></text></g><g><title>sz_size2index (1 samples, 0.02%)</title><rect x="39.0690%" y="581" width="0.0154%" height="15" fill="rgb(219,65,3)"/><text x="39.3190%" y="591.50"></text></g><g><title>sz_size2index_lookup (1 samples, 0.02%)</title><rect x="39.0690%" y="565" width="0.0154%" height="15" fill="rgb(245,83,25)"/><text x="39.3190%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.02%)</title><rect x="39.1458%" y="789" width="0.0154%" height="15" fill="rgb(214,205,45)"/><text x="39.3958%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.02%)</title><rect x="39.1458%" y="773" width="0.0154%" height="15" fill="rgb(241,20,18)"/><text x="39.3958%" y="783.50"></text></g><g><title>&lt;model::rho_types::GUnforgeable as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="39.1919%" y="741" width="0.0307%" height="15" fill="rgb(232,163,23)"/><text x="39.4419%" y="751.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="39.1919%" y="725" width="0.0307%" height="15" fill="rgb(214,5,46)"/><text x="39.4419%" y="735.50"></text></g><g><title>&lt;model::rho_types::g_unforgeable::UnfInstance as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="39.1919%" y="709" width="0.0307%" height="15" fill="rgb(229,78,17)"/><text x="39.4419%" y="719.50"></text></g><g><title>&lt;model::rho_types::GPrivate as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="39.1919%" y="693" width="0.0307%" height="15" fill="rgb(248,89,10)"/><text x="39.4419%" y="703.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="39.1919%" y="677" width="0.0307%" height="15" fill="rgb(248,54,15)"/><text x="39.4419%" y="687.50"></text></g><g><title>bytes::bytes::shared_clone (2 samples, 0.03%)</title><rect x="39.1919%" y="661" width="0.0307%" height="15" fill="rgb(223,116,6)"/><text x="39.4419%" y="671.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (2 samples, 0.03%)</title><rect x="39.1919%" y="645" width="0.0307%" height="15" fill="rgb(205,125,38)"/><text x="39.4419%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.03%)</title><rect x="39.1919%" y="629" width="0.0307%" height="15" fill="rgb(251,78,38)"/><text x="39.4419%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.03%)</title><rect x="39.1919%" y="613" width="0.0307%" height="15" fill="rgb(253,78,28)"/><text x="39.4419%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.03%)</title><rect x="39.2226%" y="693" width="0.0307%" height="15" fill="rgb(209,120,3)"/><text x="39.4726%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.03%)</title><rect x="39.2226%" y="677" width="0.0307%" height="15" fill="rgb(238,229,9)"/><text x="39.4726%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="39.2380%" y="661" width="0.0154%" height="15" fill="rgb(253,159,18)"/><text x="39.4880%" y="671.50"></text></g><g><title>_rjem_mallocx (1 samples, 0.02%)</title><rect x="39.2380%" y="645" width="0.0154%" height="15" fill="rgb(244,42,34)"/><text x="39.4880%" y="655.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="39.2380%" y="629" width="0.0154%" height="15" fill="rgb(224,8,7)"/><text x="39.4880%" y="639.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="39.2380%" y="613" width="0.0154%" height="15" fill="rgb(210,201,45)"/><text x="39.4880%" y="623.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="39.2380%" y="597" width="0.0154%" height="15" fill="rgb(252,185,21)"/><text x="39.4880%" y="607.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="39.2380%" y="581" width="0.0154%" height="15" fill="rgb(223,131,1)"/><text x="39.4880%" y="591.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="39.2380%" y="565" width="0.0154%" height="15" fill="rgb(245,141,16)"/><text x="39.4880%" y="575.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="39.2380%" y="549" width="0.0154%" height="15" fill="rgb(229,55,45)"/><text x="39.4880%" y="559.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect x="39.2380%" y="533" width="0.0154%" height="15" fill="rgb(208,92,15)"/><text x="39.4880%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (2 samples, 0.03%)</title><rect x="39.2533%" y="693" width="0.0307%" height="15" fill="rgb(234,185,47)"/><text x="39.5033%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.09%)</title><rect x="39.2226%" y="741" width="0.0922%" height="15" fill="rgb(253,104,50)"/><text x="39.4726%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.09%)</title><rect x="39.2226%" y="725" width="0.0922%" height="15" fill="rgb(205,70,7)"/><text x="39.4726%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.09%)</title><rect x="39.2226%" y="709" width="0.0922%" height="15" fill="rgb(240,178,43)"/><text x="39.4726%" y="719.50"></text></g><g><title>core::alloc::layout::Layout::array (2 samples, 0.03%)</title><rect x="39.2841%" y="693" width="0.0307%" height="15" fill="rgb(214,112,2)"/><text x="39.5341%" y="703.50"></text></g><g><title>core::alloc::layout::Layout::repeat (2 samples, 0.03%)</title><rect x="39.2841%" y="677" width="0.0307%" height="15" fill="rgb(206,46,17)"/><text x="39.5341%" y="687.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (2 samples, 0.03%)</title><rect x="39.2841%" y="661" width="0.0307%" height="15" fill="rgb(225,220,16)"/><text x="39.5341%" y="671.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (2 samples, 0.03%)</title><rect x="39.2841%" y="645" width="0.0307%" height="15" fill="rgb(238,65,40)"/><text x="39.5341%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.18%)</title><rect x="39.1458%" y="805" width="0.1844%" height="15" fill="rgb(230,151,21)"/><text x="39.3958%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 0.17%)</title><rect x="39.1612%" y="789" width="0.1690%" height="15" fill="rgb(218,58,49)"/><text x="39.4112%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.17%)</title><rect x="39.1612%" y="773" width="0.1690%" height="15" fill="rgb(219,179,14)"/><text x="39.4112%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.17%)</title><rect x="39.1612%" y="757" width="0.1690%" height="15" fill="rgb(223,72,1)"/><text x="39.4112%" y="767.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.02%)</title><rect x="39.3148%" y="741" width="0.0154%" height="15" fill="rgb(238,126,10)"/><text x="39.5648%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="39.3302%" y="693" width="0.0154%" height="15" fill="rgb(224,206,38)"/><text x="39.5802%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.02%)</title><rect x="39.3302%" y="677" width="0.0154%" height="15" fill="rgb(212,201,54)"/><text x="39.5802%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.02%)</title><rect x="39.3302%" y="661" width="0.0154%" height="15" fill="rgb(218,154,48)"/><text x="39.5802%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="39.3302%" y="645" width="0.0154%" height="15" fill="rgb(232,93,24)"/><text x="39.5802%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="39.3302%" y="629" width="0.0154%" height="15" fill="rgb(245,30,21)"/><text x="39.5802%" y="639.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="39.3302%" y="613" width="0.0154%" height="15" fill="rgb(242,148,29)"/><text x="39.5802%" y="623.50"></text></g><g><title>_rjem_mallocx (1 samples, 0.02%)</title><rect x="39.3302%" y="597" width="0.0154%" height="15" fill="rgb(244,153,54)"/><text x="39.5802%" y="607.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="39.3302%" y="581" width="0.0154%" height="15" fill="rgb(252,87,22)"/><text x="39.5802%" y="591.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="39.3302%" y="565" width="0.0154%" height="15" fill="rgb(210,51,29)"/><text x="39.5802%" y="575.50"></text></g><g><title>sz_index2size (1 samples, 0.02%)</title><rect x="39.3302%" y="549" width="0.0154%" height="15" fill="rgb(242,136,47)"/><text x="39.5802%" y="559.50"></text></g><g><title>sz_index2size_lookup (1 samples, 0.02%)</title><rect x="39.3302%" y="533" width="0.0154%" height="15" fill="rgb(238,68,4)"/><text x="39.5802%" y="543.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (18 samples, 0.28%)</title><rect x="39.0843%" y="821" width="0.2765%" height="15" fill="rgb(242,161,30)"/><text x="39.3343%" y="831.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="39.3302%" y="805" width="0.0307%" height="15" fill="rgb(218,58,44)"/><text x="39.5802%" y="815.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="39.3302%" y="789" width="0.0307%" height="15" fill="rgb(252,125,32)"/><text x="39.5802%" y="799.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="39.3302%" y="773" width="0.0307%" height="15" fill="rgb(219,178,0)"/><text x="39.5802%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="39.3302%" y="757" width="0.0307%" height="15" fill="rgb(213,152,7)"/><text x="39.5802%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.03%)</title><rect x="39.3302%" y="741" width="0.0307%" height="15" fill="rgb(249,109,34)"/><text x="39.5802%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.03%)</title><rect x="39.3302%" y="725" width="0.0307%" height="15" fill="rgb(232,96,21)"/><text x="39.5802%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.03%)</title><rect x="39.3302%" y="709" width="0.0307%" height="15" fill="rgb(228,27,39)"/><text x="39.5802%" y="719.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.02%)</title><rect x="39.3455%" y="693" width="0.0154%" height="15" fill="rgb(211,182,52)"/><text x="39.5955%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="39.3455%" y="677" width="0.0154%" height="15" fill="rgb(234,178,38)"/><text x="39.5955%" y="687.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="39.3455%" y="661" width="0.0154%" height="15" fill="rgb(221,111,3)"/><text x="39.5955%" y="671.50"></text></g><g><title>&lt;model::rho_types::Send as core::clone::Clone&gt;::clone (127 samples, 1.95%)</title><rect x="37.5787%" y="853" width="1.9511%" height="15" fill="rgb(228,175,21)"/><text x="37.8287%" y="863.50">&lt;..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (35 samples, 0.54%)</title><rect x="38.9922%" y="837" width="0.5377%" height="15" fill="rgb(228,174,43)"/><text x="39.2422%" y="847.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.17%)</title><rect x="39.3609%" y="821" width="0.1690%" height="15" fill="rgb(211,191,0)"/><text x="39.6109%" y="831.50"></text></g><g><title>__rg_alloc (1 samples, 0.02%)</title><rect x="39.7450%" y="757" width="0.0154%" height="15" fill="rgb(253,117,3)"/><text x="39.9950%" y="767.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect x="39.7450%" y="741" width="0.0154%" height="15" fill="rgb(241,127,19)"/><text x="39.9950%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.11%)</title><rect x="39.7296%" y="805" width="0.1075%" height="15" fill="rgb(218,103,12)"/><text x="39.9796%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.11%)</title><rect x="39.7296%" y="789" width="0.1075%" height="15" fill="rgb(236,214,43)"/><text x="39.9796%" y="799.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.09%)</title><rect x="39.7450%" y="773" width="0.0922%" height="15" fill="rgb(244,144,19)"/><text x="39.9950%" y="783.50"></text></g><g><title>_rjem_mallocx (5 samples, 0.08%)</title><rect x="39.7603%" y="757" width="0.0768%" height="15" fill="rgb(246,188,10)"/><text x="40.0103%" y="767.50"></text></g><g><title>imalloc (3 samples, 0.05%)</title><rect x="39.7911%" y="741" width="0.0461%" height="15" fill="rgb(212,193,33)"/><text x="40.0411%" y="751.50"></text></g><g><title>imalloc_body (3 samples, 0.05%)</title><rect x="39.7911%" y="725" width="0.0461%" height="15" fill="rgb(241,51,29)"/><text x="40.0411%" y="735.50"></text></g><g><title>imalloc_no_sample (2 samples, 0.03%)</title><rect x="39.8064%" y="709" width="0.0307%" height="15" fill="rgb(211,58,19)"/><text x="40.0564%" y="719.50"></text></g><g><title>iallocztm (2 samples, 0.03%)</title><rect x="39.8064%" y="693" width="0.0307%" height="15" fill="rgb(229,111,26)"/><text x="40.0564%" y="703.50"></text></g><g><title>arena_malloc (2 samples, 0.03%)</title><rect x="39.8064%" y="677" width="0.0307%" height="15" fill="rgb(213,115,40)"/><text x="40.0564%" y="687.50"></text></g><g><title>tcache_alloc_small (2 samples, 0.03%)</title><rect x="39.8064%" y="661" width="0.0307%" height="15" fill="rgb(209,56,44)"/><text x="40.0564%" y="671.50"></text></g><g><title>cache_bin_alloc_easy (2 samples, 0.03%)</title><rect x="39.8064%" y="645" width="0.0307%" height="15" fill="rgb(230,108,32)"/><text x="40.0564%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (1 samples, 0.02%)</title><rect x="39.8371%" y="805" width="0.0154%" height="15" fill="rgb(216,165,31)"/><text x="40.0871%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (22 samples, 0.34%)</title><rect x="39.5299%" y="853" width="0.3380%" height="15" fill="rgb(218,122,21)"/><text x="39.7799%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.20%)</title><rect x="39.6682%" y="837" width="0.1997%" height="15" fill="rgb(223,224,47)"/><text x="39.9182%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.20%)</title><rect x="39.6682%" y="821" width="0.1997%" height="15" fill="rgb(238,102,44)"/><text x="39.9182%" y="831.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="39.8525%" y="805" width="0.0154%" height="15" fill="rgb(236,46,40)"/><text x="40.1025%" y="815.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1 samples, 0.02%)</title><rect x="39.8525%" y="789" width="0.0154%" height="15" fill="rgb(247,202,50)"/><text x="40.1025%" y="799.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.02%)</title><rect x="39.8525%" y="773" width="0.0154%" height="15" fill="rgb(209,99,20)"/><text x="40.1025%" y="783.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.02%)</title><rect x="39.8525%" y="757" width="0.0154%" height="15" fill="rgb(252,27,34)"/><text x="40.1025%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (189 samples, 2.90%)</title><rect x="37.3022%" y="1029" width="2.9037%" height="15" fill="rgb(215,206,23)"/><text x="37.5522%" y="1039.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (189 samples, 2.90%)</title><rect x="37.3022%" y="1013" width="2.9037%" height="15" fill="rgb(212,135,36)"/><text x="37.5522%" y="1023.50">al..</text></g><g><title>alloc::slice::hack::to_vec (189 samples, 2.90%)</title><rect x="37.3022%" y="997" width="2.9037%" height="15" fill="rgb(240,189,1)"/><text x="37.5522%" y="1007.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (189 samples, 2.90%)</title><rect x="37.3022%" y="981" width="2.9037%" height="15" fill="rgb(242,56,20)"/><text x="37.5522%" y="991.50">&lt;T..</text></g><g><title>&lt;model::rho_types::MatchCase as core::clone::Clone&gt;::clone (189 samples, 2.90%)</title><rect x="37.3022%" y="965" width="2.9037%" height="15" fill="rgb(247,132,33)"/><text x="37.5522%" y="975.50">&lt;m..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (189 samples, 2.90%)</title><rect x="37.3022%" y="949" width="2.9037%" height="15" fill="rgb(208,149,11)"/><text x="37.5522%" y="959.50">&lt;c..</text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (189 samples, 2.90%)</title><rect x="37.3022%" y="933" width="2.9037%" height="15" fill="rgb(211,33,11)"/><text x="37.5522%" y="943.50">&lt;m..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (189 samples, 2.90%)</title><rect x="37.3022%" y="917" width="2.9037%" height="15" fill="rgb(221,29,38)"/><text x="37.5522%" y="927.50">&lt;a..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (189 samples, 2.90%)</title><rect x="37.3022%" y="901" width="2.9037%" height="15" fill="rgb(206,182,49)"/><text x="37.5522%" y="911.50">al..</text></g><g><title>alloc::slice::hack::to_vec (189 samples, 2.90%)</title><rect x="37.3022%" y="885" width="2.9037%" height="15" fill="rgb(216,140,1)"/><text x="37.5522%" y="895.50">al..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (189 samples, 2.90%)</title><rect x="37.3022%" y="869" width="2.9037%" height="15" fill="rgb(232,57,40)"/><text x="37.5522%" y="879.50">&lt;T..</text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (22 samples, 0.34%)</title><rect x="39.8679%" y="853" width="0.3380%" height="15" fill="rgb(224,186,18)"/><text x="40.1179%" y="863.50"></text></g><g><title>[libc-2.31.so] (20 samples, 0.31%)</title><rect x="39.8986%" y="837" width="0.3073%" height="15" fill="rgb(215,121,11)"/><text x="40.1486%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="40.2059%" y="933" width="0.0154%" height="15" fill="rgb(245,147,10)"/><text x="40.4559%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.05%)</title><rect x="40.2980%" y="821" width="0.0461%" height="15" fill="rgb(238,153,13)"/><text x="40.5480%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="40.3441%" y="773" width="0.0154%" height="15" fill="rgb(233,108,0)"/><text x="40.5941%" y="783.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (3 samples, 0.05%)</title><rect x="40.3595%" y="773" width="0.0461%" height="15" fill="rgb(212,157,17)"/><text x="40.6095%" y="783.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.05%)</title><rect x="40.3595%" y="757" width="0.0461%" height="15" fill="rgb(225,213,38)"/><text x="40.6095%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.02%)</title><rect x="40.4056%" y="773" width="0.0154%" height="15" fill="rgb(248,16,11)"/><text x="40.6556%" y="783.50"></text></g><g><title>__rg_alloc (1 samples, 0.02%)</title><rect x="40.5439%" y="677" width="0.0154%" height="15" fill="rgb(241,33,4)"/><text x="40.7939%" y="687.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect x="40.5439%" y="661" width="0.0154%" height="15" fill="rgb(222,26,43)"/><text x="40.7939%" y="671.50"></text></g><g><title>jemallocator::layout_to_flags (1 samples, 0.02%)</title><rect x="40.5439%" y="645" width="0.0154%" height="15" fill="rgb(243,29,36)"/><text x="40.7939%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.05%)</title><rect x="40.5439%" y="725" width="0.0461%" height="15" fill="rgb(241,9,27)"/><text x="40.7939%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.05%)</title><rect x="40.5439%" y="709" width="0.0461%" height="15" fill="rgb(205,117,26)"/><text x="40.7939%" y="719.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.05%)</title><rect x="40.5439%" y="693" width="0.0461%" height="15" fill="rgb(209,80,39)"/><text x="40.7939%" y="703.50"></text></g><g><title>_rjem_mallocx (2 samples, 0.03%)</title><rect x="40.5592%" y="677" width="0.0307%" height="15" fill="rgb(239,155,6)"/><text x="40.8092%" y="687.50"></text></g><g><title>imalloc (2 samples, 0.03%)</title><rect x="40.5592%" y="661" width="0.0307%" height="15" fill="rgb(212,104,12)"/><text x="40.8092%" y="671.50"></text></g><g><title>imalloc_body (2 samples, 0.03%)</title><rect x="40.5592%" y="645" width="0.0307%" height="15" fill="rgb(234,204,3)"/><text x="40.8092%" y="655.50"></text></g><g><title>imalloc_no_sample (2 samples, 0.03%)</title><rect x="40.5592%" y="629" width="0.0307%" height="15" fill="rgb(251,218,7)"/><text x="40.8092%" y="639.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="40.5746%" y="613" width="0.0154%" height="15" fill="rgb(221,81,32)"/><text x="40.8246%" y="623.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="40.5746%" y="597" width="0.0154%" height="15" fill="rgb(214,152,26)"/><text x="40.8246%" y="607.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="40.5746%" y="581" width="0.0154%" height="15" fill="rgb(223,22,3)"/><text x="40.8246%" y="591.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect x="40.5746%" y="565" width="0.0154%" height="15" fill="rgb(207,174,7)"/><text x="40.8246%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.18%)</title><rect x="40.4210%" y="773" width="0.1844%" height="15" fill="rgb(224,19,52)"/><text x="40.6710%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.11%)</title><rect x="40.4978%" y="757" width="0.1075%" height="15" fill="rgb(228,24,14)"/><text x="40.7478%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.11%)</title><rect x="40.4978%" y="741" width="0.1075%" height="15" fill="rgb(230,153,43)"/><text x="40.7478%" y="751.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.02%)</title><rect x="40.5900%" y="725" width="0.0154%" height="15" fill="rgb(231,106,12)"/><text x="40.8400%" y="735.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1 samples, 0.02%)</title><rect x="40.5900%" y="709" width="0.0154%" height="15" fill="rgb(215,92,2)"/><text x="40.8400%" y="719.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.02%)</title><rect x="40.5900%" y="693" width="0.0154%" height="15" fill="rgb(249,143,25)"/><text x="40.8400%" y="703.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.02%)</title><rect x="40.5900%" y="677" width="0.0154%" height="15" fill="rgb(252,7,35)"/><text x="40.8400%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (28 samples, 0.43%)</title><rect x="40.2827%" y="837" width="0.4302%" height="15" fill="rgb(216,69,40)"/><text x="40.5327%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (24 samples, 0.37%)</title><rect x="40.3441%" y="821" width="0.3687%" height="15" fill="rgb(240,36,33)"/><text x="40.5941%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (24 samples, 0.37%)</title><rect x="40.3441%" y="805" width="0.3687%" height="15" fill="rgb(231,128,14)"/><text x="40.5941%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (24 samples, 0.37%)</title><rect x="40.3441%" y="789" width="0.3687%" height="15" fill="rgb(245,143,14)"/><text x="40.5941%" y="799.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (7 samples, 0.11%)</title><rect x="40.6053%" y="773" width="0.1075%" height="15" fill="rgb(222,130,28)"/><text x="40.8553%" y="783.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.06%)</title><rect x="40.6514%" y="757" width="0.0615%" height="15" fill="rgb(212,10,48)"/><text x="40.9014%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.03%)</title><rect x="40.7129%" y="725" width="0.0307%" height="15" fill="rgb(254,118,45)"/><text x="40.9629%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.03%)</title><rect x="40.7129%" y="709" width="0.0307%" height="15" fill="rgb(228,6,45)"/><text x="40.9629%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.03%)</title><rect x="40.7129%" y="693" width="0.0307%" height="15" fill="rgb(241,18,35)"/><text x="40.9629%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.03%)</title><rect x="40.7129%" y="677" width="0.0307%" height="15" fill="rgb(227,214,53)"/><text x="40.9629%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.03%)</title><rect x="40.7129%" y="661" width="0.0307%" height="15" fill="rgb(224,107,51)"/><text x="40.9629%" y="671.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.03%)</title><rect x="40.7129%" y="645" width="0.0307%" height="15" fill="rgb(248,60,28)"/><text x="40.9629%" y="655.50"></text></g><g><title>_rjem_mallocx (2 samples, 0.03%)</title><rect x="40.7129%" y="629" width="0.0307%" height="15" fill="rgb(249,101,23)"/><text x="40.9629%" y="639.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="40.7282%" y="613" width="0.0154%" height="15" fill="rgb(228,51,19)"/><text x="40.9782%" y="623.50"></text></g><g><title>tsd_fetch (1 samples, 0.02%)</title><rect x="40.7282%" y="597" width="0.0154%" height="15" fill="rgb(213,20,6)"/><text x="40.9782%" y="607.50"></text></g><g><title>tsd_fetch_impl (1 samples, 0.02%)</title><rect x="40.7282%" y="581" width="0.0154%" height="15" fill="rgb(212,124,10)"/><text x="40.9782%" y="591.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (32 samples, 0.49%)</title><rect x="40.2673%" y="853" width="0.4916%" height="15" fill="rgb(248,3,40)"/><text x="40.5173%" y="863.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.05%)</title><rect x="40.7129%" y="837" width="0.0461%" height="15" fill="rgb(223,178,23)"/><text x="40.9629%" y="847.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (3 samples, 0.05%)</title><rect x="40.7129%" y="821" width="0.0461%" height="15" fill="rgb(240,132,45)"/><text x="40.9629%" y="831.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (3 samples, 0.05%)</title><rect x="40.7129%" y="805" width="0.0461%" height="15" fill="rgb(245,164,36)"/><text x="40.9629%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.05%)</title><rect x="40.7129%" y="789" width="0.0461%" height="15" fill="rgb(231,188,53)"/><text x="40.9629%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.05%)</title><rect x="40.7129%" y="773" width="0.0461%" height="15" fill="rgb(237,198,39)"/><text x="40.9629%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.05%)</title><rect x="40.7129%" y="757" width="0.0461%" height="15" fill="rgb(223,120,35)"/><text x="40.9629%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.05%)</title><rect x="40.7129%" y="741" width="0.0461%" height="15" fill="rgb(253,107,49)"/><text x="40.9629%" y="751.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.02%)</title><rect x="40.7436%" y="725" width="0.0154%" height="15" fill="rgb(216,44,31)"/><text x="40.9936%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="40.7436%" y="709" width="0.0154%" height="15" fill="rgb(253,87,21)"/><text x="40.9936%" y="719.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="40.7436%" y="693" width="0.0154%" height="15" fill="rgb(226,18,2)"/><text x="40.9936%" y="703.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (36 samples, 0.55%)</title><rect x="40.2673%" y="869" width="0.5531%" height="15" fill="rgb(216,8,46)"/><text x="40.5173%" y="879.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.06%)</title><rect x="40.7589%" y="853" width="0.0615%" height="15" fill="rgb(226,140,39)"/><text x="41.0089%" y="863.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (38 samples, 0.58%)</title><rect x="40.2673%" y="901" width="0.5838%" height="15" fill="rgb(221,194,54)"/><text x="40.5173%" y="911.50"></text></g><g><title>&lt;model::rho_types::ELt as core::clone::Clone&gt;::clone (38 samples, 0.58%)</title><rect x="40.2673%" y="885" width="0.5838%" height="15" fill="rgb(213,92,11)"/><text x="40.5173%" y="895.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="40.8204%" y="869" width="0.0307%" height="15" fill="rgb(229,162,46)"/><text x="41.0704%" y="879.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (43 samples, 0.66%)</title><rect x="40.2212%" y="933" width="0.6606%" height="15" fill="rgb(214,111,36)"/><text x="40.4712%" y="943.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (43 samples, 0.66%)</title><rect x="40.2212%" y="917" width="0.6606%" height="15" fill="rgb(207,6,21)"/><text x="40.4712%" y="927.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="40.8511%" y="901" width="0.0307%" height="15" fill="rgb(213,127,38)"/><text x="41.1011%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.05%)</title><rect x="40.8819%" y="933" width="0.0461%" height="15" fill="rgb(238,118,32)"/><text x="41.1319%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.05%)</title><rect x="40.8819%" y="917" width="0.0461%" height="15" fill="rgb(240,139,39)"/><text x="41.1319%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.05%)</title><rect x="40.8819%" y="901" width="0.0461%" height="15" fill="rgb(235,10,37)"/><text x="41.1319%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.03%)</title><rect x="40.8972%" y="885" width="0.0307%" height="15" fill="rgb(249,171,38)"/><text x="41.1472%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.03%)</title><rect x="40.8972%" y="869" width="0.0307%" height="15" fill="rgb(242,144,32)"/><text x="41.1472%" y="879.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="40.9126%" y="853" width="0.0154%" height="15" fill="rgb(217,117,21)"/><text x="41.1626%" y="863.50"></text></g><g><title>_rjem_mallocx (1 samples, 0.02%)</title><rect x="40.9126%" y="837" width="0.0154%" height="15" fill="rgb(249,87,1)"/><text x="41.1626%" y="847.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="40.9126%" y="821" width="0.0154%" height="15" fill="rgb(248,196,48)"/><text x="41.1626%" y="831.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="40.9126%" y="805" width="0.0154%" height="15" fill="rgb(251,206,33)"/><text x="41.1626%" y="815.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="40.9126%" y="789" width="0.0154%" height="15" fill="rgb(232,141,28)"/><text x="41.1626%" y="799.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="40.9126%" y="773" width="0.0154%" height="15" fill="rgb(209,167,14)"/><text x="41.1626%" y="783.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="40.9126%" y="757" width="0.0154%" height="15" fill="rgb(225,11,50)"/><text x="41.1626%" y="767.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="40.9126%" y="741" width="0.0154%" height="15" fill="rgb(209,50,20)"/><text x="41.1626%" y="751.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect x="40.9126%" y="725" width="0.0154%" height="15" fill="rgb(212,17,46)"/><text x="41.1626%" y="735.50"></text></g><g><title>&lt;rho_runtime::storage::TaggedContinuation as core::clone::Clone&gt;::clone (242 samples, 3.72%)</title><rect x="37.3022%" y="1173" width="3.7179%" height="15" fill="rgb(216,101,39)"/><text x="37.5522%" y="1183.50">&lt;rho..</text></g><g><title>&lt;model::rho_types::ParWithRandom as core::clone::Clone&gt;::clone (242 samples, 3.72%)</title><rect x="37.3022%" y="1157" width="3.7179%" height="15" fill="rgb(212,228,48)"/><text x="37.5522%" y="1167.50">&lt;mod..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (242 samples, 3.72%)</title><rect x="37.3022%" y="1141" width="3.7179%" height="15" fill="rgb(250,6,50)"/><text x="37.5522%" y="1151.50">&lt;cor..</text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (242 samples, 3.72%)</title><rect x="37.3022%" y="1125" width="3.7179%" height="15" fill="rgb(250,160,48)"/><text x="37.5522%" y="1135.50">&lt;mod..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (242 samples, 3.72%)</title><rect x="37.3022%" y="1109" width="3.7179%" height="15" fill="rgb(244,216,33)"/><text x="37.5522%" y="1119.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (242 samples, 3.72%)</title><rect x="37.3022%" y="1093" width="3.7179%" height="15" fill="rgb(207,157,5)"/><text x="37.5522%" y="1103.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (242 samples, 3.72%)</title><rect x="37.3022%" y="1077" width="3.7179%" height="15" fill="rgb(228,199,8)"/><text x="37.5522%" y="1087.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (242 samples, 3.72%)</title><rect x="37.3022%" y="1061" width="3.7179%" height="15" fill="rgb(227,80,20)"/><text x="37.5522%" y="1071.50">&lt;T a..</text></g><g><title>&lt;model::rho_types::Match as core::clone::Clone&gt;::clone (242 samples, 3.72%)</title><rect x="37.3022%" y="1045" width="3.7179%" height="15" fill="rgb(222,9,33)"/><text x="37.5522%" y="1055.50">&lt;mod..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (53 samples, 0.81%)</title><rect x="40.2059%" y="1029" width="0.8143%" height="15" fill="rgb(239,44,28)"/><text x="40.4559%" y="1039.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (53 samples, 0.81%)</title><rect x="40.2059%" y="1013" width="0.8143%" height="15" fill="rgb(249,187,43)"/><text x="40.4559%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (53 samples, 0.81%)</title><rect x="40.2059%" y="997" width="0.8143%" height="15" fill="rgb(216,141,28)"/><text x="40.4559%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (53 samples, 0.81%)</title><rect x="40.2059%" y="981" width="0.8143%" height="15" fill="rgb(230,154,53)"/><text x="40.4559%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (53 samples, 0.81%)</title><rect x="40.2059%" y="965" width="0.8143%" height="15" fill="rgb(227,82,4)"/><text x="40.4559%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (53 samples, 0.81%)</title><rect x="40.2059%" y="949" width="0.8143%" height="15" fill="rgb(220,107,16)"/><text x="40.4559%" y="959.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (6 samples, 0.09%)</title><rect x="40.9279%" y="933" width="0.0922%" height="15" fill="rgb(207,187,2)"/><text x="41.1779%" y="943.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.05%)</title><rect x="40.9740%" y="917" width="0.0461%" height="15" fill="rgb(210,162,52)"/><text x="41.2240%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;concurrent_queue::unbounded::Block&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="41.0201%" y="1013" width="0.0154%" height="15" fill="rgb(217,216,49)"/><text x="41.2701%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.02%)</title><rect x="41.0355%" y="1013" width="0.0154%" height="15" fill="rgb(218,146,49)"/><text x="41.2855%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="41.0355%" y="997" width="0.0154%" height="15" fill="rgb(216,55,40)"/><text x="41.2855%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (5 samples, 0.08%)</title><rect x="41.0509%" y="1013" width="0.0768%" height="15" fill="rgb(208,196,21)"/><text x="41.3009%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (5 samples, 0.08%)</title><rect x="41.0509%" y="997" width="0.0768%" height="15" fill="rgb(242,117,42)"/><text x="41.3009%" y="1007.50"></text></g><g><title>rho_runtime::storage::transit::Transit::produce (253 samples, 3.89%)</title><rect x="37.2868%" y="1189" width="3.8869%" height="15" fill="rgb(210,11,23)"/><text x="37.5368%" y="1199.50">rho_..</text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (10 samples, 0.15%)</title><rect x="41.0201%" y="1173" width="0.1536%" height="15" fill="rgb(217,110,2)"/><text x="41.2701%" y="1183.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::complete (10 samples, 0.15%)</title><rect x="41.0201%" y="1157" width="0.1536%" height="15" fill="rgb(229,77,54)"/><text x="41.2701%" y="1167.50"></text></g><g><title>tokio::sync::oneshot::Task::with_task (10 samples, 0.15%)</title><rect x="41.0201%" y="1141" width="0.1536%" height="15" fill="rgb(218,53,16)"/><text x="41.2701%" y="1151.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (10 samples, 0.15%)</title><rect x="41.0201%" y="1125" width="0.1536%" height="15" fill="rgb(215,38,13)"/><text x="41.2701%" y="1135.50"></text></g><g><title>tokio::sync::oneshot::Task::with_task::{{closure}} (10 samples, 0.15%)</title><rect x="41.0201%" y="1109" width="0.1536%" height="15" fill="rgb(235,42,18)"/><text x="41.2701%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once (10 samples, 0.15%)</title><rect x="41.0201%" y="1093" width="0.1536%" height="15" fill="rgb(219,66,54)"/><text x="41.2701%" y="1103.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (10 samples, 0.15%)</title><rect x="41.0201%" y="1077" width="0.1536%" height="15" fill="rgb(222,205,4)"/><text x="41.2701%" y="1087.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (10 samples, 0.15%)</title><rect x="41.0201%" y="1061" width="0.1536%" height="15" fill="rgb(227,213,46)"/><text x="41.2701%" y="1071.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (10 samples, 0.15%)</title><rect x="41.0201%" y="1045" width="0.1536%" height="15" fill="rgb(250,145,42)"/><text x="41.2701%" y="1055.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (10 samples, 0.15%)</title><rect x="41.0201%" y="1029" width="0.1536%" height="15" fill="rgb(219,15,2)"/><text x="41.2701%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (3 samples, 0.05%)</title><rect x="41.1277%" y="1013" width="0.0461%" height="15" fill="rgb(231,181,52)"/><text x="41.3777%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_or (3 samples, 0.05%)</title><rect x="41.1277%" y="997" width="0.0461%" height="15" fill="rgb(235,1,42)"/><text x="41.3777%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="41.1738%" y="213" width="0.0461%" height="15" fill="rgb(249,88,27)"/><text x="41.4238%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Expr]&gt; (3 samples, 0.05%)</title><rect x="41.1738%" y="197" width="0.0461%" height="15" fill="rgb(235,145,16)"/><text x="41.4238%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Expr&gt; (3 samples, 0.05%)</title><rect x="41.1738%" y="181" width="0.0461%" height="15" fill="rgb(237,114,19)"/><text x="41.4238%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::expr::ExprInstance&gt;&gt; (3 samples, 0.05%)</title><rect x="41.1738%" y="165" width="0.0461%" height="15" fill="rgb(238,51,50)"/><text x="41.4238%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Par&gt;&gt; (4 samples, 0.06%)</title><rect x="41.1738%" y="293" width="0.0615%" height="15" fill="rgb(205,194,25)"/><text x="41.4238%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.06%)</title><rect x="41.1738%" y="277" width="0.0615%" height="15" fill="rgb(215,203,17)"/><text x="41.4238%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Par]&gt; (4 samples, 0.06%)</title><rect x="41.1738%" y="261" width="0.0615%" height="15" fill="rgb(233,112,49)"/><text x="41.4238%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (4 samples, 0.06%)</title><rect x="41.1738%" y="245" width="0.0615%" height="15" fill="rgb(241,130,26)"/><text x="41.4238%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (4 samples, 0.06%)</title><rect x="41.1738%" y="229" width="0.0615%" height="15" fill="rgb(252,223,19)"/><text x="41.4238%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (1 samples, 0.02%)</title><rect x="41.2198%" y="213" width="0.0154%" height="15" fill="rgb(211,95,25)"/><text x="41.4698%" y="223.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="41.2198%" y="197" width="0.0154%" height="15" fill="rgb(251,182,27)"/><text x="41.4698%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="41.2198%" y="181" width="0.0154%" height="15" fill="rgb(238,24,4)"/><text x="41.4698%" y="191.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="41.2198%" y="165" width="0.0154%" height="15" fill="rgb(224,220,25)"/><text x="41.4698%" y="175.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="41.2198%" y="149" width="0.0154%" height="15" fill="rgb(239,133,26)"/><text x="41.4698%" y="159.50"></text></g><g><title>isfree (1 samples, 0.02%)</title><rect x="41.2198%" y="133" width="0.0154%" height="15" fill="rgb(211,94,48)"/><text x="41.4698%" y="143.50"></text></g><g><title>isdalloct (1 samples, 0.02%)</title><rect x="41.2198%" y="117" width="0.0154%" height="15" fill="rgb(239,87,6)"/><text x="41.4698%" y="127.50"></text></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect x="41.2198%" y="101" width="0.0154%" height="15" fill="rgb(227,62,0)"/><text x="41.4698%" y="111.50"></text></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect x="41.2198%" y="85" width="0.0154%" height="15" fill="rgb(211,226,4)"/><text x="41.4698%" y="95.50"></text></g><g><title>start_thread (7 samples, 0.11%)</title><rect x="41.1738%" y="1189" width="0.1075%" height="15" fill="rgb(253,38,52)"/><text x="41.4238%" y="1199.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (7 samples, 0.11%)</title><rect x="41.1738%" y="1173" width="0.1075%" height="15" fill="rgb(229,126,40)"/><text x="41.4238%" y="1183.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (7 samples, 0.11%)</title><rect x="41.1738%" y="1157" width="0.1075%" height="15" fill="rgb(229,165,44)"/><text x="41.4238%" y="1167.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (7 samples, 0.11%)</title><rect x="41.1738%" y="1141" width="0.1075%" height="15" fill="rgb(247,95,47)"/><text x="41.4238%" y="1151.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (7 samples, 0.11%)</title><rect x="41.1738%" y="1125" width="0.1075%" height="15" fill="rgb(216,140,30)"/><text x="41.4238%" y="1135.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (7 samples, 0.11%)</title><rect x="41.1738%" y="1109" width="0.1075%" height="15" fill="rgb(246,214,8)"/><text x="41.4238%" y="1119.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.11%)</title><rect x="41.1738%" y="1093" width="0.1075%" height="15" fill="rgb(227,224,15)"/><text x="41.4238%" y="1103.50"></text></g><g><title>std::panicking::try (7 samples, 0.11%)</title><rect x="41.1738%" y="1077" width="0.1075%" height="15" fill="rgb(233,175,4)"/><text x="41.4238%" y="1087.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.11%)</title><rect x="41.1738%" y="1061" width="0.1075%" height="15" fill="rgb(221,66,45)"/><text x="41.4238%" y="1071.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7 samples, 0.11%)</title><rect x="41.1738%" y="1045" width="0.1075%" height="15" fill="rgb(221,178,18)"/><text x="41.4238%" y="1055.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (7 samples, 0.11%)</title><rect x="41.1738%" y="1029" width="0.1075%" height="15" fill="rgb(213,81,29)"/><text x="41.4238%" y="1039.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (7 samples, 0.11%)</title><rect x="41.1738%" y="1013" width="0.1075%" height="15" fill="rgb(220,89,49)"/><text x="41.4238%" y="1023.50"></text></g><g><title>core::ops::function::FnOnce::call_once (7 samples, 0.11%)</title><rect x="41.1738%" y="997" width="0.1075%" height="15" fill="rgb(227,60,33)"/><text x="41.4238%" y="1007.50"></text></g><g><title>async_global_executor::threading::thread_main_loop (7 samples, 0.11%)</title><rect x="41.1738%" y="981" width="0.1075%" height="15" fill="rgb(205,113,12)"/><text x="41.4238%" y="991.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.11%)</title><rect x="41.1738%" y="965" width="0.1075%" height="15" fill="rgb(211,32,1)"/><text x="41.4238%" y="975.50"></text></g><g><title>std::panicking::try (7 samples, 0.11%)</title><rect x="41.1738%" y="949" width="0.1075%" height="15" fill="rgb(246,2,12)"/><text x="41.4238%" y="959.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.11%)</title><rect x="41.1738%" y="933" width="0.1075%" height="15" fill="rgb(243,37,27)"/><text x="41.4238%" y="943.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (7 samples, 0.11%)</title><rect x="41.1738%" y="917" width="0.1075%" height="15" fill="rgb(248,211,31)"/><text x="41.4238%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (7 samples, 0.11%)</title><rect x="41.1738%" y="901" width="0.1075%" height="15" fill="rgb(242,146,47)"/><text x="41.4238%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7 samples, 0.11%)</title><rect x="41.1738%" y="885" width="0.1075%" height="15" fill="rgb(206,70,20)"/><text x="41.4238%" y="895.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (7 samples, 0.11%)</title><rect x="41.1738%" y="869" width="0.1075%" height="15" fill="rgb(215,10,51)"/><text x="41.4238%" y="879.50"></text></g><g><title>async_global_executor::reactor::block_on (7 samples, 0.11%)</title><rect x="41.1738%" y="853" width="0.1075%" height="15" fill="rgb(243,178,53)"/><text x="41.4238%" y="863.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (7 samples, 0.11%)</title><rect x="41.1738%" y="837" width="0.1075%" height="15" fill="rgb(233,221,20)"/><text x="41.4238%" y="847.50"></text></g><g><title>async_io::driver::block_on (7 samples, 0.11%)</title><rect x="41.1738%" y="821" width="0.1075%" height="15" fill="rgb(218,95,35)"/><text x="41.4238%" y="831.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (7 samples, 0.11%)</title><rect x="41.1738%" y="805" width="0.1075%" height="15" fill="rgb(229,13,5)"/><text x="41.4238%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.11%)</title><rect x="41.1738%" y="789" width="0.1075%" height="15" fill="rgb(252,164,30)"/><text x="41.4238%" y="799.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (7 samples, 0.11%)</title><rect x="41.1738%" y="773" width="0.1075%" height="15" fill="rgb(232,68,36)"/><text x="41.4238%" y="783.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (7 samples, 0.11%)</title><rect x="41.1738%" y="757" width="0.1075%" height="15" fill="rgb(219,59,54)"/><text x="41.4238%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.11%)</title><rect x="41.1738%" y="741" width="0.1075%" height="15" fill="rgb(250,92,33)"/><text x="41.4238%" y="751.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (7 samples, 0.11%)</title><rect x="41.1738%" y="725" width="0.1075%" height="15" fill="rgb(229,162,54)"/><text x="41.4238%" y="735.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (7 samples, 0.11%)</title><rect x="41.1738%" y="709" width="0.1075%" height="15" fill="rgb(244,114,52)"/><text x="41.4238%" y="719.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (7 samples, 0.11%)</title><rect x="41.1738%" y="693" width="0.1075%" height="15" fill="rgb(212,211,43)"/><text x="41.4238%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.11%)</title><rect x="41.1738%" y="677" width="0.1075%" height="15" fill="rgb(226,147,8)"/><text x="41.4238%" y="687.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (7 samples, 0.11%)</title><rect x="41.1738%" y="661" width="0.1075%" height="15" fill="rgb(226,23,13)"/><text x="41.4238%" y="671.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (7 samples, 0.11%)</title><rect x="41.1738%" y="645" width="0.1075%" height="15" fill="rgb(240,63,4)"/><text x="41.4238%" y="655.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (7 samples, 0.11%)</title><rect x="41.1738%" y="629" width="0.1075%" height="15" fill="rgb(221,1,32)"/><text x="41.4238%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (7 samples, 0.11%)</title><rect x="41.1738%" y="613" width="0.1075%" height="15" fill="rgb(242,117,10)"/><text x="41.4238%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (7 samples, 0.11%)</title><rect x="41.1738%" y="597" width="0.1075%" height="15" fill="rgb(249,172,44)"/><text x="41.4238%" y="607.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (7 samples, 0.11%)</title><rect x="41.1738%" y="581" width="0.1075%" height="15" fill="rgb(244,46,45)"/><text x="41.4238%" y="591.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (7 samples, 0.11%)</title><rect x="41.1738%" y="565" width="0.1075%" height="15" fill="rgb(206,43,17)"/><text x="41.4238%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.11%)</title><rect x="41.1738%" y="549" width="0.1075%" height="15" fill="rgb(239,218,39)"/><text x="41.4238%" y="559.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation::{{closure}} (7 samples, 0.11%)</title><rect x="41.1738%" y="533" width="0.1075%" height="15" fill="rgb(208,169,54)"/><text x="41.4238%" y="543.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (7 samples, 0.11%)</title><rect x="41.1738%" y="517" width="0.1075%" height="15" fill="rgb(247,25,42)"/><text x="41.4238%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.11%)</title><rect x="41.1738%" y="501" width="0.1075%" height="15" fill="rgb(226,23,31)"/><text x="41.4238%" y="511.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate::{{closure}} (7 samples, 0.11%)</title><rect x="41.1738%" y="485" width="0.1075%" height="15" fill="rgb(247,16,28)"/><text x="41.4238%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Match&gt; (7 samples, 0.11%)</title><rect x="41.1738%" y="469" width="0.1075%" height="15" fill="rgb(231,147,38)"/><text x="41.4238%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::MatchCase&gt;&gt; (7 samples, 0.11%)</title><rect x="41.1738%" y="453" width="0.1075%" height="15" fill="rgb(253,81,48)"/><text x="41.4238%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.11%)</title><rect x="41.1738%" y="437" width="0.1075%" height="15" fill="rgb(249,222,43)"/><text x="41.4238%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::MatchCase]&gt; (7 samples, 0.11%)</title><rect x="41.1738%" y="421" width="0.1075%" height="15" fill="rgb(221,3,27)"/><text x="41.4238%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::MatchCase&gt; (7 samples, 0.11%)</title><rect x="41.1738%" y="405" width="0.1075%" height="15" fill="rgb(228,180,5)"/><text x="41.4238%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::Par&gt;&gt; (7 samples, 0.11%)</title><rect x="41.1738%" y="389" width="0.1075%" height="15" fill="rgb(227,131,42)"/><text x="41.4238%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (7 samples, 0.11%)</title><rect x="41.1738%" y="373" width="0.1075%" height="15" fill="rgb(212,3,39)"/><text x="41.4238%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Send&gt;&gt; (7 samples, 0.11%)</title><rect x="41.1738%" y="357" width="0.1075%" height="15" fill="rgb(226,45,5)"/><text x="41.4238%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.11%)</title><rect x="41.1738%" y="341" width="0.1075%" height="15" fill="rgb(215,167,45)"/><text x="41.4238%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Send]&gt; (7 samples, 0.11%)</title><rect x="41.1738%" y="325" width="0.1075%" height="15" fill="rgb(250,218,53)"/><text x="41.4238%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Send&gt; (7 samples, 0.11%)</title><rect x="41.1738%" y="309" width="0.1075%" height="15" fill="rgb(207,140,0)"/><text x="41.4238%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::Par&gt;&gt; (3 samples, 0.05%)</title><rect x="41.2352%" y="293" width="0.0461%" height="15" fill="rgb(238,133,51)"/><text x="41.4852%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (3 samples, 0.05%)</title><rect x="41.2352%" y="277" width="0.0461%" height="15" fill="rgb(218,203,53)"/><text x="41.4852%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::GUnforgeable&gt;&gt; (3 samples, 0.05%)</title><rect x="41.2352%" y="261" width="0.0461%" height="15" fill="rgb(226,184,25)"/><text x="41.4852%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="41.2352%" y="245" width="0.0461%" height="15" fill="rgb(231,121,21)"/><text x="41.4852%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::GUnforgeable]&gt; (3 samples, 0.05%)</title><rect x="41.2352%" y="229" width="0.0461%" height="15" fill="rgb(251,14,34)"/><text x="41.4852%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::GUnforgeable&gt; (3 samples, 0.05%)</title><rect x="41.2352%" y="213" width="0.0461%" height="15" fill="rgb(249,193,11)"/><text x="41.4852%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::g_unforgeable::UnfInstance&gt;&gt; (3 samples, 0.05%)</title><rect x="41.2352%" y="197" width="0.0461%" height="15" fill="rgb(220,172,37)"/><text x="41.4852%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::g_unforgeable::UnfInstance&gt; (3 samples, 0.05%)</title><rect x="41.2352%" y="181" width="0.0461%" height="15" fill="rgb(231,229,43)"/><text x="41.4852%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::GPrivate&gt; (3 samples, 0.05%)</title><rect x="41.2352%" y="165" width="0.0461%" height="15" fill="rgb(250,161,5)"/><text x="41.4852%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (3 samples, 0.05%)</title><rect x="41.2352%" y="149" width="0.0461%" height="15" fill="rgb(218,225,18)"/><text x="41.4852%" y="159.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="41.2352%" y="133" width="0.0461%" height="15" fill="rgb(245,45,42)"/><text x="41.4852%" y="143.50"></text></g><g><title>bytes::bytes::shared_drop (3 samples, 0.05%)</title><rect x="41.2352%" y="117" width="0.0461%" height="15" fill="rgb(211,115,1)"/><text x="41.4852%" y="127.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (3 samples, 0.05%)</title><rect x="41.2352%" y="101" width="0.0461%" height="15" fill="rgb(248,133,52)"/><text x="41.4852%" y="111.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (3 samples, 0.05%)</title><rect x="41.2352%" y="85" width="0.0461%" height="15" fill="rgb(238,100,21)"/><text x="41.4852%" y="95.50"></text></g><g><title>bytes::bytes::release_shared (3 samples, 0.05%)</title><rect x="41.2352%" y="69" width="0.0461%" height="15" fill="rgb(247,144,11)"/><text x="41.4852%" y="79.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.05%)</title><rect x="41.2352%" y="53" width="0.0461%" height="15" fill="rgb(206,164,16)"/><text x="41.4852%" y="63.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.05%)</title><rect x="41.2352%" y="37" width="0.0461%" height="15" fill="rgb(222,34,3)"/><text x="41.4852%" y="47.50"></text></g><g><title>tokio::sync::oneshot::State::set_complete (1 samples, 0.02%)</title><rect x="41.2813%" y="1189" width="0.0154%" height="15" fill="rgb(248,82,4)"/><text x="41.5313%" y="1199.50"></text></g><g><title>[unknown] (2,479 samples, 38.09%)</title><rect x="3.2417%" y="1205" width="38.0857%" height="15" fill="rgb(228,81,46)"/><text x="3.4917%" y="1215.50">[unknown]</text></g><g><title>tokio::sync::oneshot::Task::set_task (2 samples, 0.03%)</title><rect x="41.2967%" y="1189" width="0.0307%" height="15" fill="rgb(227,67,47)"/><text x="41.5467%" y="1199.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2 samples, 0.03%)</title><rect x="41.2967%" y="1173" width="0.0307%" height="15" fill="rgb(215,93,53)"/><text x="41.5467%" y="1183.50"></text></g><g><title>tokio::sync::oneshot::Task::set_task::{{closure}} (2 samples, 0.03%)</title><rect x="41.2967%" y="1157" width="0.0307%" height="15" fill="rgb(248,194,39)"/><text x="41.5467%" y="1167.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="41.2967%" y="1141" width="0.0307%" height="15" fill="rgb(215,5,19)"/><text x="41.5467%" y="1151.50"></text></g><g><title>async_executor::Runner::new (1 samples, 0.02%)</title><rect x="41.3274%" y="1205" width="0.0154%" height="15" fill="rgb(226,215,51)"/><text x="41.5774%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="41.3274%" y="1189" width="0.0154%" height="15" fill="rgb(225,56,26)"/><text x="41.5774%" y="1199.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="41.3274%" y="1173" width="0.0154%" height="15" fill="rgb(222,75,29)"/><text x="41.5774%" y="1183.50"></text></g><g><title>std::sys_common::rwlock::RWLock::write_unlock (1 samples, 0.02%)</title><rect x="41.3274%" y="1157" width="0.0154%" height="15" fill="rgb(236,139,6)"/><text x="41.5774%" y="1167.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::write_unlock (1 samples, 0.02%)</title><rect x="41.3274%" y="1141" width="0.0154%" height="15" fill="rgb(223,137,36)"/><text x="41.5774%" y="1151.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (1 samples, 0.02%)</title><rect x="41.3274%" y="1125" width="0.0154%" height="15" fill="rgb(226,99,2)"/><text x="41.5774%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.02%)</title><rect x="41.3274%" y="1109" width="0.0154%" height="15" fill="rgb(206,133,23)"/><text x="41.5774%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (1 samples, 0.02%)</title><rect x="41.3274%" y="1093" width="0.0154%" height="15" fill="rgb(243,173,15)"/><text x="41.5774%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.02%)</title><rect x="41.3274%" y="1077" width="0.0154%" height="15" fill="rgb(228,69,28)"/><text x="41.5774%" y="1087.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.02%)</title><rect x="41.3274%" y="1061" width="0.0154%" height="15" fill="rgb(212,51,22)"/><text x="41.5774%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="41.3274%" y="1045" width="0.0154%" height="15" fill="rgb(227,113,0)"/><text x="41.5774%" y="1055.50"></text></g><g><title>blake3::ChunkState::update (1 samples, 0.02%)</title><rect x="41.3428%" y="1205" width="0.0154%" height="15" fill="rgb(252,84,27)"/><text x="41.5928%" y="1215.50"></text></g><g><title>blake3_compress_in_place_avx512 (7 samples, 0.11%)</title><rect x="41.3581%" y="1205" width="0.1075%" height="15" fill="rgb(223,145,39)"/><text x="41.6081%" y="1215.50"></text></g><g><title>bytes::bytes::static_drop (1 samples, 0.02%)</title><rect x="41.4657%" y="1205" width="0.0154%" height="15" fill="rgb(239,219,30)"/><text x="41.7157%" y="1215.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="41.4810%" y="1189" width="0.0768%" height="15" fill="rgb(224,196,39)"/><text x="41.7310%" y="1199.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="41.4810%" y="1173" width="0.0768%" height="15" fill="rgb(205,35,43)"/><text x="41.7310%" y="1183.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="41.4810%" y="1157" width="0.0768%" height="15" fill="rgb(228,201,21)"/><text x="41.7310%" y="1167.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="41.4810%" y="1141" width="0.0768%" height="15" fill="rgb(237,118,16)"/><text x="41.7310%" y="1151.50"></text></g><g><title>[unknown] (4 samples, 0.06%)</title><rect x="41.4964%" y="1125" width="0.0615%" height="15" fill="rgb(241,17,19)"/><text x="41.7464%" y="1135.50"></text></g><g><title>[unknown] (4 samples, 0.06%)</title><rect x="41.4964%" y="1109" width="0.0615%" height="15" fill="rgb(214,10,25)"/><text x="41.7464%" y="1119.50"></text></g><g><title>[unknown] (4 samples, 0.06%)</title><rect x="41.4964%" y="1093" width="0.0615%" height="15" fill="rgb(238,37,29)"/><text x="41.7464%" y="1103.50"></text></g><g><title>[unknown] (4 samples, 0.06%)</title><rect x="41.4964%" y="1077" width="0.0615%" height="15" fill="rgb(253,83,25)"/><text x="41.7464%" y="1087.50"></text></g><g><title>async_channel::bounded (1 samples, 0.02%)</title><rect x="41.5578%" y="965" width="0.0154%" height="15" fill="rgb(234,192,12)"/><text x="41.8078%" y="975.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="41.5578%" y="949" width="0.0154%" height="15" fill="rgb(241,216,45)"/><text x="41.8078%" y="959.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.02%)</title><rect x="41.5578%" y="933" width="0.0154%" height="15" fill="rgb(242,22,33)"/><text x="41.8078%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="41.5578%" y="917" width="0.0154%" height="15" fill="rgb(231,105,49)"/><text x="41.8078%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="41.5578%" y="901" width="0.0154%" height="15" fill="rgb(218,204,15)"/><text x="41.8078%" y="911.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="41.5578%" y="885" width="0.0154%" height="15" fill="rgb(235,138,41)"/><text x="41.8078%" y="895.50"></text></g><g><title>_rjem_mallocx (1 samples, 0.02%)</title><rect x="41.5578%" y="869" width="0.0154%" height="15" fill="rgb(246,0,9)"/><text x="41.8078%" y="879.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="41.5578%" y="853" width="0.0154%" height="15" fill="rgb(210,74,4)"/><text x="41.8078%" y="863.50"></text></g><g><title>tsd_fetch (1 samples, 0.02%)</title><rect x="41.5578%" y="837" width="0.0154%" height="15" fill="rgb(250,60,41)"/><text x="41.8078%" y="847.50"></text></g><g><title>tsd_fetch_impl (1 samples, 0.02%)</title><rect x="41.5578%" y="821" width="0.0154%" height="15" fill="rgb(220,115,12)"/><text x="41.8078%" y="831.50"></text></g><g><title>_rjem_je_tsd_fetch_slow (1 samples, 0.02%)</title><rect x="41.5578%" y="805" width="0.0154%" height="15" fill="rgb(237,100,13)"/><text x="41.8078%" y="815.50"></text></g><g><title>tsd_data_init (1 samples, 0.02%)</title><rect x="41.5578%" y="789" width="0.0154%" height="15" fill="rgb(213,55,26)"/><text x="41.8078%" y="799.50"></text></g><g><title>_rjem_je_tsd_tcache_enabled_data_init (1 samples, 0.02%)</title><rect x="41.5578%" y="773" width="0.0154%" height="15" fill="rgb(216,17,4)"/><text x="41.8078%" y="783.50"></text></g><g><title>_rjem_je_tsd_tcache_data_init (1 samples, 0.02%)</title><rect x="41.5578%" y="757" width="0.0154%" height="15" fill="rgb(220,153,47)"/><text x="41.8078%" y="767.50"></text></g><g><title>arena_choose (1 samples, 0.02%)</title><rect x="41.5578%" y="741" width="0.0154%" height="15" fill="rgb(215,131,9)"/><text x="41.8078%" y="751.50"></text></g><g><title>arena_choose_impl (1 samples, 0.02%)</title><rect x="41.5578%" y="725" width="0.0154%" height="15" fill="rgb(233,46,42)"/><text x="41.8078%" y="735.50"></text></g><g><title>_rjem_je_arena_choose_hard (1 samples, 0.02%)</title><rect x="41.5578%" y="709" width="0.0154%" height="15" fill="rgb(226,86,7)"/><text x="41.8078%" y="719.50"></text></g><g><title>arena_init_locked (1 samples, 0.02%)</title><rect x="41.5578%" y="693" width="0.0154%" height="15" fill="rgb(239,226,21)"/><text x="41.8078%" y="703.50"></text></g><g><title>_rjem_je_arena_new (1 samples, 0.02%)</title><rect x="41.5578%" y="677" width="0.0154%" height="15" fill="rgb(244,137,22)"/><text x="41.8078%" y="687.50"></text></g><g><title>_rjem_je_base_new (1 samples, 0.02%)</title><rect x="41.5578%" y="661" width="0.0154%" height="15" fill="rgb(211,139,35)"/><text x="41.8078%" y="671.50"></text></g><g><title>base_block_alloc (1 samples, 0.02%)</title><rect x="41.5578%" y="645" width="0.0154%" height="15" fill="rgb(214,62,50)"/><text x="41.8078%" y="655.50"></text></g><g><title>base_map (1 samples, 0.02%)</title><rect x="41.5578%" y="629" width="0.0154%" height="15" fill="rgb(212,113,44)"/><text x="41.8078%" y="639.50"></text></g><g><title>_rjem_je_extent_alloc_mmap (1 samples, 0.02%)</title><rect x="41.5578%" y="613" width="0.0154%" height="15" fill="rgb(226,150,43)"/><text x="41.8078%" y="623.50"></text></g><g><title>_rjem_je_pages_map (1 samples, 0.02%)</title><rect x="41.5578%" y="597" width="0.0154%" height="15" fill="rgb(250,71,37)"/><text x="41.8078%" y="607.50"></text></g><g><title>pages_map_slow (1 samples, 0.02%)</title><rect x="41.5578%" y="581" width="0.0154%" height="15" fill="rgb(219,76,19)"/><text x="41.8078%" y="591.50"></text></g><g><title>os_pages_map (1 samples, 0.02%)</title><rect x="41.5578%" y="565" width="0.0154%" height="15" fill="rgb(250,39,11)"/><text x="41.8078%" y="575.50"></text></g><g><title>mmap64 (1 samples, 0.02%)</title><rect x="41.5578%" y="549" width="0.0154%" height="15" fill="rgb(230,64,31)"/><text x="41.8078%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="41.5578%" y="533" width="0.0154%" height="15" fill="rgb(208,222,23)"/><text x="41.8078%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="41.5578%" y="517" width="0.0154%" height="15" fill="rgb(227,125,18)"/><text x="41.8078%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="41.5578%" y="501" width="0.0154%" height="15" fill="rgb(234,210,9)"/><text x="41.8078%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="41.5578%" y="485" width="0.0154%" height="15" fill="rgb(217,127,24)"/><text x="41.8078%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="41.5578%" y="469" width="0.0154%" height="15" fill="rgb(239,141,48)"/><text x="41.8078%" y="479.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="41.5578%" y="453" width="0.0154%" height="15" fill="rgb(227,109,8)"/><text x="41.8078%" y="463.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="41.5578%" y="437" width="0.0154%" height="15" fill="rgb(235,184,23)"/><text x="41.8078%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="41.5578%" y="421" width="0.0154%" height="15" fill="rgb(227,226,48)"/><text x="41.8078%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.08%)</title><rect x="42.1877%" y="597" width="0.0768%" height="15" fill="rgb(206,150,11)"/><text x="42.4377%" y="607.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="42.3567%" y="517" width="0.0307%" height="15" fill="rgb(254,2,33)"/><text x="42.6067%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::nth (3 samples, 0.05%)</title><rect x="42.3567%" y="533" width="0.0461%" height="15" fill="rgb(243,160,20)"/><text x="42.6067%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::advance_by (1 samples, 0.02%)</title><rect x="42.3875%" y="517" width="0.0154%" height="15" fill="rgb(218,208,30)"/><text x="42.6375%" y="527.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.02%)</title><rect x="42.3875%" y="501" width="0.0154%" height="15" fill="rgb(224,120,49)"/><text x="42.6375%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (1 samples, 0.02%)</title><rect x="42.4796%" y="501" width="0.0154%" height="15" fill="rgb(246,12,2)"/><text x="42.7296%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (1 samples, 0.02%)</title><rect x="42.4796%" y="485" width="0.0154%" height="15" fill="rgb(236,117,3)"/><text x="42.7296%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.02%)</title><rect x="42.4950%" y="501" width="0.0154%" height="15" fill="rgb(216,128,52)"/><text x="42.7450%" y="511.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.02%)</title><rect x="42.4950%" y="485" width="0.0154%" height="15" fill="rgb(246,145,19)"/><text x="42.7450%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.02%)</title><rect x="42.4950%" y="469" width="0.0154%" height="15" fill="rgb(222,11,46)"/><text x="42.7450%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.37%)</title><rect x="42.2646%" y="597" width="0.3687%" height="15" fill="rgb(245,82,36)"/><text x="42.5146%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (24 samples, 0.37%)</title><rect x="42.2646%" y="581" width="0.3687%" height="15" fill="rgb(250,73,51)"/><text x="42.5146%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (24 samples, 0.37%)</title><rect x="42.2646%" y="565" width="0.3687%" height="15" fill="rgb(221,189,23)"/><text x="42.5146%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (24 samples, 0.37%)</title><rect x="42.2646%" y="549" width="0.3687%" height="15" fill="rgb(210,33,7)"/><text x="42.5146%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (15 samples, 0.23%)</title><rect x="42.4028%" y="533" width="0.2305%" height="15" fill="rgb(210,107,22)"/><text x="42.6528%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (14 samples, 0.22%)</title><rect x="42.4182%" y="517" width="0.2151%" height="15" fill="rgb(222,116,37)"/><text x="42.6682%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (8 samples, 0.12%)</title><rect x="42.5104%" y="501" width="0.1229%" height="15" fill="rgb(254,17,48)"/><text x="42.7604%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (8 samples, 0.12%)</title><rect x="42.5104%" y="485" width="0.1229%" height="15" fill="rgb(224,36,32)"/><text x="42.7604%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (4 samples, 0.06%)</title><rect x="42.5718%" y="469" width="0.0615%" height="15" fill="rgb(232,90,46)"/><text x="42.8218%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4 samples, 0.06%)</title><rect x="42.5718%" y="453" width="0.0615%" height="15" fill="rgb(241,66,40)"/><text x="42.8218%" y="463.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}}::{{closure}} (4 samples, 0.06%)</title><rect x="42.5718%" y="437" width="0.0615%" height="15" fill="rgb(249,184,29)"/><text x="42.8218%" y="447.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (10 samples, 0.15%)</title><rect x="42.7408%" y="565" width="0.1536%" height="15" fill="rgb(231,181,1)"/><text x="42.9908%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.03%)</title><rect x="42.8637%" y="549" width="0.0307%" height="15" fill="rgb(224,94,2)"/><text x="43.1137%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.03%)</title><rect x="42.8637%" y="533" width="0.0307%" height="15" fill="rgb(229,170,15)"/><text x="43.1137%" y="543.50"></text></g><g><title>async_executor::steal (18 samples, 0.28%)</title><rect x="42.6333%" y="597" width="0.2765%" height="15" fill="rgb(240,127,35)"/><text x="42.8833%" y="607.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (18 samples, 0.28%)</title><rect x="42.6333%" y="581" width="0.2765%" height="15" fill="rgb(248,196,34)"/><text x="42.8833%" y="591.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::len (1 samples, 0.02%)</title><rect x="42.8945%" y="565" width="0.0154%" height="15" fill="rgb(236,137,7)"/><text x="43.1445%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="42.8945%" y="549" width="0.0154%" height="15" fill="rgb(235,127,16)"/><text x="43.1445%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="42.8945%" y="533" width="0.0154%" height="15" fill="rgb(250,192,54)"/><text x="43.1445%" y="543.50"></text></g><g><title>concurrent_queue::full_fence (57 samples, 0.88%)</title><rect x="43.5090%" y="565" width="0.8757%" height="15" fill="rgb(218,98,20)"/><text x="43.7590%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (57 samples, 0.88%)</title><rect x="43.5090%" y="549" width="0.8757%" height="15" fill="rgb(230,176,47)"/><text x="43.7590%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (57 samples, 0.88%)</title><rect x="43.5090%" y="533" width="0.8757%" height="15" fill="rgb(244,2,33)"/><text x="43.7590%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (57 samples, 0.88%)</title><rect x="43.5090%" y="517" width="0.8757%" height="15" fill="rgb(231,100,17)"/><text x="43.7590%" y="527.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (89 samples, 1.37%)</title><rect x="43.1403%" y="581" width="1.3673%" height="15" fill="rgb(245,23,12)"/><text x="43.3903%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (8 samples, 0.12%)</title><rect x="44.3847%" y="565" width="0.1229%" height="15" fill="rgb(249,55,22)"/><text x="44.6347%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_load (8 samples, 0.12%)</title><rect x="44.3847%" y="549" width="0.1229%" height="15" fill="rgb(207,134,9)"/><text x="44.6347%" y="559.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (1 samples, 0.02%)</title><rect x="44.5076%" y="469" width="0.0154%" height="15" fill="rgb(218,134,0)"/><text x="44.7576%" y="479.50"></text></g><g><title>arena_dalloc_bin_locked_impl (1 samples, 0.02%)</title><rect x="44.5076%" y="453" width="0.0154%" height="15" fill="rgb(213,212,33)"/><text x="44.7576%" y="463.50"></text></g><g><title>arena_slab_reg_dalloc (1 samples, 0.02%)</title><rect x="44.5076%" y="437" width="0.0154%" height="15" fill="rgb(252,106,18)"/><text x="44.7576%" y="447.50"></text></g><g><title>arena_slab_regind (1 samples, 0.02%)</title><rect x="44.5076%" y="421" width="0.0154%" height="15" fill="rgb(208,126,42)"/><text x="44.7576%" y="431.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.03%)</title><rect x="44.5076%" y="565" width="0.0307%" height="15" fill="rgb(246,175,29)"/><text x="44.7576%" y="575.50"></text></g><g><title>isfree (2 samples, 0.03%)</title><rect x="44.5076%" y="549" width="0.0307%" height="15" fill="rgb(215,13,50)"/><text x="44.7576%" y="559.50"></text></g><g><title>isdalloct (2 samples, 0.03%)</title><rect x="44.5076%" y="533" width="0.0307%" height="15" fill="rgb(216,172,15)"/><text x="44.7576%" y="543.50"></text></g><g><title>arena_sdalloc (2 samples, 0.03%)</title><rect x="44.5076%" y="517" width="0.0307%" height="15" fill="rgb(212,103,13)"/><text x="44.7576%" y="527.50"></text></g><g><title>tcache_dalloc_small (2 samples, 0.03%)</title><rect x="44.5076%" y="501" width="0.0307%" height="15" fill="rgb(231,171,36)"/><text x="44.7576%" y="511.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (2 samples, 0.03%)</title><rect x="44.5076%" y="485" width="0.0307%" height="15" fill="rgb(250,123,20)"/><text x="44.7576%" y="495.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect x="44.5230%" y="469" width="0.0154%" height="15" fill="rgb(212,53,50)"/><text x="44.7730%" y="479.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect x="44.5230%" y="453" width="0.0154%" height="15" fill="rgb(243,54,12)"/><text x="44.7730%" y="463.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="44.5230%" y="437" width="0.0154%" height="15" fill="rgb(234,101,34)"/><text x="44.7730%" y="447.50"></text></g><g><title>concurrent_queue::full_fence (7 samples, 0.11%)</title><rect x="44.5383%" y="565" width="0.1075%" height="15" fill="rgb(254,67,22)"/><text x="44.7883%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (7 samples, 0.11%)</title><rect x="44.5383%" y="549" width="0.1075%" height="15" fill="rgb(250,35,47)"/><text x="44.7883%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (7 samples, 0.11%)</title><rect x="44.5383%" y="533" width="0.1075%" height="15" fill="rgb(226,126,38)"/><text x="44.7883%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (7 samples, 0.11%)</title><rect x="44.5383%" y="517" width="0.1075%" height="15" fill="rgb(216,138,53)"/><text x="44.7883%" y="527.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (1 samples, 0.02%)</title><rect x="44.6459%" y="565" width="0.0154%" height="15" fill="rgb(246,199,43)"/><text x="44.8959%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.02%)</title><rect x="44.6612%" y="565" width="0.0154%" height="15" fill="rgb(232,125,11)"/><text x="44.9112%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="44.6612%" y="549" width="0.0154%" height="15" fill="rgb(218,219,45)"/><text x="44.9112%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (13 samples, 0.20%)</title><rect x="44.6766%" y="565" width="0.1997%" height="15" fill="rgb(216,102,54)"/><text x="44.9266%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (13 samples, 0.20%)</title><rect x="44.6766%" y="549" width="0.1997%" height="15" fill="rgb(250,228,7)"/><text x="44.9266%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (3 samples, 0.05%)</title><rect x="44.8763%" y="565" width="0.0461%" height="15" fill="rgb(226,125,25)"/><text x="45.1263%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_or (3 samples, 0.05%)</title><rect x="44.8763%" y="549" width="0.0461%" height="15" fill="rgb(224,165,27)"/><text x="45.1263%" y="559.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (160 samples, 2.46%)</title><rect x="42.9098%" y="597" width="2.4581%" height="15" fill="rgb(233,86,3)"/><text x="43.1598%" y="607.50">co..</text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (56 samples, 0.86%)</title><rect x="44.5076%" y="581" width="0.8603%" height="15" fill="rgb(228,116,20)"/><text x="44.7576%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (29 samples, 0.45%)</title><rect x="44.9224%" y="565" width="0.4455%" height="15" fill="rgb(209,192,17)"/><text x="45.1724%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_load (29 samples, 0.45%)</title><rect x="44.9224%" y="549" width="0.4455%" height="15" fill="rgb(224,88,34)"/><text x="45.1724%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.05%)</title><rect x="45.3680%" y="533" width="0.0461%" height="15" fill="rgb(233,38,6)"/><text x="45.6180%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.05%)</title><rect x="45.3680%" y="517" width="0.0461%" height="15" fill="rgb(212,59,30)"/><text x="45.6180%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (8 samples, 0.12%)</title><rect x="45.3680%" y="597" width="0.1229%" height="15" fill="rgb(213,80,3)"/><text x="45.6180%" y="607.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.12%)</title><rect x="45.3680%" y="581" width="0.1229%" height="15" fill="rgb(251,178,7)"/><text x="45.6180%" y="591.50"></text></g><g><title>std::sys_common::rwlock::RWLock::read_unlock (8 samples, 0.12%)</title><rect x="45.3680%" y="565" width="0.1229%" height="15" fill="rgb(213,154,26)"/><text x="45.6180%" y="575.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (8 samples, 0.12%)</title><rect x="45.3680%" y="549" width="0.1229%" height="15" fill="rgb(238,165,49)"/><text x="45.6180%" y="559.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (5 samples, 0.08%)</title><rect x="45.4140%" y="533" width="0.0768%" height="15" fill="rgb(248,91,46)"/><text x="45.6640%" y="543.50"></text></g><g><title>__GI___pthread_rwlock_unlock (5 samples, 0.08%)</title><rect x="45.4140%" y="517" width="0.0768%" height="15" fill="rgb(244,21,52)"/><text x="45.6640%" y="527.50"></text></g><g><title>fastrand::usize (4 samples, 0.06%)</title><rect x="45.4909%" y="597" width="0.0615%" height="15" fill="rgb(247,122,20)"/><text x="45.7409%" y="607.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.06%)</title><rect x="45.4909%" y="581" width="0.0615%" height="15" fill="rgb(218,27,9)"/><text x="45.7409%" y="591.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.06%)</title><rect x="45.4909%" y="565" width="0.0615%" height="15" fill="rgb(246,7,6)"/><text x="45.7409%" y="575.50"></text></g><g><title>fastrand::usize::{{closure}} (4 samples, 0.06%)</title><rect x="45.4909%" y="549" width="0.0615%" height="15" fill="rgb(227,135,54)"/><text x="45.7409%" y="559.50"></text></g><g><title>fastrand::Rng::usize (4 samples, 0.06%)</title><rect x="45.4909%" y="533" width="0.0615%" height="15" fill="rgb(247,14,11)"/><text x="45.7409%" y="543.50"></text></g><g><title>fastrand::Rng::gen_mod_u64 (4 samples, 0.06%)</title><rect x="45.4909%" y="517" width="0.0615%" height="15" fill="rgb(206,149,34)"/><text x="45.7409%" y="527.50"></text></g><g><title>fastrand::Rng::gen_u64 (2 samples, 0.03%)</title><rect x="45.5216%" y="501" width="0.0307%" height="15" fill="rgb(227,228,4)"/><text x="45.7716%" y="511.50"></text></g><g><title>fastrand::Rng::gen_u32 (2 samples, 0.03%)</title><rect x="45.5216%" y="485" width="0.0307%" height="15" fill="rgb(238,218,28)"/><text x="45.7716%" y="495.50"></text></g><g><title>core::num::&lt;impl u32&gt;::rotate_right (1 samples, 0.02%)</title><rect x="45.5369%" y="469" width="0.0154%" height="15" fill="rgb(252,86,40)"/><text x="45.7869%" y="479.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (2 samples, 0.03%)</title><rect x="45.5677%" y="581" width="0.0307%" height="15" fill="rgb(251,225,11)"/><text x="45.8177%" y="591.50"></text></g><g><title>std::sys_common::poison::Flag::borrow (2 samples, 0.03%)</title><rect x="45.5677%" y="565" width="0.0307%" height="15" fill="rgb(206,46,49)"/><text x="45.8177%" y="575.50"></text></g><g><title>std::thread::panicking (2 samples, 0.03%)</title><rect x="45.5677%" y="549" width="0.0307%" height="15" fill="rgb(245,128,24)"/><text x="45.8177%" y="559.50"></text></g><g><title>std::panicking::panicking (2 samples, 0.03%)</title><rect x="45.5677%" y="533" width="0.0307%" height="15" fill="rgb(219,177,34)"/><text x="45.8177%" y="543.50"></text></g><g><title>std::panicking::panic_count::is_zero (2 samples, 0.03%)</title><rect x="45.5677%" y="517" width="0.0307%" height="15" fill="rgb(218,60,48)"/><text x="45.8177%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="45.5830%" y="501" width="0.0154%" height="15" fill="rgb(221,11,5)"/><text x="45.8330%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="45.5830%" y="485" width="0.0154%" height="15" fill="rgb(220,148,13)"/><text x="45.8330%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="45.5830%" y="469" width="0.0154%" height="15" fill="rgb(210,16,3)"/><text x="45.8330%" y="479.50"></text></g><g><title>__GI___pthread_rwlock_rdlock (27 samples, 0.41%)</title><rect x="45.5984%" y="549" width="0.4148%" height="15" fill="rgb(236,80,2)"/><text x="45.8484%" y="559.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (273 samples, 4.19%)</title><rect x="42.0495%" y="613" width="4.1942%" height="15" fill="rgb(239,129,19)"/><text x="42.2995%" y="623.50">async..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (45 samples, 0.69%)</title><rect x="45.5523%" y="597" width="0.6914%" height="15" fill="rgb(220,106,35)"/><text x="45.8023%" y="607.50"></text></g><g><title>std::sys_common::rwlock::RWLock::read (42 samples, 0.65%)</title><rect x="45.5984%" y="581" width="0.6453%" height="15" fill="rgb(252,139,45)"/><text x="45.8484%" y="591.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (42 samples, 0.65%)</title><rect x="45.5984%" y="565" width="0.6453%" height="15" fill="rgb(229,8,36)"/><text x="45.8484%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (15 samples, 0.23%)</title><rect x="46.0132%" y="549" width="0.2305%" height="15" fill="rgb(230,126,33)"/><text x="46.2632%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_add (15 samples, 0.23%)</title><rect x="46.0132%" y="533" width="0.2305%" height="15" fill="rgb(239,140,21)"/><text x="46.2632%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (1 samples, 0.02%)</title><rect x="46.2437%" y="597" width="0.0154%" height="15" fill="rgb(254,104,9)"/><text x="46.4937%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="46.2437%" y="581" width="0.0154%" height="15" fill="rgb(239,52,14)"/><text x="46.4937%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.02%)</title><rect x="46.2437%" y="565" width="0.0154%" height="15" fill="rgb(208,227,44)"/><text x="46.4937%" y="575.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.02%)</title><rect x="46.2437%" y="549" width="0.0154%" height="15" fill="rgb(246,18,19)"/><text x="46.4937%" y="559.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="46.2437%" y="533" width="0.0154%" height="15" fill="rgb(235,228,25)"/><text x="46.4937%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (1 samples, 0.02%)</title><rect x="46.2590%" y="597" width="0.0154%" height="15" fill="rgb(240,156,20)"/><text x="46.5090%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.02%)</title><rect x="46.2590%" y="581" width="0.0154%" height="15" fill="rgb(224,8,20)"/><text x="46.5090%" y="591.50"></text></g><g><title>__pthread_cond_signal (627 samples, 9.63%)</title><rect x="46.3819%" y="517" width="9.6328%" height="15" fill="rgb(214,12,52)"/><text x="46.6319%" y="527.50">__pthread_cond..</text></g><g><title>[unknown] (607 samples, 9.33%)</title><rect x="46.6892%" y="501" width="9.3255%" height="15" fill="rgb(211,220,47)"/><text x="46.9392%" y="511.50">[unknown]</text></g><g><title>[unknown] (602 samples, 9.25%)</title><rect x="46.7660%" y="485" width="9.2487%" height="15" fill="rgb(250,173,5)"/><text x="47.0160%" y="495.50">[unknown]</text></g><g><title>[unknown] (600 samples, 9.22%)</title><rect x="46.7967%" y="469" width="9.2180%" height="15" fill="rgb(250,125,52)"/><text x="47.0467%" y="479.50">[unknown]</text></g><g><title>[unknown] (599 samples, 9.20%)</title><rect x="46.8121%" y="453" width="9.2026%" height="15" fill="rgb(209,133,18)"/><text x="47.0621%" y="463.50">[unknown]</text></g><g><title>[unknown] (595 samples, 9.14%)</title><rect x="46.8736%" y="437" width="9.1412%" height="15" fill="rgb(216,173,22)"/><text x="47.1236%" y="447.50">[unknown]</text></g><g><title>[unknown] (497 samples, 7.64%)</title><rect x="48.3792%" y="421" width="7.6356%" height="15" fill="rgb(205,3,22)"/><text x="48.6292%" y="431.50">[unknown]</text></g><g><title>[unknown] (470 samples, 7.22%)</title><rect x="48.7940%" y="405" width="7.2208%" height="15" fill="rgb(248,22,20)"/><text x="49.0440%" y="415.50">[unknown]</text></g><g><title>[unknown] (405 samples, 6.22%)</title><rect x="49.7926%" y="389" width="6.2222%" height="15" fill="rgb(233,6,29)"/><text x="50.0426%" y="399.50">[unknown]</text></g><g><title>[unknown] (259 samples, 3.98%)</title><rect x="52.0356%" y="373" width="3.9791%" height="15" fill="rgb(240,22,54)"/><text x="52.2856%" y="383.50">[unk..</text></g><g><title>[unknown] (170 samples, 2.61%)</title><rect x="53.4030%" y="357" width="2.6118%" height="15" fill="rgb(231,133,32)"/><text x="53.6530%" y="367.50">[u..</text></g><g><title>[unknown] (73 samples, 1.12%)</title><rect x="54.8932%" y="341" width="1.1215%" height="15" fill="rgb(248,193,4)"/><text x="55.1432%" y="351.50"></text></g><g><title>[unknown] (19 samples, 0.29%)</title><rect x="55.7228%" y="325" width="0.2919%" height="15" fill="rgb(211,178,46)"/><text x="55.9728%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="55.9994%" y="309" width="0.0154%" height="15" fill="rgb(224,5,42)"/><text x="56.2494%" y="319.50"></text></g><g><title>core::mem::drop (2 samples, 0.03%)</title><rect x="56.0147%" y="517" width="0.0307%" height="15" fill="rgb(239,176,25)"/><text x="56.2647%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (2 samples, 0.03%)</title><rect x="56.0147%" y="501" width="0.0307%" height="15" fill="rgb(245,187,50)"/><text x="56.2647%" y="511.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="56.0147%" y="485" width="0.0307%" height="15" fill="rgb(248,24,15)"/><text x="56.2647%" y="495.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (2 samples, 0.03%)</title><rect x="56.0147%" y="469" width="0.0307%" height="15" fill="rgb(205,166,13)"/><text x="56.2647%" y="479.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (2 samples, 0.03%)</title><rect x="56.0147%" y="453" width="0.0307%" height="15" fill="rgb(208,114,23)"/><text x="56.2647%" y="463.50"></text></g><g><title>__GI___pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="56.0147%" y="437" width="0.0307%" height="15" fill="rgb(239,127,18)"/><text x="56.2647%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (13 samples, 0.20%)</title><rect x="56.0455%" y="517" width="0.1997%" height="15" fill="rgb(219,154,28)"/><text x="56.2955%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_swap (13 samples, 0.20%)</title><rect x="56.0455%" y="501" width="0.1997%" height="15" fill="rgb(225,157,23)"/><text x="56.2955%" y="511.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (1 samples, 0.02%)</title><rect x="56.2452%" y="517" width="0.0154%" height="15" fill="rgb(219,8,6)"/><text x="56.4952%" y="527.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (1 samples, 0.02%)</title><rect x="56.2452%" y="501" width="0.0154%" height="15" fill="rgb(212,47,6)"/><text x="56.4952%" y="511.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (1 samples, 0.02%)</title><rect x="56.2452%" y="485" width="0.0154%" height="15" fill="rgb(224,190,4)"/><text x="56.4952%" y="495.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (677 samples, 10.40%)</title><rect x="46.2744%" y="565" width="10.4010%" height="15" fill="rgb(239,183,29)"/><text x="46.5244%" y="575.50">async_io::drive..</text></g><g><title>parking::Unparker::unpark (676 samples, 10.39%)</title><rect x="46.2898%" y="549" width="10.3856%" height="15" fill="rgb(213,57,7)"/><text x="46.5398%" y="559.50">parking::Unpark..</text></g><g><title>parking::Inner::unpark (670 samples, 10.29%)</title><rect x="46.3819%" y="533" width="10.2934%" height="15" fill="rgb(216,148,1)"/><text x="46.6319%" y="543.50">parking::Inner:..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (27 samples, 0.41%)</title><rect x="56.2606%" y="517" width="0.4148%" height="15" fill="rgb(236,182,29)"/><text x="56.5106%" y="527.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (27 samples, 0.41%)</title><rect x="56.2606%" y="501" width="0.4148%" height="15" fill="rgb(244,120,48)"/><text x="56.5106%" y="511.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (27 samples, 0.41%)</title><rect x="56.2606%" y="485" width="0.4148%" height="15" fill="rgb(206,71,34)"/><text x="56.5106%" y="495.50"></text></g><g><title>__GI___pthread_mutex_lock (27 samples, 0.41%)</title><rect x="56.2606%" y="469" width="0.4148%" height="15" fill="rgb(242,32,6)"/><text x="56.5106%" y="479.50"></text></g><g><title>core::task::wake::Waker::wake (691 samples, 10.62%)</title><rect x="46.2744%" y="597" width="10.6161%" height="15" fill="rgb(241,35,3)"/><text x="46.5244%" y="607.50">core::task::wak..</text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (691 samples, 10.62%)</title><rect x="46.2744%" y="581" width="10.6161%" height="15" fill="rgb(222,62,19)"/><text x="46.5244%" y="591.50">waker_fn::Helpe..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (14 samples, 0.22%)</title><rect x="56.6754%" y="565" width="0.2151%" height="15" fill="rgb(223,110,41)"/><text x="56.9254%" y="575.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.22%)</title><rect x="56.6754%" y="549" width="0.2151%" height="15" fill="rgb(208,224,4)"/><text x="56.9254%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (14 samples, 0.22%)</title><rect x="56.6754%" y="533" width="0.2151%" height="15" fill="rgb(241,137,19)"/><text x="56.9254%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_sub (14 samples, 0.22%)</title><rect x="56.6754%" y="517" width="0.2151%" height="15" fill="rgb(244,24,17)"/><text x="56.9254%" y="527.50"></text></g><g><title>async_executor::State::notify (698 samples, 10.72%)</title><rect x="46.2437%" y="613" width="10.7236%" height="15" fill="rgb(245,178,49)"/><text x="46.4937%" y="623.50">async_executor::..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (5 samples, 0.08%)</title><rect x="56.8905%" y="597" width="0.0768%" height="15" fill="rgb(219,160,38)"/><text x="57.1405%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (5 samples, 0.08%)</title><rect x="56.8905%" y="581" width="0.0768%" height="15" fill="rgb(228,137,14)"/><text x="57.1405%" y="591.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (5 samples, 0.08%)</title><rect x="56.8905%" y="565" width="0.0768%" height="15" fill="rgb(237,134,11)"/><text x="57.1405%" y="575.50"></text></g><g><title>__GI___pthread_mutex_lock (5 samples, 0.08%)</title><rect x="56.8905%" y="549" width="0.0768%" height="15" fill="rgb(211,126,44)"/><text x="57.1405%" y="559.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (17 samples, 0.26%)</title><rect x="56.9673%" y="581" width="0.2612%" height="15" fill="rgb(226,171,33)"/><text x="57.2173%" y="591.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (17 samples, 0.26%)</title><rect x="56.9673%" y="565" width="0.2612%" height="15" fill="rgb(253,99,13)"/><text x="57.2173%" y="575.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (17 samples, 0.26%)</title><rect x="56.9673%" y="549" width="0.2612%" height="15" fill="rgb(244,48,7)"/><text x="57.2173%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (17 samples, 0.26%)</title><rect x="56.9673%" y="533" width="0.2612%" height="15" fill="rgb(244,217,54)"/><text x="57.2173%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (17 samples, 0.26%)</title><rect x="56.9673%" y="517" width="0.2612%" height="15" fill="rgb(224,15,18)"/><text x="57.2173%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_add (17 samples, 0.26%)</title><rect x="56.9673%" y="501" width="0.2612%" height="15" fill="rgb(244,99,12)"/><text x="57.2173%" y="511.50"></text></g><g><title>async_executor::Sleepers::insert (18 samples, 0.28%)</title><rect x="56.9673%" y="597" width="0.2765%" height="15" fill="rgb(233,226,8)"/><text x="57.2173%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.02%)</title><rect x="57.2285%" y="581" width="0.0154%" height="15" fill="rgb(229,211,3)"/><text x="57.4785%" y="591.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="57.2285%" y="565" width="0.0154%" height="15" fill="rgb(216,140,21)"/><text x="57.4785%" y="575.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.02%)</title><rect x="57.4128%" y="581" width="0.0154%" height="15" fill="rgb(234,122,30)"/><text x="57.6628%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.02%)</title><rect x="57.4128%" y="565" width="0.0154%" height="15" fill="rgb(236,25,46)"/><text x="57.6628%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.02%)</title><rect x="57.4128%" y="549" width="0.0154%" height="15" fill="rgb(217,52,54)"/><text x="57.6628%" y="559.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.03%)</title><rect x="57.4282%" y="581" width="0.0307%" height="15" fill="rgb(222,29,26)"/><text x="57.6782%" y="591.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="57.4589%" y="581" width="0.0154%" height="15" fill="rgb(216,177,29)"/><text x="57.7089%" y="591.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (1 samples, 0.02%)</title><rect x="57.4589%" y="565" width="0.0154%" height="15" fill="rgb(247,136,51)"/><text x="57.7089%" y="575.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="57.4589%" y="549" width="0.0154%" height="15" fill="rgb(231,47,47)"/><text x="57.7089%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="57.4589%" y="533" width="0.0154%" height="15" fill="rgb(211,192,36)"/><text x="57.7089%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.02%)</title><rect x="57.4589%" y="517" width="0.0154%" height="15" fill="rgb(229,156,32)"/><text x="57.7089%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.02%)</title><rect x="57.4589%" y="501" width="0.0154%" height="15" fill="rgb(248,213,20)"/><text x="57.7089%" y="511.50"></text></g><g><title>async_executor::Sleepers::update (17 samples, 0.26%)</title><rect x="57.2438%" y="597" width="0.2612%" height="15" fill="rgb(217,64,7)"/><text x="57.4938%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.03%)</title><rect x="57.4743%" y="581" width="0.0307%" height="15" fill="rgb(232,142,8)"/><text x="57.7243%" y="591.50"></text></g><g><title>core::ptr::write (2 samples, 0.03%)</title><rect x="57.4743%" y="565" width="0.0307%" height="15" fill="rgb(224,92,44)"/><text x="57.7243%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (5 samples, 0.08%)</title><rect x="57.5050%" y="565" width="0.0768%" height="15" fill="rgb(214,169,17)"/><text x="57.7550%" y="575.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (3 samples, 0.05%)</title><rect x="57.5357%" y="549" width="0.0461%" height="15" fill="rgb(210,59,37)"/><text x="57.7857%" y="559.50"></text></g><g><title>__GI___pthread_mutex_unlock (3 samples, 0.05%)</title><rect x="57.5357%" y="533" width="0.0461%" height="15" fill="rgb(214,116,48)"/><text x="57.7857%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (6 samples, 0.09%)</title><rect x="57.5050%" y="597" width="0.0922%" height="15" fill="rgb(244,191,6)"/><text x="57.7550%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.09%)</title><rect x="57.5050%" y="581" width="0.0922%" height="15" fill="rgb(241,50,52)"/><text x="57.7550%" y="591.50"></text></g><g><title>std::sys_common::poison::Flag::done (1 samples, 0.02%)</title><rect x="57.5818%" y="565" width="0.0154%" height="15" fill="rgb(236,75,39)"/><text x="57.8318%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (13 samples, 0.20%)</title><rect x="57.5972%" y="597" width="0.1997%" height="15" fill="rgb(236,99,0)"/><text x="57.8472%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_swap (13 samples, 0.20%)</title><rect x="57.5972%" y="581" width="0.1997%" height="15" fill="rgb(207,202,15)"/><text x="57.8472%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (14 samples, 0.22%)</title><rect x="57.7969%" y="597" width="0.2151%" height="15" fill="rgb(233,207,14)"/><text x="58.0469%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_store (14 samples, 0.22%)</title><rect x="57.7969%" y="581" width="0.2151%" height="15" fill="rgb(226,27,51)"/><text x="58.0469%" y="591.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="58.0120%" y="581" width="0.0154%" height="15" fill="rgb(206,104,42)"/><text x="58.2620%" y="591.50"></text></g><g><title>std::sys_common::poison::Flag::borrow (1 samples, 0.02%)</title><rect x="58.0120%" y="565" width="0.0154%" height="15" fill="rgb(212,225,4)"/><text x="58.2620%" y="575.50"></text></g><g><title>async_executor::Ticker::sleep (113 samples, 1.74%)</title><rect x="56.9673%" y="613" width="1.7361%" height="15" fill="rgb(233,96,42)"/><text x="57.2173%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (45 samples, 0.69%)</title><rect x="58.0120%" y="597" width="0.6914%" height="15" fill="rgb(229,21,32)"/><text x="58.2620%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (44 samples, 0.68%)</title><rect x="58.0273%" y="581" width="0.6760%" height="15" fill="rgb(226,216,24)"/><text x="58.2773%" y="591.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (44 samples, 0.68%)</title><rect x="58.0273%" y="565" width="0.6760%" height="15" fill="rgb(221,163,17)"/><text x="58.2773%" y="575.50"></text></g><g><title>__GI___pthread_mutex_lock (44 samples, 0.68%)</title><rect x="58.0273%" y="549" width="0.6760%" height="15" fill="rgb(216,216,42)"/><text x="58.2773%" y="559.50"></text></g><g><title>async_executor::Sleepers::remove (1 samples, 0.02%)</title><rect x="58.7033%" y="597" width="0.0154%" height="15" fill="rgb(240,118,7)"/><text x="58.9533%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;(usize,core::task::wake::Waker)&gt; (1 samples, 0.02%)</title><rect x="58.7033%" y="581" width="0.0154%" height="15" fill="rgb(221,67,37)"/><text x="58.9533%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (1 samples, 0.02%)</title><rect x="58.7033%" y="565" width="0.0154%" height="15" fill="rgb(241,32,44)"/><text x="58.9533%" y="575.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="58.7033%" y="549" width="0.0154%" height="15" fill="rgb(235,204,43)"/><text x="58.9533%" y="559.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (1 samples, 0.02%)</title><rect x="58.7033%" y="533" width="0.0154%" height="15" fill="rgb(213,116,10)"/><text x="58.9533%" y="543.50"></text></g><g><title>core::mem::drop (1 samples, 0.02%)</title><rect x="58.7033%" y="517" width="0.0154%" height="15" fill="rgb(239,15,48)"/><text x="58.9533%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="58.7033%" y="501" width="0.0154%" height="15" fill="rgb(207,123,36)"/><text x="58.9533%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="58.7033%" y="485" width="0.0154%" height="15" fill="rgb(209,103,30)"/><text x="58.9533%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.02%)</title><rect x="58.7033%" y="469" width="0.0154%" height="15" fill="rgb(238,100,19)"/><text x="58.9533%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.02%)</title><rect x="58.7033%" y="453" width="0.0154%" height="15" fill="rgb(244,30,14)"/><text x="58.9533%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (2 samples, 0.03%)</title><rect x="58.7187%" y="597" width="0.0307%" height="15" fill="rgb(249,174,6)"/><text x="58.9687%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="58.7187%" y="581" width="0.0307%" height="15" fill="rgb(235,213,41)"/><text x="58.9687%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (2 samples, 0.03%)</title><rect x="58.7187%" y="565" width="0.0307%" height="15" fill="rgb(213,118,6)"/><text x="58.9687%" y="575.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (2 samples, 0.03%)</title><rect x="58.7187%" y="549" width="0.0307%" height="15" fill="rgb(235,44,51)"/><text x="58.9687%" y="559.50"></text></g><g><title>__GI___pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="58.7187%" y="533" width="0.0307%" height="15" fill="rgb(217,9,53)"/><text x="58.9687%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (7 samples, 0.11%)</title><rect x="58.7494%" y="597" width="0.1075%" height="15" fill="rgb(237,172,34)"/><text x="58.9994%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_swap (7 samples, 0.11%)</title><rect x="58.7494%" y="581" width="0.1075%" height="15" fill="rgb(206,206,11)"/><text x="58.9994%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (4 samples, 0.06%)</title><rect x="58.8570%" y="597" width="0.0615%" height="15" fill="rgb(214,149,29)"/><text x="59.1070%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_swap (4 samples, 0.06%)</title><rect x="58.8570%" y="581" width="0.0615%" height="15" fill="rgb(208,123,3)"/><text x="59.1070%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,110 samples, 17.05%)</title><rect x="41.9727%" y="677" width="17.0533%" height="15" fill="rgb(229,126,4)"/><text x="42.2227%" y="687.50">&lt;core::future::from_genera..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (1,110 samples, 17.05%)</title><rect x="41.9727%" y="661" width="17.0533%" height="15" fill="rgb(222,92,36)"/><text x="42.2227%" y="671.50">async_executor::Ticker::ru..</text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1,106 samples, 16.99%)</title><rect x="42.0341%" y="645" width="16.9919%" height="15" fill="rgb(216,39,41)"/><text x="42.2841%" y="655.50">&lt;futures_lite::future::Pol..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (1,106 samples, 16.99%)</title><rect x="42.0341%" y="629" width="16.9919%" height="15" fill="rgb(253,127,28)"/><text x="42.2841%" y="639.50">async_executor::Ticker::ru..</text></g><g><title>async_executor::Ticker::wake (21 samples, 0.32%)</title><rect x="58.7033%" y="613" width="0.3226%" height="15" fill="rgb(249,152,51)"/><text x="58.9533%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (7 samples, 0.11%)</title><rect x="58.9184%" y="597" width="0.1075%" height="15" fill="rgb(209,123,42)"/><text x="59.1684%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (7 samples, 0.11%)</title><rect x="58.9184%" y="581" width="0.1075%" height="15" fill="rgb(241,118,22)"/><text x="59.1684%" y="591.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (7 samples, 0.11%)</title><rect x="58.9184%" y="565" width="0.1075%" height="15" fill="rgb(208,25,7)"/><text x="59.1684%" y="575.50"></text></g><g><title>__GI___pthread_mutex_lock (7 samples, 0.11%)</title><rect x="58.9184%" y="549" width="0.1075%" height="15" fill="rgb(243,144,39)"/><text x="59.1684%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,114 samples, 17.11%)</title><rect x="41.9266%" y="709" width="17.1148%" height="15" fill="rgb(250,50,5)"/><text x="42.1766%" y="719.50">&lt;core::future::from_generat..</text></g><g><title>async_executor::Runner::runnable::{{closure}} (1,114 samples, 17.11%)</title><rect x="41.9266%" y="693" width="17.1148%" height="15" fill="rgb(207,67,11)"/><text x="42.1766%" y="703.50">async_executor::Runner::run..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.02%)</title><rect x="59.0260%" y="677" width="0.0154%" height="15" fill="rgb(245,204,40)"/><text x="59.2760%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.02%)</title><rect x="59.0260%" y="661" width="0.0154%" height="15" fill="rgb(238,228,24)"/><text x="59.2760%" y="671.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="59.2257%" y="661" width="0.0154%" height="15" fill="rgb(217,116,22)"/><text x="59.4757%" y="671.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (1 samples, 0.02%)</title><rect x="59.2257%" y="645" width="0.0154%" height="15" fill="rgb(234,98,12)"/><text x="59.4757%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.02%)</title><rect x="59.2257%" y="629" width="0.0154%" height="15" fill="rgb(242,170,50)"/><text x="59.4757%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.02%)</title><rect x="59.2257%" y="613" width="0.0154%" height="15" fill="rgb(235,7,5)"/><text x="59.4757%" y="623.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (1 samples, 0.02%)</title><rect x="59.2257%" y="597" width="0.0154%" height="15" fill="rgb(241,114,28)"/><text x="59.4757%" y="607.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (1 samples, 0.02%)</title><rect x="59.2257%" y="581" width="0.0154%" height="15" fill="rgb(246,112,42)"/><text x="59.4757%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="59.2257%" y="565" width="0.0154%" height="15" fill="rgb(248,228,14)"/><text x="59.4757%" y="575.50"></text></g><g><title>__rust_probestack (1 samples, 0.02%)</title><rect x="59.2257%" y="549" width="0.0154%" height="15" fill="rgb(208,133,18)"/><text x="59.4757%" y="559.50"></text></g><g><title>[libc-2.31.so] (19 samples, 0.29%)</title><rect x="59.2411%" y="661" width="0.2919%" height="15" fill="rgb(207,35,49)"/><text x="59.4911%" y="671.50"></text></g><g><title>core::mem::drop (2 samples, 0.03%)</title><rect x="59.5330%" y="613" width="0.0307%" height="15" fill="rgb(205,68,36)"/><text x="59.7830%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (2 samples, 0.03%)</title><rect x="59.5330%" y="597" width="0.0307%" height="15" fill="rgb(245,62,40)"/><text x="59.7830%" y="607.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="59.5330%" y="581" width="0.0307%" height="15" fill="rgb(228,27,24)"/><text x="59.7830%" y="591.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (2 samples, 0.03%)</title><rect x="59.5330%" y="565" width="0.0307%" height="15" fill="rgb(253,19,12)"/><text x="59.7830%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.03%)</title><rect x="59.5330%" y="549" width="0.0307%" height="15" fill="rgb(232,28,20)"/><text x="59.7830%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.03%)</title><rect x="59.5330%" y="533" width="0.0307%" height="15" fill="rgb(218,35,51)"/><text x="59.7830%" y="543.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.12%)</title><rect x="59.5330%" y="645" width="0.1229%" height="15" fill="rgb(212,90,40)"/><text x="59.7830%" y="655.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}}::{{closure}} (8 samples, 0.12%)</title><rect x="59.5330%" y="629" width="0.1229%" height="15" fill="rgb(220,172,12)"/><text x="59.7830%" y="639.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (6 samples, 0.09%)</title><rect x="59.5637%" y="613" width="0.0922%" height="15" fill="rgb(226,159,20)"/><text x="59.8137%" y="623.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (6 samples, 0.09%)</title><rect x="59.5637%" y="597" width="0.0922%" height="15" fill="rgb(234,205,16)"/><text x="59.8137%" y="607.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (5 samples, 0.08%)</title><rect x="59.5790%" y="581" width="0.0768%" height="15" fill="rgb(207,9,39)"/><text x="59.8290%" y="591.50"></text></g><g><title>__GI___pthread_mutex_lock (5 samples, 0.08%)</title><rect x="59.5790%" y="565" width="0.0768%" height="15" fill="rgb(249,143,15)"/><text x="59.8290%" y="575.50"></text></g><g><title>__GI___pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="59.6559%" y="645" width="0.0307%" height="15" fill="rgb(253,133,29)"/><text x="59.9059%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;(),async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_produce::{{closure}}&gt;&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (11 samples, 0.17%)</title><rect x="59.5330%" y="661" width="0.1690%" height="15" fill="rgb(221,187,0)"/><text x="59.7830%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Executor::spawn&lt;(),async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_produce::{{closure}}&gt;&gt;&gt;::{{closure}}::{{closure}}&gt; (1 samples, 0.02%)</title><rect x="59.6866%" y="645" width="0.0154%" height="15" fill="rgb(205,204,26)"/><text x="59.9366%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_executor::State&gt;&gt; (1 samples, 0.02%)</title><rect x="59.6866%" y="629" width="0.0154%" height="15" fill="rgb(224,68,54)"/><text x="59.9366%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="59.6866%" y="613" width="0.0154%" height="15" fill="rgb(209,67,4)"/><text x="59.9366%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.02%)</title><rect x="59.6866%" y="597" width="0.0154%" height="15" fill="rgb(228,229,18)"/><text x="59.9366%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.02%)</title><rect x="59.6866%" y="581" width="0.0154%" height="15" fill="rgb(231,89,13)"/><text x="59.9366%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (35 samples, 0.54%)</title><rect x="59.1796%" y="693" width="0.5377%" height="15" fill="rgb(210,182,18)"/><text x="59.4296%" y="703.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (35 samples, 0.54%)</title><rect x="59.1796%" y="677" width="0.5377%" height="15" fill="rgb(240,105,2)"/><text x="59.4296%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_produce::{{closure}}&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="59.7020%" y="661" width="0.0154%" height="15" fill="rgb(207,170,50)"/><text x="59.9520%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper&gt; (1 samples, 0.02%)</title><rect x="59.7020%" y="645" width="0.0154%" height="15" fill="rgb(232,133,24)"/><text x="59.9520%" y="655.50"></text></g><g><title>&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="59.7020%" y="629" width="0.0154%" height="15" fill="rgb(235,166,27)"/><text x="59.9520%" y="639.50"></text></g><g><title>async_std::utils::abort_on_panic (1 samples, 0.02%)</title><rect x="59.7020%" y="613" width="0.0154%" height="15" fill="rgb(209,19,13)"/><text x="59.9520%" y="623.50"></text></g><g><title>&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper as core::ops::drop::Drop&gt;::drop::{{closure}} (1 samples, 0.02%)</title><rect x="59.7020%" y="597" width="0.0154%" height="15" fill="rgb(226,79,39)"/><text x="59.9520%" y="607.50"></text></g><g><title>async_std::task::task_local::LocalsMap::clear (1 samples, 0.02%)</title><rect x="59.7020%" y="581" width="0.0154%" height="15" fill="rgb(222,163,10)"/><text x="59.9520%" y="591.50"></text></g><g><title>core::mem::drop (1 samples, 0.02%)</title><rect x="59.7020%" y="565" width="0.0154%" height="15" fill="rgb(214,44,19)"/><text x="59.9520%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;async_std::task::task_local::Entry&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="59.7020%" y="549" width="0.0154%" height="15" fill="rgb(210,217,13)"/><text x="59.9520%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;async_std::task::task_local::Entry&gt;&gt; (1 samples, 0.02%)</title><rect x="59.7020%" y="533" width="0.0154%" height="15" fill="rgb(237,61,54)"/><text x="59.9520%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;async_std::task::task_local::Entry&gt;&gt; (1 samples, 0.02%)</title><rect x="59.7020%" y="517" width="0.0154%" height="15" fill="rgb(226,184,24)"/><text x="59.9520%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="59.7020%" y="501" width="0.0154%" height="15" fill="rgb(223,226,4)"/><text x="59.9520%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="59.7020%" y="485" width="0.0154%" height="15" fill="rgb(210,26,41)"/><text x="59.9520%" y="495.50"></text></g><g><title>__rust_probestack (1 samples, 0.02%)</title><rect x="60.0092%" y="485" width="0.0154%" height="15" fill="rgb(220,221,6)"/><text x="60.2592%" y="495.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.09%)</title><rect x="60.2089%" y="469" width="0.0922%" height="15" fill="rgb(225,89,49)"/><text x="60.4589%" y="479.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="60.3011%" y="469" width="0.0154%" height="15" fill="rgb(218,70,45)"/><text x="60.5511%" y="479.50"></text></g><g><title>tsd_fetch (1 samples, 0.02%)</title><rect x="60.3011%" y="453" width="0.0154%" height="15" fill="rgb(238,166,21)"/><text x="60.5511%" y="463.50"></text></g><g><title>tsd_fetch_impl (1 samples, 0.02%)</title><rect x="60.3011%" y="437" width="0.0154%" height="15" fill="rgb(224,141,44)"/><text x="60.5511%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (21 samples, 0.32%)</title><rect x="60.3165%" y="469" width="0.3226%" height="15" fill="rgb(230,12,49)"/><text x="60.5665%" y="479.50"></text></g><g><title>core::ptr::read (17 samples, 0.26%)</title><rect x="60.3779%" y="453" width="0.2612%" height="15" fill="rgb(212,174,12)"/><text x="60.6279%" y="463.50"></text></g><g><title>[libc-2.31.so] (17 samples, 0.26%)</title><rect x="60.3779%" y="437" width="0.2612%" height="15" fill="rgb(246,67,9)"/><text x="60.6279%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="60.6391%" y="469" width="0.0154%" height="15" fill="rgb(239,35,23)"/><text x="60.8891%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (1 samples, 0.02%)</title><rect x="60.6391%" y="453" width="0.0154%" height="15" fill="rgb(211,167,0)"/><text x="60.8891%" y="463.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.02%)</title><rect x="60.6391%" y="437" width="0.0154%" height="15" fill="rgb(225,119,45)"/><text x="60.8891%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="60.6391%" y="421" width="0.0154%" height="15" fill="rgb(210,162,6)"/><text x="60.8891%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="60.6391%" y="405" width="0.0154%" height="15" fill="rgb(208,118,35)"/><text x="60.8891%" y="415.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="60.6391%" y="389" width="0.0154%" height="15" fill="rgb(239,4,53)"/><text x="60.8891%" y="399.50"></text></g><g><title>inallocx (1 samples, 0.02%)</title><rect x="60.6391%" y="373" width="0.0154%" height="15" fill="rgb(213,130,21)"/><text x="60.8891%" y="383.50"></text></g><g><title>sz_s2u (1 samples, 0.02%)</title><rect x="60.6391%" y="357" width="0.0154%" height="15" fill="rgb(235,148,0)"/><text x="60.8891%" y="367.50"></text></g><g><title>sz_s2u_lookup (1 samples, 0.02%)</title><rect x="60.6391%" y="341" width="0.0154%" height="15" fill="rgb(244,224,18)"/><text x="60.8891%" y="351.50"></text></g><g><title>sz_index2size_lookup (1 samples, 0.02%)</title><rect x="60.6391%" y="325" width="0.0154%" height="15" fill="rgb(211,214,4)"/><text x="60.8891%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.15%)</title><rect x="60.6852%" y="341" width="0.1536%" height="15" fill="rgb(206,119,25)"/><text x="60.9352%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Expr]&gt; (10 samples, 0.15%)</title><rect x="60.6852%" y="325" width="0.1536%" height="15" fill="rgb(243,93,47)"/><text x="60.9352%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Expr&gt; (10 samples, 0.15%)</title><rect x="60.6852%" y="309" width="0.1536%" height="15" fill="rgb(224,194,6)"/><text x="60.9352%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::expr::ExprInstance&gt;&gt; (10 samples, 0.15%)</title><rect x="60.6852%" y="293" width="0.1536%" height="15" fill="rgb(243,229,6)"/><text x="60.9352%" y="303.50"></text></g><g><title>__rg_dealloc (1 samples, 0.02%)</title><rect x="60.8388%" y="277" width="0.0154%" height="15" fill="rgb(207,23,50)"/><text x="61.0888%" y="287.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.02%)</title><rect x="60.8388%" y="261" width="0.0154%" height="15" fill="rgb(253,192,32)"/><text x="61.0888%" y="271.50"></text></g><g><title>jemallocator::layout_to_flags (1 samples, 0.02%)</title><rect x="60.8388%" y="245" width="0.0154%" height="15" fill="rgb(213,21,6)"/><text x="61.0888%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (12 samples, 0.18%)</title><rect x="60.6852%" y="357" width="0.1844%" height="15" fill="rgb(243,151,13)"/><text x="60.9352%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (2 samples, 0.03%)</title><rect x="60.8388%" y="341" width="0.0307%" height="15" fill="rgb(233,165,41)"/><text x="61.0888%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="60.8388%" y="325" width="0.0307%" height="15" fill="rgb(246,176,45)"/><text x="61.0888%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.03%)</title><rect x="60.8388%" y="309" width="0.0307%" height="15" fill="rgb(217,170,52)"/><text x="61.0888%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.03%)</title><rect x="60.8388%" y="293" width="0.0307%" height="15" fill="rgb(214,203,54)"/><text x="61.0888%" y="303.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="60.8542%" y="277" width="0.0154%" height="15" fill="rgb(248,215,49)"/><text x="61.1042%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="60.8696%" y="341" width="0.0461%" height="15" fill="rgb(208,46,10)"/><text x="61.1196%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::New]&gt; (3 samples, 0.05%)</title><rect x="60.8696%" y="325" width="0.0461%" height="15" fill="rgb(254,5,31)"/><text x="61.1196%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::New&gt;&gt; (4 samples, 0.06%)</title><rect x="60.8696%" y="357" width="0.0615%" height="15" fill="rgb(222,104,33)"/><text x="61.1196%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::New&gt;&gt; (1 samples, 0.02%)</title><rect x="60.9157%" y="341" width="0.0154%" height="15" fill="rgb(248,49,16)"/><text x="61.1657%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="60.9157%" y="325" width="0.0154%" height="15" fill="rgb(232,198,41)"/><text x="61.1657%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.02%)</title><rect x="60.9157%" y="309" width="0.0154%" height="15" fill="rgb(214,125,3)"/><text x="61.1657%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Receive&gt;&gt; (2 samples, 0.03%)</title><rect x="60.9310%" y="357" width="0.0307%" height="15" fill="rgb(229,220,28)"/><text x="61.1810%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="60.9310%" y="341" width="0.0307%" height="15" fill="rgb(222,64,37)"/><text x="61.1810%" y="351.50"></text></g><g><title>__rg_dealloc (1 samples, 0.02%)</title><rect x="60.9617%" y="309" width="0.0154%" height="15" fill="rgb(249,184,13)"/><text x="61.2117%" y="319.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="60.9771%" y="309" width="0.0154%" height="15" fill="rgb(252,176,6)"/><text x="61.2271%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::New&gt;&gt; (2 samples, 0.03%)</title><rect x="60.9925%" y="229" width="0.0307%" height="15" fill="rgb(228,153,7)"/><text x="61.2425%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="60.9925%" y="213" width="0.0307%" height="15" fill="rgb(242,193,5)"/><text x="61.2425%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::New]&gt; (2 samples, 0.03%)</title><rect x="60.9925%" y="197" width="0.0307%" height="15" fill="rgb(232,140,9)"/><text x="61.2425%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Par&gt;&gt; (5 samples, 0.08%)</title><rect x="60.9925%" y="293" width="0.0768%" height="15" fill="rgb(213,222,16)"/><text x="61.2425%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.08%)</title><rect x="60.9925%" y="277" width="0.0768%" height="15" fill="rgb(222,75,50)"/><text x="61.2425%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Par]&gt; (5 samples, 0.08%)</title><rect x="60.9925%" y="261" width="0.0768%" height="15" fill="rgb(205,180,2)"/><text x="61.2425%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (5 samples, 0.08%)</title><rect x="60.9925%" y="245" width="0.0768%" height="15" fill="rgb(216,34,7)"/><text x="61.2425%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Send&gt;&gt; (3 samples, 0.05%)</title><rect x="61.0232%" y="229" width="0.0461%" height="15" fill="rgb(253,16,32)"/><text x="61.2732%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="61.0232%" y="213" width="0.0461%" height="15" fill="rgb(208,97,28)"/><text x="61.2732%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (3 samples, 0.05%)</title><rect x="61.0232%" y="197" width="0.0461%" height="15" fill="rgb(225,92,11)"/><text x="61.2732%" y="207.50"></text></g><g><title>_rjem_sdallocx (3 samples, 0.05%)</title><rect x="61.1461%" y="277" width="0.0461%" height="15" fill="rgb(243,38,12)"/><text x="61.3961%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::GUnforgeable&gt;&gt; (5 samples, 0.08%)</title><rect x="61.1922%" y="261" width="0.0768%" height="15" fill="rgb(208,139,16)"/><text x="61.4422%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.08%)</title><rect x="61.1922%" y="245" width="0.0768%" height="15" fill="rgb(227,24,9)"/><text x="61.4422%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::GUnforgeable]&gt; (2 samples, 0.03%)</title><rect x="61.2383%" y="229" width="0.0307%" height="15" fill="rgb(206,62,11)"/><text x="61.4883%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::GUnforgeable&gt; (2 samples, 0.03%)</title><rect x="61.2383%" y="213" width="0.0307%" height="15" fill="rgb(228,134,27)"/><text x="61.4883%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::g_unforgeable::UnfInstance&gt;&gt; (2 samples, 0.03%)</title><rect x="61.2383%" y="197" width="0.0307%" height="15" fill="rgb(205,55,33)"/><text x="61.4883%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::New&gt;&gt; (1 samples, 0.02%)</title><rect x="61.2690%" y="261" width="0.0154%" height="15" fill="rgb(243,75,43)"/><text x="61.5190%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="61.2690%" y="245" width="0.0154%" height="15" fill="rgb(223,27,42)"/><text x="61.5190%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::New]&gt; (1 samples, 0.02%)</title><rect x="61.2690%" y="229" width="0.0154%" height="15" fill="rgb(232,189,33)"/><text x="61.5190%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.65%)</title><rect x="60.6545%" y="437" width="0.6453%" height="15" fill="rgb(210,9,39)"/><text x="60.9045%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::MatchCase]&gt; (42 samples, 0.65%)</title><rect x="60.6545%" y="421" width="0.6453%" height="15" fill="rgb(242,85,26)"/><text x="60.9045%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::MatchCase&gt; (42 samples, 0.65%)</title><rect x="60.6545%" y="405" width="0.6453%" height="15" fill="rgb(248,44,4)"/><text x="60.9045%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::Par&gt;&gt; (42 samples, 0.65%)</title><rect x="60.6545%" y="389" width="0.6453%" height="15" fill="rgb(250,96,46)"/><text x="60.9045%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (40 samples, 0.61%)</title><rect x="60.6852%" y="373" width="0.6145%" height="15" fill="rgb(229,116,26)"/><text x="60.9352%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Send&gt;&gt; (22 samples, 0.34%)</title><rect x="60.9617%" y="357" width="0.3380%" height="15" fill="rgb(246,94,34)"/><text x="61.2117%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.34%)</title><rect x="60.9617%" y="341" width="0.3380%" height="15" fill="rgb(251,73,21)"/><text x="61.2117%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Send]&gt; (22 samples, 0.34%)</title><rect x="60.9617%" y="325" width="0.3380%" height="15" fill="rgb(254,121,25)"/><text x="61.2117%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Send&gt; (20 samples, 0.31%)</title><rect x="60.9925%" y="309" width="0.3073%" height="15" fill="rgb(215,161,49)"/><text x="61.2425%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::Par&gt;&gt; (15 samples, 0.23%)</title><rect x="61.0693%" y="293" width="0.2305%" height="15" fill="rgb(221,43,13)"/><text x="61.3193%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (7 samples, 0.11%)</title><rect x="61.1922%" y="277" width="0.1075%" height="15" fill="rgb(249,5,37)"/><text x="61.4422%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::bitset::BitSet&gt;&gt; (1 samples, 0.02%)</title><rect x="61.2844%" y="261" width="0.0154%" height="15" fill="rgb(226,25,44)"/><text x="61.5344%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::bitset::BitSet&gt; (1 samples, 0.02%)</title><rect x="61.2844%" y="245" width="0.0154%" height="15" fill="rgb(238,189,16)"/><text x="61.5344%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;bit_vec::BitVec&gt; (1 samples, 0.02%)</title><rect x="61.2844%" y="229" width="0.0154%" height="15" fill="rgb(251,186,8)"/><text x="61.5344%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u32&gt;&gt; (1 samples, 0.02%)</title><rect x="61.2844%" y="213" width="0.0154%" height="15" fill="rgb(254,34,31)"/><text x="61.5344%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u32&gt;&gt; (1 samples, 0.02%)</title><rect x="61.2844%" y="197" width="0.0154%" height="15" fill="rgb(225,215,27)"/><text x="61.5344%" y="207.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="61.2844%" y="181" width="0.0154%" height="15" fill="rgb(221,192,48)"/><text x="61.5344%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="61.2844%" y="165" width="0.0154%" height="15" fill="rgb(219,137,20)"/><text x="61.5344%" y="175.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="61.2844%" y="149" width="0.0154%" height="15" fill="rgb(219,84,11)"/><text x="61.5344%" y="159.50"></text></g><g><title>inallocx (2 samples, 0.03%)</title><rect x="61.2997%" y="357" width="0.0307%" height="15" fill="rgb(224,10,23)"/><text x="61.5497%" y="367.50"></text></g><g><title>sz_s2u (2 samples, 0.03%)</title><rect x="61.2997%" y="341" width="0.0307%" height="15" fill="rgb(248,22,39)"/><text x="61.5497%" y="351.50"></text></g><g><title>sz_s2u_lookup (2 samples, 0.03%)</title><rect x="61.2997%" y="325" width="0.0307%" height="15" fill="rgb(212,154,20)"/><text x="61.5497%" y="335.50"></text></g><g><title>sz_index2size_lookup (2 samples, 0.03%)</title><rect x="61.2997%" y="309" width="0.0307%" height="15" fill="rgb(236,199,50)"/><text x="61.5497%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::MatchCase&gt;&gt; (45 samples, 0.69%)</title><rect x="60.6545%" y="453" width="0.6914%" height="15" fill="rgb(211,9,17)"/><text x="60.9045%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::MatchCase&gt;&gt; (3 samples, 0.05%)</title><rect x="61.2997%" y="437" width="0.0461%" height="15" fill="rgb(243,216,36)"/><text x="61.5497%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="61.2997%" y="421" width="0.0461%" height="15" fill="rgb(250,2,10)"/><text x="61.5497%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.05%)</title><rect x="61.2997%" y="405" width="0.0461%" height="15" fill="rgb(226,50,48)"/><text x="61.5497%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.05%)</title><rect x="61.2997%" y="389" width="0.0461%" height="15" fill="rgb(243,81,16)"/><text x="61.5497%" y="399.50"></text></g><g><title>_rjem_sdallocx (3 samples, 0.05%)</title><rect x="61.2997%" y="373" width="0.0461%" height="15" fill="rgb(250,14,2)"/><text x="61.5497%" y="383.50"></text></g><g><title>isfree (1 samples, 0.02%)</title><rect x="61.3305%" y="357" width="0.0154%" height="15" fill="rgb(233,135,29)"/><text x="61.5805%" y="367.50"></text></g><g><title>isdalloct (1 samples, 0.02%)</title><rect x="61.3305%" y="341" width="0.0154%" height="15" fill="rgb(224,64,43)"/><text x="61.5805%" y="351.50"></text></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect x="61.3305%" y="325" width="0.0154%" height="15" fill="rgb(238,84,13)"/><text x="61.5805%" y="335.50"></text></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect x="61.3305%" y="309" width="0.0154%" height="15" fill="rgb(253,48,26)"/><text x="61.5805%" y="319.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="61.3766%" y="437" width="0.0154%" height="15" fill="rgb(205,223,31)"/><text x="61.6266%" y="447.50"></text></g><g><title>isfree (1 samples, 0.02%)</title><rect x="61.3766%" y="421" width="0.0154%" height="15" fill="rgb(221,41,32)"/><text x="61.6266%" y="431.50"></text></g><g><title>isdalloct (1 samples, 0.02%)</title><rect x="61.3766%" y="405" width="0.0154%" height="15" fill="rgb(213,158,31)"/><text x="61.6266%" y="415.50"></text></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect x="61.3766%" y="389" width="0.0154%" height="15" fill="rgb(245,126,43)"/><text x="61.6266%" y="399.50"></text></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect x="61.3766%" y="373" width="0.0154%" height="15" fill="rgb(227,7,22)"/><text x="61.6266%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (2 samples, 0.03%)</title><rect x="61.3919%" y="421" width="0.0307%" height="15" fill="rgb(252,90,44)"/><text x="61.6419%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="61.3919%" y="405" width="0.0307%" height="15" fill="rgb(253,91,0)"/><text x="61.6419%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Expr]&gt; (2 samples, 0.03%)</title><rect x="61.3919%" y="389" width="0.0307%" height="15" fill="rgb(252,175,49)"/><text x="61.6419%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Expr&gt; (2 samples, 0.03%)</title><rect x="61.3919%" y="373" width="0.0307%" height="15" fill="rgb(246,150,1)"/><text x="61.6419%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::expr::ExprInstance&gt;&gt; (2 samples, 0.03%)</title><rect x="61.3919%" y="357" width="0.0307%" height="15" fill="rgb(241,192,25)"/><text x="61.6419%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::expr::ExprInstance&gt; (1 samples, 0.02%)</title><rect x="61.4073%" y="341" width="0.0154%" height="15" fill="rgb(239,187,11)"/><text x="61.6573%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Receive&gt;&gt; (1 samples, 0.02%)</title><rect x="61.4226%" y="421" width="0.0154%" height="15" fill="rgb(218,202,51)"/><text x="61.6726%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="61.4226%" y="405" width="0.0154%" height="15" fill="rgb(225,176,8)"/><text x="61.6726%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Receive]&gt; (1 samples, 0.02%)</title><rect x="61.4226%" y="389" width="0.0154%" height="15" fill="rgb(219,122,41)"/><text x="61.6726%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.03%)</title><rect x="61.4380%" y="389" width="0.0307%" height="15" fill="rgb(248,140,20)"/><text x="61.6880%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Match&gt; (54 samples, 0.83%)</title><rect x="60.6545%" y="469" width="0.8296%" height="15" fill="rgb(245,41,37)"/><text x="60.9045%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::Par&gt;&gt; (9 samples, 0.14%)</title><rect x="61.3458%" y="453" width="0.1383%" height="15" fill="rgb(235,82,39)"/><text x="61.5958%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (6 samples, 0.09%)</title><rect x="61.3919%" y="437" width="0.0922%" height="15" fill="rgb(230,108,42)"/><text x="61.6419%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Send&gt;&gt; (3 samples, 0.05%)</title><rect x="61.4380%" y="421" width="0.0461%" height="15" fill="rgb(215,150,50)"/><text x="61.6880%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="61.4380%" y="405" width="0.0461%" height="15" fill="rgb(233,212,5)"/><text x="61.6880%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Send]&gt; (1 samples, 0.02%)</title><rect x="61.4687%" y="389" width="0.0154%" height="15" fill="rgb(245,80,22)"/><text x="61.7187%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="61.4687%" y="373" width="0.0154%" height="15" fill="rgb(238,129,16)"/><text x="61.7187%" y="383.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="61.4687%" y="357" width="0.0154%" height="15" fill="rgb(240,19,0)"/><text x="61.7187%" y="367.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="61.4687%" y="341" width="0.0154%" height="15" fill="rgb(232,42,35)"/><text x="61.7187%" y="351.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="61.4687%" y="325" width="0.0154%" height="15" fill="rgb(223,130,24)"/><text x="61.7187%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="61.4687%" y="309" width="0.0154%" height="15" fill="rgb(237,16,22)"/><text x="61.7187%" y="319.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="61.4687%" y="293" width="0.0154%" height="15" fill="rgb(248,192,20)"/><text x="61.7187%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="61.4687%" y="277" width="0.0154%" height="15" fill="rgb(233,167,2)"/><text x="61.7187%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="61.4687%" y="261" width="0.0154%" height="15" fill="rgb(252,71,44)"/><text x="61.7187%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="61.4687%" y="245" width="0.0154%" height="15" fill="rgb(238,37,47)"/><text x="61.7187%" y="255.50"></text></g><g><title>[libc-2.31.so] (3 samples, 0.05%)</title><rect x="61.4841%" y="437" width="0.0461%" height="15" fill="rgb(214,202,54)"/><text x="61.7341%" y="447.50"></text></g><g><title>__rg_alloc (2 samples, 0.03%)</title><rect x="61.5302%" y="373" width="0.0307%" height="15" fill="rgb(254,165,40)"/><text x="61.7802%" y="383.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (2 samples, 0.03%)</title><rect x="61.5302%" y="357" width="0.0307%" height="15" fill="rgb(246,173,38)"/><text x="61.7802%" y="367.50"></text></g><g><title>jemallocator::layout_to_flags (1 samples, 0.02%)</title><rect x="61.5456%" y="341" width="0.0154%" height="15" fill="rgb(215,3,27)"/><text x="61.7956%" y="351.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (103 samples, 1.58%)</title><rect x="59.9939%" y="517" width="1.5824%" height="15" fill="rgb(239,169,51)"/><text x="60.2439%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (103 samples, 1.58%)</title><rect x="59.9939%" y="501" width="1.5824%" height="15" fill="rgb(212,5,25)"/><text x="60.2439%" y="511.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate::{{closure}} (101 samples, 1.55%)</title><rect x="60.0246%" y="485" width="1.5517%" height="15" fill="rgb(243,45,17)"/><text x="60.2746%" y="495.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_match::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Match&gt;::evaluate (6 samples, 0.09%)</title><rect x="61.4841%" y="469" width="0.0922%" height="15" fill="rgb(242,97,9)"/><text x="61.7341%" y="479.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (6 samples, 0.09%)</title><rect x="61.4841%" y="453" width="0.0922%" height="15" fill="rgb(228,71,31)"/><text x="61.7341%" y="463.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.05%)</title><rect x="61.5302%" y="437" width="0.0461%" height="15" fill="rgb(252,184,16)"/><text x="61.7802%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.05%)</title><rect x="61.5302%" y="421" width="0.0461%" height="15" fill="rgb(236,169,46)"/><text x="61.7802%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.05%)</title><rect x="61.5302%" y="405" width="0.0461%" height="15" fill="rgb(207,17,47)"/><text x="61.7802%" y="415.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.05%)</title><rect x="61.5302%" y="389" width="0.0461%" height="15" fill="rgb(206,201,28)"/><text x="61.7802%" y="399.50"></text></g><g><title>_rjem_mallocx (1 samples, 0.02%)</title><rect x="61.5609%" y="373" width="0.0154%" height="15" fill="rgb(224,184,23)"/><text x="61.8109%" y="383.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="61.5609%" y="357" width="0.0154%" height="15" fill="rgb(208,139,48)"/><text x="61.8109%" y="367.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="61.5609%" y="341" width="0.0154%" height="15" fill="rgb(208,130,10)"/><text x="61.8109%" y="351.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="61.5609%" y="325" width="0.0154%" height="15" fill="rgb(211,213,45)"/><text x="61.8109%" y="335.50"></text></g><g><title>[libc-2.31.so] (15 samples, 0.23%)</title><rect x="61.5763%" y="517" width="0.2305%" height="15" fill="rgb(235,100,30)"/><text x="61.8263%" y="527.50"></text></g><g><title>__rg_dealloc (2 samples, 0.03%)</title><rect x="61.8067%" y="437" width="0.0307%" height="15" fill="rgb(206,144,31)"/><text x="62.0567%" y="447.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (2 samples, 0.03%)</title><rect x="61.8067%" y="421" width="0.0307%" height="15" fill="rgb(224,200,26)"/><text x="62.0567%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt;&gt; (4 samples, 0.06%)</title><rect x="61.8067%" y="517" width="0.0615%" height="15" fill="rgb(247,104,53)"/><text x="62.0567%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::result::Result&lt;(),model::rho_types::ExecutionError&gt;+core::marker::Send&gt;&gt; (4 samples, 0.06%)</title><rect x="61.8067%" y="501" width="0.0615%" height="15" fill="rgb(220,14,17)"/><text x="62.0567%" y="511.50"></text></g><g><title>alloc::alloc::box_free (4 samples, 0.06%)</title><rect x="61.8067%" y="485" width="0.0615%" height="15" fill="rgb(230,140,40)"/><text x="62.0567%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.06%)</title><rect x="61.8067%" y="469" width="0.0615%" height="15" fill="rgb(229,2,41)"/><text x="62.0567%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.06%)</title><rect x="61.8067%" y="453" width="0.0615%" height="15" fill="rgb(232,89,16)"/><text x="62.0567%" y="463.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.03%)</title><rect x="61.8375%" y="437" width="0.0307%" height="15" fill="rgb(247,59,52)"/><text x="62.0875%" y="447.50"></text></g><g><title>inallocx (2 samples, 0.03%)</title><rect x="61.8375%" y="421" width="0.0307%" height="15" fill="rgb(226,110,21)"/><text x="62.0875%" y="431.50"></text></g><g><title>sz_s2u (2 samples, 0.03%)</title><rect x="61.8375%" y="405" width="0.0307%" height="15" fill="rgb(224,176,43)"/><text x="62.0875%" y="415.50"></text></g><g><title>sz_s2u_lookup (1 samples, 0.02%)</title><rect x="61.8528%" y="389" width="0.0154%" height="15" fill="rgb(221,73,6)"/><text x="62.1028%" y="399.50"></text></g><g><title>sz_size2index_lookup (1 samples, 0.02%)</title><rect x="61.8528%" y="373" width="0.0154%" height="15" fill="rgb(232,78,19)"/><text x="62.1028%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Connective&gt;&gt; (1 samples, 0.02%)</title><rect x="61.8682%" y="501" width="0.0154%" height="15" fill="rgb(233,112,48)"/><text x="62.1182%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="61.8682%" y="485" width="0.0154%" height="15" fill="rgb(243,131,47)"/><text x="62.1182%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Connective]&gt; (1 samples, 0.02%)</title><rect x="61.8682%" y="469" width="0.0154%" height="15" fill="rgb(226,51,1)"/><text x="62.1182%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Match&gt;&gt; (1 samples, 0.02%)</title><rect x="61.8835%" y="501" width="0.0154%" height="15" fill="rgb(247,58,7)"/><text x="62.1335%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Match&gt;&gt; (1 samples, 0.02%)</title><rect x="61.8835%" y="485" width="0.0154%" height="15" fill="rgb(209,7,32)"/><text x="62.1335%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="61.8835%" y="469" width="0.0154%" height="15" fill="rgb(209,39,41)"/><text x="62.1335%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="61.8835%" y="453" width="0.0154%" height="15" fill="rgb(226,182,46)"/><text x="62.1335%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="61.8835%" y="437" width="0.0154%" height="15" fill="rgb(230,219,10)"/><text x="62.1335%" y="447.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="61.8835%" y="421" width="0.0154%" height="15" fill="rgb(227,175,30)"/><text x="62.1335%" y="431.50"></text></g><g><title>inallocx (1 samples, 0.02%)</title><rect x="61.8835%" y="405" width="0.0154%" height="15" fill="rgb(217,2,50)"/><text x="62.1335%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (3 samples, 0.05%)</title><rect x="61.8682%" y="517" width="0.0461%" height="15" fill="rgb(229,160,0)"/><text x="62.1182%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Receive&gt;&gt; (1 samples, 0.02%)</title><rect x="61.8989%" y="501" width="0.0154%" height="15" fill="rgb(207,78,37)"/><text x="62.1489%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="61.8989%" y="485" width="0.0154%" height="15" fill="rgb(225,57,0)"/><text x="62.1489%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Receive]&gt; (1 samples, 0.02%)</title><rect x="61.8989%" y="469" width="0.0154%" height="15" fill="rgb(232,154,2)"/><text x="62.1489%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.14%)</title><rect x="61.9143%" y="421" width="0.1383%" height="15" fill="rgb(241,212,25)"/><text x="62.1643%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Expr]&gt; (9 samples, 0.14%)</title><rect x="61.9143%" y="405" width="0.1383%" height="15" fill="rgb(226,69,20)"/><text x="62.1643%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Expr&gt; (8 samples, 0.12%)</title><rect x="61.9296%" y="389" width="0.1229%" height="15" fill="rgb(247,184,54)"/><text x="62.1796%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::expr::ExprInstance&gt;&gt; (8 samples, 0.12%)</title><rect x="61.9296%" y="373" width="0.1229%" height="15" fill="rgb(210,145,0)"/><text x="62.1796%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::expr::ExprInstance&gt; (2 samples, 0.03%)</title><rect x="62.0218%" y="357" width="0.0307%" height="15" fill="rgb(253,82,12)"/><text x="62.2718%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (11 samples, 0.17%)</title><rect x="61.9143%" y="437" width="0.1690%" height="15" fill="rgb(245,42,11)"/><text x="62.1643%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (2 samples, 0.03%)</title><rect x="62.0525%" y="421" width="0.0307%" height="15" fill="rgb(219,147,32)"/><text x="62.3025%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="62.0525%" y="405" width="0.0307%" height="15" fill="rgb(246,12,7)"/><text x="62.3025%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.03%)</title><rect x="62.0525%" y="389" width="0.0307%" height="15" fill="rgb(243,50,9)"/><text x="62.3025%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.03%)</title><rect x="62.0525%" y="373" width="0.0307%" height="15" fill="rgb(219,149,6)"/><text x="62.3025%" y="383.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.03%)</title><rect x="62.0525%" y="357" width="0.0307%" height="15" fill="rgb(241,51,42)"/><text x="62.3025%" y="367.50"></text></g><g><title>isfree (2 samples, 0.03%)</title><rect x="62.0525%" y="341" width="0.0307%" height="15" fill="rgb(226,128,27)"/><text x="62.3025%" y="351.50"></text></g><g><title>isdalloct (2 samples, 0.03%)</title><rect x="62.0525%" y="325" width="0.0307%" height="15" fill="rgb(244,144,4)"/><text x="62.3025%" y="335.50"></text></g><g><title>arena_sdalloc (2 samples, 0.03%)</title><rect x="62.0525%" y="309" width="0.0307%" height="15" fill="rgb(221,4,13)"/><text x="62.3025%" y="319.50"></text></g><g><title>tcache_dalloc_small (2 samples, 0.03%)</title><rect x="62.0525%" y="293" width="0.0307%" height="15" fill="rgb(208,170,28)"/><text x="62.3025%" y="303.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="62.0679%" y="277" width="0.0154%" height="15" fill="rgb(226,131,13)"/><text x="62.3179%" y="287.50"></text></g><g><title>extent_arena_get (1 samples, 0.02%)</title><rect x="62.0679%" y="261" width="0.0154%" height="15" fill="rgb(215,72,41)"/><text x="62.3179%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::New&gt;&gt; (3 samples, 0.05%)</title><rect x="62.0833%" y="437" width="0.0461%" height="15" fill="rgb(243,108,20)"/><text x="62.3333%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="62.0833%" y="421" width="0.0461%" height="15" fill="rgb(230,189,17)"/><text x="62.3333%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::New]&gt; (3 samples, 0.05%)</title><rect x="62.0833%" y="405" width="0.0461%" height="15" fill="rgb(220,50,17)"/><text x="62.3333%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;rho_runtime::interpreter::reduce::environment::Env&gt; (19 samples, 0.29%)</title><rect x="61.9143%" y="517" width="0.2919%" height="15" fill="rgb(248,152,48)"/><text x="62.1643%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[model::rho_types::Par: 6]&gt;&gt; (19 samples, 0.29%)</title><rect x="61.9143%" y="501" width="0.2919%" height="15" fill="rgb(244,91,11)"/><text x="62.1643%" y="511.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.29%)</title><rect x="61.9143%" y="485" width="0.2919%" height="15" fill="rgb(220,157,5)"/><text x="62.1643%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Par]&gt; (19 samples, 0.29%)</title><rect x="61.9143%" y="469" width="0.2919%" height="15" fill="rgb(253,137,8)"/><text x="62.1643%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (19 samples, 0.29%)</title><rect x="61.9143%" y="453" width="0.2919%" height="15" fill="rgb(217,137,51)"/><text x="62.1643%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Send&gt;&gt; (5 samples, 0.08%)</title><rect x="62.1294%" y="437" width="0.0768%" height="15" fill="rgb(218,209,53)"/><text x="62.3794%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.08%)</title><rect x="62.1294%" y="421" width="0.0768%" height="15" fill="rgb(249,137,25)"/><text x="62.3794%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (5 samples, 0.08%)</title><rect x="62.1294%" y="405" width="0.0768%" height="15" fill="rgb(239,155,26)"/><text x="62.3794%" y="415.50"></text></g><g><title>rho_runtime::interpreter::AsynWaitGroup::release (3 samples, 0.05%)</title><rect x="62.2062%" y="517" width="0.0461%" height="15" fill="rgb(227,85,46)"/><text x="62.4562%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicI32::fetch_sub (3 samples, 0.05%)</title><rect x="62.2062%" y="501" width="0.0461%" height="15" fill="rgb(251,107,43)"/><text x="62.4562%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.05%)</title><rect x="62.2062%" y="485" width="0.0461%" height="15" fill="rgb(234,170,33)"/><text x="62.4562%" y="495.50"></text></g><g><title>__rg_alloc (1 samples, 0.02%)</title><rect x="62.2676%" y="421" width="0.0154%" height="15" fill="rgb(206,29,35)"/><text x="62.5176%" y="431.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (1 samples, 0.02%)</title><rect x="62.2676%" y="405" width="0.0154%" height="15" fill="rgb(227,138,25)"/><text x="62.5176%" y="415.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (155 samples, 2.38%)</title><rect x="59.9324%" y="565" width="2.3813%" height="15" fill="rgb(249,131,35)"/><text x="60.1824%" y="575.50">&lt;a..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (155 samples, 2.38%)</title><rect x="59.9324%" y="549" width="2.3813%" height="15" fill="rgb(239,6,40)"/><text x="60.1824%" y="559.50">&lt;c..</text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation::{{closure}} (155 samples, 2.38%)</title><rect x="59.9324%" y="533" width="2.3813%" height="15" fill="rgb(246,136,47)"/><text x="60.1824%" y="543.50">rh..</text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::AsyncEvaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate (4 samples, 0.06%)</title><rect x="62.2523%" y="517" width="0.0615%" height="15" fill="rgb(253,58,26)"/><text x="62.5023%" y="527.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (4 samples, 0.06%)</title><rect x="62.2523%" y="501" width="0.0615%" height="15" fill="rgb(237,141,10)"/><text x="62.5023%" y="511.50"></text></g><g><title>alloc::alloc::exchange_malloc (3 samples, 0.05%)</title><rect x="62.2676%" y="485" width="0.0461%" height="15" fill="rgb(234,156,12)"/><text x="62.5176%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.05%)</title><rect x="62.2676%" y="469" width="0.0461%" height="15" fill="rgb(243,224,36)"/><text x="62.5176%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.05%)</title><rect x="62.2676%" y="453" width="0.0461%" height="15" fill="rgb(205,229,51)"/><text x="62.5176%" y="463.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.05%)</title><rect x="62.2676%" y="437" width="0.0461%" height="15" fill="rgb(223,189,4)"/><text x="62.5176%" y="447.50"></text></g><g><title>_rjem_mallocx (2 samples, 0.03%)</title><rect x="62.2830%" y="421" width="0.0307%" height="15" fill="rgb(249,167,54)"/><text x="62.5330%" y="431.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="62.2984%" y="405" width="0.0154%" height="15" fill="rgb(218,34,28)"/><text x="62.5484%" y="415.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="62.2984%" y="389" width="0.0154%" height="15" fill="rgb(232,109,42)"/><text x="62.5484%" y="399.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="62.2984%" y="373" width="0.0154%" height="15" fill="rgb(248,214,46)"/><text x="62.5484%" y="383.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="62.2984%" y="357" width="0.0154%" height="15" fill="rgb(244,216,40)"/><text x="62.5484%" y="367.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="62.2984%" y="341" width="0.0154%" height="15" fill="rgb(231,226,31)"/><text x="62.5484%" y="351.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="62.2984%" y="325" width="0.0154%" height="15" fill="rgb(238,38,43)"/><text x="62.5484%" y="335.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect x="62.2984%" y="309" width="0.0154%" height="15" fill="rgb(208,88,43)"/><text x="62.5484%" y="319.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (1 samples, 0.02%)</title><rect x="62.2984%" y="293" width="0.0154%" height="15" fill="rgb(205,136,37)"/><text x="62.5484%" y="303.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect x="62.2984%" y="277" width="0.0154%" height="15" fill="rgb(237,34,14)"/><text x="62.5484%" y="287.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect x="62.2984%" y="261" width="0.0154%" height="15" fill="rgb(236,193,44)"/><text x="62.5484%" y="271.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="62.2984%" y="245" width="0.0154%" height="15" fill="rgb(231,48,10)"/><text x="62.5484%" y="255.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (158 samples, 2.43%)</title><rect x="59.9170%" y="645" width="2.4274%" height="15" fill="rgb(213,141,34)"/><text x="60.1670%" y="655.50">&lt;a..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (158 samples, 2.43%)</title><rect x="59.9170%" y="629" width="2.4274%" height="15" fill="rgb(249,130,34)"/><text x="60.1670%" y="639.50">as..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (158 samples, 2.43%)</title><rect x="59.9170%" y="613" width="2.4274%" height="15" fill="rgb(219,42,41)"/><text x="60.1670%" y="623.50">st..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (158 samples, 2.43%)</title><rect x="59.9170%" y="597" width="2.4274%" height="15" fill="rgb(224,100,54)"/><text x="60.1670%" y="607.50">st..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (158 samples, 2.43%)</title><rect x="59.9170%" y="581" width="2.4274%" height="15" fill="rgb(229,200,27)"/><text x="60.1670%" y="591.50">as..</text></g><g><title>core::ptr::drop_in_place&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}}::Guard&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current&lt;&lt;async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Par&gt;::{{closure}}&gt;&gt; as core::future::future::Future&gt;::poll::{{closure}},core::task::poll::Poll&lt;()&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (2 samples, 0.03%)</title><rect x="62.3137%" y="565" width="0.0307%" height="15" fill="rgb(217,118,10)"/><text x="62.5637%" y="575.50"></text></g><g><title>&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}}::Guard&lt;F&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="62.3137%" y="549" width="0.0307%" height="15" fill="rgb(206,22,3)"/><text x="62.5637%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.03%)</title><rect x="62.3137%" y="533" width="0.0307%" height="15" fill="rgb(232,163,46)"/><text x="62.5637%" y="543.50"></text></g><g><title>&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}}::Guard&lt;F&gt; as core::ops::drop::Drop&gt;::drop::{{closure}} (2 samples, 0.03%)</title><rect x="62.3137%" y="517" width="0.0307%" height="15" fill="rgb(206,95,13)"/><text x="62.5637%" y="527.50"></text></g><g><title>core::ops::function::FnOnce::call_once (2 samples, 0.03%)</title><rect x="62.3137%" y="501" width="0.0307%" height="15" fill="rgb(253,154,18)"/><text x="62.5637%" y="511.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}}::{{closure}} (2 samples, 0.03%)</title><rect x="62.3137%" y="485" width="0.0307%" height="15" fill="rgb(219,32,23)"/><text x="62.5637%" y="495.50"></text></g><g><title>[libc-2.31.so] (23 samples, 0.35%)</title><rect x="62.3444%" y="645" width="0.3534%" height="15" fill="rgb(230,191,45)"/><text x="62.5944%" y="655.50"></text></g><g><title>core::mem::drop (4 samples, 0.06%)</title><rect x="62.7132%" y="597" width="0.0615%" height="15" fill="rgb(229,64,36)"/><text x="62.9632%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (4 samples, 0.06%)</title><rect x="62.7132%" y="581" width="0.0615%" height="15" fill="rgb(205,129,25)"/><text x="62.9632%" y="591.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (4 samples, 0.06%)</title><rect x="62.7132%" y="565" width="0.0615%" height="15" fill="rgb(254,112,7)"/><text x="62.9632%" y="575.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (4 samples, 0.06%)</title><rect x="62.7132%" y="549" width="0.0615%" height="15" fill="rgb(226,53,48)"/><text x="62.9632%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4 samples, 0.06%)</title><rect x="62.7132%" y="533" width="0.0615%" height="15" fill="rgb(214,153,38)"/><text x="62.9632%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_sub (4 samples, 0.06%)</title><rect x="62.7132%" y="517" width="0.0615%" height="15" fill="rgb(243,101,7)"/><text x="62.9632%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;core::task::wake::Waker&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="62.7746%" y="597" width="0.0154%" height="15" fill="rgb(240,140,22)"/><text x="63.0246%" y="607.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="62.7746%" y="581" width="0.0154%" height="15" fill="rgb(235,114,2)"/><text x="63.0246%" y="591.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.02%)</title><rect x="62.7746%" y="565" width="0.0154%" height="15" fill="rgb(242,59,12)"/><text x="63.0246%" y="575.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.02%)</title><rect x="62.7746%" y="549" width="0.0154%" height="15" fill="rgb(252,134,9)"/><text x="63.0246%" y="559.50"></text></g><g><title>slab::Slab&lt;T&gt;::contains (1 samples, 0.02%)</title><rect x="62.7900%" y="597" width="0.0154%" height="15" fill="rgb(236,4,44)"/><text x="63.0400%" y="607.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.26%)</title><rect x="62.6978%" y="629" width="0.2612%" height="15" fill="rgb(254,172,41)"/><text x="62.9478%" y="639.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}}::{{closure}} (16 samples, 0.25%)</title><rect x="62.7132%" y="613" width="0.2458%" height="15" fill="rgb(244,63,20)"/><text x="62.9632%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (10 samples, 0.15%)</title><rect x="62.8053%" y="597" width="0.1536%" height="15" fill="rgb(250,73,31)"/><text x="63.0553%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (10 samples, 0.15%)</title><rect x="62.8053%" y="581" width="0.1536%" height="15" fill="rgb(241,38,36)"/><text x="63.0553%" y="591.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (8 samples, 0.12%)</title><rect x="62.8361%" y="565" width="0.1229%" height="15" fill="rgb(245,211,2)"/><text x="63.0861%" y="575.50"></text></g><g><title>__GI___pthread_mutex_lock (8 samples, 0.12%)</title><rect x="62.8361%" y="549" width="0.1229%" height="15" fill="rgb(206,120,28)"/><text x="63.0861%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;(),async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Par&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (18 samples, 0.28%)</title><rect x="62.6978%" y="645" width="0.2765%" height="15" fill="rgb(211,59,34)"/><text x="62.9478%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Executor::spawn&lt;(),async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Par&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}::{{closure}}&gt; (1 samples, 0.02%)</title><rect x="62.9590%" y="629" width="0.0154%" height="15" fill="rgb(233,168,5)"/><text x="63.2090%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_executor::State&gt;&gt; (1 samples, 0.02%)</title><rect x="62.9590%" y="613" width="0.0154%" height="15" fill="rgb(234,33,13)"/><text x="63.2090%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="62.9590%" y="597" width="0.0154%" height="15" fill="rgb(231,150,26)"/><text x="63.2090%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.02%)</title><rect x="62.9590%" y="581" width="0.0154%" height="15" fill="rgb(217,191,4)"/><text x="63.2090%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.02%)</title><rect x="62.9590%" y="565" width="0.0154%" height="15" fill="rgb(246,198,38)"/><text x="63.2090%" y="575.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (213 samples, 3.27%)</title><rect x="59.7173%" y="693" width="3.2724%" height="15" fill="rgb(245,64,37)"/><text x="59.9673%" y="703.50">&lt;co..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (213 samples, 3.27%)</title><rect x="59.7173%" y="677" width="3.2724%" height="15" fill="rgb(250,30,36)"/><text x="59.9673%" y="687.50">&lt;co..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (213 samples, 3.27%)</title><rect x="59.7173%" y="661" width="3.2724%" height="15" fill="rgb(217,86,53)"/><text x="59.9673%" y="671.50">asy..</text></g><g><title>core::ptr::drop_in_place&lt;async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Par&gt;::{{closure}}&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="62.9743%" y="645" width="0.0154%" height="15" fill="rgb(228,157,16)"/><text x="63.2243%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper&gt; (1 samples, 0.02%)</title><rect x="62.9743%" y="629" width="0.0154%" height="15" fill="rgb(217,59,31)"/><text x="63.2243%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::task::task::Task&gt; (1 samples, 0.02%)</title><rect x="62.9743%" y="613" width="0.0154%" height="15" fill="rgb(237,138,41)"/><text x="63.2243%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;alloc::string::String&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="62.9743%" y="597" width="0.0154%" height="15" fill="rgb(227,91,49)"/><text x="63.2243%" y="607.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_future (1 samples, 0.02%)</title><rect x="62.9897%" y="693" width="0.0154%" height="15" fill="rgb(247,21,44)"/><text x="63.2397%" y="703.50"></text></g><g><title>async_task::utils::abort_on_panic (1 samples, 0.02%)</title><rect x="62.9897%" y="677" width="0.0154%" height="15" fill="rgb(219,210,51)"/><text x="63.2397%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_future::{{closure}} (1 samples, 0.02%)</title><rect x="62.9897%" y="661" width="0.0154%" height="15" fill="rgb(209,140,6)"/><text x="63.2397%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.02%)</title><rect x="62.9897%" y="645" width="0.0154%" height="15" fill="rgb(221,188,24)"/><text x="63.2397%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;core::future::from_generator::GenFuture&lt;async_executor::Executor::spawn&lt;(),async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Par&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="62.9897%" y="629" width="0.0154%" height="15" fill="rgb(232,154,20)"/><text x="63.2397%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;core::future::from_generator::GenFuture&lt;async_executor::Executor::spawn&lt;(),async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Par&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="62.9897%" y="613" width="0.0154%" height="15" fill="rgb(244,137,50)"/><text x="63.2397%" y="623.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.02%)</title><rect x="62.9897%" y="597" width="0.0154%" height="15" fill="rgb(225,185,43)"/><text x="63.2397%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="62.9897%" y="581" width="0.0154%" height="15" fill="rgb(213,205,38)"/><text x="63.2397%" y="591.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="62.9897%" y="565" width="0.0154%" height="15" fill="rgb(236,73,12)"/><text x="63.2397%" y="575.50"></text></g><g><title>_rjem_sdallocx (1 samples, 0.02%)</title><rect x="62.9897%" y="549" width="0.0154%" height="15" fill="rgb(235,219,13)"/><text x="63.2397%" y="559.50"></text></g><g><title>inallocx (1 samples, 0.02%)</title><rect x="62.9897%" y="533" width="0.0154%" height="15" fill="rgb(218,59,36)"/><text x="63.2397%" y="543.50"></text></g><g><title>sz_s2u (1 samples, 0.02%)</title><rect x="62.9897%" y="517" width="0.0154%" height="15" fill="rgb(205,110,39)"/><text x="63.2397%" y="527.50"></text></g><g><title>sz_s2u_lookup (1 samples, 0.02%)</title><rect x="62.9897%" y="501" width="0.0154%" height="15" fill="rgb(218,206,42)"/><text x="63.2397%" y="511.50"></text></g><g><title>sz_index2size_lookup (1 samples, 0.02%)</title><rect x="62.9897%" y="485" width="0.0154%" height="15" fill="rgb(248,125,24)"/><text x="63.2397%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.03%)</title><rect x="63.0051%" y="661" width="0.0307%" height="15" fill="rgb(242,28,27)"/><text x="63.2551%" y="671.50"></text></g><g><title>_rjem_sdallocx (2 samples, 0.03%)</title><rect x="63.0051%" y="645" width="0.0307%" height="15" fill="rgb(216,228,15)"/><text x="63.2551%" y="655.50"></text></g><g><title>isfree (1 samples, 0.02%)</title><rect x="63.0204%" y="629" width="0.0154%" height="15" fill="rgb(235,116,46)"/><text x="63.2704%" y="639.50"></text></g><g><title>isdalloct (1 samples, 0.02%)</title><rect x="63.0204%" y="613" width="0.0154%" height="15" fill="rgb(224,18,32)"/><text x="63.2704%" y="623.50"></text></g><g><title>arena_sdalloc (1 samples, 0.02%)</title><rect x="63.0204%" y="597" width="0.0154%" height="15" fill="rgb(252,5,12)"/><text x="63.2704%" y="607.50"></text></g><g><title>tcache_dalloc_small (1 samples, 0.02%)</title><rect x="63.0204%" y="581" width="0.0154%" height="15" fill="rgb(251,36,5)"/><text x="63.2704%" y="591.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (1 samples, 0.02%)</title><rect x="63.0204%" y="565" width="0.0154%" height="15" fill="rgb(217,53,14)"/><text x="63.2704%" y="575.50"></text></g><g><title>extent_arena_get (1 samples, 0.02%)</title><rect x="63.0204%" y="549" width="0.0154%" height="15" fill="rgb(215,86,45)"/><text x="63.2704%" y="559.50"></text></g><g><title>atomic_load_p (1 samples, 0.02%)</title><rect x="63.0204%" y="533" width="0.0154%" height="15" fill="rgb(242,169,11)"/><text x="63.2704%" y="543.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::destroy (4 samples, 0.06%)</title><rect x="63.0051%" y="677" width="0.0615%" height="15" fill="rgb(211,213,45)"/><text x="63.2551%" y="687.50"></text></g><g><title>async_task::utils::abort_on_panic (2 samples, 0.03%)</title><rect x="63.0358%" y="661" width="0.0307%" height="15" fill="rgb(205,88,11)"/><text x="63.2858%" y="671.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::destroy::{{closure}} (2 samples, 0.03%)</title><rect x="63.0358%" y="645" width="0.0307%" height="15" fill="rgb(252,69,26)"/><text x="63.2858%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2 samples, 0.03%)</title><rect x="63.0358%" y="629" width="0.0307%" height="15" fill="rgb(246,123,37)"/><text x="63.2858%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Executor::schedule::{{closure}}&gt; (2 samples, 0.03%)</title><rect x="63.0358%" y="613" width="0.0307%" height="15" fill="rgb(212,205,5)"/><text x="63.2858%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_executor::State&gt;&gt; (2 samples, 0.03%)</title><rect x="63.0358%" y="597" width="0.0307%" height="15" fill="rgb(253,148,0)"/><text x="63.2858%" y="607.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="63.0358%" y="581" width="0.0307%" height="15" fill="rgb(239,22,4)"/><text x="63.2858%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.02%)</title><rect x="63.0512%" y="565" width="0.0154%" height="15" fill="rgb(226,26,53)"/><text x="63.3012%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.02%)</title><rect x="63.0512%" y="549" width="0.0154%" height="15" fill="rgb(225,229,45)"/><text x="63.3012%" y="559.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (6 samples, 0.09%)</title><rect x="63.0051%" y="693" width="0.0922%" height="15" fill="rgb(220,60,37)"/><text x="63.2551%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.03%)</title><rect x="63.0665%" y="677" width="0.0307%" height="15" fill="rgb(217,180,35)"/><text x="63.3165%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.03%)</title><rect x="63.0665%" y="661" width="0.0307%" height="15" fill="rgb(229,7,53)"/><text x="63.3165%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (16 samples, 0.25%)</title><rect x="63.0972%" y="693" width="0.2458%" height="15" fill="rgb(254,137,3)"/><text x="63.3472%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (16 samples, 0.25%)</title><rect x="63.0972%" y="677" width="0.2458%" height="15" fill="rgb(215,140,41)"/><text x="63.3472%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (282 samples, 4.33%)</title><rect x="59.0413%" y="709" width="4.3325%" height="15" fill="rgb(250,80,15)"/><text x="59.2913%" y="719.50">async..</text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.03%)</title><rect x="63.3431%" y="693" width="0.0307%" height="15" fill="rgb(252,191,6)"/><text x="63.5931%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.03%)</title><rect x="63.3431%" y="677" width="0.0307%" height="15" fill="rgb(246,217,18)"/><text x="63.5931%" y="687.50"></text></g><g><title>async_task::runnable::Runnable::run (20 samples, 0.31%)</title><rect x="63.3738%" y="709" width="0.3073%" height="15" fill="rgb(223,93,7)"/><text x="63.6238%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,421 samples, 21.83%)</title><rect x="41.8805%" y="741" width="21.8313%" height="15" fill="rgb(225,55,52)"/><text x="42.1305%" y="751.50">&lt;core::future::from_generator::GenF..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1,421 samples, 21.83%)</title><rect x="41.8805%" y="725" width="21.8313%" height="15" fill="rgb(240,31,24)"/><text x="42.1305%" y="735.50">async_executor::Executor::run::{{cl..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.03%)</title><rect x="63.6811%" y="709" width="0.0307%" height="15" fill="rgb(205,56,52)"/><text x="63.9311%" y="719.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1,424 samples, 21.88%)</title><rect x="41.8497%" y="773" width="21.8774%" height="15" fill="rgb(246,146,12)"/><text x="42.0997%" y="783.50">async_executor::Executor::run::{{cl..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,422 samples, 21.85%)</title><rect x="41.8805%" y="757" width="21.8467%" height="15" fill="rgb(239,84,36)"/><text x="42.1305%" y="767.50">&lt;futures_lite::future::Or&lt;F1,F2&gt; as..</text></g><g><title>parking::Inner::park (1 samples, 0.02%)</title><rect x="63.7118%" y="741" width="0.0154%" height="15" fill="rgb(207,41,40)"/><text x="63.9618%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (1 samples, 0.02%)</title><rect x="63.7118%" y="725" width="0.0154%" height="15" fill="rgb(241,179,25)"/><text x="63.9618%" y="735.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="63.7118%" y="709" width="0.0154%" height="15" fill="rgb(210,0,34)"/><text x="63.9618%" y="719.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.02%)</title><rect x="63.7118%" y="693" width="0.0154%" height="15" fill="rgb(225,217,29)"/><text x="63.9618%" y="703.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.02%)</title><rect x="63.7118%" y="677" width="0.0154%" height="15" fill="rgb(216,191,38)"/><text x="63.9618%" y="687.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="63.7118%" y="661" width="0.0154%" height="15" fill="rgb(232,140,52)"/><text x="63.9618%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="63.7118%" y="645" width="0.0154%" height="15" fill="rgb(223,158,51)"/><text x="63.9618%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.05%)</title><rect x="63.9115%" y="565" width="0.0461%" height="15" fill="rgb(235,29,51)"/><text x="64.1615%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (3 samples, 0.05%)</title><rect x="63.9115%" y="549" width="0.0461%" height="15" fill="rgb(215,181,18)"/><text x="64.1615%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.05%)</title><rect x="63.9115%" y="533" width="0.0461%" height="15" fill="rgb(227,125,34)"/><text x="64.1615%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.05%)</title><rect x="63.9115%" y="517" width="0.0461%" height="15" fill="rgb(230,197,49)"/><text x="64.1615%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.03%)</title><rect x="63.9269%" y="501" width="0.0307%" height="15" fill="rgb(239,141,16)"/><text x="64.1769%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.03%)</title><rect x="63.9269%" y="485" width="0.0307%" height="15" fill="rgb(225,105,43)"/><text x="64.1769%" y="495.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.03%)</title><rect x="63.9269%" y="469" width="0.0307%" height="15" fill="rgb(214,131,14)"/><text x="64.1769%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (2 samples, 0.03%)</title><rect x="63.9269%" y="453" width="0.0307%" height="15" fill="rgb(229,177,11)"/><text x="64.1769%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (1 samples, 0.02%)</title><rect x="63.9422%" y="437" width="0.0154%" height="15" fill="rgb(231,180,14)"/><text x="64.1922%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.02%)</title><rect x="63.9422%" y="421" width="0.0154%" height="15" fill="rgb(232,88,2)"/><text x="64.1922%" y="431.50"></text></g><g><title>concurrent_queue::full_fence (6 samples, 0.09%)</title><rect x="64.0037%" y="533" width="0.0922%" height="15" fill="rgb(205,220,8)"/><text x="64.2537%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (6 samples, 0.09%)</title><rect x="64.0037%" y="517" width="0.0922%" height="15" fill="rgb(225,23,53)"/><text x="64.2537%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (6 samples, 0.09%)</title><rect x="64.0037%" y="501" width="0.0922%" height="15" fill="rgb(213,62,29)"/><text x="64.2537%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.09%)</title><rect x="64.0037%" y="485" width="0.0922%" height="15" fill="rgb(227,75,7)"/><text x="64.2537%" y="495.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (9 samples, 0.14%)</title><rect x="63.9730%" y="549" width="0.1383%" height="15" fill="rgb(207,105,14)"/><text x="64.2230%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="64.0959%" y="533" width="0.0154%" height="15" fill="rgb(245,62,29)"/><text x="64.3459%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="64.0959%" y="517" width="0.0154%" height="15" fill="rgb(236,202,4)"/><text x="64.3459%" y="527.50"></text></g><g><title>concurrent_queue::full_fence (1 samples, 0.02%)</title><rect x="64.1266%" y="533" width="0.0154%" height="15" fill="rgb(250,67,1)"/><text x="64.3766%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (1 samples, 0.02%)</title><rect x="64.1266%" y="517" width="0.0154%" height="15" fill="rgb(253,115,44)"/><text x="64.3766%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.02%)</title><rect x="64.1266%" y="501" width="0.0154%" height="15" fill="rgb(251,139,18)"/><text x="64.3766%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.02%)</title><rect x="64.1266%" y="485" width="0.0154%" height="15" fill="rgb(218,22,32)"/><text x="64.3766%" y="495.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (13 samples, 0.20%)</title><rect x="63.9576%" y="565" width="0.1997%" height="15" fill="rgb(243,53,5)"/><text x="64.2076%" y="575.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (3 samples, 0.05%)</title><rect x="64.1112%" y="549" width="0.0461%" height="15" fill="rgb(227,56,16)"/><text x="64.3612%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.02%)</title><rect x="64.1420%" y="533" width="0.0154%" height="15" fill="rgb(245,53,0)"/><text x="64.3920%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="64.1420%" y="517" width="0.0154%" height="15" fill="rgb(216,170,35)"/><text x="64.3920%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.03%)</title><rect x="64.1573%" y="501" width="0.0307%" height="15" fill="rgb(211,200,8)"/><text x="64.4073%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.03%)</title><rect x="64.1573%" y="485" width="0.0307%" height="15" fill="rgb(228,204,44)"/><text x="64.4073%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (7 samples, 0.11%)</title><rect x="64.1573%" y="565" width="0.1075%" height="15" fill="rgb(214,121,17)"/><text x="64.4073%" y="575.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.11%)</title><rect x="64.1573%" y="549" width="0.1075%" height="15" fill="rgb(233,64,38)"/><text x="64.4073%" y="559.50"></text></g><g><title>std::sys_common::rwlock::RWLock::read_unlock (7 samples, 0.11%)</title><rect x="64.1573%" y="533" width="0.1075%" height="15" fill="rgb(253,54,19)"/><text x="64.4073%" y="543.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (7 samples, 0.11%)</title><rect x="64.1573%" y="517" width="0.1075%" height="15" fill="rgb(253,94,18)"/><text x="64.4073%" y="527.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (5 samples, 0.08%)</title><rect x="64.1880%" y="501" width="0.0768%" height="15" fill="rgb(227,57,52)"/><text x="64.4380%" y="511.50"></text></g><g><title>__GI___pthread_rwlock_unlock (5 samples, 0.08%)</title><rect x="64.1880%" y="485" width="0.0768%" height="15" fill="rgb(230,228,50)"/><text x="64.4380%" y="495.50"></text></g><g><title>fastrand::RNG::__getit (1 samples, 0.02%)</title><rect x="64.2649%" y="517" width="0.0154%" height="15" fill="rgb(217,205,27)"/><text x="64.5149%" y="527.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="64.2649%" y="501" width="0.0154%" height="15" fill="rgb(252,71,50)"/><text x="64.5149%" y="511.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="64.2649%" y="485" width="0.0154%" height="15" fill="rgb(209,86,4)"/><text x="64.5149%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.02%)</title><rect x="64.2649%" y="469" width="0.0154%" height="15" fill="rgb(229,94,0)"/><text x="64.5149%" y="479.50"></text></g><g><title>fastrand::usize (2 samples, 0.03%)</title><rect x="64.2649%" y="565" width="0.0307%" height="15" fill="rgb(252,223,21)"/><text x="64.5149%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.03%)</title><rect x="64.2649%" y="549" width="0.0307%" height="15" fill="rgb(230,210,4)"/><text x="64.5149%" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.03%)</title><rect x="64.2649%" y="533" width="0.0307%" height="15" fill="rgb(240,149,38)"/><text x="64.5149%" y="543.50"></text></g><g><title>fastrand::usize::{{closure}} (1 samples, 0.02%)</title><rect x="64.2802%" y="517" width="0.0154%" height="15" fill="rgb(254,105,20)"/><text x="64.5302%" y="527.50"></text></g><g><title>fastrand::Rng::usize (1 samples, 0.02%)</title><rect x="64.2802%" y="501" width="0.0154%" height="15" fill="rgb(253,87,46)"/><text x="64.5302%" y="511.50"></text></g><g><title>fastrand::Rng::gen_mod_u64 (1 samples, 0.02%)</title><rect x="64.2802%" y="485" width="0.0154%" height="15" fill="rgb(253,116,33)"/><text x="64.5302%" y="495.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="64.2956%" y="549" width="0.0154%" height="15" fill="rgb(229,198,5)"/><text x="64.5456%" y="559.50"></text></g><g><title>std::sys_common::poison::Flag::borrow (1 samples, 0.02%)</title><rect x="64.2956%" y="533" width="0.0154%" height="15" fill="rgb(242,38,37)"/><text x="64.5456%" y="543.50"></text></g><g><title>std::thread::panicking (1 samples, 0.02%)</title><rect x="64.2956%" y="517" width="0.0154%" height="15" fill="rgb(242,69,53)"/><text x="64.5456%" y="527.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.02%)</title><rect x="64.2956%" y="501" width="0.0154%" height="15" fill="rgb(249,80,16)"/><text x="64.5456%" y="511.50"></text></g><g><title>std::panicking::panic_count::is_zero (1 samples, 0.02%)</title><rect x="64.2956%" y="485" width="0.0154%" height="15" fill="rgb(206,128,11)"/><text x="64.5456%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="64.2956%" y="469" width="0.0154%" height="15" fill="rgb(212,35,20)"/><text x="64.5456%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="64.2956%" y="453" width="0.0154%" height="15" fill="rgb(236,79,13)"/><text x="64.5456%" y="463.50"></text></g><g><title>__GI___pthread_rwlock_rdlock (2 samples, 0.03%)</title><rect x="64.3110%" y="517" width="0.0307%" height="15" fill="rgb(233,123,3)"/><text x="64.5610%" y="527.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (31 samples, 0.48%)</title><rect x="63.9115%" y="581" width="0.4763%" height="15" fill="rgb(214,93,52)"/><text x="64.1615%" y="591.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (6 samples, 0.09%)</title><rect x="64.2956%" y="565" width="0.0922%" height="15" fill="rgb(251,37,40)"/><text x="64.5456%" y="575.50"></text></g><g><title>std::sys_common::rwlock::RWLock::read (5 samples, 0.08%)</title><rect x="64.3110%" y="549" width="0.0768%" height="15" fill="rgb(227,80,54)"/><text x="64.5610%" y="559.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (5 samples, 0.08%)</title><rect x="64.3110%" y="533" width="0.0768%" height="15" fill="rgb(254,48,11)"/><text x="64.5610%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3 samples, 0.05%)</title><rect x="64.3417%" y="517" width="0.0461%" height="15" fill="rgb(235,193,26)"/><text x="64.5917%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.05%)</title><rect x="64.3417%" y="501" width="0.0461%" height="15" fill="rgb(229,99,21)"/><text x="64.5917%" y="511.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.02%)</title><rect x="64.3878%" y="549" width="0.0154%" height="15" fill="rgb(211,140,41)"/><text x="64.6378%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.02%)</title><rect x="64.3878%" y="533" width="0.0154%" height="15" fill="rgb(240,227,30)"/><text x="64.6378%" y="543.50"></text></g><g><title>async_executor::Sleepers::update (2 samples, 0.03%)</title><rect x="64.3878%" y="565" width="0.0307%" height="15" fill="rgb(215,224,45)"/><text x="64.6378%" y="575.50"></text></g><g><title>core::task::wake::Waker::will_wake (1 samples, 0.02%)</title><rect x="64.4031%" y="549" width="0.0154%" height="15" fill="rgb(206,123,31)"/><text x="64.6531%" y="559.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="64.4031%" y="533" width="0.0154%" height="15" fill="rgb(210,138,16)"/><text x="64.6531%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (3 samples, 0.05%)</title><rect x="64.4185%" y="565" width="0.0461%" height="15" fill="rgb(228,57,28)"/><text x="64.6685%" y="575.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="64.4185%" y="549" width="0.0461%" height="15" fill="rgb(242,170,10)"/><text x="64.6685%" y="559.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (3 samples, 0.05%)</title><rect x="64.4185%" y="533" width="0.0461%" height="15" fill="rgb(228,214,39)"/><text x="64.6685%" y="543.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (3 samples, 0.05%)</title><rect x="64.4185%" y="517" width="0.0461%" height="15" fill="rgb(218,179,33)"/><text x="64.6685%" y="527.50"></text></g><g><title>__GI___pthread_mutex_unlock (3 samples, 0.05%)</title><rect x="64.4185%" y="501" width="0.0461%" height="15" fill="rgb(235,193,39)"/><text x="64.6685%" y="511.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (46 samples, 0.71%)</title><rect x="63.8193%" y="693" width="0.7067%" height="15" fill="rgb(219,221,36)"/><text x="64.0693%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (43 samples, 0.66%)</title><rect x="63.8654%" y="677" width="0.6606%" height="15" fill="rgb(248,218,19)"/><text x="64.1154%" y="687.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (43 samples, 0.66%)</title><rect x="63.8654%" y="661" width="0.6606%" height="15" fill="rgb(205,50,9)"/><text x="64.1154%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (43 samples, 0.66%)</title><rect x="63.8654%" y="645" width="0.6606%" height="15" fill="rgb(238,81,28)"/><text x="64.1154%" y="655.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (43 samples, 0.66%)</title><rect x="63.8654%" y="629" width="0.6606%" height="15" fill="rgb(235,110,19)"/><text x="64.1154%" y="639.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (41 samples, 0.63%)</title><rect x="63.8961%" y="613" width="0.6299%" height="15" fill="rgb(214,7,14)"/><text x="64.1461%" y="623.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (41 samples, 0.63%)</title><rect x="63.8961%" y="597" width="0.6299%" height="15" fill="rgb(211,77,3)"/><text x="64.1461%" y="607.50"></text></g><g><title>async_executor::Ticker::sleep (9 samples, 0.14%)</title><rect x="64.3878%" y="581" width="0.1383%" height="15" fill="rgb(229,5,9)"/><text x="64.6378%" y="591.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (4 samples, 0.06%)</title><rect x="64.4646%" y="565" width="0.0615%" height="15" fill="rgb(225,90,11)"/><text x="64.7146%" y="575.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (4 samples, 0.06%)</title><rect x="64.4646%" y="549" width="0.0615%" height="15" fill="rgb(242,56,8)"/><text x="64.7146%" y="559.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (4 samples, 0.06%)</title><rect x="64.4646%" y="533" width="0.0615%" height="15" fill="rgb(249,212,39)"/><text x="64.7146%" y="543.50"></text></g><g><title>__GI___pthread_mutex_lock (4 samples, 0.06%)</title><rect x="64.4646%" y="517" width="0.0615%" height="15" fill="rgb(236,90,9)"/><text x="64.7146%" y="527.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (3 samples, 0.05%)</title><rect x="64.5721%" y="629" width="0.0461%" height="15" fill="rgb(206,88,35)"/><text x="64.8221%" y="639.50"></text></g><g><title>core::mem::replace (3 samples, 0.05%)</title><rect x="64.5721%" y="613" width="0.0461%" height="15" fill="rgb(205,126,30)"/><text x="64.8221%" y="623.50"></text></g><g><title>core::mem::swap (3 samples, 0.05%)</title><rect x="64.5721%" y="597" width="0.0461%" height="15" fill="rgb(230,176,12)"/><text x="64.8221%" y="607.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (3 samples, 0.05%)</title><rect x="64.5721%" y="581" width="0.0461%" height="15" fill="rgb(243,19,9)"/><text x="64.8221%" y="591.50"></text></g><g><title>core::ptr::read (3 samples, 0.05%)</title><rect x="64.5721%" y="565" width="0.0461%" height="15" fill="rgb(245,171,17)"/><text x="64.8221%" y="575.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (4 samples, 0.06%)</title><rect x="64.5721%" y="645" width="0.0615%" height="15" fill="rgb(227,52,21)"/><text x="64.8221%" y="655.50"></text></g><g><title>core::mem::drop (1 samples, 0.02%)</title><rect x="64.6182%" y="629" width="0.0154%" height="15" fill="rgb(238,69,14)"/><text x="64.8682%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::State&gt; (1 samples, 0.02%)</title><rect x="64.6182%" y="613" width="0.0154%" height="15" fill="rgb(241,156,39)"/><text x="64.8682%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (7 samples, 0.11%)</title><rect x="64.6336%" y="645" width="0.1075%" height="15" fill="rgb(212,227,28)"/><text x="64.8836%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (7 samples, 0.11%)</title><rect x="64.6336%" y="629" width="0.1075%" height="15" fill="rgb(209,118,27)"/><text x="64.8836%" y="639.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.11%)</title><rect x="64.6336%" y="613" width="0.1075%" height="15" fill="rgb(226,102,5)"/><text x="64.8836%" y="623.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (7 samples, 0.11%)</title><rect x="64.6336%" y="597" width="0.1075%" height="15" fill="rgb(223,34,3)"/><text x="64.8836%" y="607.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (7 samples, 0.11%)</title><rect x="64.6336%" y="581" width="0.1075%" height="15" fill="rgb(221,81,38)"/><text x="64.8836%" y="591.50"></text></g><g><title>__GI___pthread_mutex_unlock (7 samples, 0.11%)</title><rect x="64.6336%" y="565" width="0.1075%" height="15" fill="rgb(236,219,28)"/><text x="64.8836%" y="575.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (20 samples, 0.31%)</title><rect x="64.5568%" y="661" width="0.3073%" height="15" fill="rgb(213,200,14)"/><text x="64.8068%" y="671.50"></text></g><g><title>event_listener::Inner::lock (8 samples, 0.12%)</title><rect x="64.7411%" y="645" width="0.1229%" height="15" fill="rgb(240,33,19)"/><text x="64.9911%" y="655.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (8 samples, 0.12%)</title><rect x="64.7411%" y="629" width="0.1229%" height="15" fill="rgb(233,113,27)"/><text x="64.9911%" y="639.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (8 samples, 0.12%)</title><rect x="64.7411%" y="613" width="0.1229%" height="15" fill="rgb(220,221,18)"/><text x="64.9911%" y="623.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (8 samples, 0.12%)</title><rect x="64.7411%" y="597" width="0.1229%" height="15" fill="rgb(238,92,8)"/><text x="64.9911%" y="607.50"></text></g><g><title>__GI___pthread_mutex_lock (8 samples, 0.12%)</title><rect x="64.7411%" y="581" width="0.1229%" height="15" fill="rgb(222,164,16)"/><text x="64.9911%" y="591.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,513 samples, 23.24%)</title><rect x="41.7883%" y="805" width="23.2447%" height="15" fill="rgb(241,119,3)"/><text x="42.0383%" y="815.50">&lt;futures_lite::future::Or&lt;F1,F2&gt; as c..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,509 samples, 23.18%)</title><rect x="41.8497%" y="789" width="23.1833%" height="15" fill="rgb(241,44,8)"/><text x="42.0997%" y="799.50">&lt;core::future::from_generator::GenFut..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (85 samples, 1.31%)</title><rect x="63.7271%" y="773" width="1.3059%" height="15" fill="rgb(230,36,40)"/><text x="63.9771%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (80 samples, 1.23%)</title><rect x="63.8040%" y="757" width="1.2291%" height="15" fill="rgb(243,16,36)"/><text x="64.0540%" y="767.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (80 samples, 1.23%)</title><rect x="63.8040%" y="741" width="1.2291%" height="15" fill="rgb(231,4,26)"/><text x="64.0540%" y="751.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (79 samples, 1.21%)</title><rect x="63.8193%" y="725" width="1.2137%" height="15" fill="rgb(240,9,31)"/><text x="64.0693%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (79 samples, 1.21%)</title><rect x="63.8193%" y="709" width="1.2137%" height="15" fill="rgb(207,173,15)"/><text x="64.0693%" y="719.50"></text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}} (33 samples, 0.51%)</title><rect x="64.5260%" y="693" width="0.5070%" height="15" fill="rgb(224,192,53)"/><text x="64.7760%" y="703.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (32 samples, 0.49%)</title><rect x="64.5414%" y="677" width="0.4916%" height="15" fill="rgb(223,67,28)"/><text x="64.7914%" y="687.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (11 samples, 0.17%)</title><rect x="64.8640%" y="661" width="0.1690%" height="15" fill="rgb(211,20,47)"/><text x="65.1140%" y="671.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (10 samples, 0.15%)</title><rect x="64.8794%" y="645" width="0.1536%" height="15" fill="rgb(240,228,2)"/><text x="65.1294%" y="655.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (6 samples, 0.09%)</title><rect x="64.9409%" y="629" width="0.0922%" height="15" fill="rgb(248,151,12)"/><text x="65.1909%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (6 samples, 0.09%)</title><rect x="64.9409%" y="613" width="0.0922%" height="15" fill="rgb(244,8,39)"/><text x="65.1909%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (6 samples, 0.09%)</title><rect x="64.9409%" y="597" width="0.0922%" height="15" fill="rgb(222,26,8)"/><text x="65.1909%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.09%)</title><rect x="64.9409%" y="581" width="0.0922%" height="15" fill="rgb(213,106,44)"/><text x="65.1909%" y="591.50"></text></g><g><title>async_io::reactor::Reactor::try_lock (58 samples, 0.89%)</title><rect x="65.0330%" y="805" width="0.8911%" height="15" fill="rgb(214,129,20)"/><text x="65.2830%" y="815.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (58 samples, 0.89%)</title><rect x="65.0330%" y="789" width="0.8911%" height="15" fill="rgb(212,32,13)"/><text x="65.2830%" y="799.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (58 samples, 0.89%)</title><rect x="65.0330%" y="773" width="0.8911%" height="15" fill="rgb(208,168,33)"/><text x="65.2830%" y="783.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (58 samples, 0.89%)</title><rect x="65.0330%" y="757" width="0.8911%" height="15" fill="rgb(231,207,8)"/><text x="65.2830%" y="767.50"></text></g><g><title>__GI___pthread_mutex_trylock (58 samples, 0.89%)</title><rect x="65.0330%" y="741" width="0.8911%" height="15" fill="rgb(235,219,23)"/><text x="65.2830%" y="751.50"></text></g><g><title>__GI___pthread_mutex_unlock (73 samples, 1.12%)</title><rect x="65.9548%" y="709" width="1.1215%" height="15" fill="rgb(226,216,26)"/><text x="66.2048%" y="719.50"></text></g><g><title>[unknown] (61 samples, 0.94%)</title><rect x="66.1392%" y="693" width="0.9372%" height="15" fill="rgb(239,137,16)"/><text x="66.3892%" y="703.50"></text></g><g><title>[unknown] (50 samples, 0.77%)</title><rect x="66.3082%" y="677" width="0.7682%" height="15" fill="rgb(207,12,36)"/><text x="66.5582%" y="687.50"></text></g><g><title>[unknown] (49 samples, 0.75%)</title><rect x="66.3236%" y="661" width="0.7528%" height="15" fill="rgb(210,214,24)"/><text x="66.5736%" y="671.50"></text></g><g><title>[unknown] (44 samples, 0.68%)</title><rect x="66.4004%" y="645" width="0.6760%" height="15" fill="rgb(206,56,30)"/><text x="66.6504%" y="655.50"></text></g><g><title>[unknown] (43 samples, 0.66%)</title><rect x="66.4157%" y="629" width="0.6606%" height="15" fill="rgb(228,143,26)"/><text x="66.6657%" y="639.50"></text></g><g><title>[unknown] (2 samples, 0.03%)</title><rect x="67.0456%" y="613" width="0.0307%" height="15" fill="rgb(216,218,46)"/><text x="67.2956%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (76 samples, 1.17%)</title><rect x="65.9548%" y="773" width="1.1676%" height="15" fill="rgb(206,6,19)"/><text x="66.2048%" y="783.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (76 samples, 1.17%)</title><rect x="65.9548%" y="757" width="1.1676%" height="15" fill="rgb(239,177,51)"/><text x="66.2048%" y="767.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (76 samples, 1.17%)</title><rect x="65.9548%" y="741" width="1.1676%" height="15" fill="rgb(216,55,25)"/><text x="66.2048%" y="751.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (76 samples, 1.17%)</title><rect x="65.9548%" y="725" width="1.1676%" height="15" fill="rgb(231,163,29)"/><text x="66.2048%" y="735.50"></text></g><g><title>__pthread_cond_wait (3 samples, 0.05%)</title><rect x="67.0764%" y="709" width="0.0461%" height="15" fill="rgb(232,149,50)"/><text x="67.3264%" y="719.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="67.0764%" y="693" width="0.0461%" height="15" fill="rgb(223,142,48)"/><text x="67.3264%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (23 samples, 0.35%)</title><rect x="67.1224%" y="773" width="0.3534%" height="15" fill="rgb(245,83,23)"/><text x="67.3724%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (23 samples, 0.35%)</title><rect x="67.1224%" y="757" width="0.3534%" height="15" fill="rgb(224,63,2)"/><text x="67.3724%" y="767.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="67.4758%" y="725" width="0.0154%" height="15" fill="rgb(218,65,53)"/><text x="67.7258%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="67.4758%" y="709" width="0.0154%" height="15" fill="rgb(221,84,29)"/><text x="67.7258%" y="719.50"></text></g><g><title>[unknown] (664 samples, 10.20%)</title><rect x="68.3669%" y="709" width="10.2013%" height="15" fill="rgb(234,0,32)"/><text x="68.6169%" y="719.50">[unknown]</text></g><g><title>[unknown] (646 samples, 9.92%)</title><rect x="68.6434%" y="693" width="9.9247%" height="15" fill="rgb(206,20,16)"/><text x="68.8934%" y="703.50">[unknown]</text></g><g><title>[unknown] (638 samples, 9.80%)</title><rect x="68.7663%" y="677" width="9.8018%" height="15" fill="rgb(244,172,18)"/><text x="69.0163%" y="687.50">[unknown]</text></g><g><title>[unknown] (625 samples, 9.60%)</title><rect x="68.9660%" y="661" width="9.6021%" height="15" fill="rgb(254,133,1)"/><text x="69.2160%" y="671.50">[unknown]</text></g><g><title>[unknown] (606 samples, 9.31%)</title><rect x="69.2580%" y="645" width="9.3102%" height="15" fill="rgb(222,206,41)"/><text x="69.5080%" y="655.50">[unknown]</text></g><g><title>[unknown] (587 samples, 9.02%)</title><rect x="69.5499%" y="629" width="9.0183%" height="15" fill="rgb(212,3,42)"/><text x="69.7999%" y="639.50">[unknown]</text></g><g><title>[unknown] (525 samples, 8.07%)</title><rect x="70.5024%" y="613" width="8.0658%" height="15" fill="rgb(241,11,4)"/><text x="70.7524%" y="623.50">[unknown]</text></g><g><title>[unknown] (484 samples, 7.44%)</title><rect x="71.1323%" y="597" width="7.4359%" height="15" fill="rgb(205,19,26)"/><text x="71.3823%" y="607.50">[unknown]</text></g><g><title>[unknown] (450 samples, 6.91%)</title><rect x="71.6546%" y="581" width="6.9135%" height="15" fill="rgb(210,179,32)"/><text x="71.9046%" y="591.50">[unknown]</text></g><g><title>[unknown] (347 samples, 5.33%)</title><rect x="73.2371%" y="565" width="5.3311%" height="15" fill="rgb(227,116,49)"/><text x="73.4871%" y="575.50">[unknow..</text></g><g><title>[unknown] (263 samples, 4.04%)</title><rect x="74.5276%" y="549" width="4.0406%" height="15" fill="rgb(211,146,6)"/><text x="74.7776%" y="559.50">[unk..</text></g><g><title>[unknown] (213 samples, 3.27%)</title><rect x="75.2957%" y="533" width="3.2724%" height="15" fill="rgb(219,44,39)"/><text x="75.5457%" y="543.50">[un..</text></g><g><title>[unknown] (167 samples, 2.57%)</title><rect x="76.0025%" y="517" width="2.5657%" height="15" fill="rgb(234,128,11)"/><text x="76.2525%" y="527.50">[u..</text></g><g><title>[unknown] (145 samples, 2.23%)</title><rect x="76.3405%" y="501" width="2.2277%" height="15" fill="rgb(220,183,53)"/><text x="76.5905%" y="511.50">[..</text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="78.5528%" y="485" width="0.0154%" height="15" fill="rgb(213,219,32)"/><text x="78.8028%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="78.5528%" y="469" width="0.0154%" height="15" fill="rgb(232,156,16)"/><text x="78.8028%" y="479.50"></text></g><g><title>__pthread_cleanup_pop (1 samples, 0.02%)</title><rect x="78.5681%" y="709" width="0.0154%" height="15" fill="rgb(246,135,34)"/><text x="78.8181%" y="719.50"></text></g><g><title>__pthread_disable_asynccancel (7 samples, 0.11%)</title><rect x="78.5835%" y="709" width="0.1075%" height="15" fill="rgb(241,99,0)"/><text x="78.8335%" y="719.50"></text></g><g><title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="78.6910%" y="709" width="0.0307%" height="15" fill="rgb(222,103,45)"/><text x="78.9410%" y="719.50"></text></g><g><title>__pthread_mutex_cond_lock (9 samples, 0.14%)</title><rect x="78.7218%" y="709" width="0.1383%" height="15" fill="rgb(212,57,4)"/><text x="78.9718%" y="719.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (743 samples, 11.41%)</title><rect x="67.4758%" y="741" width="11.4150%" height="15" fill="rgb(215,68,47)"/><text x="67.7258%" y="751.50">std::sys::unix::c..</text></g><g><title>__pthread_cond_wait (742 samples, 11.40%)</title><rect x="67.4912%" y="725" width="11.3996%" height="15" fill="rgb(230,84,2)"/><text x="67.7412%" y="735.50">__pthread_cond_wa..</text></g><g><title>__pthread_mutex_unlock_usercnt (2 samples, 0.03%)</title><rect x="78.8600%" y="709" width="0.0307%" height="15" fill="rgb(220,102,14)"/><text x="79.1100%" y="719.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (745 samples, 11.45%)</title><rect x="67.4758%" y="757" width="11.4457%" height="15" fill="rgb(240,10,32)"/><text x="67.7258%" y="767.50">std::sys_common::..</text></g><g><title>std::sys_common::condvar::check::SameMutexCheck::verify (2 samples, 0.03%)</title><rect x="78.8908%" y="741" width="0.0307%" height="15" fill="rgb(215,47,27)"/><text x="79.1408%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (2 samples, 0.03%)</title><rect x="78.8908%" y="725" width="0.0307%" height="15" fill="rgb(233,188,43)"/><text x="79.1408%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.03%)</title><rect x="78.8908%" y="709" width="0.0307%" height="15" fill="rgb(253,190,1)"/><text x="79.1408%" y="719.50"></text></g><g><title>std::sync::condvar::Condvar::wait (763 samples, 11.72%)</title><rect x="67.4758%" y="773" width="11.7222%" height="15" fill="rgb(206,114,52)"/><text x="67.7258%" y="783.50">std::sync::condva..</text></g><g><title>std::sys_common::poison::Flag::get (18 samples, 0.28%)</title><rect x="78.9215%" y="757" width="0.2765%" height="15" fill="rgb(233,120,37)"/><text x="79.1715%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (18 samples, 0.28%)</title><rect x="78.9215%" y="741" width="0.2765%" height="15" fill="rgb(214,52,39)"/><text x="79.1715%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_load (18 samples, 0.28%)</title><rect x="78.9215%" y="725" width="0.2765%" height="15" fill="rgb(223,80,29)"/><text x="79.1715%" y="735.50"></text></g><g><title>parking::Parker::park (870 samples, 13.37%)</title><rect x="65.9241%" y="805" width="13.3661%" height="15" fill="rgb(230,101,40)"/><text x="66.1741%" y="815.50">parking::Parker::park</text></g><g><title>parking::Inner::park (870 samples, 13.37%)</title><rect x="65.9241%" y="789" width="13.3661%" height="15" fill="rgb(219,211,8)"/><text x="66.1741%" y="799.50">parking::Inner::park</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (6 samples, 0.09%)</title><rect x="79.1980%" y="773" width="0.0922%" height="15" fill="rgb(252,126,28)"/><text x="79.4480%" y="783.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (6 samples, 0.09%)</title><rect x="79.1980%" y="757" width="0.0922%" height="15" fill="rgb(215,56,38)"/><text x="79.4480%" y="767.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (6 samples, 0.09%)</title><rect x="79.1980%" y="741" width="0.0922%" height="15" fill="rgb(249,55,44)"/><text x="79.4480%" y="751.50"></text></g><g><title>__GI___pthread_mutex_lock (6 samples, 0.09%)</title><rect x="79.1980%" y="725" width="0.0922%" height="15" fill="rgb(220,221,32)"/><text x="79.4480%" y="735.50"></text></g><g><title>std::panic::catch_unwind (2,459 samples, 37.78%)</title><rect x="41.5578%" y="1093" width="37.7785%" height="15" fill="rgb(212,216,41)"/><text x="41.8078%" y="1103.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (2,459 samples, 37.78%)</title><rect x="41.5578%" y="1077" width="37.7785%" height="15" fill="rgb(228,213,43)"/><text x="41.8078%" y="1087.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (2,459 samples, 37.78%)</title><rect x="41.5578%" y="1061" width="37.7785%" height="15" fill="rgb(211,31,26)"/><text x="41.8078%" y="1071.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,459 samples, 37.78%)</title><rect x="41.5578%" y="1045" width="37.7785%" height="15" fill="rgb(229,202,19)"/><text x="41.8078%" y="1055.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnc..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (2,459 samples, 37.78%)</title><rect x="41.5578%" y="1029" width="37.7785%" height="15" fill="rgb(229,105,46)"/><text x="41.8078%" y="1039.50">std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2,459 samples, 37.78%)</title><rect x="41.5578%" y="1013" width="37.7785%" height="15" fill="rgb(235,108,1)"/><text x="41.8078%" y="1023.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (2,459 samples, 37.78%)</title><rect x="41.5578%" y="997" width="37.7785%" height="15" fill="rgb(245,111,35)"/><text x="41.8078%" y="1007.50">core::ops::function::FnOnce::call_once</text></g><g><title>async_global_executor::threading::thread_main_loop (2,459 samples, 37.78%)</title><rect x="41.5578%" y="981" width="37.7785%" height="15" fill="rgb(219,185,31)"/><text x="41.8078%" y="991.50">async_global_executor::threading::thread_main_loop</text></g><g><title>std::panic::catch_unwind (2,458 samples, 37.76%)</title><rect x="41.5732%" y="965" width="37.7631%" height="15" fill="rgb(214,4,43)"/><text x="41.8232%" y="975.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (2,458 samples, 37.76%)</title><rect x="41.5732%" y="949" width="37.7631%" height="15" fill="rgb(235,227,40)"/><text x="41.8232%" y="959.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (2,458 samples, 37.76%)</title><rect x="41.5732%" y="933" width="37.7631%" height="15" fill="rgb(230,88,30)"/><text x="41.8232%" y="943.50">std::panicking::try::do_call</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}} (2,458 samples, 37.76%)</title><rect x="41.5732%" y="917" width="37.7631%" height="15" fill="rgb(216,217,1)"/><text x="41.8232%" y="927.50">async_global_executor::threading::thread_main_loop::{{closure}}</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,458 samples, 37.76%)</title><rect x="41.5732%" y="901" width="37.7631%" height="15" fill="rgb(248,139,50)"/><text x="41.8232%" y="911.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,458 samples, 37.76%)</title><rect x="41.5732%" y="885" width="37.7631%" height="15" fill="rgb(233,1,21)"/><text x="41.8232%" y="895.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}} (2,458 samples, 37.76%)</title><rect x="41.5732%" y="869" width="37.7631%" height="15" fill="rgb(215,183,12)"/><text x="41.8232%" y="879.50">async_global_executor::threading::thread_main_loop::{{closure}..</text></g><g><title>async_global_executor::reactor::block_on (2,458 samples, 37.76%)</title><rect x="41.5732%" y="853" width="37.7631%" height="15" fill="rgb(229,104,42)"/><text x="41.8232%" y="863.50">async_global_executor::reactor::block_on</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (2,458 samples, 37.76%)</title><rect x="41.5732%" y="837" width="37.7631%" height="15" fill="rgb(243,34,48)"/><text x="41.8232%" y="847.50">async_global_executor::reactor::block_on::{{closure}}</text></g><g><title>async_io::driver::block_on (2,458 samples, 37.76%)</title><rect x="41.5732%" y="821" width="37.7631%" height="15" fill="rgb(239,11,44)"/><text x="41.8232%" y="831.50">async_io::driver::block_on</text></g><g><title>parking::Parker::park_timeout (3 samples, 0.05%)</title><rect x="79.2902%" y="805" width="0.0461%" height="15" fill="rgb(231,98,35)"/><text x="79.5402%" y="815.50"></text></g><g><title>parking::Inner::park (1 samples, 0.02%)</title><rect x="79.3209%" y="789" width="0.0154%" height="15" fill="rgb(233,28,25)"/><text x="79.5709%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.02%)</title><rect x="79.3209%" y="773" width="0.0154%" height="15" fill="rgb(234,123,11)"/><text x="79.5709%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.02%)</title><rect x="79.3209%" y="757" width="0.0154%" height="15" fill="rgb(220,69,3)"/><text x="79.5709%" y="767.50"></text></g><g><title>clone (2,467 samples, 37.90%)</title><rect x="41.4810%" y="1205" width="37.9014%" height="15" fill="rgb(214,64,36)"/><text x="41.7310%" y="1215.50">clone</text></g><g><title>start_thread (2,462 samples, 37.82%)</title><rect x="41.5578%" y="1189" width="37.8246%" height="15" fill="rgb(211,138,32)"/><text x="41.8078%" y="1199.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (2,462 samples, 37.82%)</title><rect x="41.5578%" y="1173" width="37.8246%" height="15" fill="rgb(213,118,47)"/><text x="41.8078%" y="1183.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2,462 samples, 37.82%)</title><rect x="41.5578%" y="1157" width="37.8246%" height="15" fill="rgb(243,124,49)"/><text x="41.8078%" y="1167.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2,462 samples, 37.82%)</title><rect x="41.5578%" y="1141" width="37.8246%" height="15" fill="rgb(221,30,28)"/><text x="41.8078%" y="1151.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (2,462 samples, 37.82%)</title><rect x="41.5578%" y="1125" width="37.8246%" height="15" fill="rgb(246,37,13)"/><text x="41.8078%" y="1135.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (2,462 samples, 37.82%)</title><rect x="41.5578%" y="1109" width="37.8246%" height="15" fill="rgb(249,66,14)"/><text x="41.8078%" y="1119.50">std::thread::Builder::spawn_unchecked::{{closure}}</text></g><g><title>std::sys::unix::thread::guard::current (3 samples, 0.05%)</title><rect x="79.3363%" y="1093" width="0.0461%" height="15" fill="rgb(213,166,5)"/><text x="79.5863%" y="1103.50"></text></g><g><title>pthread_getattr_np (3 samples, 0.05%)</title><rect x="79.3363%" y="1077" width="0.0461%" height="15" fill="rgb(221,66,24)"/><text x="79.5863%" y="1087.50"></text></g><g><title>__libc_malloc (2 samples, 0.03%)</title><rect x="79.3517%" y="1061" width="0.0307%" height="15" fill="rgb(210,132,17)"/><text x="79.6017%" y="1071.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="79.3517%" y="1045" width="0.0307%" height="15" fill="rgb(243,202,5)"/><text x="79.6017%" y="1055.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="79.3517%" y="1029" width="0.0307%" height="15" fill="rgb(233,70,48)"/><text x="79.6017%" y="1039.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="79.3670%" y="1013" width="0.0154%" height="15" fill="rgb(238,41,26)"/><text x="79.6170%" y="1023.50"></text></g><g><title>__munmap (1 samples, 0.02%)</title><rect x="79.3670%" y="997" width="0.0154%" height="15" fill="rgb(241,19,31)"/><text x="79.6170%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="79.3670%" y="981" width="0.0154%" height="15" fill="rgb(214,76,10)"/><text x="79.6170%" y="991.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="79.3670%" y="965" width="0.0154%" height="15" fill="rgb(254,202,22)"/><text x="79.6170%" y="975.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="79.3670%" y="949" width="0.0154%" height="15" fill="rgb(214,72,24)"/><text x="79.6170%" y="959.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="79.3670%" y="933" width="0.0154%" height="15" fill="rgb(221,92,46)"/><text x="79.6170%" y="943.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="79.3670%" y="917" width="0.0154%" height="15" fill="rgb(246,13,50)"/><text x="79.6170%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::AsyncParExpressionEvaluator&lt;rho_runtime::storage::coordinator::AsyncStore&gt;&gt;::evaluate_nested_expressions::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="79.3824%" y="1205" width="0.0154%" height="15" fill="rgb(240,165,38)"/><text x="79.6324%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (1 samples, 0.02%)</title><rect x="79.3978%" y="1205" width="0.0154%" height="15" fill="rgb(241,24,51)"/><text x="79.6478%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::GUnforgeable&gt;&gt; (1 samples, 0.02%)</title><rect x="79.3978%" y="1189" width="0.0154%" height="15" fill="rgb(227,51,44)"/><text x="79.6478%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="79.3978%" y="1173" width="0.0154%" height="15" fill="rgb(231,121,3)"/><text x="79.6478%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::GUnforgeable]&gt; (1 samples, 0.02%)</title><rect x="79.3978%" y="1157" width="0.0154%" height="15" fill="rgb(245,3,41)"/><text x="79.6478%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::GUnforgeable&gt; (1 samples, 0.02%)</title><rect x="79.3978%" y="1141" width="0.0154%" height="15" fill="rgb(214,13,26)"/><text x="79.6478%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::g_unforgeable::UnfInstance&gt;&gt; (1 samples, 0.02%)</title><rect x="79.3978%" y="1125" width="0.0154%" height="15" fill="rgb(252,75,11)"/><text x="79.6478%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::g_unforgeable::UnfInstance&gt; (1 samples, 0.02%)</title><rect x="79.3978%" y="1109" width="0.0154%" height="15" fill="rgb(218,226,17)"/><text x="79.6478%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::GPrivate&gt; (1 samples, 0.02%)</title><rect x="79.3978%" y="1093" width="0.0154%" height="15" fill="rgb(248,89,38)"/><text x="79.6478%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (1 samples, 0.02%)</title><rect x="79.3978%" y="1077" width="0.0154%" height="15" fill="rgb(237,73,46)"/><text x="79.6478%" y="1087.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="79.3978%" y="1061" width="0.0154%" height="15" fill="rgb(242,78,33)"/><text x="79.6478%" y="1071.50"></text></g><g><title>jemallocator::layout_to_flags (1 samples, 0.02%)</title><rect x="79.4131%" y="1205" width="0.0154%" height="15" fill="rgb(235,60,3)"/><text x="79.6631%" y="1215.50"></text></g><g><title>log::MAX_LOG_LEVEL_FILTER (1 samples, 0.02%)</title><rect x="79.4285%" y="1205" width="0.0154%" height="15" fill="rgb(216,172,19)"/><text x="79.6785%" y="1215.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="79.4285%" y="1189" width="0.0154%" height="15" fill="rgb(227,6,42)"/><text x="79.6785%" y="1199.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (1 samples, 0.02%)</title><rect x="79.4285%" y="1173" width="0.0154%" height="15" fill="rgb(223,207,42)"/><text x="79.6785%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="79.4285%" y="1157" width="0.0154%" height="15" fill="rgb(246,138,30)"/><text x="79.6785%" y="1167.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (1 samples, 0.02%)</title><rect x="79.4285%" y="1141" width="0.0154%" height="15" fill="rgb(251,199,47)"/><text x="79.6785%" y="1151.50"></text></g><g><title>async-std/runti (5,171 samples, 79.44%)</title><rect x="0.0154%" y="1221" width="79.4438%" height="15" fill="rgb(228,218,44)"/><text x="0.2654%" y="1231.50">async-std/runti</text></g><g><title>parking::Parker::park (1 samples, 0.02%)</title><rect x="79.4438%" y="1205" width="0.0154%" height="15" fill="rgb(220,68,6)"/><text x="79.6938%" y="1215.50"></text></g><g><title>perf (5 samples, 0.08%)</title><rect x="79.4592%" y="1221" width="0.0768%" height="15" fill="rgb(240,60,26)"/><text x="79.7092%" y="1231.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="79.4592%" y="1205" width="0.0768%" height="15" fill="rgb(211,200,19)"/><text x="79.7092%" y="1215.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="79.4592%" y="1189" width="0.0768%" height="15" fill="rgb(242,145,30)"/><text x="79.7092%" y="1199.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="79.4592%" y="1173" width="0.0768%" height="15" fill="rgb(225,64,13)"/><text x="79.7092%" y="1183.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="79.4592%" y="1157" width="0.0768%" height="15" fill="rgb(218,103,35)"/><text x="79.7092%" y="1167.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="79.4592%" y="1141" width="0.0768%" height="15" fill="rgb(216,93,46)"/><text x="79.7092%" y="1151.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="79.4592%" y="1125" width="0.0768%" height="15" fill="rgb(225,159,27)"/><text x="79.7092%" y="1135.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="79.4592%" y="1109" width="0.0768%" height="15" fill="rgb(225,204,11)"/><text x="79.7092%" y="1119.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="79.4592%" y="1093" width="0.0768%" height="15" fill="rgb(205,56,4)"/><text x="79.7092%" y="1103.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="79.4592%" y="1077" width="0.0768%" height="15" fill="rgb(206,6,35)"/><text x="79.7092%" y="1087.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="79.4592%" y="1061" width="0.0768%" height="15" fill="rgb(247,73,52)"/><text x="79.7092%" y="1071.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="79.4592%" y="1045" width="0.0768%" height="15" fill="rgb(246,97,4)"/><text x="79.7092%" y="1055.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="79.4592%" y="1029" width="0.0768%" height="15" fill="rgb(212,37,15)"/><text x="79.7092%" y="1039.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="79.4592%" y="1013" width="0.0768%" height="15" fill="rgb(208,130,40)"/><text x="79.7092%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.03%)</title><rect x="79.5360%" y="1189" width="0.0307%" height="15" fill="rgb(236,55,29)"/><text x="79.7860%" y="1199.50"></text></g><g><title>rho_runtime::run::{{closure}} (1 samples, 0.02%)</title><rect x="79.5514%" y="1173" width="0.0154%" height="15" fill="rgb(209,156,45)"/><text x="79.8014%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="79.5514%" y="1157" width="0.0154%" height="15" fill="rgb(249,107,4)"/><text x="79.8014%" y="1167.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::run::{{closure}} (1 samples, 0.02%)</title><rect x="79.5514%" y="1141" width="0.0154%" height="15" fill="rgb(227,7,13)"/><text x="79.8014%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::notify::Notified&gt; (1 samples, 0.02%)</title><rect x="79.5514%" y="1125" width="0.0154%" height="15" fill="rgb(250,129,14)"/><text x="79.8014%" y="1135.50"></text></g><g><title>&lt;tokio::sync::notify::Notified as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="79.5668%" y="1189" width="0.0154%" height="15" fill="rgb(229,92,13)"/><text x="79.8168%" y="1199.50"></text></g><g><title>async_io::reactor::Reactor::try_lock (1 samples, 0.02%)</title><rect x="79.5821%" y="1189" width="0.0154%" height="15" fill="rgb(245,98,39)"/><text x="79.8321%" y="1199.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (1 samples, 0.02%)</title><rect x="79.5821%" y="1173" width="0.0154%" height="15" fill="rgb(234,135,48)"/><text x="79.8321%" y="1183.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (1 samples, 0.02%)</title><rect x="79.5821%" y="1157" width="0.0154%" height="15" fill="rgb(230,98,28)"/><text x="79.8321%" y="1167.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (1 samples, 0.02%)</title><rect x="79.5821%" y="1141" width="0.0154%" height="15" fill="rgb(223,121,0)"/><text x="79.8321%" y="1151.50"></text></g><g><title>[[stack]] (5 samples, 0.08%)</title><rect x="79.5360%" y="1205" width="0.0768%" height="15" fill="rgb(234,173,33)"/><text x="79.7860%" y="1215.50"></text></g><g><title>parking::Parker::park (1 samples, 0.02%)</title><rect x="79.5975%" y="1189" width="0.0154%" height="15" fill="rgb(245,47,8)"/><text x="79.8475%" y="1199.50"></text></g><g><title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="79.6128%" y="1189" width="0.0154%" height="15" fill="rgb(205,17,20)"/><text x="79.8628%" y="1199.50"></text></g><g><title>async_std::task::builder::Builder::spawn (1 samples, 0.02%)</title><rect x="79.6282%" y="1189" width="0.0154%" height="15" fill="rgb(232,151,16)"/><text x="79.8782%" y="1199.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw (1 samples, 0.02%)</title><rect x="79.6436%" y="1189" width="0.0154%" height="15" fill="rgb(208,30,32)"/><text x="79.8936%" y="1199.50"></text></g><g><title>[anon] (4 samples, 0.06%)</title><rect x="79.6128%" y="1205" width="0.0615%" height="15" fill="rgb(254,26,3)"/><text x="79.8628%" y="1215.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (1 samples, 0.02%)</title><rect x="79.6589%" y="1189" width="0.0154%" height="15" fill="rgb(240,177,30)"/><text x="79.9089%" y="1199.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (1 samples, 0.02%)</title><rect x="79.6589%" y="1173" width="0.0154%" height="15" fill="rgb(248,76,44)"/><text x="79.9089%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.02%)</title><rect x="79.6589%" y="1157" width="0.0154%" height="15" fill="rgb(241,186,54)"/><text x="79.9089%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.02%)</title><rect x="79.6589%" y="1141" width="0.0154%" height="15" fill="rgb(249,171,29)"/><text x="79.9089%" y="1151.50"></text></g><g><title>async_global_executor::executor::spawn (3 samples, 0.05%)</title><rect x="79.6743%" y="1189" width="0.0461%" height="15" fill="rgb(237,151,44)"/><text x="79.9243%" y="1199.50"></text></g><g><title>async_executor::Executor::spawn (3 samples, 0.05%)</title><rect x="79.6743%" y="1173" width="0.0461%" height="15" fill="rgb(228,174,30)"/><text x="79.9243%" y="1183.50"></text></g><g><title>[rho_runtime] (4 samples, 0.06%)</title><rect x="79.6743%" y="1205" width="0.0615%" height="15" fill="rgb(252,14,37)"/><text x="79.9243%" y="1215.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::pop (1 samples, 0.02%)</title><rect x="79.7204%" y="1189" width="0.0154%" height="15" fill="rgb(207,111,40)"/><text x="79.9704%" y="1199.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="80.0277%" y="1077" width="0.0154%" height="15" fill="rgb(248,171,54)"/><text x="80.2777%" y="1087.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.02%)</title><rect x="80.0430%" y="1045" width="0.0154%" height="15" fill="rgb(211,127,2)"/><text x="80.2930%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.02%)</title><rect x="80.0430%" y="1029" width="0.0154%" height="15" fill="rgb(236,87,47)"/><text x="80.2930%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.02%)</title><rect x="80.0430%" y="1013" width="0.0154%" height="15" fill="rgb(223,190,45)"/><text x="80.2930%" y="1023.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.03%)</title><rect x="80.0584%" y="1029" width="0.0307%" height="15" fill="rgb(215,5,16)"/><text x="80.3084%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.03%)</title><rect x="80.0584%" y="1013" width="0.0307%" height="15" fill="rgb(252,82,33)"/><text x="80.3084%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.03%)</title><rect x="80.0584%" y="997" width="0.0307%" height="15" fill="rgb(247,213,44)"/><text x="80.3084%" y="1007.50"></text></g><g><title>async_executor::Executor::schedule (3 samples, 0.05%)</title><rect x="80.0584%" y="1045" width="0.0461%" height="15" fill="rgb(205,196,44)"/><text x="80.3084%" y="1055.50"></text></g><g><title>async_executor::Executor::state (1 samples, 0.02%)</title><rect x="80.0891%" y="1029" width="0.0154%" height="15" fill="rgb(237,96,54)"/><text x="80.3391%" y="1039.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.02%)</title><rect x="80.0891%" y="1013" width="0.0154%" height="15" fill="rgb(230,113,34)"/><text x="80.3391%" y="1023.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.02%)</title><rect x="80.0891%" y="997" width="0.0154%" height="15" fill="rgb(221,224,12)"/><text x="80.3391%" y="1007.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (1 samples, 0.02%)</title><rect x="80.0891%" y="981" width="0.0154%" height="15" fill="rgb(219,112,44)"/><text x="80.3391%" y="991.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (1 samples, 0.02%)</title><rect x="80.0891%" y="965" width="0.0154%" height="15" fill="rgb(210,31,13)"/><text x="80.3391%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (42 samples, 0.65%)</title><rect x="80.1045%" y="1045" width="0.6453%" height="15" fill="rgb(230,25,16)"/><text x="80.3545%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (41 samples, 0.63%)</title><rect x="80.1198%" y="1029" width="0.6299%" height="15" fill="rgb(246,108,53)"/><text x="80.3698%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_add (41 samples, 0.63%)</title><rect x="80.1198%" y="1013" width="0.6299%" height="15" fill="rgb(241,172,50)"/><text x="80.3698%" y="1023.50"></text></g><g><title>async_executor::Sleepers::notify (1 samples, 0.02%)</title><rect x="80.7651%" y="997" width="0.0154%" height="15" fill="rgb(235,141,10)"/><text x="81.0151%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (4 samples, 0.06%)</title><rect x="80.7805%" y="997" width="0.0615%" height="15" fill="rgb(220,174,43)"/><text x="81.0305%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.06%)</title><rect x="80.7805%" y="981" width="0.0615%" height="15" fill="rgb(215,181,40)"/><text x="81.0305%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (4 samples, 0.06%)</title><rect x="80.7805%" y="965" width="0.0615%" height="15" fill="rgb(230,97,2)"/><text x="81.0305%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (4 samples, 0.06%)</title><rect x="80.7805%" y="949" width="0.0615%" height="15" fill="rgb(211,25,27)"/><text x="81.0305%" y="959.50"></text></g><g><title>__GI___pthread_mutex_unlock (4 samples, 0.06%)</title><rect x="80.7805%" y="933" width="0.0615%" height="15" fill="rgb(230,87,26)"/><text x="81.0305%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (2 samples, 0.03%)</title><rect x="80.8419%" y="997" width="0.0307%" height="15" fill="rgb(227,160,17)"/><text x="81.0919%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.03%)</title><rect x="80.8419%" y="981" width="0.0307%" height="15" fill="rgb(244,85,34)"/><text x="81.0919%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (1 samples, 0.02%)</title><rect x="80.9187%" y="949" width="0.0154%" height="15" fill="rgb(207,70,0)"/><text x="81.1687%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="80.9187%" y="933" width="0.0154%" height="15" fill="rgb(223,129,7)"/><text x="81.1687%" y="943.50"></text></g><g><title>__pthread_cond_signal (408 samples, 6.27%)</title><rect x="80.9802%" y="917" width="6.2682%" height="15" fill="rgb(246,105,7)"/><text x="81.2302%" y="927.50">__pthrea..</text></g><g><title>[unknown] (399 samples, 6.13%)</title><rect x="81.1185%" y="901" width="6.1300%" height="15" fill="rgb(215,154,42)"/><text x="81.3685%" y="911.50">[unknown]</text></g><g><title>[unknown] (393 samples, 6.04%)</title><rect x="81.2106%" y="885" width="6.0378%" height="15" fill="rgb(220,215,30)"/><text x="81.4606%" y="895.50">[unknown]</text></g><g><title>[unknown] (392 samples, 6.02%)</title><rect x="81.2260%" y="869" width="6.0224%" height="15" fill="rgb(228,81,51)"/><text x="81.4760%" y="879.50">[unknown]</text></g><g><title>[unknown] (392 samples, 6.02%)</title><rect x="81.2260%" y="853" width="6.0224%" height="15" fill="rgb(247,71,54)"/><text x="81.4760%" y="863.50">[unknown]</text></g><g><title>[unknown] (388 samples, 5.96%)</title><rect x="81.2874%" y="837" width="5.9610%" height="15" fill="rgb(234,176,34)"/><text x="81.5374%" y="847.50">[unknown]</text></g><g><title>[unknown] (339 samples, 5.21%)</title><rect x="82.0403%" y="821" width="5.2082%" height="15" fill="rgb(241,103,54)"/><text x="82.2903%" y="831.50">[unkno..</text></g><g><title>[unknown] (305 samples, 4.69%)</title><rect x="82.5626%" y="805" width="4.6858%" height="15" fill="rgb(228,22,34)"/><text x="82.8126%" y="815.50">[unkn..</text></g><g><title>[unknown] (268 samples, 4.12%)</title><rect x="83.1310%" y="789" width="4.1174%" height="15" fill="rgb(241,179,48)"/><text x="83.3810%" y="799.50">[unk..</text></g><g><title>[unknown] (188 samples, 2.89%)</title><rect x="84.3601%" y="773" width="2.8883%" height="15" fill="rgb(235,167,37)"/><text x="84.6101%" y="783.50">[u..</text></g><g><title>[unknown] (145 samples, 2.23%)</title><rect x="85.0207%" y="757" width="2.2277%" height="15" fill="rgb(213,109,30)"/><text x="85.2707%" y="767.50">[..</text></g><g><title>[unknown] (53 samples, 0.81%)</title><rect x="86.4342%" y="741" width="0.8143%" height="15" fill="rgb(222,172,16)"/><text x="86.6842%" y="751.50"></text></g><g><title>[unknown] (17 samples, 0.26%)</title><rect x="86.9872%" y="725" width="0.2612%" height="15" fill="rgb(233,192,5)"/><text x="87.2372%" y="735.50"></text></g><g><title>[unknown] (4 samples, 0.06%)</title><rect x="87.1870%" y="709" width="0.0615%" height="15" fill="rgb(247,189,41)"/><text x="87.4370%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="87.2331%" y="693" width="0.0154%" height="15" fill="rgb(218,134,47)"/><text x="87.4831%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="87.2331%" y="677" width="0.0154%" height="15" fill="rgb(216,29,3)"/><text x="87.4831%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="87.2331%" y="661" width="0.0154%" height="15" fill="rgb(246,140,12)"/><text x="87.4831%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="87.2331%" y="645" width="0.0154%" height="15" fill="rgb(230,136,11)"/><text x="87.4831%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (5 samples, 0.08%)</title><rect x="87.2484%" y="917" width="0.0768%" height="15" fill="rgb(247,22,47)"/><text x="87.4984%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_swap (5 samples, 0.08%)</title><rect x="87.2484%" y="901" width="0.0768%" height="15" fill="rgb(218,84,22)"/><text x="87.4984%" y="911.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (1 samples, 0.02%)</title><rect x="87.3252%" y="917" width="0.0154%" height="15" fill="rgb(216,87,39)"/><text x="87.5752%" y="927.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (1 samples, 0.02%)</title><rect x="87.3252%" y="901" width="0.0154%" height="15" fill="rgb(221,178,8)"/><text x="87.5752%" y="911.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (1 samples, 0.02%)</title><rect x="87.3252%" y="885" width="0.0154%" height="15" fill="rgb(230,42,11)"/><text x="87.5752%" y="895.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (429 samples, 6.59%)</title><rect x="80.8880%" y="965" width="6.5909%" height="15" fill="rgb(237,229,4)"/><text x="81.1380%" y="975.50">async_io:..</text></g><g><title>parking::Unparker::unpark (426 samples, 6.54%)</title><rect x="80.9341%" y="949" width="6.5448%" height="15" fill="rgb(222,31,33)"/><text x="81.1841%" y="959.50">parking::..</text></g><g><title>parking::Inner::unpark (423 samples, 6.50%)</title><rect x="80.9802%" y="933" width="6.4987%" height="15" fill="rgb(210,17,39)"/><text x="81.2302%" y="943.50">parking::..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (9 samples, 0.14%)</title><rect x="87.3406%" y="917" width="0.1383%" height="15" fill="rgb(244,93,20)"/><text x="87.5906%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (9 samples, 0.14%)</title><rect x="87.3406%" y="901" width="0.1383%" height="15" fill="rgb(210,40,47)"/><text x="87.5906%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (9 samples, 0.14%)</title><rect x="87.3406%" y="885" width="0.1383%" height="15" fill="rgb(239,211,47)"/><text x="87.5906%" y="895.50"></text></g><g><title>__GI___pthread_mutex_lock (9 samples, 0.14%)</title><rect x="87.3406%" y="869" width="0.1383%" height="15" fill="rgb(251,223,49)"/><text x="87.5906%" y="879.50"></text></g><g><title>core::task::wake::Waker::wake (438 samples, 6.73%)</title><rect x="80.8726%" y="997" width="6.7291%" height="15" fill="rgb(221,149,5)"/><text x="81.1226%" y="1007.50">core::tas..</text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (438 samples, 6.73%)</title><rect x="80.8726%" y="981" width="6.7291%" height="15" fill="rgb(219,224,51)"/><text x="81.1226%" y="991.50">waker_fn:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_io::driver::block_on&lt;(),futures_lite::future::Or&lt;core::future::from_generator::GenFuture&lt;async_executor::LocalExecutor::run&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::threading::thread_main_loop::{{closure}}::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;,core::future::from_generator::GenFuture&lt;async_executor::Executor::run&lt;(),futures_lite::future::Pending&lt;()&gt;&gt;::{{closure}}&gt;&gt;&gt;::{{closure}}&gt;&gt; (8 samples, 0.12%)</title><rect x="87.4789%" y="965" width="0.1229%" height="15" fill="rgb(223,7,8)"/><text x="87.7289%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.12%)</title><rect x="87.4789%" y="949" width="0.1229%" height="15" fill="rgb(241,217,22)"/><text x="87.7289%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (8 samples, 0.12%)</title><rect x="87.4789%" y="933" width="0.1229%" height="15" fill="rgb(248,209,0)"/><text x="87.7289%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_sub (8 samples, 0.12%)</title><rect x="87.4789%" y="917" width="0.1229%" height="15" fill="rgb(217,205,4)"/><text x="87.7289%" y="927.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (448 samples, 6.88%)</title><rect x="80.7497%" y="1029" width="6.8828%" height="15" fill="rgb(228,124,39)"/><text x="80.9997%" y="1039.50">async_exe..</text></g><g><title>async_executor::State::notify (448 samples, 6.88%)</title><rect x="80.7497%" y="1013" width="6.8828%" height="15" fill="rgb(250,116,42)"/><text x="80.9997%" y="1023.50">async_exe..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.03%)</title><rect x="87.6018%" y="997" width="0.0307%" height="15" fill="rgb(223,202,9)"/><text x="87.8518%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (2 samples, 0.03%)</title><rect x="87.6018%" y="981" width="0.0307%" height="15" fill="rgb(242,222,40)"/><text x="87.8518%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (2 samples, 0.03%)</title><rect x="87.6018%" y="965" width="0.0307%" height="15" fill="rgb(229,99,46)"/><text x="87.8518%" y="975.50"></text></g><g><title>__GI___pthread_mutex_lock (2 samples, 0.03%)</title><rect x="87.6018%" y="949" width="0.0307%" height="15" fill="rgb(225,56,46)"/><text x="87.8518%" y="959.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (8 samples, 0.12%)</title><rect x="87.6325%" y="1029" width="0.1229%" height="15" fill="rgb(227,94,5)"/><text x="87.8825%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (8 samples, 0.12%)</title><rect x="87.6325%" y="1013" width="0.1229%" height="15" fill="rgb(205,112,38)"/><text x="87.8825%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_add (8 samples, 0.12%)</title><rect x="87.6325%" y="997" width="0.1229%" height="15" fill="rgb(231,133,46)"/><text x="87.8825%" y="1007.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (457 samples, 7.02%)</title><rect x="80.7497%" y="1045" width="7.0210%" height="15" fill="rgb(217,16,9)"/><text x="80.9997%" y="1055.50">async_tas..</text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (1 samples, 0.02%)</title><rect x="87.7554%" y="1029" width="0.0154%" height="15" fill="rgb(249,173,9)"/><text x="88.0054%" y="1039.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="87.7554%" y="1013" width="0.0154%" height="15" fill="rgb(205,163,53)"/><text x="88.0054%" y="1023.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (1 samples, 0.02%)</title><rect x="87.7554%" y="997" width="0.0154%" height="15" fill="rgb(217,54,41)"/><text x="88.0054%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.02%)</title><rect x="87.7554%" y="981" width="0.0154%" height="15" fill="rgb(228,216,12)"/><text x="88.0054%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.02%)</title><rect x="87.7554%" y="965" width="0.0154%" height="15" fill="rgb(244,228,15)"/><text x="88.0054%" y="975.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.03%)</title><rect x="87.7708%" y="1029" width="0.0307%" height="15" fill="rgb(221,176,53)"/><text x="88.0208%" y="1039.50"></text></g><g><title>arena_bin_malloc_hard (3 samples, 0.05%)</title><rect x="87.8015%" y="853" width="0.0461%" height="15" fill="rgb(205,94,34)"/><text x="88.0515%" y="863.50"></text></g><g><title>arena_bin_nonfull_slab_get (3 samples, 0.05%)</title><rect x="87.8015%" y="837" width="0.0461%" height="15" fill="rgb(213,110,48)"/><text x="88.0515%" y="847.50"></text></g><g><title>arena_bin_slabs_nonfull_tryget (3 samples, 0.05%)</title><rect x="87.8015%" y="821" width="0.0461%" height="15" fill="rgb(236,142,28)"/><text x="88.0515%" y="831.50"></text></g><g><title>_rjem_je_extent_heap_remove_first (3 samples, 0.05%)</title><rect x="87.8015%" y="805" width="0.0461%" height="15" fill="rgb(225,135,29)"/><text x="88.0515%" y="815.50"></text></g><g><title>extent_snad_comp (2 samples, 0.03%)</title><rect x="87.8169%" y="789" width="0.0307%" height="15" fill="rgb(252,45,31)"/><text x="88.0669%" y="799.50"></text></g><g><title>extent_sn_comp (2 samples, 0.03%)</title><rect x="87.8169%" y="773" width="0.0307%" height="15" fill="rgb(211,187,50)"/><text x="88.0669%" y="783.50"></text></g><g><title>extent_sn_get (2 samples, 0.03%)</title><rect x="87.8169%" y="757" width="0.0307%" height="15" fill="rgb(229,109,7)"/><text x="88.0669%" y="767.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.06%)</title><rect x="87.8015%" y="1013" width="0.0615%" height="15" fill="rgb(251,131,51)"/><text x="88.0515%" y="1023.50"></text></g><g><title>_rjem_mallocx (4 samples, 0.06%)</title><rect x="87.8015%" y="997" width="0.0615%" height="15" fill="rgb(251,180,35)"/><text x="88.0515%" y="1007.50"></text></g><g><title>imalloc (4 samples, 0.06%)</title><rect x="87.8015%" y="981" width="0.0615%" height="15" fill="rgb(211,46,32)"/><text x="88.0515%" y="991.50"></text></g><g><title>imalloc_body (4 samples, 0.06%)</title><rect x="87.8015%" y="965" width="0.0615%" height="15" fill="rgb(248,123,17)"/><text x="88.0515%" y="975.50"></text></g><g><title>imalloc_no_sample (4 samples, 0.06%)</title><rect x="87.8015%" y="949" width="0.0615%" height="15" fill="rgb(227,141,18)"/><text x="88.0515%" y="959.50"></text></g><g><title>iallocztm (4 samples, 0.06%)</title><rect x="87.8015%" y="933" width="0.0615%" height="15" fill="rgb(216,102,9)"/><text x="88.0515%" y="943.50"></text></g><g><title>arena_malloc (4 samples, 0.06%)</title><rect x="87.8015%" y="917" width="0.0615%" height="15" fill="rgb(253,47,13)"/><text x="88.0515%" y="927.50"></text></g><g><title>tcache_alloc_small (4 samples, 0.06%)</title><rect x="87.8015%" y="901" width="0.0615%" height="15" fill="rgb(226,93,23)"/><text x="88.0515%" y="911.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (4 samples, 0.06%)</title><rect x="87.8015%" y="885" width="0.0615%" height="15" fill="rgb(247,104,17)"/><text x="88.0515%" y="895.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (4 samples, 0.06%)</title><rect x="87.8015%" y="869" width="0.0615%" height="15" fill="rgb(233,203,26)"/><text x="88.0515%" y="879.50"></text></g><g><title>arena_slab_reg_alloc (1 samples, 0.02%)</title><rect x="87.8476%" y="853" width="0.0154%" height="15" fill="rgb(244,98,49)"/><text x="88.0976%" y="863.50"></text></g><g><title>async_task::runnable::spawn_unchecked (7 samples, 0.11%)</title><rect x="87.7708%" y="1045" width="0.1075%" height="15" fill="rgb(235,134,22)"/><text x="88.0208%" y="1055.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::allocate (5 samples, 0.08%)</title><rect x="87.8015%" y="1029" width="0.0768%" height="15" fill="rgb(221,70,32)"/><text x="88.0515%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.02%)</title><rect x="87.8630%" y="1013" width="0.0154%" height="15" fill="rgb(238,15,50)"/><text x="88.1130%" y="1023.50"></text></g><g><title>core::ptr::write (1 samples, 0.02%)</title><rect x="87.8630%" y="997" width="0.0154%" height="15" fill="rgb(215,221,48)"/><text x="88.1130%" y="1007.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="87.8630%" y="981" width="0.0154%" height="15" fill="rgb(236,73,3)"/><text x="88.1130%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.02%)</title><rect x="87.8783%" y="1013" width="0.0154%" height="15" fill="rgb(250,107,11)"/><text x="88.1283%" y="1023.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.02%)</title><rect x="87.8783%" y="997" width="0.0154%" height="15" fill="rgb(242,39,14)"/><text x="88.1283%" y="1007.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="87.8783%" y="981" width="0.0154%" height="15" fill="rgb(248,164,37)"/><text x="88.1283%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;core::task::wake::Waker&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="87.8783%" y="1045" width="0.0307%" height="15" fill="rgb(217,60,12)"/><text x="88.1283%" y="1055.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="87.8783%" y="1029" width="0.0307%" height="15" fill="rgb(240,125,29)"/><text x="88.1283%" y="1039.50"></text></g><g><title>std::sys_common::poison::Flag::done (1 samples, 0.02%)</title><rect x="87.8937%" y="1013" width="0.0154%" height="15" fill="rgb(208,207,28)"/><text x="88.1437%" y="1023.50"></text></g><g><title>async_executor::Executor::spawn (539 samples, 8.28%)</title><rect x="80.0430%" y="1061" width="8.2808%" height="15" fill="rgb(209,159,27)"/><text x="80.2930%" y="1071.50">async_execut..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (27 samples, 0.41%)</title><rect x="87.9090%" y="1045" width="0.4148%" height="15" fill="rgb(251,176,53)"/><text x="88.1590%" y="1055.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (27 samples, 0.41%)</title><rect x="87.9090%" y="1029" width="0.4148%" height="15" fill="rgb(211,85,7)"/><text x="88.1590%" y="1039.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (12 samples, 0.18%)</title><rect x="88.1395%" y="1013" width="0.1844%" height="15" fill="rgb(216,64,54)"/><text x="88.3895%" y="1023.50"></text></g><g><title>__GI___pthread_mutex_lock (12 samples, 0.18%)</title><rect x="88.1395%" y="997" width="0.1844%" height="15" fill="rgb(217,54,24)"/><text x="88.3895%" y="1007.50"></text></g><g><title>async_global_executor::executor::spawn (545 samples, 8.37%)</title><rect x="80.0430%" y="1077" width="8.3730%" height="15" fill="rgb(208,206,53)"/><text x="80.2930%" y="1087.50">async_global..</text></g><g><title>async_global_executor::init::init (6 samples, 0.09%)</title><rect x="88.3239%" y="1061" width="0.0922%" height="15" fill="rgb(251,74,39)"/><text x="88.5739%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (6 samples, 0.09%)</title><rect x="88.3239%" y="1045" width="0.0922%" height="15" fill="rgb(226,47,5)"/><text x="88.5739%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_swap (6 samples, 0.09%)</title><rect x="88.3239%" y="1029" width="0.0922%" height="15" fill="rgb(234,111,33)"/><text x="88.5739%" y="1039.50"></text></g><g><title>async_std::task::task::Task::new (6 samples, 0.09%)</title><rect x="88.4160%" y="1061" width="0.0922%" height="15" fill="rgb(251,14,10)"/><text x="88.6660%" y="1071.50"></text></g><g><title>async_std::task::task_id::TaskId::generate (6 samples, 0.09%)</title><rect x="88.4160%" y="1045" width="0.0922%" height="15" fill="rgb(232,43,0)"/><text x="88.6660%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (6 samples, 0.09%)</title><rect x="88.4160%" y="1029" width="0.0922%" height="15" fill="rgb(222,68,43)"/><text x="88.6660%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_add (6 samples, 0.09%)</title><rect x="88.4160%" y="1013" width="0.0922%" height="15" fill="rgb(217,24,23)"/><text x="88.6660%" y="1023.50"></text></g><g><title>async_std::task::spawn::spawn (554 samples, 8.51%)</title><rect x="80.0123%" y="1109" width="8.5113%" height="15" fill="rgb(229,209,14)"/><text x="80.2623%" y="1119.50">async_std::t..</text></g><g><title>async_std::task::builder::Builder::spawn (554 samples, 8.51%)</title><rect x="80.0123%" y="1093" width="8.5113%" height="15" fill="rgb(250,149,48)"/><text x="80.2623%" y="1103.50">async_std::t..</text></g><g><title>async_std::task::builder::Builder::build (7 samples, 0.11%)</title><rect x="88.4160%" y="1077" width="0.1075%" height="15" fill="rgb(210,120,37)"/><text x="88.6660%" y="1087.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::new (1 samples, 0.02%)</title><rect x="88.5082%" y="1061" width="0.0154%" height="15" fill="rgb(210,21,8)"/><text x="88.7582%" y="1071.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="88.5236%" y="1093" width="0.0154%" height="15" fill="rgb(243,145,7)"/><text x="88.7736%" y="1103.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_strong (1 samples, 0.02%)</title><rect x="88.5236%" y="1077" width="0.0154%" height="15" fill="rgb(238,178,32)"/><text x="88.7736%" y="1087.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.02%)</title><rect x="88.5236%" y="1061" width="0.0154%" height="15" fill="rgb(222,4,10)"/><text x="88.7736%" y="1071.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.02%)</title><rect x="88.5236%" y="1045" width="0.0154%" height="15" fill="rgb(239,7,37)"/><text x="88.7736%" y="1055.50"></text></g><g><title>core::mem::replace (1 samples, 0.02%)</title><rect x="88.5236%" y="1029" width="0.0154%" height="15" fill="rgb(215,31,37)"/><text x="88.7736%" y="1039.50"></text></g><g><title>core::mem::swap (1 samples, 0.02%)</title><rect x="88.5236%" y="1013" width="0.0154%" height="15" fill="rgb(224,83,33)"/><text x="88.7736%" y="1023.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.02%)</title><rect x="88.5236%" y="997" width="0.0154%" height="15" fill="rgb(239,55,3)"/><text x="88.7736%" y="1007.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="88.5236%" y="981" width="0.0154%" height="15" fill="rgb(247,92,11)"/><text x="88.7736%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;rho_runtime::storage::coordinator::TransitPort&gt;&gt;&gt; (3 samples, 0.05%)</title><rect x="88.5236%" y="1109" width="0.0461%" height="15" fill="rgb(239,200,7)"/><text x="88.7736%" y="1119.50"></text></g><g><title>async_std::task::builder::Builder::spawn (2 samples, 0.03%)</title><rect x="88.5389%" y="1093" width="0.0307%" height="15" fill="rgb(227,115,8)"/><text x="88.7889%" y="1103.50"></text></g><g><title>async_global_executor::executor::spawn (2 samples, 0.03%)</title><rect x="88.5389%" y="1077" width="0.0307%" height="15" fill="rgb(215,189,27)"/><text x="88.7889%" y="1087.50"></text></g><g><title>async_executor::Executor::spawn (2 samples, 0.03%)</title><rect x="88.5389%" y="1061" width="0.0307%" height="15" fill="rgb(251,216,39)"/><text x="88.7889%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;core::task::wake::Waker&gt;&gt;&gt; (2 samples, 0.03%)</title><rect x="88.5389%" y="1045" width="0.0307%" height="15" fill="rgb(207,29,47)"/><text x="88.7889%" y="1055.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.03%)</title><rect x="88.5389%" y="1029" width="0.0307%" height="15" fill="rgb(210,71,34)"/><text x="88.7889%" y="1039.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (2 samples, 0.03%)</title><rect x="88.5389%" y="1013" width="0.0307%" height="15" fill="rgb(253,217,51)"/><text x="88.7889%" y="1023.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (2 samples, 0.03%)</title><rect x="88.5389%" y="997" width="0.0307%" height="15" fill="rgb(222,117,46)"/><text x="88.7889%" y="1007.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (2 samples, 0.03%)</title><rect x="88.5389%" y="981" width="0.0307%" height="15" fill="rgb(226,132,6)"/><text x="88.7889%" y="991.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (2 samples, 0.03%)</title><rect x="88.5389%" y="965" width="0.0307%" height="15" fill="rgb(254,145,51)"/><text x="88.7889%" y="975.50"></text></g><g><title>async_executor::State::notify (2 samples, 0.03%)</title><rect x="88.5389%" y="949" width="0.0307%" height="15" fill="rgb(231,199,27)"/><text x="88.7889%" y="959.50"></text></g><g><title>core::task::wake::Waker::wake (2 samples, 0.03%)</title><rect x="88.5389%" y="933" width="0.0307%" height="15" fill="rgb(245,158,14)"/><text x="88.7889%" y="943.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (2 samples, 0.03%)</title><rect x="88.5389%" y="917" width="0.0307%" height="15" fill="rgb(240,113,14)"/><text x="88.7889%" y="927.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (2 samples, 0.03%)</title><rect x="88.5389%" y="901" width="0.0307%" height="15" fill="rgb(210,20,13)"/><text x="88.7889%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.03%)</title><rect x="88.5389%" y="885" width="0.0307%" height="15" fill="rgb(241,144,13)"/><text x="88.7889%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.03%)</title><rect x="88.5389%" y="869" width="0.0307%" height="15" fill="rgb(235,43,34)"/><text x="88.7889%" y="879.50"></text></g><g><title>parking::Unparker::unpark (2 samples, 0.03%)</title><rect x="88.5389%" y="853" width="0.0307%" height="15" fill="rgb(208,36,20)"/><text x="88.7889%" y="863.50"></text></g><g><title>parking::Inner::unpark (2 samples, 0.03%)</title><rect x="88.5389%" y="837" width="0.0307%" height="15" fill="rgb(239,204,10)"/><text x="88.7889%" y="847.50"></text></g><g><title>__pthread_cond_signal (2 samples, 0.03%)</title><rect x="88.5389%" y="821" width="0.0307%" height="15" fill="rgb(217,84,43)"/><text x="88.7889%" y="831.50"></text></g><g><title>[unknown] (2 samples, 0.03%)</title><rect x="88.5389%" y="805" width="0.0307%" height="15" fill="rgb(241,170,50)"/><text x="88.7889%" y="815.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.02%)</title><rect x="88.5697%" y="1061" width="0.0154%" height="15" fill="rgb(226,205,29)"/><text x="88.8197%" y="1071.50"></text></g><g><title>&lt;blake3::Hash as core::hash::Hash&gt;::hash (1 samples, 0.02%)</title><rect x="88.5697%" y="1045" width="0.0154%" height="15" fill="rgb(233,113,1)"/><text x="88.8197%" y="1055.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (1 samples, 0.02%)</title><rect x="88.5697%" y="1029" width="0.0154%" height="15" fill="rgb(253,98,13)"/><text x="88.8197%" y="1039.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.02%)</title><rect x="88.5697%" y="1013" width="0.0154%" height="15" fill="rgb(211,115,12)"/><text x="88.8197%" y="1023.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (1 samples, 0.02%)</title><rect x="88.5697%" y="997" width="0.0154%" height="15" fill="rgb(208,12,16)"/><text x="88.8197%" y="1007.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write (1 samples, 0.02%)</title><rect x="88.5697%" y="981" width="0.0154%" height="15" fill="rgb(237,193,54)"/><text x="88.8197%" y="991.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (1 samples, 0.02%)</title><rect x="88.5697%" y="965" width="0.0154%" height="15" fill="rgb(243,22,42)"/><text x="88.8197%" y="975.50"></text></g><g><title>&lt;usize as core::ops::bit::BitXor&gt;::bitxor (1 samples, 0.02%)</title><rect x="88.5697%" y="949" width="0.0154%" height="15" fill="rgb(233,151,36)"/><text x="88.8197%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::iter_hash (1 samples, 0.02%)</title><rect x="88.5850%" y="1045" width="0.0154%" height="15" fill="rgb(237,57,45)"/><text x="88.8350%" y="1055.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="88.5850%" y="1029" width="0.0154%" height="15" fill="rgb(221,88,17)"/><text x="88.8350%" y="1039.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.02%)</title><rect x="88.5850%" y="1013" width="0.0154%" height="15" fill="rgb(230,79,15)"/><text x="88.8350%" y="1023.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.02%)</title><rect x="88.5850%" y="997" width="0.0154%" height="15" fill="rgb(213,57,13)"/><text x="88.8350%" y="1007.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.02%)</title><rect x="88.5850%" y="981" width="0.0154%" height="15" fill="rgb(222,116,39)"/><text x="88.8350%" y="991.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::get_or_create_transit_port (6 samples, 0.09%)</title><rect x="88.5697%" y="1109" width="0.0922%" height="15" fill="rgb(245,107,2)"/><text x="88.8197%" y="1119.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (6 samples, 0.09%)</title><rect x="88.5697%" y="1093" width="0.0922%" height="15" fill="rgb(238,1,10)"/><text x="88.8197%" y="1103.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry (6 samples, 0.09%)</title><rect x="88.5697%" y="1077" width="0.0922%" height="15" fill="rgb(249,4,48)"/><text x="88.8197%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (5 samples, 0.08%)</title><rect x="88.5850%" y="1061" width="0.0768%" height="15" fill="rgb(223,151,18)"/><text x="88.8350%" y="1071.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry::{{closure}} (4 samples, 0.06%)</title><rect x="88.6004%" y="1045" width="0.0615%" height="15" fill="rgb(227,65,43)"/><text x="88.8504%" y="1055.50"></text></g><g><title>&lt;blake3::Hash as core::cmp::PartialEq&gt;::eq (4 samples, 0.06%)</title><rect x="88.6004%" y="1029" width="0.0615%" height="15" fill="rgb(218,40,45)"/><text x="88.8504%" y="1039.50"></text></g><g><title>constant_time_eq::constant_time_eq_32 (4 samples, 0.06%)</title><rect x="88.6004%" y="1013" width="0.0615%" height="15" fill="rgb(252,121,31)"/><text x="88.8504%" y="1023.50"></text></g><g><title>constant_time_eq::constant_time_ne_32 (4 samples, 0.06%)</title><rect x="88.6004%" y="997" width="0.0615%" height="15" fill="rgb(219,158,43)"/><text x="88.8504%" y="1007.50"></text></g><g><title>arena_bin_nonfull_slab_get (9 samples, 0.14%)</title><rect x="88.6926%" y="853" width="0.1383%" height="15" fill="rgb(231,162,42)"/><text x="88.9426%" y="863.50"></text></g><g><title>arena_bin_slabs_nonfull_tryget (9 samples, 0.14%)</title><rect x="88.6926%" y="837" width="0.1383%" height="15" fill="rgb(217,179,25)"/><text x="88.9426%" y="847.50"></text></g><g><title>_rjem_je_extent_heap_remove_first (9 samples, 0.14%)</title><rect x="88.6926%" y="821" width="0.1383%" height="15" fill="rgb(206,212,31)"/><text x="88.9426%" y="831.50"></text></g><g><title>bitmap_set (1 samples, 0.02%)</title><rect x="88.8308%" y="821" width="0.0154%" height="15" fill="rgb(235,144,12)"/><text x="89.0808%" y="831.50"></text></g><g><title>arena_bin_malloc_hard (11 samples, 0.17%)</title><rect x="88.6926%" y="869" width="0.1690%" height="15" fill="rgb(213,51,10)"/><text x="88.9426%" y="879.50"></text></g><g><title>arena_slab_reg_alloc (2 samples, 0.03%)</title><rect x="88.8308%" y="853" width="0.0307%" height="15" fill="rgb(231,145,14)"/><text x="89.0808%" y="863.50"></text></g><g><title>bitmap_sfu (2 samples, 0.03%)</title><rect x="88.8308%" y="837" width="0.0307%" height="15" fill="rgb(235,15,28)"/><text x="89.0808%" y="847.50"></text></g><g><title>ffs_lu (1 samples, 0.02%)</title><rect x="88.8462%" y="821" width="0.0154%" height="15" fill="rgb(237,206,10)"/><text x="89.0962%" y="831.50"></text></g><g><title>bitmap_sfu (1 samples, 0.02%)</title><rect x="88.8923%" y="853" width="0.0154%" height="15" fill="rgb(236,227,27)"/><text x="89.1423%" y="863.50"></text></g><g><title>ffs_lu (1 samples, 0.02%)</title><rect x="88.8923%" y="837" width="0.0154%" height="15" fill="rgb(246,83,35)"/><text x="89.1423%" y="847.50"></text></g><g><title>arena_slab_reg_alloc (4 samples, 0.06%)</title><rect x="88.8616%" y="869" width="0.0615%" height="15" fill="rgb(220,136,24)"/><text x="89.1116%" y="879.50"></text></g><g><title>extent_nfree_dec (1 samples, 0.02%)</title><rect x="88.9077%" y="853" width="0.0154%" height="15" fill="rgb(217,3,25)"/><text x="89.1577%" y="863.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (18 samples, 0.28%)</title><rect x="88.6619%" y="901" width="0.2765%" height="15" fill="rgb(239,24,14)"/><text x="88.9119%" y="911.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (18 samples, 0.28%)</title><rect x="88.6619%" y="885" width="0.2765%" height="15" fill="rgb(244,16,53)"/><text x="88.9119%" y="895.50"></text></g><g><title>malloc_mutex_lock (1 samples, 0.02%)</title><rect x="88.9230%" y="869" width="0.0154%" height="15" fill="rgb(208,175,44)"/><text x="89.1730%" y="879.50"></text></g><g><title>malloc_mutex_trylock_final (1 samples, 0.02%)</title><rect x="88.9230%" y="853" width="0.0154%" height="15" fill="rgb(252,18,48)"/><text x="89.1730%" y="863.50"></text></g><g><title>__GI___pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="88.9230%" y="837" width="0.0154%" height="15" fill="rgb(234,199,32)"/><text x="89.1730%" y="847.50"></text></g><g><title>arena_choose (1 samples, 0.02%)</title><rect x="88.9384%" y="901" width="0.0154%" height="15" fill="rgb(225,77,54)"/><text x="89.1884%" y="911.50"></text></g><g><title>arena_choose_impl (1 samples, 0.02%)</title><rect x="88.9384%" y="885" width="0.0154%" height="15" fill="rgb(225,42,25)"/><text x="89.1884%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (583 samples, 8.96%)</title><rect x="80.0123%" y="1189" width="8.9568%" height="15" fill="rgb(242,227,46)"/><text x="80.2623%" y="1199.50">&lt;core::future..</text></g><g><title>rho_runtime::run::{{closure}} (583 samples, 8.96%)</title><rect x="80.0123%" y="1173" width="8.9568%" height="15" fill="rgb(246,197,35)"/><text x="80.2623%" y="1183.50">rho_runtime::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (583 samples, 8.96%)</title><rect x="80.0123%" y="1157" width="8.9568%" height="15" fill="rgb(215,159,26)"/><text x="80.2623%" y="1167.50">&lt;core::future..</text></g><g><title>rho_runtime::storage::coordinator::Coordinator::run::{{closure}} (583 samples, 8.96%)</title><rect x="80.0123%" y="1141" width="8.9568%" height="15" fill="rgb(212,194,50)"/><text x="80.2623%" y="1151.50">rho_runtime::..</text></g><g><title>rho_runtime::storage::coordinator::Coordinator::handle_produce (583 samples, 8.96%)</title><rect x="80.0123%" y="1125" width="8.9568%" height="15" fill="rgb(246,132,1)"/><text x="80.2623%" y="1135.50">rho_runtime::..</text></g><g><title>tokio::sync::oneshot::channel (20 samples, 0.31%)</title><rect x="88.6619%" y="1109" width="0.3073%" height="15" fill="rgb(217,71,7)"/><text x="88.9119%" y="1119.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (20 samples, 0.31%)</title><rect x="88.6619%" y="1093" width="0.3073%" height="15" fill="rgb(252,59,32)"/><text x="88.9119%" y="1103.50"></text></g><g><title>alloc::alloc::exchange_malloc (20 samples, 0.31%)</title><rect x="88.6619%" y="1077" width="0.3073%" height="15" fill="rgb(253,204,25)"/><text x="88.9119%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.31%)</title><rect x="88.6619%" y="1061" width="0.3073%" height="15" fill="rgb(232,21,16)"/><text x="88.9119%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.31%)</title><rect x="88.6619%" y="1045" width="0.3073%" height="15" fill="rgb(248,90,29)"/><text x="88.9119%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.31%)</title><rect x="88.6619%" y="1029" width="0.3073%" height="15" fill="rgb(249,223,7)"/><text x="88.9119%" y="1039.50"></text></g><g><title>_rjem_mallocx (20 samples, 0.31%)</title><rect x="88.6619%" y="1013" width="0.3073%" height="15" fill="rgb(231,119,42)"/><text x="88.9119%" y="1023.50"></text></g><g><title>imalloc (20 samples, 0.31%)</title><rect x="88.6619%" y="997" width="0.3073%" height="15" fill="rgb(215,41,35)"/><text x="88.9119%" y="1007.50"></text></g><g><title>imalloc_body (20 samples, 0.31%)</title><rect x="88.6619%" y="981" width="0.3073%" height="15" fill="rgb(220,44,45)"/><text x="88.9119%" y="991.50"></text></g><g><title>imalloc_no_sample (20 samples, 0.31%)</title><rect x="88.6619%" y="965" width="0.3073%" height="15" fill="rgb(253,197,36)"/><text x="88.9119%" y="975.50"></text></g><g><title>iallocztm (20 samples, 0.31%)</title><rect x="88.6619%" y="949" width="0.3073%" height="15" fill="rgb(245,225,54)"/><text x="88.9119%" y="959.50"></text></g><g><title>arena_malloc (20 samples, 0.31%)</title><rect x="88.6619%" y="933" width="0.3073%" height="15" fill="rgb(239,94,37)"/><text x="88.9119%" y="943.50"></text></g><g><title>tcache_alloc_small (20 samples, 0.31%)</title><rect x="88.6619%" y="917" width="0.3073%" height="15" fill="rgb(242,217,10)"/><text x="88.9119%" y="927.50"></text></g><g><title>cache_bin_alloc_easy (1 samples, 0.02%)</title><rect x="88.9538%" y="901" width="0.0154%" height="15" fill="rgb(250,193,7)"/><text x="89.2038%" y="911.50"></text></g><g><title>&lt;tokio::sync::notify::Notified as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="88.9691%" y="1189" width="0.0154%" height="15" fill="rgb(230,104,19)"/><text x="89.2191%" y="1199.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="88.9845%" y="1189" width="0.0154%" height="15" fill="rgb(230,181,4)"/><text x="89.2345%" y="1199.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="88.9845%" y="1173" width="0.0154%" height="15" fill="rgb(216,219,49)"/><text x="89.2345%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="88.9845%" y="1157" width="0.0154%" height="15" fill="rgb(254,144,0)"/><text x="89.2345%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="88.9845%" y="1141" width="0.0154%" height="15" fill="rgb(205,209,38)"/><text x="89.2345%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="88.9845%" y="1125" width="0.0154%" height="15" fill="rgb(240,21,42)"/><text x="89.2345%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="88.9845%" y="1109" width="0.0154%" height="15" fill="rgb(241,132,3)"/><text x="89.2345%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="88.9998%" y="1189" width="0.0154%" height="15" fill="rgb(225,14,2)"/><text x="89.2498%" y="1199.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="88.9998%" y="1173" width="0.0154%" height="15" fill="rgb(210,141,35)"/><text x="89.2498%" y="1183.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="88.9998%" y="1157" width="0.0154%" height="15" fill="rgb(251,14,44)"/><text x="89.2498%" y="1167.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="88.9998%" y="1141" width="0.0154%" height="15" fill="rgb(247,48,18)"/><text x="89.2498%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="88.9998%" y="1125" width="0.0154%" height="15" fill="rgb(225,0,40)"/><text x="89.2498%" y="1135.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="88.9998%" y="1109" width="0.0154%" height="15" fill="rgb(221,31,33)"/><text x="89.2498%" y="1119.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="88.9998%" y="1093" width="0.0154%" height="15" fill="rgb(237,42,40)"/><text x="89.2498%" y="1103.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="88.9998%" y="1077" width="0.0154%" height="15" fill="rgb(233,51,29)"/><text x="89.2498%" y="1087.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="88.9998%" y="1061" width="0.0154%" height="15" fill="rgb(226,58,20)"/><text x="89.2498%" y="1071.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="88.9998%" y="1045" width="0.0154%" height="15" fill="rgb(208,98,7)"/><text x="89.2498%" y="1055.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="88.9998%" y="1029" width="0.0154%" height="15" fill="rgb(228,143,44)"/><text x="89.2498%" y="1039.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="88.9998%" y="1013" width="0.0154%" height="15" fill="rgb(246,55,38)"/><text x="89.2498%" y="1023.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="88.9998%" y="997" width="0.0154%" height="15" fill="rgb(247,87,16)"/><text x="89.2498%" y="1007.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="88.9998%" y="981" width="0.0154%" height="15" fill="rgb(234,129,42)"/><text x="89.2498%" y="991.50"></text></g><g><title>[libc-2.31.so] (6 samples, 0.09%)</title><rect x="89.0767%" y="917" width="0.0922%" height="15" fill="rgb(220,82,16)"/><text x="89.3267%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (22 samples, 0.34%)</title><rect x="89.1688%" y="917" width="0.3380%" height="15" fill="rgb(211,88,4)"/><text x="89.4188%" y="927.50"></text></g><g><title>core::ptr::read (22 samples, 0.34%)</title><rect x="89.1688%" y="901" width="0.3380%" height="15" fill="rgb(248,151,21)"/><text x="89.4188%" y="911.50"></text></g><g><title>[libc-2.31.so] (22 samples, 0.34%)</title><rect x="89.1688%" y="885" width="0.3380%" height="15" fill="rgb(238,163,6)"/><text x="89.4188%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="89.4915%" y="869" width="0.0154%" height="15" fill="rgb(209,183,11)"/><text x="89.7415%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="89.4915%" y="853" width="0.0154%" height="15" fill="rgb(219,37,20)"/><text x="89.7415%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="89.4915%" y="837" width="0.0154%" height="15" fill="rgb(210,158,4)"/><text x="89.7415%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="89.4915%" y="821" width="0.0154%" height="15" fill="rgb(221,167,53)"/><text x="89.7415%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="89.4915%" y="805" width="0.0154%" height="15" fill="rgb(237,151,45)"/><text x="89.7415%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="89.4915%" y="789" width="0.0154%" height="15" fill="rgb(231,39,3)"/><text x="89.7415%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="89.4915%" y="773" width="0.0154%" height="15" fill="rgb(212,167,28)"/><text x="89.7415%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="89.4915%" y="757" width="0.0154%" height="15" fill="rgb(232,178,8)"/><text x="89.7415%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="89.4915%" y="741" width="0.0154%" height="15" fill="rgb(225,151,20)"/><text x="89.7415%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="89.4915%" y="725" width="0.0154%" height="15" fill="rgb(238,3,37)"/><text x="89.7415%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="89.4915%" y="709" width="0.0154%" height="15" fill="rgb(251,147,42)"/><text x="89.7415%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.02%)</title><rect x="89.5068%" y="917" width="0.0154%" height="15" fill="rgb(208,173,10)"/><text x="89.7568%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.02%)</title><rect x="89.5068%" y="901" width="0.0154%" height="15" fill="rgb(246,225,4)"/><text x="89.7568%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (9 samples, 0.14%)</title><rect x="89.5222%" y="917" width="0.1383%" height="15" fill="rgb(248,102,6)"/><text x="89.7722%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_load (9 samples, 0.14%)</title><rect x="89.5222%" y="901" width="0.1383%" height="15" fill="rgb(232,6,21)"/><text x="89.7722%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (43 samples, 0.66%)</title><rect x="89.0152%" y="965" width="0.6606%" height="15" fill="rgb(221,179,22)"/><text x="89.2652%" y="975.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::run::{{closure}} (43 samples, 0.66%)</title><rect x="89.0152%" y="949" width="0.6606%" height="15" fill="rgb(252,50,20)"/><text x="89.2652%" y="959.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::pop (43 samples, 0.66%)</title><rect x="89.0152%" y="933" width="0.6606%" height="15" fill="rgb(222,56,38)"/><text x="89.2652%" y="943.50"></text></g><g><title>core::sync::atomic::fence (1 samples, 0.02%)</title><rect x="89.6605%" y="917" width="0.0154%" height="15" fill="rgb(206,193,29)"/><text x="89.9105%" y="927.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="89.6758%" y="949" width="0.0154%" height="15" fill="rgb(239,192,45)"/><text x="89.9258%" y="959.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.02%)</title><rect x="89.6758%" y="933" width="0.0154%" height="15" fill="rgb(254,18,36)"/><text x="89.9258%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="89.6758%" y="917" width="0.0154%" height="15" fill="rgb(221,127,11)"/><text x="89.9258%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="89.6758%" y="901" width="0.0154%" height="15" fill="rgb(234,146,35)"/><text x="89.9258%" y="911.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="89.6758%" y="885" width="0.0154%" height="15" fill="rgb(254,201,37)"/><text x="89.9258%" y="895.50"></text></g><g><title>_rjem_mallocx (1 samples, 0.02%)</title><rect x="89.6758%" y="869" width="0.0154%" height="15" fill="rgb(211,202,23)"/><text x="89.9258%" y="879.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="89.6758%" y="853" width="0.0154%" height="15" fill="rgb(237,91,2)"/><text x="89.9258%" y="863.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="89.6758%" y="837" width="0.0154%" height="15" fill="rgb(226,228,36)"/><text x="89.9258%" y="847.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="89.6758%" y="821" width="0.0154%" height="15" fill="rgb(213,63,50)"/><text x="89.9258%" y="831.50"></text></g><g><title>ipalloct (1 samples, 0.02%)</title><rect x="89.6758%" y="805" width="0.0154%" height="15" fill="rgb(235,194,19)"/><text x="89.9258%" y="815.50"></text></g><g><title>ipallocztm (1 samples, 0.02%)</title><rect x="89.6758%" y="789" width="0.0154%" height="15" fill="rgb(207,204,18)"/><text x="89.9258%" y="799.50"></text></g><g><title>_rjem_je_arena_palloc (1 samples, 0.02%)</title><rect x="89.6758%" y="773" width="0.0154%" height="15" fill="rgb(248,8,7)"/><text x="89.9258%" y="783.50"></text></g><g><title>_rjem_je_arena_palloc (1 samples, 0.02%)</title><rect x="89.6758%" y="757" width="0.0154%" height="15" fill="rgb(223,145,47)"/><text x="89.9258%" y="767.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="89.6758%" y="741" width="0.0154%" height="15" fill="rgb(228,84,11)"/><text x="89.9258%" y="751.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="89.6758%" y="725" width="0.0154%" height="15" fill="rgb(218,76,45)"/><text x="89.9258%" y="735.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect x="89.6758%" y="709" width="0.0154%" height="15" fill="rgb(223,80,15)"/><text x="89.9258%" y="719.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (1 samples, 0.02%)</title><rect x="89.6758%" y="693" width="0.0154%" height="15" fill="rgb(219,218,33)"/><text x="89.9258%" y="703.50"></text></g><g><title>arena_bin_malloc_hard (1 samples, 0.02%)</title><rect x="89.6758%" y="677" width="0.0154%" height="15" fill="rgb(208,51,11)"/><text x="89.9258%" y="687.50"></text></g><g><title>arena_bin_nonfull_slab_get (1 samples, 0.02%)</title><rect x="89.6758%" y="661" width="0.0154%" height="15" fill="rgb(229,165,39)"/><text x="89.9258%" y="671.50"></text></g><g><title>arena_slab_alloc (1 samples, 0.02%)</title><rect x="89.6758%" y="645" width="0.0154%" height="15" fill="rgb(241,100,24)"/><text x="89.9258%" y="655.50"></text></g><g><title>_rjem_je_extents_alloc (1 samples, 0.02%)</title><rect x="89.6758%" y="629" width="0.0154%" height="15" fill="rgb(228,14,23)"/><text x="89.9258%" y="639.50"></text></g><g><title>extent_recycle (1 samples, 0.02%)</title><rect x="89.6758%" y="613" width="0.0154%" height="15" fill="rgb(247,116,52)"/><text x="89.9258%" y="623.50"></text></g><g><title>extent_recycle_extract (1 samples, 0.02%)</title><rect x="89.6758%" y="597" width="0.0154%" height="15" fill="rgb(216,149,33)"/><text x="89.9258%" y="607.50"></text></g><g><title>extents_fit_locked (1 samples, 0.02%)</title><rect x="89.6758%" y="581" width="0.0154%" height="15" fill="rgb(238,142,29)"/><text x="89.9258%" y="591.50"></text></g><g><title>extents_best_fit_locked (1 samples, 0.02%)</title><rect x="89.6758%" y="565" width="0.0154%" height="15" fill="rgb(224,83,40)"/><text x="89.9258%" y="575.50"></text></g><g><title>sz_psz2ind (1 samples, 0.02%)</title><rect x="89.6758%" y="549" width="0.0154%" height="15" fill="rgb(234,165,11)"/><text x="89.9258%" y="559.50"></text></g><g><title>async_io::driver::block_on (117 samples, 1.80%)</title><rect x="89.0152%" y="1189" width="1.7975%" height="15" fill="rgb(215,96,23)"/><text x="89.2652%" y="1199.50">a..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (117 samples, 1.80%)</title><rect x="89.0152%" y="1173" width="1.7975%" height="15" fill="rgb(233,179,26)"/><text x="89.2652%" y="1183.50">&lt;..</text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (117 samples, 1.80%)</title><rect x="89.0152%" y="1157" width="1.7975%" height="15" fill="rgb(225,129,33)"/><text x="89.2652%" y="1167.50">a..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (117 samples, 1.80%)</title><rect x="89.0152%" y="1141" width="1.7975%" height="15" fill="rgb(237,49,13)"/><text x="89.2652%" y="1151.50">&lt;..</text></g><g><title>async_executor::Executor::run::{{closure}} (117 samples, 1.80%)</title><rect x="89.0152%" y="1125" width="1.7975%" height="15" fill="rgb(211,3,31)"/><text x="89.2652%" y="1135.50">a..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (117 samples, 1.80%)</title><rect x="89.0152%" y="1109" width="1.7975%" height="15" fill="rgb(216,152,19)"/><text x="89.2652%" y="1119.50">&lt;..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (117 samples, 1.80%)</title><rect x="89.0152%" y="1093" width="1.7975%" height="15" fill="rgb(251,121,35)"/><text x="89.2652%" y="1103.50">&lt;..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (117 samples, 1.80%)</title><rect x="89.0152%" y="1077" width="1.7975%" height="15" fill="rgb(210,217,47)"/><text x="89.2652%" y="1087.50">a..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (117 samples, 1.80%)</title><rect x="89.0152%" y="1061" width="1.7975%" height="15" fill="rgb(244,116,22)"/><text x="89.2652%" y="1071.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (117 samples, 1.80%)</title><rect x="89.0152%" y="1045" width="1.7975%" height="15" fill="rgb(228,17,21)"/><text x="89.2652%" y="1055.50">s..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (117 samples, 1.80%)</title><rect x="89.0152%" y="1029" width="1.7975%" height="15" fill="rgb(240,149,34)"/><text x="89.2652%" y="1039.50">a..</text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (117 samples, 1.80%)</title><rect x="89.0152%" y="1013" width="1.7975%" height="15" fill="rgb(208,125,47)"/><text x="89.2652%" y="1023.50">&lt;..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (117 samples, 1.80%)</title><rect x="89.0152%" y="997" width="1.7975%" height="15" fill="rgb(249,186,39)"/><text x="89.2652%" y="1007.50">&lt;..</text></g><g><title>rho_runtime::run::{{closure}} (117 samples, 1.80%)</title><rect x="89.0152%" y="981" width="1.7975%" height="15" fill="rgb(240,220,33)"/><text x="89.2652%" y="991.50">r..</text></g><g><title>rho_runtime::storage::coordinator::Coordinator::create (74 samples, 1.14%)</title><rect x="89.6758%" y="965" width="1.1369%" height="15" fill="rgb(243,110,23)"/><text x="89.9258%" y="975.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::new (73 samples, 1.12%)</title><rect x="89.6912%" y="949" width="1.1215%" height="15" fill="rgb(219,163,46)"/><text x="89.9412%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (73 samples, 1.12%)</title><rect x="89.6912%" y="933" width="1.1215%" height="15" fill="rgb(216,126,30)"/><text x="89.9412%" y="943.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[I]&gt; as core::iter::traits::collect::FromIterator&lt;I&gt;&gt;::from_iter (73 samples, 1.12%)</title><rect x="89.6912%" y="917" width="1.1215%" height="15" fill="rgb(208,139,11)"/><text x="89.9412%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (73 samples, 1.12%)</title><rect x="89.6912%" y="901" width="1.1215%" height="15" fill="rgb(213,118,36)"/><text x="89.9412%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (73 samples, 1.12%)</title><rect x="89.6912%" y="885" width="1.1215%" height="15" fill="rgb(226,43,17)"/><text x="89.9412%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (73 samples, 1.12%)</title><rect x="89.6912%" y="869" width="1.1215%" height="15" fill="rgb(254,217,4)"/><text x="89.9412%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (73 samples, 1.12%)</title><rect x="89.6912%" y="853" width="1.1215%" height="15" fill="rgb(210,134,47)"/><text x="89.9412%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (73 samples, 1.12%)</title><rect x="89.6912%" y="837" width="1.1215%" height="15" fill="rgb(237,24,49)"/><text x="89.9412%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (73 samples, 1.12%)</title><rect x="89.6912%" y="821" width="1.1215%" height="15" fill="rgb(251,39,46)"/><text x="89.9412%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (73 samples, 1.12%)</title><rect x="89.6912%" y="805" width="1.1215%" height="15" fill="rgb(251,220,3)"/><text x="89.9412%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (73 samples, 1.12%)</title><rect x="89.6912%" y="789" width="1.1215%" height="15" fill="rgb(228,105,12)"/><text x="89.9412%" y="799.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (73 samples, 1.12%)</title><rect x="89.6912%" y="773" width="1.1215%" height="15" fill="rgb(215,196,1)"/><text x="89.9412%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (73 samples, 1.12%)</title><rect x="89.6912%" y="757" width="1.1215%" height="15" fill="rgb(214,33,39)"/><text x="89.9412%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (73 samples, 1.12%)</title><rect x="89.6912%" y="741" width="1.1215%" height="15" fill="rgb(220,19,52)"/><text x="89.9412%" y="751.50"></text></g><g><title>core::ptr::write (73 samples, 1.12%)</title><rect x="89.6912%" y="725" width="1.1215%" height="15" fill="rgb(221,78,38)"/><text x="89.9412%" y="735.50"></text></g><g><title>[unknown] (60 samples, 0.92%)</title><rect x="89.8909%" y="709" width="0.9218%" height="15" fill="rgb(253,30,16)"/><text x="90.1409%" y="719.50"></text></g><g><title>[unknown] (54 samples, 0.83%)</title><rect x="89.9831%" y="693" width="0.8296%" height="15" fill="rgb(242,65,0)"/><text x="90.2331%" y="703.50"></text></g><g><title>[unknown] (53 samples, 0.81%)</title><rect x="89.9985%" y="677" width="0.8143%" height="15" fill="rgb(235,201,12)"/><text x="90.2485%" y="687.50"></text></g><g><title>[unknown] (49 samples, 0.75%)</title><rect x="90.0599%" y="661" width="0.7528%" height="15" fill="rgb(233,161,9)"/><text x="90.3099%" y="671.50"></text></g><g><title>[unknown] (46 samples, 0.71%)</title><rect x="90.1060%" y="645" width="0.7067%" height="15" fill="rgb(241,207,41)"/><text x="90.3560%" y="655.50"></text></g><g><title>[unknown] (44 samples, 0.68%)</title><rect x="90.1367%" y="629" width="0.6760%" height="15" fill="rgb(212,69,46)"/><text x="90.3867%" y="639.50"></text></g><g><title>[unknown] (40 samples, 0.61%)</title><rect x="90.1982%" y="613" width="0.6145%" height="15" fill="rgb(239,69,45)"/><text x="90.4482%" y="623.50"></text></g><g><title>[unknown] (34 samples, 0.52%)</title><rect x="90.2904%" y="597" width="0.5224%" height="15" fill="rgb(242,117,48)"/><text x="90.5404%" y="607.50"></text></g><g><title>[unknown] (17 samples, 0.26%)</title><rect x="90.5515%" y="581" width="0.2612%" height="15" fill="rgb(228,41,36)"/><text x="90.8015%" y="591.50"></text></g><g><title>[unknown] (12 samples, 0.18%)</title><rect x="90.6284%" y="565" width="0.1844%" height="15" fill="rgb(212,3,32)"/><text x="90.8784%" y="575.50"></text></g><g><title>[unknown] (4 samples, 0.06%)</title><rect x="90.7513%" y="549" width="0.0615%" height="15" fill="rgb(233,41,49)"/><text x="91.0013%" y="559.50"></text></g><g><title>[unknown] (3 samples, 0.05%)</title><rect x="90.7666%" y="533" width="0.0461%" height="15" fill="rgb(252,170,49)"/><text x="91.0166%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="90.7974%" y="517" width="0.0154%" height="15" fill="rgb(229,53,26)"/><text x="91.0474%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="90.7974%" y="501" width="0.0154%" height="15" fill="rgb(217,157,12)"/><text x="91.0474%" y="511.50"></text></g><g><title>async_io::reactor::Reactor::try_lock (21 samples, 0.32%)</title><rect x="90.9049%" y="933" width="0.3226%" height="15" fill="rgb(227,17,9)"/><text x="91.1549%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::try_lock (21 samples, 0.32%)</title><rect x="90.9049%" y="917" width="0.3226%" height="15" fill="rgb(218,84,12)"/><text x="91.1549%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::try_lock (21 samples, 0.32%)</title><rect x="90.9049%" y="901" width="0.3226%" height="15" fill="rgb(212,79,24)"/><text x="91.1549%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::try_lock (21 samples, 0.32%)</title><rect x="90.9049%" y="885" width="0.3226%" height="15" fill="rgb(217,222,37)"/><text x="91.1549%" y="895.50"></text></g><g><title>__GI___pthread_mutex_trylock (21 samples, 0.32%)</title><rect x="90.9049%" y="869" width="0.3226%" height="15" fill="rgb(246,208,8)"/><text x="91.1549%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.02%)</title><rect x="91.2429%" y="917" width="0.0154%" height="15" fill="rgb(244,133,10)"/><text x="91.4929%" y="927.50"></text></g><g><title>__GI___pthread_mutex_unlock (33 samples, 0.51%)</title><rect x="91.2736%" y="837" width="0.5070%" height="15" fill="rgb(209,219,41)"/><text x="91.5236%" y="847.50"></text></g><g><title>[unknown] (31 samples, 0.48%)</title><rect x="91.3043%" y="821" width="0.4763%" height="15" fill="rgb(253,175,45)"/><text x="91.5543%" y="831.50"></text></g><g><title>[unknown] (28 samples, 0.43%)</title><rect x="91.3504%" y="805" width="0.4302%" height="15" fill="rgb(235,100,37)"/><text x="91.6004%" y="815.50"></text></g><g><title>[unknown] (28 samples, 0.43%)</title><rect x="91.3504%" y="789" width="0.4302%" height="15" fill="rgb(225,87,19)"/><text x="91.6004%" y="799.50"></text></g><g><title>[unknown] (26 samples, 0.40%)</title><rect x="91.3812%" y="773" width="0.3994%" height="15" fill="rgb(217,152,17)"/><text x="91.6312%" y="783.50"></text></g><g><title>[unknown] (24 samples, 0.37%)</title><rect x="91.4119%" y="757" width="0.3687%" height="15" fill="rgb(235,72,13)"/><text x="91.6619%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (35 samples, 0.54%)</title><rect x="91.2736%" y="901" width="0.5377%" height="15" fill="rgb(233,140,18)"/><text x="91.5236%" y="911.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.54%)</title><rect x="91.2736%" y="885" width="0.5377%" height="15" fill="rgb(207,212,28)"/><text x="91.5236%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (35 samples, 0.54%)</title><rect x="91.2736%" y="869" width="0.5377%" height="15" fill="rgb(220,130,25)"/><text x="91.5236%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (35 samples, 0.54%)</title><rect x="91.2736%" y="853" width="0.5377%" height="15" fill="rgb(205,55,34)"/><text x="91.5236%" y="863.50"></text></g><g><title>__pthread_cond_wait (2 samples, 0.03%)</title><rect x="91.7806%" y="837" width="0.0307%" height="15" fill="rgb(237,54,35)"/><text x="92.0306%" y="847.50"></text></g><g><title>[unknown] (2 samples, 0.03%)</title><rect x="91.7806%" y="821" width="0.0307%" height="15" fill="rgb(208,67,23)"/><text x="92.0306%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (13 samples, 0.20%)</title><rect x="91.8113%" y="901" width="0.1997%" height="15" fill="rgb(206,207,50)"/><text x="92.0613%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (13 samples, 0.20%)</title><rect x="91.8113%" y="885" width="0.1997%" height="15" fill="rgb(213,211,42)"/><text x="92.0613%" y="895.50"></text></g><g><title>[unknown] (242 samples, 3.72%)</title><rect x="92.3491%" y="837" width="3.7179%" height="15" fill="rgb(252,197,50)"/><text x="92.5991%" y="847.50">[unk..</text></g><g><title>[unknown] (237 samples, 3.64%)</title><rect x="92.4259%" y="821" width="3.6411%" height="15" fill="rgb(251,211,41)"/><text x="92.6759%" y="831.50">[unk..</text></g><g><title>[unknown] (236 samples, 3.63%)</title><rect x="92.4412%" y="805" width="3.6257%" height="15" fill="rgb(229,211,5)"/><text x="92.6912%" y="815.50">[unk..</text></g><g><title>[unknown] (230 samples, 3.53%)</title><rect x="92.5334%" y="789" width="3.5336%" height="15" fill="rgb(239,36,31)"/><text x="92.7834%" y="799.50">[un..</text></g><g><title>[unknown] (226 samples, 3.47%)</title><rect x="92.5949%" y="773" width="3.4721%" height="15" fill="rgb(248,67,31)"/><text x="92.8449%" y="783.50">[un..</text></g><g><title>[unknown] (214 samples, 3.29%)</title><rect x="92.7792%" y="757" width="3.2878%" height="15" fill="rgb(249,55,44)"/><text x="93.0292%" y="767.50">[un..</text></g><g><title>[unknown] (191 samples, 2.93%)</title><rect x="93.1326%" y="741" width="2.9344%" height="15" fill="rgb(216,82,12)"/><text x="93.3826%" y="751.50">[u..</text></g><g><title>[unknown] (172 samples, 2.64%)</title><rect x="93.4245%" y="725" width="2.6425%" height="15" fill="rgb(242,174,1)"/><text x="93.6745%" y="735.50">[u..</text></g><g><title>[unknown] (160 samples, 2.46%)</title><rect x="93.6088%" y="709" width="2.4581%" height="15" fill="rgb(208,120,29)"/><text x="93.8588%" y="719.50">[u..</text></g><g><title>[unknown] (129 samples, 1.98%)</title><rect x="94.0851%" y="693" width="1.9819%" height="15" fill="rgb(221,105,43)"/><text x="94.3351%" y="703.50">[..</text></g><g><title>[unknown] (84 samples, 1.29%)</title><rect x="94.7765%" y="677" width="1.2905%" height="15" fill="rgb(234,124,22)"/><text x="95.0265%" y="687.50"></text></g><g><title>[unknown] (63 samples, 0.97%)</title><rect x="95.0991%" y="661" width="0.9679%" height="15" fill="rgb(212,23,30)"/><text x="95.3491%" y="671.50"></text></g><g><title>[unknown] (42 samples, 0.65%)</title><rect x="95.4217%" y="645" width="0.6453%" height="15" fill="rgb(219,122,53)"/><text x="95.6717%" y="655.50"></text></g><g><title>[unknown] (33 samples, 0.51%)</title><rect x="95.5600%" y="629" width="0.5070%" height="15" fill="rgb(248,84,24)"/><text x="95.8100%" y="639.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="96.0516%" y="613" width="0.0154%" height="15" fill="rgb(245,115,18)"/><text x="96.3016%" y="623.50"></text></g><g><title>__pthread_disable_asynccancel (3 samples, 0.05%)</title><rect x="96.0670%" y="837" width="0.0461%" height="15" fill="rgb(227,176,51)"/><text x="96.3170%" y="847.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (268 samples, 4.12%)</title><rect x="92.0111%" y="885" width="4.1174%" height="15" fill="rgb(229,63,42)"/><text x="92.2611%" y="895.50">std:..</text></g><g><title>std::sys::unix::condvar::Condvar::wait (268 samples, 4.12%)</title><rect x="92.0111%" y="869" width="4.1174%" height="15" fill="rgb(247,202,24)"/><text x="92.2611%" y="879.50">std:..</text></g><g><title>__pthread_cond_wait (268 samples, 4.12%)</title><rect x="92.0111%" y="853" width="4.1174%" height="15" fill="rgb(244,173,20)"/><text x="92.2611%" y="863.50">__pt..</text></g><g><title>__pthread_mutex_cond_lock (1 samples, 0.02%)</title><rect x="96.1131%" y="837" width="0.0154%" height="15" fill="rgb(242,81,47)"/><text x="96.3631%" y="847.50"></text></g><g><title>parking::Parker::park (333 samples, 5.12%)</title><rect x="91.2275%" y="933" width="5.1160%" height="15" fill="rgb(231,185,54)"/><text x="91.4775%" y="943.50">parkin..</text></g><g><title>parking::Inner::park (331 samples, 5.09%)</title><rect x="91.2583%" y="917" width="5.0853%" height="15" fill="rgb(243,55,32)"/><text x="91.5083%" y="927.50">parkin..</text></g><g><title>std::sync::condvar::Condvar::wait (282 samples, 4.33%)</title><rect x="92.0111%" y="901" width="4.3325%" height="15" fill="rgb(208,167,19)"/><text x="92.2611%" y="911.50">std::..</text></g><g><title>std::sys_common::poison::Flag::get (14 samples, 0.22%)</title><rect x="96.1284%" y="885" width="0.2151%" height="15" fill="rgb(231,72,35)"/><text x="96.3784%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (14 samples, 0.22%)</title><rect x="96.1284%" y="869" width="0.2151%" height="15" fill="rgb(250,173,51)"/><text x="96.3784%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.22%)</title><rect x="96.1284%" y="853" width="0.2151%" height="15" fill="rgb(209,5,22)"/><text x="96.3784%" y="863.50"></text></g><g><title>async_std::task::builder::Builder::blocking (364 samples, 5.59%)</title><rect x="90.8127%" y="1189" width="5.5923%" height="15" fill="rgb(250,174,19)"/><text x="91.0627%" y="1199.50">async_s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (364 samples, 5.59%)</title><rect x="90.8127%" y="1173" width="5.5923%" height="15" fill="rgb(217,3,49)"/><text x="91.0627%" y="1183.50">std::th..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (364 samples, 5.59%)</title><rect x="90.8127%" y="1157" width="5.5923%" height="15" fill="rgb(218,225,5)"/><text x="91.0627%" y="1167.50">std::th..</text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}} (364 samples, 5.59%)</title><rect x="90.8127%" y="1141" width="5.5923%" height="15" fill="rgb(236,89,11)"/><text x="91.0627%" y="1151.50">async_s..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (364 samples, 5.59%)</title><rect x="90.8127%" y="1125" width="5.5923%" height="15" fill="rgb(206,33,28)"/><text x="91.0627%" y="1135.50">async_s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (364 samples, 5.59%)</title><rect x="90.8127%" y="1109" width="5.5923%" height="15" fill="rgb(241,56,42)"/><text x="91.0627%" y="1119.50">std::th..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (364 samples, 5.59%)</title><rect x="90.8127%" y="1093" width="5.5923%" height="15" fill="rgb(222,44,11)"/><text x="91.0627%" y="1103.50">std::th..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (364 samples, 5.59%)</title><rect x="90.8127%" y="1077" width="5.5923%" height="15" fill="rgb(234,111,20)"/><text x="91.0627%" y="1087.50">async_s..</text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (364 samples, 5.59%)</title><rect x="90.8127%" y="1061" width="5.5923%" height="15" fill="rgb(237,77,6)"/><text x="91.0627%" y="1071.50">async_s..</text></g><g><title>async_global_executor::executor::block_on (364 samples, 5.59%)</title><rect x="90.8127%" y="1045" width="5.5923%" height="15" fill="rgb(235,111,23)"/><text x="91.0627%" y="1055.50">async_g..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (364 samples, 5.59%)</title><rect x="90.8127%" y="1029" width="5.5923%" height="15" fill="rgb(251,135,29)"/><text x="91.0627%" y="1039.50">std::th..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (364 samples, 5.59%)</title><rect x="90.8127%" y="1013" width="5.5923%" height="15" fill="rgb(217,57,1)"/><text x="91.0627%" y="1023.50">std::th..</text></g><g><title>async_global_executor::executor::block_on::{{closure}} (364 samples, 5.59%)</title><rect x="90.8127%" y="997" width="5.5923%" height="15" fill="rgb(249,119,31)"/><text x="91.0627%" y="1007.50">async_g..</text></g><g><title>async_global_executor::reactor::block_on (364 samples, 5.59%)</title><rect x="90.8127%" y="981" width="5.5923%" height="15" fill="rgb(233,164,33)"/><text x="91.0627%" y="991.50">async_g..</text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (364 samples, 5.59%)</title><rect x="90.8127%" y="965" width="5.5923%" height="15" fill="rgb(250,217,43)"/><text x="91.0627%" y="975.50">async_g..</text></g><g><title>async_io::driver::block_on (364 samples, 5.59%)</title><rect x="90.8127%" y="949" width="5.5923%" height="15" fill="rgb(232,154,50)"/><text x="91.0627%" y="959.50">async_i..</text></g><g><title>parking::Parker::park_timeout (4 samples, 0.06%)</title><rect x="96.3435%" y="933" width="0.0615%" height="15" fill="rgb(227,190,8)"/><text x="96.5935%" y="943.50"></text></g><g><title>parking::Inner::park (4 samples, 0.06%)</title><rect x="96.3435%" y="917" width="0.0615%" height="15" fill="rgb(209,217,32)"/><text x="96.5935%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (4 samples, 0.06%)</title><rect x="96.3435%" y="901" width="0.0615%" height="15" fill="rgb(243,203,50)"/><text x="96.5935%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.06%)</title><rect x="96.3435%" y="885" width="0.0615%" height="15" fill="rgb(232,152,27)"/><text x="96.5935%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::allocate (1 samples, 0.02%)</title><rect x="96.4050%" y="1189" width="0.0154%" height="15" fill="rgb(240,34,29)"/><text x="96.6550%" y="1199.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1 samples, 0.02%)</title><rect x="96.4203%" y="1189" width="0.0154%" height="15" fill="rgb(215,185,52)"/><text x="96.6703%" y="1199.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::pop (1 samples, 0.02%)</title><rect x="96.4357%" y="1189" width="0.0154%" height="15" fill="rgb(240,89,49)"/><text x="96.6857%" y="1199.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry (1 samples, 0.02%)</title><rect x="96.4511%" y="1189" width="0.0154%" height="15" fill="rgb(225,12,52)"/><text x="96.7011%" y="1199.50"></text></g><g><title>parking::Inner::park (1 samples, 0.02%)</title><rect x="96.4664%" y="1189" width="0.0154%" height="15" fill="rgb(239,128,45)"/><text x="96.7164%" y="1199.50"></text></g><g><title>parking::Parker::park (2 samples, 0.03%)</title><rect x="96.4818%" y="1189" width="0.0307%" height="15" fill="rgb(211,78,47)"/><text x="96.7318%" y="1199.50"></text></g><g><title>parking::Unparker::unpark (1 samples, 0.02%)</title><rect x="96.5125%" y="1189" width="0.0154%" height="15" fill="rgb(232,31,21)"/><text x="96.7625%" y="1199.50"></text></g><g><title>parking::Inner::unpark (1 samples, 0.02%)</title><rect x="96.5125%" y="1173" width="0.0154%" height="15" fill="rgb(222,168,14)"/><text x="96.7625%" y="1183.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.02%)</title><rect x="96.5125%" y="1157" width="0.0154%" height="15" fill="rgb(209,128,24)"/><text x="96.7625%" y="1167.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.02%)</title><rect x="96.5125%" y="1141" width="0.0154%" height="15" fill="rgb(249,35,13)"/><text x="96.7625%" y="1151.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1 samples, 0.02%)</title><rect x="96.5125%" y="1125" width="0.0154%" height="15" fill="rgb(218,7,2)"/><text x="96.7625%" y="1135.50"></text></g><g><title>rho_runtime::main (1 samples, 0.02%)</title><rect x="96.5279%" y="1189" width="0.0154%" height="15" fill="rgb(238,107,27)"/><text x="96.7779%" y="1199.50"></text></g><g><title>rho_runtime::run_normalizer (1 samples, 0.02%)</title><rect x="96.5279%" y="1173" width="0.0154%" height="15" fill="rgb(217,88,38)"/><text x="96.7779%" y="1183.50"></text></g><g><title>prost::message::Message::decode (1 samples, 0.02%)</title><rect x="96.5279%" y="1157" width="0.0154%" height="15" fill="rgb(230,207,0)"/><text x="96.7779%" y="1167.50"></text></g><g><title>prost::message::Message::merge (1 samples, 0.02%)</title><rect x="96.5279%" y="1141" width="0.0154%" height="15" fill="rgb(249,64,54)"/><text x="96.7779%" y="1151.50"></text></g><g><title>&lt;model::rho_types::NormalizeResult as prost::message::Message&gt;::merge_field (1 samples, 0.02%)</title><rect x="96.5279%" y="1125" width="0.0154%" height="15" fill="rgb(231,7,11)"/><text x="96.7779%" y="1135.50"></text></g><g><title>prost::encoding::message::merge (1 samples, 0.02%)</title><rect x="96.5279%" y="1109" width="0.0154%" height="15" fill="rgb(205,149,21)"/><text x="96.7779%" y="1119.50"></text></g><g><title>prost::encoding::merge_loop (1 samples, 0.02%)</title><rect x="96.5279%" y="1093" width="0.0154%" height="15" fill="rgb(215,126,34)"/><text x="96.7779%" y="1103.50"></text></g><g><title>prost::encoding::message::merge::{{closure}} (1 samples, 0.02%)</title><rect x="96.5279%" y="1077" width="0.0154%" height="15" fill="rgb(241,132,45)"/><text x="96.7779%" y="1087.50"></text></g><g><title>&lt;model::rho_types::Par as prost::message::Message&gt;::merge_field (1 samples, 0.02%)</title><rect x="96.5279%" y="1061" width="0.0154%" height="15" fill="rgb(252,69,32)"/><text x="96.7779%" y="1071.50"></text></g><g><title>prost::encoding::message::merge_repeated (1 samples, 0.02%)</title><rect x="96.5279%" y="1045" width="0.0154%" height="15" fill="rgb(232,204,19)"/><text x="96.7779%" y="1055.50"></text></g><g><title>prost::encoding::message::merge (1 samples, 0.02%)</title><rect x="96.5279%" y="1029" width="0.0154%" height="15" fill="rgb(249,15,47)"/><text x="96.7779%" y="1039.50"></text></g><g><title>prost::encoding::merge_loop (1 samples, 0.02%)</title><rect x="96.5279%" y="1013" width="0.0154%" height="15" fill="rgb(209,227,23)"/><text x="96.7779%" y="1023.50"></text></g><g><title>prost::encoding::message::merge::{{closure}} (1 samples, 0.02%)</title><rect x="96.5279%" y="997" width="0.0154%" height="15" fill="rgb(248,92,24)"/><text x="96.7779%" y="1007.50"></text></g><g><title>&lt;model::rho_types::New as prost::message::Message&gt;::merge_field (1 samples, 0.02%)</title><rect x="96.5279%" y="981" width="0.0154%" height="15" fill="rgb(247,59,2)"/><text x="96.7779%" y="991.50"></text></g><g><title>prost::encoding::message::merge (1 samples, 0.02%)</title><rect x="96.5279%" y="965" width="0.0154%" height="15" fill="rgb(221,30,5)"/><text x="96.7779%" y="975.50"></text></g><g><title>prost::encoding::merge_loop (1 samples, 0.02%)</title><rect x="96.5279%" y="949" width="0.0154%" height="15" fill="rgb(208,108,53)"/><text x="96.7779%" y="959.50"></text></g><g><title>prost::encoding::message::merge::{{closure}} (1 samples, 0.02%)</title><rect x="96.5279%" y="933" width="0.0154%" height="15" fill="rgb(211,183,26)"/><text x="96.7779%" y="943.50"></text></g><g><title>&lt;model::rho_types::Par as prost::message::Message&gt;::merge_field (1 samples, 0.02%)</title><rect x="96.5279%" y="917" width="0.0154%" height="15" fill="rgb(232,132,4)"/><text x="96.7779%" y="927.50"></text></g><g><title>prost::encoding::message::merge_repeated (1 samples, 0.02%)</title><rect x="96.5279%" y="901" width="0.0154%" height="15" fill="rgb(253,128,37)"/><text x="96.7779%" y="911.50"></text></g><g><title>prost::encoding::message::merge (1 samples, 0.02%)</title><rect x="96.5279%" y="885" width="0.0154%" height="15" fill="rgb(221,58,24)"/><text x="96.7779%" y="895.50"></text></g><g><title>prost::encoding::merge_loop (1 samples, 0.02%)</title><rect x="96.5279%" y="869" width="0.0154%" height="15" fill="rgb(230,54,45)"/><text x="96.7779%" y="879.50"></text></g><g><title>prost::encoding::message::merge::{{closure}} (1 samples, 0.02%)</title><rect x="96.5279%" y="853" width="0.0154%" height="15" fill="rgb(254,21,18)"/><text x="96.7779%" y="863.50"></text></g><g><title>&lt;model::rho_types::Receive as prost::message::Message&gt;::merge_field (1 samples, 0.02%)</title><rect x="96.5279%" y="837" width="0.0154%" height="15" fill="rgb(221,108,0)"/><text x="96.7779%" y="847.50"></text></g><g><title>prost::encoding::message::merge (1 samples, 0.02%)</title><rect x="96.5279%" y="821" width="0.0154%" height="15" fill="rgb(206,95,1)"/><text x="96.7779%" y="831.50"></text></g><g><title>prost::encoding::merge_loop (1 samples, 0.02%)</title><rect x="96.5279%" y="805" width="0.0154%" height="15" fill="rgb(237,52,5)"/><text x="96.7779%" y="815.50"></text></g><g><title>prost::encoding::message::merge::{{closure}} (1 samples, 0.02%)</title><rect x="96.5279%" y="789" width="0.0154%" height="15" fill="rgb(218,150,34)"/><text x="96.7779%" y="799.50"></text></g><g><title>&lt;model::rho_types::Par as prost::message::Message&gt;::merge_field (1 samples, 0.02%)</title><rect x="96.5279%" y="773" width="0.0154%" height="15" fill="rgb(235,194,28)"/><text x="96.7779%" y="783.50"></text></g><g><title>prost::encoding::message::merge_repeated (1 samples, 0.02%)</title><rect x="96.5279%" y="757" width="0.0154%" height="15" fill="rgb(245,92,18)"/><text x="96.7779%" y="767.50"></text></g><g><title>prost::encoding::message::merge (1 samples, 0.02%)</title><rect x="96.5279%" y="741" width="0.0154%" height="15" fill="rgb(253,203,53)"/><text x="96.7779%" y="751.50"></text></g><g><title>prost::encoding::merge_loop (1 samples, 0.02%)</title><rect x="96.5279%" y="725" width="0.0154%" height="15" fill="rgb(249,185,47)"/><text x="96.7779%" y="735.50"></text></g><g><title>prost::encoding::message::merge::{{closure}} (1 samples, 0.02%)</title><rect x="96.5279%" y="709" width="0.0154%" height="15" fill="rgb(252,194,52)"/><text x="96.7779%" y="719.50"></text></g><g><title>&lt;model::rho_types::Match as prost::message::Message&gt;::merge_field (1 samples, 0.02%)</title><rect x="96.5279%" y="693" width="0.0154%" height="15" fill="rgb(210,53,36)"/><text x="96.7779%" y="703.50"></text></g><g><title>prost::encoding::message::merge (1 samples, 0.02%)</title><rect x="96.5279%" y="677" width="0.0154%" height="15" fill="rgb(237,37,25)"/><text x="96.7779%" y="687.50"></text></g><g><title>prost::encoding::merge_loop (1 samples, 0.02%)</title><rect x="96.5279%" y="661" width="0.0154%" height="15" fill="rgb(242,116,27)"/><text x="96.7779%" y="671.50"></text></g><g><title>prost::encoding::message::merge::{{closure}} (1 samples, 0.02%)</title><rect x="96.5279%" y="645" width="0.0154%" height="15" fill="rgb(213,185,26)"/><text x="96.7779%" y="655.50"></text></g><g><title>&lt;model::rho_types::Par as prost::message::Message&gt;::merge_field (1 samples, 0.02%)</title><rect x="96.5279%" y="629" width="0.0154%" height="15" fill="rgb(225,204,8)"/><text x="96.7779%" y="639.50"></text></g><g><title>prost::encoding::message::merge (1 samples, 0.02%)</title><rect x="96.5279%" y="613" width="0.0154%" height="15" fill="rgb(254,111,37)"/><text x="96.7779%" y="623.50"></text></g><g><title>prost::encoding::merge_loop (1 samples, 0.02%)</title><rect x="96.5279%" y="597" width="0.0154%" height="15" fill="rgb(242,35,9)"/><text x="96.7779%" y="607.50"></text></g><g><title>prost::encoding::message::merge::{{closure}} (1 samples, 0.02%)</title><rect x="96.5279%" y="581" width="0.0154%" height="15" fill="rgb(232,138,49)"/><text x="96.7779%" y="591.50"></text></g><g><title>&lt;model::bitset::BitSet as prost::message::Message&gt;::merge_field (1 samples, 0.02%)</title><rect x="96.5279%" y="565" width="0.0154%" height="15" fill="rgb(247,56,4)"/><text x="96.7779%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="96.5279%" y="549" width="0.0154%" height="15" fill="rgb(226,179,17)"/><text x="96.7779%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.02%)</title><rect x="96.5279%" y="533" width="0.0154%" height="15" fill="rgb(216,163,45)"/><text x="96.7779%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="96.5279%" y="517" width="0.0154%" height="15" fill="rgb(211,157,3)"/><text x="96.7779%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.02%)</title><rect x="96.5279%" y="501" width="0.0154%" height="15" fill="rgb(234,44,20)"/><text x="96.7779%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.02%)</title><rect x="96.5279%" y="485" width="0.0154%" height="15" fill="rgb(254,138,23)"/><text x="96.7779%" y="495.50"></text></g><g><title>__rg_dealloc (1 samples, 0.02%)</title><rect x="96.5279%" y="469" width="0.0154%" height="15" fill="rgb(206,119,39)"/><text x="96.7779%" y="479.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (1 samples, 0.02%)</title><rect x="96.5279%" y="453" width="0.0154%" height="15" fill="rgb(231,105,52)"/><text x="96.7779%" y="463.50"></text></g><g><title>jemallocator::layout_to_flags (1 samples, 0.02%)</title><rect x="96.5279%" y="437" width="0.0154%" height="15" fill="rgb(250,20,5)"/><text x="96.7779%" y="447.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="96.5432%" y="1045" width="0.0154%" height="15" fill="rgb(215,198,30)"/><text x="96.7932%" y="1055.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.02%)</title><rect x="96.5432%" y="1029" width="0.0154%" height="15" fill="rgb(246,142,8)"/><text x="96.7932%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.02%)</title><rect x="96.5432%" y="1013" width="0.0154%" height="15" fill="rgb(243,26,38)"/><text x="96.7932%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.02%)</title><rect x="96.5432%" y="997" width="0.0154%" height="15" fill="rgb(205,133,28)"/><text x="96.7932%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.02%)</title><rect x="96.5432%" y="981" width="0.0154%" height="15" fill="rgb(212,34,0)"/><text x="96.7932%" y="991.50"></text></g><g><title>_rjem_mallocx (1 samples, 0.02%)</title><rect x="96.5432%" y="965" width="0.0154%" height="15" fill="rgb(251,226,22)"/><text x="96.7932%" y="975.50"></text></g><g><title>imalloc (1 samples, 0.02%)</title><rect x="96.5432%" y="949" width="0.0154%" height="15" fill="rgb(252,119,9)"/><text x="96.7932%" y="959.50"></text></g><g><title>imalloc_body (1 samples, 0.02%)</title><rect x="96.5432%" y="933" width="0.0154%" height="15" fill="rgb(213,150,50)"/><text x="96.7932%" y="943.50"></text></g><g><title>imalloc_no_sample (1 samples, 0.02%)</title><rect x="96.5432%" y="917" width="0.0154%" height="15" fill="rgb(212,24,39)"/><text x="96.7932%" y="927.50"></text></g><g><title>iallocztm (1 samples, 0.02%)</title><rect x="96.5432%" y="901" width="0.0154%" height="15" fill="rgb(213,46,39)"/><text x="96.7932%" y="911.50"></text></g><g><title>arena_malloc (1 samples, 0.02%)</title><rect x="96.5432%" y="885" width="0.0154%" height="15" fill="rgb(239,106,12)"/><text x="96.7932%" y="895.50"></text></g><g><title>tcache_alloc_small (1 samples, 0.02%)</title><rect x="96.5432%" y="869" width="0.0154%" height="15" fill="rgb(249,229,21)"/><text x="96.7932%" y="879.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 0.02%)</title><rect x="96.5432%" y="853" width="0.0154%" height="15" fill="rgb(212,158,3)"/><text x="96.7932%" y="863.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (1 samples, 0.02%)</title><rect x="96.5432%" y="837" width="0.0154%" height="15" fill="rgb(253,26,48)"/><text x="96.7932%" y="847.50"></text></g><g><title>arena_slab_reg_alloc (1 samples, 0.02%)</title><rect x="96.5432%" y="821" width="0.0154%" height="15" fill="rgb(238,178,20)"/><text x="96.7932%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (2 samples, 0.03%)</title><rect x="96.5586%" y="1045" width="0.0307%" height="15" fill="rgb(208,86,15)"/><text x="96.8086%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.03%)</title><rect x="96.5586%" y="1029" width="0.0307%" height="15" fill="rgb(239,42,53)"/><text x="96.8086%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (6 samples, 0.09%)</title><rect x="96.5893%" y="1045" width="0.0922%" height="15" fill="rgb(245,226,8)"/><text x="96.8393%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_or (6 samples, 0.09%)</title><rect x="96.5893%" y="1029" width="0.0922%" height="15" fill="rgb(216,176,32)"/><text x="96.8393%" y="1039.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::handle_produce (10 samples, 0.15%)</title><rect x="96.5432%" y="1189" width="0.1536%" height="15" fill="rgb(231,186,21)"/><text x="96.7932%" y="1199.50"></text></g><g><title>async_std::task::spawn::spawn (10 samples, 0.15%)</title><rect x="96.5432%" y="1173" width="0.1536%" height="15" fill="rgb(205,95,49)"/><text x="96.7932%" y="1183.50"></text></g><g><title>async_std::task::builder::Builder::spawn (10 samples, 0.15%)</title><rect x="96.5432%" y="1157" width="0.1536%" height="15" fill="rgb(217,145,8)"/><text x="96.7932%" y="1167.50"></text></g><g><title>async_global_executor::executor::spawn (10 samples, 0.15%)</title><rect x="96.5432%" y="1141" width="0.1536%" height="15" fill="rgb(239,144,48)"/><text x="96.7932%" y="1151.50"></text></g><g><title>async_executor::Executor::spawn (10 samples, 0.15%)</title><rect x="96.5432%" y="1125" width="0.1536%" height="15" fill="rgb(214,189,23)"/><text x="96.7932%" y="1135.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (10 samples, 0.15%)</title><rect x="96.5432%" y="1109" width="0.1536%" height="15" fill="rgb(229,157,17)"/><text x="96.7932%" y="1119.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (10 samples, 0.15%)</title><rect x="96.5432%" y="1093" width="0.1536%" height="15" fill="rgb(230,5,48)"/><text x="96.7932%" y="1103.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (10 samples, 0.15%)</title><rect x="96.5432%" y="1077" width="0.1536%" height="15" fill="rgb(224,156,48)"/><text x="96.7932%" y="1087.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (10 samples, 0.15%)</title><rect x="96.5432%" y="1061" width="0.1536%" height="15" fill="rgb(223,14,29)"/><text x="96.7932%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.02%)</title><rect x="96.6815%" y="1045" width="0.0154%" height="15" fill="rgb(229,96,36)"/><text x="96.9315%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.02%)</title><rect x="96.6815%" y="1029" width="0.0154%" height="15" fill="rgb(231,102,53)"/><text x="96.9315%" y="1039.50"></text></g><g><title>async_std::task::spawn::spawn (1 samples, 0.02%)</title><rect x="96.7122%" y="1045" width="0.0154%" height="15" fill="rgb(210,77,38)"/><text x="96.9622%" y="1055.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.02%)</title><rect x="96.7122%" y="1029" width="0.0154%" height="15" fill="rgb(235,131,6)"/><text x="96.9622%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::task::join_handle::JoinHandle&lt;()&gt;&gt; (1 samples, 0.02%)</title><rect x="96.7276%" y="1045" width="0.0154%" height="15" fill="rgb(252,55,38)"/><text x="96.9776%" y="1055.50"></text></g><g><title>&lt;async_std::task::join_handle::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="96.7276%" y="1029" width="0.0154%" height="15" fill="rgb(246,38,14)"/><text x="96.9776%" y="1039.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::detach (1 samples, 0.02%)</title><rect x="96.7276%" y="1013" width="0.0154%" height="15" fill="rgb(242,27,5)"/><text x="96.9776%" y="1023.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::set_detached (1 samples, 0.02%)</title><rect x="96.7276%" y="997" width="0.0154%" height="15" fill="rgb(228,65,35)"/><text x="96.9776%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.02%)</title><rect x="96.7276%" y="981" width="0.0154%" height="15" fill="rgb(245,93,11)"/><text x="96.9776%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.02%)</title><rect x="96.7276%" y="965" width="0.0154%" height="15" fill="rgb(213,1,31)"/><text x="96.9776%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (55 samples, 0.84%)</title><rect x="96.7430%" y="1029" width="0.8450%" height="15" fill="rgb(237,205,14)"/><text x="96.9930%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (55 samples, 0.84%)</title><rect x="96.7430%" y="1013" width="0.8450%" height="15" fill="rgb(232,118,45)"/><text x="96.9930%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_add (55 samples, 0.84%)</title><rect x="96.7430%" y="997" width="0.8450%" height="15" fill="rgb(218,5,6)"/><text x="96.9930%" y="1007.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (74 samples, 1.14%)</title><rect x="96.6969%" y="1141" width="1.1369%" height="15" fill="rgb(251,87,51)"/><text x="96.9469%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (74 samples, 1.14%)</title><rect x="96.6969%" y="1125" width="1.1369%" height="15" fill="rgb(207,225,20)"/><text x="96.9469%" y="1135.50"></text></g><g><title>rho_runtime::run::{{closure}} (74 samples, 1.14%)</title><rect x="96.6969%" y="1109" width="1.1369%" height="15" fill="rgb(222,78,54)"/><text x="96.9469%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (74 samples, 1.14%)</title><rect x="96.6969%" y="1093" width="1.1369%" height="15" fill="rgb(232,85,16)"/><text x="96.9469%" y="1103.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::run::{{closure}} (74 samples, 1.14%)</title><rect x="96.6969%" y="1077" width="1.1369%" height="15" fill="rgb(244,25,33)"/><text x="96.9469%" y="1087.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::handle_produce (74 samples, 1.14%)</title><rect x="96.6969%" y="1061" width="1.1369%" height="15" fill="rgb(233,24,36)"/><text x="96.9469%" y="1071.50"></text></g><g><title>tokio::sync::oneshot::channel (71 samples, 1.09%)</title><rect x="96.7430%" y="1045" width="1.0908%" height="15" fill="rgb(253,49,54)"/><text x="96.9930%" y="1055.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (16 samples, 0.25%)</title><rect x="97.5880%" y="1029" width="0.2458%" height="15" fill="rgb(245,12,22)"/><text x="97.8380%" y="1039.50"></text></g><g><title>[libc-2.31.so] (16 samples, 0.25%)</title><rect x="97.5880%" y="1013" width="0.2458%" height="15" fill="rgb(253,141,28)"/><text x="97.8380%" y="1023.50"></text></g><g><title>async_std::task::task_locals_wrapper::CURRENT::__getit (2 samples, 0.03%)</title><rect x="97.9106%" y="869" width="0.0307%" height="15" fill="rgb(225,207,27)"/><text x="98.1606%" y="879.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (2 samples, 0.03%)</title><rect x="97.9106%" y="853" width="0.0307%" height="15" fill="rgb(220,84,2)"/><text x="98.1606%" y="863.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (2 samples, 0.03%)</title><rect x="97.9106%" y="837" width="0.0307%" height="15" fill="rgb(224,37,37)"/><text x="98.1606%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.03%)</title><rect x="97.9106%" y="821" width="0.0307%" height="15" fill="rgb(220,143,18)"/><text x="98.1606%" y="831.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (5 samples, 0.08%)</title><rect x="98.2179%" y="757" width="0.0768%" height="15" fill="rgb(210,88,33)"/><text x="98.4679%" y="767.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (5 samples, 0.08%)</title><rect x="98.2179%" y="741" width="0.0768%" height="15" fill="rgb(219,87,51)"/><text x="98.4679%" y="751.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.08%)</title><rect x="98.2179%" y="725" width="0.0768%" height="15" fill="rgb(211,7,35)"/><text x="98.4679%" y="735.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.08%)</title><rect x="98.2179%" y="709" width="0.0768%" height="15" fill="rgb(232,77,2)"/><text x="98.4679%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (4 samples, 0.06%)</title><rect x="98.2332%" y="693" width="0.0615%" height="15" fill="rgb(249,94,25)"/><text x="98.4832%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_add (4 samples, 0.06%)</title><rect x="98.2332%" y="677" width="0.0615%" height="15" fill="rgb(215,112,2)"/><text x="98.4832%" y="687.50"></text></g><g><title>core::mem::drop (16 samples, 0.25%)</title><rect x="98.2947%" y="757" width="0.2458%" height="15" fill="rgb(226,115,48)"/><text x="98.5447%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::util::linked_list::LinkedList&lt;tokio::sync::notify::Waiter,tokio::sync::notify::Waiter&gt;&gt;&gt; (16 samples, 0.25%)</title><rect x="98.2947%" y="741" width="0.2458%" height="15" fill="rgb(249,196,10)"/><text x="98.5447%" y="751.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.25%)</title><rect x="98.2947%" y="725" width="0.2458%" height="15" fill="rgb(237,109,14)"/><text x="98.5447%" y="735.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (16 samples, 0.25%)</title><rect x="98.2947%" y="709" width="0.2458%" height="15" fill="rgb(217,103,53)"/><text x="98.5447%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (16 samples, 0.25%)</title><rect x="98.2947%" y="693" width="0.2458%" height="15" fill="rgb(244,137,9)"/><text x="98.5447%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (16 samples, 0.25%)</title><rect x="98.2947%" y="677" width="0.2458%" height="15" fill="rgb(227,201,3)"/><text x="98.5447%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::util::linked_list::LinkedList&lt;tokio::sync::notify::Waiter,tokio::sync::notify::Waiter&gt;&gt;&gt; (1 samples, 0.02%)</title><rect x="98.5405%" y="757" width="0.0154%" height="15" fill="rgb(243,94,6)"/><text x="98.7905%" y="767.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="98.5405%" y="741" width="0.0154%" height="15" fill="rgb(235,118,5)"/><text x="98.7905%" y="751.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.02%)</title><rect x="98.5405%" y="725" width="0.0154%" height="15" fill="rgb(247,10,30)"/><text x="98.7905%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.02%)</title><rect x="98.5405%" y="709" width="0.0154%" height="15" fill="rgb(205,26,28)"/><text x="98.7905%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.02%)</title><rect x="98.5405%" y="693" width="0.0154%" height="15" fill="rgb(206,99,35)"/><text x="98.7905%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (3 samples, 0.05%)</title><rect x="98.5558%" y="757" width="0.0461%" height="15" fill="rgb(238,130,40)"/><text x="98.8058%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (3 samples, 0.05%)</title><rect x="98.5558%" y="741" width="0.0461%" height="15" fill="rgb(224,126,31)"/><text x="98.8058%" y="751.50"></text></g><g><title>&lt;tokio::sync::notify::Notified as core::future::future::Future&gt;::poll (31 samples, 0.48%)</title><rect x="98.2179%" y="773" width="0.4763%" height="15" fill="rgb(254,105,17)"/><text x="98.4679%" y="783.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (6 samples, 0.09%)</title><rect x="98.6019%" y="757" width="0.0922%" height="15" fill="rgb(216,87,36)"/><text x="98.8519%" y="767.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (6 samples, 0.09%)</title><rect x="98.6019%" y="741" width="0.0922%" height="15" fill="rgb(240,21,12)"/><text x="98.8519%" y="751.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (6 samples, 0.09%)</title><rect x="98.6019%" y="725" width="0.0922%" height="15" fill="rgb(245,192,34)"/><text x="98.8519%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (6 samples, 0.09%)</title><rect x="98.6019%" y="709" width="0.0922%" height="15" fill="rgb(226,100,49)"/><text x="98.8519%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (6 samples, 0.09%)</title><rect x="98.6019%" y="693" width="0.0922%" height="15" fill="rgb(245,188,27)"/><text x="98.8519%" y="703.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll::{{closure}} (56 samples, 0.86%)</title><rect x="97.9413%" y="853" width="0.8603%" height="15" fill="rgb(212,170,8)"/><text x="98.1913%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (56 samples, 0.86%)</title><rect x="97.9413%" y="837" width="0.8603%" height="15" fill="rgb(217,113,29)"/><text x="98.1913%" y="847.50"></text></g><g><title>rho_runtime::run::{{closure}} (56 samples, 0.86%)</title><rect x="97.9413%" y="821" width="0.8603%" height="15" fill="rgb(237,30,3)"/><text x="98.1913%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (55 samples, 0.84%)</title><rect x="97.9567%" y="805" width="0.8450%" height="15" fill="rgb(227,19,28)"/><text x="98.2067%" y="815.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::run::{{closure}} (55 samples, 0.84%)</title><rect x="97.9567%" y="789" width="0.8450%" height="15" fill="rgb(239,172,45)"/><text x="98.2067%" y="799.50"></text></g><g><title>[libc-2.31.so] (7 samples, 0.11%)</title><rect x="98.6941%" y="773" width="0.1075%" height="15" fill="rgb(254,55,39)"/><text x="98.9441%" y="783.50"></text></g><g><title>&lt;async_std::task::builder::SupportTaskLocals&lt;F&gt; as core::future::future::Future&gt;::poll (59 samples, 0.91%)</title><rect x="97.9106%" y="933" width="0.9064%" height="15" fill="rgb(249,208,12)"/><text x="98.1606%" y="943.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current (59 samples, 0.91%)</title><rect x="97.9106%" y="917" width="0.9064%" height="15" fill="rgb(240,52,13)"/><text x="98.1606%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (59 samples, 0.91%)</title><rect x="97.9106%" y="901" width="0.9064%" height="15" fill="rgb(252,149,13)"/><text x="98.1606%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (59 samples, 0.91%)</title><rect x="97.9106%" y="885" width="0.9064%" height="15" fill="rgb(232,81,48)"/><text x="98.1606%" y="895.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (57 samples, 0.88%)</title><rect x="97.9413%" y="869" width="0.8757%" height="15" fill="rgb(222,144,2)"/><text x="98.1913%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}}::Guard&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current&lt;&lt;async_std::task::builder::SupportTaskLocals&lt;core::future::from_generator::GenFuture&lt;rho_runtime::run::{{closure}}&gt;&gt; as core::future::future::Future&gt;::poll::{{closure}},core::task::poll::Poll&lt;()&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (1 samples, 0.02%)</title><rect x="98.8017%" y="853" width="0.0154%" height="15" fill="rgb(216,81,32)"/><text x="99.0517%" y="863.50"></text></g><g><title>&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}}::Guard&lt;F&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.02%)</title><rect x="98.8017%" y="837" width="0.0154%" height="15" fill="rgb(244,78,51)"/><text x="99.0517%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.02%)</title><rect x="98.8017%" y="821" width="0.0154%" height="15" fill="rgb(217,66,21)"/><text x="99.0517%" y="831.50"></text></g><g><title>&lt;async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}}::Guard&lt;F&gt; as core::ops::drop::Drop&gt;::drop::{{closure}} (1 samples, 0.02%)</title><rect x="98.8017%" y="805" width="0.0154%" height="15" fill="rgb(247,101,42)"/><text x="99.0517%" y="815.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.02%)</title><rect x="98.8017%" y="789" width="0.0154%" height="15" fill="rgb(227,81,39)"/><text x="99.0517%" y="799.50"></text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}}::{{closure}} (1 samples, 0.02%)</title><rect x="98.8017%" y="773" width="0.0154%" height="15" fill="rgb(220,223,44)"/><text x="99.0517%" y="783.50"></text></g><g><title>concurrent_queue::full_fence (4 samples, 0.06%)</title><rect x="98.8785%" y="757" width="0.0615%" height="15" fill="rgb(205,218,2)"/><text x="99.1285%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (4 samples, 0.06%)</title><rect x="98.8785%" y="741" width="0.0615%" height="15" fill="rgb(212,207,28)"/><text x="99.1285%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (4 samples, 0.06%)</title><rect x="98.8785%" y="725" width="0.0615%" height="15" fill="rgb(224,12,41)"/><text x="99.1285%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.06%)</title><rect x="98.8785%" y="709" width="0.0615%" height="15" fill="rgb(216,118,12)"/><text x="99.1285%" y="719.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (8 samples, 0.12%)</title><rect x="98.8631%" y="773" width="0.1229%" height="15" fill="rgb(252,97,46)"/><text x="99.1131%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.05%)</title><rect x="98.9399%" y="757" width="0.0461%" height="15" fill="rgb(244,206,19)"/><text x="99.1899%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.05%)</title><rect x="98.9399%" y="741" width="0.0461%" height="15" fill="rgb(231,84,31)"/><text x="99.1899%" y="751.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (12 samples, 0.18%)</title><rect x="98.8324%" y="789" width="0.1844%" height="15" fill="rgb(244,133,0)"/><text x="99.0824%" y="799.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (2 samples, 0.03%)</title><rect x="98.9860%" y="773" width="0.0307%" height="15" fill="rgb(223,15,50)"/><text x="99.2360%" y="783.50"></text></g><g><title>concurrent_queue::full_fence (1 samples, 0.02%)</title><rect x="99.0014%" y="757" width="0.0154%" height="15" fill="rgb(250,118,49)"/><text x="99.2514%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (1 samples, 0.02%)</title><rect x="99.0014%" y="741" width="0.0154%" height="15" fill="rgb(248,25,38)"/><text x="99.2514%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.02%)</title><rect x="99.0014%" y="725" width="0.0154%" height="15" fill="rgb(215,70,14)"/><text x="99.2514%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.02%)</title><rect x="99.0014%" y="709" width="0.0154%" height="15" fill="rgb(215,28,15)"/><text x="99.2514%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.05%)</title><rect x="99.0167%" y="725" width="0.0461%" height="15" fill="rgb(243,6,28)"/><text x="99.2667%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.05%)</title><rect x="99.0167%" y="709" width="0.0461%" height="15" fill="rgb(222,130,1)"/><text x="99.2667%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (6 samples, 0.09%)</title><rect x="99.0167%" y="789" width="0.0922%" height="15" fill="rgb(236,166,44)"/><text x="99.2667%" y="799.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.09%)</title><rect x="99.0167%" y="773" width="0.0922%" height="15" fill="rgb(221,108,14)"/><text x="99.2667%" y="783.50"></text></g><g><title>std::sys_common::rwlock::RWLock::read_unlock (6 samples, 0.09%)</title><rect x="99.0167%" y="757" width="0.0922%" height="15" fill="rgb(252,3,45)"/><text x="99.2667%" y="767.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (6 samples, 0.09%)</title><rect x="99.0167%" y="741" width="0.0922%" height="15" fill="rgb(237,68,30)"/><text x="99.2667%" y="751.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (3 samples, 0.05%)</title><rect x="99.0628%" y="725" width="0.0461%" height="15" fill="rgb(211,79,22)"/><text x="99.3128%" y="735.50"></text></g><g><title>__GI___pthread_rwlock_unlock (3 samples, 0.05%)</title><rect x="99.0628%" y="709" width="0.0461%" height="15" fill="rgb(252,185,21)"/><text x="99.3128%" y="719.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (1 samples, 0.02%)</title><rect x="99.1089%" y="709" width="0.0154%" height="15" fill="rgb(225,189,26)"/><text x="99.3589%" y="719.50"></text></g><g><title>fastrand::usize (2 samples, 0.03%)</title><rect x="99.1089%" y="789" width="0.0307%" height="15" fill="rgb(241,30,40)"/><text x="99.3589%" y="799.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.03%)</title><rect x="99.1089%" y="773" width="0.0307%" height="15" fill="rgb(235,215,44)"/><text x="99.3589%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.03%)</title><rect x="99.1089%" y="757" width="0.0307%" height="15" fill="rgb(205,8,29)"/><text x="99.3589%" y="767.50"></text></g><g><title>fastrand::usize::{{closure}} (2 samples, 0.03%)</title><rect x="99.1089%" y="741" width="0.0307%" height="15" fill="rgb(241,137,42)"/><text x="99.3589%" y="751.50"></text></g><g><title>fastrand::Rng::usize (2 samples, 0.03%)</title><rect x="99.1089%" y="725" width="0.0307%" height="15" fill="rgb(237,155,2)"/><text x="99.3589%" y="735.50"></text></g><g><title>fastrand::Rng::gen_mod_u64 (1 samples, 0.02%)</title><rect x="99.1243%" y="709" width="0.0154%" height="15" fill="rgb(245,29,42)"/><text x="99.3743%" y="719.50"></text></g><g><title>fastrand::Rng::gen_u64 (1 samples, 0.02%)</title><rect x="99.1243%" y="693" width="0.0154%" height="15" fill="rgb(234,101,35)"/><text x="99.3743%" y="703.50"></text></g><g><title>fastrand::Rng::gen_u32 (1 samples, 0.02%)</title><rect x="99.1243%" y="677" width="0.0154%" height="15" fill="rgb(228,64,37)"/><text x="99.3743%" y="687.50"></text></g><g><title>__GI___pthread_rwlock_rdlock (2 samples, 0.03%)</title><rect x="99.1397%" y="741" width="0.0307%" height="15" fill="rgb(217,214,36)"/><text x="99.3897%" y="751.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (24 samples, 0.37%)</title><rect x="98.8170%" y="805" width="0.3687%" height="15" fill="rgb(243,70,3)"/><text x="99.0670%" y="815.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (3 samples, 0.05%)</title><rect x="99.1397%" y="789" width="0.0461%" height="15" fill="rgb(253,158,52)"/><text x="99.3897%" y="799.50"></text></g><g><title>std::sys_common::rwlock::RWLock::read (3 samples, 0.05%)</title><rect x="99.1397%" y="773" width="0.0461%" height="15" fill="rgb(234,111,54)"/><text x="99.3897%" y="783.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (3 samples, 0.05%)</title><rect x="99.1397%" y="757" width="0.0461%" height="15" fill="rgb(217,70,32)"/><text x="99.3897%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.02%)</title><rect x="99.1704%" y="741" width="0.0154%" height="15" fill="rgb(234,18,33)"/><text x="99.4204%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.02%)</title><rect x="99.1704%" y="725" width="0.0154%" height="15" fill="rgb(234,12,49)"/><text x="99.4204%" y="735.50"></text></g><g><title>async_executor::Sleepers::update (1 samples, 0.02%)</title><rect x="99.1857%" y="789" width="0.0154%" height="15" fill="rgb(236,10,21)"/><text x="99.4357%" y="799.50"></text></g><g><title>core::task::wake::Waker::will_wake (1 samples, 0.02%)</title><rect x="99.1857%" y="773" width="0.0154%" height="15" fill="rgb(248,182,45)"/><text x="99.4357%" y="783.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="99.1857%" y="757" width="0.0154%" height="15" fill="rgb(217,95,36)"/><text x="99.4357%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.02%)</title><rect x="99.1857%" y="741" width="0.0154%" height="15" fill="rgb(212,110,31)"/><text x="99.4357%" y="751.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (1 samples, 0.02%)</title><rect x="99.1857%" y="725" width="0.0154%" height="15" fill="rgb(206,32,53)"/><text x="99.4357%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (3 samples, 0.05%)</title><rect x="99.2011%" y="789" width="0.0461%" height="15" fill="rgb(246,141,37)"/><text x="99.4511%" y="799.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.05%)</title><rect x="99.2011%" y="773" width="0.0461%" height="15" fill="rgb(219,16,7)"/><text x="99.4511%" y="783.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (3 samples, 0.05%)</title><rect x="99.2011%" y="757" width="0.0461%" height="15" fill="rgb(230,205,45)"/><text x="99.4511%" y="767.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (3 samples, 0.05%)</title><rect x="99.2011%" y="741" width="0.0461%" height="15" fill="rgb(231,43,49)"/><text x="99.4511%" y="751.50"></text></g><g><title>__GI___pthread_mutex_unlock (3 samples, 0.05%)</title><rect x="99.2011%" y="725" width="0.0461%" height="15" fill="rgb(212,106,34)"/><text x="99.4511%" y="735.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (92 samples, 1.41%)</title><rect x="97.9106%" y="949" width="1.4134%" height="15" fill="rgb(206,83,17)"/><text x="98.1606%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (33 samples, 0.51%)</title><rect x="98.8170%" y="933" width="0.5070%" height="15" fill="rgb(244,154,49)"/><text x="99.0670%" y="943.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (33 samples, 0.51%)</title><rect x="98.8170%" y="917" width="0.5070%" height="15" fill="rgb(244,149,49)"/><text x="99.0670%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (33 samples, 0.51%)</title><rect x="98.8170%" y="901" width="0.5070%" height="15" fill="rgb(227,134,18)"/><text x="99.0670%" y="911.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (33 samples, 0.51%)</title><rect x="98.8170%" y="885" width="0.5070%" height="15" fill="rgb(237,116,36)"/><text x="99.0670%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (33 samples, 0.51%)</title><rect x="98.8170%" y="869" width="0.5070%" height="15" fill="rgb(205,129,40)"/><text x="99.0670%" y="879.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (33 samples, 0.51%)</title><rect x="98.8170%" y="853" width="0.5070%" height="15" fill="rgb(236,178,4)"/><text x="99.0670%" y="863.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (33 samples, 0.51%)</title><rect x="98.8170%" y="837" width="0.5070%" height="15" fill="rgb(251,76,53)"/><text x="99.0670%" y="847.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (33 samples, 0.51%)</title><rect x="98.8170%" y="821" width="0.5070%" height="15" fill="rgb(242,92,40)"/><text x="99.0670%" y="831.50"></text></g><g><title>async_executor::Ticker::sleep (9 samples, 0.14%)</title><rect x="99.1857%" y="805" width="0.1383%" height="15" fill="rgb(209,45,30)"/><text x="99.4357%" y="815.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (5 samples, 0.08%)</title><rect x="99.2472%" y="789" width="0.0768%" height="15" fill="rgb(218,157,36)"/><text x="99.4972%" y="799.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (5 samples, 0.08%)</title><rect x="99.2472%" y="773" width="0.0768%" height="15" fill="rgb(222,186,16)"/><text x="99.4972%" y="783.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (4 samples, 0.06%)</title><rect x="99.2626%" y="757" width="0.0615%" height="15" fill="rgb(254,72,35)"/><text x="99.5126%" y="767.50"></text></g><g><title>__GI___pthread_mutex_lock (4 samples, 0.06%)</title><rect x="99.2626%" y="741" width="0.0615%" height="15" fill="rgb(224,25,35)"/><text x="99.5126%" y="751.50"></text></g><g><title>[unknown] (1,276 samples, 19.60%)</title><rect x="79.7358%" y="1205" width="19.6036%" height="15" fill="rgb(206,135,52)"/><text x="79.9858%" y="1215.50">[unknown]</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (172 samples, 2.64%)</title><rect x="96.6969%" y="1189" width="2.6425%" height="15" fill="rgb(229,174,47)"/><text x="96.9469%" y="1199.50">st..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (172 samples, 2.64%)</title><rect x="96.6969%" y="1173" width="2.6425%" height="15" fill="rgb(242,184,21)"/><text x="96.9469%" y="1183.50">st..</text></g><g><title>async_std::task::task_locals_wrapper::TaskLocalsWrapper::set_current::{{closure}} (172 samples, 2.64%)</title><rect x="96.6969%" y="1157" width="2.6425%" height="15" fill="rgb(213,22,45)"/><text x="96.9469%" y="1167.50">as..</text></g><g><title>async_std::task::builder::Builder::blocking::{{closure}}::{{closure}} (98 samples, 1.51%)</title><rect x="97.8338%" y="1141" width="1.5056%" height="15" fill="rgb(237,81,54)"/><text x="98.0838%" y="1151.50"></text></g><g><title>async_global_executor::executor::block_on (98 samples, 1.51%)</title><rect x="97.8338%" y="1125" width="1.5056%" height="15" fill="rgb(248,177,18)"/><text x="98.0838%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (98 samples, 1.51%)</title><rect x="97.8338%" y="1109" width="1.5056%" height="15" fill="rgb(254,31,16)"/><text x="98.0838%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (98 samples, 1.51%)</title><rect x="97.8338%" y="1093" width="1.5056%" height="15" fill="rgb(235,20,31)"/><text x="98.0838%" y="1103.50"></text></g><g><title>async_global_executor::executor::block_on::{{closure}} (98 samples, 1.51%)</title><rect x="97.8338%" y="1077" width="1.5056%" height="15" fill="rgb(240,56,43)"/><text x="98.0838%" y="1087.50"></text></g><g><title>async_global_executor::reactor::block_on (98 samples, 1.51%)</title><rect x="97.8338%" y="1061" width="1.5056%" height="15" fill="rgb(237,197,51)"/><text x="98.0838%" y="1071.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (98 samples, 1.51%)</title><rect x="97.8338%" y="1045" width="1.5056%" height="15" fill="rgb(241,162,44)"/><text x="98.0838%" y="1055.50"></text></g><g><title>async_io::driver::block_on (98 samples, 1.51%)</title><rect x="97.8338%" y="1029" width="1.5056%" height="15" fill="rgb(224,23,20)"/><text x="98.0838%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (98 samples, 1.51%)</title><rect x="97.8338%" y="1013" width="1.5056%" height="15" fill="rgb(250,109,34)"/><text x="98.0838%" y="1023.50"></text></g><g><title>async_executor::LocalExecutor::run::{{closure}} (98 samples, 1.51%)</title><rect x="97.8338%" y="997" width="1.5056%" height="15" fill="rgb(214,175,50)"/><text x="98.0838%" y="1007.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (93 samples, 1.43%)</title><rect x="97.9106%" y="981" width="1.4288%" height="15" fill="rgb(213,182,5)"/><text x="98.1606%" y="991.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (93 samples, 1.43%)</title><rect x="97.9106%" y="965" width="1.4288%" height="15" fill="rgb(209,199,19)"/><text x="98.1606%" y="975.50"></text></g><g><title>async_executor::Executor::state (1 samples, 0.02%)</title><rect x="99.3240%" y="949" width="0.0154%" height="15" fill="rgb(236,224,42)"/><text x="99.5740%" y="959.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.02%)</title><rect x="99.3240%" y="933" width="0.0154%" height="15" fill="rgb(246,226,29)"/><text x="99.5740%" y="943.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.02%)</title><rect x="99.3240%" y="917" width="0.0154%" height="15" fill="rgb(227,223,11)"/><text x="99.5740%" y="927.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.02%)</title><rect x="99.3240%" y="901" width="0.0154%" height="15" fill="rgb(219,7,51)"/><text x="99.5740%" y="911.50"></text></g><g><title>once_cell::imp::initialize_inner (1 samples, 0.02%)</title><rect x="99.3240%" y="885" width="0.0154%" height="15" fill="rgb(245,167,10)"/><text x="99.5740%" y="895.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (1 samples, 0.02%)</title><rect x="99.3240%" y="869" width="0.0154%" height="15" fill="rgb(237,224,16)"/><text x="99.5740%" y="879.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (1 samples, 0.02%)</title><rect x="99.3240%" y="853" width="0.0154%" height="15" fill="rgb(226,132,13)"/><text x="99.5740%" y="863.50"></text></g><g><title>async_executor::Executor::state::{{closure}} (1 samples, 0.02%)</title><rect x="99.3240%" y="837" width="0.0154%" height="15" fill="rgb(214,140,3)"/><text x="99.5740%" y="847.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.02%)</title><rect x="99.3240%" y="821" width="0.0154%" height="15" fill="rgb(221,177,4)"/><text x="99.5740%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.3240%" y="805" width="0.0154%" height="15" fill="rgb(238,139,3)"/><text x="99.5740%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.3240%" y="789" width="0.0154%" height="15" fill="rgb(216,17,39)"/><text x="99.5740%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.3240%" y="773" width="0.0154%" height="15" fill="rgb(238,120,9)"/><text x="99.5740%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.3240%" y="757" width="0.0154%" height="15" fill="rgb(244,92,53)"/><text x="99.5740%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.3240%" y="741" width="0.0154%" height="15" fill="rgb(224,148,33)"/><text x="99.5740%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.3240%" y="725" width="0.0154%" height="15" fill="rgb(243,6,36)"/><text x="99.5740%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.02%)</title><rect x="99.3240%" y="709" width="0.0154%" height="15" fill="rgb(230,102,11)"/><text x="99.5740%" y="719.50"></text></g><g><title>__libc_csu_init (1 samples, 0.02%)</title><rect x="99.3394%" y="1173" width="0.0154%" height="15" fill="rgb(234,148,36)"/><text x="99.5894%" y="1183.50"></text></g><g><title>malloc_init_hard (1 samples, 0.02%)</title><rect x="99.3394%" y="1157" width="0.0154%" height="15" fill="rgb(251,153,25)"/><text x="99.5894%" y="1167.50"></text></g><g><title>malloc_init_hard_a0_locked (1 samples, 0.02%)</title><rect x="99.3394%" y="1141" width="0.0154%" height="15" fill="rgb(215,129,8)"/><text x="99.5894%" y="1151.50"></text></g><g><title>_rjem_je_base_boot (1 samples, 0.02%)</title><rect x="99.3394%" y="1125" width="0.0154%" height="15" fill="rgb(224,128,35)"/><text x="99.5894%" y="1135.50"></text></g><g><title>_rjem_je_base_new (1 samples, 0.02%)</title><rect x="99.3394%" y="1109" width="0.0154%" height="15" fill="rgb(237,56,52)"/><text x="99.5894%" y="1119.50"></text></g><g><title>base_block_alloc (1 samples, 0.02%)</title><rect x="99.3394%" y="1093" width="0.0154%" height="15" fill="rgb(234,213,19)"/><text x="99.5894%" y="1103.50"></text></g><g><title>async_std::task::block_on::block_on (5 samples, 0.08%)</title><rect x="99.3547%" y="1013" width="0.0768%" height="15" fill="rgb(252,82,23)"/><text x="99.6047%" y="1023.50"></text></g><g><title>async_std::task::builder::Builder::blocking (5 samples, 0.08%)</title><rect x="99.3547%" y="997" width="0.0768%" height="15" fill="rgb(254,201,21)"/><text x="99.6047%" y="1007.50"></text></g><g><title>async_std::task::builder::Builder::build (5 samples, 0.08%)</title><rect x="99.3547%" y="981" width="0.0768%" height="15" fill="rgb(250,186,11)"/><text x="99.6047%" y="991.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (5 samples, 0.08%)</title><rect x="99.3547%" y="965" width="0.0768%" height="15" fill="rgb(211,174,5)"/><text x="99.6047%" y="975.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (5 samples, 0.08%)</title><rect x="99.3547%" y="949" width="0.0768%" height="15" fill="rgb(214,121,10)"/><text x="99.6047%" y="959.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (5 samples, 0.08%)</title><rect x="99.3547%" y="933" width="0.0768%" height="15" fill="rgb(241,66,2)"/><text x="99.6047%" y="943.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (5 samples, 0.08%)</title><rect x="99.3547%" y="917" width="0.0768%" height="15" fill="rgb(220,167,19)"/><text x="99.6047%" y="927.50"></text></g><g><title>once_cell::imp::initialize_inner (5 samples, 0.08%)</title><rect x="99.3547%" y="901" width="0.0768%" height="15" fill="rgb(231,54,50)"/><text x="99.6047%" y="911.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (5 samples, 0.08%)</title><rect x="99.3547%" y="885" width="0.0768%" height="15" fill="rgb(239,217,53)"/><text x="99.6047%" y="895.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (5 samples, 0.08%)</title><rect x="99.3547%" y="869" width="0.0768%" height="15" fill="rgb(248,8,0)"/><text x="99.6047%" y="879.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force::{{closure}} (5 samples, 0.08%)</title><rect x="99.3547%" y="853" width="0.0768%" height="15" fill="rgb(229,118,37)"/><text x="99.6047%" y="863.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.08%)</title><rect x="99.3547%" y="837" width="0.0768%" height="15" fill="rgb(253,223,43)"/><text x="99.6047%" y="847.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.08%)</title><rect x="99.3547%" y="821" width="0.0768%" height="15" fill="rgb(211,77,36)"/><text x="99.6047%" y="831.50"></text></g><g><title>async_std::rt::RUNTIME::{{closure}} (5 samples, 0.08%)</title><rect x="99.3547%" y="805" width="0.0768%" height="15" fill="rgb(219,3,53)"/><text x="99.6047%" y="815.50"></text></g><g><title>async_global_executor::init::init_with_config (5 samples, 0.08%)</title><rect x="99.3547%" y="789" width="0.0768%" height="15" fill="rgb(244,45,42)"/><text x="99.6047%" y="799.50"></text></g><g><title>async_global_executor::init::init (5 samples, 0.08%)</title><rect x="99.3547%" y="773" width="0.0768%" height="15" fill="rgb(225,95,27)"/><text x="99.6047%" y="783.50"></text></g><g><title>async_global_executor::reactor::block_on (5 samples, 0.08%)</title><rect x="99.3547%" y="757" width="0.0768%" height="15" fill="rgb(207,74,8)"/><text x="99.6047%" y="767.50"></text></g><g><title>async_global_executor::reactor::block_on::{{closure}} (5 samples, 0.08%)</title><rect x="99.3547%" y="741" width="0.0768%" height="15" fill="rgb(243,63,36)"/><text x="99.6047%" y="751.50"></text></g><g><title>async_io::driver::block_on (5 samples, 0.08%)</title><rect x="99.3547%" y="725" width="0.0768%" height="15" fill="rgb(211,180,12)"/><text x="99.6047%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_io::driver::CallOnDrop&lt;async_io::driver::block_on&lt;(),core::future::from_generator::GenFuture&lt;async_global_executor::init::init::{{closure}}&gt;&gt;::{{closure}}&gt;&gt; (5 samples, 0.08%)</title><rect x="99.3547%" y="709" width="0.0768%" height="15" fill="rgb(254,166,49)"/><text x="99.6047%" y="719.50"></text></g><g><title>&lt;async_io::driver::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.08%)</title><rect x="99.3547%" y="693" width="0.0768%" height="15" fill="rgb(205,19,0)"/><text x="99.6047%" y="703.50"></text></g><g><title>async_io::driver::block_on::{{closure}} (5 samples, 0.08%)</title><rect x="99.3547%" y="677" width="0.0768%" height="15" fill="rgb(224,172,32)"/><text x="99.6047%" y="687.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.08%)</title><rect x="99.3547%" y="661" width="0.0768%" height="15" fill="rgb(254,136,30)"/><text x="99.6047%" y="671.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (5 samples, 0.08%)</title><rect x="99.3547%" y="645" width="0.0768%" height="15" fill="rgb(246,19,35)"/><text x="99.6047%" y="655.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (5 samples, 0.08%)</title><rect x="99.3547%" y="629" width="0.0768%" height="15" fill="rgb(219,24,36)"/><text x="99.6047%" y="639.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (5 samples, 0.08%)</title><rect x="99.3547%" y="613" width="0.0768%" height="15" fill="rgb(251,55,1)"/><text x="99.6047%" y="623.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (5 samples, 0.08%)</title><rect x="99.3547%" y="597" width="0.0768%" height="15" fill="rgb(218,117,39)"/><text x="99.6047%" y="607.50"></text></g><g><title>once_cell::imp::initialize_inner (5 samples, 0.08%)</title><rect x="99.3547%" y="581" width="0.0768%" height="15" fill="rgb(248,169,11)"/><text x="99.6047%" y="591.50"></text></g><g><title>once_cell::imp::wait (5 samples, 0.08%)</title><rect x="99.3547%" y="565" width="0.0768%" height="15" fill="rgb(244,40,44)"/><text x="99.6047%" y="575.50"></text></g><g><title>std::thread::park (5 samples, 0.08%)</title><rect x="99.3547%" y="549" width="0.0768%" height="15" fill="rgb(234,62,37)"/><text x="99.6047%" y="559.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (5 samples, 0.08%)</title><rect x="99.3547%" y="533" width="0.0768%" height="15" fill="rgb(207,117,42)"/><text x="99.6047%" y="543.50"></text></g><g><title>std::sys::unix::futex::futex_wait (5 samples, 0.08%)</title><rect x="99.3547%" y="517" width="0.0768%" height="15" fill="rgb(213,43,2)"/><text x="99.6047%" y="527.50"></text></g><g><title>syscall (5 samples, 0.08%)</title><rect x="99.3547%" y="501" width="0.0768%" height="15" fill="rgb(244,202,51)"/><text x="99.6047%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="99.3547%" y="485" width="0.0768%" height="15" fill="rgb(253,174,46)"/><text x="99.6047%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="99.3547%" y="469" width="0.0768%" height="15" fill="rgb(251,23,1)"/><text x="99.6047%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="99.3547%" y="453" width="0.0768%" height="15" fill="rgb(253,26,1)"/><text x="99.6047%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="99.3547%" y="437" width="0.0768%" height="15" fill="rgb(216,89,31)"/><text x="99.6047%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="99.3547%" y="421" width="0.0768%" height="15" fill="rgb(209,109,5)"/><text x="99.6047%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="99.3547%" y="405" width="0.0768%" height="15" fill="rgb(229,63,13)"/><text x="99.6047%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="99.3547%" y="389" width="0.0768%" height="15" fill="rgb(238,137,54)"/><text x="99.6047%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="99.3547%" y="373" width="0.0768%" height="15" fill="rgb(228,1,9)"/><text x="99.6047%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="99.3547%" y="357" width="0.0768%" height="15" fill="rgb(249,120,48)"/><text x="99.6047%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="99.3547%" y="341" width="0.0768%" height="15" fill="rgb(209,72,36)"/><text x="99.6047%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="99.3547%" y="325" width="0.0768%" height="15" fill="rgb(247,98,49)"/><text x="99.6047%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="99.3547%" y="309" width="0.0768%" height="15" fill="rgb(233,75,36)"/><text x="99.6047%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="99.3547%" y="293" width="0.0768%" height="15" fill="rgb(225,14,24)"/><text x="99.6047%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="99.3547%" y="277" width="0.0768%" height="15" fill="rgb(237,193,20)"/><text x="99.6047%" y="287.50"></text></g><g><title>_start (11 samples, 0.17%)</title><rect x="99.3394%" y="1205" width="0.1690%" height="15" fill="rgb(239,122,19)"/><text x="99.5894%" y="1215.50"></text></g><g><title>__libc_start_main (11 samples, 0.17%)</title><rect x="99.3394%" y="1189" width="0.1690%" height="15" fill="rgb(231,220,10)"/><text x="99.5894%" y="1199.50"></text></g><g><title>main (10 samples, 0.15%)</title><rect x="99.3547%" y="1173" width="0.1536%" height="15" fill="rgb(220,66,15)"/><text x="99.6047%" y="1183.50"></text></g><g><title>std::rt::lang_start_internal (10 samples, 0.15%)</title><rect x="99.3547%" y="1157" width="0.1536%" height="15" fill="rgb(215,171,52)"/><text x="99.6047%" y="1167.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 0.15%)</title><rect x="99.3547%" y="1141" width="0.1536%" height="15" fill="rgb(241,169,50)"/><text x="99.6047%" y="1151.50"></text></g><g><title>std::panicking::try (10 samples, 0.15%)</title><rect x="99.3547%" y="1125" width="0.1536%" height="15" fill="rgb(236,189,0)"/><text x="99.6047%" y="1135.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 0.15%)</title><rect x="99.3547%" y="1109" width="0.1536%" height="15" fill="rgb(217,147,20)"/><text x="99.6047%" y="1119.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (10 samples, 0.15%)</title><rect x="99.3547%" y="1093" width="0.1536%" height="15" fill="rgb(206,188,39)"/><text x="99.6047%" y="1103.50"></text></g><g><title>std::rt::lang_start::{{closure}} (10 samples, 0.15%)</title><rect x="99.3547%" y="1077" width="0.1536%" height="15" fill="rgb(227,118,25)"/><text x="99.6047%" y="1087.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (10 samples, 0.15%)</title><rect x="99.3547%" y="1061" width="0.1536%" height="15" fill="rgb(248,171,40)"/><text x="99.6047%" y="1071.50"></text></g><g><title>core::ops::function::FnOnce::call_once (10 samples, 0.15%)</title><rect x="99.3547%" y="1045" width="0.1536%" height="15" fill="rgb(251,90,54)"/><text x="99.6047%" y="1055.50"></text></g><g><title>rho_runtime::main (10 samples, 0.15%)</title><rect x="99.3547%" y="1029" width="0.1536%" height="15" fill="rgb(234,11,46)"/><text x="99.6047%" y="1039.50"></text></g><g><title>rho_runtime::run_normalizer (5 samples, 0.08%)</title><rect x="99.4316%" y="1013" width="0.0768%" height="15" fill="rgb(229,134,13)"/><text x="99.6816%" y="1023.50"></text></g><g><title>prost::message::Message::decode (5 samples, 0.08%)</title><rect x="99.4316%" y="997" width="0.0768%" height="15" fill="rgb(223,129,3)"/><text x="99.6816%" y="1007.50"></text></g><g><title>prost::message::Message::merge (5 samples, 0.08%)</title><rect x="99.4316%" y="981" width="0.0768%" height="15" fill="rgb(221,124,13)"/><text x="99.6816%" y="991.50"></text></g><g><title>&lt;model::rho_types::NormalizeResult as prost::message::Message&gt;::merge_field (5 samples, 0.08%)</title><rect x="99.4316%" y="965" width="0.0768%" height="15" fill="rgb(234,3,18)"/><text x="99.6816%" y="975.50"></text></g><g><title>prost::encoding::message::merge (5 samples, 0.08%)</title><rect x="99.4316%" y="949" width="0.0768%" height="15" fill="rgb(249,199,20)"/><text x="99.6816%" y="959.50"></text></g><g><title>prost::encoding::merge_loop (5 samples, 0.08%)</title><rect x="99.4316%" y="933" width="0.0768%" height="15" fill="rgb(224,134,6)"/><text x="99.6816%" y="943.50"></text></g><g><title>prost::encoding::message::merge::{{closure}} (5 samples, 0.08%)</title><rect x="99.4316%" y="917" width="0.0768%" height="15" fill="rgb(254,83,26)"/><text x="99.6816%" y="927.50"></text></g><g><title>&lt;model::rho_types::Par as prost::message::Message&gt;::merge_field (5 samples, 0.08%)</title><rect x="99.4316%" y="901" width="0.0768%" height="15" fill="rgb(217,88,9)"/><text x="99.6816%" y="911.50"></text></g><g><title>prost::encoding::message::merge_repeated (5 samples, 0.08%)</title><rect x="99.4316%" y="885" width="0.0768%" height="15" fill="rgb(225,73,2)"/><text x="99.6816%" y="895.50"></text></g><g><title>prost::encoding::message::merge (5 samples, 0.08%)</title><rect x="99.4316%" y="869" width="0.0768%" height="15" fill="rgb(226,44,39)"/><text x="99.6816%" y="879.50"></text></g><g><title>prost::encoding::merge_loop (5 samples, 0.08%)</title><rect x="99.4316%" y="853" width="0.0768%" height="15" fill="rgb(228,53,17)"/><text x="99.6816%" y="863.50"></text></g><g><title>prost::encoding::message::merge::{{closure}} (5 samples, 0.08%)</title><rect x="99.4316%" y="837" width="0.0768%" height="15" fill="rgb(212,27,27)"/><text x="99.6816%" y="847.50"></text></g><g><title>&lt;model::rho_types::New as prost::message::Message&gt;::merge_field (5 samples, 0.08%)</title><rect x="99.4316%" y="821" width="0.0768%" height="15" fill="rgb(241,50,6)"/><text x="99.6816%" y="831.50"></text></g><g><title>prost::encoding::message::merge (5 samples, 0.08%)</title><rect x="99.4316%" y="805" width="0.0768%" height="15" fill="rgb(225,28,51)"/><text x="99.6816%" y="815.50"></text></g><g><title>prost::encoding::merge_loop (5 samples, 0.08%)</title><rect x="99.4316%" y="789" width="0.0768%" height="15" fill="rgb(215,33,16)"/><text x="99.6816%" y="799.50"></text></g><g><title>prost::encoding::message::merge::{{closure}} (5 samples, 0.08%)</title><rect x="99.4316%" y="773" width="0.0768%" height="15" fill="rgb(243,40,39)"/><text x="99.6816%" y="783.50"></text></g><g><title>&lt;model::rho_types::Par as prost::message::Message&gt;::merge_field (5 samples, 0.08%)</title><rect x="99.4316%" y="757" width="0.0768%" height="15" fill="rgb(225,11,42)"/><text x="99.6816%" y="767.50"></text></g><g><title>prost::encoding::message::merge_repeated (5 samples, 0.08%)</title><rect x="99.4316%" y="741" width="0.0768%" height="15" fill="rgb(241,220,38)"/><text x="99.6816%" y="751.50"></text></g><g><title>prost::encoding::message::merge (5 samples, 0.08%)</title><rect x="99.4316%" y="725" width="0.0768%" height="15" fill="rgb(244,52,35)"/><text x="99.6816%" y="735.50"></text></g><g><title>prost::encoding::merge_loop (5 samples, 0.08%)</title><rect x="99.4316%" y="709" width="0.0768%" height="15" fill="rgb(246,42,46)"/><text x="99.6816%" y="719.50"></text></g><g><title>prost::encoding::message::merge::{{closure}} (5 samples, 0.08%)</title><rect x="99.4316%" y="693" width="0.0768%" height="15" fill="rgb(205,184,13)"/><text x="99.6816%" y="703.50"></text></g><g><title>&lt;model::rho_types::Send as prost::message::Message&gt;::merge_field (5 samples, 0.08%)</title><rect x="99.4316%" y="677" width="0.0768%" height="15" fill="rgb(209,48,36)"/><text x="99.6816%" y="687.50"></text></g><g><title>prost::encoding::message::merge (5 samples, 0.08%)</title><rect x="99.4316%" y="661" width="0.0768%" height="15" fill="rgb(244,34,51)"/><text x="99.6816%" y="671.50"></text></g><g><title>prost::encoding::merge_loop (5 samples, 0.08%)</title><rect x="99.4316%" y="645" width="0.0768%" height="15" fill="rgb(221,107,33)"/><text x="99.6816%" y="655.50"></text></g><g><title>prost::encoding::message::merge::{{closure}} (5 samples, 0.08%)</title><rect x="99.4316%" y="629" width="0.0768%" height="15" fill="rgb(224,203,12)"/><text x="99.6816%" y="639.50"></text></g><g><title>&lt;model::rho_types::Par as prost::message::Message&gt;::merge_field (5 samples, 0.08%)</title><rect x="99.4316%" y="613" width="0.0768%" height="15" fill="rgb(230,215,18)"/><text x="99.6816%" y="623.50"></text></g><g><title>prost::encoding::message::merge (5 samples, 0.08%)</title><rect x="99.4316%" y="597" width="0.0768%" height="15" fill="rgb(206,185,35)"/><text x="99.6816%" y="607.50"></text></g><g><title>prost::encoding::merge_loop (5 samples, 0.08%)</title><rect x="99.4316%" y="581" width="0.0768%" height="15" fill="rgb(228,140,34)"/><text x="99.6816%" y="591.50"></text></g><g><title>prost::encoding::message::merge::{{closure}} (5 samples, 0.08%)</title><rect x="99.4316%" y="565" width="0.0768%" height="15" fill="rgb(208,93,13)"/><text x="99.6816%" y="575.50"></text></g><g><title>&lt;model::bitset::BitSet as prost::message::Message&gt;::merge_field (5 samples, 0.08%)</title><rect x="99.4316%" y="549" width="0.0768%" height="15" fill="rgb(221,193,39)"/><text x="99.6816%" y="559.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (5 samples, 0.08%)</title><rect x="99.4316%" y="533" width="0.0768%" height="15" fill="rgb(241,132,34)"/><text x="99.6816%" y="543.50"></text></g><g><title>&lt;model::bitset::BitSet as prost::message::Message&gt;::merge_field::{{closure}} (5 samples, 0.08%)</title><rect x="99.4316%" y="517" width="0.0768%" height="15" fill="rgb(221,141,10)"/><text x="99.6816%" y="527.50"></text></g><g><title>bit_vec::BitVec::from_bytes (5 samples, 0.08%)</title><rect x="99.4316%" y="501" width="0.0768%" height="15" fill="rgb(226,90,31)"/><text x="99.6816%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="99.4316%" y="485" width="0.0768%" height="15" fill="rgb(243,75,5)"/><text x="99.6816%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="99.4316%" y="469" width="0.0768%" height="15" fill="rgb(227,156,21)"/><text x="99.6816%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="99.4316%" y="453" width="0.0768%" height="15" fill="rgb(250,195,8)"/><text x="99.6816%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="99.4316%" y="437" width="0.0768%" height="15" fill="rgb(220,134,5)"/><text x="99.6816%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="99.4316%" y="421" width="0.0768%" height="15" fill="rgb(246,106,34)"/><text x="99.6816%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="99.4316%" y="405" width="0.0768%" height="15" fill="rgb(205,1,4)"/><text x="99.6816%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="99.4316%" y="389" width="0.0768%" height="15" fill="rgb(224,151,29)"/><text x="99.6816%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="99.4316%" y="373" width="0.0768%" height="15" fill="rgb(251,196,0)"/><text x="99.6816%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="99.4316%" y="357" width="0.0768%" height="15" fill="rgb(212,127,0)"/><text x="99.6816%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="99.4316%" y="341" width="0.0768%" height="15" fill="rgb(236,71,53)"/><text x="99.6816%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="99.4316%" y="325" width="0.0768%" height="15" fill="rgb(227,99,0)"/><text x="99.6816%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="99.4316%" y="309" width="0.0768%" height="15" fill="rgb(239,89,21)"/><text x="99.6816%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="99.4316%" y="293" width="0.0768%" height="15" fill="rgb(243,122,19)"/><text x="99.6816%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="99.4316%" y="277" width="0.0768%" height="15" fill="rgb(229,192,45)"/><text x="99.6816%" y="287.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="99.4316%" y="261" width="0.0768%" height="15" fill="rgb(235,165,35)"/><text x="99.6816%" y="271.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="99.4316%" y="245" width="0.0768%" height="15" fill="rgb(253,202,0)"/><text x="99.6816%" y="255.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="99.4316%" y="229" width="0.0768%" height="15" fill="rgb(235,51,20)"/><text x="99.6816%" y="239.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="99.4316%" y="213" width="0.0768%" height="15" fill="rgb(218,95,46)"/><text x="99.6816%" y="223.50"></text></g><g><title>[unknown] (25 samples, 0.38%)</title><rect x="99.5084%" y="1189" width="0.3841%" height="15" fill="rgb(212,81,10)"/><text x="99.7584%" y="1199.50"></text></g><g><title>[unknown] (25 samples, 0.38%)</title><rect x="99.5084%" y="1173" width="0.3841%" height="15" fill="rgb(240,59,0)"/><text x="99.7584%" y="1183.50"></text></g><g><title>[unknown] (23 samples, 0.35%)</title><rect x="99.5391%" y="1157" width="0.3534%" height="15" fill="rgb(212,191,42)"/><text x="99.7891%" y="1167.50"></text></g><g><title>[unknown] (23 samples, 0.35%)</title><rect x="99.5391%" y="1141" width="0.3534%" height="15" fill="rgb(233,140,3)"/><text x="99.7891%" y="1151.50"></text></g><g><title>[unknown] (22 samples, 0.34%)</title><rect x="99.5545%" y="1125" width="0.3380%" height="15" fill="rgb(215,69,23)"/><text x="99.8045%" y="1135.50"></text></g><g><title>[unknown] (22 samples, 0.34%)</title><rect x="99.5545%" y="1109" width="0.3380%" height="15" fill="rgb(240,202,20)"/><text x="99.8045%" y="1119.50"></text></g><g><title>[unknown] (22 samples, 0.34%)</title><rect x="99.5545%" y="1093" width="0.3380%" height="15" fill="rgb(209,146,50)"/><text x="99.8045%" y="1103.50"></text></g><g><title>[unknown] (22 samples, 0.34%)</title><rect x="99.5545%" y="1077" width="0.3380%" height="15" fill="rgb(253,102,54)"/><text x="99.8045%" y="1087.50"></text></g><g><title>rho_runtime (1,331 samples, 20.45%)</title><rect x="79.5360%" y="1221" width="20.4486%" height="15" fill="rgb(250,173,47)"/><text x="79.7860%" y="1231.50">rho_runtime</text></g><g><title>clone (31 samples, 0.48%)</title><rect x="99.5084%" y="1205" width="0.4763%" height="15" fill="rgb(232,142,7)"/><text x="99.7584%" y="1215.50"></text></g><g><title>start_thread (6 samples, 0.09%)</title><rect x="99.8925%" y="1189" width="0.0922%" height="15" fill="rgb(230,157,47)"/><text x="100.1425%" y="1199.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (6 samples, 0.09%)</title><rect x="99.8925%" y="1173" width="0.0922%" height="15" fill="rgb(214,177,35)"/><text x="100.1425%" y="1183.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (6 samples, 0.09%)</title><rect x="99.8925%" y="1157" width="0.0922%" height="15" fill="rgb(234,119,46)"/><text x="100.1425%" y="1167.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (6 samples, 0.09%)</title><rect x="99.8925%" y="1141" width="0.0922%" height="15" fill="rgb(241,180,50)"/><text x="100.1425%" y="1151.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (6 samples, 0.09%)</title><rect x="99.8925%" y="1125" width="0.0922%" height="15" fill="rgb(221,54,25)"/><text x="100.1425%" y="1135.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (6 samples, 0.09%)</title><rect x="99.8925%" y="1109" width="0.0922%" height="15" fill="rgb(209,157,44)"/><text x="100.1425%" y="1119.50"></text></g><g><title>mmap64 (6 samples, 0.09%)</title><rect x="99.8925%" y="1093" width="0.0922%" height="15" fill="rgb(246,115,41)"/><text x="100.1425%" y="1103.50"></text></g><g><title>[unknown] (6 samples, 0.09%)</title><rect x="99.8925%" y="1077" width="0.0922%" height="15" fill="rgb(229,86,1)"/><text x="100.1425%" y="1087.50"></text></g><g><title>[unknown] (6 samples, 0.09%)</title><rect x="99.8925%" y="1061" width="0.0922%" height="15" fill="rgb(240,108,53)"/><text x="100.1425%" y="1071.50"></text></g><g><title>[unknown] (6 samples, 0.09%)</title><rect x="99.8925%" y="1045" width="0.0922%" height="15" fill="rgb(227,134,2)"/><text x="100.1425%" y="1055.50"></text></g><g><title>[unknown] (6 samples, 0.09%)</title><rect x="99.8925%" y="1029" width="0.0922%" height="15" fill="rgb(213,129,25)"/><text x="100.1425%" y="1039.50"></text></g><g><title>[unknown] (6 samples, 0.09%)</title><rect x="99.8925%" y="1013" width="0.0922%" height="15" fill="rgb(226,35,21)"/><text x="100.1425%" y="1023.50"></text></g><g><title>[unknown] (6 samples, 0.09%)</title><rect x="99.8925%" y="997" width="0.0922%" height="15" fill="rgb(208,129,26)"/><text x="100.1425%" y="1007.50"></text></g><g><title>[unknown] (6 samples, 0.09%)</title><rect x="99.8925%" y="981" width="0.0922%" height="15" fill="rgb(224,83,6)"/><text x="100.1425%" y="991.50"></text></g><g><title>[unknown] (6 samples, 0.09%)</title><rect x="99.8925%" y="965" width="0.0922%" height="15" fill="rgb(227,52,39)"/><text x="100.1425%" y="975.50"></text></g><g><title>[unknown] (6 samples, 0.09%)</title><rect x="99.8925%" y="949" width="0.0922%" height="15" fill="rgb(241,30,17)"/><text x="100.1425%" y="959.50"></text></g><g><title>[unknown] (5 samples, 0.08%)</title><rect x="99.9078%" y="933" width="0.0768%" height="15" fill="rgb(246,186,42)"/><text x="100.1578%" y="943.50"></text></g><g><title>[unknown] (4 samples, 0.06%)</title><rect x="99.9232%" y="917" width="0.0615%" height="15" fill="rgb(221,169,15)"/><text x="100.1732%" y="927.50"></text></g><g><title>[unknown] (4 samples, 0.06%)</title><rect x="99.9232%" y="901" width="0.0615%" height="15" fill="rgb(235,108,21)"/><text x="100.1732%" y="911.50"></text></g><g><title>[unknown] (4 samples, 0.06%)</title><rect x="99.9232%" y="885" width="0.0615%" height="15" fill="rgb(219,148,30)"/><text x="100.1732%" y="895.50"></text></g><g><title>[unknown] (4 samples, 0.06%)</title><rect x="99.9232%" y="869" width="0.0615%" height="15" fill="rgb(220,109,5)"/><text x="100.1732%" y="879.50"></text></g><g><title>[unknown] (4 samples, 0.06%)</title><rect x="99.9232%" y="853" width="0.0615%" height="15" fill="rgb(213,203,48)"/><text x="100.1732%" y="863.50"></text></g><g><title>all (6,509 samples, 100%)</title><rect x="0.0000%" y="1237" width="100.0000%" height="15" fill="rgb(244,71,33)"/><text x="0.2500%" y="1247.50"></text></g><g><title>rholang_parser (1 samples, 0.02%)</title><rect x="99.9846%" y="1221" width="0.0154%" height="15" fill="rgb(209,23,2)"/><text x="100.2346%" y="1231.50"></text></g><g><title>bit_vec::BitVec&lt;B&gt;::to_bytes (1 samples, 0.02%)</title><rect x="99.9846%" y="1205" width="0.0154%" height="15" fill="rgb(219,97,7)"/><text x="100.2346%" y="1215.50"></text></g></svg></svg>