<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1318" onload="init(evt)" viewBox="0 0 1200 1318" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1318" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1301.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1301.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;tokio::sync::notify::Notified as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="0.0138%" y="1221" width="0.0101%" height="15" fill="rgb(227,0,7)"/><text x="0.2638%" y="1231.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::pop (33 samples, 0.03%)</title><rect x="0.0468%" y="1221" width="0.0303%" height="15" fill="rgb(217,0,24)"/><text x="0.2968%" y="1231.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (11 samples, 0.01%)</title><rect x="0.0991%" y="1221" width="0.0101%" height="15" fill="rgb(221,193,54)"/><text x="0.3491%" y="1231.50"></text></g><g><title>tokio::park::thread::CachedParkThread::block_on (41 samples, 0.04%)</title><rect x="0.1092%" y="1221" width="0.0376%" height="15" fill="rgb(248,212,6)"/><text x="0.3592%" y="1231.50"></text></g><g><title>tokio::coop::budget (39 samples, 0.04%)</title><rect x="0.1110%" y="1205" width="0.0358%" height="15" fill="rgb(208,68,35)"/><text x="0.3610%" y="1215.50"></text></g><g><title>tokio::coop::with_budget (15 samples, 0.01%)</title><rect x="0.1330%" y="1189" width="0.0138%" height="15" fill="rgb(232,128,0)"/><text x="0.3830%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (15 samples, 0.01%)</title><rect x="0.1330%" y="1173" width="0.0138%" height="15" fill="rgb(207,160,47)"/><text x="0.3830%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (15 samples, 0.01%)</title><rect x="0.1330%" y="1157" width="0.0138%" height="15" fill="rgb(228,23,34)"/><text x="0.3830%" y="1167.50"></text></g><g><title>tokio::park::thread::Inner::park (20 samples, 0.02%)</title><rect x="0.1468%" y="1221" width="0.0183%" height="15" fill="rgb(218,30,26)"/><text x="0.3968%" y="1231.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (20 samples, 0.02%)</title><rect x="0.1468%" y="1205" width="0.0183%" height="15" fill="rgb(220,122,19)"/><text x="0.3968%" y="1215.50"></text></g><g><title>parking_lot::condvar::Condvar::wait (20 samples, 0.02%)</title><rect x="0.1468%" y="1189" width="0.0183%" height="15" fill="rgb(250,228,42)"/><text x="0.3968%" y="1199.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (20 samples, 0.02%)</title><rect x="0.1468%" y="1173" width="0.0183%" height="15" fill="rgb(240,193,28)"/><text x="0.3968%" y="1183.50"></text></g><g><title>parking_lot_core::parking_lot::park (20 samples, 0.02%)</title><rect x="0.1468%" y="1157" width="0.0183%" height="15" fill="rgb(216,20,37)"/><text x="0.3968%" y="1167.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (20 samples, 0.02%)</title><rect x="0.1468%" y="1141" width="0.0183%" height="15" fill="rgb(206,188,39)"/><text x="0.3968%" y="1151.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (20 samples, 0.02%)</title><rect x="0.1468%" y="1125" width="0.0183%" height="15" fill="rgb(217,207,13)"/><text x="0.3968%" y="1135.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (20 samples, 0.02%)</title><rect x="0.1468%" y="1109" width="0.0183%" height="15" fill="rgb(231,73,38)"/><text x="0.3968%" y="1119.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (20 samples, 0.02%)</title><rect x="0.1468%" y="1093" width="0.0183%" height="15" fill="rgb(225,20,46)"/><text x="0.3968%" y="1103.50"></text></g><g><title>syscall (20 samples, 0.02%)</title><rect x="0.1468%" y="1077" width="0.0183%" height="15" fill="rgb(210,31,41)"/><text x="0.3968%" y="1087.50"></text></g><g><title>entry_SYSCALL_64 (20 samples, 0.02%)</title><rect x="0.1468%" y="1061" width="0.0183%" height="15" fill="rgb(221,200,47)"/><text x="0.3968%" y="1071.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (32 samples, 0.03%)</title><rect x="0.1660%" y="1221" width="0.0294%" height="15" fill="rgb(226,26,5)"/><text x="0.4160%" y="1231.50"></text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (32 samples, 0.03%)</title><rect x="0.1660%" y="1205" width="0.0294%" height="15" fill="rgb(249,33,26)"/><text x="0.4160%" y="1215.50"></text></g><g><title>tokio::runtime::task::joinable (14 samples, 0.01%)</title><rect x="0.1826%" y="1189" width="0.0128%" height="15" fill="rgb(235,183,28)"/><text x="0.4326%" y="1199.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (14 samples, 0.01%)</title><rect x="0.1826%" y="1173" width="0.0128%" height="15" fill="rgb(221,5,38)"/><text x="0.4326%" y="1183.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (16 samples, 0.01%)</title><rect x="0.1954%" y="1221" width="0.0147%" height="15" fill="rgb(247,18,42)"/><text x="0.4454%" y="1231.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="0.1991%" y="1205" width="0.0110%" height="15" fill="rgb(241,131,45)"/><text x="0.4491%" y="1215.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (13 samples, 0.01%)</title><rect x="0.2138%" y="1221" width="0.0119%" height="15" fill="rgb(249,31,29)"/><text x="0.4638%" y="1231.50"></text></g><g><title>[[stack]] (248 samples, 0.23%)</title><rect x="0.0055%" y="1237" width="0.2275%" height="15" fill="rgb(225,111,53)"/><text x="0.2555%" y="1247.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::pop (18 samples, 0.02%)</title><rect x="0.2541%" y="1221" width="0.0165%" height="15" fill="rgb(238,160,17)"/><text x="0.5041%" y="1231.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry (15 samples, 0.01%)</title><rect x="0.2706%" y="1221" width="0.0138%" height="15" fill="rgb(214,148,48)"/><text x="0.5206%" y="1231.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::handle_join_double (20 samples, 0.02%)</title><rect x="0.2982%" y="1221" width="0.0183%" height="15" fill="rgb(232,36,49)"/><text x="0.5482%" y="1231.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::handle_produce (11 samples, 0.01%)</title><rect x="0.3165%" y="1221" width="0.0101%" height="15" fill="rgb(209,103,24)"/><text x="0.5665%" y="1231.50"></text></g><g><title>syscall (13 samples, 0.01%)</title><rect x="0.3275%" y="1221" width="0.0119%" height="15" fill="rgb(229,88,8)"/><text x="0.5775%" y="1231.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (15 samples, 0.01%)</title><rect x="0.3394%" y="1221" width="0.0138%" height="15" fill="rgb(213,181,19)"/><text x="0.5894%" y="1231.50"></text></g><g><title>[anon] (166 samples, 0.15%)</title><rect x="0.2330%" y="1237" width="0.1523%" height="15" fill="rgb(254,191,54)"/><text x="0.4830%" y="1247.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="0.4569%" y="1141" width="0.0119%" height="15" fill="rgb(241,83,37)"/><text x="0.7069%" y="1151.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="0.4569%" y="1125" width="0.0119%" height="15" fill="rgb(233,36,39)"/><text x="0.7069%" y="1135.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="0.4569%" y="1109" width="0.0119%" height="15" fill="rgb(226,3,54)"/><text x="0.7069%" y="1119.50"></text></g><g><title>hashbrown::map::make_hash (29 samples, 0.03%)</title><rect x="0.5422%" y="1093" width="0.0266%" height="15" fill="rgb(245,192,40)"/><text x="0.7922%" y="1103.50"></text></g><g><title>&lt;blake3::Hash as core::hash::Hash&gt;::hash (27 samples, 0.02%)</title><rect x="0.5440%" y="1077" width="0.0248%" height="15" fill="rgb(238,167,29)"/><text x="0.7940%" y="1087.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (27 samples, 0.02%)</title><rect x="0.5440%" y="1061" width="0.0248%" height="15" fill="rgb(232,182,51)"/><text x="0.7940%" y="1071.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (27 samples, 0.02%)</title><rect x="0.5440%" y="1045" width="0.0248%" height="15" fill="rgb(231,60,39)"/><text x="0.7940%" y="1055.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (27 samples, 0.02%)</title><rect x="0.5440%" y="1029" width="0.0248%" height="15" fill="rgb(208,69,12)"/><text x="0.7940%" y="1039.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write (23 samples, 0.02%)</title><rect x="0.5477%" y="1013" width="0.0211%" height="15" fill="rgb(235,93,37)"/><text x="0.7977%" y="1023.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (16 samples, 0.01%)</title><rect x="0.5541%" y="997" width="0.0147%" height="15" fill="rgb(213,116,39)"/><text x="0.8041%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="0.5734%" y="1077" width="0.0128%" height="15" fill="rgb(222,207,29)"/><text x="0.8234%" y="1087.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (12 samples, 0.01%)</title><rect x="0.5926%" y="1045" width="0.0110%" height="15" fill="rgb(206,96,30)"/><text x="0.8426%" y="1055.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (12 samples, 0.01%)</title><rect x="0.5926%" y="1029" width="0.0110%" height="15" fill="rgb(218,138,4)"/><text x="0.8426%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.01%)</title><rect x="0.5926%" y="1013" width="0.0110%" height="15" fill="rgb(250,191,14)"/><text x="0.8426%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::iter_hash (24 samples, 0.02%)</title><rect x="0.5862%" y="1077" width="0.0220%" height="15" fill="rgb(239,60,40)"/><text x="0.8362%" y="1087.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T&gt;::new (24 samples, 0.02%)</title><rect x="0.5862%" y="1061" width="0.0220%" height="15" fill="rgb(206,27,48)"/><text x="0.8362%" y="1071.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry (148 samples, 0.14%)</title><rect x="0.5073%" y="1109" width="0.1358%" height="15" fill="rgb(225,35,8)"/><text x="0.7573%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (81 samples, 0.07%)</title><rect x="0.5688%" y="1093" width="0.0743%" height="15" fill="rgb(250,213,24)"/><text x="0.8188%" y="1103.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry::{{closure}} (38 samples, 0.03%)</title><rect x="0.6082%" y="1077" width="0.0349%" height="15" fill="rgb(247,123,22)"/><text x="0.8582%" y="1087.50"></text></g><g><title>&lt;blake3::Hash as core::cmp::PartialEq&gt;::eq (38 samples, 0.03%)</title><rect x="0.6082%" y="1061" width="0.0349%" height="15" fill="rgb(231,138,38)"/><text x="0.8582%" y="1071.50"></text></g><g><title>constant_time_eq::constant_time_eq_32 (38 samples, 0.03%)</title><rect x="0.6082%" y="1045" width="0.0349%" height="15" fill="rgb(231,145,46)"/><text x="0.8582%" y="1055.50"></text></g><g><title>constant_time_eq::constant_time_ne_32 (37 samples, 0.03%)</title><rect x="0.6092%" y="1029" width="0.0339%" height="15" fill="rgb(251,118,11)"/><text x="0.8592%" y="1039.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::get_or_create_transit_port (234 samples, 0.21%)</title><rect x="0.4936%" y="1141" width="0.2147%" height="15" fill="rgb(217,147,25)"/><text x="0.7436%" y="1151.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (221 samples, 0.20%)</title><rect x="0.5055%" y="1125" width="0.2027%" height="15" fill="rgb(247,81,37)"/><text x="0.7555%" y="1135.50"></text></g><g><title>std::collections::hash::map::map_entry (71 samples, 0.07%)</title><rect x="0.6431%" y="1109" width="0.0651%" height="15" fill="rgb(209,12,38)"/><text x="0.8931%" y="1119.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (339 samples, 0.31%)</title><rect x="0.7147%" y="1125" width="0.3110%" height="15" fill="rgb(227,1,9)"/><text x="0.9647%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (338 samples, 0.31%)</title><rect x="0.7156%" y="1109" width="0.3101%" height="15" fill="rgb(248,47,43)"/><text x="0.9656%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_add (338 samples, 0.31%)</title><rect x="0.7156%" y="1093" width="0.3101%" height="15" fill="rgb(221,10,30)"/><text x="0.9656%" y="1103.50"></text></g><g><title>[libc-2.31.so] (207 samples, 0.19%)</title><rect x="1.0321%" y="1109" width="0.1899%" height="15" fill="rgb(210,229,1)"/><text x="1.2821%" y="1119.50"></text></g><g><title>cache_bin_alloc_easy (13 samples, 0.01%)</title><rect x="1.2440%" y="933" width="0.0119%" height="15" fill="rgb(222,148,37)"/><text x="1.4940%" y="943.50"></text></g><g><title>imalloc_no_sample (23 samples, 0.02%)</title><rect x="1.2357%" y="997" width="0.0211%" height="15" fill="rgb(234,67,33)"/><text x="1.4857%" y="1007.50"></text></g><g><title>iallocztm (18 samples, 0.02%)</title><rect x="1.2403%" y="981" width="0.0165%" height="15" fill="rgb(247,98,35)"/><text x="1.4903%" y="991.50"></text></g><g><title>arena_malloc (18 samples, 0.02%)</title><rect x="1.2403%" y="965" width="0.0165%" height="15" fill="rgb(247,138,52)"/><text x="1.4903%" y="975.50"></text></g><g><title>tcache_alloc_small (16 samples, 0.01%)</title><rect x="1.2422%" y="949" width="0.0147%" height="15" fill="rgb(213,79,30)"/><text x="1.4922%" y="959.50"></text></g><g><title>imalloc_body (30 samples, 0.03%)</title><rect x="1.2339%" y="1013" width="0.0275%" height="15" fill="rgb(246,177,23)"/><text x="1.4839%" y="1023.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (259 samples, 0.24%)</title><rect x="1.0257%" y="1125" width="0.2376%" height="15" fill="rgb(230,62,27)"/><text x="1.2757%" y="1135.50"></text></g><g><title>alloc::alloc::exchange_malloc (45 samples, 0.04%)</title><rect x="1.2220%" y="1109" width="0.0413%" height="15" fill="rgb(216,154,8)"/><text x="1.4720%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (45 samples, 0.04%)</title><rect x="1.2220%" y="1093" width="0.0413%" height="15" fill="rgb(244,35,45)"/><text x="1.4720%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (45 samples, 0.04%)</title><rect x="1.2220%" y="1077" width="0.0413%" height="15" fill="rgb(251,115,12)"/><text x="1.4720%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (45 samples, 0.04%)</title><rect x="1.2220%" y="1061" width="0.0413%" height="15" fill="rgb(240,54,50)"/><text x="1.4720%" y="1071.50"></text></g><g><title>_rjem_mallocx (40 samples, 0.04%)</title><rect x="1.2266%" y="1045" width="0.0367%" height="15" fill="rgb(233,84,52)"/><text x="1.4766%" y="1055.50"></text></g><g><title>imalloc (32 samples, 0.03%)</title><rect x="1.2339%" y="1029" width="0.0294%" height="15" fill="rgb(207,117,47)"/><text x="1.4839%" y="1039.50"></text></g><g><title>tokio::sync::oneshot::channel (599 samples, 0.55%)</title><rect x="0.7147%" y="1141" width="0.5495%" height="15" fill="rgb(249,43,39)"/><text x="0.9647%" y="1151.50"></text></g><g><title>[libc-2.31.so] (104 samples, 0.10%)</title><rect x="1.2678%" y="1125" width="0.0954%" height="15" fill="rgb(209,38,44)"/><text x="1.5178%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::spawner::Spawner&gt; (64 samples, 0.06%)</title><rect x="1.3633%" y="1125" width="0.0587%" height="15" fill="rgb(236,212,23)"/><text x="1.6133%" y="1135.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::handle_join_double (1,166 samples, 1.07%)</title><rect x="0.4312%" y="1157" width="1.0697%" height="15" fill="rgb(242,79,21)"/><text x="0.6812%" y="1167.50"></text></g><g><title>tokio::task::spawn::spawn (258 samples, 0.24%)</title><rect x="1.2642%" y="1141" width="0.2367%" height="15" fill="rgb(211,96,35)"/><text x="1.5142%" y="1151.50"></text></g><g><title>tokio::runtime::context::spawn_handle (86 samples, 0.08%)</title><rect x="1.4220%" y="1125" width="0.0789%" height="15" fill="rgb(253,215,40)"/><text x="1.6720%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (86 samples, 0.08%)</title><rect x="1.4220%" y="1109" width="0.0789%" height="15" fill="rgb(211,81,21)"/><text x="1.6720%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (86 samples, 0.08%)</title><rect x="1.4220%" y="1093" width="0.0789%" height="15" fill="rgb(208,190,38)"/><text x="1.6720%" y="1103.50"></text></g><g><title>tokio::runtime::context::spawn_handle::{{closure}} (84 samples, 0.08%)</title><rect x="1.4238%" y="1077" width="0.0771%" height="15" fill="rgb(235,213,38)"/><text x="1.6738%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (84 samples, 0.08%)</title><rect x="1.4238%" y="1061" width="0.0771%" height="15" fill="rgb(237,122,38)"/><text x="1.6738%" y="1071.50"></text></g><g><title>tokio::runtime::context::spawn_handle::{{closure}}::{{closure}} (81 samples, 0.07%)</title><rect x="1.4266%" y="1045" width="0.0743%" height="15" fill="rgb(244,218,35)"/><text x="1.6766%" y="1055.50"></text></g><g><title>&lt;tokio::runtime::spawner::Spawner as core::clone::Clone&gt;::clone (81 samples, 0.07%)</title><rect x="1.4266%" y="1029" width="0.0743%" height="15" fill="rgb(240,68,47)"/><text x="1.6766%" y="1039.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (136 samples, 0.12%)</title><rect x="1.5064%" y="1141" width="0.1248%" height="15" fill="rgb(210,16,53)"/><text x="1.7564%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (135 samples, 0.12%)</title><rect x="1.5073%" y="1125" width="0.1238%" height="15" fill="rgb(235,124,12)"/><text x="1.7573%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_add (135 samples, 0.12%)</title><rect x="1.5073%" y="1109" width="0.1238%" height="15" fill="rgb(224,169,11)"/><text x="1.7573%" y="1119.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (22 samples, 0.02%)</title><rect x="1.6348%" y="1141" width="0.0202%" height="15" fill="rgb(250,166,2)"/><text x="1.8848%" y="1151.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (22 samples, 0.02%)</title><rect x="1.6348%" y="1125" width="0.0202%" height="15" fill="rgb(242,216,29)"/><text x="1.8848%" y="1135.50"></text></g><g><title>core::cell::BorrowRefMut::new (22 samples, 0.02%)</title><rect x="1.6348%" y="1109" width="0.0202%" height="15" fill="rgb(230,116,27)"/><text x="1.8848%" y="1119.50"></text></g><g><title>core::future::from_generator (27 samples, 0.02%)</title><rect x="1.6550%" y="1141" width="0.0248%" height="15" fill="rgb(228,99,48)"/><text x="1.9050%" y="1151.50"></text></g><g><title>[libc-2.31.so] (25 samples, 0.02%)</title><rect x="1.6568%" y="1125" width="0.0229%" height="15" fill="rgb(253,11,6)"/><text x="1.9068%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;rho_runtime::storage::coordinator::TransitPort&gt;&gt;&gt; (19 samples, 0.02%)</title><rect x="1.6816%" y="1141" width="0.0174%" height="15" fill="rgb(247,143,39)"/><text x="1.9316%" y="1151.50"></text></g><g><title>tokio::task::spawn::spawn (12 samples, 0.01%)</title><rect x="1.6880%" y="1125" width="0.0110%" height="15" fill="rgb(236,97,10)"/><text x="1.9380%" y="1135.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (12 samples, 0.01%)</title><rect x="1.6880%" y="1109" width="0.0110%" height="15" fill="rgb(233,208,19)"/><text x="1.9380%" y="1119.50"></text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (12 samples, 0.01%)</title><rect x="1.6880%" y="1093" width="0.0110%" height="15" fill="rgb(216,164,2)"/><text x="1.9380%" y="1103.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (12 samples, 0.01%)</title><rect x="1.6880%" y="1077" width="0.0110%" height="15" fill="rgb(220,129,5)"/><text x="1.9380%" y="1087.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (12 samples, 0.01%)</title><rect x="1.6880%" y="1061" width="0.0110%" height="15" fill="rgb(242,17,10)"/><text x="1.9380%" y="1071.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (12 samples, 0.01%)</title><rect x="1.6880%" y="1045" width="0.0110%" height="15" fill="rgb(242,107,0)"/><text x="1.9380%" y="1055.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (12 samples, 0.01%)</title><rect x="1.6880%" y="1029" width="0.0110%" height="15" fill="rgb(251,28,31)"/><text x="1.9380%" y="1039.50"></text></g><g><title>syscall (12 samples, 0.01%)</title><rect x="1.6880%" y="1013" width="0.0110%" height="15" fill="rgb(233,223,10)"/><text x="1.9380%" y="1023.50"></text></g><g><title>entry_SYSCALL_64 (12 samples, 0.01%)</title><rect x="1.6880%" y="997" width="0.0110%" height="15" fill="rgb(215,21,27)"/><text x="1.9380%" y="1007.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.01%)</title><rect x="1.7339%" y="1093" width="0.0110%" height="15" fill="rgb(232,23,21)"/><text x="1.9839%" y="1103.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="1.7513%" y="1077" width="0.0119%" height="15" fill="rgb(244,5,23)"/><text x="2.0013%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::iter_hash (22 samples, 0.02%)</title><rect x="1.7632%" y="1077" width="0.0202%" height="15" fill="rgb(226,81,46)"/><text x="2.0132%" y="1087.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T&gt;::new (22 samples, 0.02%)</title><rect x="1.7632%" y="1061" width="0.0202%" height="15" fill="rgb(247,70,30)"/><text x="2.0132%" y="1071.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (18 samples, 0.02%)</title><rect x="1.7669%" y="1045" width="0.0165%" height="15" fill="rgb(212,68,19)"/><text x="2.0169%" y="1055.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (18 samples, 0.02%)</title><rect x="1.7669%" y="1029" width="0.0165%" height="15" fill="rgb(240,187,13)"/><text x="2.0169%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (18 samples, 0.02%)</title><rect x="1.7669%" y="1013" width="0.0165%" height="15" fill="rgb(223,113,26)"/><text x="2.0169%" y="1023.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry (93 samples, 0.09%)</title><rect x="1.7320%" y="1109" width="0.0853%" height="15" fill="rgb(206,192,2)"/><text x="1.9820%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (79 samples, 0.07%)</title><rect x="1.7449%" y="1093" width="0.0725%" height="15" fill="rgb(241,108,4)"/><text x="1.9949%" y="1103.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry::{{closure}} (37 samples, 0.03%)</title><rect x="1.7834%" y="1077" width="0.0339%" height="15" fill="rgb(247,173,49)"/><text x="2.0334%" y="1087.50"></text></g><g><title>&lt;blake3::Hash as core::cmp::PartialEq&gt;::eq (37 samples, 0.03%)</title><rect x="1.7834%" y="1061" width="0.0339%" height="15" fill="rgb(224,114,35)"/><text x="2.0334%" y="1071.50"></text></g><g><title>constant_time_eq::constant_time_eq_32 (37 samples, 0.03%)</title><rect x="1.7834%" y="1045" width="0.0339%" height="15" fill="rgb(245,159,27)"/><text x="2.0334%" y="1055.50"></text></g><g><title>constant_time_eq::constant_time_ne_32 (35 samples, 0.03%)</title><rect x="1.7853%" y="1029" width="0.0321%" height="15" fill="rgb(245,172,44)"/><text x="2.0353%" y="1039.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::get_or_create_transit_port (155 samples, 0.14%)</title><rect x="1.7009%" y="1141" width="0.1422%" height="15" fill="rgb(236,23,11)"/><text x="1.9509%" y="1151.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (128 samples, 0.12%)</title><rect x="1.7256%" y="1125" width="0.1174%" height="15" fill="rgb(205,117,38)"/><text x="1.9756%" y="1135.50"></text></g><g><title>std::collections::hash::map::map_entry (28 samples, 0.03%)</title><rect x="1.8174%" y="1109" width="0.0257%" height="15" fill="rgb(237,72,25)"/><text x="2.0674%" y="1119.50"></text></g><g><title>[libc-2.31.so] (13 samples, 0.01%)</title><rect x="1.8486%" y="1125" width="0.0119%" height="15" fill="rgb(244,70,9)"/><text x="2.0986%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::spawner::Spawner&gt; (32 samples, 0.03%)</title><rect x="1.8605%" y="1125" width="0.0294%" height="15" fill="rgb(217,125,39)"/><text x="2.1105%" y="1135.50"></text></g><g><title>tokio::runtime::context::spawn_handle (57 samples, 0.05%)</title><rect x="1.8898%" y="1125" width="0.0523%" height="15" fill="rgb(235,36,10)"/><text x="2.1398%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (56 samples, 0.05%)</title><rect x="1.8908%" y="1109" width="0.0514%" height="15" fill="rgb(251,123,47)"/><text x="2.1408%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (56 samples, 0.05%)</title><rect x="1.8908%" y="1093" width="0.0514%" height="15" fill="rgb(221,13,13)"/><text x="2.1408%" y="1103.50"></text></g><g><title>tokio::runtime::context::spawn_handle::{{closure}} (56 samples, 0.05%)</title><rect x="1.8908%" y="1077" width="0.0514%" height="15" fill="rgb(238,131,9)"/><text x="2.1408%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (52 samples, 0.05%)</title><rect x="1.8944%" y="1061" width="0.0477%" height="15" fill="rgb(211,50,8)"/><text x="2.1444%" y="1071.50"></text></g><g><title>tokio::runtime::context::spawn_handle::{{closure}}::{{closure}} (49 samples, 0.04%)</title><rect x="1.8972%" y="1045" width="0.0450%" height="15" fill="rgb(245,182,24)"/><text x="2.1472%" y="1055.50"></text></g><g><title>&lt;tokio::runtime::spawner::Spawner as core::clone::Clone&gt;::clone (49 samples, 0.04%)</title><rect x="1.8972%" y="1029" width="0.0450%" height="15" fill="rgb(242,14,37)"/><text x="2.1472%" y="1039.50"></text></g><g><title>[libc-2.31.so] (30 samples, 0.03%)</title><rect x="1.9504%" y="1061" width="0.0275%" height="15" fill="rgb(246,228,12)"/><text x="2.2004%" y="1071.50"></text></g><g><title>[libc-2.31.so] (29 samples, 0.03%)</title><rect x="1.9788%" y="1045" width="0.0266%" height="15" fill="rgb(213,55,15)"/><text x="2.2288%" y="1055.50"></text></g><g><title>[libc-2.31.so] (256 samples, 0.23%)</title><rect x="2.0109%" y="1029" width="0.2349%" height="15" fill="rgb(209,9,3)"/><text x="2.2609%" y="1039.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (35 samples, 0.03%)</title><rect x="2.2660%" y="837" width="0.0321%" height="15" fill="rgb(230,59,30)"/><text x="2.5160%" y="847.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (38 samples, 0.03%)</title><rect x="2.2641%" y="853" width="0.0349%" height="15" fill="rgb(209,121,21)"/><text x="2.5141%" y="863.50"></text></g><g><title>imalloc_no_sample (61 samples, 0.06%)</title><rect x="2.2596%" y="917" width="0.0560%" height="15" fill="rgb(220,109,13)"/><text x="2.5096%" y="927.50"></text></g><g><title>iallocztm (60 samples, 0.06%)</title><rect x="2.2605%" y="901" width="0.0550%" height="15" fill="rgb(232,18,1)"/><text x="2.5105%" y="911.50"></text></g><g><title>arena_malloc (60 samples, 0.06%)</title><rect x="2.2605%" y="885" width="0.0550%" height="15" fill="rgb(215,41,42)"/><text x="2.5105%" y="895.50"></text></g><g><title>tcache_alloc_small (58 samples, 0.05%)</title><rect x="2.2623%" y="869" width="0.0532%" height="15" fill="rgb(224,123,36)"/><text x="2.5123%" y="879.50"></text></g><g><title>cache_bin_alloc_easy (14 samples, 0.01%)</title><rect x="2.3027%" y="853" width="0.0128%" height="15" fill="rgb(240,125,3)"/><text x="2.5527%" y="863.50"></text></g><g><title>imalloc_body (66 samples, 0.06%)</title><rect x="2.2586%" y="933" width="0.0605%" height="15" fill="rgb(205,98,50)"/><text x="2.5086%" y="943.50"></text></g><g><title>tokio::runtime::task::joinable (409 samples, 0.38%)</title><rect x="1.9504%" y="1093" width="0.3752%" height="15" fill="rgb(205,185,37)"/><text x="2.2004%" y="1103.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (409 samples, 0.38%)</title><rect x="1.9504%" y="1077" width="0.3752%" height="15" fill="rgb(238,207,15)"/><text x="2.2004%" y="1087.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (379 samples, 0.35%)</title><rect x="1.9779%" y="1061" width="0.3477%" height="15" fill="rgb(213,199,42)"/><text x="2.2279%" y="1071.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (349 samples, 0.32%)</title><rect x="2.0054%" y="1045" width="0.3202%" height="15" fill="rgb(235,201,11)"/><text x="2.2554%" y="1055.50"></text></g><g><title>alloc::alloc::exchange_malloc (87 samples, 0.08%)</title><rect x="2.2458%" y="1029" width="0.0798%" height="15" fill="rgb(207,46,11)"/><text x="2.4958%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (87 samples, 0.08%)</title><rect x="2.2458%" y="1013" width="0.0798%" height="15" fill="rgb(241,35,35)"/><text x="2.4958%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (87 samples, 0.08%)</title><rect x="2.2458%" y="997" width="0.0798%" height="15" fill="rgb(243,32,47)"/><text x="2.4958%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (87 samples, 0.08%)</title><rect x="2.2458%" y="981" width="0.0798%" height="15" fill="rgb(247,202,23)"/><text x="2.4958%" y="991.50"></text></g><g><title>_rjem_mallocx (81 samples, 0.07%)</title><rect x="2.2513%" y="965" width="0.0743%" height="15" fill="rgb(219,102,11)"/><text x="2.5013%" y="975.50"></text></g><g><title>imalloc (75 samples, 0.07%)</title><rect x="2.2568%" y="949" width="0.0688%" height="15" fill="rgb(243,110,44)"/><text x="2.5068%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (58 samples, 0.05%)</title><rect x="2.3907%" y="1045" width="0.0532%" height="15" fill="rgb(222,74,54)"/><text x="2.6407%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_swap (58 samples, 0.05%)</title><rect x="2.3907%" y="1029" width="0.0532%" height="15" fill="rgb(216,99,12)"/><text x="2.6407%" y="1039.50"></text></g><g><title>core::mem::drop (14 samples, 0.01%)</title><rect x="2.4439%" y="1029" width="0.0128%" height="15" fill="rgb(226,22,26)"/><text x="2.6939%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,()&gt;&gt; (14 samples, 0.01%)</title><rect x="2.4439%" y="1013" width="0.0128%" height="15" fill="rgb(217,163,10)"/><text x="2.6939%" y="1023.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="2.4439%" y="997" width="0.0128%" height="15" fill="rgb(213,25,53)"/><text x="2.6939%" y="1007.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (14 samples, 0.01%)</title><rect x="2.4439%" y="981" width="0.0128%" height="15" fill="rgb(252,105,26)"/><text x="2.6939%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (14 samples, 0.01%)</title><rect x="2.4439%" y="965" width="0.0128%" height="15" fill="rgb(220,39,43)"/><text x="2.6939%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (14 samples, 0.01%)</title><rect x="2.4439%" y="949" width="0.0128%" height="15" fill="rgb(229,68,48)"/><text x="2.6939%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (12 samples, 0.01%)</title><rect x="2.4605%" y="981" width="0.0110%" height="15" fill="rgb(252,8,32)"/><text x="2.7105%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (12 samples, 0.01%)</title><rect x="2.4605%" y="965" width="0.0110%" height="15" fill="rgb(223,20,43)"/><text x="2.7105%" y="975.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (113 samples, 0.10%)</title><rect x="2.3687%" y="1077" width="0.1037%" height="15" fill="rgb(229,81,49)"/><text x="2.6187%" y="1087.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (96 samples, 0.09%)</title><rect x="2.3843%" y="1061" width="0.0881%" height="15" fill="rgb(236,28,36)"/><text x="2.6343%" y="1071.50"></text></g><g><title>tokio::runtime::park::Inner::unpark_condvar (31 samples, 0.03%)</title><rect x="2.4439%" y="1045" width="0.0284%" height="15" fill="rgb(249,185,26)"/><text x="2.6939%" y="1055.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (16 samples, 0.01%)</title><rect x="2.4577%" y="1029" width="0.0147%" height="15" fill="rgb(249,174,33)"/><text x="2.7077%" y="1039.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (16 samples, 0.01%)</title><rect x="2.4577%" y="1013" width="0.0147%" height="15" fill="rgb(233,201,37)"/><text x="2.7077%" y="1023.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (16 samples, 0.01%)</title><rect x="2.4577%" y="997" width="0.0147%" height="15" fill="rgb(221,78,26)"/><text x="2.7077%" y="1007.50"></text></g><g><title>entry_SYSCALL_64 (19 samples, 0.02%)</title><rect x="2.5118%" y="1013" width="0.0174%" height="15" fill="rgb(250,127,30)"/><text x="2.7618%" y="1023.50"></text></g><g><title>__x64_sys_futex (11 samples, 0.01%)</title><rect x="2.5476%" y="997" width="0.0101%" height="15" fill="rgb(230,49,44)"/><text x="2.7976%" y="1007.50"></text></g><g><title>__syscall_return_slowpath (11 samples, 0.01%)</title><rect x="2.5715%" y="981" width="0.0101%" height="15" fill="rgb(229,67,23)"/><text x="2.8215%" y="991.50"></text></g><g><title>_raw_spin_lock (24 samples, 0.02%)</title><rect x="2.6036%" y="949" width="0.0220%" height="15" fill="rgb(249,83,47)"/><text x="2.8536%" y="959.50"></text></g><g><title>__unqueue_futex (53 samples, 0.05%)</title><rect x="2.8604%" y="917" width="0.0486%" height="15" fill="rgb(215,43,3)"/><text x="3.1104%" y="927.50"></text></g><g><title>mark_wake_futex (114 samples, 0.10%)</title><rect x="2.8091%" y="933" width="0.1046%" height="15" fill="rgb(238,154,13)"/><text x="3.0591%" y="943.50"></text></g><g><title>wake_q_add_safe (15 samples, 0.01%)</title><rect x="2.9155%" y="933" width="0.0138%" height="15" fill="rgb(219,56,2)"/><text x="3.1655%" y="943.50"></text></g><g><title>_raw_spin_lock (16 samples, 0.01%)</title><rect x="2.9485%" y="917" width="0.0147%" height="15" fill="rgb(233,0,4)"/><text x="3.1985%" y="927.50"></text></g><g><title>_raw_spin_lock_irqsave (11 samples, 0.01%)</title><rect x="3.0366%" y="901" width="0.0101%" height="15" fill="rgb(235,30,7)"/><text x="3.2866%" y="911.50"></text></g><g><title>available_idle_cpu (13 samples, 0.01%)</title><rect x="3.0935%" y="885" width="0.0119%" height="15" fill="rgb(250,79,13)"/><text x="3.3435%" y="895.50"></text></g><g><title>select_task_rq_fair (70 samples, 0.06%)</title><rect x="3.0522%" y="901" width="0.0642%" height="15" fill="rgb(211,146,34)"/><text x="3.3022%" y="911.50"></text></g><g><title>account_entity_enqueue (11 samples, 0.01%)</title><rect x="3.2751%" y="853" width="0.0101%" height="15" fill="rgb(228,22,38)"/><text x="3.5251%" y="863.50"></text></g><g><title>place_entity (16 samples, 0.01%)</title><rect x="3.2852%" y="853" width="0.0147%" height="15" fill="rgb(235,168,5)"/><text x="3.5352%" y="863.50"></text></g><g><title>update_cfs_group (41 samples, 0.04%)</title><rect x="3.3045%" y="853" width="0.0376%" height="15" fill="rgb(221,155,16)"/><text x="3.5545%" y="863.50"></text></g><g><title>reweight_entity (35 samples, 0.03%)</title><rect x="3.3100%" y="837" width="0.0321%" height="15" fill="rgb(215,215,53)"/><text x="3.5600%" y="847.50"></text></g><g><title>__update_load_avg_cfs_rq (22 samples, 0.02%)</title><rect x="3.3604%" y="837" width="0.0202%" height="15" fill="rgb(223,4,10)"/><text x="3.6104%" y="847.50"></text></g><g><title>enqueue_entity (211 samples, 0.19%)</title><rect x="3.1935%" y="869" width="0.1936%" height="15" fill="rgb(234,103,6)"/><text x="3.4435%" y="879.50"></text></g><g><title>update_load_avg (45 samples, 0.04%)</title><rect x="3.3457%" y="853" width="0.0413%" height="15" fill="rgb(227,97,0)"/><text x="3.5957%" y="863.50"></text></g><g><title>enqueue_task_fair (269 samples, 0.25%)</title><rect x="3.1531%" y="885" width="0.2468%" height="15" fill="rgb(234,150,53)"/><text x="3.4031%" y="895.50"></text></g><g><title>psi_flags_change (11 samples, 0.01%)</title><rect x="3.4678%" y="869" width="0.0101%" height="15" fill="rgb(228,201,54)"/><text x="3.7178%" y="879.50"></text></g><g><title>native_sched_clock (22 samples, 0.02%)</title><rect x="3.6210%" y="821" width="0.0202%" height="15" fill="rgb(222,22,37)"/><text x="3.8710%" y="831.50"></text></g><g><title>record_times (53 samples, 0.05%)</title><rect x="3.5934%" y="853" width="0.0486%" height="15" fill="rgb(237,53,32)"/><text x="3.8434%" y="863.50"></text></g><g><title>sched_clock_cpu (28 samples, 0.03%)</title><rect x="3.6164%" y="837" width="0.0257%" height="15" fill="rgb(233,25,53)"/><text x="3.8664%" y="847.50"></text></g><g><title>psi_group_change (180 samples, 0.17%)</title><rect x="3.4779%" y="869" width="0.1651%" height="15" fill="rgb(210,40,34)"/><text x="3.7279%" y="879.50"></text></g><g><title>psi_task_change (262 samples, 0.24%)</title><rect x="3.4035%" y="885" width="0.2404%" height="15" fill="rgb(241,220,44)"/><text x="3.6535%" y="895.50"></text></g><g><title>check_preempt_curr (137 samples, 0.13%)</title><rect x="3.6448%" y="869" width="0.1257%" height="15" fill="rgb(235,28,35)"/><text x="3.8948%" y="879.50"></text></g><g><title>resched_curr (122 samples, 0.11%)</title><rect x="3.6586%" y="853" width="0.1119%" height="15" fill="rgb(210,56,17)"/><text x="3.9086%" y="863.50"></text></g><g><title>ttwu_do_activate (723 samples, 0.66%)</title><rect x="3.1173%" y="901" width="0.6633%" height="15" fill="rgb(224,130,29)"/><text x="3.3673%" y="911.50"></text></g><g><title>ttwu_do_wakeup (149 samples, 0.14%)</title><rect x="3.6439%" y="885" width="0.1367%" height="15" fill="rgb(235,212,8)"/><text x="3.8939%" y="895.50"></text></g><g><title>resched_curr (11 samples, 0.01%)</title><rect x="3.7705%" y="869" width="0.0101%" height="15" fill="rgb(223,33,50)"/><text x="4.0205%" y="879.50"></text></g><g><title>native_send_call_func_single_ipi (15 samples, 0.01%)</title><rect x="3.8044%" y="853" width="0.0138%" height="15" fill="rgb(219,149,13)"/><text x="4.0544%" y="863.50"></text></g><g><title>x2apic_send_IPI (15 samples, 0.01%)</title><rect x="3.8044%" y="837" width="0.0138%" height="15" fill="rgb(250,156,29)"/><text x="4.0544%" y="847.50"></text></g><g><title>native_write_msr (11 samples, 0.01%)</title><rect x="3.8081%" y="821" width="0.0101%" height="15" fill="rgb(216,193,19)"/><text x="4.0581%" y="831.50"></text></g><g><title>__smp_call_single_queue (20 samples, 0.02%)</title><rect x="3.8008%" y="885" width="0.0183%" height="15" fill="rgb(216,135,14)"/><text x="4.0508%" y="895.50"></text></g><g><title>send_call_function_single_ipi (20 samples, 0.02%)</title><rect x="3.8008%" y="869" width="0.0183%" height="15" fill="rgb(241,47,5)"/><text x="4.0508%" y="879.50"></text></g><g><title>llist_add_batch (19 samples, 0.02%)</title><rect x="3.8191%" y="885" width="0.0174%" height="15" fill="rgb(233,42,35)"/><text x="4.0691%" y="895.50"></text></g><g><title>ttwu_queue_wakelist (62 samples, 0.06%)</title><rect x="3.7806%" y="901" width="0.0569%" height="15" fill="rgb(231,13,6)"/><text x="4.0306%" y="911.50"></text></g><g><title>update_cfs_rq_h_load (58 samples, 0.05%)</title><rect x="3.8375%" y="901" width="0.0532%" height="15" fill="rgb(207,181,40)"/><text x="4.0875%" y="911.50"></text></g><g><title>native_sched_clock (13 samples, 0.01%)</title><rect x="3.9265%" y="869" width="0.0119%" height="15" fill="rgb(254,173,49)"/><text x="4.1765%" y="879.50"></text></g><g><title>try_to_wake_up (1,060 samples, 0.97%)</title><rect x="2.9669%" y="917" width="0.9724%" height="15" fill="rgb(221,1,38)"/><text x="3.2169%" y="927.50"></text></g><g><title>update_rq_clock (53 samples, 0.05%)</title><rect x="3.8907%" y="901" width="0.0486%" height="15" fill="rgb(206,124,46)"/><text x="4.1407%" y="911.50"></text></g><g><title>sched_clock_cpu (15 samples, 0.01%)</title><rect x="3.9255%" y="885" width="0.0138%" height="15" fill="rgb(249,21,11)"/><text x="4.1755%" y="895.50"></text></g><g><title>futex_wake (1,436 samples, 1.32%)</title><rect x="2.6256%" y="949" width="1.3174%" height="15" fill="rgb(222,201,40)"/><text x="2.8756%" y="959.50"></text></g><g><title>wake_up_q (1,105 samples, 1.01%)</title><rect x="2.9293%" y="933" width="1.0137%" height="15" fill="rgb(235,61,29)"/><text x="3.1793%" y="943.50"></text></g><g><title>hash_futex (17 samples, 0.02%)</title><rect x="3.9448%" y="949" width="0.0156%" height="15" fill="rgb(219,207,3)"/><text x="4.1948%" y="959.50"></text></g><g><title>do_futex (1,495 samples, 1.37%)</title><rect x="2.5907%" y="965" width="1.3715%" height="15" fill="rgb(222,56,46)"/><text x="2.8407%" y="975.50"></text></g><g><title>__x64_sys_futex (1,512 samples, 1.39%)</title><rect x="2.5816%" y="981" width="1.3871%" height="15" fill="rgb(239,76,54)"/><text x="2.8316%" y="991.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,572 samples, 1.44%)</title><rect x="2.5293%" y="1013" width="1.4421%" height="15" fill="rgb(231,124,27)"/><text x="2.7793%" y="1023.50"></text></g><g><title>do_syscall_64 (1,541 samples, 1.41%)</title><rect x="2.5577%" y="997" width="1.4137%" height="15" fill="rgb(249,195,6)"/><text x="2.8077%" y="1007.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (1,632 samples, 1.50%)</title><rect x="2.4797%" y="1045" width="1.4972%" height="15" fill="rgb(237,174,47)"/><text x="2.7297%" y="1055.50"></text></g><g><title>syscall (1,626 samples, 1.49%)</title><rect x="2.4852%" y="1029" width="1.4917%" height="15" fill="rgb(206,201,31)"/><text x="2.7352%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (55 samples, 0.05%)</title><rect x="3.9833%" y="1045" width="0.0505%" height="15" fill="rgb(231,57,52)"/><text x="4.2333%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_load (55 samples, 0.05%)</title><rect x="3.9833%" y="1029" width="0.0505%" height="15" fill="rgb(248,177,22)"/><text x="4.2333%" y="1039.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (33 samples, 0.03%)</title><rect x="4.0338%" y="1045" width="0.0303%" height="15" fill="rgb(215,211,37)"/><text x="4.2838%" y="1055.50"></text></g><g><title>std::time::Instant::now (30 samples, 0.03%)</title><rect x="4.0365%" y="1029" width="0.0275%" height="15" fill="rgb(241,128,51)"/><text x="4.2865%" y="1039.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (30 samples, 0.03%)</title><rect x="4.0365%" y="1013" width="0.0275%" height="15" fill="rgb(227,165,31)"/><text x="4.2865%" y="1023.50"></text></g><g><title>std::sys::unix::time::inner::now (30 samples, 0.03%)</title><rect x="4.0365%" y="997" width="0.0275%" height="15" fill="rgb(228,167,24)"/><text x="4.2865%" y="1007.50"></text></g><g><title>__clock_gettime (27 samples, 0.02%)</title><rect x="4.0393%" y="981" width="0.0248%" height="15" fill="rgb(228,143,12)"/><text x="4.2893%" y="991.50"></text></g><g><title>__vdso_clock_gettime (26 samples, 0.02%)</title><rect x="4.0402%" y="965" width="0.0239%" height="15" fill="rgb(249,149,8)"/><text x="4.2902%" y="975.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (49 samples, 0.04%)</title><rect x="4.0641%" y="1045" width="0.0450%" height="15" fill="rgb(243,35,44)"/><text x="4.3141%" y="1055.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (42 samples, 0.04%)</title><rect x="4.0705%" y="1029" width="0.0385%" height="15" fill="rgb(246,89,9)"/><text x="4.3205%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (36 samples, 0.03%)</title><rect x="4.0760%" y="1013" width="0.0330%" height="15" fill="rgb(233,213,13)"/><text x="4.3260%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (36 samples, 0.03%)</title><rect x="4.0760%" y="997" width="0.0330%" height="15" fill="rgb(233,141,41)"/><text x="4.3260%" y="1007.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (1,837 samples, 1.69%)</title><rect x="2.4733%" y="1077" width="1.6853%" height="15" fill="rgb(239,167,4)"/><text x="2.7233%" y="1087.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (1,836 samples, 1.68%)</title><rect x="2.4742%" y="1061" width="1.6843%" height="15" fill="rgb(209,217,16)"/><text x="2.7242%" y="1071.50"></text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (54 samples, 0.05%)</title><rect x="4.1090%" y="1045" width="0.0495%" height="15" fill="rgb(219,88,35)"/><text x="4.3590%" y="1055.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (54 samples, 0.05%)</title><rect x="4.1090%" y="1029" width="0.0495%" height="15" fill="rgb(220,193,23)"/><text x="4.3590%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (53 samples, 0.05%)</title><rect x="4.1099%" y="1013" width="0.0486%" height="15" fill="rgb(230,90,52)"/><text x="4.3599%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_sub (53 samples, 0.05%)</title><rect x="4.1099%" y="997" width="0.0486%" height="15" fill="rgb(252,106,19)"/><text x="4.3599%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (31 samples, 0.03%)</title><rect x="4.1778%" y="1061" width="0.0284%" height="15" fill="rgb(206,74,20)"/><text x="4.4278%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (31 samples, 0.03%)</title><rect x="4.1778%" y="1045" width="0.0284%" height="15" fill="rgb(230,138,44)"/><text x="4.4278%" y="1055.50"></text></g><g><title>tokio::runtime::thread_pool::worker::CURRENT::FOO::__getit (27 samples, 0.02%)</title><rect x="4.1815%" y="1029" width="0.0248%" height="15" fill="rgb(235,182,43)"/><text x="4.4315%" y="1039.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (27 samples, 0.02%)</title><rect x="4.1815%" y="1013" width="0.0248%" height="15" fill="rgb(242,16,51)"/><text x="4.4315%" y="1023.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (27 samples, 0.02%)</title><rect x="4.1815%" y="997" width="0.0248%" height="15" fill="rgb(248,9,4)"/><text x="4.4315%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (27 samples, 0.02%)</title><rect x="4.1815%" y="981" width="0.0248%" height="15" fill="rgb(210,31,22)"/><text x="4.4315%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::queue::Pointers&gt;&gt; (33 samples, 0.03%)</title><rect x="4.2072%" y="1029" width="0.0303%" height="15" fill="rgb(239,54,39)"/><text x="4.4572%" y="1039.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.03%)</title><rect x="4.2072%" y="1013" width="0.0303%" height="15" fill="rgb(230,99,41)"/><text x="4.4572%" y="1023.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (33 samples, 0.03%)</title><rect x="4.2072%" y="997" width="0.0303%" height="15" fill="rgb(253,106,12)"/><text x="4.4572%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (31 samples, 0.03%)</title><rect x="4.2090%" y="981" width="0.0284%" height="15" fill="rgb(213,46,41)"/><text x="4.4590%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (31 samples, 0.03%)</title><rect x="4.2090%" y="965" width="0.0284%" height="15" fill="rgb(215,133,35)"/><text x="4.4590%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (322 samples, 0.30%)</title><rect x="4.2439%" y="981" width="0.2954%" height="15" fill="rgb(213,28,5)"/><text x="4.4939%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (322 samples, 0.30%)</title><rect x="4.2439%" y="965" width="0.2954%" height="15" fill="rgb(215,77,49)"/><text x="4.4939%" y="975.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (328 samples, 0.30%)</title><rect x="4.2393%" y="1029" width="0.3009%" height="15" fill="rgb(248,100,22)"/><text x="4.4893%" y="1039.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (328 samples, 0.30%)</title><rect x="4.2393%" y="1013" width="0.3009%" height="15" fill="rgb(208,67,9)"/><text x="4.4893%" y="1023.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (328 samples, 0.30%)</title><rect x="4.2393%" y="997" width="0.3009%" height="15" fill="rgb(219,133,21)"/><text x="4.4893%" y="1007.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (417 samples, 0.38%)</title><rect x="4.1586%" y="1077" width="0.3826%" height="15" fill="rgb(246,46,29)"/><text x="4.4086%" y="1087.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (365 samples, 0.33%)</title><rect x="4.2063%" y="1061" width="0.3349%" height="15" fill="rgb(246,185,52)"/><text x="4.4563%" y="1071.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::push (365 samples, 0.33%)</title><rect x="4.2063%" y="1045" width="0.3349%" height="15" fill="rgb(252,136,11)"/><text x="4.4563%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (54 samples, 0.05%)</title><rect x="4.5430%" y="1045" width="0.0495%" height="15" fill="rgb(219,138,53)"/><text x="4.7930%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (14 samples, 0.01%)</title><rect x="4.6017%" y="997" width="0.0128%" height="15" fill="rgb(211,51,23)"/><text x="4.8517%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (14 samples, 0.01%)</title><rect x="4.6017%" y="981" width="0.0128%" height="15" fill="rgb(247,221,28)"/><text x="4.8517%" y="991.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (16 samples, 0.01%)</title><rect x="4.6007%" y="1045" width="0.0147%" height="15" fill="rgb(251,222,45)"/><text x="4.8507%" y="1055.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (16 samples, 0.01%)</title><rect x="4.6007%" y="1029" width="0.0147%" height="15" fill="rgb(217,162,53)"/><text x="4.8507%" y="1039.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (16 samples, 0.01%)</title><rect x="4.6007%" y="1013" width="0.0147%" height="15" fill="rgb(229,93,14)"/><text x="4.8507%" y="1023.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::notify_should_wakeup (93 samples, 0.09%)</title><rect x="4.6154%" y="1045" width="0.0853%" height="15" fill="rgb(209,67,49)"/><text x="4.8654%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (65 samples, 0.06%)</title><rect x="4.6411%" y="1029" width="0.0596%" height="15" fill="rgb(213,87,29)"/><text x="4.8911%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_add (65 samples, 0.06%)</title><rect x="4.6411%" y="1013" width="0.0596%" height="15" fill="rgb(205,151,52)"/><text x="4.8911%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,707 samples, 4.32%)</title><rect x="0.3954%" y="1221" width="4.3182%" height="15" fill="rgb(253,215,39)"/><text x="0.6454%" y="1231.50">&lt;core..</text></g><g><title>rho_runtime::run::{{closure}} (4,696 samples, 4.31%)</title><rect x="0.4055%" y="1205" width="4.3081%" height="15" fill="rgb(221,220,41)"/><text x="0.6555%" y="1215.50">rho_r..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,696 samples, 4.31%)</title><rect x="0.4055%" y="1189" width="4.3081%" height="15" fill="rgb(218,133,21)"/><text x="0.6555%" y="1199.50">&lt;core..</text></g><g><title>rho_runtime::storage::coordinator::Coordinator::run::{{closure}} (4,696 samples, 4.31%)</title><rect x="0.4055%" y="1173" width="4.3081%" height="15" fill="rgb(221,193,43)"/><text x="0.6555%" y="1183.50">rho_r..</text></g><g><title>rho_runtime::storage::coordinator::Coordinator::handle_produce (3,502 samples, 3.21%)</title><rect x="1.5009%" y="1157" width="3.2127%" height="15" fill="rgb(240,128,52)"/><text x="1.7509%" y="1167.50">rho..</text></g><g><title>tokio::task::spawn::spawn (3,129 samples, 2.87%)</title><rect x="1.8431%" y="1141" width="2.8705%" height="15" fill="rgb(253,114,12)"/><text x="2.0931%" y="1151.50">to..</text></g><g><title>tokio::runtime::spawner::Spawner::spawn (3,021 samples, 2.77%)</title><rect x="1.9421%" y="1125" width="2.7715%" height="15" fill="rgb(215,223,47)"/><text x="2.1921%" y="1135.50">to..</text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (3,019 samples, 2.77%)</title><rect x="1.9440%" y="1109" width="2.7696%" height="15" fill="rgb(248,225,23)"/><text x="2.1940%" y="1119.50">to..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (2,603 samples, 2.39%)</title><rect x="2.3256%" y="1093" width="2.3880%" height="15" fill="rgb(250,108,0)"/><text x="2.5756%" y="1103.50">to..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (188 samples, 0.17%)</title><rect x="4.5411%" y="1077" width="0.1725%" height="15" fill="rgb(228,208,7)"/><text x="4.7911%" y="1087.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::worker_to_notify (186 samples, 0.17%)</title><rect x="4.5430%" y="1061" width="0.1706%" height="15" fill="rgb(244,45,10)"/><text x="4.7930%" y="1071.50"></text></g><g><title>tokio::runtime::thread_pool::idle::State::unpark_one (14 samples, 0.01%)</title><rect x="4.7007%" y="1045" width="0.0128%" height="15" fill="rgb(207,125,25)"/><text x="4.9507%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (14 samples, 0.01%)</title><rect x="4.7007%" y="1029" width="0.0128%" height="15" fill="rgb(210,195,18)"/><text x="4.9507%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_add (14 samples, 0.01%)</title><rect x="4.7007%" y="1013" width="0.0128%" height="15" fill="rgb(249,80,12)"/><text x="4.9507%" y="1023.50"></text></g><g><title>&lt;tokio::park::thread::CachedParkThread as tokio::park::Park&gt;::park (21 samples, 0.02%)</title><rect x="4.7145%" y="1221" width="0.0193%" height="15" fill="rgb(221,65,9)"/><text x="4.9645%" y="1231.50"></text></g><g><title>[libc-2.31.so] (15 samples, 0.01%)</title><rect x="4.7393%" y="1221" width="0.0138%" height="15" fill="rgb(235,49,36)"/><text x="4.9893%" y="1231.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry (23 samples, 0.02%)</title><rect x="4.7613%" y="1221" width="0.0211%" height="15" fill="rgb(225,32,20)"/><text x="5.0113%" y="1231.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (26 samples, 0.02%)</title><rect x="5.1172%" y="965" width="0.0239%" height="15" fill="rgb(215,141,46)"/><text x="5.3672%" y="975.50"></text></g><g><title>tokio::park::thread::clone (26 samples, 0.02%)</title><rect x="5.1172%" y="949" width="0.0239%" height="15" fill="rgb(250,160,47)"/><text x="5.3672%" y="959.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (26 samples, 0.02%)</title><rect x="5.1172%" y="933" width="0.0239%" height="15" fill="rgb(216,222,40)"/><text x="5.3672%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (23 samples, 0.02%)</title><rect x="5.1200%" y="917" width="0.0211%" height="15" fill="rgb(234,217,39)"/><text x="5.3700%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_add (23 samples, 0.02%)</title><rect x="5.1200%" y="901" width="0.0211%" height="15" fill="rgb(207,178,40)"/><text x="5.3700%" y="911.50"></text></g><g><title>core::mem::drop (154 samples, 0.14%)</title><rect x="5.1429%" y="965" width="0.1413%" height="15" fill="rgb(221,136,13)"/><text x="5.3929%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::util::linked_list::LinkedList&lt;tokio::sync::notify::Waiter,tokio::sync::notify::Waiter&gt;&gt;&gt; (154 samples, 0.14%)</title><rect x="5.1429%" y="949" width="0.1413%" height="15" fill="rgb(249,199,10)"/><text x="5.3929%" y="959.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (154 samples, 0.14%)</title><rect x="5.1429%" y="933" width="0.1413%" height="15" fill="rgb(249,222,13)"/><text x="5.3929%" y="943.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (154 samples, 0.14%)</title><rect x="5.1429%" y="917" width="0.1413%" height="15" fill="rgb(244,185,38)"/><text x="5.3929%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (152 samples, 0.14%)</title><rect x="5.1448%" y="901" width="0.1394%" height="15" fill="rgb(236,202,9)"/><text x="5.3948%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (152 samples, 0.14%)</title><rect x="5.1448%" y="885" width="0.1394%" height="15" fill="rgb(250,229,37)"/><text x="5.3948%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (61 samples, 0.06%)</title><rect x="5.2879%" y="965" width="0.0560%" height="15" fill="rgb(206,174,23)"/><text x="5.5379%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (61 samples, 0.06%)</title><rect x="5.2879%" y="949" width="0.0560%" height="15" fill="rgb(211,33,43)"/><text x="5.5379%" y="959.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (87 samples, 0.08%)</title><rect x="5.3438%" y="965" width="0.0798%" height="15" fill="rgb(245,58,50)"/><text x="5.5938%" y="975.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (87 samples, 0.08%)</title><rect x="5.3438%" y="949" width="0.0798%" height="15" fill="rgb(244,68,36)"/><text x="5.5938%" y="959.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (87 samples, 0.08%)</title><rect x="5.3438%" y="933" width="0.0798%" height="15" fill="rgb(232,229,15)"/><text x="5.5938%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (79 samples, 0.07%)</title><rect x="5.3512%" y="917" width="0.0725%" height="15" fill="rgb(254,30,23)"/><text x="5.6012%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (79 samples, 0.07%)</title><rect x="5.3512%" y="901" width="0.0725%" height="15" fill="rgb(235,160,14)"/><text x="5.6012%" y="911.50"></text></g><g><title>&lt;tokio::sync::notify::Notified as core::future::future::Future&gt;::poll (407 samples, 0.37%)</title><rect x="5.0631%" y="981" width="0.3734%" height="15" fill="rgb(212,155,44)"/><text x="5.3131%" y="991.50"></text></g><g><title>[libc-2.31.so] (222 samples, 0.20%)</title><rect x="5.4365%" y="981" width="0.2037%" height="15" fill="rgb(226,2,50)"/><text x="5.6865%" y="991.50"></text></g><g><title>[libc-2.31.so] (76 samples, 0.07%)</title><rect x="5.6805%" y="965" width="0.0697%" height="15" fill="rgb(234,177,6)"/><text x="5.9305%" y="975.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::read (291 samples, 0.27%)</title><rect x="5.7512%" y="965" width="0.2670%" height="15" fill="rgb(217,24,9)"/><text x="6.0012%" y="975.50"></text></g><g><title>core::ptr::read (291 samples, 0.27%)</title><rect x="5.7512%" y="949" width="0.2670%" height="15" fill="rgb(220,13,46)"/><text x="6.0012%" y="959.50"></text></g><g><title>[libc-2.31.so] (284 samples, 0.26%)</title><rect x="5.7576%" y="933" width="0.2605%" height="15" fill="rgb(239,221,27)"/><text x="6.0076%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (44 samples, 0.04%)</title><rect x="6.0181%" y="965" width="0.0404%" height="15" fill="rgb(222,198,25)"/><text x="6.2681%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (44 samples, 0.04%)</title><rect x="6.0181%" y="949" width="0.0404%" height="15" fill="rgb(211,99,13)"/><text x="6.2681%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (208 samples, 0.19%)</title><rect x="6.0585%" y="965" width="0.1908%" height="15" fill="rgb(232,111,31)"/><text x="6.3085%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_load (207 samples, 0.19%)</title><rect x="6.0594%" y="949" width="0.1899%" height="15" fill="rgb(245,82,37)"/><text x="6.3094%" y="959.50"></text></g><g><title>core::sync::atomic::fence (95 samples, 0.09%)</title><rect x="6.2502%" y="965" width="0.0872%" height="15" fill="rgb(227,149,46)"/><text x="6.5002%" y="975.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::pop (766 samples, 0.70%)</title><rect x="5.6457%" y="981" width="0.7027%" height="15" fill="rgb(218,36,50)"/><text x="5.8957%" y="991.50"></text></g><g><title>crossbeam_utils::backoff::Backoff::spin (12 samples, 0.01%)</title><rect x="6.3374%" y="965" width="0.0110%" height="15" fill="rgb(226,80,48)"/><text x="6.5874%" y="975.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (11 samples, 0.01%)</title><rect x="6.3383%" y="949" width="0.0101%" height="15" fill="rgb(238,224,15)"/><text x="6.5883%" y="959.50"></text></g><g><title>core::hint::spin_loop (11 samples, 0.01%)</title><rect x="6.3383%" y="933" width="0.0101%" height="15" fill="rgb(241,136,10)"/><text x="6.5883%" y="943.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (11 samples, 0.01%)</title><rect x="6.3383%" y="917" width="0.0101%" height="15" fill="rgb(208,32,45)"/><text x="6.5883%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,696 samples, 1.56%)</title><rect x="4.8127%" y="1013" width="1.5559%" height="15" fill="rgb(207,135,9)"/><text x="5.0627%" y="1023.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::run::{{closure}} (1,696 samples, 1.56%)</title><rect x="4.8127%" y="997" width="1.5559%" height="15" fill="rgb(206,86,44)"/><text x="5.0627%" y="1007.50"></text></g><g><title>tokio::sync::notify::Notify::notified (17 samples, 0.02%)</title><rect x="6.3530%" y="981" width="0.0156%" height="15" fill="rgb(245,177,15)"/><text x="6.6030%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (11 samples, 0.01%)</title><rect x="6.3585%" y="965" width="0.0101%" height="15" fill="rgb(206,64,50)"/><text x="6.6085%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.01%)</title><rect x="6.3585%" y="949" width="0.0101%" height="15" fill="rgb(234,36,40)"/><text x="6.6085%" y="959.50"></text></g><g><title>alloc_pages_vma (11 samples, 0.01%)</title><rect x="6.3888%" y="661" width="0.0101%" height="15" fill="rgb(213,64,8)"/><text x="6.6388%" y="671.50"></text></g><g><title>__alloc_pages_nodemask (11 samples, 0.01%)</title><rect x="6.3888%" y="645" width="0.0101%" height="15" fill="rgb(210,75,36)"/><text x="6.6388%" y="655.50"></text></g><g><title>mem_cgroup_charge (16 samples, 0.01%)</title><rect x="6.4044%" y="661" width="0.0147%" height="15" fill="rgb(229,88,21)"/><text x="6.6544%" y="671.50"></text></g><g><title>try_charge (14 samples, 0.01%)</title><rect x="6.4062%" y="645" width="0.0128%" height="15" fill="rgb(252,204,47)"/><text x="6.6562%" y="655.50"></text></g><g><title>do_anonymous_page (36 samples, 0.03%)</title><rect x="6.3888%" y="677" width="0.0330%" height="15" fill="rgb(208,77,27)"/><text x="6.6388%" y="687.50"></text></g><g><title>do_user_addr_fault (44 samples, 0.04%)</title><rect x="6.3833%" y="725" width="0.0404%" height="15" fill="rgb(221,76,26)"/><text x="6.6333%" y="735.50"></text></g><g><title>handle_mm_fault (43 samples, 0.04%)</title><rect x="6.3842%" y="709" width="0.0394%" height="15" fill="rgb(225,139,18)"/><text x="6.6342%" y="719.50"></text></g><g><title>__handle_mm_fault (41 samples, 0.04%)</title><rect x="6.3860%" y="693" width="0.0376%" height="15" fill="rgb(230,137,11)"/><text x="6.6360%" y="703.50"></text></g><g><title>asm_exc_page_fault (45 samples, 0.04%)</title><rect x="6.3833%" y="757" width="0.0413%" height="15" fill="rgb(212,28,1)"/><text x="6.6333%" y="767.50"></text></g><g><title>exc_page_fault (45 samples, 0.04%)</title><rect x="6.3833%" y="741" width="0.0413%" height="15" fill="rgb(248,164,17)"/><text x="6.6333%" y="751.50"></text></g><g><title>rho_runtime::main (1,786 samples, 1.64%)</title><rect x="4.7952%" y="1221" width="1.6385%" height="15" fill="rgb(222,171,42)"/><text x="5.0452%" y="1231.50"></text></g><g><title>tokio::runtime::Runtime::block_on (1,786 samples, 1.64%)</title><rect x="4.7952%" y="1205" width="1.6385%" height="15" fill="rgb(243,84,45)"/><text x="5.0452%" y="1215.50"></text></g><g><title>tokio::runtime::thread_pool::ThreadPool::block_on (1,786 samples, 1.64%)</title><rect x="4.7952%" y="1189" width="1.6385%" height="15" fill="rgb(252,49,23)"/><text x="5.0452%" y="1199.50"></text></g><g><title>tokio::runtime::enter::Enter::block_on (1,786 samples, 1.64%)</title><rect x="4.7952%" y="1173" width="1.6385%" height="15" fill="rgb(215,19,7)"/><text x="5.0452%" y="1183.50"></text></g><g><title>tokio::park::thread::CachedParkThread::block_on (1,786 samples, 1.64%)</title><rect x="4.7952%" y="1157" width="1.6385%" height="15" fill="rgb(238,81,41)"/><text x="5.0452%" y="1167.50"></text></g><g><title>tokio::coop::budget (1,786 samples, 1.64%)</title><rect x="4.7952%" y="1141" width="1.6385%" height="15" fill="rgb(210,199,37)"/><text x="5.0452%" y="1151.50"></text></g><g><title>tokio::coop::with_budget (1,786 samples, 1.64%)</title><rect x="4.7952%" y="1125" width="1.6385%" height="15" fill="rgb(244,192,49)"/><text x="5.0452%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,786 samples, 1.64%)</title><rect x="4.7952%" y="1109" width="1.6385%" height="15" fill="rgb(226,211,11)"/><text x="5.0452%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,786 samples, 1.64%)</title><rect x="4.7952%" y="1093" width="1.6385%" height="15" fill="rgb(236,162,54)"/><text x="5.0452%" y="1103.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (1,786 samples, 1.64%)</title><rect x="4.7952%" y="1077" width="1.6385%" height="15" fill="rgb(220,229,9)"/><text x="5.0452%" y="1087.50"></text></g><g><title>tokio::park::thread::CachedParkThread::block_on::{{closure}} (1,786 samples, 1.64%)</title><rect x="4.7952%" y="1061" width="1.6385%" height="15" fill="rgb(250,87,22)"/><text x="5.0452%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,786 samples, 1.64%)</title><rect x="4.7952%" y="1045" width="1.6385%" height="15" fill="rgb(239,43,17)"/><text x="5.0452%" y="1055.50"></text></g><g><title>rho_runtime::run::{{closure}} (1,778 samples, 1.63%)</title><rect x="4.8026%" y="1029" width="1.6311%" height="15" fill="rgb(231,177,25)"/><text x="5.0526%" y="1039.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::create (71 samples, 0.07%)</title><rect x="6.3686%" y="1013" width="0.0651%" height="15" fill="rgb(219,179,1)"/><text x="6.6186%" y="1023.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::new (71 samples, 0.07%)</title><rect x="6.3686%" y="997" width="0.0651%" height="15" fill="rgb(238,219,53)"/><text x="6.6186%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (71 samples, 0.07%)</title><rect x="6.3686%" y="981" width="0.0651%" height="15" fill="rgb(232,167,36)"/><text x="6.6186%" y="991.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[I]&gt; as core::iter::traits::collect::FromIterator&lt;I&gt;&gt;::from_iter (71 samples, 0.07%)</title><rect x="6.3686%" y="965" width="0.0651%" height="15" fill="rgb(244,19,51)"/><text x="6.6186%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (71 samples, 0.07%)</title><rect x="6.3686%" y="949" width="0.0651%" height="15" fill="rgb(224,6,22)"/><text x="6.6186%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (71 samples, 0.07%)</title><rect x="6.3686%" y="933" width="0.0651%" height="15" fill="rgb(224,145,5)"/><text x="6.6186%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (71 samples, 0.07%)</title><rect x="6.3686%" y="917" width="0.0651%" height="15" fill="rgb(234,130,49)"/><text x="6.6186%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (71 samples, 0.07%)</title><rect x="6.3686%" y="901" width="0.0651%" height="15" fill="rgb(254,6,2)"/><text x="6.6186%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (71 samples, 0.07%)</title><rect x="6.3686%" y="885" width="0.0651%" height="15" fill="rgb(208,96,46)"/><text x="6.6186%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (71 samples, 0.07%)</title><rect x="6.3686%" y="869" width="0.0651%" height="15" fill="rgb(239,3,39)"/><text x="6.6186%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (71 samples, 0.07%)</title><rect x="6.3686%" y="853" width="0.0651%" height="15" fill="rgb(233,210,1)"/><text x="6.6186%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (71 samples, 0.07%)</title><rect x="6.3686%" y="837" width="0.0651%" height="15" fill="rgb(244,137,37)"/><text x="6.6186%" y="847.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (71 samples, 0.07%)</title><rect x="6.3686%" y="821" width="0.0651%" height="15" fill="rgb(240,136,2)"/><text x="6.6186%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (71 samples, 0.07%)</title><rect x="6.3686%" y="805" width="0.0651%" height="15" fill="rgb(239,18,37)"/><text x="6.6186%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (71 samples, 0.07%)</title><rect x="6.3686%" y="789" width="0.0651%" height="15" fill="rgb(218,185,22)"/><text x="6.6186%" y="799.50"></text></g><g><title>core::ptr::write (71 samples, 0.07%)</title><rect x="6.3686%" y="773" width="0.0651%" height="15" fill="rgb(225,218,4)"/><text x="6.6186%" y="783.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::get_or_create_transit_port (13 samples, 0.01%)</title><rect x="6.4337%" y="1221" width="0.0119%" height="15" fill="rgb(230,182,32)"/><text x="6.6837%" y="1231.50"></text></g><g><title>[libc-2.31.so] (104 samples, 0.10%)</title><rect x="6.4539%" y="1125" width="0.0954%" height="15" fill="rgb(242,56,43)"/><text x="6.7039%" y="1135.50"></text></g><g><title>[libc-2.31.so] (149 samples, 0.14%)</title><rect x="6.5511%" y="1109" width="0.1367%" height="15" fill="rgb(233,99,24)"/><text x="6.8011%" y="1119.50"></text></g><g><title>[libc-2.31.so] (274 samples, 0.25%)</title><rect x="6.6952%" y="1093" width="0.2514%" height="15" fill="rgb(234,209,42)"/><text x="6.9452%" y="1103.50"></text></g><g><title>extent_sn_comp (20 samples, 0.02%)</title><rect x="7.1676%" y="805" width="0.0183%" height="15" fill="rgb(227,7,12)"/><text x="7.4176%" y="815.50"></text></g><g><title>extent_sn_get (17 samples, 0.02%)</title><rect x="7.1704%" y="789" width="0.0156%" height="15" fill="rgb(245,203,43)"/><text x="7.4204%" y="799.50"></text></g><g><title>arena_bin_slabs_nonfull_tryget (178 samples, 0.16%)</title><rect x="7.0245%" y="853" width="0.1633%" height="15" fill="rgb(238,205,33)"/><text x="7.2745%" y="863.50"></text></g><g><title>_rjem_je_extent_heap_remove_first (171 samples, 0.16%)</title><rect x="7.0309%" y="837" width="0.1569%" height="15" fill="rgb(231,56,7)"/><text x="7.2809%" y="847.50"></text></g><g><title>extent_snad_comp (24 samples, 0.02%)</title><rect x="7.1658%" y="821" width="0.0220%" height="15" fill="rgb(244,186,29)"/><text x="7.4158%" y="831.50"></text></g><g><title>arena_bin_nonfull_slab_get (182 samples, 0.17%)</title><rect x="7.0245%" y="869" width="0.1670%" height="15" fill="rgb(234,111,31)"/><text x="7.2745%" y="879.50"></text></g><g><title>bitmap_sfu (14 samples, 0.01%)</title><rect x="7.1970%" y="853" width="0.0128%" height="15" fill="rgb(241,149,10)"/><text x="7.4470%" y="863.50"></text></g><g><title>arena_slab_reg_alloc (16 samples, 0.01%)</title><rect x="7.1961%" y="869" width="0.0147%" height="15" fill="rgb(249,206,44)"/><text x="7.4461%" y="879.50"></text></g><g><title>arena_bin_malloc_hard (219 samples, 0.20%)</title><rect x="7.0117%" y="885" width="0.2009%" height="15" fill="rgb(251,153,30)"/><text x="7.2617%" y="895.50"></text></g><g><title>bitmap_set (13 samples, 0.01%)</title><rect x="7.2263%" y="853" width="0.0119%" height="15" fill="rgb(239,152,38)"/><text x="7.4763%" y="863.50"></text></g><g><title>bitmap_sfu (26 samples, 0.02%)</title><rect x="7.2227%" y="869" width="0.0239%" height="15" fill="rgb(249,139,47)"/><text x="7.4727%" y="879.50"></text></g><g><title>arena_slab_reg_alloc (33 samples, 0.03%)</title><rect x="7.2172%" y="885" width="0.0303%" height="15" fill="rgb(244,64,35)"/><text x="7.4672%" y="895.50"></text></g><g><title>malloc_mutex_lock (51 samples, 0.05%)</title><rect x="7.2493%" y="885" width="0.0468%" height="15" fill="rgb(216,46,15)"/><text x="7.4993%" y="895.50"></text></g><g><title>malloc_mutex_trylock_final (51 samples, 0.05%)</title><rect x="7.2493%" y="869" width="0.0468%" height="15" fill="rgb(250,74,19)"/><text x="7.4993%" y="879.50"></text></g><g><title>__GI___pthread_mutex_trylock (46 samples, 0.04%)</title><rect x="7.2539%" y="853" width="0.0422%" height="15" fill="rgb(249,42,33)"/><text x="7.5039%" y="863.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (371 samples, 0.34%)</title><rect x="6.9722%" y="901" width="0.3404%" height="15" fill="rgb(242,149,17)"/><text x="7.2222%" y="911.50"></text></g><g><title>malloc_mutex_unlock (18 samples, 0.02%)</title><rect x="7.2961%" y="885" width="0.0165%" height="15" fill="rgb(244,29,21)"/><text x="7.5461%" y="895.50"></text></g><g><title>__GI___pthread_mutex_unlock (16 samples, 0.01%)</title><rect x="7.2979%" y="869" width="0.0147%" height="15" fill="rgb(220,130,37)"/><text x="7.5479%" y="879.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (377 samples, 0.35%)</title><rect x="6.9686%" y="917" width="0.3459%" height="15" fill="rgb(211,67,2)"/><text x="7.2186%" y="927.50"></text></g><g><title>cache_bin_alloc_easy (12 samples, 0.01%)</title><rect x="7.3227%" y="917" width="0.0110%" height="15" fill="rgb(235,68,52)"/><text x="7.5727%" y="927.50"></text></g><g><title>imalloc_no_sample (402 samples, 0.37%)</title><rect x="6.9658%" y="981" width="0.3688%" height="15" fill="rgb(246,142,3)"/><text x="7.2158%" y="991.50"></text></g><g><title>iallocztm (399 samples, 0.37%)</title><rect x="6.9686%" y="965" width="0.3660%" height="15" fill="rgb(241,25,7)"/><text x="7.2186%" y="975.50"></text></g><g><title>arena_malloc (399 samples, 0.37%)</title><rect x="6.9686%" y="949" width="0.3660%" height="15" fill="rgb(242,119,39)"/><text x="7.2186%" y="959.50"></text></g><g><title>tcache_alloc_small (399 samples, 0.37%)</title><rect x="6.9686%" y="933" width="0.3660%" height="15" fill="rgb(241,98,45)"/><text x="7.2186%" y="943.50"></text></g><g><title>imalloc_body (406 samples, 0.37%)</title><rect x="6.9640%" y="997" width="0.3725%" height="15" fill="rgb(254,28,30)"/><text x="7.2140%" y="1007.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (863 samples, 0.79%)</title><rect x="6.5493%" y="1125" width="0.7917%" height="15" fill="rgb(241,142,54)"/><text x="6.7993%" y="1135.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (712 samples, 0.65%)</title><rect x="6.6878%" y="1109" width="0.6532%" height="15" fill="rgb(222,85,15)"/><text x="6.9378%" y="1119.50"></text></g><g><title>alloc::alloc::exchange_malloc (430 samples, 0.39%)</title><rect x="6.9465%" y="1093" width="0.3945%" height="15" fill="rgb(210,85,47)"/><text x="7.1965%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (430 samples, 0.39%)</title><rect x="6.9465%" y="1077" width="0.3945%" height="15" fill="rgb(224,206,25)"/><text x="7.1965%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (430 samples, 0.39%)</title><rect x="6.9465%" y="1061" width="0.3945%" height="15" fill="rgb(243,201,19)"/><text x="7.1965%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (429 samples, 0.39%)</title><rect x="6.9475%" y="1045" width="0.3936%" height="15" fill="rgb(236,59,4)"/><text x="7.1975%" y="1055.50"></text></g><g><title>_rjem_mallocx (420 samples, 0.39%)</title><rect x="6.9557%" y="1029" width="0.3853%" height="15" fill="rgb(254,179,45)"/><text x="7.2057%" y="1039.50"></text></g><g><title>imalloc (411 samples, 0.38%)</title><rect x="6.9640%" y="1013" width="0.3771%" height="15" fill="rgb(226,14,10)"/><text x="7.2140%" y="1023.50"></text></g><g><title>tokio::runtime::task::joinable (970 samples, 0.89%)</title><rect x="6.4530%" y="1157" width="0.8899%" height="15" fill="rgb(244,27,41)"/><text x="6.7030%" y="1167.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (970 samples, 0.89%)</title><rect x="6.4530%" y="1141" width="0.8899%" height="15" fill="rgb(235,35,32)"/><text x="6.7030%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (51 samples, 0.05%)</title><rect x="7.3860%" y="1109" width="0.0468%" height="15" fill="rgb(218,68,31)"/><text x="7.6360%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_swap (51 samples, 0.05%)</title><rect x="7.3860%" y="1093" width="0.0468%" height="15" fill="rgb(207,120,37)"/><text x="7.6360%" y="1103.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (99 samples, 0.09%)</title><rect x="7.3520%" y="1141" width="0.0908%" height="15" fill="rgb(227,98,0)"/><text x="7.6020%" y="1151.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (69 samples, 0.06%)</title><rect x="7.3795%" y="1125" width="0.0633%" height="15" fill="rgb(207,7,3)"/><text x="7.6295%" y="1135.50"></text></g><g><title>tokio::runtime::park::Inner::unpark_condvar (11 samples, 0.01%)</title><rect x="7.4328%" y="1109" width="0.0101%" height="15" fill="rgb(206,98,19)"/><text x="7.6828%" y="1119.50"></text></g><g><title>_raw_spin_lock (13 samples, 0.01%)</title><rect x="7.4777%" y="1013" width="0.0119%" height="15" fill="rgb(217,5,26)"/><text x="7.7277%" y="1023.50"></text></g><g><title>__unqueue_futex (18 samples, 0.02%)</title><rect x="7.5694%" y="981" width="0.0165%" height="15" fill="rgb(235,190,38)"/><text x="7.8194%" y="991.50"></text></g><g><title>mark_wake_futex (42 samples, 0.04%)</title><rect x="7.5483%" y="997" width="0.0385%" height="15" fill="rgb(247,86,24)"/><text x="7.7983%" y="1007.50"></text></g><g><title>select_task_rq_fair (16 samples, 0.01%)</title><rect x="7.6355%" y="965" width="0.0147%" height="15" fill="rgb(205,101,16)"/><text x="7.8855%" y="975.50"></text></g><g><title>enqueue_entity (53 samples, 0.05%)</title><rect x="7.6713%" y="933" width="0.0486%" height="15" fill="rgb(246,168,33)"/><text x="7.9213%" y="943.50"></text></g><g><title>update_load_avg (11 samples, 0.01%)</title><rect x="7.7098%" y="917" width="0.0101%" height="15" fill="rgb(231,114,1)"/><text x="7.9598%" y="927.50"></text></g><g><title>enqueue_task_fair (67 samples, 0.06%)</title><rect x="7.6594%" y="949" width="0.0615%" height="15" fill="rgb(207,184,53)"/><text x="7.9094%" y="959.50"></text></g><g><title>psi_group_change (40 samples, 0.04%)</title><rect x="7.7327%" y="933" width="0.0367%" height="15" fill="rgb(224,95,51)"/><text x="7.9827%" y="943.50"></text></g><g><title>psi_task_change (55 samples, 0.05%)</title><rect x="7.7208%" y="949" width="0.0505%" height="15" fill="rgb(212,188,45)"/><text x="7.9708%" y="959.50"></text></g><g><title>ttwu_do_activate (152 samples, 0.14%)</title><rect x="7.6511%" y="965" width="0.1394%" height="15" fill="rgb(223,154,38)"/><text x="7.9011%" y="975.50"></text></g><g><title>ttwu_do_wakeup (21 samples, 0.02%)</title><rect x="7.7713%" y="949" width="0.0193%" height="15" fill="rgb(251,22,52)"/><text x="8.0213%" y="959.50"></text></g><g><title>check_preempt_curr (21 samples, 0.02%)</title><rect x="7.7713%" y="933" width="0.0193%" height="15" fill="rgb(229,209,22)"/><text x="8.0213%" y="943.50"></text></g><g><title>resched_curr (18 samples, 0.02%)</title><rect x="7.7740%" y="917" width="0.0165%" height="15" fill="rgb(234,138,34)"/><text x="8.0240%" y="927.50"></text></g><g><title>__smp_call_single_queue (14 samples, 0.01%)</title><rect x="7.8043%" y="949" width="0.0128%" height="15" fill="rgb(212,95,11)"/><text x="8.0543%" y="959.50"></text></g><g><title>send_call_function_single_ipi (14 samples, 0.01%)</title><rect x="7.8043%" y="933" width="0.0128%" height="15" fill="rgb(240,179,47)"/><text x="8.0543%" y="943.50"></text></g><g><title>native_send_call_func_single_ipi (14 samples, 0.01%)</title><rect x="7.8043%" y="917" width="0.0128%" height="15" fill="rgb(240,163,11)"/><text x="8.0543%" y="927.50"></text></g><g><title>x2apic_send_IPI (14 samples, 0.01%)</title><rect x="7.8043%" y="901" width="0.0128%" height="15" fill="rgb(236,37,12)"/><text x="8.0543%" y="911.50"></text></g><g><title>ttwu_queue_wakelist (34 samples, 0.03%)</title><rect x="7.7905%" y="965" width="0.0312%" height="15" fill="rgb(232,164,16)"/><text x="8.0405%" y="975.50"></text></g><g><title>update_cfs_rq_h_load (19 samples, 0.02%)</title><rect x="7.8217%" y="965" width="0.0174%" height="15" fill="rgb(244,205,15)"/><text x="8.0717%" y="975.50"></text></g><g><title>try_to_wake_up (263 samples, 0.24%)</title><rect x="7.6034%" y="981" width="0.2413%" height="15" fill="rgb(223,117,47)"/><text x="7.8534%" y="991.50"></text></g><g><title>futex_wake (388 samples, 0.36%)</title><rect x="7.4896%" y="1013" width="0.3560%" height="15" fill="rgb(244,107,35)"/><text x="7.7396%" y="1023.50"></text></g><g><title>wake_up_q (274 samples, 0.25%)</title><rect x="7.5942%" y="997" width="0.2514%" height="15" fill="rgb(205,140,8)"/><text x="7.8442%" y="1007.50"></text></g><g><title>do_futex (416 samples, 0.38%)</title><rect x="7.4740%" y="1029" width="0.3816%" height="15" fill="rgb(228,84,46)"/><text x="7.7240%" y="1039.50"></text></g><g><title>__x64_sys_futex (418 samples, 0.38%)</title><rect x="7.4731%" y="1045" width="0.3835%" height="15" fill="rgb(254,188,9)"/><text x="7.7231%" y="1055.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (427 samples, 0.39%)</title><rect x="7.4658%" y="1077" width="0.3917%" height="15" fill="rgb(206,112,54)"/><text x="7.7158%" y="1087.50"></text></g><g><title>do_syscall_64 (425 samples, 0.39%)</title><rect x="7.4676%" y="1061" width="0.3899%" height="15" fill="rgb(216,84,49)"/><text x="7.7176%" y="1071.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (450 samples, 0.41%)</title><rect x="7.4465%" y="1109" width="0.4128%" height="15" fill="rgb(214,194,35)"/><text x="7.6965%" y="1119.50"></text></g><g><title>syscall (447 samples, 0.41%)</title><rect x="7.4493%" y="1093" width="0.4101%" height="15" fill="rgb(249,28,3)"/><text x="7.6993%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (21 samples, 0.02%)</title><rect x="7.8621%" y="1109" width="0.0193%" height="15" fill="rgb(222,56,52)"/><text x="8.1121%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_load (21 samples, 0.02%)</title><rect x="7.8621%" y="1093" width="0.0193%" height="15" fill="rgb(245,217,50)"/><text x="8.1121%" y="1103.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (16 samples, 0.01%)</title><rect x="7.8814%" y="1109" width="0.0147%" height="15" fill="rgb(213,201,24)"/><text x="8.1314%" y="1119.50"></text></g><g><title>std::time::Instant::now (13 samples, 0.01%)</title><rect x="7.8841%" y="1093" width="0.0119%" height="15" fill="rgb(248,116,28)"/><text x="8.1341%" y="1103.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (13 samples, 0.01%)</title><rect x="7.8841%" y="1077" width="0.0119%" height="15" fill="rgb(219,72,43)"/><text x="8.1341%" y="1087.50"></text></g><g><title>std::sys::unix::time::inner::now (13 samples, 0.01%)</title><rect x="7.8841%" y="1061" width="0.0119%" height="15" fill="rgb(209,138,14)"/><text x="8.1341%" y="1071.50"></text></g><g><title>__clock_gettime (12 samples, 0.01%)</title><rect x="7.8850%" y="1045" width="0.0110%" height="15" fill="rgb(222,18,33)"/><text x="8.1350%" y="1055.50"></text></g><g><title>__vdso_clock_gettime (11 samples, 0.01%)</title><rect x="7.8859%" y="1029" width="0.0101%" height="15" fill="rgb(213,199,7)"/><text x="8.1359%" y="1039.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (23 samples, 0.02%)</title><rect x="7.8960%" y="1109" width="0.0211%" height="15" fill="rgb(250,110,10)"/><text x="8.1460%" y="1119.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (21 samples, 0.02%)</title><rect x="7.8979%" y="1093" width="0.0193%" height="15" fill="rgb(248,123,6)"/><text x="8.1479%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (20 samples, 0.02%)</title><rect x="7.8988%" y="1077" width="0.0183%" height="15" fill="rgb(206,91,31)"/><text x="8.1488%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (20 samples, 0.02%)</title><rect x="7.8988%" y="1061" width="0.0183%" height="15" fill="rgb(211,154,13)"/><text x="8.1488%" y="1071.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (534 samples, 0.49%)</title><rect x="7.4428%" y="1141" width="0.4899%" height="15" fill="rgb(225,148,7)"/><text x="7.6928%" y="1151.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (533 samples, 0.49%)</title><rect x="7.4438%" y="1125" width="0.4890%" height="15" fill="rgb(220,160,43)"/><text x="7.6938%" y="1135.50"></text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (17 samples, 0.02%)</title><rect x="7.9171%" y="1109" width="0.0156%" height="15" fill="rgb(213,52,39)"/><text x="8.1671%" y="1119.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (17 samples, 0.02%)</title><rect x="7.9171%" y="1093" width="0.0156%" height="15" fill="rgb(243,137,7)"/><text x="8.1671%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (17 samples, 0.02%)</title><rect x="7.9171%" y="1077" width="0.0156%" height="15" fill="rgb(230,79,13)"/><text x="8.1671%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_sub (17 samples, 0.02%)</title><rect x="7.9171%" y="1061" width="0.0156%" height="15" fill="rgb(247,105,23)"/><text x="8.1671%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (28 samples, 0.03%)</title><rect x="7.9566%" y="1125" width="0.0257%" height="15" fill="rgb(223,179,41)"/><text x="8.2066%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (28 samples, 0.03%)</title><rect x="7.9566%" y="1109" width="0.0257%" height="15" fill="rgb(218,9,34)"/><text x="8.2066%" y="1119.50"></text></g><g><title>tokio::runtime::thread_pool::worker::CURRENT::FOO::__getit (22 samples, 0.02%)</title><rect x="7.9621%" y="1093" width="0.0202%" height="15" fill="rgb(222,106,8)"/><text x="8.2121%" y="1103.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (22 samples, 0.02%)</title><rect x="7.9621%" y="1077" width="0.0202%" height="15" fill="rgb(211,220,0)"/><text x="8.2121%" y="1087.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (22 samples, 0.02%)</title><rect x="7.9621%" y="1061" width="0.0202%" height="15" fill="rgb(229,52,16)"/><text x="8.2121%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (22 samples, 0.02%)</title><rect x="7.9621%" y="1045" width="0.0202%" height="15" fill="rgb(212,155,18)"/><text x="8.2121%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::queue::Pointers&gt;&gt; (50 samples, 0.05%)</title><rect x="8.0089%" y="1093" width="0.0459%" height="15" fill="rgb(242,21,14)"/><text x="8.2589%" y="1103.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.05%)</title><rect x="8.0089%" y="1077" width="0.0459%" height="15" fill="rgb(222,19,48)"/><text x="8.2589%" y="1087.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (50 samples, 0.05%)</title><rect x="8.0089%" y="1061" width="0.0459%" height="15" fill="rgb(232,45,27)"/><text x="8.2589%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (50 samples, 0.05%)</title><rect x="8.0089%" y="1045" width="0.0459%" height="15" fill="rgb(249,103,42)"/><text x="8.2589%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (50 samples, 0.05%)</title><rect x="8.0089%" y="1029" width="0.0459%" height="15" fill="rgb(246,81,33)"/><text x="8.2589%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (351 samples, 0.32%)</title><rect x="8.0630%" y="1045" width="0.3220%" height="15" fill="rgb(252,33,42)"/><text x="8.3130%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (351 samples, 0.32%)</title><rect x="8.0630%" y="1029" width="0.3220%" height="15" fill="rgb(209,212,41)"/><text x="8.3130%" y="1039.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (22 samples, 0.02%)</title><rect x="8.3850%" y="1045" width="0.0202%" height="15" fill="rgb(207,154,6)"/><text x="8.6350%" y="1055.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (382 samples, 0.35%)</title><rect x="8.0557%" y="1093" width="0.3504%" height="15" fill="rgb(223,64,47)"/><text x="8.3057%" y="1103.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (382 samples, 0.35%)</title><rect x="8.0557%" y="1077" width="0.3504%" height="15" fill="rgb(211,161,38)"/><text x="8.3057%" y="1087.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (382 samples, 0.35%)</title><rect x="8.0557%" y="1061" width="0.3504%" height="15" fill="rgb(219,138,40)"/><text x="8.3057%" y="1071.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (517 samples, 0.47%)</title><rect x="7.9327%" y="1141" width="0.4743%" height="15" fill="rgb(241,228,46)"/><text x="8.1827%" y="1151.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (463 samples, 0.42%)</title><rect x="7.9823%" y="1125" width="0.4248%" height="15" fill="rgb(223,209,38)"/><text x="8.2323%" y="1135.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::push (463 samples, 0.42%)</title><rect x="7.9823%" y="1109" width="0.4248%" height="15" fill="rgb(236,164,45)"/><text x="8.2323%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (45 samples, 0.04%)</title><rect x="8.4070%" y="1109" width="0.0413%" height="15" fill="rgb(231,15,5)"/><text x="8.6570%" y="1119.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (17 samples, 0.02%)</title><rect x="8.4566%" y="1109" width="0.0156%" height="15" fill="rgb(252,35,15)"/><text x="8.7066%" y="1119.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (17 samples, 0.02%)</title><rect x="8.4566%" y="1093" width="0.0156%" height="15" fill="rgb(248,181,18)"/><text x="8.7066%" y="1103.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (17 samples, 0.02%)</title><rect x="8.4566%" y="1077" width="0.0156%" height="15" fill="rgb(233,39,42)"/><text x="8.7066%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (103 samples, 0.09%)</title><rect x="8.4951%" y="1093" width="0.0945%" height="15" fill="rgb(238,110,33)"/><text x="8.7451%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_add (103 samples, 0.09%)</title><rect x="8.4951%" y="1077" width="0.0945%" height="15" fill="rgb(233,195,10)"/><text x="8.7451%" y="1087.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::notify_should_wakeup (129 samples, 0.12%)</title><rect x="8.4722%" y="1109" width="0.1183%" height="15" fill="rgb(254,105,3)"/><text x="8.7222%" y="1119.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::handle_join_double (2,346 samples, 2.15%)</title><rect x="6.4456%" y="1221" width="2.1522%" height="15" fill="rgb(221,225,9)"/><text x="6.6956%" y="1231.50">r..</text></g><g><title>tokio::task::spawn::spawn (2,344 samples, 2.15%)</title><rect x="6.4475%" y="1205" width="2.1504%" height="15" fill="rgb(224,227,45)"/><text x="6.6975%" y="1215.50">t..</text></g><g><title>tokio::runtime::spawner::Spawner::spawn (2,344 samples, 2.15%)</title><rect x="6.4475%" y="1189" width="2.1504%" height="15" fill="rgb(229,198,43)"/><text x="6.6975%" y="1199.50">t..</text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (2,342 samples, 2.15%)</title><rect x="6.4493%" y="1173" width="2.1485%" height="15" fill="rgb(206,209,35)"/><text x="6.6993%" y="1183.50">t..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (1,368 samples, 1.25%)</title><rect x="7.3428%" y="1157" width="1.2550%" height="15" fill="rgb(245,195,53)"/><text x="7.5928%" y="1167.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (208 samples, 0.19%)</title><rect x="8.4070%" y="1141" width="0.1908%" height="15" fill="rgb(240,92,26)"/><text x="8.6570%" y="1151.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::worker_to_notify (208 samples, 0.19%)</title><rect x="8.4070%" y="1125" width="0.1908%" height="15" fill="rgb(207,40,23)"/><text x="8.6570%" y="1135.50"></text></g><g><title>extent_sn_comp (11 samples, 0.01%)</title><rect x="8.6777%" y="805" width="0.0101%" height="15" fill="rgb(223,111,35)"/><text x="8.9277%" y="815.50"></text></g><g><title>arena_bin_slabs_nonfull_tryget (95 samples, 0.09%)</title><rect x="8.6034%" y="853" width="0.0872%" height="15" fill="rgb(229,147,28)"/><text x="8.8534%" y="863.50"></text></g><g><title>_rjem_je_extent_heap_remove_first (94 samples, 0.09%)</title><rect x="8.6043%" y="837" width="0.0862%" height="15" fill="rgb(211,29,28)"/><text x="8.8543%" y="847.50"></text></g><g><title>extent_snad_comp (17 samples, 0.02%)</title><rect x="8.6749%" y="821" width="0.0156%" height="15" fill="rgb(228,72,33)"/><text x="8.9249%" y="831.50"></text></g><g><title>arena_bin_nonfull_slab_get (106 samples, 0.10%)</title><rect x="8.6034%" y="869" width="0.0972%" height="15" fill="rgb(205,214,31)"/><text x="8.8534%" y="879.50"></text></g><g><title>arena_slab_alloc (11 samples, 0.01%)</title><rect x="8.6905%" y="853" width="0.0101%" height="15" fill="rgb(224,111,15)"/><text x="8.9405%" y="863.50"></text></g><g><title>arena_bin_malloc_hard (117 samples, 0.11%)</title><rect x="8.5978%" y="885" width="0.1073%" height="15" fill="rgb(253,21,26)"/><text x="8.8478%" y="895.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::handle_produce (137 samples, 0.13%)</title><rect x="8.5978%" y="1221" width="0.1257%" height="15" fill="rgb(245,139,43)"/><text x="8.8478%" y="1231.50"></text></g><g><title>tokio::task::spawn::spawn (137 samples, 0.13%)</title><rect x="8.5978%" y="1205" width="0.1257%" height="15" fill="rgb(252,170,7)"/><text x="8.8478%" y="1215.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (137 samples, 0.13%)</title><rect x="8.5978%" y="1189" width="0.1257%" height="15" fill="rgb(231,118,14)"/><text x="8.8478%" y="1199.50"></text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (137 samples, 0.13%)</title><rect x="8.5978%" y="1173" width="0.1257%" height="15" fill="rgb(238,83,0)"/><text x="8.8478%" y="1183.50"></text></g><g><title>tokio::runtime::task::joinable (137 samples, 0.13%)</title><rect x="8.5978%" y="1157" width="0.1257%" height="15" fill="rgb(221,39,39)"/><text x="8.8478%" y="1167.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (137 samples, 0.13%)</title><rect x="8.5978%" y="1141" width="0.1257%" height="15" fill="rgb(222,119,46)"/><text x="8.8478%" y="1151.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (137 samples, 0.13%)</title><rect x="8.5978%" y="1125" width="0.1257%" height="15" fill="rgb(222,165,49)"/><text x="8.8478%" y="1135.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (137 samples, 0.13%)</title><rect x="8.5978%" y="1109" width="0.1257%" height="15" fill="rgb(219,113,52)"/><text x="8.8478%" y="1119.50"></text></g><g><title>alloc::alloc::exchange_malloc (137 samples, 0.13%)</title><rect x="8.5978%" y="1093" width="0.1257%" height="15" fill="rgb(214,7,15)"/><text x="8.8478%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (137 samples, 0.13%)</title><rect x="8.5978%" y="1077" width="0.1257%" height="15" fill="rgb(235,32,4)"/><text x="8.8478%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (137 samples, 0.13%)</title><rect x="8.5978%" y="1061" width="0.1257%" height="15" fill="rgb(238,90,54)"/><text x="8.8478%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (137 samples, 0.13%)</title><rect x="8.5978%" y="1045" width="0.1257%" height="15" fill="rgb(213,208,19)"/><text x="8.8478%" y="1055.50"></text></g><g><title>_rjem_mallocx (137 samples, 0.13%)</title><rect x="8.5978%" y="1029" width="0.1257%" height="15" fill="rgb(233,156,4)"/><text x="8.8478%" y="1039.50"></text></g><g><title>imalloc (137 samples, 0.13%)</title><rect x="8.5978%" y="1013" width="0.1257%" height="15" fill="rgb(207,194,5)"/><text x="8.8478%" y="1023.50"></text></g><g><title>imalloc_body (137 samples, 0.13%)</title><rect x="8.5978%" y="997" width="0.1257%" height="15" fill="rgb(206,111,30)"/><text x="8.8478%" y="1007.50"></text></g><g><title>imalloc_no_sample (137 samples, 0.13%)</title><rect x="8.5978%" y="981" width="0.1257%" height="15" fill="rgb(243,70,54)"/><text x="8.8478%" y="991.50"></text></g><g><title>iallocztm (137 samples, 0.13%)</title><rect x="8.5978%" y="965" width="0.1257%" height="15" fill="rgb(242,28,8)"/><text x="8.8478%" y="975.50"></text></g><g><title>arena_malloc (137 samples, 0.13%)</title><rect x="8.5978%" y="949" width="0.1257%" height="15" fill="rgb(219,106,18)"/><text x="8.8478%" y="959.50"></text></g><g><title>tcache_alloc_small (137 samples, 0.13%)</title><rect x="8.5978%" y="933" width="0.1257%" height="15" fill="rgb(244,222,10)"/><text x="8.8478%" y="943.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (137 samples, 0.13%)</title><rect x="8.5978%" y="917" width="0.1257%" height="15" fill="rgb(236,179,52)"/><text x="8.8478%" y="927.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (137 samples, 0.13%)</title><rect x="8.5978%" y="901" width="0.1257%" height="15" fill="rgb(213,23,39)"/><text x="8.8478%" y="911.50"></text></g><g><title>malloc_mutex_lock (20 samples, 0.02%)</title><rect x="8.7052%" y="885" width="0.0183%" height="15" fill="rgb(238,48,10)"/><text x="8.9552%" y="895.50"></text></g><g><title>malloc_mutex_trylock_final (20 samples, 0.02%)</title><rect x="8.7052%" y="869" width="0.0183%" height="15" fill="rgb(251,196,23)"/><text x="8.9552%" y="879.50"></text></g><g><title>__GI___pthread_mutex_trylock (20 samples, 0.02%)</title><rect x="8.7052%" y="853" width="0.0183%" height="15" fill="rgb(250,152,24)"/><text x="8.9552%" y="863.50"></text></g><g><title>extent_recycle_extract (11 samples, 0.01%)</title><rect x="8.7795%" y="821" width="0.0101%" height="15" fill="rgb(209,150,17)"/><text x="9.0295%" y="831.50"></text></g><g><title>extent_split_impl (13 samples, 0.01%)</title><rect x="8.7923%" y="789" width="0.0119%" height="15" fill="rgb(234,202,34)"/><text x="9.0423%" y="799.50"></text></g><g><title>[unknown] (9,170 samples, 8.41%)</title><rect x="0.3936%" y="1237" width="8.4125%" height="15" fill="rgb(253,148,53)"/><text x="0.6436%" y="1247.50">[unknown]</text></g><g><title>tokio::task::spawn::spawn (36 samples, 0.03%)</title><rect x="8.7731%" y="1221" width="0.0330%" height="15" fill="rgb(218,129,16)"/><text x="9.0231%" y="1231.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (32 samples, 0.03%)</title><rect x="8.7767%" y="1205" width="0.0294%" height="15" fill="rgb(216,85,19)"/><text x="9.0267%" y="1215.50"></text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (32 samples, 0.03%)</title><rect x="8.7767%" y="1189" width="0.0294%" height="15" fill="rgb(235,228,7)"/><text x="9.0267%" y="1199.50"></text></g><g><title>tokio::runtime::task::joinable (32 samples, 0.03%)</title><rect x="8.7767%" y="1173" width="0.0294%" height="15" fill="rgb(245,175,0)"/><text x="9.0267%" y="1183.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (32 samples, 0.03%)</title><rect x="8.7767%" y="1157" width="0.0294%" height="15" fill="rgb(208,168,36)"/><text x="9.0267%" y="1167.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (32 samples, 0.03%)</title><rect x="8.7767%" y="1141" width="0.0294%" height="15" fill="rgb(246,171,24)"/><text x="9.0267%" y="1151.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (32 samples, 0.03%)</title><rect x="8.7767%" y="1125" width="0.0294%" height="15" fill="rgb(215,142,24)"/><text x="9.0267%" y="1135.50"></text></g><g><title>alloc::alloc::exchange_malloc (32 samples, 0.03%)</title><rect x="8.7767%" y="1109" width="0.0294%" height="15" fill="rgb(250,187,7)"/><text x="9.0267%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (32 samples, 0.03%)</title><rect x="8.7767%" y="1093" width="0.0294%" height="15" fill="rgb(228,66,33)"/><text x="9.0267%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (32 samples, 0.03%)</title><rect x="8.7767%" y="1077" width="0.0294%" height="15" fill="rgb(234,215,21)"/><text x="9.0267%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (32 samples, 0.03%)</title><rect x="8.7767%" y="1061" width="0.0294%" height="15" fill="rgb(222,191,20)"/><text x="9.0267%" y="1071.50"></text></g><g><title>_rjem_mallocx (32 samples, 0.03%)</title><rect x="8.7767%" y="1045" width="0.0294%" height="15" fill="rgb(245,79,54)"/><text x="9.0267%" y="1055.50"></text></g><g><title>imalloc (32 samples, 0.03%)</title><rect x="8.7767%" y="1029" width="0.0294%" height="15" fill="rgb(240,10,37)"/><text x="9.0267%" y="1039.50"></text></g><g><title>imalloc_body (32 samples, 0.03%)</title><rect x="8.7767%" y="1013" width="0.0294%" height="15" fill="rgb(214,192,32)"/><text x="9.0267%" y="1023.50"></text></g><g><title>imalloc_no_sample (32 samples, 0.03%)</title><rect x="8.7767%" y="997" width="0.0294%" height="15" fill="rgb(209,36,54)"/><text x="9.0267%" y="1007.50"></text></g><g><title>iallocztm (32 samples, 0.03%)</title><rect x="8.7767%" y="981" width="0.0294%" height="15" fill="rgb(220,10,11)"/><text x="9.0267%" y="991.50"></text></g><g><title>arena_malloc (32 samples, 0.03%)</title><rect x="8.7767%" y="965" width="0.0294%" height="15" fill="rgb(221,106,17)"/><text x="9.0267%" y="975.50"></text></g><g><title>tcache_alloc_small (32 samples, 0.03%)</title><rect x="8.7767%" y="949" width="0.0294%" height="15" fill="rgb(251,142,44)"/><text x="9.0267%" y="959.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (32 samples, 0.03%)</title><rect x="8.7767%" y="933" width="0.0294%" height="15" fill="rgb(238,13,15)"/><text x="9.0267%" y="943.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (32 samples, 0.03%)</title><rect x="8.7767%" y="917" width="0.0294%" height="15" fill="rgb(208,107,27)"/><text x="9.0267%" y="927.50"></text></g><g><title>arena_bin_malloc_hard (32 samples, 0.03%)</title><rect x="8.7767%" y="901" width="0.0294%" height="15" fill="rgb(205,136,37)"/><text x="9.0267%" y="911.50"></text></g><g><title>arena_bin_nonfull_slab_get (32 samples, 0.03%)</title><rect x="8.7767%" y="885" width="0.0294%" height="15" fill="rgb(250,205,27)"/><text x="9.0267%" y="895.50"></text></g><g><title>arena_slab_alloc (32 samples, 0.03%)</title><rect x="8.7767%" y="869" width="0.0294%" height="15" fill="rgb(210,80,43)"/><text x="9.0267%" y="879.50"></text></g><g><title>_rjem_je_extents_alloc (32 samples, 0.03%)</title><rect x="8.7767%" y="853" width="0.0294%" height="15" fill="rgb(247,160,36)"/><text x="9.0267%" y="863.50"></text></g><g><title>extent_recycle (32 samples, 0.03%)</title><rect x="8.7767%" y="837" width="0.0294%" height="15" fill="rgb(234,13,49)"/><text x="9.0267%" y="847.50"></text></g><g><title>extent_recycle_split (18 samples, 0.02%)</title><rect x="8.7896%" y="821" width="0.0165%" height="15" fill="rgb(234,122,0)"/><text x="9.0396%" y="831.50"></text></g><g><title>extent_split_interior (16 samples, 0.01%)</title><rect x="8.7914%" y="805" width="0.0147%" height="15" fill="rgb(207,146,38)"/><text x="9.0414%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,()&gt;&gt; (25 samples, 0.02%)</title><rect x="8.9602%" y="885" width="0.0229%" height="15" fill="rgb(207,177,25)"/><text x="9.2102%" y="895.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="8.9602%" y="869" width="0.0229%" height="15" fill="rgb(211,178,42)"/><text x="9.2102%" y="879.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (25 samples, 0.02%)</title><rect x="8.9602%" y="853" width="0.0229%" height="15" fill="rgb(230,69,54)"/><text x="9.2102%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (24 samples, 0.02%)</title><rect x="8.9611%" y="837" width="0.0220%" height="15" fill="rgb(214,135,41)"/><text x="9.2111%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (24 samples, 0.02%)</title><rect x="8.9611%" y="821" width="0.0220%" height="15" fill="rgb(237,67,25)"/><text x="9.2111%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (146 samples, 0.13%)</title><rect x="8.9832%" y="885" width="0.1339%" height="15" fill="rgb(222,189,50)"/><text x="9.2332%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (146 samples, 0.13%)</title><rect x="8.9832%" y="869" width="0.1339%" height="15" fill="rgb(245,148,34)"/><text x="9.2332%" y="879.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (47 samples, 0.04%)</title><rect x="9.1217%" y="837" width="0.0431%" height="15" fill="rgb(222,29,6)"/><text x="9.3717%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (45 samples, 0.04%)</title><rect x="9.1235%" y="821" width="0.0413%" height="15" fill="rgb(221,189,43)"/><text x="9.3735%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (45 samples, 0.04%)</title><rect x="9.1235%" y="805" width="0.0413%" height="15" fill="rgb(207,36,27)"/><text x="9.3735%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (239 samples, 0.22%)</title><rect x="9.1813%" y="773" width="0.2193%" height="15" fill="rgb(217,90,24)"/><text x="9.4313%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_load (239 samples, 0.22%)</title><rect x="9.1813%" y="757" width="0.2193%" height="15" fill="rgb(224,66,35)"/><text x="9.4313%" y="767.50"></text></g><g><title>entry_SYSCALL_64 (89 samples, 0.08%)</title><rect x="9.4804%" y="741" width="0.0816%" height="15" fill="rgb(221,13,50)"/><text x="9.7304%" y="751.50"></text></g><g><title>__syscall_return_slowpath (11 samples, 0.01%)</title><rect x="9.6666%" y="725" width="0.0101%" height="15" fill="rgb(236,68,49)"/><text x="9.9166%" y="735.50"></text></g><g><title>__prepare_exit_to_usermode (157 samples, 0.14%)</title><rect x="9.7611%" y="693" width="0.1440%" height="15" fill="rgb(229,146,28)"/><text x="10.0111%" y="703.50"></text></g><g><title>switch_fpu_return (133 samples, 0.12%)</title><rect x="9.7831%" y="677" width="0.1220%" height="15" fill="rgb(225,31,38)"/><text x="10.0331%" y="687.50"></text></g><g><title>__syscall_return_slowpath (179 samples, 0.16%)</title><rect x="9.7492%" y="709" width="0.1642%" height="15" fill="rgb(250,208,3)"/><text x="9.9992%" y="719.50"></text></g><g><title>_raw_spin_lock (38 samples, 0.03%)</title><rect x="10.1409%" y="661" width="0.0349%" height="15" fill="rgb(246,54,23)"/><text x="10.3909%" y="671.50"></text></g><g><title>__perf_event_task_sched_out (11 samples, 0.01%)</title><rect x="10.4005%" y="629" width="0.0101%" height="15" fill="rgb(243,76,11)"/><text x="10.6505%" y="639.50"></text></g><g><title>perf_pmu_disable.part.0 (16 samples, 0.01%)</title><rect x="10.6134%" y="565" width="0.0147%" height="15" fill="rgb(245,21,50)"/><text x="10.8634%" y="575.50"></text></g><g><title>native_sched_clock (39 samples, 0.04%)</title><rect x="10.6336%" y="549" width="0.0358%" height="15" fill="rgb(228,9,43)"/><text x="10.8836%" y="559.50"></text></g><g><title>sched_clock_cpu (45 samples, 0.04%)</title><rect x="10.6290%" y="565" width="0.0413%" height="15" fill="rgb(208,100,47)"/><text x="10.8790%" y="575.50"></text></g><g><title>ctx_sched_out (90 samples, 0.08%)</title><rect x="10.5996%" y="581" width="0.0826%" height="15" fill="rgb(232,26,8)"/><text x="10.8496%" y="591.50"></text></g><g><title>x86_pmu_disable (13 samples, 0.01%)</title><rect x="10.6703%" y="565" width="0.0119%" height="15" fill="rgb(216,166,38)"/><text x="10.9203%" y="575.50"></text></g><g><title>__perf_event_task_sched_out (125 samples, 0.11%)</title><rect x="10.5693%" y="613" width="0.1147%" height="15" fill="rgb(251,202,51)"/><text x="10.8193%" y="623.50"></text></g><g><title>task_ctx_sched_out (94 samples, 0.09%)</title><rect x="10.5978%" y="597" width="0.0862%" height="15" fill="rgb(254,216,34)"/><text x="10.8478%" y="607.50"></text></g><g><title>_raw_spin_lock (60 samples, 0.06%)</title><rect x="10.6849%" y="613" width="0.0550%" height="15" fill="rgb(251,32,27)"/><text x="10.9349%" y="623.50"></text></g><g><title>account_entity_dequeue (59 samples, 0.05%)</title><rect x="10.7987%" y="597" width="0.0541%" height="15" fill="rgb(208,127,28)"/><text x="11.0487%" y="607.50"></text></g><g><title>account_entity_dequeue (21 samples, 0.02%)</title><rect x="10.9253%" y="581" width="0.0193%" height="15" fill="rgb(224,137,22)"/><text x="11.1753%" y="591.50"></text></g><g><title>update_cfs_group (45 samples, 0.04%)</title><rect x="10.9592%" y="581" width="0.0413%" height="15" fill="rgb(254,70,32)"/><text x="11.2092%" y="591.50"></text></g><g><title>reweight_entity (28 samples, 0.03%)</title><rect x="10.9748%" y="565" width="0.0257%" height="15" fill="rgb(229,75,37)"/><text x="11.2248%" y="575.50"></text></g><g><title>__calc_delta (45 samples, 0.04%)</title><rect x="11.0978%" y="565" width="0.0413%" height="15" fill="rgb(252,64,23)"/><text x="11.3478%" y="575.50"></text></g><g><title>__cgroup_account_cputime (17 samples, 0.02%)</title><rect x="11.1390%" y="565" width="0.0156%" height="15" fill="rgb(232,162,48)"/><text x="11.3890%" y="575.50"></text></g><g><title>cpuacct_charge (111 samples, 0.10%)</title><rect x="11.1565%" y="565" width="0.1018%" height="15" fill="rgb(246,160,12)"/><text x="11.4065%" y="575.50"></text></g><g><title>update_curr (300 samples, 0.28%)</title><rect x="11.0005%" y="581" width="0.2752%" height="15" fill="rgb(247,166,0)"/><text x="11.2505%" y="591.50"></text></g><g><title>update_min_vruntime (19 samples, 0.02%)</title><rect x="11.2583%" y="565" width="0.0174%" height="15" fill="rgb(249,219,21)"/><text x="11.5083%" y="575.50"></text></g><g><title>__update_load_avg_cfs_rq (76 samples, 0.07%)</title><rect x="11.3445%" y="565" width="0.0697%" height="15" fill="rgb(205,209,3)"/><text x="11.5945%" y="575.50"></text></g><g><title>update_load_avg (221 samples, 0.20%)</title><rect x="11.2757%" y="581" width="0.2027%" height="15" fill="rgb(243,44,1)"/><text x="11.5257%" y="591.50"></text></g><g><title>__update_load_avg_se (70 samples, 0.06%)</title><rect x="11.4143%" y="565" width="0.0642%" height="15" fill="rgb(206,159,16)"/><text x="11.6643%" y="575.50"></text></g><g><title>dequeue_entity (691 samples, 0.63%)</title><rect x="10.8592%" y="597" width="0.6339%" height="15" fill="rgb(244,77,30)"/><text x="11.1092%" y="607.50"></text></g><g><title>update_min_vruntime (16 samples, 0.01%)</title><rect x="11.4785%" y="581" width="0.0147%" height="15" fill="rgb(218,69,12)"/><text x="11.7285%" y="591.50"></text></g><g><title>update_cfs_group (13 samples, 0.01%)</title><rect x="11.4932%" y="597" width="0.0119%" height="15" fill="rgb(212,87,7)"/><text x="11.7432%" y="607.50"></text></g><g><title>dequeue_task_fair (825 samples, 0.76%)</title><rect x="10.7510%" y="613" width="0.7569%" height="15" fill="rgb(245,114,25)"/><text x="11.0010%" y="623.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (13 samples, 0.01%)</title><rect x="11.7363%" y="533" width="0.0119%" height="15" fill="rgb(210,61,42)"/><text x="11.9863%" y="543.50"></text></g><g><title>__perf_event_task_sched_in (278 samples, 0.26%)</title><rect x="11.7216%" y="597" width="0.2550%" height="15" fill="rgb(211,52,33)"/><text x="11.9716%" y="607.50"></text></g><g><title>perf_pmu_enable.part.0 (271 samples, 0.25%)</title><rect x="11.7280%" y="581" width="0.2486%" height="15" fill="rgb(234,58,33)"/><text x="11.9780%" y="591.50"></text></g><g><title>x86_pmu_enable (271 samples, 0.25%)</title><rect x="11.7280%" y="565" width="0.2486%" height="15" fill="rgb(220,115,36)"/><text x="11.9780%" y="575.50"></text></g><g><title>intel_pmu_enable_all (265 samples, 0.24%)</title><rect x="11.7335%" y="549" width="0.2431%" height="15" fill="rgb(243,153,54)"/><text x="11.9835%" y="559.50"></text></g><g><title>native_write_msr (249 samples, 0.23%)</title><rect x="11.7482%" y="533" width="0.2284%" height="15" fill="rgb(251,47,18)"/><text x="11.9982%" y="543.50"></text></g><g><title>finish_task_switch (520 samples, 0.48%)</title><rect x="11.5078%" y="613" width="0.4770%" height="15" fill="rgb(242,102,42)"/><text x="11.7578%" y="623.50"></text></g><g><title>newidle_balance (105 samples, 0.10%)</title><rect x="12.0005%" y="597" width="0.0963%" height="15" fill="rgb(234,31,38)"/><text x="12.2505%" y="607.50"></text></g><g><title>pick_next_task_fair (124 samples, 0.11%)</title><rect x="11.9858%" y="613" width="0.1138%" height="15" fill="rgb(221,117,51)"/><text x="12.2358%" y="623.50"></text></g><g><title>pick_next_task_idle (45 samples, 0.04%)</title><rect x="12.0996%" y="613" width="0.0413%" height="15" fill="rgb(212,20,18)"/><text x="12.3496%" y="623.50"></text></g><g><title>set_next_task_idle (35 samples, 0.03%)</title><rect x="12.1087%" y="597" width="0.0321%" height="15" fill="rgb(245,133,36)"/><text x="12.3587%" y="607.50"></text></g><g><title>__update_idle_core (31 samples, 0.03%)</title><rect x="12.1124%" y="581" width="0.0284%" height="15" fill="rgb(212,6,19)"/><text x="12.3624%" y="591.50"></text></g><g><title>native_sched_clock (109 samples, 0.10%)</title><rect x="12.6711%" y="549" width="0.1000%" height="15" fill="rgb(218,1,36)"/><text x="12.9211%" y="559.50"></text></g><g><title>record_times (185 samples, 0.17%)</title><rect x="12.6050%" y="581" width="0.1697%" height="15" fill="rgb(246,84,54)"/><text x="12.8550%" y="591.50"></text></g><g><title>sched_clock_cpu (129 samples, 0.12%)</title><rect x="12.6564%" y="565" width="0.1183%" height="15" fill="rgb(242,110,6)"/><text x="12.9064%" y="575.50"></text></g><g><title>psi_group_change (531 samples, 0.49%)</title><rect x="12.2940%" y="597" width="0.4871%" height="15" fill="rgb(214,47,5)"/><text x="12.5440%" y="607.50"></text></g><g><title>psi_task_change (696 samples, 0.64%)</title><rect x="12.1491%" y="613" width="0.6385%" height="15" fill="rgb(218,159,25)"/><text x="12.3991%" y="623.50"></text></g><g><title>put_prev_task_fair (46 samples, 0.04%)</title><rect x="12.7977%" y="613" width="0.0422%" height="15" fill="rgb(215,211,28)"/><text x="13.0477%" y="623.50"></text></g><g><title>put_prev_entity (24 samples, 0.02%)</title><rect x="12.8179%" y="597" width="0.0220%" height="15" fill="rgb(238,59,32)"/><text x="13.0679%" y="607.50"></text></g><g><title>native_sched_clock (38 samples, 0.03%)</title><rect x="12.8693%" y="581" width="0.0349%" height="15" fill="rgb(226,82,3)"/><text x="13.1193%" y="591.50"></text></g><g><title>update_rq_clock (55 samples, 0.05%)</title><rect x="12.8546%" y="613" width="0.0505%" height="15" fill="rgb(240,164,32)"/><text x="13.1046%" y="623.50"></text></g><g><title>sched_clock_cpu (40 samples, 0.04%)</title><rect x="12.8683%" y="597" width="0.0367%" height="15" fill="rgb(232,46,7)"/><text x="13.1183%" y="607.50"></text></g><g><title>__sched_text_start (2,720 samples, 2.50%)</title><rect x="10.4106%" y="629" width="2.4953%" height="15" fill="rgb(229,129,53)"/><text x="10.6606%" y="639.50">__..</text></g><g><title>_raw_spin_lock (35 samples, 0.03%)</title><rect x="12.9069%" y="629" width="0.0321%" height="15" fill="rgb(234,188,29)"/><text x="13.1569%" y="639.50"></text></g><g><title>futex_wait_queue_me (3,026 samples, 2.78%)</title><rect x="10.1758%" y="661" width="2.7760%" height="15" fill="rgb(246,141,4)"/><text x="10.4258%" y="671.50">fu..</text></g><g><title>schedule (2,912 samples, 2.67%)</title><rect x="10.2804%" y="645" width="2.6715%" height="15" fill="rgb(229,23,39)"/><text x="10.5304%" y="655.50">sc..</text></g><g><title>get_futex_key (33 samples, 0.03%)</title><rect x="13.1536%" y="645" width="0.0303%" height="15" fill="rgb(206,12,3)"/><text x="13.4036%" y="655.50"></text></g><g><title>futex_wait_setup (327 samples, 0.30%)</title><rect x="12.9518%" y="661" width="0.3000%" height="15" fill="rgb(252,226,20)"/><text x="13.2018%" y="671.50"></text></g><g><title>get_futex_value_locked (74 samples, 0.07%)</title><rect x="13.1839%" y="645" width="0.0679%" height="15" fill="rgb(216,123,35)"/><text x="13.4339%" y="655.50"></text></g><g><title>hash_futex (52 samples, 0.05%)</title><rect x="13.2555%" y="661" width="0.0477%" height="15" fill="rgb(212,68,40)"/><text x="13.5055%" y="671.50"></text></g><g><title>plist_add (24 samples, 0.02%)</title><rect x="13.3032%" y="661" width="0.0220%" height="15" fill="rgb(254,125,32)"/><text x="13.5532%" y="671.50"></text></g><g><title>futex_wait (3,616 samples, 3.32%)</title><rect x="10.0116%" y="677" width="3.3173%" height="15" fill="rgb(253,97,22)"/><text x="10.2616%" y="687.50">fut..</text></g><g><title>do_futex (3,660 samples, 3.36%)</title><rect x="9.9785%" y="693" width="3.3577%" height="15" fill="rgb(241,101,14)"/><text x="10.2285%" y="703.50">do_..</text></g><g><title>__x64_sys_futex (3,741 samples, 3.43%)</title><rect x="9.9134%" y="709" width="3.4320%" height="15" fill="rgb(238,103,29)"/><text x="10.1634%" y="719.50">__x..</text></g><g><title>entry_SYSCALL_64_after_hwframe (4,127 samples, 3.79%)</title><rect x="9.5620%" y="741" width="3.7861%" height="15" fill="rgb(233,195,47)"/><text x="9.8120%" y="751.50">entr..</text></g><g><title>do_syscall_64 (3,991 samples, 3.66%)</title><rect x="9.6868%" y="725" width="3.6613%" height="15" fill="rgb(246,218,30)"/><text x="9.9368%" y="735.50">do_s..</text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (4,566 samples, 4.19%)</title><rect x="9.1786%" y="789" width="4.1888%" height="15" fill="rgb(219,145,47)"/><text x="9.4286%" y="799.50">&lt;park..</text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (4,324 samples, 3.97%)</title><rect x="9.4006%" y="773" width="3.9668%" height="15" fill="rgb(243,12,26)"/><text x="9.6506%" y="783.50">park..</text></g><g><title>syscall (4,320 samples, 3.96%)</title><rect x="9.4042%" y="757" width="3.9632%" height="15" fill="rgb(214,87,16)"/><text x="9.6542%" y="767.50">sysc..</text></g><g><title>syscall_return_via_sysret (21 samples, 0.02%)</title><rect x="13.3481%" y="741" width="0.0193%" height="15" fill="rgb(208,99,42)"/><text x="13.5981%" y="751.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (32 samples, 0.03%)</title><rect x="13.3729%" y="757" width="0.0294%" height="15" fill="rgb(253,99,2)"/><text x="13.6229%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (31 samples, 0.03%)</title><rect x="13.3738%" y="741" width="0.0284%" height="15" fill="rgb(220,168,23)"/><text x="13.6238%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (31 samples, 0.03%)</title><rect x="13.3738%" y="725" width="0.0284%" height="15" fill="rgb(242,38,24)"/><text x="13.6238%" y="735.50"></text></g><g><title>core::ops::function::FnOnce::call_once (36 samples, 0.03%)</title><rect x="13.3711%" y="789" width="0.0330%" height="15" fill="rgb(225,182,9)"/><text x="13.6211%" y="799.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal::{{closure}} (36 samples, 0.03%)</title><rect x="13.3711%" y="773" width="0.0330%" height="15" fill="rgb(243,178,37)"/><text x="13.6211%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (96 samples, 0.09%)</title><rect x="13.4197%" y="757" width="0.0881%" height="15" fill="rgb(232,139,19)"/><text x="13.6697%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (96 samples, 0.09%)</title><rect x="13.4197%" y="741" width="0.0881%" height="15" fill="rgb(225,201,24)"/><text x="13.6697%" y="751.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (115 samples, 0.11%)</title><rect x="13.4059%" y="789" width="0.1055%" height="15" fill="rgb(221,47,46)"/><text x="13.6559%" y="799.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (101 samples, 0.09%)</title><rect x="13.4188%" y="773" width="0.0927%" height="15" fill="rgb(249,23,13)"/><text x="13.6688%" y="783.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (4,837 samples, 4.44%)</title><rect x="9.1694%" y="805" width="4.4375%" height="15" fill="rgb(219,9,5)"/><text x="9.4194%" y="815.50">parki..</text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (104 samples, 0.10%)</title><rect x="13.5114%" y="789" width="0.0954%" height="15" fill="rgb(254,171,16)"/><text x="13.7614%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (103 samples, 0.09%)</title><rect x="13.5123%" y="773" width="0.0945%" height="15" fill="rgb(230,171,20)"/><text x="13.7623%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_sub (103 samples, 0.09%)</title><rect x="13.5123%" y="757" width="0.0945%" height="15" fill="rgb(210,71,41)"/><text x="13.7623%" y="767.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (4,898 samples, 4.49%)</title><rect x="9.1171%" y="885" width="4.4934%" height="15" fill="rgb(206,173,20)"/><text x="9.3671%" y="895.50">tokio..</text></g><g><title>parking_lot::condvar::Condvar::wait (4,898 samples, 4.49%)</title><rect x="9.1171%" y="869" width="4.4934%" height="15" fill="rgb(233,88,34)"/><text x="9.3671%" y="879.50">parki..</text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (4,897 samples, 4.49%)</title><rect x="9.1180%" y="853" width="4.4925%" height="15" fill="rgb(223,209,46)"/><text x="9.3680%" y="863.50">parki..</text></g><g><title>parking_lot_core::parking_lot::park (4,846 samples, 4.45%)</title><rect x="9.1648%" y="837" width="4.4457%" height="15" fill="rgb(250,43,18)"/><text x="9.4148%" y="847.50">parki..</text></g><g><title>parking_lot_core::parking_lot::with_thread_data (4,846 samples, 4.45%)</title><rect x="9.1648%" y="821" width="4.4457%" height="15" fill="rgb(208,13,10)"/><text x="9.4148%" y="831.50">parki..</text></g><g><title>&lt;tokio::park::thread::CachedParkThread as tokio::park::Park&gt;::park (5,179 samples, 4.75%)</title><rect x="8.8850%" y="981" width="4.7512%" height="15" fill="rgb(212,200,36)"/><text x="9.1350%" y="991.50">&lt;tokio..</text></g><g><title>tokio::park::thread::CachedParkThread::with_current (5,178 samples, 4.75%)</title><rect x="8.8859%" y="965" width="4.7503%" height="15" fill="rgb(225,90,30)"/><text x="9.1359%" y="975.50">tokio:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5,178 samples, 4.75%)</title><rect x="8.8859%" y="949" width="4.7503%" height="15" fill="rgb(236,182,39)"/><text x="9.1359%" y="959.50">std::t..</text></g><g><title>tokio::park::thread::CachedParkThread::with_current::{{closure}} (5,170 samples, 4.74%)</title><rect x="8.8933%" y="933" width="4.7429%" height="15" fill="rgb(212,144,35)"/><text x="9.1433%" y="943.50">tokio:..</text></g><g><title>&lt;tokio::park::thread::CachedParkThread as tokio::park::Park&gt;::park::{{closure}} (5,170 samples, 4.74%)</title><rect x="8.8933%" y="917" width="4.7429%" height="15" fill="rgb(228,63,44)"/><text x="9.1433%" y="927.50">&lt;tokio..</text></g><g><title>tokio::park::thread::Inner::park (5,102 samples, 4.68%)</title><rect x="8.9556%" y="901" width="4.6806%" height="15" fill="rgb(228,109,6)"/><text x="9.2056%" y="911.50">tokio..</text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (28 samples, 0.03%)</title><rect x="13.6105%" y="885" width="0.0257%" height="15" fill="rgb(238,117,24)"/><text x="13.8605%" y="895.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (28 samples, 0.03%)</title><rect x="13.6105%" y="869" width="0.0257%" height="15" fill="rgb(242,26,26)"/><text x="13.8605%" y="879.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (28 samples, 0.03%)</title><rect x="13.6105%" y="853" width="0.0257%" height="15" fill="rgb(221,92,48)"/><text x="13.8605%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (27 samples, 0.02%)</title><rect x="13.6114%" y="837" width="0.0248%" height="15" fill="rgb(209,209,32)"/><text x="13.8614%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (27 samples, 0.02%)</title><rect x="13.6114%" y="821" width="0.0248%" height="15" fill="rgb(221,70,22)"/><text x="13.8614%" y="831.50"></text></g><g><title>tokio::coop::CURRENT::__getit (21 samples, 0.02%)</title><rect x="13.6380%" y="917" width="0.0193%" height="15" fill="rgb(248,145,5)"/><text x="13.8880%" y="927.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (21 samples, 0.02%)</title><rect x="13.6380%" y="901" width="0.0193%" height="15" fill="rgb(226,116,26)"/><text x="13.8880%" y="911.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (18 samples, 0.02%)</title><rect x="13.6408%" y="885" width="0.0165%" height="15" fill="rgb(244,5,17)"/><text x="13.8908%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (18 samples, 0.02%)</title><rect x="13.6408%" y="869" width="0.0165%" height="15" fill="rgb(252,159,33)"/><text x="13.8908%" y="879.50"></text></g><g><title>_start (5,307 samples, 4.87%)</title><rect x="8.8098%" y="1237" width="4.8686%" height="15" fill="rgb(206,71,0)"/><text x="9.0598%" y="1247.50">_start</text></g><g><title>__libc_start_main (5,307 samples, 4.87%)</title><rect x="8.8098%" y="1221" width="4.8686%" height="15" fill="rgb(233,118,54)"/><text x="9.0598%" y="1231.50">__libc..</text></g><g><title>main (5,306 samples, 4.87%)</title><rect x="8.8107%" y="1205" width="4.8677%" height="15" fill="rgb(234,83,48)"/><text x="9.0607%" y="1215.50">main</text></g><g><title>std::rt::lang_start_internal (5,306 samples, 4.87%)</title><rect x="8.8107%" y="1189" width="4.8677%" height="15" fill="rgb(228,3,54)"/><text x="9.0607%" y="1199.50">std::r..</text></g><g><title>std::panic::catch_unwind (5,306 samples, 4.87%)</title><rect x="8.8107%" y="1173" width="4.8677%" height="15" fill="rgb(226,155,13)"/><text x="9.0607%" y="1183.50">std::p..</text></g><g><title>std::panicking::try (5,306 samples, 4.87%)</title><rect x="8.8107%" y="1157" width="4.8677%" height="15" fill="rgb(241,28,37)"/><text x="9.0607%" y="1167.50">std::p..</text></g><g><title>std::panicking::try::do_call (5,306 samples, 4.87%)</title><rect x="8.8107%" y="1141" width="4.8677%" height="15" fill="rgb(233,93,10)"/><text x="9.0607%" y="1151.50">std::p..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (5,306 samples, 4.87%)</title><rect x="8.8107%" y="1125" width="4.8677%" height="15" fill="rgb(225,113,19)"/><text x="9.0607%" y="1135.50">core::..</text></g><g><title>std::rt::lang_start::{{closure}} (5,306 samples, 4.87%)</title><rect x="8.8107%" y="1109" width="4.8677%" height="15" fill="rgb(241,2,18)"/><text x="9.0607%" y="1119.50">std::r..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5,306 samples, 4.87%)</title><rect x="8.8107%" y="1093" width="4.8677%" height="15" fill="rgb(228,207,21)"/><text x="9.0607%" y="1103.50">std::s..</text></g><g><title>core::ops::function::FnOnce::call_once (5,306 samples, 4.87%)</title><rect x="8.8107%" y="1077" width="4.8677%" height="15" fill="rgb(213,211,35)"/><text x="9.0607%" y="1087.50">core::..</text></g><g><title>rho_runtime::main (5,306 samples, 4.87%)</title><rect x="8.8107%" y="1061" width="4.8677%" height="15" fill="rgb(209,83,10)"/><text x="9.0607%" y="1071.50">rho_ru..</text></g><g><title>tokio::runtime::Runtime::block_on (5,300 samples, 4.86%)</title><rect x="8.8162%" y="1045" width="4.8622%" height="15" fill="rgb(209,164,1)"/><text x="9.0662%" y="1055.50">tokio:..</text></g><g><title>tokio::runtime::thread_pool::ThreadPool::block_on (5,300 samples, 4.86%)</title><rect x="8.8162%" y="1029" width="4.8622%" height="15" fill="rgb(213,184,43)"/><text x="9.0662%" y="1039.50">tokio:..</text></g><g><title>tokio::runtime::enter::Enter::block_on (5,300 samples, 4.86%)</title><rect x="8.8162%" y="1013" width="4.8622%" height="15" fill="rgb(231,61,34)"/><text x="9.0662%" y="1023.50">tokio:..</text></g><g><title>tokio::park::thread::CachedParkThread::block_on (5,300 samples, 4.86%)</title><rect x="8.8162%" y="997" width="4.8622%" height="15" fill="rgb(235,75,3)"/><text x="9.0662%" y="1007.50">tokio:..</text></g><g><title>tokio::coop::budget (46 samples, 0.04%)</title><rect x="13.6362%" y="981" width="0.0422%" height="15" fill="rgb(220,106,47)"/><text x="13.8862%" y="991.50"></text></g><g><title>tokio::coop::with_budget (44 samples, 0.04%)</title><rect x="13.6380%" y="965" width="0.0404%" height="15" fill="rgb(210,196,33)"/><text x="13.8880%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (44 samples, 0.04%)</title><rect x="13.6380%" y="949" width="0.0404%" height="15" fill="rgb(229,154,42)"/><text x="13.8880%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (44 samples, 0.04%)</title><rect x="13.6380%" y="933" width="0.0404%" height="15" fill="rgb(228,114,26)"/><text x="13.8880%" y="943.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (23 samples, 0.02%)</title><rect x="13.6573%" y="917" width="0.0211%" height="15" fill="rgb(208,144,1)"/><text x="13.9073%" y="927.50"></text></g><g><title>tokio::park::thread::CachedParkThread::block_on::{{closure}} (13 samples, 0.01%)</title><rect x="13.6665%" y="901" width="0.0119%" height="15" fill="rgb(239,112,37)"/><text x="13.9165%" y="911.50"></text></g><g><title>asm_exc_page_fault (14 samples, 0.01%)</title><rect x="13.6830%" y="1237" width="0.0128%" height="15" fill="rgb(210,96,50)"/><text x="13.9330%" y="1247.50"></text></g><g><title>schedule_tail (41 samples, 0.04%)</title><rect x="13.6986%" y="1205" width="0.0376%" height="15" fill="rgb(222,178,2)"/><text x="13.9486%" y="1215.50"></text></g><g><title>finish_task_switch (41 samples, 0.04%)</title><rect x="13.6986%" y="1189" width="0.0376%" height="15" fill="rgb(226,74,18)"/><text x="13.9486%" y="1199.50"></text></g><g><title>__perf_event_task_sched_in (40 samples, 0.04%)</title><rect x="13.6995%" y="1173" width="0.0367%" height="15" fill="rgb(225,67,54)"/><text x="13.9495%" y="1183.50"></text></g><g><title>perf_pmu_enable.part.0 (40 samples, 0.04%)</title><rect x="13.6995%" y="1157" width="0.0367%" height="15" fill="rgb(251,92,32)"/><text x="13.9495%" y="1167.50"></text></g><g><title>x86_pmu_enable (39 samples, 0.04%)</title><rect x="13.7004%" y="1141" width="0.0358%" height="15" fill="rgb(228,149,22)"/><text x="13.9504%" y="1151.50"></text></g><g><title>intel_pmu_enable_all (39 samples, 0.04%)</title><rect x="13.7004%" y="1125" width="0.0358%" height="15" fill="rgb(243,54,13)"/><text x="13.9504%" y="1135.50"></text></g><g><title>native_write_msr (39 samples, 0.04%)</title><rect x="13.7004%" y="1109" width="0.0358%" height="15" fill="rgb(243,180,28)"/><text x="13.9504%" y="1119.50"></text></g><g><title>ret_from_fork (42 samples, 0.04%)</title><rect x="13.6986%" y="1221" width="0.0385%" height="15" fill="rgb(208,167,24)"/><text x="13.9486%" y="1231.50"></text></g><g><title>clone (45 samples, 0.04%)</title><rect x="13.6967%" y="1237" width="0.0413%" height="15" fill="rgb(245,73,45)"/><text x="13.9467%" y="1247.50"></text></g><g><title>entry_SYSCALL_64 (22 samples, 0.02%)</title><rect x="13.7380%" y="1237" width="0.0202%" height="15" fill="rgb(237,203,48)"/><text x="13.9880%" y="1247.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (34 samples, 0.03%)</title><rect x="13.7582%" y="1237" width="0.0312%" height="15" fill="rgb(211,197,16)"/><text x="14.0082%" y="1247.50"></text></g><g><title>do_syscall_64 (23 samples, 0.02%)</title><rect x="13.7683%" y="1221" width="0.0211%" height="15" fill="rgb(243,99,51)"/><text x="14.0183%" y="1231.50"></text></g><g><title>__x64_sys_exit_group (22 samples, 0.02%)</title><rect x="13.7692%" y="1205" width="0.0202%" height="15" fill="rgb(215,123,29)"/><text x="14.0192%" y="1215.50"></text></g><g><title>do_group_exit (22 samples, 0.02%)</title><rect x="13.7692%" y="1189" width="0.0202%" height="15" fill="rgb(239,186,37)"/><text x="14.0192%" y="1199.50"></text></g><g><title>do_exit (22 samples, 0.02%)</title><rect x="13.7692%" y="1173" width="0.0202%" height="15" fill="rgb(252,136,39)"/><text x="14.0192%" y="1183.50"></text></g><g><title>mmput (22 samples, 0.02%)</title><rect x="13.7692%" y="1157" width="0.0202%" height="15" fill="rgb(223,213,32)"/><text x="14.0192%" y="1167.50"></text></g><g><title>exit_mmap (22 samples, 0.02%)</title><rect x="13.7692%" y="1141" width="0.0202%" height="15" fill="rgb(233,115,5)"/><text x="14.0192%" y="1151.50"></text></g><g><title>unmap_vmas (21 samples, 0.02%)</title><rect x="13.7701%" y="1125" width="0.0193%" height="15" fill="rgb(207,226,44)"/><text x="14.0201%" y="1135.50"></text></g><g><title>unmap_single_vma (21 samples, 0.02%)</title><rect x="13.7701%" y="1109" width="0.0193%" height="15" fill="rgb(208,126,0)"/><text x="14.0201%" y="1119.50"></text></g><g><title>unmap_page_range (21 samples, 0.02%)</title><rect x="13.7701%" y="1093" width="0.0193%" height="15" fill="rgb(244,66,21)"/><text x="14.0201%" y="1103.50"></text></g><g><title>zap_pte_range.isra.0 (21 samples, 0.02%)</title><rect x="13.7701%" y="1077" width="0.0193%" height="15" fill="rgb(222,97,12)"/><text x="14.0201%" y="1087.50"></text></g><g><title>tlb_flush_mmu (12 samples, 0.01%)</title><rect x="13.7784%" y="1061" width="0.0110%" height="15" fill="rgb(219,213,19)"/><text x="14.0284%" y="1071.50"></text></g><g><title>free_pages_and_swap_cache (12 samples, 0.01%)</title><rect x="13.7784%" y="1045" width="0.0110%" height="15" fill="rgb(252,169,30)"/><text x="14.0284%" y="1055.50"></text></g><g><title>release_pages (11 samples, 0.01%)</title><rect x="13.7793%" y="1029" width="0.0101%" height="15" fill="rgb(206,32,51)"/><text x="14.0293%" y="1039.50"></text></g><g><title>jemallocator::layout_to_flags (11 samples, 0.01%)</title><rect x="13.7894%" y="1237" width="0.0101%" height="15" fill="rgb(250,172,42)"/><text x="14.0394%" y="1247.50"></text></g><g><title>rho_runtime (15,050 samples, 13.81%)</title><rect x="0.0046%" y="1253" width="13.8068%" height="15" fill="rgb(209,34,43)"/><text x="0.2546%" y="1263.50">rho_runtime</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="13.8197%" y="1237" width="0.0156%" height="15" fill="rgb(223,11,35)"/><text x="14.0697%" y="1247.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (23 samples, 0.02%)</title><rect x="13.8444%" y="1237" width="0.0211%" height="15" fill="rgb(251,219,26)"/><text x="14.0944%" y="1247.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="13.8729%" y="1237" width="0.0101%" height="15" fill="rgb(231,119,3)"/><text x="14.1229%" y="1247.50"></text></g><g><title>[libc-2.31.so] (14 samples, 0.01%)</title><rect x="13.8986%" y="1221" width="0.0128%" height="15" fill="rgb(216,97,11)"/><text x="14.1486%" y="1231.50"></text></g><g><title>alloc::slice::merge_sort (19 samples, 0.02%)</title><rect x="13.9142%" y="1221" width="0.0174%" height="15" fill="rgb(223,59,9)"/><text x="14.1642%" y="1231.50"></text></g><g><title>[[stack]] (83 samples, 0.08%)</title><rect x="13.8830%" y="1237" width="0.0761%" height="15" fill="rgb(233,93,31)"/><text x="14.1330%" y="1247.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (63 samples, 0.06%)</title><rect x="14.2334%" y="1205" width="0.0578%" height="15" fill="rgb(239,81,33)"/><text x="14.4834%" y="1215.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (35 samples, 0.03%)</title><rect x="14.2591%" y="1189" width="0.0321%" height="15" fill="rgb(213,120,34)"/><text x="14.5091%" y="1199.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="14.2775%" y="1173" width="0.0138%" height="15" fill="rgb(243,49,53)"/><text x="14.5275%" y="1183.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="14.2802%" y="1157" width="0.0110%" height="15" fill="rgb(247,216,33)"/><text x="14.5302%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13 samples, 0.01%)</title><rect x="14.2912%" y="1205" width="0.0119%" height="15" fill="rgb(226,26,14)"/><text x="14.5412%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.01%)</title><rect x="14.2912%" y="1189" width="0.0119%" height="15" fill="rgb(215,49,53)"/><text x="14.5412%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (13 samples, 0.01%)</title><rect x="14.2912%" y="1173" width="0.0119%" height="15" fill="rgb(245,162,40)"/><text x="14.5412%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="14.2912%" y="1157" width="0.0119%" height="15" fill="rgb(229,68,17)"/><text x="14.5412%" y="1167.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="14.2912%" y="1141" width="0.0119%" height="15" fill="rgb(213,182,10)"/><text x="14.5412%" y="1151.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="14.2912%" y="1125" width="0.0119%" height="15" fill="rgb(245,125,30)"/><text x="14.5412%" y="1135.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (408 samples, 0.37%)</title><rect x="13.9591%" y="1221" width="0.3743%" height="15" fill="rgb(232,202,2)"/><text x="14.2091%" y="1231.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (33 samples, 0.03%)</title><rect x="14.3031%" y="1205" width="0.0303%" height="15" fill="rgb(237,140,51)"/><text x="14.5531%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (45 samples, 0.04%)</title><rect x="14.4270%" y="1205" width="0.0413%" height="15" fill="rgb(236,157,25)"/><text x="14.6770%" y="1215.50"></text></g><g><title>&lt;model::rho_types::Send as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="14.4738%" y="1157" width="0.0110%" height="15" fill="rgb(219,209,0)"/><text x="14.7238%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (174 samples, 0.16%)</title><rect x="14.3334%" y="1221" width="0.1596%" height="15" fill="rgb(240,116,54)"/><text x="14.5834%" y="1231.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (27 samples, 0.02%)</title><rect x="14.4683%" y="1205" width="0.0248%" height="15" fill="rgb(216,10,36)"/><text x="14.7183%" y="1215.50"></text></g><g><title>alloc::slice::hack::to_vec (27 samples, 0.02%)</title><rect x="14.4683%" y="1189" width="0.0248%" height="15" fill="rgb(222,72,44)"/><text x="14.7183%" y="1199.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (27 samples, 0.02%)</title><rect x="14.4683%" y="1173" width="0.0248%" height="15" fill="rgb(232,159,9)"/><text x="14.7183%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (198 samples, 0.18%)</title><rect x="14.4930%" y="1221" width="0.1816%" height="15" fill="rgb(210,39,32)"/><text x="14.7430%" y="1231.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (12 samples, 0.01%)</title><rect x="14.7114%" y="1189" width="0.0110%" height="15" fill="rgb(216,194,45)"/><text x="14.9614%" y="1199.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::produce::{{closure}} (24 samples, 0.02%)</title><rect x="14.7096%" y="1205" width="0.0220%" height="15" fill="rgb(218,18,35)"/><text x="14.9596%" y="1215.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (76 samples, 0.07%)</title><rect x="14.6793%" y="1221" width="0.0697%" height="15" fill="rgb(207,83,51)"/><text x="14.9293%" y="1231.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation::{{closure}} (19 samples, 0.02%)</title><rect x="14.7316%" y="1205" width="0.0174%" height="15" fill="rgb(225,63,43)"/><text x="14.9816%" y="1215.50"></text></g><g><title>&lt;model::locally_free::ExprInstanceLocallyFree as model::locally_free::HasLocallyFree&lt;model::rho_types::expr::ExprInstance&gt;&gt;::locally_free (11 samples, 0.01%)</title><rect x="14.7518%" y="1221" width="0.0101%" height="15" fill="rgb(207,57,36)"/><text x="15.0018%" y="1231.50"></text></g><g><title>&lt;model::ordering::ScoreTreeIter as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="14.7618%" y="1221" width="0.0220%" height="15" fill="rgb(216,99,33)"/><text x="15.0118%" y="1231.50"></text></g><g><title>&lt;model::ordering::sort_par::ParScoreTreeIter as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="14.7839%" y="1221" width="0.0165%" height="15" fill="rgb(225,42,16)"/><text x="15.0339%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (36 samples, 0.03%)</title><rect x="14.8591%" y="1205" width="0.0330%" height="15" fill="rgb(220,201,45)"/><text x="15.1091%" y="1215.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19 samples, 0.02%)</title><rect x="14.8747%" y="1189" width="0.0174%" height="15" fill="rgb(225,33,4)"/><text x="15.1247%" y="1199.50"></text></g><g><title>alloc::slice::hack::to_vec (19 samples, 0.02%)</title><rect x="14.8747%" y="1173" width="0.0174%" height="15" fill="rgb(224,33,50)"/><text x="15.1247%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (18 samples, 0.02%)</title><rect x="14.8921%" y="1093" width="0.0165%" height="15" fill="rgb(246,198,51)"/><text x="15.1421%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18 samples, 0.02%)</title><rect x="14.8921%" y="1077" width="0.0165%" height="15" fill="rgb(205,22,4)"/><text x="15.1421%" y="1087.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (122 samples, 0.11%)</title><rect x="14.8022%" y="1221" width="0.1119%" height="15" fill="rgb(206,3,8)"/><text x="15.0522%" y="1231.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (24 samples, 0.02%)</title><rect x="14.8921%" y="1205" width="0.0220%" height="15" fill="rgb(251,23,15)"/><text x="15.1421%" y="1215.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (24 samples, 0.02%)</title><rect x="14.8921%" y="1189" width="0.0220%" height="15" fill="rgb(252,88,28)"/><text x="15.1421%" y="1199.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (24 samples, 0.02%)</title><rect x="14.8921%" y="1173" width="0.0220%" height="15" fill="rgb(212,127,14)"/><text x="15.1421%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (24 samples, 0.02%)</title><rect x="14.8921%" y="1157" width="0.0220%" height="15" fill="rgb(247,145,37)"/><text x="15.1421%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (24 samples, 0.02%)</title><rect x="14.8921%" y="1141" width="0.0220%" height="15" fill="rgb(209,117,53)"/><text x="15.1421%" y="1151.50"></text></g><g><title>alloc::slice::hack::to_vec (24 samples, 0.02%)</title><rect x="14.8921%" y="1125" width="0.0220%" height="15" fill="rgb(212,90,42)"/><text x="15.1421%" y="1135.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (24 samples, 0.02%)</title><rect x="14.8921%" y="1109" width="0.0220%" height="15" fill="rgb(218,164,37)"/><text x="15.1421%" y="1119.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash::traverse (16 samples, 0.01%)</title><rect x="14.9187%" y="1221" width="0.0147%" height="15" fill="rgb(246,65,34)"/><text x="15.1687%" y="1231.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_nested_expressions (21 samples, 0.02%)</title><rect x="14.9343%" y="1221" width="0.0193%" height="15" fill="rgb(231,100,33)"/><text x="15.1843%" y="1231.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (46 samples, 0.04%)</title><rect x="14.9536%" y="1221" width="0.0422%" height="15" fill="rgb(228,126,14)"/><text x="15.2036%" y="1231.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (30 samples, 0.03%)</title><rect x="14.9958%" y="1221" width="0.0275%" height="15" fill="rgb(215,173,21)"/><text x="15.2458%" y="1231.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (60 samples, 0.06%)</title><rect x="15.0334%" y="1221" width="0.0550%" height="15" fill="rgb(210,6,40)"/><text x="15.2834%" y="1231.50"></text></g><g><title>tokio::runtime::park::Inner::park (13 samples, 0.01%)</title><rect x="15.0765%" y="1205" width="0.0119%" height="15" fill="rgb(212,48,18)"/><text x="15.3265%" y="1215.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (46 samples, 0.04%)</title><rect x="15.0930%" y="1221" width="0.0422%" height="15" fill="rgb(230,214,11)"/><text x="15.3430%" y="1231.50"></text></g><g><title>tokio::coop::poll_proceed (13 samples, 0.01%)</title><rect x="15.1233%" y="1205" width="0.0119%" height="15" fill="rgb(254,105,39)"/><text x="15.3733%" y="1215.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (13 samples, 0.01%)</title><rect x="15.1233%" y="1189" width="0.0119%" height="15" fill="rgb(245,158,5)"/><text x="15.3733%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13 samples, 0.01%)</title><rect x="15.1233%" y="1173" width="0.0119%" height="15" fill="rgb(249,208,11)"/><text x="15.3733%" y="1183.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (14 samples, 0.01%)</title><rect x="15.1389%" y="1205" width="0.0128%" height="15" fill="rgb(210,39,28)"/><text x="15.3889%" y="1215.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (49 samples, 0.04%)</title><rect x="15.1352%" y="1221" width="0.0450%" height="15" fill="rgb(211,56,53)"/><text x="15.3852%" y="1231.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::poll_recv (31 samples, 0.03%)</title><rect x="15.1517%" y="1205" width="0.0284%" height="15" fill="rgb(226,201,30)"/><text x="15.4017%" y="1215.50"></text></g><g><title>[libc-2.31.so] (64 samples, 0.06%)</title><rect x="15.1802%" y="1221" width="0.0587%" height="15" fill="rgb(239,101,34)"/><text x="15.4302%" y="1231.50"></text></g><g><title>__GI___pthread_mutex_trylock (12 samples, 0.01%)</title><rect x="15.2389%" y="1221" width="0.0110%" height="15" fill="rgb(226,209,5)"/><text x="15.4889%" y="1231.50"></text></g><g><title>__rg_alloc (42 samples, 0.04%)</title><rect x="15.2609%" y="1221" width="0.0385%" height="15" fill="rgb(250,105,47)"/><text x="15.5109%" y="1231.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (28 samples, 0.03%)</title><rect x="15.2738%" y="1205" width="0.0257%" height="15" fill="rgb(230,72,3)"/><text x="15.5238%" y="1215.50"></text></g><g><title>__rg_dealloc (111 samples, 0.10%)</title><rect x="15.2994%" y="1221" width="0.1018%" height="15" fill="rgb(232,218,39)"/><text x="15.5494%" y="1231.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (94 samples, 0.09%)</title><rect x="15.3150%" y="1205" width="0.0862%" height="15" fill="rgb(248,166,6)"/><text x="15.5650%" y="1215.50"></text></g><g><title>__rust_probestack (39 samples, 0.04%)</title><rect x="15.4013%" y="1221" width="0.0358%" height="15" fill="rgb(247,89,20)"/><text x="15.6513%" y="1231.50"></text></g><g><title>__sched_yield (18 samples, 0.02%)</title><rect x="15.4370%" y="1221" width="0.0165%" height="15" fill="rgb(248,130,54)"/><text x="15.6870%" y="1231.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (12 samples, 0.01%)</title><rect x="15.4591%" y="1221" width="0.0110%" height="15" fill="rgb(234,196,4)"/><text x="15.7091%" y="1231.50"></text></g><g><title>_rjem_mallocx (43 samples, 0.04%)</title><rect x="15.4820%" y="1221" width="0.0394%" height="15" fill="rgb(250,143,31)"/><text x="15.7320%" y="1231.50"></text></g><g><title>_rjem_sdallocx (26 samples, 0.02%)</title><rect x="15.5214%" y="1221" width="0.0239%" height="15" fill="rgb(211,110,34)"/><text x="15.7714%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18 samples, 0.02%)</title><rect x="15.5508%" y="1221" width="0.0165%" height="15" fill="rgb(215,124,48)"/><text x="15.8008%" y="1231.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (16 samples, 0.01%)</title><rect x="15.5526%" y="1205" width="0.0147%" height="15" fill="rgb(216,46,13)"/><text x="15.8026%" y="1215.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (80 samples, 0.07%)</title><rect x="15.5692%" y="1221" width="0.0734%" height="15" fill="rgb(205,184,25)"/><text x="15.8192%" y="1231.50"></text></g><g><title>alloc::slice::hack::to_vec (16 samples, 0.01%)</title><rect x="15.6279%" y="1205" width="0.0147%" height="15" fill="rgb(228,1,10)"/><text x="15.8779%" y="1215.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16 samples, 0.01%)</title><rect x="15.6279%" y="1189" width="0.0147%" height="15" fill="rgb(213,116,27)"/><text x="15.8779%" y="1199.50"></text></g><g><title>&lt;model::rho_types::Match as core::clone::Clone&gt;::clone (16 samples, 0.01%)</title><rect x="15.6279%" y="1173" width="0.0147%" height="15" fill="rgb(241,95,50)"/><text x="15.8779%" y="1183.50"></text></g><g><title>alloc::slice::merge_sort (97 samples, 0.09%)</title><rect x="15.6425%" y="1221" width="0.0890%" height="15" fill="rgb(238,48,32)"/><text x="15.8925%" y="1231.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (13 samples, 0.01%)</title><rect x="15.7315%" y="1221" width="0.0119%" height="15" fill="rgb(235,113,49)"/><text x="15.9815%" y="1231.50"></text></g><g><title>blake3::Hasher::finalize (26 samples, 0.02%)</title><rect x="15.7499%" y="1221" width="0.0239%" height="15" fill="rgb(205,127,43)"/><text x="15.9999%" y="1231.50"></text></g><g><title>blake3::Hasher::update (57 samples, 0.05%)</title><rect x="15.7774%" y="1221" width="0.0523%" height="15" fill="rgb(250,162,2)"/><text x="16.0274%" y="1231.50"></text></g><g><title>blake3::Hasher::update_with_join (12 samples, 0.01%)</title><rect x="15.8187%" y="1205" width="0.0110%" height="15" fill="rgb(220,13,41)"/><text x="16.0687%" y="1215.50"></text></g><g><title>bytes::bytes::shared_drop (30 samples, 0.03%)</title><rect x="15.8297%" y="1221" width="0.0275%" height="15" fill="rgb(249,221,25)"/><text x="16.0797%" y="1231.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (28 samples, 0.03%)</title><rect x="15.8315%" y="1205" width="0.0257%" height="15" fill="rgb(215,208,19)"/><text x="16.0815%" y="1215.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (28 samples, 0.03%)</title><rect x="15.8315%" y="1189" width="0.0257%" height="15" fill="rgb(236,175,2)"/><text x="16.0815%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (15 samples, 0.01%)</title><rect x="15.8902%" y="1205" width="0.0138%" height="15" fill="rgb(241,52,2)"/><text x="16.1402%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="15.9040%" y="1189" width="0.0156%" height="15" fill="rgb(248,140,14)"/><text x="16.1540%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::GUnforgeable]&gt; (17 samples, 0.02%)</title><rect x="15.9040%" y="1173" width="0.0156%" height="15" fill="rgb(253,22,42)"/><text x="16.1540%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::GUnforgeable&gt; (17 samples, 0.02%)</title><rect x="15.9040%" y="1157" width="0.0156%" height="15" fill="rgb(234,61,47)"/><text x="16.1540%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::g_unforgeable::UnfInstance&gt;&gt; (17 samples, 0.02%)</title><rect x="15.9040%" y="1141" width="0.0156%" height="15" fill="rgb(208,226,15)"/><text x="16.1540%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::g_unforgeable::UnfInstance&gt; (17 samples, 0.02%)</title><rect x="15.9040%" y="1125" width="0.0156%" height="15" fill="rgb(217,221,4)"/><text x="16.1540%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::GUnforgeable&gt;&gt; (18 samples, 0.02%)</title><rect x="15.9040%" y="1205" width="0.0165%" height="15" fill="rgb(212,174,34)"/><text x="16.1540%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (81 samples, 0.07%)</title><rect x="15.8728%" y="1221" width="0.0743%" height="15" fill="rgb(253,83,4)"/><text x="16.1228%" y="1231.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::push (13 samples, 0.01%)</title><rect x="15.9701%" y="1221" width="0.0119%" height="15" fill="rgb(250,195,49)"/><text x="16.2201%" y="1231.50"></text></g><g><title>model::ordering::sort_par::&lt;impl model::ordering::Sortable for model::rho_types::Par&gt;::sort (33 samples, 0.03%)</title><rect x="16.0003%" y="1221" width="0.0303%" height="15" fill="rgb(241,192,25)"/><text x="16.2503%" y="1231.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by (19 samples, 0.02%)</title><rect x="16.0132%" y="1205" width="0.0174%" height="15" fill="rgb(208,124,10)"/><text x="16.2632%" y="1215.50"></text></g><g><title>model::rho_types::Par::append_expr (21 samples, 0.02%)</title><rect x="16.0334%" y="1221" width="0.0193%" height="15" fill="rgb(222,33,0)"/><text x="16.2834%" y="1231.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (16 samples, 0.01%)</title><rect x="16.1535%" y="1189" width="0.0147%" height="15" fill="rgb(234,209,28)"/><text x="16.4035%" y="1199.50"></text></g><g><title>syscall (11 samples, 0.01%)</title><rect x="16.1581%" y="1173" width="0.0101%" height="15" fill="rgb(224,11,23)"/><text x="16.4081%" y="1183.50"></text></g><g><title>entry_SYSCALL_64 (11 samples, 0.01%)</title><rect x="16.1581%" y="1157" width="0.0101%" height="15" fill="rgb(232,99,1)"/><text x="16.4081%" y="1167.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (133 samples, 0.12%)</title><rect x="16.0563%" y="1221" width="0.1220%" height="15" fill="rgb(237,95,45)"/><text x="16.3063%" y="1231.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (31 samples, 0.03%)</title><rect x="16.1499%" y="1205" width="0.0284%" height="15" fill="rgb(208,109,11)"/><text x="16.3999%" y="1215.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (11 samples, 0.01%)</title><rect x="16.1682%" y="1189" width="0.0101%" height="15" fill="rgb(216,190,48)"/><text x="16.4182%" y="1199.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (14 samples, 0.01%)</title><rect x="16.1902%" y="1221" width="0.0128%" height="15" fill="rgb(251,171,36)"/><text x="16.4402%" y="1231.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (56 samples, 0.05%)</title><rect x="16.2086%" y="1221" width="0.0514%" height="15" fill="rgb(230,62,22)"/><text x="16.4586%" y="1231.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (30 samples, 0.03%)</title><rect x="16.2627%" y="1221" width="0.0275%" height="15" fill="rgb(225,114,35)"/><text x="16.5127%" y="1231.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::eval_eplus::&lt;impl rho_runtime::interpreter::reduce::eval_expression::ExprInstanceEvaluator&lt;S&gt; for model::rho_types::EPlus&gt;::evaluate (21 samples, 0.02%)</title><rect x="16.2710%" y="1205" width="0.0193%" height="15" fill="rgb(215,118,42)"/><text x="16.5210%" y="1215.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate (19 samples, 0.02%)</title><rect x="16.2966%" y="1221" width="0.0174%" height="15" fill="rgb(243,119,21)"/><text x="16.5466%" y="1231.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_send::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Send&gt;::evaluate (43 samples, 0.04%)</title><rect x="16.3141%" y="1221" width="0.0394%" height="15" fill="rgb(252,177,53)"/><text x="16.5641%" y="1231.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute (11 samples, 0.01%)</title><rect x="16.3434%" y="1205" width="0.0101%" height="15" fill="rgb(237,209,29)"/><text x="16.5934%" y="1215.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_var::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S,model::rho_types::Par&gt; for model::rho_types::Var&gt;::evaluate (12 samples, 0.01%)</title><rect x="16.3535%" y="1221" width="0.0110%" height="15" fill="rgb(212,65,23)"/><text x="16.6035%" y="1231.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute_no_sort (15 samples, 0.01%)</title><rect x="16.3664%" y="1221" width="0.0138%" height="15" fill="rgb(230,222,46)"/><text x="16.6164%" y="1231.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::substitute_expressions_in_par (41 samples, 0.04%)</title><rect x="16.3801%" y="1221" width="0.0376%" height="15" fill="rgb(215,135,32)"/><text x="16.6301%" y="1231.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (92 samples, 0.08%)</title><rect x="16.4223%" y="1221" width="0.0844%" height="15" fill="rgb(246,101,22)"/><text x="16.6723%" y="1231.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (68 samples, 0.06%)</title><rect x="16.4444%" y="1205" width="0.0624%" height="15" fill="rgb(206,107,13)"/><text x="16.6944%" y="1215.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (55 samples, 0.05%)</title><rect x="16.4563%" y="1189" width="0.0505%" height="15" fill="rgb(250,100,44)"/><text x="16.7063%" y="1199.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (55 samples, 0.05%)</title><rect x="16.4563%" y="1173" width="0.0505%" height="15" fill="rgb(231,147,38)"/><text x="16.7063%" y="1183.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (55 samples, 0.05%)</title><rect x="16.4563%" y="1157" width="0.0505%" height="15" fill="rgb(229,8,40)"/><text x="16.7063%" y="1167.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (55 samples, 0.05%)</title><rect x="16.4563%" y="1141" width="0.0505%" height="15" fill="rgb(221,135,30)"/><text x="16.7063%" y="1151.50"></text></g><g><title>std::time::Instant::now (14 samples, 0.01%)</title><rect x="16.5067%" y="1221" width="0.0128%" height="15" fill="rgb(249,193,18)"/><text x="16.7567%" y="1231.50"></text></g><g><title>syscall (36 samples, 0.03%)</title><rect x="16.5196%" y="1221" width="0.0330%" height="15" fill="rgb(209,133,39)"/><text x="16.7696%" y="1231.50"></text></g><g><title>entry_SYSCALL_64 (12 samples, 0.01%)</title><rect x="16.5416%" y="1205" width="0.0110%" height="15" fill="rgb(232,100,14)"/><text x="16.7916%" y="1215.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (12 samples, 0.01%)</title><rect x="16.5737%" y="1205" width="0.0110%" height="15" fill="rgb(224,185,1)"/><text x="16.8237%" y="1215.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (29 samples, 0.03%)</title><rect x="16.5627%" y="1221" width="0.0266%" height="15" fill="rgb(223,139,8)"/><text x="16.8127%" y="1231.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (23 samples, 0.02%)</title><rect x="16.5939%" y="1205" width="0.0211%" height="15" fill="rgb(232,213,38)"/><text x="16.8439%" y="1215.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (23 samples, 0.02%)</title><rect x="16.5939%" y="1189" width="0.0211%" height="15" fill="rgb(207,94,22)"/><text x="16.8439%" y="1199.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (29 samples, 0.03%)</title><rect x="16.5893%" y="1221" width="0.0266%" height="15" fill="rgb(219,183,54)"/><text x="16.8393%" y="1231.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::steal_into (41 samples, 0.04%)</title><rect x="16.6269%" y="1221" width="0.0376%" height="15" fill="rgb(216,185,54)"/><text x="16.8769%" y="1231.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (17 samples, 0.02%)</title><rect x="16.6645%" y="1221" width="0.0156%" height="15" fill="rgb(254,217,39)"/><text x="16.9145%" y="1231.50"></text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (12 samples, 0.01%)</title><rect x="16.6691%" y="1205" width="0.0110%" height="15" fill="rgb(240,178,23)"/><text x="16.9191%" y="1215.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (19 samples, 0.02%)</title><rect x="16.6801%" y="1221" width="0.0174%" height="15" fill="rgb(218,11,47)"/><text x="16.9301%" y="1231.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (12 samples, 0.01%)</title><rect x="16.6865%" y="1205" width="0.0110%" height="15" fill="rgb(218,51,51)"/><text x="16.9365%" y="1215.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (46 samples, 0.04%)</title><rect x="16.6976%" y="1221" width="0.0422%" height="15" fill="rgb(238,126,27)"/><text x="16.9476%" y="1231.50"></text></g><g><title>tokio::runtime::task::harness::SchedulerView&lt;S&gt;::transition_to_terminal (17 samples, 0.02%)</title><rect x="16.7242%" y="1205" width="0.0156%" height="15" fill="rgb(249,202,22)"/><text x="16.9742%" y="1215.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (26 samples, 0.02%)</title><rect x="16.7398%" y="1221" width="0.0239%" height="15" fill="rgb(254,195,49)"/><text x="16.9898%" y="1231.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (12 samples, 0.01%)</title><rect x="16.7526%" y="1205" width="0.0110%" height="15" fill="rgb(208,123,14)"/><text x="17.0026%" y="1215.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (141 samples, 0.13%)</title><rect x="16.7636%" y="1221" width="0.1294%" height="15" fill="rgb(224,200,8)"/><text x="17.0136%" y="1231.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (25 samples, 0.02%)</title><rect x="16.8700%" y="1205" width="0.0229%" height="15" fill="rgb(217,61,36)"/><text x="17.1200%" y="1215.50"></text></g><g><title>tokio::runtime::task::harness::SchedulerView&lt;S&gt;::transition_to_running (20 samples, 0.02%)</title><rect x="16.8746%" y="1189" width="0.0183%" height="15" fill="rgb(206,35,45)"/><text x="17.1246%" y="1199.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::try_read_output (32 samples, 0.03%)</title><rect x="16.8930%" y="1221" width="0.0294%" height="15" fill="rgb(217,65,33)"/><text x="17.1430%" y="1231.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (20 samples, 0.02%)</title><rect x="16.9223%" y="1221" width="0.0183%" height="15" fill="rgb(222,158,48)"/><text x="17.1723%" y="1231.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_complete (12 samples, 0.01%)</title><rect x="16.9599%" y="1221" width="0.0110%" height="15" fill="rgb(254,2,54)"/><text x="17.2099%" y="1231.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (13 samples, 0.01%)</title><rect x="16.9957%" y="1221" width="0.0119%" height="15" fill="rgb(250,143,38)"/><text x="17.2457%" y="1231.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::release (14 samples, 0.01%)</title><rect x="17.0076%" y="1221" width="0.0128%" height="15" fill="rgb(248,25,0)"/><text x="17.2576%" y="1231.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (16 samples, 0.01%)</title><rect x="17.0278%" y="1221" width="0.0147%" height="15" fill="rgb(206,152,27)"/><text x="17.2778%" y="1231.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (12 samples, 0.01%)</title><rect x="17.0315%" y="1205" width="0.0110%" height="15" fill="rgb(240,77,30)"/><text x="17.2815%" y="1215.50"></text></g><g><title>core::mem::take (12 samples, 0.01%)</title><rect x="17.0315%" y="1189" width="0.0110%" height="15" fill="rgb(231,5,3)"/><text x="17.2815%" y="1199.50"></text></g><g><title>core::mem::replace (12 samples, 0.01%)</title><rect x="17.0315%" y="1173" width="0.0110%" height="15" fill="rgb(207,226,32)"/><text x="17.2815%" y="1183.50"></text></g><g><title>core::mem::swap (12 samples, 0.01%)</title><rect x="17.0315%" y="1157" width="0.0110%" height="15" fill="rgb(222,207,47)"/><text x="17.2815%" y="1167.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (12 samples, 0.01%)</title><rect x="17.0315%" y="1141" width="0.0110%" height="15" fill="rgb(229,115,45)"/><text x="17.2815%" y="1151.50"></text></g><g><title>core::ptr::read (12 samples, 0.01%)</title><rect x="17.0315%" y="1125" width="0.0110%" height="15" fill="rgb(224,191,6)"/><text x="17.2815%" y="1135.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.01%)</title><rect x="17.0315%" y="1109" width="0.0110%" height="15" fill="rgb(230,227,24)"/><text x="17.2815%" y="1119.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (14 samples, 0.01%)</title><rect x="17.0425%" y="1221" width="0.0128%" height="15" fill="rgb(228,80,19)"/><text x="17.2925%" y="1231.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (14 samples, 0.01%)</title><rect x="17.0618%" y="1221" width="0.0128%" height="15" fill="rgb(247,229,0)"/><text x="17.3118%" y="1231.50"></text></g><g><title>[anon] (3,415 samples, 3.13%)</title><rect x="13.9591%" y="1237" width="3.1329%" height="15" fill="rgb(237,194,15)"/><text x="14.2091%" y="1247.50">[an..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (36 samples, 0.03%)</title><rect x="17.1177%" y="1221" width="0.0330%" height="15" fill="rgb(219,203,20)"/><text x="17.3677%" y="1231.50"></text></g><g><title>&lt;rho_runtime::storage::coordinator::AsyncStore as rho_runtime::storage::Storage&gt;::produce::{{closure}} (30 samples, 0.03%)</title><rect x="17.1232%" y="1205" width="0.0275%" height="15" fill="rgb(234,128,8)"/><text x="17.3732%" y="1215.50"></text></g><g><title>tokio::sync::oneshot::channel (18 samples, 0.02%)</title><rect x="17.1342%" y="1189" width="0.0165%" height="15" fill="rgb(248,202,8)"/><text x="17.3842%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="17.1654%" y="1205" width="0.0101%" height="15" fill="rgb(206,104,37)"/><text x="17.4154%" y="1215.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (32 samples, 0.03%)</title><rect x="17.1535%" y="1221" width="0.0294%" height="15" fill="rgb(223,8,27)"/><text x="17.4035%" y="1231.50"></text></g><g><title>[libc-2.31.so] (131 samples, 0.12%)</title><rect x="17.0920%" y="1237" width="0.1202%" height="15" fill="rgb(216,217,28)"/><text x="17.3420%" y="1247.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (20 samples, 0.02%)</title><rect x="17.2122%" y="1221" width="0.0183%" height="15" fill="rgb(249,199,1)"/><text x="17.4622%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (29 samples, 0.03%)</title><rect x="17.2306%" y="1221" width="0.0266%" height="15" fill="rgb(240,85,17)"/><text x="17.4806%" y="1231.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="17.2572%" y="1221" width="0.0128%" height="15" fill="rgb(206,108,45)"/><text x="17.5072%" y="1231.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.01%)</title><rect x="17.2728%" y="1221" width="0.0101%" height="15" fill="rgb(245,210,41)"/><text x="17.5228%" y="1231.50"></text></g><g><title>[rho_runtime] (101 samples, 0.09%)</title><rect x="17.2122%" y="1237" width="0.0927%" height="15" fill="rgb(206,13,37)"/><text x="17.4622%" y="1247.50"></text></g><g><title>arena_bin_slabs_nonfull_tryget (12 samples, 0.01%)</title><rect x="17.3984%" y="773" width="0.0110%" height="15" fill="rgb(250,61,18)"/><text x="17.6484%" y="783.50"></text></g><g><title>_rjem_je_extent_heap_remove_first (12 samples, 0.01%)</title><rect x="17.3984%" y="757" width="0.0110%" height="15" fill="rgb(235,172,48)"/><text x="17.6484%" y="767.50"></text></g><g><title>arena_bin_nonfull_slab_get (24 samples, 0.02%)</title><rect x="17.3984%" y="789" width="0.0220%" height="15" fill="rgb(249,201,17)"/><text x="17.6484%" y="799.50"></text></g><g><title>&lt;model::rho_types::ELt as core::clone::Clone&gt;::clone (27 samples, 0.02%)</title><rect x="17.3975%" y="1157" width="0.0248%" height="15" fill="rgb(219,208,6)"/><text x="17.6475%" y="1167.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (27 samples, 0.02%)</title><rect x="17.3975%" y="1141" width="0.0248%" height="15" fill="rgb(248,31,23)"/><text x="17.6475%" y="1151.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (27 samples, 0.02%)</title><rect x="17.3975%" y="1125" width="0.0248%" height="15" fill="rgb(245,15,42)"/><text x="17.6475%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (27 samples, 0.02%)</title><rect x="17.3975%" y="1109" width="0.0248%" height="15" fill="rgb(222,217,39)"/><text x="17.6475%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (27 samples, 0.02%)</title><rect x="17.3975%" y="1093" width="0.0248%" height="15" fill="rgb(210,219,27)"/><text x="17.6475%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (27 samples, 0.02%)</title><rect x="17.3975%" y="1077" width="0.0248%" height="15" fill="rgb(252,166,36)"/><text x="17.6475%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (27 samples, 0.02%)</title><rect x="17.3975%" y="1061" width="0.0248%" height="15" fill="rgb(245,132,34)"/><text x="17.6475%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (27 samples, 0.02%)</title><rect x="17.3975%" y="1045" width="0.0248%" height="15" fill="rgb(236,54,3)"/><text x="17.6475%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (27 samples, 0.02%)</title><rect x="17.3975%" y="1029" width="0.0248%" height="15" fill="rgb(241,173,43)"/><text x="17.6475%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (27 samples, 0.02%)</title><rect x="17.3975%" y="1013" width="0.0248%" height="15" fill="rgb(215,190,9)"/><text x="17.6475%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (27 samples, 0.02%)</title><rect x="17.3975%" y="997" width="0.0248%" height="15" fill="rgb(242,101,16)"/><text x="17.6475%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (27 samples, 0.02%)</title><rect x="17.3975%" y="981" width="0.0248%" height="15" fill="rgb(223,190,21)"/><text x="17.6475%" y="991.50"></text></g><g><title>alloc::alloc::alloc (27 samples, 0.02%)</title><rect x="17.3975%" y="965" width="0.0248%" height="15" fill="rgb(215,228,25)"/><text x="17.6475%" y="975.50"></text></g><g><title>_rjem_mallocx (27 samples, 0.02%)</title><rect x="17.3975%" y="949" width="0.0248%" height="15" fill="rgb(225,36,22)"/><text x="17.6475%" y="959.50"></text></g><g><title>imalloc (27 samples, 0.02%)</title><rect x="17.3975%" y="933" width="0.0248%" height="15" fill="rgb(251,106,46)"/><text x="17.6475%" y="943.50"></text></g><g><title>imalloc_body (27 samples, 0.02%)</title><rect x="17.3975%" y="917" width="0.0248%" height="15" fill="rgb(208,90,1)"/><text x="17.6475%" y="927.50"></text></g><g><title>imalloc_no_sample (27 samples, 0.02%)</title><rect x="17.3975%" y="901" width="0.0248%" height="15" fill="rgb(243,10,4)"/><text x="17.6475%" y="911.50"></text></g><g><title>iallocztm (27 samples, 0.02%)</title><rect x="17.3975%" y="885" width="0.0248%" height="15" fill="rgb(212,137,27)"/><text x="17.6475%" y="895.50"></text></g><g><title>arena_malloc (27 samples, 0.02%)</title><rect x="17.3975%" y="869" width="0.0248%" height="15" fill="rgb(231,220,49)"/><text x="17.6475%" y="879.50"></text></g><g><title>tcache_alloc_small (27 samples, 0.02%)</title><rect x="17.3975%" y="853" width="0.0248%" height="15" fill="rgb(237,96,20)"/><text x="17.6475%" y="863.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (27 samples, 0.02%)</title><rect x="17.3975%" y="837" width="0.0248%" height="15" fill="rgb(239,229,30)"/><text x="17.6475%" y="847.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (27 samples, 0.02%)</title><rect x="17.3975%" y="821" width="0.0248%" height="15" fill="rgb(219,65,33)"/><text x="17.6475%" y="831.50"></text></g><g><title>arena_bin_malloc_hard (27 samples, 0.02%)</title><rect x="17.3975%" y="805" width="0.0248%" height="15" fill="rgb(243,134,7)"/><text x="17.6475%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="17.4461%" y="885" width="0.0138%" height="15" fill="rgb(216,177,54)"/><text x="17.6961%" y="895.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="17.5195%" y="853" width="0.0110%" height="15" fill="rgb(211,160,20)"/><text x="17.7695%" y="863.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (74 samples, 0.07%)</title><rect x="17.4810%" y="869" width="0.0679%" height="15" fill="rgb(239,85,39)"/><text x="17.7310%" y="879.50"></text></g><g><title>[libc-2.31.so] (20 samples, 0.02%)</title><rect x="17.5305%" y="853" width="0.0183%" height="15" fill="rgb(232,125,22)"/><text x="17.7805%" y="863.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (124 samples, 0.11%)</title><rect x="17.4599%" y="885" width="0.1138%" height="15" fill="rgb(244,57,34)"/><text x="17.7099%" y="895.50"></text></g><g><title>[libc-2.31.so] (27 samples, 0.02%)</title><rect x="17.5489%" y="869" width="0.0248%" height="15" fill="rgb(214,203,32)"/><text x="17.7989%" y="879.50"></text></g><g><title>imalloc_no_sample (15 samples, 0.01%)</title><rect x="17.6278%" y="741" width="0.0138%" height="15" fill="rgb(207,58,43)"/><text x="17.8778%" y="751.50"></text></g><g><title>iallocztm (13 samples, 0.01%)</title><rect x="17.6296%" y="725" width="0.0119%" height="15" fill="rgb(215,193,15)"/><text x="17.8796%" y="735.50"></text></g><g><title>arena_malloc (13 samples, 0.01%)</title><rect x="17.6296%" y="709" width="0.0119%" height="15" fill="rgb(232,15,44)"/><text x="17.8796%" y="719.50"></text></g><g><title>tcache_alloc_small (13 samples, 0.01%)</title><rect x="17.6296%" y="693" width="0.0119%" height="15" fill="rgb(212,3,48)"/><text x="17.8796%" y="703.50"></text></g><g><title>imalloc_body (19 samples, 0.02%)</title><rect x="17.6260%" y="757" width="0.0174%" height="15" fill="rgb(218,128,7)"/><text x="17.8760%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (44 samples, 0.04%)</title><rect x="17.6049%" y="837" width="0.0404%" height="15" fill="rgb(226,216,39)"/><text x="17.8549%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (44 samples, 0.04%)</title><rect x="17.6049%" y="821" width="0.0404%" height="15" fill="rgb(243,47,51)"/><text x="17.8549%" y="831.50"></text></g><g><title>alloc::alloc::alloc (35 samples, 0.03%)</title><rect x="17.6131%" y="805" width="0.0321%" height="15" fill="rgb(241,183,40)"/><text x="17.8631%" y="815.50"></text></g><g><title>_rjem_mallocx (30 samples, 0.03%)</title><rect x="17.6177%" y="789" width="0.0275%" height="15" fill="rgb(231,217,32)"/><text x="17.8677%" y="799.50"></text></g><g><title>imalloc (21 samples, 0.02%)</title><rect x="17.6260%" y="773" width="0.0193%" height="15" fill="rgb(229,61,38)"/><text x="17.8760%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (14 samples, 0.01%)</title><rect x="17.6452%" y="837" width="0.0128%" height="15" fill="rgb(225,210,5)"/><text x="17.8952%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (88 samples, 0.08%)</title><rect x="17.5810%" y="885" width="0.0807%" height="15" fill="rgb(231,79,45)"/><text x="17.8310%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (66 samples, 0.06%)</title><rect x="17.6012%" y="869" width="0.0605%" height="15" fill="rgb(224,100,7)"/><text x="17.8512%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (66 samples, 0.06%)</title><rect x="17.6012%" y="853" width="0.0605%" height="15" fill="rgb(241,198,18)"/><text x="17.8512%" y="863.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (57 samples, 0.05%)</title><rect x="17.6617%" y="885" width="0.0523%" height="15" fill="rgb(252,97,53)"/><text x="17.9117%" y="895.50"></text></g><g><title>[libc-2.31.so] (23 samples, 0.02%)</title><rect x="17.6929%" y="869" width="0.0211%" height="15" fill="rgb(220,88,7)"/><text x="17.9429%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (320 samples, 0.29%)</title><rect x="17.4223%" y="949" width="0.2936%" height="15" fill="rgb(213,176,14)"/><text x="17.6723%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (310 samples, 0.28%)</title><rect x="17.4315%" y="933" width="0.2844%" height="15" fill="rgb(246,73,7)"/><text x="17.6815%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (308 samples, 0.28%)</title><rect x="17.4333%" y="917" width="0.2826%" height="15" fill="rgb(245,64,36)"/><text x="17.6833%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (308 samples, 0.28%)</title><rect x="17.4333%" y="901" width="0.2826%" height="15" fill="rgb(245,80,10)"/><text x="17.6833%" y="911.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (325 samples, 0.30%)</title><rect x="17.4223%" y="1045" width="0.2982%" height="15" fill="rgb(232,107,50)"/><text x="17.6723%" y="1055.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (325 samples, 0.30%)</title><rect x="17.4223%" y="1029" width="0.2982%" height="15" fill="rgb(253,3,0)"/><text x="17.6723%" y="1039.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (325 samples, 0.30%)</title><rect x="17.4223%" y="1013" width="0.2982%" height="15" fill="rgb(212,99,53)"/><text x="17.6723%" y="1023.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (325 samples, 0.30%)</title><rect x="17.4223%" y="997" width="0.2982%" height="15" fill="rgb(249,111,54)"/><text x="17.6723%" y="1007.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (325 samples, 0.30%)</title><rect x="17.4223%" y="981" width="0.2982%" height="15" fill="rgb(249,55,30)"/><text x="17.6723%" y="991.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (325 samples, 0.30%)</title><rect x="17.4223%" y="965" width="0.2982%" height="15" fill="rgb(237,47,42)"/><text x="17.6723%" y="975.50"></text></g><g><title>arena_bin_slabs_nonfull_tryget (32 samples, 0.03%)</title><rect x="17.7287%" y="773" width="0.0294%" height="15" fill="rgb(211,20,18)"/><text x="17.9787%" y="783.50"></text></g><g><title>_rjem_je_extent_heap_remove_first (31 samples, 0.03%)</title><rect x="17.7296%" y="757" width="0.0284%" height="15" fill="rgb(231,203,46)"/><text x="17.9796%" y="767.50"></text></g><g><title>extent_activate_locked (11 samples, 0.01%)</title><rect x="17.7654%" y="709" width="0.0101%" height="15" fill="rgb(237,142,3)"/><text x="18.0154%" y="719.50"></text></g><g><title>extents_fit_locked (16 samples, 0.01%)</title><rect x="17.7764%" y="709" width="0.0147%" height="15" fill="rgb(241,107,1)"/><text x="18.0264%" y="719.50"></text></g><g><title>extents_best_fit_locked (14 samples, 0.01%)</title><rect x="17.7782%" y="693" width="0.0128%" height="15" fill="rgb(229,83,13)"/><text x="18.0282%" y="703.50"></text></g><g><title>malloc_mutex_lock (16 samples, 0.01%)</title><rect x="17.7911%" y="709" width="0.0147%" height="15" fill="rgb(241,91,40)"/><text x="18.0411%" y="719.50"></text></g><g><title>malloc_mutex_trylock_final (16 samples, 0.01%)</title><rect x="17.7911%" y="693" width="0.0147%" height="15" fill="rgb(225,3,45)"/><text x="18.0411%" y="703.50"></text></g><g><title>__GI___pthread_mutex_trylock (16 samples, 0.01%)</title><rect x="17.7911%" y="677" width="0.0147%" height="15" fill="rgb(244,223,14)"/><text x="18.0411%" y="687.50"></text></g><g><title>extent_recycle_extract (53 samples, 0.05%)</title><rect x="17.7645%" y="725" width="0.0486%" height="15" fill="rgb(224,124,37)"/><text x="18.0145%" y="735.50"></text></g><g><title>_rjem_je_extents_alloc (60 samples, 0.06%)</title><rect x="17.7599%" y="757" width="0.0550%" height="15" fill="rgb(251,171,30)"/><text x="18.0099%" y="767.50"></text></g><g><title>extent_recycle (60 samples, 0.06%)</title><rect x="17.7599%" y="741" width="0.0550%" height="15" fill="rgb(236,46,54)"/><text x="18.0099%" y="751.50"></text></g><g><title>arena_slab_alloc (69 samples, 0.06%)</title><rect x="17.7581%" y="773" width="0.0633%" height="15" fill="rgb(245,213,5)"/><text x="18.0081%" y="783.50"></text></g><g><title>arena_bin_nonfull_slab_get (110 samples, 0.10%)</title><rect x="17.7287%" y="789" width="0.1009%" height="15" fill="rgb(230,144,27)"/><text x="17.9787%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (570 samples, 0.52%)</title><rect x="17.3085%" y="1221" width="0.5229%" height="15" fill="rgb(220,86,6)"/><text x="17.5585%" y="1231.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (473 samples, 0.43%)</title><rect x="17.3975%" y="1205" width="0.4339%" height="15" fill="rgb(240,20,13)"/><text x="17.6475%" y="1215.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (473 samples, 0.43%)</title><rect x="17.3975%" y="1189" width="0.4339%" height="15" fill="rgb(217,89,34)"/><text x="17.6475%" y="1199.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (473 samples, 0.43%)</title><rect x="17.3975%" y="1173" width="0.4339%" height="15" fill="rgb(229,13,5)"/><text x="17.6475%" y="1183.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (446 samples, 0.41%)</title><rect x="17.4223%" y="1157" width="0.4092%" height="15" fill="rgb(244,67,35)"/><text x="17.6723%" y="1167.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (446 samples, 0.41%)</title><rect x="17.4223%" y="1141" width="0.4092%" height="15" fill="rgb(221,40,2)"/><text x="17.6723%" y="1151.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (446 samples, 0.41%)</title><rect x="17.4223%" y="1125" width="0.4092%" height="15" fill="rgb(237,157,21)"/><text x="17.6723%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (446 samples, 0.41%)</title><rect x="17.4223%" y="1109" width="0.4092%" height="15" fill="rgb(222,94,11)"/><text x="17.6723%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (446 samples, 0.41%)</title><rect x="17.4223%" y="1093" width="0.4092%" height="15" fill="rgb(249,113,6)"/><text x="17.6723%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (446 samples, 0.41%)</title><rect x="17.4223%" y="1077" width="0.4092%" height="15" fill="rgb(238,137,36)"/><text x="17.6723%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (446 samples, 0.41%)</title><rect x="17.4223%" y="1061" width="0.4092%" height="15" fill="rgb(210,102,26)"/><text x="17.6723%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (121 samples, 0.11%)</title><rect x="17.7205%" y="1045" width="0.1110%" height="15" fill="rgb(218,30,30)"/><text x="17.9705%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (121 samples, 0.11%)</title><rect x="17.7205%" y="1029" width="0.1110%" height="15" fill="rgb(214,67,26)"/><text x="17.9705%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (121 samples, 0.11%)</title><rect x="17.7205%" y="1013" width="0.1110%" height="15" fill="rgb(251,9,53)"/><text x="17.9705%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (121 samples, 0.11%)</title><rect x="17.7205%" y="997" width="0.1110%" height="15" fill="rgb(228,204,25)"/><text x="17.9705%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (121 samples, 0.11%)</title><rect x="17.7205%" y="981" width="0.1110%" height="15" fill="rgb(207,153,8)"/><text x="17.9705%" y="991.50"></text></g><g><title>alloc::alloc::alloc (121 samples, 0.11%)</title><rect x="17.7205%" y="965" width="0.1110%" height="15" fill="rgb(242,9,16)"/><text x="17.9705%" y="975.50"></text></g><g><title>_rjem_mallocx (121 samples, 0.11%)</title><rect x="17.7205%" y="949" width="0.1110%" height="15" fill="rgb(217,211,10)"/><text x="17.9705%" y="959.50"></text></g><g><title>imalloc (121 samples, 0.11%)</title><rect x="17.7205%" y="933" width="0.1110%" height="15" fill="rgb(219,228,52)"/><text x="17.9705%" y="943.50"></text></g><g><title>imalloc_body (121 samples, 0.11%)</title><rect x="17.7205%" y="917" width="0.1110%" height="15" fill="rgb(231,92,29)"/><text x="17.9705%" y="927.50"></text></g><g><title>imalloc_no_sample (121 samples, 0.11%)</title><rect x="17.7205%" y="901" width="0.1110%" height="15" fill="rgb(232,8,23)"/><text x="17.9705%" y="911.50"></text></g><g><title>iallocztm (121 samples, 0.11%)</title><rect x="17.7205%" y="885" width="0.1110%" height="15" fill="rgb(216,211,34)"/><text x="17.9705%" y="895.50"></text></g><g><title>arena_malloc (121 samples, 0.11%)</title><rect x="17.7205%" y="869" width="0.1110%" height="15" fill="rgb(236,151,0)"/><text x="17.9705%" y="879.50"></text></g><g><title>tcache_alloc_small (117 samples, 0.11%)</title><rect x="17.7241%" y="853" width="0.1073%" height="15" fill="rgb(209,168,3)"/><text x="17.9741%" y="863.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (117 samples, 0.11%)</title><rect x="17.7241%" y="837" width="0.1073%" height="15" fill="rgb(208,129,28)"/><text x="17.9741%" y="847.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (117 samples, 0.11%)</title><rect x="17.7241%" y="821" width="0.1073%" height="15" fill="rgb(229,78,22)"/><text x="17.9741%" y="831.50"></text></g><g><title>arena_bin_malloc_hard (117 samples, 0.11%)</title><rect x="17.7241%" y="805" width="0.1073%" height="15" fill="rgb(228,187,13)"/><text x="17.9741%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (21 samples, 0.02%)</title><rect x="17.9214%" y="1205" width="0.0193%" height="15" fill="rgb(240,119,24)"/><text x="18.1714%" y="1215.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (72 samples, 0.07%)</title><rect x="18.0415%" y="773" width="0.0661%" height="15" fill="rgb(209,194,42)"/><text x="18.2915%" y="783.50"></text></g><g><title>[libc-2.31.so] (13 samples, 0.01%)</title><rect x="18.0957%" y="757" width="0.0119%" height="15" fill="rgb(247,200,46)"/><text x="18.3457%" y="767.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (132 samples, 0.12%)</title><rect x="18.0012%" y="805" width="0.1211%" height="15" fill="rgb(218,76,16)"/><text x="18.2512%" y="815.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (95 samples, 0.09%)</title><rect x="18.0351%" y="789" width="0.0872%" height="15" fill="rgb(225,21,48)"/><text x="18.2851%" y="799.50"></text></g><g><title>[libc-2.31.so] (16 samples, 0.01%)</title><rect x="18.1076%" y="773" width="0.0147%" height="15" fill="rgb(239,223,50)"/><text x="18.3576%" y="783.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (214 samples, 0.20%)</title><rect x="17.9626%" y="821" width="0.1963%" height="15" fill="rgb(244,45,21)"/><text x="18.2126%" y="831.50"></text></g><g><title>[libc-2.31.so] (40 samples, 0.04%)</title><rect x="18.1223%" y="805" width="0.0367%" height="15" fill="rgb(232,33,43)"/><text x="18.3723%" y="815.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (279 samples, 0.26%)</title><rect x="17.9498%" y="837" width="0.2560%" height="15" fill="rgb(209,8,3)"/><text x="18.1998%" y="847.50"></text></g><g><title>[libc-2.31.so] (51 samples, 0.05%)</title><rect x="18.1590%" y="821" width="0.0468%" height="15" fill="rgb(214,25,53)"/><text x="18.4090%" y="831.50"></text></g><g><title>cache_bin_alloc_easy (13 samples, 0.01%)</title><rect x="18.2397%" y="629" width="0.0119%" height="15" fill="rgb(254,186,54)"/><text x="18.4897%" y="639.50"></text></g><g><title>imalloc_no_sample (24 samples, 0.02%)</title><rect x="18.2314%" y="693" width="0.0220%" height="15" fill="rgb(208,174,49)"/><text x="18.4814%" y="703.50"></text></g><g><title>iallocztm (20 samples, 0.02%)</title><rect x="18.2351%" y="677" width="0.0183%" height="15" fill="rgb(233,191,51)"/><text x="18.4851%" y="687.50"></text></g><g><title>arena_malloc (20 samples, 0.02%)</title><rect x="18.2351%" y="661" width="0.0183%" height="15" fill="rgb(222,134,10)"/><text x="18.4851%" y="671.50"></text></g><g><title>tcache_alloc_small (19 samples, 0.02%)</title><rect x="18.2360%" y="645" width="0.0174%" height="15" fill="rgb(230,226,20)"/><text x="18.4860%" y="655.50"></text></g><g><title>imalloc_body (30 samples, 0.03%)</title><rect x="18.2287%" y="709" width="0.0275%" height="15" fill="rgb(251,111,25)"/><text x="18.4787%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (57 samples, 0.05%)</title><rect x="18.2094%" y="789" width="0.0523%" height="15" fill="rgb(224,40,46)"/><text x="18.4594%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (57 samples, 0.05%)</title><rect x="18.2094%" y="773" width="0.0523%" height="15" fill="rgb(236,108,47)"/><text x="18.4594%" y="783.50"></text></g><g><title>alloc::alloc::alloc (57 samples, 0.05%)</title><rect x="18.2094%" y="757" width="0.0523%" height="15" fill="rgb(234,93,0)"/><text x="18.4594%" y="767.50"></text></g><g><title>_rjem_mallocx (49 samples, 0.04%)</title><rect x="18.2168%" y="741" width="0.0450%" height="15" fill="rgb(224,213,32)"/><text x="18.4668%" y="751.50"></text></g><g><title>imalloc (36 samples, 0.03%)</title><rect x="18.2287%" y="725" width="0.0330%" height="15" fill="rgb(251,11,48)"/><text x="18.4787%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (64 samples, 0.06%)</title><rect x="18.2067%" y="837" width="0.0587%" height="15" fill="rgb(236,173,5)"/><text x="18.4567%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (63 samples, 0.06%)</title><rect x="18.2076%" y="821" width="0.0578%" height="15" fill="rgb(230,95,12)"/><text x="18.4576%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (63 samples, 0.06%)</title><rect x="18.2076%" y="805" width="0.0578%" height="15" fill="rgb(232,209,1)"/><text x="18.4576%" y="815.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (90 samples, 0.08%)</title><rect x="18.2654%" y="837" width="0.0826%" height="15" fill="rgb(232,6,1)"/><text x="18.5154%" y="847.50"></text></g><g><title>[libc-2.31.so] (48 samples, 0.04%)</title><rect x="18.3039%" y="821" width="0.0440%" height="15" fill="rgb(210,224,50)"/><text x="18.5539%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (574 samples, 0.53%)</title><rect x="17.8315%" y="1221" width="0.5266%" height="15" fill="rgb(228,127,35)"/><text x="18.0815%" y="1231.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (455 samples, 0.42%)</title><rect x="17.9406%" y="1205" width="0.4174%" height="15" fill="rgb(245,102,45)"/><text x="18.1906%" y="1215.50"></text></g><g><title>alloc::slice::hack::to_vec (455 samples, 0.42%)</title><rect x="17.9406%" y="1189" width="0.4174%" height="15" fill="rgb(214,1,49)"/><text x="18.1906%" y="1199.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (455 samples, 0.42%)</title><rect x="17.9406%" y="1173" width="0.4174%" height="15" fill="rgb(226,163,40)"/><text x="18.1906%" y="1183.50"></text></g><g><title>&lt;model::rho_types::Send as core::clone::Clone&gt;::clone (455 samples, 0.42%)</title><rect x="17.9406%" y="1157" width="0.4174%" height="15" fill="rgb(239,212,28)"/><text x="18.1906%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (455 samples, 0.42%)</title><rect x="17.9406%" y="1141" width="0.4174%" height="15" fill="rgb(220,20,13)"/><text x="18.1906%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (455 samples, 0.42%)</title><rect x="17.9406%" y="1125" width="0.4174%" height="15" fill="rgb(210,164,35)"/><text x="18.1906%" y="1135.50"></text></g><g><title>alloc::slice::hack::to_vec (455 samples, 0.42%)</title><rect x="17.9406%" y="1109" width="0.4174%" height="15" fill="rgb(248,109,41)"/><text x="18.1906%" y="1119.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (455 samples, 0.42%)</title><rect x="17.9406%" y="1093" width="0.4174%" height="15" fill="rgb(238,23,50)"/><text x="18.1906%" y="1103.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (455 samples, 0.42%)</title><rect x="17.9406%" y="1077" width="0.4174%" height="15" fill="rgb(211,48,49)"/><text x="18.1906%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (455 samples, 0.42%)</title><rect x="17.9406%" y="1061" width="0.4174%" height="15" fill="rgb(223,36,21)"/><text x="18.1906%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (455 samples, 0.42%)</title><rect x="17.9406%" y="1045" width="0.4174%" height="15" fill="rgb(207,123,46)"/><text x="18.1906%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (455 samples, 0.42%)</title><rect x="17.9406%" y="1029" width="0.4174%" height="15" fill="rgb(240,218,32)"/><text x="18.1906%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (455 samples, 0.42%)</title><rect x="17.9406%" y="1013" width="0.4174%" height="15" fill="rgb(252,5,43)"/><text x="18.1906%" y="1023.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (455 samples, 0.42%)</title><rect x="17.9406%" y="997" width="0.4174%" height="15" fill="rgb(252,84,19)"/><text x="18.1906%" y="1007.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (455 samples, 0.42%)</title><rect x="17.9406%" y="981" width="0.4174%" height="15" fill="rgb(243,152,39)"/><text x="18.1906%" y="991.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (455 samples, 0.42%)</title><rect x="17.9406%" y="965" width="0.4174%" height="15" fill="rgb(234,160,15)"/><text x="18.1906%" y="975.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (455 samples, 0.42%)</title><rect x="17.9406%" y="949" width="0.4174%" height="15" fill="rgb(237,34,20)"/><text x="18.1906%" y="959.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (455 samples, 0.42%)</title><rect x="17.9406%" y="933" width="0.4174%" height="15" fill="rgb(229,97,13)"/><text x="18.1906%" y="943.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (455 samples, 0.42%)</title><rect x="17.9406%" y="917" width="0.4174%" height="15" fill="rgb(234,71,50)"/><text x="18.1906%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (455 samples, 0.42%)</title><rect x="17.9406%" y="901" width="0.4174%" height="15" fill="rgb(253,155,4)"/><text x="18.1906%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (455 samples, 0.42%)</title><rect x="17.9406%" y="885" width="0.4174%" height="15" fill="rgb(222,185,37)"/><text x="18.1906%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (455 samples, 0.42%)</title><rect x="17.9406%" y="869" width="0.4174%" height="15" fill="rgb(251,177,13)"/><text x="18.1906%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (455 samples, 0.42%)</title><rect x="17.9406%" y="853" width="0.4174%" height="15" fill="rgb(250,179,40)"/><text x="18.1906%" y="863.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (11 samples, 0.01%)</title><rect x="18.3480%" y="837" width="0.0101%" height="15" fill="rgb(242,44,2)"/><text x="18.5980%" y="847.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (11 samples, 0.01%)</title><rect x="18.3480%" y="821" width="0.0101%" height="15" fill="rgb(216,177,13)"/><text x="18.5980%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (138 samples, 0.13%)</title><rect x="18.3580%" y="1221" width="0.1266%" height="15" fill="rgb(216,106,43)"/><text x="18.6080%" y="1231.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="18.4846%" y="1221" width="0.0147%" height="15" fill="rgb(216,183,2)"/><text x="18.7346%" y="1231.50"></text></g><g><title>[libc-2.31.so] (181 samples, 0.17%)</title><rect x="18.5406%" y="1173" width="0.1660%" height="15" fill="rgb(249,75,3)"/><text x="18.7906%" y="1183.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (14 samples, 0.01%)</title><rect x="18.7067%" y="1173" width="0.0128%" height="15" fill="rgb(219,67,39)"/><text x="18.9567%" y="1183.50"></text></g><g><title>isfree (28 samples, 0.03%)</title><rect x="18.7461%" y="1109" width="0.0257%" height="15" fill="rgb(253,228,2)"/><text x="18.9961%" y="1119.50"></text></g><g><title>isdalloct (26 samples, 0.02%)</title><rect x="18.7479%" y="1093" width="0.0239%" height="15" fill="rgb(235,138,27)"/><text x="18.9979%" y="1103.50"></text></g><g><title>arena_sdalloc (26 samples, 0.02%)</title><rect x="18.7479%" y="1077" width="0.0239%" height="15" fill="rgb(236,97,51)"/><text x="18.9979%" y="1087.50"></text></g><g><title>tcache_dalloc_small (23 samples, 0.02%)</title><rect x="18.7507%" y="1061" width="0.0211%" height="15" fill="rgb(240,80,30)"/><text x="19.0007%" y="1071.50"></text></g><g><title>_rjem_sdallocx (53 samples, 0.05%)</title><rect x="18.7259%" y="1125" width="0.0486%" height="15" fill="rgb(230,178,19)"/><text x="18.9759%" y="1135.50"></text></g><g><title>core::mem::drop (23 samples, 0.02%)</title><rect x="18.7755%" y="1109" width="0.0211%" height="15" fill="rgb(210,190,27)"/><text x="19.0255%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;tokio::sync::oneshot::Inner&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt;&gt; (23 samples, 0.02%)</title><rect x="18.7755%" y="1093" width="0.0211%" height="15" fill="rgb(222,107,31)"/><text x="19.0255%" y="1103.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="18.7755%" y="1077" width="0.0211%" height="15" fill="rgb(216,127,34)"/><text x="19.0255%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (20 samples, 0.02%)</title><rect x="18.7782%" y="1061" width="0.0183%" height="15" fill="rgb(234,116,52)"/><text x="19.0282%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_sub (20 samples, 0.02%)</title><rect x="18.7782%" y="1045" width="0.0183%" height="15" fill="rgb(222,124,15)"/><text x="19.0282%" y="1055.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (29 samples, 0.03%)</title><rect x="18.7966%" y="1077" width="0.0266%" height="15" fill="rgb(231,179,28)"/><text x="19.0466%" y="1087.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (27 samples, 0.02%)</title><rect x="18.7984%" y="1061" width="0.0248%" height="15" fill="rgb(226,93,45)"/><text x="19.0484%" y="1071.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (27 samples, 0.02%)</title><rect x="18.7984%" y="1045" width="0.0248%" height="15" fill="rgb(215,8,51)"/><text x="19.0484%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (24 samples, 0.02%)</title><rect x="18.8011%" y="1029" width="0.0220%" height="15" fill="rgb(223,106,5)"/><text x="19.0511%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_sub (24 samples, 0.02%)</title><rect x="18.8011%" y="1013" width="0.0220%" height="15" fill="rgb(250,191,5)"/><text x="19.0511%" y="1023.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (54 samples, 0.05%)</title><rect x="18.7745%" y="1125" width="0.0495%" height="15" fill="rgb(242,132,44)"/><text x="19.0245%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::sync::oneshot::Inner&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt; (30 samples, 0.03%)</title><rect x="18.7966%" y="1109" width="0.0275%" height="15" fill="rgb(251,152,29)"/><text x="19.0466%" y="1119.50"></text></g><g><title>&lt;tokio::sync::oneshot::Inner&lt;T&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="18.7966%" y="1093" width="0.0275%" height="15" fill="rgb(218,179,5)"/><text x="19.0466%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt;&gt;&gt; (153 samples, 0.14%)</title><rect x="18.7195%" y="1173" width="0.1404%" height="15" fill="rgb(227,67,19)"/><text x="18.9695%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt;&gt; (153 samples, 0.14%)</title><rect x="18.7195%" y="1157" width="0.1404%" height="15" fill="rgb(233,119,31)"/><text x="18.9695%" y="1167.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (153 samples, 0.14%)</title><rect x="18.7195%" y="1141" width="0.1404%" height="15" fill="rgb(241,120,22)"/><text x="18.9695%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (39 samples, 0.04%)</title><rect x="18.8241%" y="1125" width="0.0358%" height="15" fill="rgb(224,102,30)"/><text x="19.0741%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_sub (39 samples, 0.04%)</title><rect x="18.8241%" y="1109" width="0.0358%" height="15" fill="rgb(210,164,37)"/><text x="19.0741%" y="1119.50"></text></g><g><title>[libc-2.31.so] (282 samples, 0.26%)</title><rect x="18.8901%" y="1157" width="0.2587%" height="15" fill="rgb(226,191,16)"/><text x="19.1401%" y="1167.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (37 samples, 0.03%)</title><rect x="19.1626%" y="1093" width="0.0339%" height="15" fill="rgb(214,40,45)"/><text x="19.4126%" y="1103.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (37 samples, 0.03%)</title><rect x="19.1626%" y="1077" width="0.0339%" height="15" fill="rgb(244,29,26)"/><text x="19.4126%" y="1087.50"></text></g><g><title>core::mem::replace (37 samples, 0.03%)</title><rect x="19.1626%" y="1061" width="0.0339%" height="15" fill="rgb(216,16,5)"/><text x="19.4126%" y="1071.50"></text></g><g><title>core::mem::swap (37 samples, 0.03%)</title><rect x="19.1626%" y="1045" width="0.0339%" height="15" fill="rgb(249,76,35)"/><text x="19.4126%" y="1055.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (37 samples, 0.03%)</title><rect x="19.1626%" y="1029" width="0.0339%" height="15" fill="rgb(207,11,44)"/><text x="19.4126%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (37 samples, 0.03%)</title><rect x="19.1626%" y="1013" width="0.0339%" height="15" fill="rgb(228,190,49)"/><text x="19.4126%" y="1023.50"></text></g><g><title>tokio::coop::poll_proceed (53 samples, 0.05%)</title><rect x="19.1516%" y="1157" width="0.0486%" height="15" fill="rgb(214,173,12)"/><text x="19.4016%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (53 samples, 0.05%)</title><rect x="19.1516%" y="1141" width="0.0486%" height="15" fill="rgb(218,26,35)"/><text x="19.4016%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (53 samples, 0.05%)</title><rect x="19.1516%" y="1125" width="0.0486%" height="15" fill="rgb(220,200,19)"/><text x="19.4016%" y="1135.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (48 samples, 0.04%)</title><rect x="19.1562%" y="1109" width="0.0440%" height="15" fill="rgb(239,95,49)"/><text x="19.4062%" y="1119.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::consume_value (486 samples, 0.45%)</title><rect x="19.2002%" y="1157" width="0.4459%" height="15" fill="rgb(235,85,53)"/><text x="19.4502%" y="1167.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (486 samples, 0.45%)</title><rect x="19.2002%" y="1141" width="0.4459%" height="15" fill="rgb(233,133,31)"/><text x="19.4502%" y="1151.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::consume_value::{{closure}} (486 samples, 0.45%)</title><rect x="19.2002%" y="1125" width="0.4459%" height="15" fill="rgb(218,25,20)"/><text x="19.4502%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (486 samples, 0.45%)</title><rect x="19.2002%" y="1109" width="0.4459%" height="15" fill="rgb(252,210,38)"/><text x="19.4502%" y="1119.50"></text></g><g><title>core::mem::take (486 samples, 0.45%)</title><rect x="19.2002%" y="1093" width="0.4459%" height="15" fill="rgb(242,134,21)"/><text x="19.4502%" y="1103.50"></text></g><g><title>core::mem::replace (484 samples, 0.44%)</title><rect x="19.2020%" y="1077" width="0.4440%" height="15" fill="rgb(213,28,48)"/><text x="19.4520%" y="1087.50"></text></g><g><title>core::mem::swap (484 samples, 0.44%)</title><rect x="19.2020%" y="1061" width="0.4440%" height="15" fill="rgb(250,196,2)"/><text x="19.4520%" y="1071.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (484 samples, 0.44%)</title><rect x="19.2020%" y="1045" width="0.4440%" height="15" fill="rgb(227,5,17)"/><text x="19.4520%" y="1055.50"></text></g><g><title>core::ptr::swap_nonoverlapping (484 samples, 0.44%)</title><rect x="19.2020%" y="1029" width="0.4440%" height="15" fill="rgb(221,226,24)"/><text x="19.4520%" y="1039.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (484 samples, 0.44%)</title><rect x="19.2020%" y="1013" width="0.4440%" height="15" fill="rgb(211,5,48)"/><text x="19.4520%" y="1023.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (458 samples, 0.42%)</title><rect x="19.2259%" y="997" width="0.4202%" height="15" fill="rgb(219,150,6)"/><text x="19.4759%" y="1007.50"></text></g><g><title>tokio::sync::oneshot::State::load (34 samples, 0.03%)</title><rect x="19.6534%" y="1157" width="0.0312%" height="15" fill="rgb(251,46,16)"/><text x="19.9034%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (34 samples, 0.03%)</title><rect x="19.6534%" y="1141" width="0.0312%" height="15" fill="rgb(220,204,40)"/><text x="19.9034%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_load (34 samples, 0.03%)</title><rect x="19.6534%" y="1125" width="0.0312%" height="15" fill="rgb(211,85,2)"/><text x="19.9034%" y="1135.50"></text></g><g><title>tokio::sync::oneshot::State::set_rx_task (50 samples, 0.05%)</title><rect x="19.6846%" y="1157" width="0.0459%" height="15" fill="rgb(229,17,7)"/><text x="19.9346%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (50 samples, 0.05%)</title><rect x="19.6846%" y="1141" width="0.0459%" height="15" fill="rgb(239,72,28)"/><text x="19.9346%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_or (50 samples, 0.05%)</title><rect x="19.6846%" y="1125" width="0.0459%" height="15" fill="rgb(230,47,54)"/><text x="19.9346%" y="1135.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (25 samples, 0.02%)</title><rect x="19.7305%" y="1109" width="0.0229%" height="15" fill="rgb(214,50,8)"/><text x="19.9805%" y="1119.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (24 samples, 0.02%)</title><rect x="19.7314%" y="1093" width="0.0220%" height="15" fill="rgb(216,198,43)"/><text x="19.9814%" y="1103.50"></text></g><g><title>tokio::runtime::task::state::State::ref_inc (24 samples, 0.02%)</title><rect x="19.7314%" y="1077" width="0.0220%" height="15" fill="rgb(234,20,35)"/><text x="19.9814%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (24 samples, 0.02%)</title><rect x="19.7314%" y="1061" width="0.0220%" height="15" fill="rgb(254,45,19)"/><text x="19.9814%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_add (24 samples, 0.02%)</title><rect x="19.7314%" y="1045" width="0.0220%" height="15" fill="rgb(219,14,44)"/><text x="19.9814%" y="1055.50"></text></g><g><title>&lt;rho_runtime::storage::coordinator::AsyncStore as rho_runtime::storage::Storage&gt;::produce::{{closure}} (1,337 samples, 1.23%)</title><rect x="18.5278%" y="1205" width="1.2266%" height="15" fill="rgb(217,220,26)"/><text x="18.7778%" y="1215.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (1,337 samples, 1.23%)</title><rect x="18.5278%" y="1189" width="1.2266%" height="15" fill="rgb(213,158,28)"/><text x="18.7778%" y="1199.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::poll_recv (975 samples, 0.89%)</title><rect x="18.8599%" y="1173" width="0.8945%" height="15" fill="rgb(252,51,52)"/><text x="19.1099%" y="1183.50"></text></g><g><title>tokio::sync::oneshot::Task::set_task (26 samples, 0.02%)</title><rect x="19.7305%" y="1157" width="0.0239%" height="15" fill="rgb(246,89,16)"/><text x="19.9805%" y="1167.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (26 samples, 0.02%)</title><rect x="19.7305%" y="1141" width="0.0239%" height="15" fill="rgb(216,158,49)"/><text x="19.9805%" y="1151.50"></text></g><g><title>tokio::sync::oneshot::Task::set_task::{{closure}} (26 samples, 0.02%)</title><rect x="19.7305%" y="1125" width="0.0239%" height="15" fill="rgb(236,107,19)"/><text x="19.9805%" y="1135.50"></text></g><g><title>[libc-2.31.so] (152 samples, 0.14%)</title><rect x="19.7543%" y="1205" width="0.1394%" height="15" fill="rgb(228,185,30)"/><text x="20.0043%" y="1215.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::news_score (104 samples, 0.10%)</title><rect x="20.0112%" y="1077" width="0.0954%" height="15" fill="rgb(246,134,8)"/><text x="20.2612%" y="1087.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::matches_score (93 samples, 0.09%)</title><rect x="20.0213%" y="1061" width="0.0853%" height="15" fill="rgb(214,143,50)"/><text x="20.2713%" y="1071.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::bundles_score (93 samples, 0.09%)</title><rect x="20.0213%" y="1045" width="0.0853%" height="15" fill="rgb(228,75,8)"/><text x="20.2713%" y="1055.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::connectives_score (93 samples, 0.09%)</title><rect x="20.0213%" y="1029" width="0.0853%" height="15" fill="rgb(207,175,4)"/><text x="20.2713%" y="1039.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::unforgeables_score (92 samples, 0.08%)</title><rect x="20.0222%" y="1013" width="0.0844%" height="15" fill="rgb(205,108,24)"/><text x="20.2722%" y="1023.50"></text></g><g><title>model::ordering::sort_unforgeable::&lt;impl model::ordering::Scorable for &amp;model::rho_types::GUnforgeable&gt;::score_tree_iter (85 samples, 0.08%)</title><rect x="20.0286%" y="997" width="0.0780%" height="15" fill="rgb(244,120,49)"/><text x="20.2786%" y="1007.50"></text></g><g><title>model::ordering::sort_par::ParScoreTreeIter::receives_score (12 samples, 0.01%)</title><rect x="20.1112%" y="1077" width="0.0110%" height="15" fill="rgb(223,47,38)"/><text x="20.3612%" y="1087.50"></text></g><g><title>&lt;model::ordering::ScoreTreeIter as core::iter::traits::iterator::Iterator&gt;::next (201 samples, 0.18%)</title><rect x="19.9442%" y="1109" width="0.1844%" height="15" fill="rgb(229,179,11)"/><text x="20.1942%" y="1119.50"></text></g><g><title>&lt;model::ordering::sort_par::ParScoreTreeIter as core::iter::traits::iterator::Iterator&gt;::next (155 samples, 0.14%)</title><rect x="19.9864%" y="1093" width="0.1422%" height="15" fill="rgb(231,122,1)"/><text x="20.2364%" y="1103.50"></text></g><g><title>&lt;model::ordering::ScoreTreeIter as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 0.06%)</title><rect x="20.1534%" y="1093" width="0.0615%" height="15" fill="rgb(245,119,9)"/><text x="20.4034%" y="1103.50"></text></g><g><title>&lt;model::ordering::sort_unforgeable::UnforgeableScoreTreeIter as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 0.04%)</title><rect x="20.1763%" y="1077" width="0.0385%" height="15" fill="rgb(241,163,25)"/><text x="20.4263%" y="1087.50"></text></g><g><title>model::ordering::sort_unforgeable::UnforgeableScoreTreeIter::private_body_next (42 samples, 0.04%)</title><rect x="20.1763%" y="1061" width="0.0385%" height="15" fill="rgb(217,214,3)"/><text x="20.4263%" y="1071.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::deref::Deref&gt;::deref (11 samples, 0.01%)</title><rect x="20.2048%" y="1045" width="0.0101%" height="15" fill="rgb(240,86,28)"/><text x="20.4548%" y="1055.50"></text></g><g><title>bytes::bytes::Bytes::as_slice (11 samples, 0.01%)</title><rect x="20.2048%" y="1029" width="0.0101%" height="15" fill="rgb(215,47,9)"/><text x="20.4548%" y="1039.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (118 samples, 0.11%)</title><rect x="20.2745%" y="1029" width="0.1083%" height="15" fill="rgb(252,25,45)"/><text x="20.5245%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (118 samples, 0.11%)</title><rect x="20.2745%" y="1013" width="0.1083%" height="15" fill="rgb(251,164,9)"/><text x="20.5245%" y="1023.50"></text></g><g><title>[libc-2.31.so] (113 samples, 0.10%)</title><rect x="20.2791%" y="997" width="0.1037%" height="15" fill="rgb(233,194,0)"/><text x="20.5291%" y="1007.50"></text></g><g><title>blake3::ChunkState::fill_buf (150 samples, 0.14%)</title><rect x="20.2460%" y="1045" width="0.1376%" height="15" fill="rgb(249,111,24)"/><text x="20.4960%" y="1055.50"></text></g><g><title>blake3::ChunkState::update (168 samples, 0.15%)</title><rect x="20.2332%" y="1061" width="0.1541%" height="15" fill="rgb(250,223,3)"/><text x="20.4832%" y="1071.50"></text></g><g><title>blake3::Hasher::update (197 samples, 0.18%)</title><rect x="20.2149%" y="1093" width="0.1807%" height="15" fill="rgb(236,178,37)"/><text x="20.4649%" y="1103.50"></text></g><g><title>blake3::Hasher::update_with_join (195 samples, 0.18%)</title><rect x="20.2167%" y="1077" width="0.1789%" height="15" fill="rgb(241,158,50)"/><text x="20.4667%" y="1087.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash::traverse (297 samples, 0.27%)</title><rect x="20.1286%" y="1109" width="0.2725%" height="15" fill="rgb(213,121,41)"/><text x="20.3786%" y="1119.50"></text></g><g><title>blake3::ChunkState::len (14 samples, 0.01%)</title><rect x="20.4240%" y="1077" width="0.0128%" height="15" fill="rgb(240,92,3)"/><text x="20.6740%" y="1087.50"></text></g><g><title>core::array::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T: N]&gt;::index_mut (12 samples, 0.01%)</title><rect x="20.4653%" y="1045" width="0.0110%" height="15" fill="rgb(205,123,3)"/><text x="20.7153%" y="1055.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (12 samples, 0.01%)</title><rect x="20.4653%" y="1029" width="0.0110%" height="15" fill="rgb(205,97,47)"/><text x="20.7153%" y="1039.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (12 samples, 0.01%)</title><rect x="20.4653%" y="1013" width="0.0110%" height="15" fill="rgb(247,152,14)"/><text x="20.7153%" y="1023.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (144 samples, 0.13%)</title><rect x="20.4855%" y="1045" width="0.1321%" height="15" fill="rgb(248,195,53)"/><text x="20.7355%" y="1055.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (144 samples, 0.13%)</title><rect x="20.4855%" y="1029" width="0.1321%" height="15" fill="rgb(226,201,16)"/><text x="20.7355%" y="1039.50"></text></g><g><title>[libc-2.31.so] (131 samples, 0.12%)</title><rect x="20.4974%" y="1013" width="0.1202%" height="15" fill="rgb(205,98,0)"/><text x="20.7474%" y="1023.50"></text></g><g><title>blake3::ChunkState::fill_buf (183 samples, 0.17%)</title><rect x="20.4515%" y="1061" width="0.1679%" height="15" fill="rgb(214,191,48)"/><text x="20.7015%" y="1071.50"></text></g><g><title>blake3::ChunkState::update (206 samples, 0.19%)</title><rect x="20.4369%" y="1077" width="0.1890%" height="15" fill="rgb(237,112,39)"/><text x="20.6869%" y="1087.50"></text></g><g><title>blake3::Hasher::update (262 samples, 0.24%)</title><rect x="20.4011%" y="1109" width="0.2404%" height="15" fill="rgb(247,203,27)"/><text x="20.6511%" y="1119.50"></text></g><g><title>blake3::Hasher::update_with_join (261 samples, 0.24%)</title><rect x="20.4020%" y="1093" width="0.2394%" height="15" fill="rgb(235,124,28)"/><text x="20.6520%" y="1103.50"></text></g><g><title>core::cmp::min (12 samples, 0.01%)</title><rect x="20.6304%" y="1077" width="0.0110%" height="15" fill="rgb(208,207,46)"/><text x="20.8804%" y="1087.50"></text></g><g><title>core::cmp::Ord::min (12 samples, 0.01%)</title><rect x="20.6304%" y="1061" width="0.0110%" height="15" fill="rgb(234,176,4)"/><text x="20.8804%" y="1071.50"></text></g><g><title>core::cmp::min_by (12 samples, 0.01%)</title><rect x="20.6304%" y="1045" width="0.0110%" height="15" fill="rgb(230,133,28)"/><text x="20.8804%" y="1055.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash::traverse (804 samples, 0.74%)</title><rect x="19.9048%" y="1125" width="0.7376%" height="15" fill="rgb(211,137,40)"/><text x="20.1548%" y="1135.50"></text></g><g><title>blake3::Hasher::finalize (31 samples, 0.03%)</title><rect x="20.6424%" y="1125" width="0.0284%" height="15" fill="rgb(254,35,13)"/><text x="20.8924%" y="1135.50"></text></g><g><title>blake3::Output::root_hash (22 samples, 0.02%)</title><rect x="20.6506%" y="1109" width="0.0202%" height="15" fill="rgb(225,49,51)"/><text x="20.9006%" y="1119.50"></text></g><g><title>blake3::platform::Platform::compress_in_place (18 samples, 0.02%)</title><rect x="20.6543%" y="1093" width="0.0165%" height="15" fill="rgb(251,10,15)"/><text x="20.9043%" y="1103.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash (849 samples, 0.78%)</title><rect x="19.8947%" y="1141" width="0.7789%" height="15" fill="rgb(228,207,15)"/><text x="20.1447%" y="1151.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::produce::{{closure}} (852 samples, 0.78%)</title><rect x="19.8947%" y="1205" width="0.7816%" height="15" fill="rgb(241,99,19)"/><text x="20.1447%" y="1215.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (852 samples, 0.78%)</title><rect x="19.8947%" y="1189" width="0.7816%" height="15" fill="rgb(207,104,49)"/><text x="20.1447%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (852 samples, 0.78%)</title><rect x="19.8947%" y="1173" width="0.7816%" height="15" fill="rgb(234,99,18)"/><text x="20.1447%" y="1183.50"></text></g><g><title>&lt;rho_runtime::storage::coordinator::AsyncStore as rho_runtime::storage::Storage&gt;::produce::{{closure}} (852 samples, 0.78%)</title><rect x="19.8947%" y="1157" width="0.7816%" height="15" fill="rgb(213,191,49)"/><text x="20.1447%" y="1167.50"></text></g><g><title>[libc-2.31.so] (194 samples, 0.18%)</title><rect x="20.8974%" y="1157" width="0.1780%" height="15" fill="rgb(210,226,19)"/><text x="21.1474%" y="1167.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (452 samples, 0.41%)</title><rect x="21.0965%" y="1093" width="0.4147%" height="15" fill="rgb(229,97,18)"/><text x="21.3465%" y="1103.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (452 samples, 0.41%)</title><rect x="21.0965%" y="1077" width="0.4147%" height="15" fill="rgb(211,167,15)"/><text x="21.3465%" y="1087.50"></text></g><g><title>core::mem::replace (452 samples, 0.41%)</title><rect x="21.0965%" y="1061" width="0.4147%" height="15" fill="rgb(210,169,34)"/><text x="21.3465%" y="1071.50"></text></g><g><title>core::mem::swap (452 samples, 0.41%)</title><rect x="21.0965%" y="1045" width="0.4147%" height="15" fill="rgb(241,121,31)"/><text x="21.3465%" y="1055.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (452 samples, 0.41%)</title><rect x="21.0965%" y="1029" width="0.4147%" height="15" fill="rgb(232,40,11)"/><text x="21.3465%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (452 samples, 0.41%)</title><rect x="21.0965%" y="1013" width="0.4147%" height="15" fill="rgb(205,86,26)"/><text x="21.3465%" y="1023.50"></text></g><g><title>tokio::coop::poll_proceed (468 samples, 0.43%)</title><rect x="21.0836%" y="1157" width="0.4293%" height="15" fill="rgb(231,126,28)"/><text x="21.3336%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (468 samples, 0.43%)</title><rect x="21.0836%" y="1141" width="0.4293%" height="15" fill="rgb(219,221,18)"/><text x="21.3336%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (468 samples, 0.43%)</title><rect x="21.0836%" y="1125" width="0.4293%" height="15" fill="rgb(211,40,0)"/><text x="21.3336%" y="1135.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (459 samples, 0.42%)</title><rect x="21.0919%" y="1109" width="0.4211%" height="15" fill="rgb(239,85,43)"/><text x="21.3419%" y="1119.50"></text></g><g><title>[libc-2.31.so] (129 samples, 0.12%)</title><rect x="21.5148%" y="1141" width="0.1183%" height="15" fill="rgb(231,55,21)"/><text x="21.7648%" y="1151.50"></text></g><g><title>__rust_probestack (18 samples, 0.02%)</title><rect x="21.6332%" y="1141" width="0.0165%" height="15" fill="rgb(225,184,43)"/><text x="21.8832%" y="1151.50"></text></g><g><title>[libc-2.31.so] (171 samples, 0.16%)</title><rect x="21.6524%" y="1093" width="0.1569%" height="15" fill="rgb(251,158,41)"/><text x="21.9024%" y="1103.50"></text></g><g><title>[libc-2.31.so] (353 samples, 0.32%)</title><rect x="21.8093%" y="1077" width="0.3238%" height="15" fill="rgb(234,159,37)"/><text x="22.0593%" y="1087.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,542 samples, 1.41%)</title><rect x="22.1808%" y="1013" width="1.4146%" height="15" fill="rgb(216,204,22)"/><text x="22.4308%" y="1023.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::take_output (2,137 samples, 1.96%)</title><rect x="21.6506%" y="1141" width="1.9605%" height="15" fill="rgb(214,17,3)"/><text x="21.9006%" y="1151.50">t..</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (2,137 samples, 1.96%)</title><rect x="21.6506%" y="1125" width="1.9605%" height="15" fill="rgb(212,111,17)"/><text x="21.9006%" y="1135.50">t..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::take_output::{{closure}} (2,137 samples, 1.96%)</title><rect x="21.6506%" y="1109" width="1.9605%" height="15" fill="rgb(221,157,24)"/><text x="21.9006%" y="1119.50">t..</text></g><g><title>core::mem::replace (1,964 samples, 1.80%)</title><rect x="21.8093%" y="1093" width="1.8018%" height="15" fill="rgb(252,16,13)"/><text x="22.0593%" y="1103.50">c..</text></g><g><title>core::mem::swap (1,611 samples, 1.48%)</title><rect x="22.1331%" y="1077" width="1.4779%" height="15" fill="rgb(221,62,2)"/><text x="22.3831%" y="1087.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1,611 samples, 1.48%)</title><rect x="22.1331%" y="1061" width="1.4779%" height="15" fill="rgb(247,87,22)"/><text x="22.3831%" y="1071.50"></text></g><g><title>core::ptr::swap_nonoverlapping (1,611 samples, 1.48%)</title><rect x="22.1331%" y="1045" width="1.4779%" height="15" fill="rgb(215,73,9)"/><text x="22.3831%" y="1055.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (1,611 samples, 1.48%)</title><rect x="22.1331%" y="1029" width="1.4779%" height="15" fill="rgb(207,175,33)"/><text x="22.3831%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (17 samples, 0.02%)</title><rect x="23.5955%" y="1013" width="0.0156%" height="15" fill="rgb(243,129,54)"/><text x="23.8455%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (17 samples, 0.02%)</title><rect x="23.5955%" y="997" width="0.0156%" height="15" fill="rgb(227,119,45)"/><text x="23.8455%" y="1007.50"></text></g><g><title>tokio::runtime::task::core::Trailer::set_waker (25 samples, 0.02%)</title><rect x="23.6193%" y="1109" width="0.0229%" height="15" fill="rgb(205,109,36)"/><text x="23.8693%" y="1119.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (25 samples, 0.02%)</title><rect x="23.6193%" y="1093" width="0.0229%" height="15" fill="rgb(205,6,39)"/><text x="23.8693%" y="1103.50"></text></g><g><title>tokio::runtime::task::core::Trailer::set_waker::{{closure}} (25 samples, 0.02%)</title><rect x="23.6193%" y="1077" width="0.0229%" height="15" fill="rgb(221,32,16)"/><text x="23.8693%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (25 samples, 0.02%)</title><rect x="23.6193%" y="1061" width="0.0229%" height="15" fill="rgb(228,144,50)"/><text x="23.8693%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (52 samples, 0.05%)</title><rect x="23.6423%" y="1077" width="0.0477%" height="15" fill="rgb(229,201,53)"/><text x="23.8923%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (52 samples, 0.05%)</title><rect x="23.6423%" y="1061" width="0.0477%" height="15" fill="rgb(249,153,27)"/><text x="23.8923%" y="1071.50"></text></g><g><title>tokio::runtime::task::harness::set_join_waker (78 samples, 0.07%)</title><rect x="23.6193%" y="1125" width="0.0716%" height="15" fill="rgb(227,106,25)"/><text x="23.8693%" y="1135.50"></text></g><g><title>tokio::runtime::task::state::State::set_join_waker (53 samples, 0.05%)</title><rect x="23.6423%" y="1109" width="0.0486%" height="15" fill="rgb(230,65,29)"/><text x="23.8923%" y="1119.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update (53 samples, 0.05%)</title><rect x="23.6423%" y="1093" width="0.0486%" height="15" fill="rgb(221,57,46)"/><text x="23.8923%" y="1103.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::try_read_output (2,377 samples, 2.18%)</title><rect x="21.5130%" y="1157" width="2.1807%" height="15" fill="rgb(229,161,17)"/><text x="21.7630%" y="1167.50">t..</text></g><g><title>tokio::runtime::task::harness::can_read_output (90 samples, 0.08%)</title><rect x="23.6111%" y="1141" width="0.0826%" height="15" fill="rgb(222,213,11)"/><text x="23.8611%" y="1151.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::try_read_output (30 samples, 0.03%)</title><rect x="23.6936%" y="1157" width="0.0275%" height="15" fill="rgb(235,35,13)"/><text x="23.9436%" y="1167.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (3,099 samples, 2.84%)</title><rect x="20.8836%" y="1173" width="2.8430%" height="15" fill="rgb(233,158,34)"/><text x="21.1336%" y="1183.50">&lt;t..</text></g><g><title>[libc-2.31.so] (309 samples, 0.28%)</title><rect x="23.7331%" y="1173" width="0.2835%" height="15" fill="rgb(215,151,48)"/><text x="23.9831%" y="1183.50"></text></g><g><title>&lt;rho_runtime::storage::signal::CompletionSignal as core::future::future::Future&gt;::poll (3,458 samples, 3.17%)</title><rect x="20.8524%" y="1189" width="3.1724%" height="15" fill="rgb(229,84,14)"/><text x="21.1024%" y="1199.50">&lt;rh..</text></g><g><title>[libc-2.31.so] (538 samples, 0.49%)</title><rect x="24.0248%" y="1189" width="0.4936%" height="15" fill="rgb(229,68,14)"/><text x="24.2748%" y="1199.50"></text></g><g><title>extent_ad_comp (13 samples, 0.01%)</title><rect x="24.6477%" y="981" width="0.0119%" height="15" fill="rgb(243,106,26)"/><text x="24.8977%" y="991.50"></text></g><g><title>arena_bin_lower_slab (49 samples, 0.04%)</title><rect x="24.6257%" y="1013" width="0.0450%" height="15" fill="rgb(206,45,38)"/><text x="24.8757%" y="1023.50"></text></g><g><title>extent_snad_comp (25 samples, 0.02%)</title><rect x="24.6477%" y="997" width="0.0229%" height="15" fill="rgb(226,6,15)"/><text x="24.8977%" y="1007.50"></text></g><g><title>extent_sn_comp (12 samples, 0.01%)</title><rect x="24.6596%" y="981" width="0.0110%" height="15" fill="rgb(232,22,54)"/><text x="24.9096%" y="991.50"></text></g><g><title>arena_slab_dalloc (14 samples, 0.01%)</title><rect x="24.6762%" y="997" width="0.0128%" height="15" fill="rgb(229,222,32)"/><text x="24.9262%" y="1007.50"></text></g><g><title>_rjem_je_arena_extents_dirty_dalloc (14 samples, 0.01%)</title><rect x="24.6762%" y="981" width="0.0128%" height="15" fill="rgb(228,62,29)"/><text x="24.9262%" y="991.50"></text></g><g><title>extent_record (14 samples, 0.01%)</title><rect x="24.6762%" y="965" width="0.0128%" height="15" fill="rgb(251,103,34)"/><text x="24.9262%" y="975.50"></text></g><g><title>extent_try_coalesce (12 samples, 0.01%)</title><rect x="24.6780%" y="949" width="0.0110%" height="15" fill="rgb(233,12,30)"/><text x="24.9280%" y="959.50"></text></g><g><title>arena_dalloc_bin_slab (15 samples, 0.01%)</title><rect x="24.6762%" y="1013" width="0.0138%" height="15" fill="rgb(238,52,0)"/><text x="24.9262%" y="1023.50"></text></g><g><title>bitmap_unset (15 samples, 0.01%)</title><rect x="24.6963%" y="997" width="0.0138%" height="15" fill="rgb(223,98,5)"/><text x="24.9463%" y="1007.50"></text></g><g><title>arena_slab_reg_dalloc (24 samples, 0.02%)</title><rect x="24.6908%" y="1013" width="0.0220%" height="15" fill="rgb(228,75,37)"/><text x="24.9408%" y="1023.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (122 samples, 0.11%)</title><rect x="24.6018%" y="1045" width="0.1119%" height="15" fill="rgb(205,115,49)"/><text x="24.8518%" y="1055.50"></text></g><g><title>arena_dalloc_bin_locked_impl (108 samples, 0.10%)</title><rect x="24.6147%" y="1029" width="0.0991%" height="15" fill="rgb(250,154,43)"/><text x="24.8647%" y="1039.50"></text></g><g><title>extent_arena_get (70 samples, 0.06%)</title><rect x="24.7156%" y="1045" width="0.0642%" height="15" fill="rgb(226,43,29)"/><text x="24.9656%" y="1055.50"></text></g><g><title>atomic_load_p (47 samples, 0.04%)</title><rect x="24.7367%" y="1029" width="0.0431%" height="15" fill="rgb(249,228,39)"/><text x="24.9867%" y="1039.50"></text></g><g><title>rtree_extent_read (17 samples, 0.02%)</title><rect x="24.7798%" y="1029" width="0.0156%" height="15" fill="rgb(216,79,43)"/><text x="25.0298%" y="1039.50"></text></g><g><title>iealloc (18 samples, 0.02%)</title><rect x="24.7798%" y="1045" width="0.0165%" height="15" fill="rgb(228,95,12)"/><text x="25.0298%" y="1055.50"></text></g><g><title>malloc_mutex_lock (48 samples, 0.04%)</title><rect x="24.7963%" y="1045" width="0.0440%" height="15" fill="rgb(249,221,15)"/><text x="25.0463%" y="1055.50"></text></g><g><title>malloc_mutex_trylock_final (45 samples, 0.04%)</title><rect x="24.7991%" y="1029" width="0.0413%" height="15" fill="rgb(233,34,13)"/><text x="25.0491%" y="1039.50"></text></g><g><title>__GI___pthread_mutex_trylock (45 samples, 0.04%)</title><rect x="24.7991%" y="1013" width="0.0413%" height="15" fill="rgb(214,103,39)"/><text x="25.0491%" y="1023.50"></text></g><g><title>malloc_mutex_unlock (21 samples, 0.02%)</title><rect x="24.8404%" y="1045" width="0.0193%" height="15" fill="rgb(251,126,39)"/><text x="25.0904%" y="1055.50"></text></g><g><title>__GI___pthread_mutex_unlock (19 samples, 0.02%)</title><rect x="24.8422%" y="1029" width="0.0174%" height="15" fill="rgb(214,216,36)"/><text x="25.0922%" y="1039.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (309 samples, 0.28%)</title><rect x="24.5771%" y="1061" width="0.2835%" height="15" fill="rgb(220,221,8)"/><text x="24.8271%" y="1071.50"></text></g><g><title>isfree (338 samples, 0.31%)</title><rect x="24.5551%" y="1125" width="0.3101%" height="15" fill="rgb(240,216,3)"/><text x="24.8051%" y="1135.50"></text></g><g><title>isdalloct (338 samples, 0.31%)</title><rect x="24.5551%" y="1109" width="0.3101%" height="15" fill="rgb(232,218,17)"/><text x="24.8051%" y="1119.50"></text></g><g><title>arena_sdalloc (338 samples, 0.31%)</title><rect x="24.5551%" y="1093" width="0.3101%" height="15" fill="rgb(229,163,45)"/><text x="24.8051%" y="1103.50"></text></g><g><title>tcache_dalloc_small (331 samples, 0.30%)</title><rect x="24.5615%" y="1077" width="0.3037%" height="15" fill="rgb(231,110,42)"/><text x="24.8115%" y="1087.50"></text></g><g><title>_rjem_sdallocx (367 samples, 0.34%)</title><rect x="24.5330%" y="1141" width="0.3367%" height="15" fill="rgb(208,170,48)"/><text x="24.7830%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Core&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_join_double::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (24 samples, 0.02%)</title><rect x="24.8771%" y="1045" width="0.0220%" height="15" fill="rgb(239,116,25)"/><text x="25.1271%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Scheduler&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (22 samples, 0.02%)</title><rect x="24.8789%" y="1029" width="0.0202%" height="15" fill="rgb(219,200,50)"/><text x="25.1289%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (22 samples, 0.02%)</title><rect x="24.8789%" y="1013" width="0.0202%" height="15" fill="rgb(245,200,0)"/><text x="25.1289%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (22 samples, 0.02%)</title><rect x="24.8789%" y="997" width="0.0202%" height="15" fill="rgb(245,119,33)"/><text x="25.1289%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (22 samples, 0.02%)</title><rect x="24.8789%" y="981" width="0.0202%" height="15" fill="rgb(231,125,12)"/><text x="25.1289%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt; (22 samples, 0.02%)</title><rect x="24.8789%" y="965" width="0.0202%" height="15" fill="rgb(216,96,41)"/><text x="25.1289%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="24.8789%" y="949" width="0.0202%" height="15" fill="rgb(248,43,45)"/><text x="25.1289%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (21 samples, 0.02%)</title><rect x="24.8798%" y="933" width="0.0193%" height="15" fill="rgb(217,222,7)"/><text x="25.1298%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_sub (21 samples, 0.02%)</title><rect x="24.8798%" y="917" width="0.0193%" height="15" fill="rgb(233,28,6)"/><text x="25.1298%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_join_double::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (39 samples, 0.04%)</title><rect x="24.8762%" y="1077" width="0.0358%" height="15" fill="rgb(231,218,15)"/><text x="25.1262%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_join_double::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (38 samples, 0.03%)</title><rect x="24.8771%" y="1061" width="0.0349%" height="15" fill="rgb(226,171,48)"/><text x="25.1271%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Trailer&gt; (14 samples, 0.01%)</title><rect x="24.8991%" y="1045" width="0.0128%" height="15" fill="rgb(235,201,9)"/><text x="25.1491%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="24.8991%" y="1029" width="0.0128%" height="15" fill="rgb(217,80,15)"/><text x="25.1491%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="24.8991%" y="1013" width="0.0128%" height="15" fill="rgb(219,152,8)"/><text x="25.1491%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (14 samples, 0.01%)</title><rect x="24.8991%" y="997" width="0.0128%" height="15" fill="rgb(243,107,38)"/><text x="25.1491%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (14 samples, 0.01%)</title><rect x="24.8991%" y="981" width="0.0128%" height="15" fill="rgb(231,17,5)"/><text x="25.1491%" y="991.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="24.8991%" y="965" width="0.0128%" height="15" fill="rgb(209,25,54)"/><text x="25.1491%" y="975.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (14 samples, 0.01%)</title><rect x="24.8991%" y="949" width="0.0128%" height="15" fill="rgb(219,0,2)"/><text x="25.1491%" y="959.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (14 samples, 0.01%)</title><rect x="24.8991%" y="933" width="0.0128%" height="15" fill="rgb(246,9,5)"/><text x="25.1491%" y="943.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (12 samples, 0.01%)</title><rect x="24.9009%" y="917" width="0.0110%" height="15" fill="rgb(226,159,4)"/><text x="25.1509%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Core&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_produce::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (39 samples, 0.04%)</title><rect x="24.9128%" y="1045" width="0.0358%" height="15" fill="rgb(219,175,34)"/><text x="25.1628%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Scheduler&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (38 samples, 0.03%)</title><rect x="24.9138%" y="1029" width="0.0349%" height="15" fill="rgb(236,10,46)"/><text x="25.1638%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (38 samples, 0.03%)</title><rect x="24.9138%" y="1013" width="0.0349%" height="15" fill="rgb(240,211,16)"/><text x="25.1638%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (38 samples, 0.03%)</title><rect x="24.9138%" y="997" width="0.0349%" height="15" fill="rgb(205,3,43)"/><text x="25.1638%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (38 samples, 0.03%)</title><rect x="24.9138%" y="981" width="0.0349%" height="15" fill="rgb(245,7,22)"/><text x="25.1638%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt; (38 samples, 0.03%)</title><rect x="24.9138%" y="965" width="0.0349%" height="15" fill="rgb(239,132,32)"/><text x="25.1638%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.03%)</title><rect x="24.9138%" y="949" width="0.0349%" height="15" fill="rgb(228,202,34)"/><text x="25.1638%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (37 samples, 0.03%)</title><rect x="24.9147%" y="933" width="0.0339%" height="15" fill="rgb(254,200,22)"/><text x="25.1647%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_sub (37 samples, 0.03%)</title><rect x="24.9147%" y="917" width="0.0339%" height="15" fill="rgb(219,10,39)"/><text x="25.1647%" y="927.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (80 samples, 0.07%)</title><rect x="24.8762%" y="1109" width="0.0734%" height="15" fill="rgb(226,210,39)"/><text x="25.1262%" y="1119.50"></text></g><g><title>core::mem::drop (80 samples, 0.07%)</title><rect x="24.8762%" y="1093" width="0.0734%" height="15" fill="rgb(208,219,16)"/><text x="25.1262%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_produce::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (41 samples, 0.04%)</title><rect x="24.9119%" y="1077" width="0.0376%" height="15" fill="rgb(216,158,51)"/><text x="25.1619%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_produce::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (40 samples, 0.04%)</title><rect x="24.9128%" y="1061" width="0.0367%" height="15" fill="rgb(233,14,44)"/><text x="25.1628%" y="1071.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (109 samples, 0.10%)</title><rect x="24.8762%" y="1125" width="0.1000%" height="15" fill="rgb(237,97,39)"/><text x="25.1262%" y="1135.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (29 samples, 0.03%)</title><rect x="24.9495%" y="1109" width="0.0266%" height="15" fill="rgb(218,198,43)"/><text x="25.1995%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (28 samples, 0.03%)</title><rect x="24.9505%" y="1093" width="0.0257%" height="15" fill="rgb(231,104,20)"/><text x="25.2005%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_sub (28 samples, 0.03%)</title><rect x="24.9505%" y="1077" width="0.0257%" height="15" fill="rgb(254,36,13)"/><text x="25.2005%" y="1087.50"></text></g><g><title>tokio::runtime::task::state::State::load (13 samples, 0.01%)</title><rect x="24.9761%" y="1093" width="0.0119%" height="15" fill="rgb(248,14,50)"/><text x="25.2261%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (13 samples, 0.01%)</title><rect x="24.9761%" y="1077" width="0.0119%" height="15" fill="rgb(217,107,29)"/><text x="25.2261%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.01%)</title><rect x="24.9761%" y="1061" width="0.0119%" height="15" fill="rgb(251,169,33)"/><text x="25.2261%" y="1071.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (130 samples, 0.12%)</title><rect x="24.8706%" y="1141" width="0.1193%" height="15" fill="rgb(217,108,32)"/><text x="25.1206%" y="1151.50"></text></g><g><title>tokio::runtime::task::state::State::unset_join_interested (15 samples, 0.01%)</title><rect x="24.9761%" y="1125" width="0.0138%" height="15" fill="rgb(219,66,42)"/><text x="25.2261%" y="1135.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update (15 samples, 0.01%)</title><rect x="24.9761%" y="1109" width="0.0138%" height="15" fill="rgb(206,180,7)"/><text x="25.2261%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::join::JoinHandle&lt;rho_runtime::storage::transit::Transit&gt;&gt; (687 samples, 0.63%)</title><rect x="24.5211%" y="1173" width="0.6303%" height="15" fill="rgb(208,226,31)"/><text x="24.7711%" y="1183.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (687 samples, 0.63%)</title><rect x="24.5211%" y="1157" width="0.6303%" height="15" fill="rgb(218,26,49)"/><text x="24.7711%" y="1167.50"></text></g><g><title>tokio::runtime::task::state::State::drop_join_handle_fast (165 samples, 0.15%)</title><rect x="25.0000%" y="1141" width="0.1514%" height="15" fill="rgb(233,197,48)"/><text x="25.2500%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (160 samples, 0.15%)</title><rect x="25.0046%" y="1125" width="0.1468%" height="15" fill="rgb(252,181,51)"/><text x="25.2546%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (160 samples, 0.15%)</title><rect x="25.0046%" y="1109" width="0.1468%" height="15" fill="rgb(253,90,19)"/><text x="25.2546%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;rho_runtime::storage::signal::CompletionSignal&gt; (691 samples, 0.63%)</title><rect x="24.5184%" y="1189" width="0.6339%" height="15" fill="rgb(215,171,30)"/><text x="24.7684%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (14 samples, 0.01%)</title><rect x="25.2027%" y="1093" width="0.0128%" height="15" fill="rgb(214,222,9)"/><text x="25.4527%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (40 samples, 0.04%)</title><rect x="25.3413%" y="901" width="0.0367%" height="15" fill="rgb(223,3,22)"/><text x="25.5913%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="25.3982%" y="853" width="0.0110%" height="15" fill="rgb(225,196,46)"/><text x="25.6482%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (18 samples, 0.02%)</title><rect x="25.4449%" y="741" width="0.0165%" height="15" fill="rgb(209,110,37)"/><text x="25.6949%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (39 samples, 0.04%)</title><rect x="25.4431%" y="757" width="0.0358%" height="15" fill="rgb(249,89,12)"/><text x="25.6931%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19 samples, 0.02%)</title><rect x="25.4615%" y="741" width="0.0174%" height="15" fill="rgb(226,27,33)"/><text x="25.7115%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (19 samples, 0.02%)</title><rect x="25.4615%" y="725" width="0.0174%" height="15" fill="rgb(213,82,22)"/><text x="25.7115%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19 samples, 0.02%)</title><rect x="25.4615%" y="709" width="0.0174%" height="15" fill="rgb(248,140,0)"/><text x="25.7115%" y="719.50"></text></g><g><title>iallocztm (16 samples, 0.01%)</title><rect x="25.5477%" y="485" width="0.0147%" height="15" fill="rgb(228,106,3)"/><text x="25.7977%" y="495.50"></text></g><g><title>arena_malloc (16 samples, 0.01%)</title><rect x="25.5477%" y="469" width="0.0147%" height="15" fill="rgb(209,23,37)"/><text x="25.7977%" y="479.50"></text></g><g><title>tcache_alloc_small (16 samples, 0.01%)</title><rect x="25.5477%" y="453" width="0.0147%" height="15" fill="rgb(241,93,50)"/><text x="25.7977%" y="463.50"></text></g><g><title>imalloc_no_sample (22 samples, 0.02%)</title><rect x="25.5431%" y="501" width="0.0202%" height="15" fill="rgb(253,46,43)"/><text x="25.7931%" y="511.50"></text></g><g><title>imalloc_body (27 samples, 0.02%)</title><rect x="25.5413%" y="517" width="0.0248%" height="15" fill="rgb(226,206,43)"/><text x="25.7913%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (93 samples, 0.09%)</title><rect x="25.4972%" y="597" width="0.0853%" height="15" fill="rgb(217,54,7)"/><text x="25.7472%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (93 samples, 0.09%)</title><rect x="25.4972%" y="581" width="0.0853%" height="15" fill="rgb(223,5,52)"/><text x="25.7472%" y="591.50"></text></g><g><title>alloc::alloc::alloc (93 samples, 0.09%)</title><rect x="25.4972%" y="565" width="0.0853%" height="15" fill="rgb(206,52,46)"/><text x="25.7472%" y="575.50"></text></g><g><title>_rjem_mallocx (79 samples, 0.07%)</title><rect x="25.5101%" y="549" width="0.0725%" height="15" fill="rgb(253,136,11)"/><text x="25.7601%" y="559.50"></text></g><g><title>imalloc (47 samples, 0.04%)</title><rect x="25.5394%" y="533" width="0.0431%" height="15" fill="rgb(208,106,33)"/><text x="25.7894%" y="543.50"></text></g><g><title>tsd_fetch (18 samples, 0.02%)</title><rect x="25.5660%" y="517" width="0.0165%" height="15" fill="rgb(206,54,4)"/><text x="25.8160%" y="527.50"></text></g><g><title>tsd_fetch_impl (18 samples, 0.02%)</title><rect x="25.5660%" y="501" width="0.0165%" height="15" fill="rgb(213,3,15)"/><text x="25.8160%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (107 samples, 0.10%)</title><rect x="25.4871%" y="645" width="0.0982%" height="15" fill="rgb(252,211,39)"/><text x="25.7371%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (107 samples, 0.10%)</title><rect x="25.4871%" y="629" width="0.0982%" height="15" fill="rgb(223,6,36)"/><text x="25.7371%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (107 samples, 0.10%)</title><rect x="25.4871%" y="613" width="0.0982%" height="15" fill="rgb(252,169,45)"/><text x="25.7371%" y="623.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (192 samples, 0.18%)</title><rect x="25.4211%" y="773" width="0.1761%" height="15" fill="rgb(212,48,26)"/><text x="25.6711%" y="783.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (129 samples, 0.12%)</title><rect x="25.4789%" y="757" width="0.1183%" height="15" fill="rgb(251,102,48)"/><text x="25.7289%" y="767.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (126 samples, 0.12%)</title><rect x="25.4816%" y="741" width="0.1156%" height="15" fill="rgb(243,208,16)"/><text x="25.7316%" y="751.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (126 samples, 0.12%)</title><rect x="25.4816%" y="725" width="0.1156%" height="15" fill="rgb(219,96,24)"/><text x="25.7316%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (125 samples, 0.11%)</title><rect x="25.4826%" y="709" width="0.1147%" height="15" fill="rgb(219,33,29)"/><text x="25.7326%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (120 samples, 0.11%)</title><rect x="25.4871%" y="693" width="0.1101%" height="15" fill="rgb(223,176,5)"/><text x="25.7371%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (120 samples, 0.11%)</title><rect x="25.4871%" y="677" width="0.1101%" height="15" fill="rgb(228,140,14)"/><text x="25.7371%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (120 samples, 0.11%)</title><rect x="25.4871%" y="661" width="0.1101%" height="15" fill="rgb(217,179,31)"/><text x="25.7371%" y="671.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (13 samples, 0.01%)</title><rect x="25.5853%" y="645" width="0.0119%" height="15" fill="rgb(230,9,30)"/><text x="25.8353%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.01%)</title><rect x="25.5853%" y="629" width="0.0119%" height="15" fill="rgb(230,136,20)"/><text x="25.8353%" y="639.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.01%)</title><rect x="25.5871%" y="613" width="0.0101%" height="15" fill="rgb(215,210,22)"/><text x="25.8371%" y="623.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (16 samples, 0.01%)</title><rect x="25.6156%" y="549" width="0.0147%" height="15" fill="rgb(218,43,5)"/><text x="25.8656%" y="559.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (17 samples, 0.02%)</title><rect x="25.6156%" y="565" width="0.0156%" height="15" fill="rgb(216,11,5)"/><text x="25.8656%" y="575.50"></text></g><g><title>imalloc_no_sample (35 samples, 0.03%)</title><rect x="25.6128%" y="629" width="0.0321%" height="15" fill="rgb(209,82,29)"/><text x="25.8628%" y="639.50"></text></g><g><title>iallocztm (34 samples, 0.03%)</title><rect x="25.6137%" y="613" width="0.0312%" height="15" fill="rgb(244,115,12)"/><text x="25.8637%" y="623.50"></text></g><g><title>arena_malloc (34 samples, 0.03%)</title><rect x="25.6137%" y="597" width="0.0312%" height="15" fill="rgb(222,82,18)"/><text x="25.8637%" y="607.50"></text></g><g><title>tcache_alloc_small (34 samples, 0.03%)</title><rect x="25.6137%" y="581" width="0.0312%" height="15" fill="rgb(249,227,8)"/><text x="25.8637%" y="591.50"></text></g><g><title>cache_bin_alloc_easy (15 samples, 0.01%)</title><rect x="25.6312%" y="565" width="0.0138%" height="15" fill="rgb(253,141,45)"/><text x="25.8812%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (56 samples, 0.05%)</title><rect x="25.5991%" y="725" width="0.0514%" height="15" fill="rgb(234,184,4)"/><text x="25.8491%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (56 samples, 0.05%)</title><rect x="25.5991%" y="709" width="0.0514%" height="15" fill="rgb(218,194,23)"/><text x="25.8491%" y="719.50"></text></g><g><title>alloc::alloc::alloc (56 samples, 0.05%)</title><rect x="25.5991%" y="693" width="0.0514%" height="15" fill="rgb(235,66,41)"/><text x="25.8491%" y="703.50"></text></g><g><title>_rjem_mallocx (51 samples, 0.05%)</title><rect x="25.6036%" y="677" width="0.0468%" height="15" fill="rgb(245,217,1)"/><text x="25.8536%" y="687.50"></text></g><g><title>imalloc (41 samples, 0.04%)</title><rect x="25.6128%" y="661" width="0.0376%" height="15" fill="rgb(229,91,1)"/><text x="25.8628%" y="671.50"></text></g><g><title>imalloc_body (41 samples, 0.04%)</title><rect x="25.6128%" y="645" width="0.0376%" height="15" fill="rgb(207,101,30)"/><text x="25.8628%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (59 samples, 0.05%)</title><rect x="25.5991%" y="773" width="0.0541%" height="15" fill="rgb(223,82,49)"/><text x="25.8491%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (59 samples, 0.05%)</title><rect x="25.5991%" y="757" width="0.0541%" height="15" fill="rgb(218,167,17)"/><text x="25.8491%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (59 samples, 0.05%)</title><rect x="25.5991%" y="741" width="0.0541%" height="15" fill="rgb(208,103,14)"/><text x="25.8491%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (320 samples, 0.29%)</title><rect x="25.4165%" y="837" width="0.2936%" height="15" fill="rgb(238,20,8)"/><text x="25.6665%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (319 samples, 0.29%)</title><rect x="25.4174%" y="821" width="0.2926%" height="15" fill="rgb(218,80,54)"/><text x="25.6674%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (319 samples, 0.29%)</title><rect x="25.4174%" y="805" width="0.2926%" height="15" fill="rgb(240,144,17)"/><text x="25.6674%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (319 samples, 0.29%)</title><rect x="25.4174%" y="789" width="0.2926%" height="15" fill="rgb(245,27,50)"/><text x="25.6674%" y="799.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (62 samples, 0.06%)</title><rect x="25.6532%" y="773" width="0.0569%" height="15" fill="rgb(251,51,7)"/><text x="25.9032%" y="783.50"></text></g><g><title>[libc-2.31.so] (59 samples, 0.05%)</title><rect x="25.6559%" y="757" width="0.0541%" height="15" fill="rgb(245,217,29)"/><text x="25.9059%" y="767.50"></text></g><g><title>cache_bin_alloc_easy (15 samples, 0.01%)</title><rect x="25.7633%" y="517" width="0.0138%" height="15" fill="rgb(221,176,29)"/><text x="26.0133%" y="527.50"></text></g><g><title>imalloc_no_sample (33 samples, 0.03%)</title><rect x="25.7486%" y="581" width="0.0303%" height="15" fill="rgb(212,180,24)"/><text x="25.9986%" y="591.50"></text></g><g><title>iallocztm (31 samples, 0.03%)</title><rect x="25.7504%" y="565" width="0.0284%" height="15" fill="rgb(254,24,2)"/><text x="26.0004%" y="575.50"></text></g><g><title>arena_malloc (31 samples, 0.03%)</title><rect x="25.7504%" y="549" width="0.0284%" height="15" fill="rgb(230,100,2)"/><text x="26.0004%" y="559.50"></text></g><g><title>tcache_alloc_small (30 samples, 0.03%)</title><rect x="25.7513%" y="533" width="0.0275%" height="15" fill="rgb(219,142,25)"/><text x="26.0013%" y="543.50"></text></g><g><title>imalloc_body (35 samples, 0.03%)</title><rect x="25.7486%" y="597" width="0.0321%" height="15" fill="rgb(240,73,43)"/><text x="25.9986%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (65 samples, 0.06%)</title><rect x="25.7229%" y="677" width="0.0596%" height="15" fill="rgb(214,114,15)"/><text x="25.9729%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (65 samples, 0.06%)</title><rect x="25.7229%" y="661" width="0.0596%" height="15" fill="rgb(207,130,4)"/><text x="25.9729%" y="671.50"></text></g><g><title>alloc::alloc::alloc (64 samples, 0.06%)</title><rect x="25.7238%" y="645" width="0.0587%" height="15" fill="rgb(221,25,40)"/><text x="25.9738%" y="655.50"></text></g><g><title>_rjem_mallocx (58 samples, 0.05%)</title><rect x="25.7293%" y="629" width="0.0532%" height="15" fill="rgb(241,184,7)"/><text x="25.9793%" y="639.50"></text></g><g><title>imalloc (37 samples, 0.03%)</title><rect x="25.7486%" y="613" width="0.0339%" height="15" fill="rgb(235,159,4)"/><text x="25.9986%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (69 samples, 0.06%)</title><rect x="25.7220%" y="725" width="0.0633%" height="15" fill="rgb(214,87,48)"/><text x="25.9720%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (69 samples, 0.06%)</title><rect x="25.7220%" y="709" width="0.0633%" height="15" fill="rgb(246,198,24)"/><text x="25.9720%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (69 samples, 0.06%)</title><rect x="25.7220%" y="693" width="0.0633%" height="15" fill="rgb(209,66,40)"/><text x="25.9720%" y="703.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (92 samples, 0.08%)</title><rect x="25.7183%" y="821" width="0.0844%" height="15" fill="rgb(233,147,39)"/><text x="25.9683%" y="831.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (92 samples, 0.08%)</title><rect x="25.7183%" y="805" width="0.0844%" height="15" fill="rgb(231,145,52)"/><text x="25.9683%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (90 samples, 0.08%)</title><rect x="25.7202%" y="789" width="0.0826%" height="15" fill="rgb(206,20,26)"/><text x="25.9702%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (88 samples, 0.08%)</title><rect x="25.7220%" y="773" width="0.0807%" height="15" fill="rgb(238,220,4)"/><text x="25.9720%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (88 samples, 0.08%)</title><rect x="25.7220%" y="757" width="0.0807%" height="15" fill="rgb(252,195,42)"/><text x="25.9720%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (88 samples, 0.08%)</title><rect x="25.7220%" y="741" width="0.0807%" height="15" fill="rgb(209,10,6)"/><text x="25.9720%" y="751.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (19 samples, 0.02%)</title><rect x="25.7853%" y="725" width="0.0174%" height="15" fill="rgb(229,3,52)"/><text x="26.0353%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (19 samples, 0.02%)</title><rect x="25.7853%" y="709" width="0.0174%" height="15" fill="rgb(253,49,37)"/><text x="26.0353%" y="719.50"></text></g><g><title>[libc-2.31.so] (16 samples, 0.01%)</title><rect x="25.7880%" y="693" width="0.0147%" height="15" fill="rgb(240,103,49)"/><text x="26.0380%" y="703.50"></text></g><g><title>&lt;model::rho_types::GUnforgeable as core::clone::Clone&gt;::clone (130 samples, 0.12%)</title><rect x="25.8596%" y="741" width="0.1193%" height="15" fill="rgb(250,182,30)"/><text x="26.1096%" y="751.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (121 samples, 0.11%)</title><rect x="25.8679%" y="725" width="0.1110%" height="15" fill="rgb(248,8,30)"/><text x="26.1179%" y="735.50"></text></g><g><title>&lt;model::rho_types::g_unforgeable::UnfInstance as core::clone::Clone&gt;::clone (93 samples, 0.09%)</title><rect x="25.8935%" y="709" width="0.0853%" height="15" fill="rgb(237,120,30)"/><text x="26.1435%" y="719.50"></text></g><g><title>&lt;model::rho_types::GPrivate as core::clone::Clone&gt;::clone (93 samples, 0.09%)</title><rect x="25.8935%" y="693" width="0.0853%" height="15" fill="rgb(221,146,34)"/><text x="26.1435%" y="703.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::clone::Clone&gt;::clone (93 samples, 0.09%)</title><rect x="25.8935%" y="677" width="0.0853%" height="15" fill="rgb(242,55,13)"/><text x="26.1435%" y="687.50"></text></g><g><title>bytes::bytes::shared_clone (89 samples, 0.08%)</title><rect x="25.8972%" y="661" width="0.0816%" height="15" fill="rgb(242,112,31)"/><text x="26.1472%" y="671.50"></text></g><g><title>bytes::bytes::shallow_clone_arc (89 samples, 0.08%)</title><rect x="25.8972%" y="645" width="0.0816%" height="15" fill="rgb(249,192,27)"/><text x="26.1472%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (87 samples, 0.08%)</title><rect x="25.8990%" y="629" width="0.0798%" height="15" fill="rgb(208,204,44)"/><text x="26.1490%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_add (87 samples, 0.08%)</title><rect x="25.8990%" y="613" width="0.0798%" height="15" fill="rgb(208,93,54)"/><text x="26.1490%" y="623.50"></text></g><g><title>cache_bin_alloc_easy (20 samples, 0.02%)</title><rect x="26.0128%" y="533" width="0.0183%" height="15" fill="rgb(242,1,31)"/><text x="26.2628%" y="543.50"></text></g><g><title>imalloc_no_sample (33 samples, 0.03%)</title><rect x="26.0018%" y="597" width="0.0303%" height="15" fill="rgb(241,83,25)"/><text x="26.2518%" y="607.50"></text></g><g><title>iallocztm (31 samples, 0.03%)</title><rect x="26.0036%" y="581" width="0.0284%" height="15" fill="rgb(205,169,50)"/><text x="26.2536%" y="591.50"></text></g><g><title>arena_malloc (31 samples, 0.03%)</title><rect x="26.0036%" y="565" width="0.0284%" height="15" fill="rgb(239,186,37)"/><text x="26.2536%" y="575.50"></text></g><g><title>tcache_alloc_small (29 samples, 0.03%)</title><rect x="26.0055%" y="549" width="0.0266%" height="15" fill="rgb(205,221,10)"/><text x="26.2555%" y="559.50"></text></g><g><title>imalloc_body (46 samples, 0.04%)</title><rect x="26.0000%" y="613" width="0.0422%" height="15" fill="rgb(218,196,15)"/><text x="26.2500%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (71 samples, 0.07%)</title><rect x="25.9789%" y="693" width="0.0651%" height="15" fill="rgb(218,196,35)"/><text x="26.2289%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (71 samples, 0.07%)</title><rect x="25.9789%" y="677" width="0.0651%" height="15" fill="rgb(233,63,24)"/><text x="26.2289%" y="687.50"></text></g><g><title>alloc::alloc::alloc (68 samples, 0.06%)</title><rect x="25.9816%" y="661" width="0.0624%" height="15" fill="rgb(225,8,4)"/><text x="26.2316%" y="671.50"></text></g><g><title>_rjem_mallocx (62 samples, 0.06%)</title><rect x="25.9871%" y="645" width="0.0569%" height="15" fill="rgb(234,105,35)"/><text x="26.2371%" y="655.50"></text></g><g><title>imalloc (48 samples, 0.04%)</title><rect x="26.0000%" y="629" width="0.0440%" height="15" fill="rgb(236,21,32)"/><text x="26.2500%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (74 samples, 0.07%)</title><rect x="25.9789%" y="741" width="0.0679%" height="15" fill="rgb(228,109,6)"/><text x="26.2289%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (74 samples, 0.07%)</title><rect x="25.9789%" y="725" width="0.0679%" height="15" fill="rgb(229,215,31)"/><text x="26.2289%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (74 samples, 0.07%)</title><rect x="25.9789%" y="709" width="0.0679%" height="15" fill="rgb(221,52,54)"/><text x="26.2289%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (219 samples, 0.20%)</title><rect x="25.8486%" y="805" width="0.2009%" height="15" fill="rgb(252,129,43)"/><text x="26.0986%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (210 samples, 0.19%)</title><rect x="25.8568%" y="789" width="0.1927%" height="15" fill="rgb(248,183,27)"/><text x="26.1068%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (210 samples, 0.19%)</title><rect x="25.8568%" y="773" width="0.1927%" height="15" fill="rgb(250,0,22)"/><text x="26.1068%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (210 samples, 0.19%)</title><rect x="25.8568%" y="757" width="0.1927%" height="15" fill="rgb(213,166,10)"/><text x="26.1068%" y="767.50"></text></g><g><title>imalloc_no_sample (12 samples, 0.01%)</title><rect x="26.0724%" y="549" width="0.0110%" height="15" fill="rgb(207,163,36)"/><text x="26.3224%" y="559.50"></text></g><g><title>imalloc_body (17 samples, 0.02%)</title><rect x="26.0706%" y="565" width="0.0156%" height="15" fill="rgb(208,122,22)"/><text x="26.3206%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (41 samples, 0.04%)</title><rect x="26.0523%" y="645" width="0.0376%" height="15" fill="rgb(207,104,49)"/><text x="26.3023%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (41 samples, 0.04%)</title><rect x="26.0523%" y="629" width="0.0376%" height="15" fill="rgb(248,211,50)"/><text x="26.3023%" y="639.50"></text></g><g><title>alloc::alloc::alloc (41 samples, 0.04%)</title><rect x="26.0523%" y="613" width="0.0376%" height="15" fill="rgb(217,13,45)"/><text x="26.3023%" y="623.50"></text></g><g><title>_rjem_mallocx (31 samples, 0.03%)</title><rect x="26.0614%" y="597" width="0.0284%" height="15" fill="rgb(211,216,49)"/><text x="26.3114%" y="607.50"></text></g><g><title>imalloc (21 samples, 0.02%)</title><rect x="26.0706%" y="581" width="0.0193%" height="15" fill="rgb(221,58,53)"/><text x="26.3206%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (43 samples, 0.04%)</title><rect x="26.0523%" y="693" width="0.0394%" height="15" fill="rgb(220,112,41)"/><text x="26.3023%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (43 samples, 0.04%)</title><rect x="26.0523%" y="677" width="0.0394%" height="15" fill="rgb(236,38,28)"/><text x="26.3023%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (43 samples, 0.04%)</title><rect x="26.0523%" y="661" width="0.0394%" height="15" fill="rgb(227,195,22)"/><text x="26.3023%" y="671.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (322 samples, 0.30%)</title><rect x="25.8027%" y="821" width="0.2954%" height="15" fill="rgb(214,55,33)"/><text x="26.0527%" y="831.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (53 samples, 0.05%)</title><rect x="26.0495%" y="805" width="0.0486%" height="15" fill="rgb(248,80,13)"/><text x="26.2995%" y="815.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (52 samples, 0.05%)</title><rect x="26.0504%" y="789" width="0.0477%" height="15" fill="rgb(238,52,6)"/><text x="26.3004%" y="799.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (52 samples, 0.05%)</title><rect x="26.0504%" y="773" width="0.0477%" height="15" fill="rgb(224,198,47)"/><text x="26.3004%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (51 samples, 0.05%)</title><rect x="26.0513%" y="757" width="0.0468%" height="15" fill="rgb(233,171,20)"/><text x="26.3013%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (50 samples, 0.05%)</title><rect x="26.0523%" y="741" width="0.0459%" height="15" fill="rgb(241,30,25)"/><text x="26.3023%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (50 samples, 0.05%)</title><rect x="26.0523%" y="725" width="0.0459%" height="15" fill="rgb(207,171,38)"/><text x="26.3023%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (50 samples, 0.05%)</title><rect x="26.0523%" y="709" width="0.0459%" height="15" fill="rgb(234,70,1)"/><text x="26.3023%" y="719.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (491 samples, 0.45%)</title><rect x="25.7101%" y="837" width="0.4504%" height="15" fill="rgb(232,178,18)"/><text x="25.9601%" y="847.50"></text></g><g><title>[libc-2.31.so] (68 samples, 0.06%)</title><rect x="26.0981%" y="821" width="0.0624%" height="15" fill="rgb(241,78,40)"/><text x="26.3481%" y="831.50"></text></g><g><title>[libc-2.31.so] (16 samples, 0.01%)</title><rect x="26.1605%" y="837" width="0.0147%" height="15" fill="rgb(222,35,25)"/><text x="26.4105%" y="847.50"></text></g><g><title>&lt;model::rho_types::Send as core::clone::Clone&gt;::clone (839 samples, 0.77%)</title><rect x="25.4092%" y="853" width="0.7697%" height="15" fill="rgb(207,92,16)"/><text x="25.6592%" y="863.50"></text></g><g><title>imalloc_no_sample (15 samples, 0.01%)</title><rect x="26.2504%" y="709" width="0.0138%" height="15" fill="rgb(216,59,51)"/><text x="26.5004%" y="719.50"></text></g><g><title>iallocztm (13 samples, 0.01%)</title><rect x="26.2522%" y="693" width="0.0119%" height="15" fill="rgb(213,80,28)"/><text x="26.5022%" y="703.50"></text></g><g><title>arena_malloc (13 samples, 0.01%)</title><rect x="26.2522%" y="677" width="0.0119%" height="15" fill="rgb(220,93,7)"/><text x="26.5022%" y="687.50"></text></g><g><title>tcache_alloc_small (13 samples, 0.01%)</title><rect x="26.2522%" y="661" width="0.0119%" height="15" fill="rgb(225,24,44)"/><text x="26.5022%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (44 samples, 0.04%)</title><rect x="26.2266%" y="805" width="0.0404%" height="15" fill="rgb(243,74,40)"/><text x="26.4766%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (44 samples, 0.04%)</title><rect x="26.2266%" y="789" width="0.0404%" height="15" fill="rgb(228,39,7)"/><text x="26.4766%" y="799.50"></text></g><g><title>alloc::alloc::alloc (33 samples, 0.03%)</title><rect x="26.2367%" y="773" width="0.0303%" height="15" fill="rgb(227,79,8)"/><text x="26.4867%" y="783.50"></text></g><g><title>_rjem_mallocx (27 samples, 0.02%)</title><rect x="26.2422%" y="757" width="0.0248%" height="15" fill="rgb(236,58,11)"/><text x="26.4922%" y="767.50"></text></g><g><title>imalloc (21 samples, 0.02%)</title><rect x="26.2477%" y="741" width="0.0193%" height="15" fill="rgb(249,63,35)"/><text x="26.4977%" y="751.50"></text></g><g><title>imalloc_body (20 samples, 0.02%)</title><rect x="26.2486%" y="725" width="0.0183%" height="15" fill="rgb(252,114,16)"/><text x="26.4986%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (20 samples, 0.02%)</title><rect x="26.2669%" y="805" width="0.0183%" height="15" fill="rgb(254,151,24)"/><text x="26.5169%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (124 samples, 0.11%)</title><rect x="26.1798%" y="853" width="0.1138%" height="15" fill="rgb(253,54,39)"/><text x="26.4298%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (78 samples, 0.07%)</title><rect x="26.2220%" y="837" width="0.0716%" height="15" fill="rgb(243,25,45)"/><text x="26.4720%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (78 samples, 0.07%)</title><rect x="26.2220%" y="821" width="0.0716%" height="15" fill="rgb(234,134,9)"/><text x="26.4720%" y="831.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (135 samples, 0.12%)</title><rect x="26.2935%" y="853" width="0.1238%" height="15" fill="rgb(227,166,31)"/><text x="26.5435%" y="863.50"></text></g><g><title>[libc-2.31.so] (24 samples, 0.02%)</title><rect x="26.3954%" y="837" width="0.0220%" height="15" fill="rgb(245,143,41)"/><text x="26.6454%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,184 samples, 1.09%)</title><rect x="25.3358%" y="917" width="1.0862%" height="15" fill="rgb(238,181,32)"/><text x="25.5858%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,138 samples, 1.04%)</title><rect x="25.3780%" y="901" width="1.0440%" height="15" fill="rgb(224,113,18)"/><text x="25.6280%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (1,138 samples, 1.04%)</title><rect x="25.3780%" y="885" width="1.0440%" height="15" fill="rgb(240,229,28)"/><text x="25.6280%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,138 samples, 1.04%)</title><rect x="25.3780%" y="869" width="1.0440%" height="15" fill="rgb(250,185,3)"/><text x="25.6280%" y="879.50"></text></g><g><title>imalloc_no_sample (14 samples, 0.01%)</title><rect x="26.4385%" y="661" width="0.0128%" height="15" fill="rgb(212,59,25)"/><text x="26.6885%" y="671.50"></text></g><g><title>iallocztm (13 samples, 0.01%)</title><rect x="26.4394%" y="645" width="0.0119%" height="15" fill="rgb(221,87,20)"/><text x="26.6894%" y="655.50"></text></g><g><title>arena_malloc (13 samples, 0.01%)</title><rect x="26.4394%" y="629" width="0.0119%" height="15" fill="rgb(213,74,28)"/><text x="26.6894%" y="639.50"></text></g><g><title>tcache_alloc_small (13 samples, 0.01%)</title><rect x="26.4394%" y="613" width="0.0119%" height="15" fill="rgb(224,132,34)"/><text x="26.6894%" y="623.50"></text></g><g><title>imalloc_body (17 samples, 0.02%)</title><rect x="26.4376%" y="677" width="0.0156%" height="15" fill="rgb(222,101,24)"/><text x="26.6876%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (35 samples, 0.03%)</title><rect x="26.4229%" y="757" width="0.0321%" height="15" fill="rgb(254,142,4)"/><text x="26.6729%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (35 samples, 0.03%)</title><rect x="26.4229%" y="741" width="0.0321%" height="15" fill="rgb(230,229,49)"/><text x="26.6729%" y="751.50"></text></g><g><title>alloc::alloc::alloc (35 samples, 0.03%)</title><rect x="26.4229%" y="725" width="0.0321%" height="15" fill="rgb(238,70,47)"/><text x="26.6729%" y="735.50"></text></g><g><title>_rjem_mallocx (30 samples, 0.03%)</title><rect x="26.4275%" y="709" width="0.0275%" height="15" fill="rgb(231,160,17)"/><text x="26.6775%" y="719.50"></text></g><g><title>imalloc (19 samples, 0.02%)</title><rect x="26.4376%" y="693" width="0.0174%" height="15" fill="rgb(218,68,53)"/><text x="26.6876%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (37 samples, 0.03%)</title><rect x="26.4229%" y="805" width="0.0339%" height="15" fill="rgb(236,111,10)"/><text x="26.6729%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (37 samples, 0.03%)</title><rect x="26.4229%" y="789" width="0.0339%" height="15" fill="rgb(224,34,41)"/><text x="26.6729%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (37 samples, 0.03%)</title><rect x="26.4229%" y="773" width="0.0339%" height="15" fill="rgb(241,118,19)"/><text x="26.6729%" y="783.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (50 samples, 0.05%)</title><rect x="26.4220%" y="917" width="0.0459%" height="15" fill="rgb(238,129,25)"/><text x="26.6720%" y="927.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (50 samples, 0.05%)</title><rect x="26.4220%" y="901" width="0.0459%" height="15" fill="rgb(238,22,31)"/><text x="26.6720%" y="911.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (50 samples, 0.05%)</title><rect x="26.4220%" y="885" width="0.0459%" height="15" fill="rgb(222,174,48)"/><text x="26.6720%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (49 samples, 0.04%)</title><rect x="26.4229%" y="869" width="0.0450%" height="15" fill="rgb(206,152,40)"/><text x="26.6729%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (49 samples, 0.04%)</title><rect x="26.4229%" y="853" width="0.0450%" height="15" fill="rgb(218,99,54)"/><text x="26.6729%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (49 samples, 0.04%)</title><rect x="26.4229%" y="837" width="0.0450%" height="15" fill="rgb(220,174,26)"/><text x="26.6729%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (49 samples, 0.04%)</title><rect x="26.4229%" y="821" width="0.0450%" height="15" fill="rgb(245,116,9)"/><text x="26.6729%" y="831.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (12 samples, 0.01%)</title><rect x="26.4568%" y="805" width="0.0110%" height="15" fill="rgb(209,72,35)"/><text x="26.7068%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.01%)</title><rect x="26.4568%" y="789" width="0.0110%" height="15" fill="rgb(226,126,21)"/><text x="26.7068%" y="799.50"></text></g><g><title>[libc-2.31.so] (12 samples, 0.01%)</title><rect x="26.4568%" y="773" width="0.0110%" height="15" fill="rgb(227,192,1)"/><text x="26.7068%" y="783.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (1,327 samples, 1.22%)</title><rect x="25.2532%" y="933" width="1.2174%" height="15" fill="rgb(237,180,29)"/><text x="25.5032%" y="943.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,393 samples, 1.28%)</title><rect x="25.2431%" y="949" width="1.2779%" height="15" fill="rgb(230,197,35)"/><text x="25.4931%" y="959.50"></text></g><g><title>[libc-2.31.so] (55 samples, 0.05%)</title><rect x="26.4706%" y="933" width="0.0505%" height="15" fill="rgb(246,193,31)"/><text x="26.7206%" y="943.50"></text></g><g><title>&lt;model::rho_types::MatchCase as core::clone::Clone&gt;::clone (1,432 samples, 1.31%)</title><rect x="25.2293%" y="965" width="1.3137%" height="15" fill="rgb(241,36,4)"/><text x="25.4793%" y="975.50"></text></g><g><title>[libc-2.31.so] (24 samples, 0.02%)</title><rect x="26.5210%" y="949" width="0.0220%" height="15" fill="rgb(241,130,17)"/><text x="26.7710%" y="959.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (15 samples, 0.01%)</title><rect x="26.5568%" y="757" width="0.0138%" height="15" fill="rgb(206,137,32)"/><text x="26.8068%" y="767.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (15 samples, 0.01%)</title><rect x="26.5568%" y="741" width="0.0138%" height="15" fill="rgb(237,228,51)"/><text x="26.8068%" y="751.50"></text></g><g><title>imalloc_no_sample (28 samples, 0.03%)</title><rect x="26.5522%" y="821" width="0.0257%" height="15" fill="rgb(243,6,42)"/><text x="26.8022%" y="831.50"></text></g><g><title>iallocztm (27 samples, 0.02%)</title><rect x="26.5532%" y="805" width="0.0248%" height="15" fill="rgb(251,74,28)"/><text x="26.8032%" y="815.50"></text></g><g><title>arena_malloc (27 samples, 0.02%)</title><rect x="26.5532%" y="789" width="0.0248%" height="15" fill="rgb(218,20,49)"/><text x="26.8032%" y="799.50"></text></g><g><title>tcache_alloc_small (26 samples, 0.02%)</title><rect x="26.5541%" y="773" width="0.0239%" height="15" fill="rgb(238,28,14)"/><text x="26.8041%" y="783.50"></text></g><g><title>imalloc_body (31 samples, 0.03%)</title><rect x="26.5513%" y="837" width="0.0284%" height="15" fill="rgb(229,40,46)"/><text x="26.8013%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (43 samples, 0.04%)</title><rect x="26.5431%" y="965" width="0.0394%" height="15" fill="rgb(244,195,20)"/><text x="26.7931%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (43 samples, 0.04%)</title><rect x="26.5431%" y="949" width="0.0394%" height="15" fill="rgb(253,56,35)"/><text x="26.7931%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (43 samples, 0.04%)</title><rect x="26.5431%" y="933" width="0.0394%" height="15" fill="rgb(210,149,44)"/><text x="26.7931%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (43 samples, 0.04%)</title><rect x="26.5431%" y="917" width="0.0394%" height="15" fill="rgb(240,135,12)"/><text x="26.7931%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (43 samples, 0.04%)</title><rect x="26.5431%" y="901" width="0.0394%" height="15" fill="rgb(251,24,50)"/><text x="26.7931%" y="911.50"></text></g><g><title>alloc::alloc::alloc (43 samples, 0.04%)</title><rect x="26.5431%" y="885" width="0.0394%" height="15" fill="rgb(243,200,47)"/><text x="26.7931%" y="895.50"></text></g><g><title>_rjem_mallocx (41 samples, 0.04%)</title><rect x="26.5449%" y="869" width="0.0376%" height="15" fill="rgb(224,166,26)"/><text x="26.7949%" y="879.50"></text></g><g><title>imalloc (34 samples, 0.03%)</title><rect x="26.5513%" y="853" width="0.0312%" height="15" fill="rgb(233,0,47)"/><text x="26.8013%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,514 samples, 1.39%)</title><rect x="25.2238%" y="1029" width="1.3889%" height="15" fill="rgb(253,80,5)"/><text x="25.4738%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,513 samples, 1.39%)</title><rect x="25.2248%" y="1013" width="1.3880%" height="15" fill="rgb(214,133,25)"/><text x="25.4748%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (1,513 samples, 1.39%)</title><rect x="25.2248%" y="997" width="1.3880%" height="15" fill="rgb(209,27,14)"/><text x="25.4748%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,513 samples, 1.39%)</title><rect x="25.2248%" y="981" width="1.3880%" height="15" fill="rgb(219,102,51)"/><text x="25.4748%" y="991.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (33 samples, 0.03%)</title><rect x="26.5825%" y="965" width="0.0303%" height="15" fill="rgb(237,18,16)"/><text x="26.8325%" y="975.50"></text></g><g><title>[libc-2.31.so] (18 samples, 0.02%)</title><rect x="26.5963%" y="949" width="0.0165%" height="15" fill="rgb(241,85,17)"/><text x="26.8463%" y="959.50"></text></g><g><title>imalloc_no_sample (11 samples, 0.01%)</title><rect x="26.6284%" y="773" width="0.0101%" height="15" fill="rgb(236,90,42)"/><text x="26.8784%" y="783.50"></text></g><g><title>imalloc_body (12 samples, 0.01%)</title><rect x="26.6284%" y="789" width="0.0110%" height="15" fill="rgb(249,57,21)"/><text x="26.8784%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (19 samples, 0.02%)</title><rect x="26.6229%" y="869" width="0.0174%" height="15" fill="rgb(243,12,36)"/><text x="26.8729%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19 samples, 0.02%)</title><rect x="26.6229%" y="853" width="0.0174%" height="15" fill="rgb(253,128,47)"/><text x="26.8729%" y="863.50"></text></g><g><title>alloc::alloc::alloc (19 samples, 0.02%)</title><rect x="26.6229%" y="837" width="0.0174%" height="15" fill="rgb(207,33,20)"/><text x="26.8729%" y="847.50"></text></g><g><title>_rjem_mallocx (18 samples, 0.02%)</title><rect x="26.6238%" y="821" width="0.0165%" height="15" fill="rgb(233,215,35)"/><text x="26.8738%" y="831.50"></text></g><g><title>imalloc (13 samples, 0.01%)</title><rect x="26.6284%" y="805" width="0.0119%" height="15" fill="rgb(249,188,52)"/><text x="26.8784%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (23 samples, 0.02%)</title><rect x="26.6229%" y="917" width="0.0211%" height="15" fill="rgb(225,12,32)"/><text x="26.8729%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (23 samples, 0.02%)</title><rect x="26.6229%" y="901" width="0.0211%" height="15" fill="rgb(247,98,14)"/><text x="26.8729%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (23 samples, 0.02%)</title><rect x="26.6229%" y="885" width="0.0211%" height="15" fill="rgb(247,219,48)"/><text x="26.8729%" y="895.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (28 samples, 0.03%)</title><rect x="26.6201%" y="1013" width="0.0257%" height="15" fill="rgb(253,60,48)"/><text x="26.8701%" y="1023.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (28 samples, 0.03%)</title><rect x="26.6201%" y="997" width="0.0257%" height="15" fill="rgb(245,15,52)"/><text x="26.8701%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (25 samples, 0.02%)</title><rect x="26.6229%" y="981" width="0.0229%" height="15" fill="rgb(220,133,28)"/><text x="26.8729%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (25 samples, 0.02%)</title><rect x="26.6229%" y="965" width="0.0229%" height="15" fill="rgb(217,180,4)"/><text x="26.8729%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (25 samples, 0.02%)</title><rect x="26.6229%" y="949" width="0.0229%" height="15" fill="rgb(251,24,1)"/><text x="26.8729%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (25 samples, 0.02%)</title><rect x="26.6229%" y="933" width="0.0229%" height="15" fill="rgb(212,185,49)"/><text x="26.8729%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (48 samples, 0.04%)</title><rect x="26.6532%" y="997" width="0.0440%" height="15" fill="rgb(215,175,22)"/><text x="26.9032%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (33 samples, 0.03%)</title><rect x="26.6669%" y="981" width="0.0303%" height="15" fill="rgb(250,205,14)"/><text x="26.9169%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (33 samples, 0.03%)</title><rect x="26.6669%" y="965" width="0.0303%" height="15" fill="rgb(225,211,22)"/><text x="26.9169%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (33 samples, 0.03%)</title><rect x="26.6669%" y="949" width="0.0303%" height="15" fill="rgb(251,179,42)"/><text x="26.9169%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (25 samples, 0.02%)</title><rect x="26.6743%" y="933" width="0.0229%" height="15" fill="rgb(208,216,51)"/><text x="26.9243%" y="943.50"></text></g><g><title>imalloc_body (16 samples, 0.01%)</title><rect x="26.7275%" y="757" width="0.0147%" height="15" fill="rgb(235,36,11)"/><text x="26.9775%" y="767.50"></text></g><g><title>imalloc_no_sample (16 samples, 0.01%)</title><rect x="26.7275%" y="741" width="0.0147%" height="15" fill="rgb(213,189,28)"/><text x="26.9775%" y="751.50"></text></g><g><title>iallocztm (13 samples, 0.01%)</title><rect x="26.7302%" y="725" width="0.0119%" height="15" fill="rgb(227,203,42)"/><text x="26.9802%" y="735.50"></text></g><g><title>arena_malloc (13 samples, 0.01%)</title><rect x="26.7302%" y="709" width="0.0119%" height="15" fill="rgb(244,72,36)"/><text x="26.9802%" y="719.50"></text></g><g><title>tcache_alloc_small (12 samples, 0.01%)</title><rect x="26.7311%" y="693" width="0.0110%" height="15" fill="rgb(213,53,17)"/><text x="26.9811%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (45 samples, 0.04%)</title><rect x="26.7036%" y="837" width="0.0413%" height="15" fill="rgb(207,167,3)"/><text x="26.9536%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (45 samples, 0.04%)</title><rect x="26.7036%" y="821" width="0.0413%" height="15" fill="rgb(216,98,30)"/><text x="26.9536%" y="831.50"></text></g><g><title>alloc::alloc::alloc (45 samples, 0.04%)</title><rect x="26.7036%" y="805" width="0.0413%" height="15" fill="rgb(236,123,15)"/><text x="26.9536%" y="815.50"></text></g><g><title>_rjem_mallocx (43 samples, 0.04%)</title><rect x="26.7054%" y="789" width="0.0394%" height="15" fill="rgb(248,81,50)"/><text x="26.9554%" y="799.50"></text></g><g><title>imalloc (19 samples, 0.02%)</title><rect x="26.7275%" y="773" width="0.0174%" height="15" fill="rgb(214,120,4)"/><text x="26.9775%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (51 samples, 0.05%)</title><rect x="26.6990%" y="885" width="0.0468%" height="15" fill="rgb(208,179,34)"/><text x="26.9490%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (51 samples, 0.05%)</title><rect x="26.6990%" y="869" width="0.0468%" height="15" fill="rgb(227,140,7)"/><text x="26.9490%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (51 samples, 0.05%)</title><rect x="26.6990%" y="853" width="0.0468%" height="15" fill="rgb(214,22,6)"/><text x="26.9490%" y="863.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (116 samples, 0.11%)</title><rect x="26.6458%" y="1013" width="0.1064%" height="15" fill="rgb(207,137,27)"/><text x="26.8958%" y="1023.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (60 samples, 0.06%)</title><rect x="26.6972%" y="997" width="0.0550%" height="15" fill="rgb(210,8,46)"/><text x="26.9472%" y="1007.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (60 samples, 0.06%)</title><rect x="26.6972%" y="981" width="0.0550%" height="15" fill="rgb(240,16,54)"/><text x="26.9472%" y="991.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (60 samples, 0.06%)</title><rect x="26.6972%" y="965" width="0.0550%" height="15" fill="rgb(211,209,29)"/><text x="26.9472%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (59 samples, 0.05%)</title><rect x="26.6981%" y="949" width="0.0541%" height="15" fill="rgb(226,228,24)"/><text x="26.9481%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (58 samples, 0.05%)</title><rect x="26.6990%" y="933" width="0.0532%" height="15" fill="rgb(222,84,9)"/><text x="26.9490%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (58 samples, 0.05%)</title><rect x="26.6990%" y="917" width="0.0532%" height="15" fill="rgb(234,203,30)"/><text x="26.9490%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (58 samples, 0.05%)</title><rect x="26.6990%" y="901" width="0.0532%" height="15" fill="rgb(238,109,14)"/><text x="26.9490%" y="911.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (228 samples, 0.21%)</title><rect x="26.6128%" y="1029" width="0.2092%" height="15" fill="rgb(233,206,34)"/><text x="26.8628%" y="1039.50"></text></g><g><title>[libc-2.31.so] (76 samples, 0.07%)</title><rect x="26.7522%" y="1013" width="0.0697%" height="15" fill="rgb(220,167,47)"/><text x="27.0022%" y="1023.50"></text></g><g><title>&lt;model::rho_types::Match as core::clone::Clone&gt;::clone (1,753 samples, 1.61%)</title><rect x="25.2229%" y="1045" width="1.6082%" height="15" fill="rgb(238,105,10)"/><text x="25.4729%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (19 samples, 0.02%)</title><rect x="26.8504%" y="997" width="0.0174%" height="15" fill="rgb(213,227,17)"/><text x="27.1004%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19 samples, 0.02%)</title><rect x="26.8504%" y="981" width="0.0174%" height="15" fill="rgb(217,132,38)"/><text x="27.1004%" y="991.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.02%)</title><rect x="26.8513%" y="965" width="0.0165%" height="15" fill="rgb(242,146,4)"/><text x="27.1013%" y="975.50"></text></g><g><title>_rjem_mallocx (15 samples, 0.01%)</title><rect x="26.8541%" y="949" width="0.0138%" height="15" fill="rgb(212,61,9)"/><text x="27.1041%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (46 samples, 0.04%)</title><rect x="26.8375%" y="1045" width="0.0422%" height="15" fill="rgb(247,126,22)"/><text x="27.0875%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (33 samples, 0.03%)</title><rect x="26.8495%" y="1029" width="0.0303%" height="15" fill="rgb(220,196,2)"/><text x="27.0995%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (33 samples, 0.03%)</title><rect x="26.8495%" y="1013" width="0.0303%" height="15" fill="rgb(208,46,4)"/><text x="27.0995%" y="1023.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (34 samples, 0.03%)</title><rect x="26.8797%" y="1045" width="0.0312%" height="15" fill="rgb(252,104,46)"/><text x="27.1297%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,871 samples, 1.72%)</title><rect x="25.1982%" y="1109" width="1.7165%" height="15" fill="rgb(237,152,48)"/><text x="25.4482%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,852 samples, 1.70%)</title><rect x="25.2156%" y="1093" width="1.6990%" height="15" fill="rgb(221,59,37)"/><text x="25.4656%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (1,851 samples, 1.70%)</title><rect x="25.2165%" y="1077" width="1.6981%" height="15" fill="rgb(209,202,51)"/><text x="25.4665%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,851 samples, 1.70%)</title><rect x="25.2165%" y="1061" width="1.6981%" height="15" fill="rgb(228,81,30)"/><text x="25.4665%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (32 samples, 0.03%)</title><rect x="26.9164%" y="997" width="0.0294%" height="15" fill="rgb(227,42,39)"/><text x="27.1664%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (32 samples, 0.03%)</title><rect x="26.9164%" y="981" width="0.0294%" height="15" fill="rgb(221,26,2)"/><text x="27.1664%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (31 samples, 0.03%)</title><rect x="26.9174%" y="965" width="0.0284%" height="15" fill="rgb(254,61,31)"/><text x="27.1674%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (30 samples, 0.03%)</title><rect x="26.9183%" y="949" width="0.0275%" height="15" fill="rgb(222,173,38)"/><text x="27.1683%" y="959.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (30 samples, 0.03%)</title><rect x="26.9183%" y="933" width="0.0275%" height="15" fill="rgb(218,50,12)"/><text x="27.1683%" y="943.50"></text></g><g><title>alloc::alloc::alloc (30 samples, 0.03%)</title><rect x="26.9183%" y="917" width="0.0275%" height="15" fill="rgb(223,88,40)"/><text x="27.1683%" y="927.50"></text></g><g><title>_rjem_mallocx (28 samples, 0.03%)</title><rect x="26.9201%" y="901" width="0.0257%" height="15" fill="rgb(237,54,19)"/><text x="27.1701%" y="911.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,928 samples, 1.77%)</title><rect x="25.1835%" y="1141" width="1.7687%" height="15" fill="rgb(251,129,25)"/><text x="25.4335%" y="1151.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (1,924 samples, 1.77%)</title><rect x="25.1871%" y="1125" width="1.7651%" height="15" fill="rgb(238,97,19)"/><text x="25.4371%" y="1135.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (41 samples, 0.04%)</title><rect x="26.9146%" y="1109" width="0.0376%" height="15" fill="rgb(240,169,18)"/><text x="27.1646%" y="1119.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (41 samples, 0.04%)</title><rect x="26.9146%" y="1093" width="0.0376%" height="15" fill="rgb(230,187,49)"/><text x="27.1646%" y="1103.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (41 samples, 0.04%)</title><rect x="26.9146%" y="1077" width="0.0376%" height="15" fill="rgb(209,44,26)"/><text x="27.1646%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (39 samples, 0.04%)</title><rect x="26.9164%" y="1061" width="0.0358%" height="15" fill="rgb(244,0,6)"/><text x="27.1664%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (39 samples, 0.04%)</title><rect x="26.9164%" y="1045" width="0.0358%" height="15" fill="rgb(248,18,21)"/><text x="27.1664%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (39 samples, 0.04%)</title><rect x="26.9164%" y="1029" width="0.0358%" height="15" fill="rgb(245,180,19)"/><text x="27.1664%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (39 samples, 0.04%)</title><rect x="26.9164%" y="1013" width="0.0358%" height="15" fill="rgb(252,118,36)"/><text x="27.1664%" y="1023.50"></text></g><g><title>&lt;model::rho_types::ParWithRandom as core::clone::Clone&gt;::clone (1,952 samples, 1.79%)</title><rect x="25.1780%" y="1157" width="1.7908%" height="15" fill="rgb(210,224,19)"/><text x="25.4280%" y="1167.50">&lt;..</text></g><g><title>[libc-2.31.so] (18 samples, 0.02%)</title><rect x="26.9522%" y="1141" width="0.0165%" height="15" fill="rgb(218,30,24)"/><text x="27.2022%" y="1151.50"></text></g><g><title>&lt;rho_runtime::storage::TaggedContinuation as core::clone::Clone&gt;::clone (1,974 samples, 1.81%)</title><rect x="25.1752%" y="1173" width="1.8109%" height="15" fill="rgb(219,75,50)"/><text x="25.4252%" y="1183.50">&lt;..</text></g><g><title>[libc-2.31.so] (19 samples, 0.02%)</title><rect x="26.9687%" y="1157" width="0.0174%" height="15" fill="rgb(234,72,50)"/><text x="27.2187%" y="1167.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (25 samples, 0.02%)</title><rect x="26.9862%" y="1173" width="0.0229%" height="15" fill="rgb(219,100,48)"/><text x="27.2362%" y="1183.50"></text></g><g><title>[libc-2.31.so] (16 samples, 0.01%)</title><rect x="26.9944%" y="1157" width="0.0147%" height="15" fill="rgb(253,5,41)"/><text x="27.2444%" y="1167.50"></text></g><g><title>[libc-2.31.so] (104 samples, 0.10%)</title><rect x="27.0109%" y="1173" width="0.0954%" height="15" fill="rgb(247,181,11)"/><text x="27.2609%" y="1183.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="27.1348%" y="1109" width="0.0110%" height="15" fill="rgb(222,223,25)"/><text x="27.3848%" y="1119.50"></text></g><g><title>hashbrown::map::make_hash (14 samples, 0.01%)</title><rect x="27.1843%" y="1013" width="0.0128%" height="15" fill="rgb(214,198,28)"/><text x="27.4343%" y="1023.50"></text></g><g><title>&lt;blake3::Hash as core::hash::Hash&gt;::hash (12 samples, 0.01%)</title><rect x="27.1862%" y="997" width="0.0110%" height="15" fill="rgb(230,46,43)"/><text x="27.4362%" y="1007.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (12 samples, 0.01%)</title><rect x="27.1862%" y="981" width="0.0110%" height="15" fill="rgb(233,65,53)"/><text x="27.4362%" y="991.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (12 samples, 0.01%)</title><rect x="27.1862%" y="965" width="0.0110%" height="15" fill="rgb(221,121,27)"/><text x="27.4362%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value::{{closure}} (13 samples, 0.01%)</title><rect x="27.2082%" y="997" width="0.0119%" height="15" fill="rgb(247,70,47)"/><text x="27.4582%" y="1007.50"></text></g><g><title>&lt;blake3::Hash as core::cmp::PartialEq&gt;::eq (13 samples, 0.01%)</title><rect x="27.2082%" y="981" width="0.0119%" height="15" fill="rgb(228,85,35)"/><text x="27.4582%" y="991.50"></text></g><g><title>constant_time_eq::constant_time_eq_32 (13 samples, 0.01%)</title><rect x="27.2082%" y="965" width="0.0119%" height="15" fill="rgb(209,50,18)"/><text x="27.4582%" y="975.50"></text></g><g><title>constant_time_eq::constant_time_ne_32 (12 samples, 0.01%)</title><rect x="27.2091%" y="949" width="0.0110%" height="15" fill="rgb(250,19,35)"/><text x="27.4591%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (101 samples, 0.09%)</title><rect x="27.1329%" y="1125" width="0.0927%" height="15" fill="rgb(253,107,29)"/><text x="27.3829%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (87 samples, 0.08%)</title><rect x="27.1458%" y="1109" width="0.0798%" height="15" fill="rgb(252,179,29)"/><text x="27.3958%" y="1119.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (86 samples, 0.08%)</title><rect x="27.1467%" y="1093" width="0.0789%" height="15" fill="rgb(238,194,6)"/><text x="27.3967%" y="1103.50"></text></g><g><title>rho_runtime::storage::transit::Transit::join::{{closure}} (80 samples, 0.07%)</title><rect x="27.1522%" y="1077" width="0.0734%" height="15" fill="rgb(238,164,29)"/><text x="27.4022%" y="1087.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (45 samples, 0.04%)</title><rect x="27.1843%" y="1061" width="0.0413%" height="15" fill="rgb(224,25,9)"/><text x="27.4343%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (45 samples, 0.04%)</title><rect x="27.1843%" y="1045" width="0.0413%" height="15" fill="rgb(244,153,23)"/><text x="27.4343%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (45 samples, 0.04%)</title><rect x="27.1843%" y="1029" width="0.0413%" height="15" fill="rgb(212,203,14)"/><text x="27.4343%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (31 samples, 0.03%)</title><rect x="27.1972%" y="1013" width="0.0284%" height="15" fill="rgb(220,164,20)"/><text x="27.4472%" y="1023.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.01%)</title><rect x="27.2293%" y="1125" width="0.0101%" height="15" fill="rgb(222,203,48)"/><text x="27.4793%" y="1135.50"></text></g><g><title>core::ptr::write (17 samples, 0.02%)</title><rect x="27.2430%" y="1125" width="0.0156%" height="15" fill="rgb(215,159,22)"/><text x="27.4930%" y="1135.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (156 samples, 0.14%)</title><rect x="27.1219%" y="1141" width="0.1431%" height="15" fill="rgb(216,183,47)"/><text x="27.3719%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (174 samples, 0.16%)</title><rect x="27.1164%" y="1173" width="0.1596%" height="15" fill="rgb(229,195,25)"/><text x="27.3664%" y="1183.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (174 samples, 0.16%)</title><rect x="27.1164%" y="1157" width="0.1596%" height="15" fill="rgb(224,132,51)"/><text x="27.3664%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rho_runtime::storage::transit::SharedJoinedConsumer&gt;&gt; (30 samples, 0.03%)</title><rect x="27.2779%" y="1173" width="0.0275%" height="15" fill="rgb(240,63,7)"/><text x="27.5279%" y="1183.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="27.2779%" y="1157" width="0.0275%" height="15" fill="rgb(249,182,41)"/><text x="27.5279%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (27 samples, 0.02%)</title><rect x="27.2807%" y="1141" width="0.0248%" height="15" fill="rgb(243,47,26)"/><text x="27.5307%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_sub (27 samples, 0.02%)</title><rect x="27.2807%" y="1125" width="0.0248%" height="15" fill="rgb(233,48,2)"/><text x="27.5307%" y="1135.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (40 samples, 0.04%)</title><rect x="27.3614%" y="1157" width="0.0367%" height="15" fill="rgb(244,165,34)"/><text x="27.6114%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (39 samples, 0.04%)</title><rect x="27.3623%" y="1141" width="0.0358%" height="15" fill="rgb(207,89,7)"/><text x="27.6123%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_add (39 samples, 0.04%)</title><rect x="27.3623%" y="1125" width="0.0358%" height="15" fill="rgb(244,117,36)"/><text x="27.6123%" y="1135.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (29 samples, 0.03%)</title><rect x="27.4155%" y="965" width="0.0266%" height="15" fill="rgb(226,144,34)"/><text x="27.6655%" y="975.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write (29 samples, 0.03%)</title><rect x="27.4155%" y="949" width="0.0266%" height="15" fill="rgb(213,23,19)"/><text x="27.6655%" y="959.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (20 samples, 0.02%)</title><rect x="27.4238%" y="933" width="0.0183%" height="15" fill="rgb(217,75,12)"/><text x="27.6738%" y="943.50"></text></g><g><title>hashbrown::map::make_hash (32 samples, 0.03%)</title><rect x="27.4155%" y="1029" width="0.0294%" height="15" fill="rgb(224,159,17)"/><text x="27.6655%" y="1039.50"></text></g><g><title>&lt;blake3::Hash as core::hash::Hash&gt;::hash (32 samples, 0.03%)</title><rect x="27.4155%" y="1013" width="0.0294%" height="15" fill="rgb(217,118,1)"/><text x="27.6655%" y="1023.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (32 samples, 0.03%)</title><rect x="27.4155%" y="997" width="0.0294%" height="15" fill="rgb(232,180,48)"/><text x="27.6655%" y="1007.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (32 samples, 0.03%)</title><rect x="27.4155%" y="981" width="0.0294%" height="15" fill="rgb(230,27,33)"/><text x="27.6655%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value::{{closure}} (21 samples, 0.02%)</title><rect x="27.4577%" y="1013" width="0.0193%" height="15" fill="rgb(205,31,21)"/><text x="27.7077%" y="1023.50"></text></g><g><title>&lt;blake3::Hash as core::cmp::PartialEq&gt;::eq (21 samples, 0.02%)</title><rect x="27.4577%" y="997" width="0.0193%" height="15" fill="rgb(253,59,4)"/><text x="27.7077%" y="1007.50"></text></g><g><title>constant_time_eq::constant_time_eq_32 (21 samples, 0.02%)</title><rect x="27.4577%" y="981" width="0.0193%" height="15" fill="rgb(224,201,9)"/><text x="27.7077%" y="991.50"></text></g><g><title>constant_time_eq::constant_time_ne_32 (19 samples, 0.02%)</title><rect x="27.4595%" y="965" width="0.0174%" height="15" fill="rgb(229,206,30)"/><text x="27.7095%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (84 samples, 0.08%)</title><rect x="27.4063%" y="1157" width="0.0771%" height="15" fill="rgb(212,67,47)"/><text x="27.6563%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (84 samples, 0.08%)</title><rect x="27.4063%" y="1141" width="0.0771%" height="15" fill="rgb(211,96,50)"/><text x="27.6563%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (74 samples, 0.07%)</title><rect x="27.4155%" y="1125" width="0.0679%" height="15" fill="rgb(252,114,18)"/><text x="27.6655%" y="1135.50"></text></g><g><title>rho_runtime::storage::transit::Transit::match_one::{{closure}} (74 samples, 0.07%)</title><rect x="27.4155%" y="1109" width="0.0679%" height="15" fill="rgb(223,58,37)"/><text x="27.6655%" y="1119.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (74 samples, 0.07%)</title><rect x="27.4155%" y="1093" width="0.0679%" height="15" fill="rgb(237,70,4)"/><text x="27.6655%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::contains_key (74 samples, 0.07%)</title><rect x="27.4155%" y="1077" width="0.0679%" height="15" fill="rgb(244,85,46)"/><text x="27.6655%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get (74 samples, 0.07%)</title><rect x="27.4155%" y="1061" width="0.0679%" height="15" fill="rgb(223,39,52)"/><text x="27.6655%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::get_key_value (74 samples, 0.07%)</title><rect x="27.4155%" y="1045" width="0.0679%" height="15" fill="rgb(218,200,14)"/><text x="27.6655%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (42 samples, 0.04%)</title><rect x="27.4449%" y="1029" width="0.0385%" height="15" fill="rgb(208,171,16)"/><text x="27.6949%" y="1039.50"></text></g><g><title>core::mem::replace (14 samples, 0.01%)</title><rect x="27.4834%" y="1157" width="0.0128%" height="15" fill="rgb(234,200,18)"/><text x="27.7334%" y="1167.50"></text></g><g><title>core::mem::swap (14 samples, 0.01%)</title><rect x="27.4834%" y="1141" width="0.0128%" height="15" fill="rgb(228,45,11)"/><text x="27.7334%" y="1151.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (14 samples, 0.01%)</title><rect x="27.4834%" y="1125" width="0.0128%" height="15" fill="rgb(237,182,11)"/><text x="27.7334%" y="1135.50"></text></g><g><title>core::ptr::swap_nonoverlapping (14 samples, 0.01%)</title><rect x="27.4834%" y="1109" width="0.0128%" height="15" fill="rgb(241,175,49)"/><text x="27.7334%" y="1119.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (14 samples, 0.01%)</title><rect x="27.4834%" y="1093" width="0.0128%" height="15" fill="rgb(247,38,35)"/><text x="27.7334%" y="1103.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.01%)</title><rect x="27.4834%" y="1077" width="0.0128%" height="15" fill="rgb(228,39,49)"/><text x="27.7334%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;*const rho_runtime::storage::transit::SharedJoinedConsumer,smallvec::SmallVec&lt;[[usize: 2]: 3]&gt;,core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;&gt; (37 samples, 0.03%)</title><rect x="27.4962%" y="1157" width="0.0339%" height="15" fill="rgb(226,101,26)"/><text x="27.7462%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;*const rho_runtime::storage::transit::SharedJoinedConsumer,smallvec::SmallVec&lt;[[usize: 2]: 3]&gt;,core::hash::BuildHasherDefault&lt;rustc_hash::FxHasher&gt;&gt;&gt; (37 samples, 0.03%)</title><rect x="27.4962%" y="1141" width="0.0339%" height="15" fill="rgb(206,141,19)"/><text x="27.7462%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(*const rho_runtime::storage::transit::SharedJoinedConsumer,smallvec::SmallVec&lt;[[usize: 2]: 3]&gt;)&gt;&gt; (37 samples, 0.03%)</title><rect x="27.4962%" y="1125" width="0.0339%" height="15" fill="rgb(211,200,13)"/><text x="27.7462%" y="1135.50"></text></g><g><title>_rjem_sdallocx (19 samples, 0.02%)</title><rect x="27.5128%" y="1109" width="0.0174%" height="15" fill="rgb(241,121,6)"/><text x="27.7628%" y="1119.50"></text></g><g><title>isfree (13 samples, 0.01%)</title><rect x="27.5183%" y="1093" width="0.0119%" height="15" fill="rgb(234,221,29)"/><text x="27.7683%" y="1103.50"></text></g><g><title>isdalloct (13 samples, 0.01%)</title><rect x="27.5183%" y="1077" width="0.0119%" height="15" fill="rgb(229,136,5)"/><text x="27.7683%" y="1087.50"></text></g><g><title>arena_sdalloc (13 samples, 0.01%)</title><rect x="27.5183%" y="1061" width="0.0119%" height="15" fill="rgb(238,36,11)"/><text x="27.7683%" y="1071.50"></text></g><g><title>tcache_dalloc_small (11 samples, 0.01%)</title><rect x="27.5201%" y="1045" width="0.0101%" height="15" fill="rgb(251,55,41)"/><text x="27.7701%" y="1055.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (11 samples, 0.01%)</title><rect x="27.5843%" y="901" width="0.0101%" height="15" fill="rgb(242,34,40)"/><text x="27.8343%" y="911.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (11 samples, 0.01%)</title><rect x="27.5843%" y="885" width="0.0101%" height="15" fill="rgb(215,42,17)"/><text x="27.8343%" y="895.50"></text></g><g><title>imalloc_no_sample (32 samples, 0.03%)</title><rect x="27.5825%" y="965" width="0.0294%" height="15" fill="rgb(207,44,46)"/><text x="27.8325%" y="975.50"></text></g><g><title>iallocztm (32 samples, 0.03%)</title><rect x="27.5825%" y="949" width="0.0294%" height="15" fill="rgb(211,206,28)"/><text x="27.8325%" y="959.50"></text></g><g><title>arena_malloc (32 samples, 0.03%)</title><rect x="27.5825%" y="933" width="0.0294%" height="15" fill="rgb(237,167,16)"/><text x="27.8325%" y="943.50"></text></g><g><title>tcache_alloc_small (32 samples, 0.03%)</title><rect x="27.5825%" y="917" width="0.0294%" height="15" fill="rgb(233,66,6)"/><text x="27.8325%" y="927.50"></text></g><g><title>cache_bin_alloc_easy (16 samples, 0.01%)</title><rect x="27.5972%" y="901" width="0.0147%" height="15" fill="rgb(246,123,29)"/><text x="27.8472%" y="911.50"></text></g><g><title>imalloc_body (42 samples, 0.04%)</title><rect x="27.5825%" y="981" width="0.0385%" height="15" fill="rgb(209,62,40)"/><text x="27.8325%" y="991.50"></text></g><g><title>alloc::alloc::alloc (54 samples, 0.05%)</title><rect x="27.5724%" y="1029" width="0.0495%" height="15" fill="rgb(218,4,25)"/><text x="27.8224%" y="1039.50"></text></g><g><title>_rjem_mallocx (48 samples, 0.04%)</title><rect x="27.5779%" y="1013" width="0.0440%" height="15" fill="rgb(253,91,49)"/><text x="27.8279%" y="1023.50"></text></g><g><title>imalloc (46 samples, 0.04%)</title><rect x="27.5797%" y="997" width="0.0422%" height="15" fill="rgb(228,155,29)"/><text x="27.8297%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::new_uninitialized (58 samples, 0.05%)</title><rect x="27.5715%" y="1045" width="0.0532%" height="15" fill="rgb(243,57,37)"/><text x="27.8215%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::reserve (83 samples, 0.08%)</title><rect x="27.5494%" y="1125" width="0.0761%" height="15" fill="rgb(244,167,17)"/><text x="27.7994%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve (82 samples, 0.08%)</title><rect x="27.5504%" y="1109" width="0.0752%" height="15" fill="rgb(207,181,38)"/><text x="27.8004%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::reserve_rehash (79 samples, 0.07%)</title><rect x="27.5531%" y="1093" width="0.0725%" height="15" fill="rgb(211,8,23)"/><text x="27.8031%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::resize (77 samples, 0.07%)</title><rect x="27.5550%" y="1077" width="0.0706%" height="15" fill="rgb(235,11,44)"/><text x="27.8050%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::fallible_with_capacity (70 samples, 0.06%)</title><rect x="27.5614%" y="1061" width="0.0642%" height="15" fill="rgb(248,18,52)"/><text x="27.8114%" y="1071.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (97 samples, 0.09%)</title><rect x="27.5494%" y="1157" width="0.0890%" height="15" fill="rgb(208,4,7)"/><text x="27.7994%" y="1167.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry (97 samples, 0.09%)</title><rect x="27.5494%" y="1141" width="0.0890%" height="15" fill="rgb(240,17,39)"/><text x="27.7994%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::find (13 samples, 0.01%)</title><rect x="27.6265%" y="1125" width="0.0119%" height="15" fill="rgb(207,170,3)"/><text x="27.8765%" y="1135.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (11 samples, 0.01%)</title><rect x="27.6384%" y="1157" width="0.0101%" height="15" fill="rgb(236,100,52)"/><text x="27.8884%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::iter (11 samples, 0.01%)</title><rect x="27.6384%" y="1141" width="0.0101%" height="15" fill="rgb(246,78,51)"/><text x="27.8884%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::iter (11 samples, 0.01%)</title><rect x="27.6384%" y="1125" width="0.0101%" height="15" fill="rgb(211,17,15)"/><text x="27.8884%" y="1135.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::len (11 samples, 0.01%)</title><rect x="27.6485%" y="1157" width="0.0101%" height="15" fill="rgb(209,59,46)"/><text x="27.8985%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::len (11 samples, 0.01%)</title><rect x="27.6485%" y="1141" width="0.0101%" height="15" fill="rgb(210,92,25)"/><text x="27.8985%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::len (11 samples, 0.01%)</title><rect x="27.6485%" y="1125" width="0.0101%" height="15" fill="rgb(238,174,52)"/><text x="27.8985%" y="1135.50"></text></g><g><title>rho_runtime::storage::transit::Transit::match_one (390 samples, 0.36%)</title><rect x="27.3082%" y="1173" width="0.3578%" height="15" fill="rgb(230,73,7)"/><text x="27.5582%" y="1183.50"></text></g><g><title>core::ptr::write (13 samples, 0.01%)</title><rect x="27.6660%" y="1157" width="0.0119%" height="15" fill="rgb(243,124,40)"/><text x="27.9160%" y="1167.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.01%)</title><rect x="27.6678%" y="1141" width="0.0101%" height="15" fill="rgb(244,170,11)"/><text x="27.9178%" y="1151.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::push (14 samples, 0.01%)</title><rect x="27.6660%" y="1173" width="0.0128%" height="15" fill="rgb(207,114,54)"/><text x="27.9160%" y="1183.50"></text></g><g><title>[libc-2.31.so] (117 samples, 0.11%)</title><rect x="27.7008%" y="1125" width="0.1073%" height="15" fill="rgb(205,42,20)"/><text x="27.9508%" y="1135.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (170 samples, 0.16%)</title><rect x="27.7008%" y="1157" width="0.1560%" height="15" fill="rgb(230,30,28)"/><text x="27.9508%" y="1167.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send::{{closure}} (170 samples, 0.16%)</title><rect x="27.7008%" y="1141" width="0.1560%" height="15" fill="rgb(205,73,54)"/><text x="27.9508%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;&gt;&gt; (53 samples, 0.05%)</title><rect x="27.8082%" y="1125" width="0.0486%" height="15" fill="rgb(254,227,23)"/><text x="28.0582%" y="1135.50"></text></g><g><title>tokio::sync::oneshot::State::set_complete (261 samples, 0.24%)</title><rect x="27.8577%" y="1141" width="0.2394%" height="15" fill="rgb(228,202,34)"/><text x="28.1077%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (260 samples, 0.24%)</title><rect x="27.8586%" y="1125" width="0.2385%" height="15" fill="rgb(222,225,37)"/><text x="28.1086%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_or (260 samples, 0.24%)</title><rect x="27.8586%" y="1109" width="0.2385%" height="15" fill="rgb(221,14,54)"/><text x="28.1086%" y="1119.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (39 samples, 0.04%)</title><rect x="28.1026%" y="1061" width="0.0358%" height="15" fill="rgb(254,102,2)"/><text x="28.3526%" y="1071.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_ref (39 samples, 0.04%)</title><rect x="28.1026%" y="1045" width="0.0358%" height="15" fill="rgb(232,104,17)"/><text x="28.3526%" y="1055.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified (38 samples, 0.03%)</title><rect x="28.1036%" y="1029" width="0.0349%" height="15" fill="rgb(250,220,14)"/><text x="28.3536%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (38 samples, 0.03%)</title><rect x="28.1036%" y="1013" width="0.0349%" height="15" fill="rgb(241,158,9)"/><text x="28.3536%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_or (38 samples, 0.03%)</title><rect x="28.1036%" y="997" width="0.0349%" height="15" fill="rgb(246,9,43)"/><text x="28.3536%" y="1007.50"></text></g><g><title>rho_runtime::storage::transit::Transit::join (3,275 samples, 3.00%)</title><rect x="25.1523%" y="1189" width="3.0045%" height="15" fill="rgb(206,73,33)"/><text x="25.4023%" y="1199.50">rho..</text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (521 samples, 0.48%)</title><rect x="27.6788%" y="1173" width="0.4780%" height="15" fill="rgb(222,79,8)"/><text x="27.9288%" y="1183.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::complete (327 samples, 0.30%)</title><rect x="27.8568%" y="1157" width="0.3000%" height="15" fill="rgb(234,8,54)"/><text x="28.1068%" y="1167.50"></text></g><g><title>tokio::sync::oneshot::Task::with_task (65 samples, 0.06%)</title><rect x="28.0971%" y="1141" width="0.0596%" height="15" fill="rgb(209,134,38)"/><text x="28.3471%" y="1151.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (65 samples, 0.06%)</title><rect x="28.0971%" y="1125" width="0.0596%" height="15" fill="rgb(230,127,29)"/><text x="28.3471%" y="1135.50"></text></g><g><title>tokio::sync::oneshot::Task::with_task::{{closure}} (65 samples, 0.06%)</title><rect x="28.0971%" y="1109" width="0.0596%" height="15" fill="rgb(242,44,41)"/><text x="28.3471%" y="1119.50"></text></g><g><title>core::ops::function::FnOnce::call_once (65 samples, 0.06%)</title><rect x="28.0971%" y="1093" width="0.0596%" height="15" fill="rgb(222,56,43)"/><text x="28.3471%" y="1103.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (65 samples, 0.06%)</title><rect x="28.0971%" y="1077" width="0.0596%" height="15" fill="rgb(238,39,47)"/><text x="28.3471%" y="1087.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::schedule (20 samples, 0.02%)</title><rect x="28.1384%" y="1061" width="0.0183%" height="15" fill="rgb(226,79,43)"/><text x="28.3884%" y="1071.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (17 samples, 0.02%)</title><rect x="28.1412%" y="1045" width="0.0156%" height="15" fill="rgb(242,105,53)"/><text x="28.3912%" y="1055.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (17 samples, 0.02%)</title><rect x="28.1412%" y="1029" width="0.0156%" height="15" fill="rgb(251,132,46)"/><text x="28.3912%" y="1039.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (15 samples, 0.01%)</title><rect x="28.1430%" y="1013" width="0.0138%" height="15" fill="rgb(231,77,14)"/><text x="28.3930%" y="1023.50"></text></g><g><title>[libc-2.31.so] (256 samples, 0.23%)</title><rect x="28.1889%" y="1141" width="0.2349%" height="15" fill="rgb(240,135,9)"/><text x="28.4389%" y="1151.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (364 samples, 0.33%)</title><rect x="28.1880%" y="1173" width="0.3339%" height="15" fill="rgb(248,109,14)"/><text x="28.4380%" y="1183.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send::{{closure}} (364 samples, 0.33%)</title><rect x="28.1880%" y="1157" width="0.3339%" height="15" fill="rgb(227,146,52)"/><text x="28.4380%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;rho_runtime::storage::transit::Transit&gt;&gt; (107 samples, 0.10%)</title><rect x="28.4237%" y="1141" width="0.0982%" height="15" fill="rgb(232,54,3)"/><text x="28.6737%" y="1151.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::handle_join_double::{{closure}} (9,647 samples, 8.85%)</title><rect x="20.6763%" y="1205" width="8.8501%" height="15" fill="rgb(229,201,43)"/><text x="20.9263%" y="1215.50">rho_runtime::..</text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (1,485 samples, 1.36%)</title><rect x="28.1641%" y="1189" width="1.3623%" height="15" fill="rgb(252,161,33)"/><text x="28.4141%" y="1199.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::complete (1,095 samples, 1.00%)</title><rect x="28.5219%" y="1173" width="1.0046%" height="15" fill="rgb(226,146,40)"/><text x="28.7719%" y="1183.50"></text></g><g><title>tokio::sync::oneshot::State::set_complete (1,086 samples, 1.00%)</title><rect x="28.5301%" y="1157" width="0.9963%" height="15" fill="rgb(219,47,25)"/><text x="28.7801%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1,086 samples, 1.00%)</title><rect x="28.5301%" y="1141" width="0.9963%" height="15" fill="rgb(250,135,13)"/><text x="28.7801%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_or (1,086 samples, 1.00%)</title><rect x="28.5301%" y="1125" width="0.9963%" height="15" fill="rgb(219,229,18)"/><text x="28.7801%" y="1135.50"></text></g><g><title>[libc-2.31.so] (143 samples, 0.13%)</title><rect x="29.6549%" y="1157" width="0.1312%" height="15" fill="rgb(217,152,27)"/><text x="29.9049%" y="1167.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (59 samples, 0.05%)</title><rect x="29.7934%" y="1093" width="0.0541%" height="15" fill="rgb(225,71,47)"/><text x="30.0434%" y="1103.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (59 samples, 0.05%)</title><rect x="29.7934%" y="1077" width="0.0541%" height="15" fill="rgb(220,139,14)"/><text x="30.0434%" y="1087.50"></text></g><g><title>core::mem::replace (59 samples, 0.05%)</title><rect x="29.7934%" y="1061" width="0.0541%" height="15" fill="rgb(247,54,32)"/><text x="30.0434%" y="1071.50"></text></g><g><title>core::mem::swap (59 samples, 0.05%)</title><rect x="29.7934%" y="1045" width="0.0541%" height="15" fill="rgb(252,131,39)"/><text x="30.0434%" y="1055.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (59 samples, 0.05%)</title><rect x="29.7934%" y="1029" width="0.0541%" height="15" fill="rgb(210,108,39)"/><text x="30.0434%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (59 samples, 0.05%)</title><rect x="29.7934%" y="1013" width="0.0541%" height="15" fill="rgb(205,23,29)"/><text x="30.0434%" y="1023.50"></text></g><g><title>tokio::coop::poll_proceed (62 samples, 0.06%)</title><rect x="29.7916%" y="1157" width="0.0569%" height="15" fill="rgb(246,139,46)"/><text x="30.0416%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (62 samples, 0.06%)</title><rect x="29.7916%" y="1141" width="0.0569%" height="15" fill="rgb(250,81,26)"/><text x="30.0416%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (62 samples, 0.06%)</title><rect x="29.7916%" y="1125" width="0.0569%" height="15" fill="rgb(214,104,7)"/><text x="30.0416%" y="1135.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (61 samples, 0.06%)</title><rect x="29.7925%" y="1109" width="0.0560%" height="15" fill="rgb(233,189,8)"/><text x="30.0425%" y="1119.50"></text></g><g><title>[libc-2.31.so] (60 samples, 0.06%)</title><rect x="29.8484%" y="1141" width="0.0550%" height="15" fill="rgb(228,141,17)"/><text x="30.0984%" y="1151.50"></text></g><g><title>[libc-2.31.so] (82 samples, 0.08%)</title><rect x="29.9072%" y="1093" width="0.0752%" height="15" fill="rgb(247,157,1)"/><text x="30.1572%" y="1103.50"></text></g><g><title>[libc-2.31.so] (114 samples, 0.10%)</title><rect x="29.9833%" y="1077" width="0.1046%" height="15" fill="rgb(249,225,5)"/><text x="30.2333%" y="1087.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (619 samples, 0.57%)</title><rect x="30.1081%" y="1013" width="0.5679%" height="15" fill="rgb(242,55,13)"/><text x="30.3581%" y="1023.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::take_output (841 samples, 0.77%)</title><rect x="29.9062%" y="1141" width="0.7715%" height="15" fill="rgb(230,49,50)"/><text x="30.1562%" y="1151.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (841 samples, 0.77%)</title><rect x="29.9062%" y="1125" width="0.7715%" height="15" fill="rgb(241,111,38)"/><text x="30.1562%" y="1135.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::take_output::{{closure}} (841 samples, 0.77%)</title><rect x="29.9062%" y="1109" width="0.7715%" height="15" fill="rgb(252,155,4)"/><text x="30.1562%" y="1119.50"></text></g><g><title>core::mem::replace (758 samples, 0.70%)</title><rect x="29.9824%" y="1093" width="0.6954%" height="15" fill="rgb(212,69,32)"/><text x="30.2324%" y="1103.50"></text></g><g><title>core::mem::swap (643 samples, 0.59%)</title><rect x="30.0879%" y="1077" width="0.5899%" height="15" fill="rgb(243,107,47)"/><text x="30.3379%" y="1087.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (643 samples, 0.59%)</title><rect x="30.0879%" y="1061" width="0.5899%" height="15" fill="rgb(247,130,12)"/><text x="30.3379%" y="1071.50"></text></g><g><title>core::ptr::swap_nonoverlapping (643 samples, 0.59%)</title><rect x="30.0879%" y="1045" width="0.5899%" height="15" fill="rgb(233,74,16)"/><text x="30.3379%" y="1055.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (643 samples, 0.59%)</title><rect x="30.0879%" y="1029" width="0.5899%" height="15" fill="rgb(208,58,18)"/><text x="30.3379%" y="1039.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::try_read_output (907 samples, 0.83%)</title><rect x="29.8484%" y="1157" width="0.8321%" height="15" fill="rgb(242,225,1)"/><text x="30.0984%" y="1167.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (1,134 samples, 1.04%)</title><rect x="29.6512%" y="1173" width="1.0403%" height="15" fill="rgb(249,39,40)"/><text x="29.9012%" y="1183.50"></text></g><g><title>[libc-2.31.so] (82 samples, 0.08%)</title><rect x="30.6961%" y="1173" width="0.0752%" height="15" fill="rgb(207,72,44)"/><text x="30.9461%" y="1183.50"></text></g><g><title>&lt;rho_runtime::storage::signal::CompletionSignal as core::future::future::Future&gt;::poll (1,228 samples, 1.13%)</title><rect x="29.6485%" y="1189" width="1.1266%" height="15" fill="rgb(215,193,12)"/><text x="29.8985%" y="1199.50"></text></g><g><title>[libc-2.31.so] (607 samples, 0.56%)</title><rect x="30.7750%" y="1189" width="0.5569%" height="15" fill="rgb(248,41,39)"/><text x="31.0250%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rho_runtime::storage::coordinator::ThreadSafeShare&gt;&gt; (162 samples, 0.15%)</title><rect x="31.3319%" y="1189" width="0.1486%" height="15" fill="rgb(253,85,4)"/><text x="31.5819%" y="1199.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (162 samples, 0.15%)</title><rect x="31.3319%" y="1173" width="0.1486%" height="15" fill="rgb(243,70,31)"/><text x="31.5819%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (162 samples, 0.15%)</title><rect x="31.3319%" y="1157" width="0.1486%" height="15" fill="rgb(253,195,26)"/><text x="31.5819%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_sub (162 samples, 0.15%)</title><rect x="31.3319%" y="1141" width="0.1486%" height="15" fill="rgb(243,42,11)"/><text x="31.5819%" y="1151.50"></text></g><g><title>arena_bin_lower_slab (11 samples, 0.01%)</title><rect x="31.5291%" y="1013" width="0.0101%" height="15" fill="rgb(239,66,17)"/><text x="31.7791%" y="1023.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (32 samples, 0.03%)</title><rect x="31.5264%" y="1045" width="0.0294%" height="15" fill="rgb(217,132,21)"/><text x="31.7764%" y="1055.50"></text></g><g><title>arena_dalloc_bin_locked_impl (31 samples, 0.03%)</title><rect x="31.5273%" y="1029" width="0.0284%" height="15" fill="rgb(252,202,21)"/><text x="31.7773%" y="1039.50"></text></g><g><title>arena_slab_reg_dalloc (14 samples, 0.01%)</title><rect x="31.5429%" y="1013" width="0.0128%" height="15" fill="rgb(233,98,36)"/><text x="31.7929%" y="1023.50"></text></g><g><title>extent_arena_get (13 samples, 0.01%)</title><rect x="31.5566%" y="1045" width="0.0119%" height="15" fill="rgb(216,153,54)"/><text x="31.8066%" y="1055.50"></text></g><g><title>malloc_mutex_lock (11 samples, 0.01%)</title><rect x="31.5713%" y="1045" width="0.0101%" height="15" fill="rgb(250,99,7)"/><text x="31.8213%" y="1055.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (80 samples, 0.07%)</title><rect x="31.5144%" y="1061" width="0.0734%" height="15" fill="rgb(207,56,50)"/><text x="31.7644%" y="1071.50"></text></g><g><title>isfree (93 samples, 0.09%)</title><rect x="31.5034%" y="1125" width="0.0853%" height="15" fill="rgb(244,61,34)"/><text x="31.7534%" y="1135.50"></text></g><g><title>isdalloct (93 samples, 0.09%)</title><rect x="31.5034%" y="1109" width="0.0853%" height="15" fill="rgb(241,50,38)"/><text x="31.7534%" y="1119.50"></text></g><g><title>arena_sdalloc (93 samples, 0.09%)</title><rect x="31.5034%" y="1093" width="0.0853%" height="15" fill="rgb(212,166,30)"/><text x="31.7534%" y="1103.50"></text></g><g><title>tcache_dalloc_small (92 samples, 0.08%)</title><rect x="31.5043%" y="1077" width="0.0844%" height="15" fill="rgb(249,127,32)"/><text x="31.7543%" y="1087.50"></text></g><g><title>_rjem_sdallocx (108 samples, 0.10%)</title><rect x="31.4915%" y="1141" width="0.0991%" height="15" fill="rgb(209,103,0)"/><text x="31.7415%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Core&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_join_double::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (24 samples, 0.02%)</title><rect x="31.5970%" y="1045" width="0.0220%" height="15" fill="rgb(238,209,51)"/><text x="31.8470%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Scheduler&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (24 samples, 0.02%)</title><rect x="31.5970%" y="1029" width="0.0220%" height="15" fill="rgb(237,56,23)"/><text x="31.8470%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (24 samples, 0.02%)</title><rect x="31.5970%" y="1013" width="0.0220%" height="15" fill="rgb(215,153,46)"/><text x="31.8470%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (24 samples, 0.02%)</title><rect x="31.5970%" y="997" width="0.0220%" height="15" fill="rgb(224,49,31)"/><text x="31.8470%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (24 samples, 0.02%)</title><rect x="31.5970%" y="981" width="0.0220%" height="15" fill="rgb(250,18,42)"/><text x="31.8470%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt; (23 samples, 0.02%)</title><rect x="31.5979%" y="965" width="0.0211%" height="15" fill="rgb(215,176,39)"/><text x="31.8479%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="31.5979%" y="949" width="0.0211%" height="15" fill="rgb(223,77,29)"/><text x="31.8479%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (22 samples, 0.02%)</title><rect x="31.5988%" y="933" width="0.0202%" height="15" fill="rgb(234,94,52)"/><text x="31.8488%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_sub (22 samples, 0.02%)</title><rect x="31.5988%" y="917" width="0.0202%" height="15" fill="rgb(220,154,50)"/><text x="31.8488%" y="927.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (31 samples, 0.03%)</title><rect x="31.5924%" y="1109" width="0.0284%" height="15" fill="rgb(212,11,10)"/><text x="31.8424%" y="1119.50"></text></g><g><title>core::mem::drop (31 samples, 0.03%)</title><rect x="31.5924%" y="1093" width="0.0284%" height="15" fill="rgb(205,166,19)"/><text x="31.8424%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_join_double::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (31 samples, 0.03%)</title><rect x="31.5924%" y="1077" width="0.0284%" height="15" fill="rgb(244,198,16)"/><text x="31.8424%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_join_double::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (26 samples, 0.02%)</title><rect x="31.5970%" y="1061" width="0.0239%" height="15" fill="rgb(219,69,12)"/><text x="31.8470%" y="1071.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_reference (40 samples, 0.04%)</title><rect x="31.5924%" y="1125" width="0.0367%" height="15" fill="rgb(245,30,7)"/><text x="31.8424%" y="1135.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (45 samples, 0.04%)</title><rect x="31.5906%" y="1141" width="0.0413%" height="15" fill="rgb(218,221,48)"/><text x="31.8406%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;rho_runtime::storage::signal::CompletionSignal&gt; (215 samples, 0.20%)</title><rect x="31.4805%" y="1189" width="0.1972%" height="15" fill="rgb(216,66,15)"/><text x="31.7305%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::join::JoinHandle&lt;rho_runtime::storage::transit::Transit&gt;&gt; (213 samples, 0.20%)</title><rect x="31.4823%" y="1173" width="0.1954%" height="15" fill="rgb(226,122,50)"/><text x="31.7323%" y="1183.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (213 samples, 0.20%)</title><rect x="31.4823%" y="1157" width="0.1954%" height="15" fill="rgb(239,156,16)"/><text x="31.7323%" y="1167.50"></text></g><g><title>tokio::runtime::task::state::State::drop_join_handle_fast (42 samples, 0.04%)</title><rect x="31.6392%" y="1141" width="0.0385%" height="15" fill="rgb(224,27,38)"/><text x="31.8892%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (40 samples, 0.04%)</title><rect x="31.6410%" y="1125" width="0.0367%" height="15" fill="rgb(224,39,27)"/><text x="31.8910%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (40 samples, 0.04%)</title><rect x="31.6410%" y="1109" width="0.0367%" height="15" fill="rgb(215,92,29)"/><text x="31.8910%" y="1119.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (25 samples, 0.02%)</title><rect x="31.6823%" y="1173" width="0.0229%" height="15" fill="rgb(207,159,16)"/><text x="31.9323%" y="1183.50"></text></g><g><title>core::ptr::write (25 samples, 0.02%)</title><rect x="31.6823%" y="1157" width="0.0229%" height="15" fill="rgb(238,163,47)"/><text x="31.9323%" y="1167.50"></text></g><g><title>[libc-2.31.so] (24 samples, 0.02%)</title><rect x="31.6832%" y="1141" width="0.0220%" height="15" fill="rgb(219,91,49)"/><text x="31.9332%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (41 samples, 0.04%)</title><rect x="31.7053%" y="1173" width="0.0376%" height="15" fill="rgb(227,167,31)"/><text x="31.9553%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (41 samples, 0.04%)</title><rect x="31.7053%" y="1157" width="0.0376%" height="15" fill="rgb(234,80,54)"/><text x="31.9553%" y="1167.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::push (155 samples, 0.14%)</title><rect x="31.6777%" y="1189" width="0.1422%" height="15" fill="rgb(212,114,2)"/><text x="31.9277%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (84 samples, 0.08%)</title><rect x="31.7429%" y="1173" width="0.0771%" height="15" fill="rgb(234,50,24)"/><text x="31.9929%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_load (84 samples, 0.08%)</title><rect x="31.7429%" y="1157" width="0.0771%" height="15" fill="rgb(221,68,8)"/><text x="31.9929%" y="1167.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (84 samples, 0.08%)</title><rect x="31.8337%" y="1173" width="0.0771%" height="15" fill="rgb(254,180,31)"/><text x="32.0837%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (82 samples, 0.08%)</title><rect x="31.8355%" y="1157" width="0.0752%" height="15" fill="rgb(247,130,50)"/><text x="32.0855%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_add (82 samples, 0.08%)</title><rect x="31.8355%" y="1141" width="0.0752%" height="15" fill="rgb(211,109,4)"/><text x="32.0855%" y="1151.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (12 samples, 0.01%)</title><rect x="31.9475%" y="1077" width="0.0110%" height="15" fill="rgb(238,50,21)"/><text x="32.1975%" y="1087.50"></text></g><g><title>isfree (27 samples, 0.02%)</title><rect x="31.9346%" y="1141" width="0.0248%" height="15" fill="rgb(225,57,45)"/><text x="32.1846%" y="1151.50"></text></g><g><title>isdalloct (27 samples, 0.02%)</title><rect x="31.9346%" y="1125" width="0.0248%" height="15" fill="rgb(209,196,50)"/><text x="32.1846%" y="1135.50"></text></g><g><title>arena_sdalloc (27 samples, 0.02%)</title><rect x="31.9346%" y="1109" width="0.0248%" height="15" fill="rgb(242,140,13)"/><text x="32.1846%" y="1119.50"></text></g><g><title>tcache_dalloc_small (24 samples, 0.02%)</title><rect x="31.9374%" y="1093" width="0.0220%" height="15" fill="rgb(217,111,7)"/><text x="32.1874%" y="1103.50"></text></g><g><title>_rjem_sdallocx (42 samples, 0.04%)</title><rect x="31.9227%" y="1157" width="0.0385%" height="15" fill="rgb(253,193,51)"/><text x="32.1727%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (103 samples, 0.09%)</title><rect x="31.9741%" y="1125" width="0.0945%" height="15" fill="rgb(252,70,29)"/><text x="32.2241%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::GUnforgeable]&gt; (103 samples, 0.09%)</title><rect x="31.9741%" y="1109" width="0.0945%" height="15" fill="rgb(232,127,12)"/><text x="32.2241%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::GUnforgeable&gt; (102 samples, 0.09%)</title><rect x="31.9750%" y="1093" width="0.0936%" height="15" fill="rgb(211,180,21)"/><text x="32.2250%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::g_unforgeable::UnfInstance&gt;&gt; (102 samples, 0.09%)</title><rect x="31.9750%" y="1077" width="0.0936%" height="15" fill="rgb(229,72,13)"/><text x="32.2250%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::g_unforgeable::UnfInstance&gt; (87 samples, 0.08%)</title><rect x="31.9887%" y="1061" width="0.0798%" height="15" fill="rgb(240,211,49)"/><text x="32.2387%" y="1071.50"></text></g><g><title>bytes::bytes::shared_drop (85 samples, 0.08%)</title><rect x="31.9906%" y="1045" width="0.0780%" height="15" fill="rgb(219,149,40)"/><text x="32.2406%" y="1055.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (85 samples, 0.08%)</title><rect x="31.9906%" y="1029" width="0.0780%" height="15" fill="rgb(210,127,46)"/><text x="32.2406%" y="1039.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (85 samples, 0.08%)</title><rect x="31.9906%" y="1013" width="0.0780%" height="15" fill="rgb(220,106,7)"/><text x="32.2406%" y="1023.50"></text></g><g><title>bytes::bytes::release_shared (85 samples, 0.08%)</title><rect x="31.9906%" y="997" width="0.0780%" height="15" fill="rgb(249,31,22)"/><text x="32.2406%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (85 samples, 0.08%)</title><rect x="31.9906%" y="981" width="0.0780%" height="15" fill="rgb(253,1,49)"/><text x="32.2406%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_sub (85 samples, 0.08%)</title><rect x="31.9906%" y="965" width="0.0780%" height="15" fill="rgb(227,144,33)"/><text x="32.2406%" y="975.50"></text></g><g><title>isfree (11 samples, 0.01%)</title><rect x="32.0860%" y="1045" width="0.0101%" height="15" fill="rgb(249,163,44)"/><text x="32.3360%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::GUnforgeable&gt;&gt; (134 samples, 0.12%)</title><rect x="31.9741%" y="1141" width="0.1229%" height="15" fill="rgb(234,15,39)"/><text x="32.2241%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::GUnforgeable&gt;&gt; (31 samples, 0.03%)</title><rect x="32.0685%" y="1125" width="0.0284%" height="15" fill="rgb(207,66,16)"/><text x="32.3185%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.03%)</title><rect x="32.0685%" y="1109" width="0.0284%" height="15" fill="rgb(233,112,24)"/><text x="32.3185%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (31 samples, 0.03%)</title><rect x="32.0685%" y="1093" width="0.0284%" height="15" fill="rgb(230,90,22)"/><text x="32.3185%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (31 samples, 0.03%)</title><rect x="32.0685%" y="1077" width="0.0284%" height="15" fill="rgb(229,61,13)"/><text x="32.3185%" y="1087.50"></text></g><g><title>_rjem_sdallocx (24 samples, 0.02%)</title><rect x="32.0750%" y="1061" width="0.0220%" height="15" fill="rgb(225,57,24)"/><text x="32.3250%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;(blake3::Hash,model::rho_types::Par)&gt; (209 samples, 0.19%)</title><rect x="31.9190%" y="1173" width="0.1917%" height="15" fill="rgb(208,169,48)"/><text x="32.1690%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (163 samples, 0.15%)</title><rect x="31.9612%" y="1157" width="0.1495%" height="15" fill="rgb(244,218,51)"/><text x="32.2112%" y="1167.50"></text></g><g><title>rho_runtime::storage::transit::Transit::find_first_dataum_position (11 samples, 0.01%)</title><rect x="32.1107%" y="1173" width="0.0101%" height="15" fill="rgb(214,148,10)"/><text x="32.3607%" y="1183.50"></text></g><g><title>rho_runtime::storage::transit::Transit::produce (334 samples, 0.31%)</title><rect x="31.8199%" y="1189" width="0.3064%" height="15" fill="rgb(225,174,27)"/><text x="32.0699%" y="1199.50"></text></g><g><title>core::mem::drop (11 samples, 0.01%)</title><rect x="32.1374%" y="1157" width="0.0101%" height="15" fill="rgb(230,96,26)"/><text x="32.3874%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,()&gt;&gt; (11 samples, 0.01%)</title><rect x="32.1374%" y="1141" width="0.0101%" height="15" fill="rgb(232,10,30)"/><text x="32.3874%" y="1151.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="32.1374%" y="1125" width="0.0101%" height="15" fill="rgb(222,8,50)"/><text x="32.3874%" y="1135.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (11 samples, 0.01%)</title><rect x="32.1374%" y="1109" width="0.0101%" height="15" fill="rgb(213,81,27)"/><text x="32.3874%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (11 samples, 0.01%)</title><rect x="32.1374%" y="1093" width="0.0101%" height="15" fill="rgb(245,50,10)"/><text x="32.3874%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (11 samples, 0.01%)</title><rect x="32.1374%" y="1077" width="0.0101%" height="15" fill="rgb(216,100,18)"/><text x="32.3874%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (18 samples, 0.02%)</title><rect x="32.1474%" y="1157" width="0.0165%" height="15" fill="rgb(236,147,54)"/><text x="32.3974%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_swap (18 samples, 0.02%)</title><rect x="32.1474%" y="1141" width="0.0165%" height="15" fill="rgb(205,143,26)"/><text x="32.3974%" y="1151.50"></text></g><g><title>entry_SYSCALL_64 (22 samples, 0.02%)</title><rect x="32.2190%" y="1061" width="0.0202%" height="15" fill="rgb(236,26,9)"/><text x="32.4690%" y="1071.50"></text></g><g><title>__syscall_return_slowpath (11 samples, 0.01%)</title><rect x="32.2539%" y="1029" width="0.0101%" height="15" fill="rgb(221,165,53)"/><text x="32.5039%" y="1039.50"></text></g><g><title>_raw_spin_lock (66 samples, 0.06%)</title><rect x="32.2759%" y="997" width="0.0605%" height="15" fill="rgb(214,110,17)"/><text x="32.5259%" y="1007.50"></text></g><g><title>__unqueue_futex (42 samples, 0.04%)</title><rect x="32.5373%" y="965" width="0.0385%" height="15" fill="rgb(237,197,12)"/><text x="32.7873%" y="975.50"></text></g><g><title>mark_wake_futex (142 samples, 0.13%)</title><rect x="32.4548%" y="981" width="0.1303%" height="15" fill="rgb(205,84,17)"/><text x="32.7048%" y="991.50"></text></g><g><title>wake_q_add_safe (21 samples, 0.02%)</title><rect x="32.5860%" y="981" width="0.0193%" height="15" fill="rgb(237,18,45)"/><text x="32.8360%" y="991.50"></text></g><g><title>_raw_spin_lock (22 samples, 0.02%)</title><rect x="32.6456%" y="965" width="0.0202%" height="15" fill="rgb(221,87,14)"/><text x="32.8956%" y="975.50"></text></g><g><title>__lock_text_start (16 samples, 0.01%)</title><rect x="32.7456%" y="949" width="0.0147%" height="15" fill="rgb(238,186,15)"/><text x="32.9956%" y="959.50"></text></g><g><title>_raw_spin_lock_irqsave (13 samples, 0.01%)</title><rect x="32.7612%" y="949" width="0.0119%" height="15" fill="rgb(208,115,11)"/><text x="33.0112%" y="959.50"></text></g><g><title>available_idle_cpu (30 samples, 0.03%)</title><rect x="32.8364%" y="933" width="0.0275%" height="15" fill="rgb(254,175,0)"/><text x="33.0864%" y="943.50"></text></g><g><title>select_task_rq_fair (105 samples, 0.10%)</title><rect x="32.7777%" y="949" width="0.0963%" height="15" fill="rgb(227,24,42)"/><text x="33.0277%" y="959.50"></text></g><g><title>place_entity (16 samples, 0.01%)</title><rect x="33.1015%" y="901" width="0.0147%" height="15" fill="rgb(223,211,37)"/><text x="33.3515%" y="911.50"></text></g><g><title>update_cfs_group (40 samples, 0.04%)</title><rect x="33.1190%" y="901" width="0.0367%" height="15" fill="rgb(235,49,27)"/><text x="33.3690%" y="911.50"></text></g><g><title>reweight_entity (30 samples, 0.03%)</title><rect x="33.1281%" y="885" width="0.0275%" height="15" fill="rgb(254,97,51)"/><text x="33.3781%" y="895.50"></text></g><g><title>__update_load_avg_cfs_rq (47 samples, 0.04%)</title><rect x="33.1859%" y="885" width="0.0431%" height="15" fill="rgb(249,51,40)"/><text x="33.4359%" y="895.50"></text></g><g><title>enqueue_entity (285 samples, 0.26%)</title><rect x="32.9850%" y="917" width="0.2615%" height="15" fill="rgb(210,128,45)"/><text x="33.2350%" y="927.50"></text></g><g><title>update_load_avg (93 samples, 0.09%)</title><rect x="33.1612%" y="901" width="0.0853%" height="15" fill="rgb(224,137,50)"/><text x="33.4112%" y="911.50"></text></g><g><title>__update_load_avg_se (19 samples, 0.02%)</title><rect x="33.2291%" y="885" width="0.0174%" height="15" fill="rgb(242,15,9)"/><text x="33.4791%" y="895.50"></text></g><g><title>enqueue_task_fair (365 samples, 0.33%)</title><rect x="32.9263%" y="933" width="0.3349%" height="15" fill="rgb(233,187,41)"/><text x="33.1763%" y="943.50"></text></g><g><title>native_sched_clock (18 samples, 0.02%)</title><rect x="33.5144%" y="869" width="0.0165%" height="15" fill="rgb(227,2,29)"/><text x="33.7644%" y="879.50"></text></g><g><title>psi_group_change (189 samples, 0.17%)</title><rect x="33.3593%" y="917" width="0.1734%" height="15" fill="rgb(222,70,3)"/><text x="33.6093%" y="927.50"></text></g><g><title>record_times (43 samples, 0.04%)</title><rect x="33.4933%" y="901" width="0.0394%" height="15" fill="rgb(213,11,42)"/><text x="33.7433%" y="911.50"></text></g><g><title>sched_clock_cpu (24 samples, 0.02%)</title><rect x="33.5107%" y="885" width="0.0220%" height="15" fill="rgb(225,150,9)"/><text x="33.7607%" y="895.50"></text></g><g><title>psi_task_change (290 samples, 0.27%)</title><rect x="33.2676%" y="933" width="0.2660%" height="15" fill="rgb(230,162,45)"/><text x="33.5176%" y="943.50"></text></g><g><title>check_preempt_curr (167 samples, 0.15%)</title><rect x="33.5419%" y="917" width="0.1532%" height="15" fill="rgb(222,14,52)"/><text x="33.7919%" y="927.50"></text></g><g><title>resched_curr (148 samples, 0.14%)</title><rect x="33.5593%" y="901" width="0.1358%" height="15" fill="rgb(254,198,14)"/><text x="33.8093%" y="911.50"></text></g><g><title>ttwu_do_activate (907 samples, 0.83%)</title><rect x="32.8740%" y="949" width="0.8321%" height="15" fill="rgb(220,217,30)"/><text x="33.1240%" y="959.50"></text></g><g><title>ttwu_do_wakeup (188 samples, 0.17%)</title><rect x="33.5336%" y="933" width="0.1725%" height="15" fill="rgb(215,146,41)"/><text x="33.7836%" y="943.50"></text></g><g><title>resched_curr (12 samples, 0.01%)</title><rect x="33.6951%" y="917" width="0.0110%" height="15" fill="rgb(217,27,36)"/><text x="33.9451%" y="927.50"></text></g><g><title>__smp_call_single_queue (11 samples, 0.01%)</title><rect x="33.7217%" y="933" width="0.0101%" height="15" fill="rgb(219,218,39)"/><text x="33.9717%" y="943.50"></text></g><g><title>send_call_function_single_ipi (11 samples, 0.01%)</title><rect x="33.7217%" y="917" width="0.0101%" height="15" fill="rgb(219,4,42)"/><text x="33.9717%" y="927.50"></text></g><g><title>llist_add_batch (16 samples, 0.01%)</title><rect x="33.7318%" y="933" width="0.0147%" height="15" fill="rgb(249,119,36)"/><text x="33.9818%" y="943.50"></text></g><g><title>ttwu_queue_wakelist (45 samples, 0.04%)</title><rect x="33.7061%" y="949" width="0.0413%" height="15" fill="rgb(209,23,33)"/><text x="33.9561%" y="959.50"></text></g><g><title>update_cfs_rq_h_load (65 samples, 0.06%)</title><rect x="33.7474%" y="949" width="0.0596%" height="15" fill="rgb(211,10,0)"/><text x="33.9974%" y="959.50"></text></g><g><title>futex_wake (1,667 samples, 1.53%)</title><rect x="32.3364%" y="997" width="1.5293%" height="15" fill="rgb(208,99,37)"/><text x="32.5864%" y="1007.50"></text></g><g><title>wake_up_q (1,374 samples, 1.26%)</title><rect x="32.6052%" y="981" width="1.2605%" height="15" fill="rgb(213,132,31)"/><text x="32.8552%" y="991.50"></text></g><g><title>try_to_wake_up (1,307 samples, 1.20%)</title><rect x="32.6667%" y="965" width="1.1990%" height="15" fill="rgb(243,129,40)"/><text x="32.9167%" y="975.50"></text></g><g><title>update_rq_clock (64 samples, 0.06%)</title><rect x="33.8070%" y="949" width="0.0587%" height="15" fill="rgb(210,66,33)"/><text x="34.0570%" y="959.50"></text></g><g><title>sched_clock_cpu (24 samples, 0.02%)</title><rect x="33.8437%" y="933" width="0.0220%" height="15" fill="rgb(209,189,4)"/><text x="34.0937%" y="943.50"></text></g><g><title>native_sched_clock (21 samples, 0.02%)</title><rect x="33.8465%" y="917" width="0.0193%" height="15" fill="rgb(214,107,37)"/><text x="34.0965%" y="927.50"></text></g><g><title>hash_futex (26 samples, 0.02%)</title><rect x="33.8685%" y="997" width="0.0239%" height="15" fill="rgb(245,88,54)"/><text x="34.1185%" y="1007.50"></text></g><g><title>do_futex (1,770 samples, 1.62%)</title><rect x="32.2704%" y="1013" width="1.6238%" height="15" fill="rgb(205,146,20)"/><text x="32.5204%" y="1023.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,805 samples, 1.66%)</title><rect x="32.2392%" y="1061" width="1.6559%" height="15" fill="rgb(220,161,25)"/><text x="32.4892%" y="1071.50"></text></g><g><title>do_syscall_64 (1,799 samples, 1.65%)</title><rect x="32.2447%" y="1045" width="1.6504%" height="15" fill="rgb(215,152,15)"/><text x="32.4947%" y="1055.50"></text></g><g><title>__x64_sys_futex (1,778 samples, 1.63%)</title><rect x="32.2640%" y="1029" width="1.6311%" height="15" fill="rgb(233,192,44)"/><text x="32.5140%" y="1039.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (1,879 samples, 1.72%)</title><rect x="32.1750%" y="1093" width="1.7238%" height="15" fill="rgb(240,170,46)"/><text x="32.4250%" y="1103.50"></text></g><g><title>syscall (1,861 samples, 1.71%)</title><rect x="32.1915%" y="1077" width="1.7073%" height="15" fill="rgb(207,104,33)"/><text x="32.4415%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (53 samples, 0.05%)</title><rect x="33.9006%" y="1093" width="0.0486%" height="15" fill="rgb(219,21,39)"/><text x="34.1506%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_load (53 samples, 0.05%)</title><rect x="33.9006%" y="1077" width="0.0486%" height="15" fill="rgb(214,133,29)"/><text x="34.1506%" y="1087.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (36 samples, 0.03%)</title><rect x="33.9492%" y="1093" width="0.0330%" height="15" fill="rgb(226,93,6)"/><text x="34.1992%" y="1103.50"></text></g><g><title>std::time::Instant::now (30 samples, 0.03%)</title><rect x="33.9547%" y="1077" width="0.0275%" height="15" fill="rgb(252,222,34)"/><text x="34.2047%" y="1087.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (30 samples, 0.03%)</title><rect x="33.9547%" y="1061" width="0.0275%" height="15" fill="rgb(252,92,48)"/><text x="34.2047%" y="1071.50"></text></g><g><title>std::sys::unix::time::inner::now (30 samples, 0.03%)</title><rect x="33.9547%" y="1045" width="0.0275%" height="15" fill="rgb(245,223,24)"/><text x="34.2047%" y="1055.50"></text></g><g><title>__clock_gettime (29 samples, 0.03%)</title><rect x="33.9556%" y="1029" width="0.0266%" height="15" fill="rgb(205,176,3)"/><text x="34.2056%" y="1039.50"></text></g><g><title>__vdso_clock_gettime (29 samples, 0.03%)</title><rect x="33.9556%" y="1013" width="0.0266%" height="15" fill="rgb(235,151,15)"/><text x="34.2056%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (42 samples, 0.04%)</title><rect x="33.9896%" y="1061" width="0.0385%" height="15" fill="rgb(237,209,11)"/><text x="34.2396%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (42 samples, 0.04%)</title><rect x="33.9896%" y="1045" width="0.0385%" height="15" fill="rgb(243,227,24)"/><text x="34.2396%" y="1055.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (51 samples, 0.05%)</title><rect x="33.9822%" y="1093" width="0.0468%" height="15" fill="rgb(239,193,16)"/><text x="34.2322%" y="1103.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (44 samples, 0.04%)</title><rect x="33.9887%" y="1077" width="0.0404%" height="15" fill="rgb(231,27,9)"/><text x="34.2387%" y="1087.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::notify_one (2,093 samples, 1.92%)</title><rect x="32.1640%" y="1157" width="1.9201%" height="15" fill="rgb(219,169,10)"/><text x="32.4140%" y="1167.50">t..</text></g><g><title>parking_lot::condvar::Condvar::notify_one (2,093 samples, 1.92%)</title><rect x="32.1640%" y="1141" width="1.9201%" height="15" fill="rgb(244,229,43)"/><text x="32.4140%" y="1151.50">p..</text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (2,090 samples, 1.92%)</title><rect x="32.1667%" y="1125" width="1.9174%" height="15" fill="rgb(254,38,20)"/><text x="32.4167%" y="1135.50">p..</text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (2,090 samples, 1.92%)</title><rect x="32.1667%" y="1109" width="1.9174%" height="15" fill="rgb(250,47,30)"/><text x="32.4167%" y="1119.50">p..</text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (60 samples, 0.06%)</title><rect x="34.0290%" y="1093" width="0.0550%" height="15" fill="rgb(224,124,36)"/><text x="34.2790%" y="1103.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (60 samples, 0.06%)</title><rect x="34.0290%" y="1077" width="0.0550%" height="15" fill="rgb(246,68,51)"/><text x="34.2790%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (60 samples, 0.06%)</title><rect x="34.0290%" y="1061" width="0.0550%" height="15" fill="rgb(253,43,49)"/><text x="34.2790%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_sub (60 samples, 0.06%)</title><rect x="34.0290%" y="1045" width="0.0550%" height="15" fill="rgb(219,54,36)"/><text x="34.2790%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (11 samples, 0.01%)</title><rect x="34.0841%" y="1109" width="0.0101%" height="15" fill="rgb(227,133,34)"/><text x="34.3341%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (11 samples, 0.01%)</title><rect x="34.0841%" y="1093" width="0.0101%" height="15" fill="rgb(247,227,15)"/><text x="34.3341%" y="1103.50"></text></g><g><title>tokio::park::thread::wake (2,146 samples, 1.97%)</title><rect x="32.1263%" y="1189" width="1.9687%" height="15" fill="rgb(229,96,14)"/><text x="32.3763%" y="1199.50">t..</text></g><g><title>tokio::park::thread::Inner::unpark (2,137 samples, 1.96%)</title><rect x="32.1346%" y="1173" width="1.9605%" height="15" fill="rgb(220,79,17)"/><text x="32.3846%" y="1183.50">t..</text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (12 samples, 0.01%)</title><rect x="34.0841%" y="1157" width="0.0110%" height="15" fill="rgb(205,131,53)"/><text x="34.3341%" y="1167.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (12 samples, 0.01%)</title><rect x="34.0841%" y="1141" width="0.0110%" height="15" fill="rgb(209,50,29)"/><text x="34.3341%" y="1151.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (12 samples, 0.01%)</title><rect x="34.0841%" y="1125" width="0.0110%" height="15" fill="rgb(245,86,46)"/><text x="34.3341%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (108 samples, 0.10%)</title><rect x="34.1098%" y="1173" width="0.0991%" height="15" fill="rgb(235,66,46)"/><text x="34.3598%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (108 samples, 0.10%)</title><rect x="34.1098%" y="1157" width="0.0991%" height="15" fill="rgb(232,148,31)"/><text x="34.3598%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (18 samples, 0.02%)</title><rect x="34.2088%" y="1173" width="0.0165%" height="15" fill="rgb(217,149,8)"/><text x="34.4588%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_load (18 samples, 0.02%)</title><rect x="34.2088%" y="1157" width="0.0165%" height="15" fill="rgb(209,183,11)"/><text x="34.4588%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (113 samples, 0.10%)</title><rect x="34.2263%" y="1125" width="0.1037%" height="15" fill="rgb(208,55,20)"/><text x="34.4763%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (113 samples, 0.10%)</title><rect x="34.2263%" y="1109" width="0.1037%" height="15" fill="rgb(218,39,14)"/><text x="34.4763%" y="1119.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (115 samples, 0.11%)</title><rect x="34.2253%" y="1173" width="0.1055%" height="15" fill="rgb(216,169,33)"/><text x="34.4753%" y="1183.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (115 samples, 0.11%)</title><rect x="34.2253%" y="1157" width="0.1055%" height="15" fill="rgb(233,80,24)"/><text x="34.4753%" y="1167.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (115 samples, 0.11%)</title><rect x="34.2253%" y="1141" width="0.1055%" height="15" fill="rgb(213,179,31)"/><text x="34.4753%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (49 samples, 0.04%)</title><rect x="34.3327%" y="1157" width="0.0450%" height="15" fill="rgb(209,19,5)"/><text x="34.5827%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_store (49 samples, 0.04%)</title><rect x="34.3327%" y="1141" width="0.0450%" height="15" fill="rgb(219,18,35)"/><text x="34.5827%" y="1151.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::is_empty (11 samples, 0.01%)</title><rect x="34.3776%" y="1157" width="0.0101%" height="15" fill="rgb(209,169,16)"/><text x="34.6276%" y="1167.50"></text></g><g><title>rho_runtime::storage::coordinator::Coordinator::handle_produce::{{closure}} (5,305 samples, 4.87%)</title><rect x="29.5264%" y="1205" width="4.8668%" height="15" fill="rgb(245,90,51)"/><text x="29.7764%" y="1215.50">rho_ru..</text></g><g><title>tokio::sync::notify::Notify::notify_one (325 samples, 0.30%)</title><rect x="34.0951%" y="1189" width="0.2982%" height="15" fill="rgb(220,99,45)"/><text x="34.3451%" y="1199.50"></text></g><g><title>tokio::sync::notify::notify_locked (66 samples, 0.06%)</title><rect x="34.3327%" y="1173" width="0.0605%" height="15" fill="rgb(249,89,25)"/><text x="34.5827%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17,331 samples, 15.90%)</title><rect x="18.5030%" y="1221" width="15.8994%" height="15" fill="rgb(239,193,0)"/><text x="18.7530%" y="1231.50">&lt;core::future::from_gene..</text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="34.4024%" y="1221" width="0.0174%" height="15" fill="rgb(231,126,1)"/><text x="34.6524%" y="1231.50"></text></g><g><title>&lt;model::locally_free::ExprInstanceLocallyFree as model::locally_free::HasLocallyFree&lt;model::rho_types::expr::ExprInstance&gt;&gt;::locally_free (19 samples, 0.02%)</title><rect x="34.4299%" y="1221" width="0.0174%" height="15" fill="rgb(243,166,3)"/><text x="34.6799%" y="1231.50"></text></g><g><title>&lt;model::ordering::ScoreTreeIter as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="34.4474%" y="1221" width="0.0128%" height="15" fill="rgb(223,22,34)"/><text x="34.6974%" y="1231.50"></text></g><g><title>malloc_mutex_lock (12 samples, 0.01%)</title><rect x="34.5501%" y="741" width="0.0110%" height="15" fill="rgb(251,52,51)"/><text x="34.8001%" y="751.50"></text></g><g><title>malloc_mutex_trylock_final (12 samples, 0.01%)</title><rect x="34.5501%" y="725" width="0.0110%" height="15" fill="rgb(221,165,28)"/><text x="34.8001%" y="735.50"></text></g><g><title>&lt;model::rho_types::ELt as core::clone::Clone&gt;::clone (24 samples, 0.02%)</title><rect x="34.5400%" y="1093" width="0.0220%" height="15" fill="rgb(218,121,47)"/><text x="34.7900%" y="1103.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (24 samples, 0.02%)</title><rect x="34.5400%" y="1077" width="0.0220%" height="15" fill="rgb(209,120,9)"/><text x="34.7900%" y="1087.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (24 samples, 0.02%)</title><rect x="34.5400%" y="1061" width="0.0220%" height="15" fill="rgb(236,68,12)"/><text x="34.7900%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (24 samples, 0.02%)</title><rect x="34.5400%" y="1045" width="0.0220%" height="15" fill="rgb(225,194,26)"/><text x="34.7900%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (24 samples, 0.02%)</title><rect x="34.5400%" y="1029" width="0.0220%" height="15" fill="rgb(231,84,39)"/><text x="34.7900%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (24 samples, 0.02%)</title><rect x="34.5400%" y="1013" width="0.0220%" height="15" fill="rgb(210,11,45)"/><text x="34.7900%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (24 samples, 0.02%)</title><rect x="34.5400%" y="997" width="0.0220%" height="15" fill="rgb(224,54,52)"/><text x="34.7900%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (24 samples, 0.02%)</title><rect x="34.5400%" y="981" width="0.0220%" height="15" fill="rgb(238,102,14)"/><text x="34.7900%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (24 samples, 0.02%)</title><rect x="34.5400%" y="965" width="0.0220%" height="15" fill="rgb(243,160,52)"/><text x="34.7900%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (24 samples, 0.02%)</title><rect x="34.5400%" y="949" width="0.0220%" height="15" fill="rgb(216,114,19)"/><text x="34.7900%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (24 samples, 0.02%)</title><rect x="34.5400%" y="933" width="0.0220%" height="15" fill="rgb(244,166,37)"/><text x="34.7900%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24 samples, 0.02%)</title><rect x="34.5400%" y="917" width="0.0220%" height="15" fill="rgb(246,29,44)"/><text x="34.7900%" y="927.50"></text></g><g><title>alloc::alloc::alloc (24 samples, 0.02%)</title><rect x="34.5400%" y="901" width="0.0220%" height="15" fill="rgb(215,56,53)"/><text x="34.7900%" y="911.50"></text></g><g><title>_rjem_mallocx (24 samples, 0.02%)</title><rect x="34.5400%" y="885" width="0.0220%" height="15" fill="rgb(217,60,2)"/><text x="34.7900%" y="895.50"></text></g><g><title>imalloc (24 samples, 0.02%)</title><rect x="34.5400%" y="869" width="0.0220%" height="15" fill="rgb(207,26,24)"/><text x="34.7900%" y="879.50"></text></g><g><title>imalloc_body (24 samples, 0.02%)</title><rect x="34.5400%" y="853" width="0.0220%" height="15" fill="rgb(252,210,15)"/><text x="34.7900%" y="863.50"></text></g><g><title>imalloc_no_sample (24 samples, 0.02%)</title><rect x="34.5400%" y="837" width="0.0220%" height="15" fill="rgb(253,209,26)"/><text x="34.7900%" y="847.50"></text></g><g><title>iallocztm (24 samples, 0.02%)</title><rect x="34.5400%" y="821" width="0.0220%" height="15" fill="rgb(238,170,14)"/><text x="34.7900%" y="831.50"></text></g><g><title>arena_malloc (24 samples, 0.02%)</title><rect x="34.5400%" y="805" width="0.0220%" height="15" fill="rgb(216,178,15)"/><text x="34.7900%" y="815.50"></text></g><g><title>tcache_alloc_small (24 samples, 0.02%)</title><rect x="34.5400%" y="789" width="0.0220%" height="15" fill="rgb(250,197,2)"/><text x="34.7900%" y="799.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (24 samples, 0.02%)</title><rect x="34.5400%" y="773" width="0.0220%" height="15" fill="rgb(212,70,42)"/><text x="34.7900%" y="783.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (24 samples, 0.02%)</title><rect x="34.5400%" y="757" width="0.0220%" height="15" fill="rgb(227,213,9)"/><text x="34.7900%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (23 samples, 0.02%)</title><rect x="34.5804%" y="869" width="0.0211%" height="15" fill="rgb(245,99,25)"/><text x="34.8304%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (44 samples, 0.04%)</title><rect x="34.5785%" y="885" width="0.0404%" height="15" fill="rgb(250,82,29)"/><text x="34.8285%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19 samples, 0.02%)</title><rect x="34.6015%" y="869" width="0.0174%" height="15" fill="rgb(241,226,54)"/><text x="34.8515%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (19 samples, 0.02%)</title><rect x="34.6015%" y="853" width="0.0174%" height="15" fill="rgb(221,99,41)"/><text x="34.8515%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19 samples, 0.02%)</title><rect x="34.6015%" y="837" width="0.0174%" height="15" fill="rgb(213,90,21)"/><text x="34.8515%" y="847.50"></text></g><g><title>imalloc_no_sample (14 samples, 0.01%)</title><rect x="34.6611%" y="629" width="0.0128%" height="15" fill="rgb(205,208,24)"/><text x="34.9111%" y="639.50"></text></g><g><title>iallocztm (14 samples, 0.01%)</title><rect x="34.6611%" y="613" width="0.0128%" height="15" fill="rgb(246,31,12)"/><text x="34.9111%" y="623.50"></text></g><g><title>arena_malloc (14 samples, 0.01%)</title><rect x="34.6611%" y="597" width="0.0128%" height="15" fill="rgb(213,154,6)"/><text x="34.9111%" y="607.50"></text></g><g><title>tcache_alloc_small (14 samples, 0.01%)</title><rect x="34.6611%" y="581" width="0.0128%" height="15" fill="rgb(222,163,29)"/><text x="34.9111%" y="591.50"></text></g><g><title>cache_bin_alloc_easy (11 samples, 0.01%)</title><rect x="34.6639%" y="565" width="0.0101%" height="15" fill="rgb(227,201,8)"/><text x="34.9139%" y="575.50"></text></g><g><title>imalloc_body (19 samples, 0.02%)</title><rect x="34.6584%" y="645" width="0.0174%" height="15" fill="rgb(233,9,32)"/><text x="34.9084%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (57 samples, 0.05%)</title><rect x="34.6299%" y="725" width="0.0523%" height="15" fill="rgb(217,54,24)"/><text x="34.8799%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (57 samples, 0.05%)</title><rect x="34.6299%" y="709" width="0.0523%" height="15" fill="rgb(235,192,0)"/><text x="34.8799%" y="719.50"></text></g><g><title>alloc::alloc::alloc (57 samples, 0.05%)</title><rect x="34.6299%" y="693" width="0.0523%" height="15" fill="rgb(235,45,9)"/><text x="34.8799%" y="703.50"></text></g><g><title>_rjem_mallocx (48 samples, 0.04%)</title><rect x="34.6382%" y="677" width="0.0440%" height="15" fill="rgb(246,42,40)"/><text x="34.8882%" y="687.50"></text></g><g><title>imalloc (27 samples, 0.02%)</title><rect x="34.6574%" y="661" width="0.0248%" height="15" fill="rgb(248,111,24)"/><text x="34.9074%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (62 samples, 0.06%)</title><rect x="34.6263%" y="773" width="0.0569%" height="15" fill="rgb(249,65,22)"/><text x="34.8763%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (62 samples, 0.06%)</title><rect x="34.6263%" y="757" width="0.0569%" height="15" fill="rgb(238,111,51)"/><text x="34.8763%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (62 samples, 0.06%)</title><rect x="34.6263%" y="741" width="0.0569%" height="15" fill="rgb(250,118,22)"/><text x="34.8763%" y="751.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (147 samples, 0.13%)</title><rect x="34.5620%" y="981" width="0.1349%" height="15" fill="rgb(234,84,26)"/><text x="34.8120%" y="991.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (147 samples, 0.13%)</title><rect x="34.5620%" y="965" width="0.1349%" height="15" fill="rgb(243,172,12)"/><text x="34.8120%" y="975.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (147 samples, 0.13%)</title><rect x="34.5620%" y="949" width="0.1349%" height="15" fill="rgb(236,150,49)"/><text x="34.8120%" y="959.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (147 samples, 0.13%)</title><rect x="34.5620%" y="933" width="0.1349%" height="15" fill="rgb(225,197,26)"/><text x="34.8120%" y="943.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (147 samples, 0.13%)</title><rect x="34.5620%" y="917" width="0.1349%" height="15" fill="rgb(214,17,42)"/><text x="34.8120%" y="927.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (147 samples, 0.13%)</title><rect x="34.5620%" y="901" width="0.1349%" height="15" fill="rgb(224,165,40)"/><text x="34.8120%" y="911.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (85 samples, 0.08%)</title><rect x="34.6189%" y="885" width="0.0780%" height="15" fill="rgb(246,100,4)"/><text x="34.8689%" y="895.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (82 samples, 0.08%)</title><rect x="34.6217%" y="869" width="0.0752%" height="15" fill="rgb(222,103,0)"/><text x="34.8717%" y="879.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (82 samples, 0.08%)</title><rect x="34.6217%" y="853" width="0.0752%" height="15" fill="rgb(227,189,26)"/><text x="34.8717%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (79 samples, 0.07%)</title><rect x="34.6244%" y="837" width="0.0725%" height="15" fill="rgb(214,202,17)"/><text x="34.8744%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (77 samples, 0.07%)</title><rect x="34.6263%" y="821" width="0.0706%" height="15" fill="rgb(229,111,3)"/><text x="34.8763%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (77 samples, 0.07%)</title><rect x="34.6263%" y="805" width="0.0706%" height="15" fill="rgb(229,172,15)"/><text x="34.8763%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (77 samples, 0.07%)</title><rect x="34.6263%" y="789" width="0.0706%" height="15" fill="rgb(230,224,35)"/><text x="34.8763%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (15 samples, 0.01%)</title><rect x="34.6831%" y="773" width="0.0138%" height="15" fill="rgb(251,141,6)"/><text x="34.9331%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.01%)</title><rect x="34.6831%" y="757" width="0.0138%" height="15" fill="rgb(225,208,6)"/><text x="34.9331%" y="767.50"></text></g><g><title>[libc-2.31.so] (14 samples, 0.01%)</title><rect x="34.6840%" y="741" width="0.0128%" height="15" fill="rgb(246,181,16)"/><text x="34.9340%" y="751.50"></text></g><g><title>bitmap_sfu (15 samples, 0.01%)</title><rect x="34.7134%" y="725" width="0.0138%" height="15" fill="rgb(227,129,36)"/><text x="34.9634%" y="735.50"></text></g><g><title>arena_slab_reg_alloc (19 samples, 0.02%)</title><rect x="34.7107%" y="741" width="0.0174%" height="15" fill="rgb(248,117,24)"/><text x="34.9607%" y="751.50"></text></g><g><title>malloc_mutex_trylock_final (22 samples, 0.02%)</title><rect x="34.7299%" y="725" width="0.0202%" height="15" fill="rgb(214,185,35)"/><text x="34.9799%" y="735.50"></text></g><g><title>__GI___pthread_mutex_trylock (22 samples, 0.02%)</title><rect x="34.7299%" y="709" width="0.0202%" height="15" fill="rgb(236,150,34)"/><text x="34.9799%" y="719.50"></text></g><g><title>malloc_mutex_lock (23 samples, 0.02%)</title><rect x="34.7299%" y="741" width="0.0211%" height="15" fill="rgb(243,228,27)"/><text x="34.9799%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (256 samples, 0.23%)</title><rect x="34.5198%" y="1205" width="0.2349%" height="15" fill="rgb(245,77,44)"/><text x="34.7698%" y="1215.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (247 samples, 0.23%)</title><rect x="34.5281%" y="1189" width="0.2266%" height="15" fill="rgb(235,214,42)"/><text x="34.7781%" y="1199.50"></text></g><g><title>alloc::slice::hack::to_vec (247 samples, 0.23%)</title><rect x="34.5281%" y="1173" width="0.2266%" height="15" fill="rgb(221,74,3)"/><text x="34.7781%" y="1183.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (234 samples, 0.21%)</title><rect x="34.5400%" y="1157" width="0.2147%" height="15" fill="rgb(206,121,29)"/><text x="34.7900%" y="1167.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (234 samples, 0.21%)</title><rect x="34.5400%" y="1141" width="0.2147%" height="15" fill="rgb(249,131,53)"/><text x="34.7900%" y="1151.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (234 samples, 0.21%)</title><rect x="34.5400%" y="1125" width="0.2147%" height="15" fill="rgb(236,170,29)"/><text x="34.7900%" y="1135.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (234 samples, 0.21%)</title><rect x="34.5400%" y="1109" width="0.2147%" height="15" fill="rgb(247,96,15)"/><text x="34.7900%" y="1119.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (210 samples, 0.19%)</title><rect x="34.5620%" y="1093" width="0.1927%" height="15" fill="rgb(211,210,7)"/><text x="34.8120%" y="1103.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (210 samples, 0.19%)</title><rect x="34.5620%" y="1077" width="0.1927%" height="15" fill="rgb(240,88,50)"/><text x="34.8120%" y="1087.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (210 samples, 0.19%)</title><rect x="34.5620%" y="1061" width="0.1927%" height="15" fill="rgb(209,229,26)"/><text x="34.8120%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (210 samples, 0.19%)</title><rect x="34.5620%" y="1045" width="0.1927%" height="15" fill="rgb(210,68,23)"/><text x="34.8120%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (210 samples, 0.19%)</title><rect x="34.5620%" y="1029" width="0.1927%" height="15" fill="rgb(229,180,13)"/><text x="34.8120%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (210 samples, 0.19%)</title><rect x="34.5620%" y="1013" width="0.1927%" height="15" fill="rgb(236,53,44)"/><text x="34.8120%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (210 samples, 0.19%)</title><rect x="34.5620%" y="997" width="0.1927%" height="15" fill="rgb(244,214,29)"/><text x="34.8120%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (63 samples, 0.06%)</title><rect x="34.6969%" y="981" width="0.0578%" height="15" fill="rgb(220,75,29)"/><text x="34.9469%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (63 samples, 0.06%)</title><rect x="34.6969%" y="965" width="0.0578%" height="15" fill="rgb(214,183,37)"/><text x="34.9469%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (63 samples, 0.06%)</title><rect x="34.6969%" y="949" width="0.0578%" height="15" fill="rgb(239,117,29)"/><text x="34.9469%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (63 samples, 0.06%)</title><rect x="34.6969%" y="933" width="0.0578%" height="15" fill="rgb(237,171,35)"/><text x="34.9469%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (63 samples, 0.06%)</title><rect x="34.6969%" y="917" width="0.0578%" height="15" fill="rgb(229,178,53)"/><text x="34.9469%" y="927.50"></text></g><g><title>alloc::alloc::alloc (63 samples, 0.06%)</title><rect x="34.6969%" y="901" width="0.0578%" height="15" fill="rgb(210,102,19)"/><text x="34.9469%" y="911.50"></text></g><g><title>_rjem_mallocx (63 samples, 0.06%)</title><rect x="34.6969%" y="885" width="0.0578%" height="15" fill="rgb(235,127,22)"/><text x="34.9469%" y="895.50"></text></g><g><title>imalloc (63 samples, 0.06%)</title><rect x="34.6969%" y="869" width="0.0578%" height="15" fill="rgb(244,31,31)"/><text x="34.9469%" y="879.50"></text></g><g><title>imalloc_body (63 samples, 0.06%)</title><rect x="34.6969%" y="853" width="0.0578%" height="15" fill="rgb(231,43,21)"/><text x="34.9469%" y="863.50"></text></g><g><title>imalloc_no_sample (63 samples, 0.06%)</title><rect x="34.6969%" y="837" width="0.0578%" height="15" fill="rgb(217,131,35)"/><text x="34.9469%" y="847.50"></text></g><g><title>iallocztm (63 samples, 0.06%)</title><rect x="34.6969%" y="821" width="0.0578%" height="15" fill="rgb(221,149,4)"/><text x="34.9469%" y="831.50"></text></g><g><title>arena_malloc (63 samples, 0.06%)</title><rect x="34.6969%" y="805" width="0.0578%" height="15" fill="rgb(232,170,28)"/><text x="34.9469%" y="815.50"></text></g><g><title>tcache_alloc_small (63 samples, 0.06%)</title><rect x="34.6969%" y="789" width="0.0578%" height="15" fill="rgb(238,56,10)"/><text x="34.9469%" y="799.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (63 samples, 0.06%)</title><rect x="34.6969%" y="773" width="0.0578%" height="15" fill="rgb(235,196,14)"/><text x="34.9469%" y="783.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (63 samples, 0.06%)</title><rect x="34.6969%" y="757" width="0.0578%" height="15" fill="rgb(216,45,48)"/><text x="34.9469%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13 samples, 0.01%)</title><rect x="34.7547%" y="1093" width="0.0119%" height="15" fill="rgb(238,213,17)"/><text x="35.0047%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.01%)</title><rect x="34.7547%" y="1077" width="0.0119%" height="15" fill="rgb(212,13,2)"/><text x="35.0047%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.01%)</title><rect x="34.7556%" y="1061" width="0.0110%" height="15" fill="rgb(240,114,20)"/><text x="35.0056%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.01%)</title><rect x="34.7556%" y="1045" width="0.0110%" height="15" fill="rgb(228,41,40)"/><text x="35.0056%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.01%)</title><rect x="34.7556%" y="1029" width="0.0110%" height="15" fill="rgb(244,132,35)"/><text x="35.0056%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="34.7556%" y="1013" width="0.0110%" height="15" fill="rgb(253,189,4)"/><text x="35.0056%" y="1023.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (337 samples, 0.31%)</title><rect x="34.4630%" y="1221" width="0.3092%" height="15" fill="rgb(224,37,19)"/><text x="34.7130%" y="1231.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="34.7547%" y="1205" width="0.0174%" height="15" fill="rgb(235,223,18)"/><text x="35.0047%" y="1215.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="34.7547%" y="1189" width="0.0174%" height="15" fill="rgb(235,163,25)"/><text x="35.0047%" y="1199.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="34.7547%" y="1173" width="0.0174%" height="15" fill="rgb(217,145,28)"/><text x="35.0047%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="34.7547%" y="1157" width="0.0174%" height="15" fill="rgb(223,223,32)"/><text x="35.0047%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19 samples, 0.02%)</title><rect x="34.7547%" y="1141" width="0.0174%" height="15" fill="rgb(227,189,39)"/><text x="35.0047%" y="1151.50"></text></g><g><title>alloc::slice::hack::to_vec (19 samples, 0.02%)</title><rect x="34.7547%" y="1125" width="0.0174%" height="15" fill="rgb(248,10,22)"/><text x="35.0047%" y="1135.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19 samples, 0.02%)</title><rect x="34.7547%" y="1109" width="0.0174%" height="15" fill="rgb(248,46,39)"/><text x="35.0047%" y="1119.50"></text></g><g><title>&lt;model::rho_types::Par as model::ordering::hash::Blake3Hashable&gt;::blake3_hash::traverse (28 samples, 0.03%)</title><rect x="34.7730%" y="1221" width="0.0257%" height="15" fill="rgb(248,113,48)"/><text x="35.0230%" y="1231.50"></text></g><g><title>core::ptr::read (57 samples, 0.05%)</title><rect x="34.9143%" y="1189" width="0.0523%" height="15" fill="rgb(245,16,25)"/><text x="35.1643%" y="1199.50"></text></g><g><title>[libc-2.31.so] (52 samples, 0.05%)</title><rect x="34.9189%" y="1173" width="0.0477%" height="15" fill="rgb(249,152,16)"/><text x="35.1689%" y="1183.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (72 samples, 0.07%)</title><rect x="34.9033%" y="1205" width="0.0661%" height="15" fill="rgb(250,16,1)"/><text x="35.1533%" y="1215.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (201 samples, 0.18%)</title><rect x="35.1152%" y="1189" width="0.1844%" height="15" fill="rgb(249,138,3)"/><text x="35.3652%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (191 samples, 0.18%)</title><rect x="35.1244%" y="1173" width="0.1752%" height="15" fill="rgb(227,71,41)"/><text x="35.3744%" y="1183.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (191 samples, 0.18%)</title><rect x="35.1244%" y="1157" width="0.1752%" height="15" fill="rgb(209,184,23)"/><text x="35.3744%" y="1167.50"></text></g><g><title>core::ptr::read (191 samples, 0.18%)</title><rect x="35.1244%" y="1141" width="0.1752%" height="15" fill="rgb(223,215,31)"/><text x="35.3744%" y="1151.50"></text></g><g><title>[libc-2.31.so] (90 samples, 0.08%)</title><rect x="35.2171%" y="1125" width="0.0826%" height="15" fill="rgb(210,146,28)"/><text x="35.4671%" y="1135.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (16 samples, 0.01%)</title><rect x="35.2996%" y="1189" width="0.0147%" height="15" fill="rgb(209,183,41)"/><text x="35.5496%" y="1199.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (16 samples, 0.01%)</title><rect x="35.2996%" y="1173" width="0.0147%" height="15" fill="rgb(209,224,45)"/><text x="35.5496%" y="1183.50"></text></g><g><title>core::ptr::write (89 samples, 0.08%)</title><rect x="35.3171%" y="1189" width="0.0816%" height="15" fill="rgb(224,209,51)"/><text x="35.5671%" y="1199.50"></text></g><g><title>[libc-2.31.so] (89 samples, 0.08%)</title><rect x="35.3171%" y="1173" width="0.0816%" height="15" fill="rgb(223,17,39)"/><text x="35.5671%" y="1183.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (472 samples, 0.43%)</title><rect x="34.9694%" y="1205" width="0.4330%" height="15" fill="rgb(234,204,37)"/><text x="35.2194%" y="1215.50"></text></g><g><title>[libc-2.31.so] (258 samples, 0.24%)</title><rect x="35.4115%" y="1189" width="0.2367%" height="15" fill="rgb(236,120,5)"/><text x="35.6615%" y="1199.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (271 samples, 0.25%)</title><rect x="35.4024%" y="1205" width="0.2486%" height="15" fill="rgb(248,97,27)"/><text x="35.6524%" y="1215.50"></text></g><g><title>[libc-2.31.so] (704 samples, 0.65%)</title><rect x="35.6510%" y="1205" width="0.6458%" height="15" fill="rgb(240,66,17)"/><text x="35.9010%" y="1215.50"></text></g><g><title>&lt;model::locally_free::ExprInstanceLocallyFree as model::locally_free::HasLocallyFree&lt;model::rho_types::expr::ExprInstance&gt;&gt;::locally_free (16 samples, 0.01%)</title><rect x="36.3289%" y="1189" width="0.0147%" height="15" fill="rgb(210,79,3)"/><text x="36.5789%" y="1199.50"></text></g><g><title>[libc-2.31.so] (38 samples, 0.03%)</title><rect x="36.3436%" y="1189" width="0.0349%" height="15" fill="rgb(214,176,27)"/><text x="36.5936%" y="1199.50"></text></g><g><title>model::rho_types::Par::append_expr (138 samples, 0.13%)</title><rect x="36.3124%" y="1205" width="0.1266%" height="15" fill="rgb(235,185,3)"/><text x="36.5624%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (66 samples, 0.06%)</title><rect x="36.3785%" y="1189" width="0.0605%" height="15" fill="rgb(227,24,12)"/><text x="36.6285%" y="1199.50"></text></g><g><title>core::ptr::write (60 samples, 0.06%)</title><rect x="36.3840%" y="1173" width="0.0550%" height="15" fill="rgb(252,169,48)"/><text x="36.6340%" y="1183.50"></text></g><g><title>[libc-2.31.so] (54 samples, 0.05%)</title><rect x="36.3895%" y="1157" width="0.0495%" height="15" fill="rgb(212,65,1)"/><text x="36.6395%" y="1167.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (73 samples, 0.07%)</title><rect x="36.4739%" y="1189" width="0.0670%" height="15" fill="rgb(242,39,24)"/><text x="36.7239%" y="1199.50"></text></g><g><title>[libc-2.31.so] (70 samples, 0.06%)</title><rect x="36.4766%" y="1173" width="0.0642%" height="15" fill="rgb(249,32,23)"/><text x="36.7266%" y="1183.50"></text></g><g><title>[libc-2.31.so] (70 samples, 0.06%)</title><rect x="36.5510%" y="1173" width="0.0642%" height="15" fill="rgb(251,195,23)"/><text x="36.8010%" y="1183.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (200 samples, 0.18%)</title><rect x="36.5409%" y="1189" width="0.1835%" height="15" fill="rgb(236,174,8)"/><text x="36.7909%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (109 samples, 0.10%)</title><rect x="36.6243%" y="1173" width="0.1000%" height="15" fill="rgb(220,197,8)"/><text x="36.8743%" y="1183.50"></text></g><g><title>core::ptr::read (108 samples, 0.10%)</title><rect x="36.6253%" y="1157" width="0.0991%" height="15" fill="rgb(240,108,37)"/><text x="36.8753%" y="1167.50"></text></g><g><title>[libc-2.31.so] (48 samples, 0.04%)</title><rect x="36.6803%" y="1141" width="0.0440%" height="15" fill="rgb(232,176,24)"/><text x="36.9303%" y="1151.50"></text></g><g><title>[libc-2.31.so] (201 samples, 0.18%)</title><rect x="36.7243%" y="1189" width="0.1844%" height="15" fill="rgb(243,35,29)"/><text x="36.9743%" y="1199.50"></text></g><g><title>arena_dalloc_bin_slab (13 samples, 0.01%)</title><rect x="36.9528%" y="949" width="0.0119%" height="15" fill="rgb(210,37,18)"/><text x="37.2028%" y="959.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (39 samples, 0.04%)</title><rect x="36.9390%" y="981" width="0.0358%" height="15" fill="rgb(224,184,40)"/><text x="37.1890%" y="991.50"></text></g><g><title>arena_dalloc_bin_locked_impl (33 samples, 0.03%)</title><rect x="36.9445%" y="965" width="0.0303%" height="15" fill="rgb(236,39,29)"/><text x="37.1945%" y="975.50"></text></g><g><title>extent_arena_get (16 samples, 0.01%)</title><rect x="36.9775%" y="981" width="0.0147%" height="15" fill="rgb(232,48,39)"/><text x="37.2275%" y="991.50"></text></g><g><title>atomic_load_p (12 samples, 0.01%)</title><rect x="36.9812%" y="965" width="0.0110%" height="15" fill="rgb(236,34,42)"/><text x="37.2312%" y="975.50"></text></g><g><title>malloc_mutex_lock (17 samples, 0.02%)</title><rect x="36.9950%" y="981" width="0.0156%" height="15" fill="rgb(243,106,37)"/><text x="37.2450%" y="991.50"></text></g><g><title>malloc_mutex_trylock_final (17 samples, 0.02%)</title><rect x="36.9950%" y="965" width="0.0156%" height="15" fill="rgb(218,96,6)"/><text x="37.2450%" y="975.50"></text></g><g><title>__GI___pthread_mutex_trylock (17 samples, 0.02%)</title><rect x="36.9950%" y="949" width="0.0156%" height="15" fill="rgb(235,130,12)"/><text x="37.2450%" y="959.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (96 samples, 0.09%)</title><rect x="36.9317%" y="997" width="0.0881%" height="15" fill="rgb(231,95,0)"/><text x="37.1817%" y="1007.50"></text></g><g><title>isfree (103 samples, 0.09%)</title><rect x="36.9262%" y="1061" width="0.0945%" height="15" fill="rgb(228,12,23)"/><text x="37.1762%" y="1071.50"></text></g><g><title>isdalloct (103 samples, 0.09%)</title><rect x="36.9262%" y="1045" width="0.0945%" height="15" fill="rgb(216,12,1)"/><text x="37.1762%" y="1055.50"></text></g><g><title>arena_sdalloc (103 samples, 0.09%)</title><rect x="36.9262%" y="1029" width="0.0945%" height="15" fill="rgb(219,59,3)"/><text x="37.1762%" y="1039.50"></text></g><g><title>tcache_dalloc_small (103 samples, 0.09%)</title><rect x="36.9262%" y="1013" width="0.0945%" height="15" fill="rgb(215,208,46)"/><text x="37.1762%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (117 samples, 0.11%)</title><rect x="36.9152%" y="1157" width="0.1073%" height="15" fill="rgb(254,224,29)"/><text x="37.1652%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (117 samples, 0.11%)</title><rect x="36.9152%" y="1141" width="0.1073%" height="15" fill="rgb(232,14,29)"/><text x="37.1652%" y="1151.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (117 samples, 0.11%)</title><rect x="36.9152%" y="1125" width="0.1073%" height="15" fill="rgb(208,45,52)"/><text x="37.1652%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (117 samples, 0.11%)</title><rect x="36.9152%" y="1109" width="0.1073%" height="15" fill="rgb(234,191,28)"/><text x="37.1652%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (114 samples, 0.10%)</title><rect x="36.9179%" y="1093" width="0.1046%" height="15" fill="rgb(244,67,43)"/><text x="37.1679%" y="1103.50"></text></g><g><title>_rjem_sdallocx (111 samples, 0.10%)</title><rect x="36.9207%" y="1077" width="0.1018%" height="15" fill="rgb(236,189,24)"/><text x="37.1707%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (135 samples, 0.12%)</title><rect x="36.9087%" y="1173" width="0.1238%" height="15" fill="rgb(239,214,33)"/><text x="37.1587%" y="1183.50"></text></g><g><title>isfree (26 samples, 0.02%)</title><rect x="37.0528%" y="1141" width="0.0239%" height="15" fill="rgb(226,176,41)"/><text x="37.3028%" y="1151.50"></text></g><g><title>isdalloct (25 samples, 0.02%)</title><rect x="37.0537%" y="1125" width="0.0229%" height="15" fill="rgb(248,47,8)"/><text x="37.3037%" y="1135.50"></text></g><g><title>arena_sdalloc (25 samples, 0.02%)</title><rect x="37.0537%" y="1109" width="0.0229%" height="15" fill="rgb(218,81,44)"/><text x="37.3037%" y="1119.50"></text></g><g><title>tcache_dalloc_small (19 samples, 0.02%)</title><rect x="37.0592%" y="1093" width="0.0174%" height="15" fill="rgb(213,98,6)"/><text x="37.3092%" y="1103.50"></text></g><g><title>_rjem_sdallocx (43 samples, 0.04%)</title><rect x="37.0408%" y="1157" width="0.0394%" height="15" fill="rgb(222,85,22)"/><text x="37.2908%" y="1167.50"></text></g><g><title>_rjem_je_arena_extents_dirty_dalloc (11 samples, 0.01%)</title><rect x="37.1491%" y="901" width="0.0101%" height="15" fill="rgb(239,46,39)"/><text x="37.3991%" y="911.50"></text></g><g><title>arena_slab_dalloc (13 samples, 0.01%)</title><rect x="37.1482%" y="917" width="0.0119%" height="15" fill="rgb(237,12,29)"/><text x="37.3982%" y="927.50"></text></g><g><title>arena_dalloc_bin_slab (15 samples, 0.01%)</title><rect x="37.1482%" y="933" width="0.0138%" height="15" fill="rgb(214,77,8)"/><text x="37.3982%" y="943.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (45 samples, 0.04%)</title><rect x="37.1363%" y="965" width="0.0413%" height="15" fill="rgb(217,168,37)"/><text x="37.3863%" y="975.50"></text></g><g><title>arena_dalloc_bin_locked_impl (43 samples, 0.04%)</title><rect x="37.1381%" y="949" width="0.0394%" height="15" fill="rgb(221,217,23)"/><text x="37.3881%" y="959.50"></text></g><g><title>arena_slab_reg_dalloc (14 samples, 0.01%)</title><rect x="37.1647%" y="933" width="0.0128%" height="15" fill="rgb(243,229,36)"/><text x="37.4147%" y="943.50"></text></g><g><title>malloc_mutex_lock (25 samples, 0.02%)</title><rect x="37.1931%" y="965" width="0.0229%" height="15" fill="rgb(251,163,40)"/><text x="37.4431%" y="975.50"></text></g><g><title>malloc_mutex_trylock_final (25 samples, 0.02%)</title><rect x="37.1931%" y="949" width="0.0229%" height="15" fill="rgb(237,222,12)"/><text x="37.4431%" y="959.50"></text></g><g><title>__GI___pthread_mutex_trylock (24 samples, 0.02%)</title><rect x="37.1940%" y="933" width="0.0220%" height="15" fill="rgb(248,132,6)"/><text x="37.4440%" y="943.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (110 samples, 0.10%)</title><rect x="37.1225%" y="981" width="0.1009%" height="15" fill="rgb(227,167,50)"/><text x="37.3725%" y="991.50"></text></g><g><title>isfree (129 samples, 0.12%)</title><rect x="37.1060%" y="1045" width="0.1183%" height="15" fill="rgb(242,84,37)"/><text x="37.3560%" y="1055.50"></text></g><g><title>isdalloct (128 samples, 0.12%)</title><rect x="37.1069%" y="1029" width="0.1174%" height="15" fill="rgb(212,4,50)"/><text x="37.3569%" y="1039.50"></text></g><g><title>arena_sdalloc (128 samples, 0.12%)</title><rect x="37.1069%" y="1013" width="0.1174%" height="15" fill="rgb(230,228,32)"/><text x="37.3569%" y="1023.50"></text></g><g><title>tcache_dalloc_small (125 samples, 0.11%)</title><rect x="37.1096%" y="997" width="0.1147%" height="15" fill="rgb(248,217,23)"/><text x="37.3596%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (153 samples, 0.14%)</title><rect x="37.0858%" y="1141" width="0.1404%" height="15" fill="rgb(238,197,32)"/><text x="37.3358%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (150 samples, 0.14%)</title><rect x="37.0885%" y="1125" width="0.1376%" height="15" fill="rgb(236,106,1)"/><text x="37.3385%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (150 samples, 0.14%)</title><rect x="37.0885%" y="1109" width="0.1376%" height="15" fill="rgb(219,228,13)"/><text x="37.3385%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (149 samples, 0.14%)</title><rect x="37.0895%" y="1093" width="0.1367%" height="15" fill="rgb(238,30,35)"/><text x="37.3395%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (148 samples, 0.14%)</title><rect x="37.0904%" y="1077" width="0.1358%" height="15" fill="rgb(236,70,23)"/><text x="37.3404%" y="1087.50"></text></g><g><title>_rjem_sdallocx (142 samples, 0.13%)</title><rect x="37.0959%" y="1061" width="0.1303%" height="15" fill="rgb(249,104,48)"/><text x="37.3459%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::expr::ExprInstance&gt;&gt; (361 samples, 0.33%)</title><rect x="36.9087%" y="1189" width="0.3312%" height="15" fill="rgb(254,117,50)"/><text x="37.1587%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::expr::ExprInstance&gt; (226 samples, 0.21%)</title><rect x="37.0326%" y="1173" width="0.2073%" height="15" fill="rgb(223,152,4)"/><text x="37.2826%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (174 samples, 0.16%)</title><rect x="37.0803%" y="1157" width="0.1596%" height="15" fill="rgb(245,6,2)"/><text x="37.3303%" y="1167.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (16 samples, 0.01%)</title><rect x="37.2619%" y="997" width="0.0147%" height="15" fill="rgb(249,150,24)"/><text x="37.5119%" y="1007.50"></text></g><g><title>arena_dalloc_bin_locked_impl (16 samples, 0.01%)</title><rect x="37.2619%" y="981" width="0.0147%" height="15" fill="rgb(228,185,42)"/><text x="37.5119%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (51 samples, 0.05%)</title><rect x="37.2418%" y="1173" width="0.0468%" height="15" fill="rgb(226,39,33)"/><text x="37.4918%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (51 samples, 0.05%)</title><rect x="37.2418%" y="1157" width="0.0468%" height="15" fill="rgb(221,166,19)"/><text x="37.4918%" y="1167.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.05%)</title><rect x="37.2418%" y="1141" width="0.0468%" height="15" fill="rgb(209,109,2)"/><text x="37.4918%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (51 samples, 0.05%)</title><rect x="37.2418%" y="1125" width="0.0468%" height="15" fill="rgb(252,216,26)"/><text x="37.4918%" y="1135.50"></text></g><g><title>alloc::alloc::dealloc (51 samples, 0.05%)</title><rect x="37.2418%" y="1109" width="0.0468%" height="15" fill="rgb(227,173,36)"/><text x="37.4918%" y="1119.50"></text></g><g><title>_rjem_sdallocx (50 samples, 0.05%)</title><rect x="37.2427%" y="1093" width="0.0459%" height="15" fill="rgb(209,90,7)"/><text x="37.4927%" y="1103.50"></text></g><g><title>isfree (42 samples, 0.04%)</title><rect x="37.2500%" y="1077" width="0.0385%" height="15" fill="rgb(250,194,11)"/><text x="37.5000%" y="1087.50"></text></g><g><title>isdalloct (42 samples, 0.04%)</title><rect x="37.2500%" y="1061" width="0.0385%" height="15" fill="rgb(220,72,50)"/><text x="37.5000%" y="1071.50"></text></g><g><title>arena_sdalloc (42 samples, 0.04%)</title><rect x="37.2500%" y="1045" width="0.0385%" height="15" fill="rgb(222,106,48)"/><text x="37.5000%" y="1055.50"></text></g><g><title>tcache_dalloc_small (42 samples, 0.04%)</title><rect x="37.2500%" y="1029" width="0.0385%" height="15" fill="rgb(216,220,45)"/><text x="37.5000%" y="1039.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (36 samples, 0.03%)</title><rect x="37.2555%" y="1013" width="0.0330%" height="15" fill="rgb(234,112,18)"/><text x="37.5055%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (65 samples, 0.06%)</title><rect x="37.2399%" y="1189" width="0.0596%" height="15" fill="rgb(206,179,9)"/><text x="37.4899%" y="1199.50"></text></g><g><title>isfree (23 samples, 0.02%)</title><rect x="37.3106%" y="1157" width="0.0211%" height="15" fill="rgb(215,115,40)"/><text x="37.5606%" y="1167.50"></text></g><g><title>isdalloct (22 samples, 0.02%)</title><rect x="37.3115%" y="1141" width="0.0202%" height="15" fill="rgb(222,69,34)"/><text x="37.5615%" y="1151.50"></text></g><g><title>arena_sdalloc (22 samples, 0.02%)</title><rect x="37.3115%" y="1125" width="0.0202%" height="15" fill="rgb(209,161,10)"/><text x="37.5615%" y="1135.50"></text></g><g><title>tcache_dalloc_small (19 samples, 0.02%)</title><rect x="37.3142%" y="1109" width="0.0174%" height="15" fill="rgb(217,6,38)"/><text x="37.5642%" y="1119.50"></text></g><g><title>_rjem_sdallocx (36 samples, 0.03%)</title><rect x="37.3005%" y="1173" width="0.0330%" height="15" fill="rgb(229,229,48)"/><text x="37.5505%" y="1183.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (19 samples, 0.02%)</title><rect x="37.3509%" y="981" width="0.0174%" height="15" fill="rgb(225,21,28)"/><text x="37.6009%" y="991.50"></text></g><g><title>arena_dalloc_bin_locked_impl (17 samples, 0.02%)</title><rect x="37.3528%" y="965" width="0.0156%" height="15" fill="rgb(206,33,13)"/><text x="37.6028%" y="975.50"></text></g><g><title>isfree (48 samples, 0.04%)</title><rect x="37.3454%" y="1061" width="0.0440%" height="15" fill="rgb(242,178,17)"/><text x="37.5954%" y="1071.50"></text></g><g><title>isdalloct (48 samples, 0.04%)</title><rect x="37.3454%" y="1045" width="0.0440%" height="15" fill="rgb(220,162,5)"/><text x="37.5954%" y="1055.50"></text></g><g><title>arena_sdalloc (48 samples, 0.04%)</title><rect x="37.3454%" y="1029" width="0.0440%" height="15" fill="rgb(210,33,43)"/><text x="37.5954%" y="1039.50"></text></g><g><title>tcache_dalloc_small (48 samples, 0.04%)</title><rect x="37.3454%" y="1013" width="0.0440%" height="15" fill="rgb(216,116,54)"/><text x="37.5954%" y="1023.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (45 samples, 0.04%)</title><rect x="37.3482%" y="997" width="0.0413%" height="15" fill="rgb(249,92,24)"/><text x="37.5982%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (58 samples, 0.05%)</title><rect x="37.3381%" y="1157" width="0.0532%" height="15" fill="rgb(231,189,14)"/><text x="37.5881%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (58 samples, 0.05%)</title><rect x="37.3381%" y="1141" width="0.0532%" height="15" fill="rgb(230,8,41)"/><text x="37.5881%" y="1151.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (58 samples, 0.05%)</title><rect x="37.3381%" y="1125" width="0.0532%" height="15" fill="rgb(249,7,27)"/><text x="37.5881%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (58 samples, 0.05%)</title><rect x="37.3381%" y="1109" width="0.0532%" height="15" fill="rgb(232,86,5)"/><text x="37.5881%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (58 samples, 0.05%)</title><rect x="37.3381%" y="1093" width="0.0532%" height="15" fill="rgb(224,175,18)"/><text x="37.5881%" y="1103.50"></text></g><g><title>_rjem_sdallocx (54 samples, 0.05%)</title><rect x="37.3417%" y="1077" width="0.0495%" height="15" fill="rgb(220,129,12)"/><text x="37.5917%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::expr::ExprInstance&gt; (108 samples, 0.10%)</title><rect x="37.2995%" y="1189" width="0.0991%" height="15" fill="rgb(210,19,36)"/><text x="37.5495%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (71 samples, 0.07%)</title><rect x="37.3335%" y="1173" width="0.0651%" height="15" fill="rgb(219,96,14)"/><text x="37.5835%" y="1183.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (79 samples, 0.07%)</title><rect x="37.4142%" y="1173" width="0.0725%" height="15" fill="rgb(249,106,1)"/><text x="37.6642%" y="1183.50"></text></g><g><title>[libc-2.31.so] (59 samples, 0.05%)</title><rect x="37.4326%" y="1157" width="0.0541%" height="15" fill="rgb(249,155,20)"/><text x="37.6826%" y="1167.50"></text></g><g><title>[libc-2.31.so] (112 samples, 0.10%)</title><rect x="37.5032%" y="1157" width="0.1027%" height="15" fill="rgb(244,168,9)"/><text x="37.7532%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (23 samples, 0.02%)</title><rect x="37.6060%" y="1157" width="0.0211%" height="15" fill="rgb(216,23,50)"/><text x="37.8560%" y="1167.50"></text></g><g><title>[libc-2.31.so] (122 samples, 0.11%)</title><rect x="37.7289%" y="1125" width="0.1119%" height="15" fill="rgb(224,219,20)"/><text x="37.9789%" y="1135.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (387 samples, 0.36%)</title><rect x="37.4867%" y="1173" width="0.3550%" height="15" fill="rgb(222,156,15)"/><text x="37.7367%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (234 samples, 0.21%)</title><rect x="37.6271%" y="1157" width="0.2147%" height="15" fill="rgb(231,97,17)"/><text x="37.8771%" y="1167.50"></text></g><g><title>core::ptr::read (230 samples, 0.21%)</title><rect x="37.6307%" y="1141" width="0.2110%" height="15" fill="rgb(218,70,48)"/><text x="37.8807%" y="1151.50"></text></g><g><title>[libc-2.31.so] (113 samples, 0.10%)</title><rect x="37.8417%" y="1173" width="0.1037%" height="15" fill="rgb(212,196,52)"/><text x="38.0917%" y="1183.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::eval_eplus::&lt;impl rho_runtime::interpreter::reduce::eval_expression::ExprInstanceEvaluator&lt;S&gt; for model::rho_types::EPlus&gt;::evaluate (607 samples, 0.56%)</title><rect x="37.3986%" y="1189" width="0.5569%" height="15" fill="rgb(243,203,18)"/><text x="37.6486%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::expr::ExprInstance&gt; (11 samples, 0.01%)</title><rect x="37.9454%" y="1173" width="0.0101%" height="15" fill="rgb(252,125,41)"/><text x="38.1954%" y="1183.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (1,662 samples, 1.52%)</title><rect x="36.4390%" y="1205" width="1.5247%" height="15" fill="rgb(223,180,33)"/><text x="36.6890%" y="1215.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_nested_expressions (3,452 samples, 3.17%)</title><rect x="34.7987%" y="1221" width="3.1669%" height="15" fill="rgb(254,159,46)"/><text x="35.0487%" y="1231.50">&lt;mo..</text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (18 samples, 0.02%)</title><rect x="37.9766%" y="1221" width="0.0165%" height="15" fill="rgb(254,38,10)"/><text x="38.2266%" y="1231.50"></text></g><g><title>[libc-2.31.so] (341 samples, 0.31%)</title><rect x="38.0179%" y="1205" width="0.3128%" height="15" fill="rgb(208,217,32)"/><text x="38.2679%" y="1215.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (20 samples, 0.02%)</title><rect x="38.3307%" y="1205" width="0.0183%" height="15" fill="rgb(221,120,13)"/><text x="38.5807%" y="1215.50"></text></g><g><title>arena_bin_lower_slab (29 samples, 0.03%)</title><rect x="38.4087%" y="1029" width="0.0266%" height="15" fill="rgb(246,54,52)"/><text x="38.6587%" y="1039.50"></text></g><g><title>extent_snad_comp (17 samples, 0.02%)</title><rect x="38.4197%" y="1013" width="0.0156%" height="15" fill="rgb(242,34,25)"/><text x="38.6697%" y="1023.50"></text></g><g><title>arena_dalloc_bin_slab (11 samples, 0.01%)</title><rect x="38.4390%" y="1029" width="0.0101%" height="15" fill="rgb(247,209,9)"/><text x="38.6890%" y="1039.50"></text></g><g><title>arena_slab_dalloc (11 samples, 0.01%)</title><rect x="38.4390%" y="1013" width="0.0101%" height="15" fill="rgb(228,71,26)"/><text x="38.6890%" y="1023.50"></text></g><g><title>_rjem_je_arena_extents_dirty_dalloc (11 samples, 0.01%)</title><rect x="38.4390%" y="997" width="0.0101%" height="15" fill="rgb(222,145,49)"/><text x="38.6890%" y="1007.50"></text></g><g><title>extent_record (11 samples, 0.01%)</title><rect x="38.4390%" y="981" width="0.0101%" height="15" fill="rgb(218,121,17)"/><text x="38.6890%" y="991.50"></text></g><g><title>arena_slab_reg_dalloc (16 samples, 0.01%)</title><rect x="38.4500%" y="1029" width="0.0147%" height="15" fill="rgb(244,50,7)"/><text x="38.7000%" y="1039.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (80 samples, 0.07%)</title><rect x="38.3922%" y="1061" width="0.0734%" height="15" fill="rgb(246,229,37)"/><text x="38.6422%" y="1071.50"></text></g><g><title>arena_dalloc_bin_locked_impl (75 samples, 0.07%)</title><rect x="38.3968%" y="1045" width="0.0688%" height="15" fill="rgb(225,18,5)"/><text x="38.6468%" y="1055.50"></text></g><g><title>extent_arena_get (38 samples, 0.03%)</title><rect x="38.4674%" y="1061" width="0.0349%" height="15" fill="rgb(213,204,8)"/><text x="38.7174%" y="1071.50"></text></g><g><title>atomic_load_p (33 samples, 0.03%)</title><rect x="38.4720%" y="1045" width="0.0303%" height="15" fill="rgb(238,103,6)"/><text x="38.7220%" y="1055.50"></text></g><g><title>malloc_mutex_lock (31 samples, 0.03%)</title><rect x="38.5105%" y="1061" width="0.0284%" height="15" fill="rgb(222,25,35)"/><text x="38.7605%" y="1071.50"></text></g><g><title>malloc_mutex_trylock_final (31 samples, 0.03%)</title><rect x="38.5105%" y="1045" width="0.0284%" height="15" fill="rgb(213,203,35)"/><text x="38.7605%" y="1055.50"></text></g><g><title>__GI___pthread_mutex_trylock (30 samples, 0.03%)</title><rect x="38.5114%" y="1029" width="0.0275%" height="15" fill="rgb(221,79,53)"/><text x="38.7614%" y="1039.50"></text></g><g><title>malloc_mutex_unlock (16 samples, 0.01%)</title><rect x="38.5390%" y="1061" width="0.0147%" height="15" fill="rgb(243,200,35)"/><text x="38.7890%" y="1071.50"></text></g><g><title>__GI___pthread_mutex_unlock (15 samples, 0.01%)</title><rect x="38.5399%" y="1045" width="0.0138%" height="15" fill="rgb(248,60,25)"/><text x="38.7899%" y="1055.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (189 samples, 0.17%)</title><rect x="38.3812%" y="1077" width="0.1734%" height="15" fill="rgb(227,53,46)"/><text x="38.6312%" y="1087.50"></text></g><g><title>isfree (204 samples, 0.19%)</title><rect x="38.3702%" y="1141" width="0.1871%" height="15" fill="rgb(216,120,32)"/><text x="38.6202%" y="1151.50"></text></g><g><title>isdalloct (204 samples, 0.19%)</title><rect x="38.3702%" y="1125" width="0.1871%" height="15" fill="rgb(220,134,1)"/><text x="38.6202%" y="1135.50"></text></g><g><title>arena_sdalloc (204 samples, 0.19%)</title><rect x="38.3702%" y="1109" width="0.1871%" height="15" fill="rgb(237,168,5)"/><text x="38.6202%" y="1119.50"></text></g><g><title>tcache_dalloc_small (202 samples, 0.19%)</title><rect x="38.3720%" y="1093" width="0.1853%" height="15" fill="rgb(231,100,33)"/><text x="38.6220%" y="1103.50"></text></g><g><title>_rjem_sdallocx (216 samples, 0.20%)</title><rect x="38.3628%" y="1157" width="0.1982%" height="15" fill="rgb(236,177,47)"/><text x="38.6128%" y="1167.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (15 samples, 0.01%)</title><rect x="38.5610%" y="1157" width="0.0138%" height="15" fill="rgb(235,7,49)"/><text x="38.8110%" y="1167.50"></text></g><g><title>core::mem::drop (11 samples, 0.01%)</title><rect x="38.5646%" y="1141" width="0.0101%" height="15" fill="rgb(232,119,22)"/><text x="38.8146%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;tokio::sync::oneshot::Inner&lt;rho_runtime::storage::transit::Transit&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="38.5646%" y="1125" width="0.0101%" height="15" fill="rgb(254,73,53)"/><text x="38.8146%" y="1135.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="38.5646%" y="1109" width="0.0101%" height="15" fill="rgb(251,35,20)"/><text x="38.8146%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;rho_runtime::storage::transit::Transit&gt;&gt;&gt;&gt; (320 samples, 0.29%)</title><rect x="38.3509%" y="1205" width="0.2936%" height="15" fill="rgb(241,119,20)"/><text x="38.6009%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::sync::oneshot::Inner&lt;rho_runtime::storage::transit::Transit&gt;&gt;&gt; (319 samples, 0.29%)</title><rect x="38.3518%" y="1189" width="0.2926%" height="15" fill="rgb(207,102,14)"/><text x="38.6018%" y="1199.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (319 samples, 0.29%)</title><rect x="38.3518%" y="1173" width="0.2926%" height="15" fill="rgb(248,201,50)"/><text x="38.6018%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (76 samples, 0.07%)</title><rect x="38.5747%" y="1157" width="0.0697%" height="15" fill="rgb(222,185,44)"/><text x="38.8247%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_sub (76 samples, 0.07%)</title><rect x="38.5747%" y="1141" width="0.0697%" height="15" fill="rgb(218,107,18)"/><text x="38.8247%" y="1151.50"></text></g><g><title>[libc-2.31.so] (355 samples, 0.33%)</title><rect x="38.6701%" y="1189" width="0.3257%" height="15" fill="rgb(237,177,39)"/><text x="38.9201%" y="1199.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (452 samples, 0.41%)</title><rect x="39.0169%" y="1125" width="0.4147%" height="15" fill="rgb(246,69,6)"/><text x="39.2669%" y="1135.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (452 samples, 0.41%)</title><rect x="39.0169%" y="1109" width="0.4147%" height="15" fill="rgb(234,208,37)"/><text x="39.2669%" y="1119.50"></text></g><g><title>core::mem::replace (452 samples, 0.41%)</title><rect x="39.0169%" y="1093" width="0.4147%" height="15" fill="rgb(225,4,6)"/><text x="39.2669%" y="1103.50"></text></g><g><title>core::mem::swap (452 samples, 0.41%)</title><rect x="39.0169%" y="1077" width="0.4147%" height="15" fill="rgb(233,45,0)"/><text x="39.2669%" y="1087.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (452 samples, 0.41%)</title><rect x="39.0169%" y="1061" width="0.4147%" height="15" fill="rgb(226,136,5)"/><text x="39.2669%" y="1071.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (452 samples, 0.41%)</title><rect x="39.0169%" y="1045" width="0.4147%" height="15" fill="rgb(211,91,47)"/><text x="39.2669%" y="1055.50"></text></g><g><title>tokio::coop::poll_proceed (482 samples, 0.44%)</title><rect x="38.9958%" y="1189" width="0.4422%" height="15" fill="rgb(242,88,51)"/><text x="39.2458%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (482 samples, 0.44%)</title><rect x="38.9958%" y="1173" width="0.4422%" height="15" fill="rgb(230,91,28)"/><text x="39.2458%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (482 samples, 0.44%)</title><rect x="38.9958%" y="1157" width="0.4422%" height="15" fill="rgb(254,186,29)"/><text x="39.2458%" y="1167.50"></text></g><g><title>tokio::coop::poll_proceed::{{closure}} (471 samples, 0.43%)</title><rect x="39.0059%" y="1141" width="0.4321%" height="15" fill="rgb(238,6,4)"/><text x="39.2559%" y="1151.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::consume_value (1,021 samples, 0.94%)</title><rect x="39.4380%" y="1189" width="0.9367%" height="15" fill="rgb(221,151,16)"/><text x="39.6880%" y="1199.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1,021 samples, 0.94%)</title><rect x="39.4380%" y="1173" width="0.9367%" height="15" fill="rgb(251,143,52)"/><text x="39.6880%" y="1183.50"></text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::consume_value::{{closure}} (1,021 samples, 0.94%)</title><rect x="39.4380%" y="1157" width="0.9367%" height="15" fill="rgb(206,90,15)"/><text x="39.6880%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1,021 samples, 0.94%)</title><rect x="39.4380%" y="1141" width="0.9367%" height="15" fill="rgb(218,35,8)"/><text x="39.6880%" y="1151.50"></text></g><g><title>core::mem::take (1,021 samples, 0.94%)</title><rect x="39.4380%" y="1125" width="0.9367%" height="15" fill="rgb(239,215,6)"/><text x="39.6880%" y="1135.50"></text></g><g><title>core::mem::replace (1,021 samples, 0.94%)</title><rect x="39.4380%" y="1109" width="0.9367%" height="15" fill="rgb(245,116,39)"/><text x="39.6880%" y="1119.50"></text></g><g><title>core::mem::swap (1,021 samples, 0.94%)</title><rect x="39.4380%" y="1093" width="0.9367%" height="15" fill="rgb(242,65,28)"/><text x="39.6880%" y="1103.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1,021 samples, 0.94%)</title><rect x="39.4380%" y="1077" width="0.9367%" height="15" fill="rgb(252,132,53)"/><text x="39.6880%" y="1087.50"></text></g><g><title>core::ptr::swap_nonoverlapping (1,021 samples, 0.94%)</title><rect x="39.4380%" y="1061" width="0.9367%" height="15" fill="rgb(224,159,50)"/><text x="39.6880%" y="1071.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (1,021 samples, 0.94%)</title><rect x="39.4380%" y="1045" width="0.9367%" height="15" fill="rgb(224,93,4)"/><text x="39.6880%" y="1055.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (998 samples, 0.92%)</title><rect x="39.4591%" y="1029" width="0.9156%" height="15" fill="rgb(208,81,34)"/><text x="39.7091%" y="1039.50"></text></g><g><title>&lt;tokio::sync::oneshot::Receiver&lt;T&gt; as core::future::future::Future&gt;::poll (2,597 samples, 2.38%)</title><rect x="38.0014%" y="1221" width="2.3825%" height="15" fill="rgb(233,92,54)"/><text x="38.2514%" y="1231.50">&lt;t..</text></g><g><title>tokio::sync::oneshot::Inner&lt;T&gt;::poll_recv (1,896 samples, 1.74%)</title><rect x="38.6445%" y="1205" width="1.7394%" height="15" fill="rgb(237,21,14)"/><text x="38.8945%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (28 samples, 0.03%)</title><rect x="40.5903%" y="1205" width="0.0257%" height="15" fill="rgb(249,128,51)"/><text x="40.8403%" y="1215.50"></text></g><g><title>[libc-2.31.so] (255 samples, 0.23%)</title><rect x="40.3838%" y="1221" width="0.2339%" height="15" fill="rgb(223,129,24)"/><text x="40.6338%" y="1231.50"></text></g><g><title>__rg_dealloc (33 samples, 0.03%)</title><rect x="40.6407%" y="1221" width="0.0303%" height="15" fill="rgb(231,168,25)"/><text x="40.8907%" y="1231.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (28 samples, 0.03%)</title><rect x="40.6453%" y="1205" width="0.0257%" height="15" fill="rgb(224,39,20)"/><text x="40.8953%" y="1215.50"></text></g><g><title>__rust_probestack (147 samples, 0.13%)</title><rect x="40.6710%" y="1221" width="0.1349%" height="15" fill="rgb(225,152,53)"/><text x="40.9210%" y="1231.50"></text></g><g><title>_rjem_mallocx (21 samples, 0.02%)</title><rect x="40.8123%" y="1221" width="0.0193%" height="15" fill="rgb(252,17,24)"/><text x="41.0623%" y="1231.50"></text></g><g><title>_rjem_sdallocx (14 samples, 0.01%)</title><rect x="40.8315%" y="1221" width="0.0128%" height="15" fill="rgb(250,114,30)"/><text x="41.0815%" y="1231.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (27 samples, 0.02%)</title><rect x="40.9334%" y="869" width="0.0248%" height="15" fill="rgb(229,5,4)"/><text x="41.1834%" y="879.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (94 samples, 0.09%)</title><rect x="40.8976%" y="885" width="0.0862%" height="15" fill="rgb(225,176,49)"/><text x="41.1476%" y="895.50"></text></g><g><title>[libc-2.31.so] (28 samples, 0.03%)</title><rect x="40.9581%" y="869" width="0.0257%" height="15" fill="rgb(224,221,49)"/><text x="41.2081%" y="879.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (134 samples, 0.12%)</title><rect x="40.8838%" y="901" width="0.1229%" height="15" fill="rgb(253,169,27)"/><text x="41.1338%" y="911.50"></text></g><g><title>[libc-2.31.so] (25 samples, 0.02%)</title><rect x="40.9838%" y="885" width="0.0229%" height="15" fill="rgb(211,206,16)"/><text x="41.2338%" y="895.50"></text></g><g><title>imalloc_body (15 samples, 0.01%)</title><rect x="41.0297%" y="773" width="0.0138%" height="15" fill="rgb(244,87,35)"/><text x="41.2797%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (40 samples, 0.04%)</title><rect x="41.0095%" y="853" width="0.0367%" height="15" fill="rgb(246,28,10)"/><text x="41.2595%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (40 samples, 0.04%)</title><rect x="41.0095%" y="837" width="0.0367%" height="15" fill="rgb(229,12,44)"/><text x="41.2595%" y="847.50"></text></g><g><title>alloc::alloc::alloc (40 samples, 0.04%)</title><rect x="41.0095%" y="821" width="0.0367%" height="15" fill="rgb(210,145,37)"/><text x="41.2595%" y="831.50"></text></g><g><title>_rjem_mallocx (34 samples, 0.03%)</title><rect x="41.0150%" y="805" width="0.0312%" height="15" fill="rgb(227,112,52)"/><text x="41.2650%" y="815.50"></text></g><g><title>imalloc (18 samples, 0.02%)</title><rect x="41.0297%" y="789" width="0.0165%" height="15" fill="rgb(238,155,34)"/><text x="41.2797%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (48 samples, 0.04%)</title><rect x="41.0077%" y="901" width="0.0440%" height="15" fill="rgb(239,226,36)"/><text x="41.2577%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (48 samples, 0.04%)</title><rect x="41.0077%" y="885" width="0.0440%" height="15" fill="rgb(230,16,23)"/><text x="41.2577%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (48 samples, 0.04%)</title><rect x="41.0077%" y="869" width="0.0440%" height="15" fill="rgb(236,171,36)"/><text x="41.2577%" y="879.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (49 samples, 0.04%)</title><rect x="41.0517%" y="901" width="0.0450%" height="15" fill="rgb(221,22,14)"/><text x="41.3017%" y="911.50"></text></g><g><title>[libc-2.31.so] (21 samples, 0.02%)</title><rect x="41.0774%" y="885" width="0.0193%" height="15" fill="rgb(242,43,11)"/><text x="41.3274%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (269 samples, 0.25%)</title><rect x="40.8535%" y="1221" width="0.2468%" height="15" fill="rgb(232,69,23)"/><text x="41.1035%" y="1231.50"></text></g><g><title>alloc::slice::hack::to_vec (245 samples, 0.22%)</title><rect x="40.8756%" y="1205" width="0.2248%" height="15" fill="rgb(216,180,54)"/><text x="41.1256%" y="1215.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (245 samples, 0.22%)</title><rect x="40.8756%" y="1189" width="0.2248%" height="15" fill="rgb(216,5,24)"/><text x="41.1256%" y="1199.50"></text></g><g><title>&lt;model::rho_types::Match as core::clone::Clone&gt;::clone (245 samples, 0.22%)</title><rect x="40.8756%" y="1173" width="0.2248%" height="15" fill="rgb(225,89,9)"/><text x="41.1256%" y="1183.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (244 samples, 0.22%)</title><rect x="40.8765%" y="1157" width="0.2238%" height="15" fill="rgb(243,75,33)"/><text x="41.1265%" y="1167.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (244 samples, 0.22%)</title><rect x="40.8765%" y="1141" width="0.2238%" height="15" fill="rgb(247,141,45)"/><text x="41.1265%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (244 samples, 0.22%)</title><rect x="40.8765%" y="1125" width="0.2238%" height="15" fill="rgb(232,177,36)"/><text x="41.1265%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (244 samples, 0.22%)</title><rect x="40.8765%" y="1109" width="0.2238%" height="15" fill="rgb(219,125,36)"/><text x="41.1265%" y="1119.50"></text></g><g><title>alloc::slice::hack::to_vec (244 samples, 0.22%)</title><rect x="40.8765%" y="1093" width="0.2238%" height="15" fill="rgb(227,94,9)"/><text x="41.1265%" y="1103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (244 samples, 0.22%)</title><rect x="40.8765%" y="1077" width="0.2238%" height="15" fill="rgb(240,34,52)"/><text x="41.1265%" y="1087.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (244 samples, 0.22%)</title><rect x="40.8765%" y="1061" width="0.2238%" height="15" fill="rgb(216,45,12)"/><text x="41.1265%" y="1071.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (244 samples, 0.22%)</title><rect x="40.8765%" y="1045" width="0.2238%" height="15" fill="rgb(246,21,19)"/><text x="41.1265%" y="1055.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (244 samples, 0.22%)</title><rect x="40.8765%" y="1029" width="0.2238%" height="15" fill="rgb(213,98,42)"/><text x="41.1265%" y="1039.50"></text></g><g><title>&lt;model::rho_types::ELt as core::clone::Clone&gt;::clone (244 samples, 0.22%)</title><rect x="40.8765%" y="1013" width="0.2238%" height="15" fill="rgb(250,136,47)"/><text x="41.1265%" y="1023.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (244 samples, 0.22%)</title><rect x="40.8765%" y="997" width="0.2238%" height="15" fill="rgb(251,124,27)"/><text x="41.1265%" y="1007.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (244 samples, 0.22%)</title><rect x="40.8765%" y="981" width="0.2238%" height="15" fill="rgb(229,180,14)"/><text x="41.1265%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (244 samples, 0.22%)</title><rect x="40.8765%" y="965" width="0.2238%" height="15" fill="rgb(245,216,25)"/><text x="41.1265%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (244 samples, 0.22%)</title><rect x="40.8765%" y="949" width="0.2238%" height="15" fill="rgb(251,43,5)"/><text x="41.1265%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (244 samples, 0.22%)</title><rect x="40.8765%" y="933" width="0.2238%" height="15" fill="rgb(250,128,24)"/><text x="41.1265%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (244 samples, 0.22%)</title><rect x="40.8765%" y="917" width="0.2238%" height="15" fill="rgb(217,117,27)"/><text x="41.1265%" y="927.50"></text></g><g><title>alloc::slice::merge_sort (47 samples, 0.04%)</title><rect x="41.1003%" y="1221" width="0.0431%" height="15" fill="rgb(245,147,4)"/><text x="41.3503%" y="1231.50"></text></g><g><title>blake3::ChunkState::update (99 samples, 0.09%)</title><rect x="41.1462%" y="1221" width="0.0908%" height="15" fill="rgb(242,201,35)"/><text x="41.3962%" y="1231.50"></text></g><g><title>blake3::ChunkState::fill_buf (31 samples, 0.03%)</title><rect x="41.2086%" y="1205" width="0.0284%" height="15" fill="rgb(218,181,1)"/><text x="41.4586%" y="1215.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (31 samples, 0.03%)</title><rect x="41.2086%" y="1189" width="0.0284%" height="15" fill="rgb(222,6,29)"/><text x="41.4586%" y="1199.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (31 samples, 0.03%)</title><rect x="41.2086%" y="1173" width="0.0284%" height="15" fill="rgb(208,186,3)"/><text x="41.4586%" y="1183.50"></text></g><g><title>blake3::Hasher::final_output (24 samples, 0.02%)</title><rect x="41.2370%" y="1221" width="0.0220%" height="15" fill="rgb(216,36,26)"/><text x="41.4870%" y="1231.50"></text></g><g><title>blake3::Hasher::merge_cv_stack (11 samples, 0.01%)</title><rect x="41.2590%" y="1221" width="0.0101%" height="15" fill="rgb(248,201,23)"/><text x="41.5090%" y="1231.50"></text></g><g><title>blake3::Hasher::update (53 samples, 0.05%)</title><rect x="41.2728%" y="1221" width="0.0486%" height="15" fill="rgb(251,170,31)"/><text x="41.5228%" y="1231.50"></text></g><g><title>blake3::Hasher::update_with_join (13 samples, 0.01%)</title><rect x="41.3095%" y="1205" width="0.0119%" height="15" fill="rgb(207,110,25)"/><text x="41.5595%" y="1215.50"></text></g><g><title>[libc-2.31.so] (284 samples, 0.26%)</title><rect x="41.3398%" y="581" width="0.2605%" height="15" fill="rgb(250,54,15)"/><text x="41.5898%" y="591.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::store_output (223 samples, 0.20%)</title><rect x="41.6003%" y="581" width="0.2046%" height="15" fill="rgb(227,68,33)"/><text x="41.8503%" y="591.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::set_stage (223 samples, 0.20%)</title><rect x="41.6003%" y="565" width="0.2046%" height="15" fill="rgb(238,34,41)"/><text x="41.8503%" y="575.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (223 samples, 0.20%)</title><rect x="41.6003%" y="549" width="0.2046%" height="15" fill="rgb(220,11,15)"/><text x="41.8503%" y="559.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::set_stage::{{closure}} (223 samples, 0.20%)</title><rect x="41.6003%" y="533" width="0.2046%" height="15" fill="rgb(246,111,35)"/><text x="41.8503%" y="543.50"></text></g><g><title>[libc-2.31.so] (223 samples, 0.20%)</title><rect x="41.6003%" y="517" width="0.2046%" height="15" fill="rgb(209,88,53)"/><text x="41.8503%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (45 samples, 0.04%)</title><rect x="41.8287%" y="533" width="0.0413%" height="15" fill="rgb(231,185,47)"/><text x="42.0787%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (45 samples, 0.04%)</title><rect x="41.8287%" y="517" width="0.0413%" height="15" fill="rgb(233,154,1)"/><text x="42.0787%" y="527.50"></text></g><g><title>tokio::runtime::task::harness::SchedulerView&lt;S&gt;::transition_to_terminal (74 samples, 0.07%)</title><rect x="41.8058%" y="581" width="0.0679%" height="15" fill="rgb(225,15,46)"/><text x="42.0558%" y="591.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_terminal (58 samples, 0.05%)</title><rect x="41.8205%" y="565" width="0.0532%" height="15" fill="rgb(211,135,41)"/><text x="42.0705%" y="575.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update (58 samples, 0.05%)</title><rect x="41.8205%" y="549" width="0.0532%" height="15" fill="rgb(208,54,0)"/><text x="42.0705%" y="559.50"></text></g><g><title>tokio::runtime::task::core::Trailer::wake_join (12 samples, 0.01%)</title><rect x="41.8810%" y="565" width="0.0110%" height="15" fill="rgb(244,136,14)"/><text x="42.1310%" y="575.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (12 samples, 0.01%)</title><rect x="41.8810%" y="549" width="0.0110%" height="15" fill="rgb(241,56,14)"/><text x="42.1310%" y="559.50"></text></g><g><title>tokio::runtime::task::core::Trailer::wake_join::{{closure}} (12 samples, 0.01%)</title><rect x="41.8810%" y="533" width="0.0110%" height="15" fill="rgb(205,80,24)"/><text x="42.1310%" y="543.50"></text></g><g><title>core::task::wake::Waker::wake_by_ref (11 samples, 0.01%)</title><rect x="41.8819%" y="517" width="0.0101%" height="15" fill="rgb(220,57,4)"/><text x="42.1319%" y="527.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_complete (852 samples, 0.78%)</title><rect x="41.8957%" y="565" width="0.7816%" height="15" fill="rgb(226,193,50)"/><text x="42.1457%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_xor (852 samples, 0.78%)</title><rect x="41.8957%" y="549" width="0.7816%" height="15" fill="rgb(231,168,22)"/><text x="42.1457%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_xor (852 samples, 0.78%)</title><rect x="41.8957%" y="533" width="0.7816%" height="15" fill="rgb(254,215,14)"/><text x="42.1457%" y="543.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (1,551 samples, 1.42%)</title><rect x="41.3269%" y="1221" width="1.4229%" height="15" fill="rgb(211,115,16)"/><text x="41.5769%" y="1231.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (1,551 samples, 1.42%)</title><rect x="41.3269%" y="1205" width="1.4229%" height="15" fill="rgb(236,210,16)"/><text x="41.5769%" y="1215.50"></text></g><g><title>std::panic::catch_unwind (1,551 samples, 1.42%)</title><rect x="41.3269%" y="1189" width="1.4229%" height="15" fill="rgb(221,94,12)"/><text x="41.5769%" y="1199.50"></text></g><g><title>std::panicking::try (1,551 samples, 1.42%)</title><rect x="41.3269%" y="1173" width="1.4229%" height="15" fill="rgb(235,218,49)"/><text x="41.5769%" y="1183.50"></text></g><g><title>std::panicking::try::do_call (1,551 samples, 1.42%)</title><rect x="41.3269%" y="1157" width="1.4229%" height="15" fill="rgb(217,114,14)"/><text x="41.5769%" y="1167.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,551 samples, 1.42%)</title><rect x="41.3269%" y="1141" width="1.4229%" height="15" fill="rgb(216,145,22)"/><text x="41.5769%" y="1151.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (1,551 samples, 1.42%)</title><rect x="41.3269%" y="1125" width="1.4229%" height="15" fill="rgb(217,112,39)"/><text x="41.5769%" y="1135.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,551 samples, 1.42%)</title><rect x="41.3269%" y="1109" width="1.4229%" height="15" fill="rgb(225,85,32)"/><text x="41.5769%" y="1119.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (1,551 samples, 1.42%)</title><rect x="41.3269%" y="1093" width="1.4229%" height="15" fill="rgb(245,209,47)"/><text x="41.5769%" y="1103.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (1,551 samples, 1.42%)</title><rect x="41.3269%" y="1077" width="1.4229%" height="15" fill="rgb(218,220,15)"/><text x="41.5769%" y="1087.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (1,551 samples, 1.42%)</title><rect x="41.3269%" y="1061" width="1.4229%" height="15" fill="rgb(222,202,31)"/><text x="41.5769%" y="1071.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (1,551 samples, 1.42%)</title><rect x="41.3269%" y="1045" width="1.4229%" height="15" fill="rgb(243,203,4)"/><text x="41.5769%" y="1055.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1,551 samples, 1.42%)</title><rect x="41.3269%" y="1029" width="1.4229%" height="15" fill="rgb(237,92,17)"/><text x="41.5769%" y="1039.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1,551 samples, 1.42%)</title><rect x="41.3269%" y="1013" width="1.4229%" height="15" fill="rgb(231,119,7)"/><text x="41.5769%" y="1023.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (1,551 samples, 1.42%)</title><rect x="41.3269%" y="997" width="1.4229%" height="15" fill="rgb(237,82,41)"/><text x="41.5769%" y="1007.50"></text></g><g><title>std::panic::catch_unwind (1,551 samples, 1.42%)</title><rect x="41.3269%" y="981" width="1.4229%" height="15" fill="rgb(226,81,48)"/><text x="41.5769%" y="991.50"></text></g><g><title>std::panicking::try (1,551 samples, 1.42%)</title><rect x="41.3269%" y="965" width="1.4229%" height="15" fill="rgb(234,70,51)"/><text x="41.5769%" y="975.50"></text></g><g><title>std::panicking::try::do_call (1,551 samples, 1.42%)</title><rect x="41.3269%" y="949" width="1.4229%" height="15" fill="rgb(251,86,4)"/><text x="41.5769%" y="959.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,551 samples, 1.42%)</title><rect x="41.3269%" y="933" width="1.4229%" height="15" fill="rgb(244,144,28)"/><text x="41.5769%" y="943.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (1,551 samples, 1.42%)</title><rect x="41.3269%" y="917" width="1.4229%" height="15" fill="rgb(232,161,39)"/><text x="41.5769%" y="927.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (1,551 samples, 1.42%)</title><rect x="41.3269%" y="901" width="1.4229%" height="15" fill="rgb(247,34,51)"/><text x="41.5769%" y="911.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1,551 samples, 1.42%)</title><rect x="41.3269%" y="885" width="1.4229%" height="15" fill="rgb(225,132,2)"/><text x="41.5769%" y="895.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (1,551 samples, 1.42%)</title><rect x="41.3269%" y="869" width="1.4229%" height="15" fill="rgb(209,159,44)"/><text x="41.5769%" y="879.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (1,551 samples, 1.42%)</title><rect x="41.3269%" y="853" width="1.4229%" height="15" fill="rgb(251,214,1)"/><text x="41.5769%" y="863.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (1,551 samples, 1.42%)</title><rect x="41.3269%" y="837" width="1.4229%" height="15" fill="rgb(247,84,47)"/><text x="41.5769%" y="847.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (1,551 samples, 1.42%)</title><rect x="41.3269%" y="821" width="1.4229%" height="15" fill="rgb(240,111,43)"/><text x="41.5769%" y="831.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (1,551 samples, 1.42%)</title><rect x="41.3269%" y="805" width="1.4229%" height="15" fill="rgb(215,214,35)"/><text x="41.5769%" y="815.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (1,551 samples, 1.42%)</title><rect x="41.3269%" y="789" width="1.4229%" height="15" fill="rgb(248,207,23)"/><text x="41.5769%" y="799.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (1,551 samples, 1.42%)</title><rect x="41.3269%" y="773" width="1.4229%" height="15" fill="rgb(214,186,4)"/><text x="41.5769%" y="783.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (1,551 samples, 1.42%)</title><rect x="41.3269%" y="757" width="1.4229%" height="15" fill="rgb(220,133,22)"/><text x="41.5769%" y="767.50"></text></g><g><title>tokio::coop::budget (1,551 samples, 1.42%)</title><rect x="41.3269%" y="741" width="1.4229%" height="15" fill="rgb(239,134,19)"/><text x="41.5769%" y="751.50"></text></g><g><title>tokio::coop::with_budget (1,551 samples, 1.42%)</title><rect x="41.3269%" y="725" width="1.4229%" height="15" fill="rgb(250,140,9)"/><text x="41.5769%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,551 samples, 1.42%)</title><rect x="41.3269%" y="709" width="1.4229%" height="15" fill="rgb(225,59,14)"/><text x="41.5769%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,551 samples, 1.42%)</title><rect x="41.3269%" y="693" width="1.4229%" height="15" fill="rgb(214,152,51)"/><text x="41.5769%" y="703.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (1,551 samples, 1.42%)</title><rect x="41.3269%" y="677" width="1.4229%" height="15" fill="rgb(251,227,43)"/><text x="41.5769%" y="687.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (1,551 samples, 1.42%)</title><rect x="41.3269%" y="661" width="1.4229%" height="15" fill="rgb(241,96,17)"/><text x="41.5769%" y="671.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (1,551 samples, 1.42%)</title><rect x="41.3269%" y="645" width="1.4229%" height="15" fill="rgb(234,198,43)"/><text x="41.5769%" y="655.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (1,551 samples, 1.42%)</title><rect x="41.3269%" y="629" width="1.4229%" height="15" fill="rgb(220,108,29)"/><text x="41.5769%" y="639.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1,551 samples, 1.42%)</title><rect x="41.3269%" y="613" width="1.4229%" height="15" fill="rgb(226,163,33)"/><text x="41.5769%" y="623.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (1,551 samples, 1.42%)</title><rect x="41.3269%" y="597" width="1.4229%" height="15" fill="rgb(205,194,45)"/><text x="41.5769%" y="607.50"></text></g><g><title>tokio::runtime::task::harness::transition_to_complete (955 samples, 0.88%)</title><rect x="41.8737%" y="581" width="0.8761%" height="15" fill="rgb(206,143,44)"/><text x="42.1237%" y="591.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (79 samples, 0.07%)</title><rect x="42.6773%" y="565" width="0.0725%" height="15" fill="rgb(236,136,36)"/><text x="42.9273%" y="575.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::wake_by_ref (79 samples, 0.07%)</title><rect x="42.6773%" y="549" width="0.0725%" height="15" fill="rgb(249,172,42)"/><text x="42.9273%" y="559.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified (79 samples, 0.07%)</title><rect x="42.6773%" y="533" width="0.0725%" height="15" fill="rgb(216,139,23)"/><text x="42.9273%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (79 samples, 0.07%)</title><rect x="42.6773%" y="517" width="0.0725%" height="15" fill="rgb(207,166,20)"/><text x="42.9273%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_or (79 samples, 0.07%)</title><rect x="42.6773%" y="501" width="0.0725%" height="15" fill="rgb(210,209,22)"/><text x="42.9273%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (16 samples, 0.01%)</title><rect x="42.7709%" y="1205" width="0.0147%" height="15" fill="rgb(232,118,20)"/><text x="43.0209%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="42.7856%" y="1189" width="0.0110%" height="15" fill="rgb(238,113,42)"/><text x="43.0356%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::GUnforgeable]&gt; (12 samples, 0.01%)</title><rect x="42.7856%" y="1173" width="0.0110%" height="15" fill="rgb(231,42,5)"/><text x="43.0356%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::GUnforgeable&gt; (12 samples, 0.01%)</title><rect x="42.7856%" y="1157" width="0.0110%" height="15" fill="rgb(243,166,24)"/><text x="43.0356%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::g_unforgeable::UnfInstance&gt;&gt; (12 samples, 0.01%)</title><rect x="42.7856%" y="1141" width="0.0110%" height="15" fill="rgb(237,226,12)"/><text x="43.0356%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::g_unforgeable::UnfInstance&gt; (12 samples, 0.01%)</title><rect x="42.7856%" y="1125" width="0.0110%" height="15" fill="rgb(229,133,24)"/><text x="43.0356%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::GUnforgeable&gt;&gt; (14 samples, 0.01%)</title><rect x="42.7856%" y="1205" width="0.0128%" height="15" fill="rgb(238,33,43)"/><text x="43.0356%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (61 samples, 0.06%)</title><rect x="42.7608%" y="1221" width="0.0560%" height="15" fill="rgb(227,59,38)"/><text x="43.0108%" y="1231.50"></text></g><g><title>jemallocator::layout_to_flags (52 samples, 0.05%)</title><rect x="42.8489%" y="1221" width="0.0477%" height="15" fill="rgb(230,97,0)"/><text x="43.0989%" y="1231.50"></text></g><g><title>model::ordering::sort_par::&lt;impl model::ordering::Sortable for model::rho_types::Par&gt;::sort (12 samples, 0.01%)</title><rect x="42.8966%" y="1221" width="0.0110%" height="15" fill="rgb(250,173,50)"/><text x="43.1466%" y="1231.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (23 samples, 0.02%)</title><rect x="42.9232%" y="1221" width="0.0211%" height="15" fill="rgb(240,15,50)"/><text x="43.1732%" y="1231.50"></text></g><g><title>parking_lot_core::parking_lot::park (14 samples, 0.01%)</title><rect x="42.9315%" y="1205" width="0.0128%" height="15" fill="rgb(221,93,22)"/><text x="43.1815%" y="1215.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (14 samples, 0.01%)</title><rect x="42.9315%" y="1189" width="0.0128%" height="15" fill="rgb(245,180,53)"/><text x="43.1815%" y="1199.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::__getit (17 samples, 0.02%)</title><rect x="42.9452%" y="1221" width="0.0156%" height="15" fill="rgb(231,88,51)"/><text x="43.1952%" y="1231.50"></text></g><g><title>core::ptr::read (12 samples, 0.01%)</title><rect x="42.9911%" y="1189" width="0.0110%" height="15" fill="rgb(240,58,21)"/><text x="43.2411%" y="1199.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.01%)</title><rect x="42.9920%" y="1173" width="0.0101%" height="15" fill="rgb(237,21,10)"/><text x="43.2420%" y="1183.50"></text></g><g><title>&lt;smallvec::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="42.9856%" y="1205" width="0.0183%" height="15" fill="rgb(218,43,11)"/><text x="43.2356%" y="1215.50"></text></g><g><title>[libc-2.31.so] (44 samples, 0.04%)</title><rect x="43.0103%" y="1189" width="0.0404%" height="15" fill="rgb(218,221,29)"/><text x="43.2603%" y="1199.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (54 samples, 0.05%)</title><rect x="43.0039%" y="1205" width="0.0495%" height="15" fill="rgb(214,118,42)"/><text x="43.2539%" y="1215.50"></text></g><g><title>[libc-2.31.so] (168 samples, 0.15%)</title><rect x="43.0535%" y="1205" width="0.1541%" height="15" fill="rgb(251,200,26)"/><text x="43.3035%" y="1215.50"></text></g><g><title>_rjem_sdallocx (16 samples, 0.01%)</title><rect x="43.2076%" y="1205" width="0.0147%" height="15" fill="rgb(237,101,39)"/><text x="43.4576%" y="1215.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (59 samples, 0.05%)</title><rect x="43.2397%" y="1125" width="0.0541%" height="15" fill="rgb(251,117,11)"/><text x="43.4897%" y="1135.50"></text></g><g><title>core::ptr::read (57 samples, 0.05%)</title><rect x="43.2415%" y="1109" width="0.0523%" height="15" fill="rgb(216,223,23)"/><text x="43.4915%" y="1119.50"></text></g><g><title>[libc-2.31.so] (57 samples, 0.05%)</title><rect x="43.2415%" y="1093" width="0.0523%" height="15" fill="rgb(251,54,12)"/><text x="43.4915%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.03%)</title><rect x="43.2938%" y="1125" width="0.0257%" height="15" fill="rgb(254,176,54)"/><text x="43.5438%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (28 samples, 0.03%)</title><rect x="43.2938%" y="1109" width="0.0257%" height="15" fill="rgb(210,32,8)"/><text x="43.5438%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.03%)</title><rect x="43.2938%" y="1093" width="0.0257%" height="15" fill="rgb(235,52,38)"/><text x="43.5438%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (20 samples, 0.02%)</title><rect x="43.3012%" y="1077" width="0.0183%" height="15" fill="rgb(231,4,44)"/><text x="43.5512%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (20 samples, 0.02%)</title><rect x="43.3012%" y="1061" width="0.0183%" height="15" fill="rgb(249,2,32)"/><text x="43.5512%" y="1071.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::handle_comm_events::{{closure}} (16 samples, 0.01%)</title><rect x="43.3048%" y="1045" width="0.0147%" height="15" fill="rgb(224,65,26)"/><text x="43.5548%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;bytes::bytes::Bytes&gt; (16 samples, 0.01%)</title><rect x="43.3048%" y="1029" width="0.0147%" height="15" fill="rgb(250,73,40)"/><text x="43.5548%" y="1039.50"></text></g><g><title>&lt;bytes::bytes::Bytes as core::ops::drop::Drop&gt;::drop (16 samples, 0.01%)</title><rect x="43.3048%" y="1013" width="0.0147%" height="15" fill="rgb(253,177,16)"/><text x="43.5548%" y="1023.50"></text></g><g><title>[libc-2.31.so] (60 samples, 0.06%)</title><rect x="43.3204%" y="1125" width="0.0550%" height="15" fill="rgb(217,32,34)"/><text x="43.5704%" y="1135.50"></text></g><g><title>isfree (23 samples, 0.02%)</title><rect x="43.3920%" y="965" width="0.0211%" height="15" fill="rgb(212,7,10)"/><text x="43.6420%" y="975.50"></text></g><g><title>isdalloct (23 samples, 0.02%)</title><rect x="43.3920%" y="949" width="0.0211%" height="15" fill="rgb(245,89,8)"/><text x="43.6420%" y="959.50"></text></g><g><title>arena_sdalloc (23 samples, 0.02%)</title><rect x="43.3920%" y="933" width="0.0211%" height="15" fill="rgb(237,16,53)"/><text x="43.6420%" y="943.50"></text></g><g><title>tcache_dalloc_small (20 samples, 0.02%)</title><rect x="43.3947%" y="917" width="0.0183%" height="15" fill="rgb(250,204,30)"/><text x="43.6447%" y="927.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (14 samples, 0.01%)</title><rect x="43.4002%" y="901" width="0.0128%" height="15" fill="rgb(208,77,27)"/><text x="43.6502%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::into_iter::IntoIter&lt;model::rho_types::Par&gt;&gt;&gt; (42 samples, 0.04%)</title><rect x="43.3764%" y="1125" width="0.0385%" height="15" fill="rgb(250,204,28)"/><text x="43.6264%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;model::rho_types::Par&gt;&gt; (39 samples, 0.04%)</title><rect x="43.3791%" y="1109" width="0.0358%" height="15" fill="rgb(244,63,21)"/><text x="43.6291%" y="1119.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.04%)</title><rect x="43.3791%" y="1093" width="0.0358%" height="15" fill="rgb(236,85,44)"/><text x="43.6291%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;model::rho_types::Par,alloc::alloc::Global&gt;&gt; (39 samples, 0.04%)</title><rect x="43.3791%" y="1077" width="0.0358%" height="15" fill="rgb(215,98,4)"/><text x="43.6291%" y="1087.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.04%)</title><rect x="43.3791%" y="1061" width="0.0358%" height="15" fill="rgb(235,38,11)"/><text x="43.6291%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Par&gt;&gt; (39 samples, 0.04%)</title><rect x="43.3791%" y="1045" width="0.0358%" height="15" fill="rgb(254,186,25)"/><text x="43.6291%" y="1055.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.04%)</title><rect x="43.3791%" y="1029" width="0.0358%" height="15" fill="rgb(225,55,31)"/><text x="43.6291%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (39 samples, 0.04%)</title><rect x="43.3791%" y="1013" width="0.0358%" height="15" fill="rgb(211,15,21)"/><text x="43.6291%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (39 samples, 0.04%)</title><rect x="43.3791%" y="997" width="0.0358%" height="15" fill="rgb(215,187,41)"/><text x="43.6291%" y="1007.50"></text></g><g><title>_rjem_sdallocx (30 samples, 0.03%)</title><rect x="43.3874%" y="981" width="0.0275%" height="15" fill="rgb(248,69,32)"/><text x="43.6374%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (200 samples, 0.18%)</title><rect x="43.2324%" y="1157" width="0.1835%" height="15" fill="rgb(252,102,52)"/><text x="43.4824%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (199 samples, 0.18%)</title><rect x="43.2333%" y="1141" width="0.1826%" height="15" fill="rgb(253,140,32)"/><text x="43.4833%" y="1151.50"></text></g><g><title>[libc-2.31.so] (14 samples, 0.01%)</title><rect x="43.4177%" y="1157" width="0.0128%" height="15" fill="rgb(216,56,42)"/><text x="43.6677%" y="1167.50"></text></g><g><title>core::ptr::write (33 samples, 0.03%)</title><rect x="43.4360%" y="1157" width="0.0303%" height="15" fill="rgb(216,184,14)"/><text x="43.6860%" y="1167.50"></text></g><g><title>[libc-2.31.so] (33 samples, 0.03%)</title><rect x="43.4360%" y="1141" width="0.0303%" height="15" fill="rgb(237,187,27)"/><text x="43.6860%" y="1151.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (272 samples, 0.25%)</title><rect x="43.2278%" y="1173" width="0.2495%" height="15" fill="rgb(219,65,3)"/><text x="43.4778%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (298 samples, 0.27%)</title><rect x="43.2223%" y="1205" width="0.2734%" height="15" fill="rgb(245,83,25)"/><text x="43.4723%" y="1215.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (298 samples, 0.27%)</title><rect x="43.2223%" y="1189" width="0.2734%" height="15" fill="rgb(214,205,45)"/><text x="43.4723%" y="1199.50"></text></g><g><title>[libc-2.31.so] (20 samples, 0.02%)</title><rect x="43.4773%" y="1173" width="0.0183%" height="15" fill="rgb(241,20,18)"/><text x="43.7273%" y="1183.50"></text></g><g><title>isfree (12 samples, 0.01%)</title><rect x="43.5103%" y="1093" width="0.0110%" height="15" fill="rgb(232,163,23)"/><text x="43.7603%" y="1103.50"></text></g><g><title>isdalloct (12 samples, 0.01%)</title><rect x="43.5103%" y="1077" width="0.0110%" height="15" fill="rgb(214,5,46)"/><text x="43.7603%" y="1087.50"></text></g><g><title>arena_sdalloc (12 samples, 0.01%)</title><rect x="43.5103%" y="1061" width="0.0110%" height="15" fill="rgb(229,78,17)"/><text x="43.7603%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (18 samples, 0.02%)</title><rect x="43.5067%" y="1141" width="0.0165%" height="15" fill="rgb(248,89,10)"/><text x="43.7567%" y="1151.50"></text></g><g><title>alloc::alloc::dealloc (18 samples, 0.02%)</title><rect x="43.5067%" y="1125" width="0.0165%" height="15" fill="rgb(248,54,15)"/><text x="43.7567%" y="1135.50"></text></g><g><title>_rjem_sdallocx (16 samples, 0.01%)</title><rect x="43.5085%" y="1109" width="0.0147%" height="15" fill="rgb(223,116,6)"/><text x="43.7585%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Match&gt;&gt; (22 samples, 0.02%)</title><rect x="43.5057%" y="1189" width="0.0202%" height="15" fill="rgb(205,125,38)"/><text x="43.7557%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Match&gt;&gt; (21 samples, 0.02%)</title><rect x="43.5067%" y="1173" width="0.0193%" height="15" fill="rgb(251,78,38)"/><text x="43.7567%" y="1183.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="43.5067%" y="1157" width="0.0193%" height="15" fill="rgb(253,78,28)"/><text x="43.7567%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (44 samples, 0.04%)</title><rect x="43.4984%" y="1205" width="0.0404%" height="15" fill="rgb(209,120,3)"/><text x="43.7484%" y="1215.50"></text></g><g><title>isfree (26 samples, 0.02%)</title><rect x="43.5626%" y="1125" width="0.0239%" height="15" fill="rgb(238,229,9)"/><text x="43.8126%" y="1135.50"></text></g><g><title>isdalloct (26 samples, 0.02%)</title><rect x="43.5626%" y="1109" width="0.0239%" height="15" fill="rgb(253,159,18)"/><text x="43.8126%" y="1119.50"></text></g><g><title>arena_sdalloc (26 samples, 0.02%)</title><rect x="43.5626%" y="1093" width="0.0239%" height="15" fill="rgb(244,42,34)"/><text x="43.8126%" y="1103.50"></text></g><g><title>tcache_dalloc_small (21 samples, 0.02%)</title><rect x="43.5672%" y="1077" width="0.0193%" height="15" fill="rgb(224,8,7)"/><text x="43.8172%" y="1087.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (11 samples, 0.01%)</title><rect x="43.5764%" y="1061" width="0.0101%" height="15" fill="rgb(210,201,45)"/><text x="43.8264%" y="1071.50"></text></g><g><title>_rjem_sdallocx (37 samples, 0.03%)</title><rect x="43.5534%" y="1141" width="0.0339%" height="15" fill="rgb(252,185,21)"/><text x="43.8034%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="43.5929%" y="1109" width="0.0101%" height="15" fill="rgb(223,131,1)"/><text x="43.8429%" y="1119.50"></text></g><g><title>arena_dalloc_bin_slab (14 samples, 0.01%)</title><rect x="43.6461%" y="917" width="0.0128%" height="15" fill="rgb(245,141,16)"/><text x="43.8961%" y="927.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (37 samples, 0.03%)</title><rect x="43.6333%" y="949" width="0.0339%" height="15" fill="rgb(229,55,45)"/><text x="43.8833%" y="959.50"></text></g><g><title>arena_dalloc_bin_locked_impl (35 samples, 0.03%)</title><rect x="43.6351%" y="933" width="0.0321%" height="15" fill="rgb(208,92,15)"/><text x="43.8851%" y="943.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (82 samples, 0.08%)</title><rect x="43.6268%" y="965" width="0.0752%" height="15" fill="rgb(234,185,47)"/><text x="43.8768%" y="975.50"></text></g><g><title>isfree (98 samples, 0.09%)</title><rect x="43.6131%" y="1029" width="0.0899%" height="15" fill="rgb(253,104,50)"/><text x="43.8631%" y="1039.50"></text></g><g><title>isdalloct (98 samples, 0.09%)</title><rect x="43.6131%" y="1013" width="0.0899%" height="15" fill="rgb(205,70,7)"/><text x="43.8631%" y="1023.50"></text></g><g><title>arena_sdalloc (98 samples, 0.09%)</title><rect x="43.6131%" y="997" width="0.0899%" height="15" fill="rgb(240,178,43)"/><text x="43.8631%" y="1007.50"></text></g><g><title>tcache_dalloc_small (94 samples, 0.09%)</title><rect x="43.6167%" y="981" width="0.0862%" height="15" fill="rgb(214,112,2)"/><text x="43.8667%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (121 samples, 0.11%)</title><rect x="43.5929%" y="1125" width="0.1110%" height="15" fill="rgb(206,46,17)"/><text x="43.8429%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (110 samples, 0.10%)</title><rect x="43.6030%" y="1109" width="0.1009%" height="15" fill="rgb(225,220,16)"/><text x="43.8530%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (110 samples, 0.10%)</title><rect x="43.6030%" y="1093" width="0.1009%" height="15" fill="rgb(238,65,40)"/><text x="43.8530%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (110 samples, 0.10%)</title><rect x="43.6030%" y="1077" width="0.1009%" height="15" fill="rgb(230,151,21)"/><text x="43.8530%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (110 samples, 0.10%)</title><rect x="43.6030%" y="1061" width="0.1009%" height="15" fill="rgb(218,58,49)"/><text x="43.8530%" y="1071.50"></text></g><g><title>_rjem_sdallocx (104 samples, 0.10%)</title><rect x="43.6085%" y="1045" width="0.0954%" height="15" fill="rgb(219,179,14)"/><text x="43.8585%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;rho_runtime::interpreter::reduce::environment::Env&gt; (200 samples, 0.18%)</title><rect x="43.5388%" y="1205" width="0.1835%" height="15" fill="rgb(223,72,1)"/><text x="43.7888%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[model::rho_types::Par: 6]&gt;&gt; (200 samples, 0.18%)</title><rect x="43.5388%" y="1189" width="0.1835%" height="15" fill="rgb(238,126,10)"/><text x="43.7888%" y="1199.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (200 samples, 0.18%)</title><rect x="43.5388%" y="1173" width="0.1835%" height="15" fill="rgb(224,206,38)"/><text x="43.7888%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Par]&gt; (200 samples, 0.18%)</title><rect x="43.5388%" y="1157" width="0.1835%" height="15" fill="rgb(212,201,54)"/><text x="43.7888%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (147 samples, 0.13%)</title><rect x="43.5874%" y="1141" width="0.1349%" height="15" fill="rgb(218,154,48)"/><text x="43.8374%" y="1151.50"></text></g><g><title>[libc-2.31.so] (19 samples, 0.02%)</title><rect x="43.7296%" y="1189" width="0.0174%" height="15" fill="rgb(232,93,24)"/><text x="43.9796%" y="1199.50"></text></g><g><title>rho_runtime::interpreter::reduce::environment::Env&lt;T&gt;::create (20 samples, 0.02%)</title><rect x="43.7296%" y="1205" width="0.0183%" height="15" fill="rgb(245,30,21)"/><text x="43.9796%" y="1215.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (15 samples, 0.01%)</title><rect x="43.7571%" y="1189" width="0.0138%" height="15" fill="rgb(242,148,29)"/><text x="44.0071%" y="1199.50"></text></g><g><title>[libc-2.31.so] (18 samples, 0.02%)</title><rect x="43.7709%" y="1189" width="0.0165%" height="15" fill="rgb(244,153,54)"/><text x="44.0209%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (81 samples, 0.07%)</title><rect x="43.7956%" y="1189" width="0.0743%" height="15" fill="rgb(252,87,22)"/><text x="44.0456%" y="1199.50"></text></g><g><title>core::ptr::read (72 samples, 0.07%)</title><rect x="43.8039%" y="1173" width="0.0661%" height="15" fill="rgb(210,51,29)"/><text x="44.0539%" y="1183.50"></text></g><g><title>[libc-2.31.so] (71 samples, 0.07%)</title><rect x="43.8048%" y="1157" width="0.0651%" height="15" fill="rgb(242,136,47)"/><text x="44.0548%" y="1167.50"></text></g><g><title>_rjem_sdallocx (13 samples, 0.01%)</title><rect x="43.8855%" y="1093" width="0.0119%" height="15" fill="rgb(238,68,4)"/><text x="44.1355%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.04%)</title><rect x="43.9076%" y="1061" width="0.0376%" height="15" fill="rgb(242,161,30)"/><text x="44.1576%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Expr]&gt; (41 samples, 0.04%)</title><rect x="43.9076%" y="1045" width="0.0376%" height="15" fill="rgb(218,58,44)"/><text x="44.1576%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Expr&gt; (37 samples, 0.03%)</title><rect x="43.9112%" y="1029" width="0.0339%" height="15" fill="rgb(252,125,32)"/><text x="44.1612%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::expr::ExprInstance&gt;&gt; (37 samples, 0.03%)</title><rect x="43.9112%" y="1013" width="0.0339%" height="15" fill="rgb(219,178,0)"/><text x="44.1612%" y="1023.50"></text></g><g><title>isfree (12 samples, 0.01%)</title><rect x="43.9562%" y="981" width="0.0110%" height="15" fill="rgb(213,152,7)"/><text x="44.2062%" y="991.50"></text></g><g><title>isdalloct (12 samples, 0.01%)</title><rect x="43.9562%" y="965" width="0.0110%" height="15" fill="rgb(249,109,34)"/><text x="44.2062%" y="975.50"></text></g><g><title>arena_sdalloc (12 samples, 0.01%)</title><rect x="43.9562%" y="949" width="0.0110%" height="15" fill="rgb(232,96,21)"/><text x="44.2062%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (25 samples, 0.02%)</title><rect x="43.9452%" y="1029" width="0.0229%" height="15" fill="rgb(228,27,39)"/><text x="44.1952%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (24 samples, 0.02%)</title><rect x="43.9461%" y="1013" width="0.0220%" height="15" fill="rgb(211,182,52)"/><text x="44.1961%" y="1023.50"></text></g><g><title>_rjem_sdallocx (20 samples, 0.02%)</title><rect x="43.9498%" y="997" width="0.0183%" height="15" fill="rgb(234,178,38)"/><text x="44.1998%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (67 samples, 0.06%)</title><rect x="43.9076%" y="1077" width="0.0615%" height="15" fill="rgb(221,111,3)"/><text x="44.1576%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (26 samples, 0.02%)</title><rect x="43.9452%" y="1061" width="0.0239%" height="15" fill="rgb(228,175,21)"/><text x="44.1952%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.02%)</title><rect x="43.9452%" y="1045" width="0.0239%" height="15" fill="rgb(228,174,43)"/><text x="44.1952%" y="1055.50"></text></g><g><title>_rjem_sdallocx (14 samples, 0.01%)</title><rect x="43.9947%" y="965" width="0.0128%" height="15" fill="rgb(211,191,0)"/><text x="44.2447%" y="975.50"></text></g><g><title>isfree (11 samples, 0.01%)</title><rect x="43.9975%" y="949" width="0.0101%" height="15" fill="rgb(253,117,3)"/><text x="44.2475%" y="959.50"></text></g><g><title>isdalloct (11 samples, 0.01%)</title><rect x="43.9975%" y="933" width="0.0101%" height="15" fill="rgb(241,127,19)"/><text x="44.2475%" y="943.50"></text></g><g><title>arena_sdalloc (11 samples, 0.01%)</title><rect x="43.9975%" y="917" width="0.0101%" height="15" fill="rgb(218,103,12)"/><text x="44.2475%" y="927.50"></text></g><g><title>tcache_dalloc_small (11 samples, 0.01%)</title><rect x="43.9975%" y="901" width="0.0101%" height="15" fill="rgb(236,214,43)"/><text x="44.2475%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.04%)</title><rect x="44.0094%" y="933" width="0.0385%" height="15" fill="rgb(244,144,19)"/><text x="44.2594%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Expr]&gt; (42 samples, 0.04%)</title><rect x="44.0094%" y="917" width="0.0385%" height="15" fill="rgb(246,188,10)"/><text x="44.2594%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Expr&gt; (41 samples, 0.04%)</title><rect x="44.0103%" y="901" width="0.0376%" height="15" fill="rgb(212,193,33)"/><text x="44.2603%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::expr::ExprInstance&gt;&gt; (41 samples, 0.04%)</title><rect x="44.0103%" y="885" width="0.0376%" height="15" fill="rgb(241,51,29)"/><text x="44.2603%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (52 samples, 0.05%)</title><rect x="44.0094%" y="949" width="0.0477%" height="15" fill="rgb(211,58,19)"/><text x="44.2594%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (86 samples, 0.08%)</title><rect x="43.9910%" y="997" width="0.0789%" height="15" fill="rgb(229,111,26)"/><text x="44.2410%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Par]&gt; (86 samples, 0.08%)</title><rect x="43.9910%" y="981" width="0.0789%" height="15" fill="rgb(213,115,40)"/><text x="44.2410%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (68 samples, 0.06%)</title><rect x="44.0076%" y="965" width="0.0624%" height="15" fill="rgb(209,56,44)"/><text x="44.2576%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (29 samples, 0.03%)</title><rect x="44.0699%" y="965" width="0.0266%" height="15" fill="rgb(230,108,32)"/><text x="44.3199%" y="975.50"></text></g><g><title>alloc::alloc::dealloc (29 samples, 0.03%)</title><rect x="44.0699%" y="949" width="0.0266%" height="15" fill="rgb(216,165,31)"/><text x="44.3199%" y="959.50"></text></g><g><title>_rjem_sdallocx (26 samples, 0.02%)</title><rect x="44.0727%" y="933" width="0.0239%" height="15" fill="rgb(218,122,21)"/><text x="44.3227%" y="943.50"></text></g><g><title>isfree (20 samples, 0.02%)</title><rect x="44.0782%" y="917" width="0.0183%" height="15" fill="rgb(223,224,47)"/><text x="44.3282%" y="927.50"></text></g><g><title>isdalloct (20 samples, 0.02%)</title><rect x="44.0782%" y="901" width="0.0183%" height="15" fill="rgb(238,102,44)"/><text x="44.3282%" y="911.50"></text></g><g><title>arena_sdalloc (20 samples, 0.02%)</title><rect x="44.0782%" y="885" width="0.0183%" height="15" fill="rgb(236,46,40)"/><text x="44.3282%" y="895.50"></text></g><g><title>tcache_dalloc_small (18 samples, 0.02%)</title><rect x="44.0800%" y="869" width="0.0165%" height="15" fill="rgb(247,202,50)"/><text x="44.3300%" y="879.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (13 samples, 0.01%)</title><rect x="44.0846%" y="853" width="0.0119%" height="15" fill="rgb(209,99,20)"/><text x="44.3346%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Par&gt;&gt; (116 samples, 0.11%)</title><rect x="43.9910%" y="1013" width="0.1064%" height="15" fill="rgb(252,27,34)"/><text x="44.2410%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Par&gt;&gt; (30 samples, 0.03%)</title><rect x="44.0699%" y="997" width="0.0275%" height="15" fill="rgb(215,206,23)"/><text x="44.3199%" y="1007.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.03%)</title><rect x="44.0699%" y="981" width="0.0275%" height="15" fill="rgb(212,135,36)"/><text x="44.3199%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::bitset::BitSet&gt;&gt; (22 samples, 0.02%)</title><rect x="44.0975%" y="1013" width="0.0202%" height="15" fill="rgb(240,189,1)"/><text x="44.3475%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::bitset::BitSet&gt; (22 samples, 0.02%)</title><rect x="44.0975%" y="997" width="0.0202%" height="15" fill="rgb(242,56,20)"/><text x="44.3475%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;bit_vec::BitVec&gt; (22 samples, 0.02%)</title><rect x="44.0975%" y="981" width="0.0202%" height="15" fill="rgb(247,132,33)"/><text x="44.3475%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u32&gt;&gt; (22 samples, 0.02%)</title><rect x="44.0975%" y="965" width="0.0202%" height="15" fill="rgb(208,149,11)"/><text x="44.3475%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u32&gt;&gt; (22 samples, 0.02%)</title><rect x="44.0975%" y="949" width="0.0202%" height="15" fill="rgb(211,33,11)"/><text x="44.3475%" y="959.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="44.0975%" y="933" width="0.0202%" height="15" fill="rgb(221,29,38)"/><text x="44.3475%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21 samples, 0.02%)</title><rect x="44.0984%" y="917" width="0.0193%" height="15" fill="rgb(206,182,49)"/><text x="44.3484%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (21 samples, 0.02%)</title><rect x="44.0984%" y="901" width="0.0193%" height="15" fill="rgb(216,140,1)"/><text x="44.3484%" y="911.50"></text></g><g><title>_rjem_sdallocx (21 samples, 0.02%)</title><rect x="44.0984%" y="885" width="0.0193%" height="15" fill="rgb(232,57,40)"/><text x="44.3484%" y="895.50"></text></g><g><title>isfree (16 samples, 0.01%)</title><rect x="44.1030%" y="869" width="0.0147%" height="15" fill="rgb(224,186,18)"/><text x="44.3530%" y="879.50"></text></g><g><title>isdalloct (16 samples, 0.01%)</title><rect x="44.1030%" y="853" width="0.0147%" height="15" fill="rgb(215,121,11)"/><text x="44.3530%" y="863.50"></text></g><g><title>arena_sdalloc (16 samples, 0.01%)</title><rect x="44.1030%" y="837" width="0.0147%" height="15" fill="rgb(245,147,10)"/><text x="44.3530%" y="847.50"></text></g><g><title>tcache_dalloc_small (14 samples, 0.01%)</title><rect x="44.1048%" y="821" width="0.0128%" height="15" fill="rgb(238,153,13)"/><text x="44.3548%" y="831.50"></text></g><g><title>_rjem_sdallocx (19 samples, 0.02%)</title><rect x="44.1296%" y="997" width="0.0174%" height="15" fill="rgb(233,108,0)"/><text x="44.3796%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (81 samples, 0.07%)</title><rect x="44.1516%" y="965" width="0.0743%" height="15" fill="rgb(212,157,17)"/><text x="44.4016%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::GUnforgeable]&gt; (81 samples, 0.07%)</title><rect x="44.1516%" y="949" width="0.0743%" height="15" fill="rgb(225,213,38)"/><text x="44.4016%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::GUnforgeable&gt; (78 samples, 0.07%)</title><rect x="44.1543%" y="933" width="0.0716%" height="15" fill="rgb(248,16,11)"/><text x="44.4043%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::g_unforgeable::UnfInstance&gt;&gt; (78 samples, 0.07%)</title><rect x="44.1543%" y="917" width="0.0716%" height="15" fill="rgb(241,33,4)"/><text x="44.4043%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::g_unforgeable::UnfInstance&gt; (58 samples, 0.05%)</title><rect x="44.1727%" y="901" width="0.0532%" height="15" fill="rgb(222,26,43)"/><text x="44.4227%" y="911.50"></text></g><g><title>bytes::bytes::shared_drop (57 samples, 0.05%)</title><rect x="44.1736%" y="885" width="0.0523%" height="15" fill="rgb(243,29,36)"/><text x="44.4236%" y="895.50"></text></g><g><title>&lt;core::sync::atomic::AtomicPtr&lt;T&gt; as bytes::loom::sync::atomic::AtomicMut&lt;T&gt;&gt;::with_mut (57 samples, 0.05%)</title><rect x="44.1736%" y="869" width="0.0523%" height="15" fill="rgb(241,9,27)"/><text x="44.4236%" y="879.50"></text></g><g><title>bytes::bytes::shared_drop::{{closure}} (57 samples, 0.05%)</title><rect x="44.1736%" y="853" width="0.0523%" height="15" fill="rgb(205,117,26)"/><text x="44.4236%" y="863.50"></text></g><g><title>bytes::bytes::release_shared (57 samples, 0.05%)</title><rect x="44.1736%" y="837" width="0.0523%" height="15" fill="rgb(209,80,39)"/><text x="44.4236%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (57 samples, 0.05%)</title><rect x="44.1736%" y="821" width="0.0523%" height="15" fill="rgb(239,155,6)"/><text x="44.4236%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_sub (57 samples, 0.05%)</title><rect x="44.1736%" y="805" width="0.0523%" height="15" fill="rgb(212,104,12)"/><text x="44.4236%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="44.2259%" y="933" width="0.0119%" height="15" fill="rgb(234,204,3)"/><text x="44.4759%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="44.2259%" y="917" width="0.0119%" height="15" fill="rgb(251,218,7)"/><text x="44.4759%" y="927.50"></text></g><g><title>_rjem_sdallocx (11 samples, 0.01%)</title><rect x="44.2277%" y="901" width="0.0101%" height="15" fill="rgb(221,81,32)"/><text x="44.4777%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::GUnforgeable&gt;&gt; (95 samples, 0.09%)</title><rect x="44.1516%" y="981" width="0.0872%" height="15" fill="rgb(214,152,26)"/><text x="44.4016%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::GUnforgeable&gt;&gt; (14 samples, 0.01%)</title><rect x="44.2259%" y="965" width="0.0128%" height="15" fill="rgb(223,22,3)"/><text x="44.4759%" y="975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="44.2259%" y="949" width="0.0128%" height="15" fill="rgb(207,174,7)"/><text x="44.4759%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (280 samples, 0.26%)</title><rect x="43.9883%" y="1061" width="0.2569%" height="15" fill="rgb(224,19,52)"/><text x="44.2383%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Send]&gt; (279 samples, 0.26%)</title><rect x="43.9892%" y="1045" width="0.2560%" height="15" fill="rgb(228,24,14)"/><text x="44.2392%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Send&gt; (277 samples, 0.25%)</title><rect x="43.9910%" y="1029" width="0.2541%" height="15" fill="rgb(230,153,43)"/><text x="44.2410%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::Par&gt;&gt; (139 samples, 0.13%)</title><rect x="44.1176%" y="1013" width="0.1275%" height="15" fill="rgb(231,106,12)"/><text x="44.3676%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (107 samples, 0.10%)</title><rect x="44.1470%" y="997" width="0.0982%" height="15" fill="rgb(215,92,2)"/><text x="44.3970%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.01%)</title><rect x="44.2543%" y="1029" width="0.0128%" height="15" fill="rgb(249,143,25)"/><text x="44.5043%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.01%)</title><rect x="44.2543%" y="1013" width="0.0128%" height="15" fill="rgb(252,7,35)"/><text x="44.5043%" y="1023.50"></text></g><g><title>_rjem_sdallocx (11 samples, 0.01%)</title><rect x="44.2571%" y="997" width="0.0101%" height="15" fill="rgb(216,69,40)"/><text x="44.5071%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (436 samples, 0.40%)</title><rect x="43.8699%" y="1157" width="0.4000%" height="15" fill="rgb(240,36,33)"/><text x="44.1199%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::MatchCase]&gt; (436 samples, 0.40%)</title><rect x="43.8699%" y="1141" width="0.4000%" height="15" fill="rgb(231,128,14)"/><text x="44.1199%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::MatchCase&gt; (434 samples, 0.40%)</title><rect x="43.8718%" y="1125" width="0.3982%" height="15" fill="rgb(245,143,14)"/><text x="44.1218%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::Par&gt;&gt; (434 samples, 0.40%)</title><rect x="43.8718%" y="1109" width="0.3982%" height="15" fill="rgb(222,130,28)"/><text x="44.1218%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (406 samples, 0.37%)</title><rect x="43.8975%" y="1093" width="0.3725%" height="15" fill="rgb(212,10,48)"/><text x="44.1475%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Send&gt;&gt; (307 samples, 0.28%)</title><rect x="43.9883%" y="1077" width="0.2816%" height="15" fill="rgb(254,118,45)"/><text x="44.2383%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Send&gt;&gt; (27 samples, 0.02%)</title><rect x="44.2452%" y="1061" width="0.0248%" height="15" fill="rgb(228,6,45)"/><text x="44.4952%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.02%)</title><rect x="44.2452%" y="1045" width="0.0248%" height="15" fill="rgb(241,18,35)"/><text x="44.4952%" y="1055.50"></text></g><g><title>isfree (24 samples, 0.02%)</title><rect x="44.2782%" y="1077" width="0.0220%" height="15" fill="rgb(227,214,53)"/><text x="44.5282%" y="1087.50"></text></g><g><title>isdalloct (24 samples, 0.02%)</title><rect x="44.2782%" y="1061" width="0.0220%" height="15" fill="rgb(224,107,51)"/><text x="44.5282%" y="1071.50"></text></g><g><title>arena_sdalloc (24 samples, 0.02%)</title><rect x="44.2782%" y="1045" width="0.0220%" height="15" fill="rgb(248,60,28)"/><text x="44.5282%" y="1055.50"></text></g><g><title>tcache_dalloc_small (23 samples, 0.02%)</title><rect x="44.2791%" y="1029" width="0.0211%" height="15" fill="rgb(249,101,23)"/><text x="44.5291%" y="1039.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (18 samples, 0.02%)</title><rect x="44.2837%" y="1013" width="0.0165%" height="15" fill="rgb(228,51,19)"/><text x="44.5337%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::MatchCase&gt;&gt; (470 samples, 0.43%)</title><rect x="43.8699%" y="1173" width="0.4312%" height="15" fill="rgb(213,20,6)"/><text x="44.1199%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::MatchCase&gt;&gt; (34 samples, 0.03%)</title><rect x="44.2699%" y="1157" width="0.0312%" height="15" fill="rgb(212,124,10)"/><text x="44.5199%" y="1167.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.03%)</title><rect x="44.2699%" y="1141" width="0.0312%" height="15" fill="rgb(248,3,40)"/><text x="44.5199%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (34 samples, 0.03%)</title><rect x="44.2699%" y="1125" width="0.0312%" height="15" fill="rgb(223,178,23)"/><text x="44.5199%" y="1135.50"></text></g><g><title>alloc::alloc::dealloc (34 samples, 0.03%)</title><rect x="44.2699%" y="1109" width="0.0312%" height="15" fill="rgb(240,132,45)"/><text x="44.5199%" y="1119.50"></text></g><g><title>_rjem_sdallocx (32 samples, 0.03%)</title><rect x="44.2718%" y="1093" width="0.0294%" height="15" fill="rgb(245,164,36)"/><text x="44.5218%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="44.3020%" y="1077" width="0.0101%" height="15" fill="rgb(231,188,53)"/><text x="44.5520%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="44.3020%" y="1061" width="0.0101%" height="15" fill="rgb(237,198,39)"/><text x="44.5520%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::bitset::BitSet&gt;&gt; (13 samples, 0.01%)</title><rect x="44.3011%" y="1173" width="0.0119%" height="15" fill="rgb(223,120,35)"/><text x="44.5511%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::bitset::BitSet&gt; (13 samples, 0.01%)</title><rect x="44.3011%" y="1157" width="0.0119%" height="15" fill="rgb(253,107,49)"/><text x="44.5511%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;bit_vec::BitVec&gt; (13 samples, 0.01%)</title><rect x="44.3011%" y="1141" width="0.0119%" height="15" fill="rgb(216,44,31)"/><text x="44.5511%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u32&gt;&gt; (13 samples, 0.01%)</title><rect x="44.3011%" y="1125" width="0.0119%" height="15" fill="rgb(253,87,21)"/><text x="44.5511%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u32&gt;&gt; (13 samples, 0.01%)</title><rect x="44.3011%" y="1109" width="0.0119%" height="15" fill="rgb(226,18,2)"/><text x="44.5511%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="44.3011%" y="1093" width="0.0119%" height="15" fill="rgb(216,8,46)"/><text x="44.5511%" y="1103.50"></text></g><g><title>_rjem_sdallocx (16 samples, 0.01%)</title><rect x="44.3149%" y="1157" width="0.0147%" height="15" fill="rgb(226,140,39)"/><text x="44.5649%" y="1167.50"></text></g><g><title>isfree (11 samples, 0.01%)</title><rect x="44.3195%" y="1141" width="0.0101%" height="15" fill="rgb(221,194,54)"/><text x="44.5695%" y="1151.50"></text></g><g><title>isdalloct (11 samples, 0.01%)</title><rect x="44.3195%" y="1125" width="0.0101%" height="15" fill="rgb(213,92,11)"/><text x="44.5695%" y="1135.50"></text></g><g><title>arena_sdalloc (11 samples, 0.01%)</title><rect x="44.3195%" y="1109" width="0.0101%" height="15" fill="rgb(229,162,46)"/><text x="44.5695%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="44.3342%" y="1125" width="0.0156%" height="15" fill="rgb(214,111,36)"/><text x="44.5842%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Expr]&gt; (16 samples, 0.01%)</title><rect x="44.3351%" y="1109" width="0.0147%" height="15" fill="rgb(207,6,21)"/><text x="44.5851%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Expr&gt; (13 samples, 0.01%)</title><rect x="44.3378%" y="1093" width="0.0119%" height="15" fill="rgb(213,127,38)"/><text x="44.5878%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::expr::ExprInstance&gt;&gt; (13 samples, 0.01%)</title><rect x="44.3378%" y="1077" width="0.0119%" height="15" fill="rgb(238,118,32)"/><text x="44.5878%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (21 samples, 0.02%)</title><rect x="44.3342%" y="1141" width="0.0193%" height="15" fill="rgb(240,139,39)"/><text x="44.5842%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Match&gt; (544 samples, 0.50%)</title><rect x="43.8699%" y="1189" width="0.4991%" height="15" fill="rgb(235,10,37)"/><text x="44.1199%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::Par&gt;&gt; (61 samples, 0.06%)</title><rect x="44.3131%" y="1173" width="0.0560%" height="15" fill="rgb(249,171,38)"/><text x="44.5631%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (43 samples, 0.04%)</title><rect x="44.3296%" y="1157" width="0.0394%" height="15" fill="rgb(242,144,32)"/><text x="44.5796%" y="1167.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (21 samples, 0.02%)</title><rect x="44.4507%" y="1173" width="0.0193%" height="15" fill="rgb(217,117,21)"/><text x="44.7007%" y="1183.50"></text></g><g><title>_rjem_sdallocx (18 samples, 0.02%)</title><rect x="44.4763%" y="1173" width="0.0165%" height="15" fill="rgb(249,87,1)"/><text x="44.7263%" y="1183.50"></text></g><g><title>isfree (16 samples, 0.01%)</title><rect x="44.4782%" y="1157" width="0.0147%" height="15" fill="rgb(248,196,48)"/><text x="44.7282%" y="1167.50"></text></g><g><title>isdalloct (16 samples, 0.01%)</title><rect x="44.4782%" y="1141" width="0.0147%" height="15" fill="rgb(251,206,33)"/><text x="44.7282%" y="1151.50"></text></g><g><title>arena_sdalloc (16 samples, 0.01%)</title><rect x="44.4782%" y="1125" width="0.0147%" height="15" fill="rgb(232,141,28)"/><text x="44.7282%" y="1135.50"></text></g><g><title>tcache_dalloc_small (15 samples, 0.01%)</title><rect x="44.4791%" y="1109" width="0.0138%" height="15" fill="rgb(209,167,14)"/><text x="44.7291%" y="1119.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (15 samples, 0.01%)</title><rect x="44.4929%" y="1173" width="0.0138%" height="15" fill="rgb(225,11,50)"/><text x="44.7429%" y="1183.50"></text></g><g><title>core::mem::take (15 samples, 0.01%)</title><rect x="44.4929%" y="1157" width="0.0138%" height="15" fill="rgb(209,50,20)"/><text x="44.7429%" y="1167.50"></text></g><g><title>core::mem::replace (15 samples, 0.01%)</title><rect x="44.4929%" y="1141" width="0.0138%" height="15" fill="rgb(212,17,46)"/><text x="44.7429%" y="1151.50"></text></g><g><title>core::mem::swap (15 samples, 0.01%)</title><rect x="44.4929%" y="1125" width="0.0138%" height="15" fill="rgb(216,101,39)"/><text x="44.7429%" y="1135.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (15 samples, 0.01%)</title><rect x="44.4929%" y="1109" width="0.0138%" height="15" fill="rgb(212,228,48)"/><text x="44.7429%" y="1119.50"></text></g><g><title>core::ptr::swap_nonoverlapping (15 samples, 0.01%)</title><rect x="44.4929%" y="1093" width="0.0138%" height="15" fill="rgb(250,6,50)"/><text x="44.7429%" y="1103.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (15 samples, 0.01%)</title><rect x="44.4929%" y="1077" width="0.0138%" height="15" fill="rgb(250,160,48)"/><text x="44.7429%" y="1087.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.01%)</title><rect x="44.4929%" y="1061" width="0.0138%" height="15" fill="rgb(244,216,33)"/><text x="44.7429%" y="1071.50"></text></g><g><title>isfree (18 samples, 0.02%)</title><rect x="44.5296%" y="1061" width="0.0165%" height="15" fill="rgb(207,157,5)"/><text x="44.7796%" y="1071.50"></text></g><g><title>isdalloct (18 samples, 0.02%)</title><rect x="44.5296%" y="1045" width="0.0165%" height="15" fill="rgb(228,199,8)"/><text x="44.7796%" y="1055.50"></text></g><g><title>arena_sdalloc (18 samples, 0.02%)</title><rect x="44.5296%" y="1029" width="0.0165%" height="15" fill="rgb(227,80,20)"/><text x="44.7796%" y="1039.50"></text></g><g><title>tcache_dalloc_small (18 samples, 0.02%)</title><rect x="44.5296%" y="1013" width="0.0165%" height="15" fill="rgb(222,9,33)"/><text x="44.7796%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (48 samples, 0.04%)</title><rect x="44.5066%" y="1173" width="0.0440%" height="15" fill="rgb(239,44,28)"/><text x="44.7566%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Send&gt;&gt; (33 samples, 0.03%)</title><rect x="44.5204%" y="1157" width="0.0303%" height="15" fill="rgb(249,187,43)"/><text x="44.7704%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Send&gt;&gt; (33 samples, 0.03%)</title><rect x="44.5204%" y="1141" width="0.0303%" height="15" fill="rgb(216,141,28)"/><text x="44.7704%" y="1151.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.03%)</title><rect x="44.5204%" y="1125" width="0.0303%" height="15" fill="rgb(230,154,53)"/><text x="44.7704%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (31 samples, 0.03%)</title><rect x="44.5222%" y="1109" width="0.0284%" height="15" fill="rgb(227,82,4)"/><text x="44.7722%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (31 samples, 0.03%)</title><rect x="44.5222%" y="1093" width="0.0284%" height="15" fill="rgb(220,107,16)"/><text x="44.7722%" y="1103.50"></text></g><g><title>_rjem_sdallocx (25 samples, 0.02%)</title><rect x="44.5277%" y="1077" width="0.0229%" height="15" fill="rgb(207,187,2)"/><text x="44.7777%" y="1087.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (14 samples, 0.01%)</title><rect x="44.5552%" y="1157" width="0.0128%" height="15" fill="rgb(210,162,52)"/><text x="44.8052%" y="1167.50"></text></g><g><title>model::ordering::sort_par::&lt;impl model::ordering::Sortable for model::rho_types::Par&gt;::sort (16 samples, 0.01%)</title><rect x="44.5681%" y="1157" width="0.0147%" height="15" fill="rgb(217,216,49)"/><text x="44.8181%" y="1167.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="44.5984%" y="1141" width="0.0128%" height="15" fill="rgb(218,146,49)"/><text x="44.8484%" y="1151.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (83 samples, 0.08%)</title><rect x="44.6241%" y="1125" width="0.0761%" height="15" fill="rgb(216,55,40)"/><text x="44.8741%" y="1135.50"></text></g><g><title>core::ptr::read (80 samples, 0.07%)</title><rect x="44.6268%" y="1109" width="0.0734%" height="15" fill="rgb(208,196,21)"/><text x="44.8768%" y="1119.50"></text></g><g><title>[libc-2.31.so] (75 samples, 0.07%)</title><rect x="44.6314%" y="1093" width="0.0688%" height="15" fill="rgb(242,117,42)"/><text x="44.8814%" y="1103.50"></text></g><g><title>[libc-2.31.so] (95 samples, 0.09%)</title><rect x="44.7029%" y="1125" width="0.0872%" height="15" fill="rgb(210,11,23)"/><text x="44.9529%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (69 samples, 0.06%)</title><rect x="44.7901%" y="1109" width="0.0633%" height="15" fill="rgb(217,110,2)"/><text x="45.0401%" y="1119.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (65 samples, 0.06%)</title><rect x="44.7938%" y="1093" width="0.0596%" height="15" fill="rgb(229,77,54)"/><text x="45.0438%" y="1103.50"></text></g><g><title>[libc-2.31.so] (65 samples, 0.06%)</title><rect x="44.7938%" y="1077" width="0.0596%" height="15" fill="rgb(218,53,16)"/><text x="45.0438%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (70 samples, 0.06%)</title><rect x="44.7901%" y="1125" width="0.0642%" height="15" fill="rgb(215,38,13)"/><text x="45.0401%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (14 samples, 0.01%)</title><rect x="44.8543%" y="1125" width="0.0128%" height="15" fill="rgb(235,42,18)"/><text x="45.1043%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.01%)</title><rect x="44.8543%" y="1109" width="0.0128%" height="15" fill="rgb(219,66,54)"/><text x="45.1043%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.01%)</title><rect x="44.8562%" y="1093" width="0.0110%" height="15" fill="rgb(222,205,4)"/><text x="45.1062%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.01%)</title><rect x="44.8562%" y="1077" width="0.0110%" height="15" fill="rgb(227,213,46)"/><text x="45.1062%" y="1087.50"></text></g><g><title>isfree (13 samples, 0.01%)</title><rect x="44.8864%" y="1093" width="0.0119%" height="15" fill="rgb(250,145,42)"/><text x="45.1364%" y="1103.50"></text></g><g><title>isdalloct (12 samples, 0.01%)</title><rect x="44.8873%" y="1077" width="0.0110%" height="15" fill="rgb(219,15,2)"/><text x="45.1373%" y="1087.50"></text></g><g><title>arena_sdalloc (12 samples, 0.01%)</title><rect x="44.8873%" y="1061" width="0.0110%" height="15" fill="rgb(231,181,52)"/><text x="45.1373%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;model::rho_types::Expr&gt;&gt; (35 samples, 0.03%)</title><rect x="44.8672%" y="1125" width="0.0321%" height="15" fill="rgb(235,1,42)"/><text x="45.1172%" y="1135.50"></text></g><g><title>_rjem_sdallocx (25 samples, 0.02%)</title><rect x="44.8763%" y="1109" width="0.0229%" height="15" fill="rgb(249,88,27)"/><text x="45.1263%" y="1119.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::handle_comm_events (2,116 samples, 1.94%)</title><rect x="42.9617%" y="1221" width="1.9412%" height="15" fill="rgb(235,145,16)"/><text x="43.2117%" y="1231.50">r..</text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate (1,259 samples, 1.16%)</title><rect x="43.7479%" y="1205" width="1.1550%" height="15" fill="rgb(237,114,19)"/><text x="43.9979%" y="1215.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_match::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Match&gt;::evaluate (574 samples, 0.53%)</title><rect x="44.3764%" y="1189" width="0.5266%" height="15" fill="rgb(238,51,50)"/><text x="44.6264%" y="1199.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute (383 samples, 0.35%)</title><rect x="44.5516%" y="1173" width="0.3514%" height="15" fill="rgb(205,194,25)"/><text x="44.8016%" y="1183.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute_no_sort (349 samples, 0.32%)</title><rect x="44.5828%" y="1157" width="0.3202%" height="15" fill="rgb(215,203,17)"/><text x="44.8328%" y="1167.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::substitute_expressions_in_par (315 samples, 0.29%)</title><rect x="44.6140%" y="1141" width="0.2890%" height="15" fill="rgb(233,112,49)"/><text x="44.8640%" y="1151.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (12 samples, 0.01%)</title><rect x="44.9029%" y="1221" width="0.0110%" height="15" fill="rgb(241,130,26)"/><text x="45.1529%" y="1231.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (30 samples, 0.03%)</title><rect x="44.9644%" y="1173" width="0.0275%" height="15" fill="rgb(252,223,19)"/><text x="45.2144%" y="1183.50"></text></g><g><title>[libc-2.31.so] (29 samples, 0.03%)</title><rect x="44.9653%" y="1157" width="0.0266%" height="15" fill="rgb(211,95,25)"/><text x="45.2153%" y="1167.50"></text></g><g><title>[libc-2.31.so] (25 samples, 0.02%)</title><rect x="44.9974%" y="1157" width="0.0229%" height="15" fill="rgb(251,182,27)"/><text x="45.2474%" y="1167.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (45 samples, 0.04%)</title><rect x="44.9919%" y="1173" width="0.0413%" height="15" fill="rgb(238,24,4)"/><text x="45.2419%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (12 samples, 0.01%)</title><rect x="45.0222%" y="1157" width="0.0110%" height="15" fill="rgb(224,220,25)"/><text x="45.2722%" y="1167.50"></text></g><g><title>core::ptr::read (11 samples, 0.01%)</title><rect x="45.0231%" y="1141" width="0.0101%" height="15" fill="rgb(239,133,26)"/><text x="45.2731%" y="1151.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.01%)</title><rect x="45.0231%" y="1125" width="0.0101%" height="15" fill="rgb(211,94,48)"/><text x="45.2731%" y="1135.50"></text></g><g><title>[libc-2.31.so] (93 samples, 0.09%)</title><rect x="45.0332%" y="1173" width="0.0853%" height="15" fill="rgb(239,87,6)"/><text x="45.2832%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (24 samples, 0.02%)</title><rect x="45.1259%" y="1157" width="0.0220%" height="15" fill="rgb(227,62,0)"/><text x="45.3759%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (22 samples, 0.02%)</title><rect x="45.1277%" y="1141" width="0.0202%" height="15" fill="rgb(211,226,4)"/><text x="45.3777%" y="1151.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="45.1277%" y="1125" width="0.0202%" height="15" fill="rgb(253,38,52)"/><text x="45.3777%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (22 samples, 0.02%)</title><rect x="45.1277%" y="1109" width="0.0202%" height="15" fill="rgb(229,126,40)"/><text x="45.3777%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (22 samples, 0.02%)</title><rect x="45.1277%" y="1093" width="0.0202%" height="15" fill="rgb(229,165,44)"/><text x="45.3777%" y="1103.50"></text></g><g><title>_rjem_sdallocx (19 samples, 0.02%)</title><rect x="45.1305%" y="1077" width="0.0174%" height="15" fill="rgb(247,95,47)"/><text x="45.3805%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (33 samples, 0.03%)</title><rect x="45.1222%" y="1173" width="0.0303%" height="15" fill="rgb(216,140,30)"/><text x="45.3722%" y="1183.50"></text></g><g><title>alloc::slice::hack::to_vec (54 samples, 0.05%)</title><rect x="45.1956%" y="1109" width="0.0495%" height="15" fill="rgb(246,214,8)"/><text x="45.4456%" y="1119.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (54 samples, 0.05%)</title><rect x="45.1956%" y="1093" width="0.0495%" height="15" fill="rgb(227,224,15)"/><text x="45.4456%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (37 samples, 0.03%)</title><rect x="45.2112%" y="1077" width="0.0339%" height="15" fill="rgb(233,175,4)"/><text x="45.4612%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.01%)</title><rect x="45.2323%" y="1061" width="0.0128%" height="15" fill="rgb(221,66,45)"/><text x="45.4823%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (14 samples, 0.01%)</title><rect x="45.2323%" y="1045" width="0.0128%" height="15" fill="rgb(221,178,18)"/><text x="45.4823%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (63 samples, 0.06%)</title><rect x="45.1882%" y="1141" width="0.0578%" height="15" fill="rgb(213,81,29)"/><text x="45.4382%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (55 samples, 0.05%)</title><rect x="45.1956%" y="1125" width="0.0505%" height="15" fill="rgb(220,89,49)"/><text x="45.4456%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (20 samples, 0.02%)</title><rect x="45.2479%" y="1029" width="0.0183%" height="15" fill="rgb(227,60,33)"/><text x="45.4979%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20 samples, 0.02%)</title><rect x="45.2479%" y="1013" width="0.0183%" height="15" fill="rgb(205,113,12)"/><text x="45.4979%" y="1023.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (29 samples, 0.03%)</title><rect x="45.2460%" y="1141" width="0.0266%" height="15" fill="rgb(211,32,1)"/><text x="45.4960%" y="1151.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (29 samples, 0.03%)</title><rect x="45.2460%" y="1125" width="0.0266%" height="15" fill="rgb(246,2,12)"/><text x="45.4960%" y="1135.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (29 samples, 0.03%)</title><rect x="45.2460%" y="1109" width="0.0266%" height="15" fill="rgb(243,37,27)"/><text x="45.4960%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (27 samples, 0.02%)</title><rect x="45.2479%" y="1093" width="0.0248%" height="15" fill="rgb(248,211,31)"/><text x="45.4979%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (27 samples, 0.02%)</title><rect x="45.2479%" y="1077" width="0.0248%" height="15" fill="rgb(242,146,47)"/><text x="45.4979%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (27 samples, 0.02%)</title><rect x="45.2479%" y="1061" width="0.0248%" height="15" fill="rgb(206,70,20)"/><text x="45.4979%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (27 samples, 0.02%)</title><rect x="45.2479%" y="1045" width="0.0248%" height="15" fill="rgb(215,10,51)"/><text x="45.4979%" y="1055.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (129 samples, 0.12%)</title><rect x="45.1552%" y="1157" width="0.1183%" height="15" fill="rgb(243,178,53)"/><text x="45.4052%" y="1167.50"></text></g><g><title>[libc-2.31.so] (12 samples, 0.01%)</title><rect x="45.2736%" y="1157" width="0.0110%" height="15" fill="rgb(233,221,20)"/><text x="45.5236%" y="1167.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (404 samples, 0.37%)</title><rect x="44.9149%" y="1205" width="0.3706%" height="15" fill="rgb(218,95,35)"/><text x="45.1649%" y="1215.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (404 samples, 0.37%)</title><rect x="44.9149%" y="1189" width="0.3706%" height="15" fill="rgb(229,13,5)"/><text x="45.1649%" y="1199.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_var::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S,model::rho_types::Par&gt; for model::rho_types::Var&gt;::evaluate (145 samples, 0.13%)</title><rect x="45.1525%" y="1173" width="0.1330%" height="15" fill="rgb(252,164,30)"/><text x="45.4025%" y="1183.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (86 samples, 0.08%)</title><rect x="45.3387%" y="1157" width="0.0789%" height="15" fill="rgb(232,68,36)"/><text x="45.5887%" y="1167.50"></text></g><g><title>[libc-2.31.so] (80 samples, 0.07%)</title><rect x="45.3442%" y="1141" width="0.0734%" height="15" fill="rgb(219,59,54)"/><text x="45.5942%" y="1151.50"></text></g><g><title>[libc-2.31.so] (96 samples, 0.09%)</title><rect x="45.4323%" y="1141" width="0.0881%" height="15" fill="rgb(250,92,33)"/><text x="45.6823%" y="1151.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (145 samples, 0.13%)</title><rect x="45.4176%" y="1157" width="0.1330%" height="15" fill="rgb(229,162,54)"/><text x="45.6676%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (31 samples, 0.03%)</title><rect x="45.5222%" y="1141" width="0.0284%" height="15" fill="rgb(244,114,52)"/><text x="45.7722%" y="1151.50"></text></g><g><title>core::ptr::read (30 samples, 0.03%)</title><rect x="45.5231%" y="1125" width="0.0275%" height="15" fill="rgb(212,211,43)"/><text x="45.7731%" y="1135.50"></text></g><g><title>[libc-2.31.so] (28 samples, 0.03%)</title><rect x="45.5249%" y="1109" width="0.0257%" height="15" fill="rgb(226,147,8)"/><text x="45.7749%" y="1119.50"></text></g><g><title>[libc-2.31.so] (196 samples, 0.18%)</title><rect x="45.5506%" y="1157" width="0.1798%" height="15" fill="rgb(226,23,13)"/><text x="45.8006%" y="1167.50"></text></g><g><title>isfree (12 samples, 0.01%)</title><rect x="45.7350%" y="1125" width="0.0110%" height="15" fill="rgb(240,63,4)"/><text x="45.9850%" y="1135.50"></text></g><g><title>isdalloct (11 samples, 0.01%)</title><rect x="45.7359%" y="1109" width="0.0101%" height="15" fill="rgb(221,1,32)"/><text x="45.9859%" y="1119.50"></text></g><g><title>arena_sdalloc (11 samples, 0.01%)</title><rect x="45.7359%" y="1093" width="0.0101%" height="15" fill="rgb(242,117,10)"/><text x="45.9859%" y="1103.50"></text></g><g><title>_rjem_sdallocx (15 samples, 0.01%)</title><rect x="45.7332%" y="1141" width="0.0138%" height="15" fill="rgb(249,172,44)"/><text x="45.9832%" y="1151.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (21 samples, 0.02%)</title><rect x="45.7625%" y="949" width="0.0193%" height="15" fill="rgb(244,46,45)"/><text x="46.0125%" y="959.50"></text></g><g><title>arena_dalloc_bin_locked_impl (18 samples, 0.02%)</title><rect x="45.7653%" y="933" width="0.0165%" height="15" fill="rgb(206,43,17)"/><text x="46.0153%" y="943.50"></text></g><g><title>isfree (45 samples, 0.04%)</title><rect x="45.7570%" y="1029" width="0.0413%" height="15" fill="rgb(239,218,39)"/><text x="46.0070%" y="1039.50"></text></g><g><title>isdalloct (45 samples, 0.04%)</title><rect x="45.7570%" y="1013" width="0.0413%" height="15" fill="rgb(208,169,54)"/><text x="46.0070%" y="1023.50"></text></g><g><title>arena_sdalloc (45 samples, 0.04%)</title><rect x="45.7570%" y="997" width="0.0413%" height="15" fill="rgb(247,25,42)"/><text x="46.0070%" y="1007.50"></text></g><g><title>tcache_dalloc_small (43 samples, 0.04%)</title><rect x="45.7589%" y="981" width="0.0394%" height="15" fill="rgb(226,23,31)"/><text x="46.0089%" y="991.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (41 samples, 0.04%)</title><rect x="45.7607%" y="965" width="0.0376%" height="15" fill="rgb(247,16,28)"/><text x="46.0107%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (55 samples, 0.05%)</title><rect x="45.7488%" y="1077" width="0.0505%" height="15" fill="rgb(231,147,38)"/><text x="45.9988%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (55 samples, 0.05%)</title><rect x="45.7488%" y="1061" width="0.0505%" height="15" fill="rgb(253,81,48)"/><text x="45.9988%" y="1071.50"></text></g><g><title>_rjem_sdallocx (52 samples, 0.05%)</title><rect x="45.7515%" y="1045" width="0.0477%" height="15" fill="rgb(249,222,43)"/><text x="46.0015%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (57 samples, 0.05%)</title><rect x="45.7479%" y="1125" width="0.0523%" height="15" fill="rgb(221,3,27)"/><text x="45.9979%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (56 samples, 0.05%)</title><rect x="45.7488%" y="1109" width="0.0514%" height="15" fill="rgb(228,180,5)"/><text x="45.9988%" y="1119.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 0.05%)</title><rect x="45.7488%" y="1093" width="0.0514%" height="15" fill="rgb(227,131,42)"/><text x="45.9988%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (63 samples, 0.06%)</title><rect x="45.7469%" y="1141" width="0.0578%" height="15" fill="rgb(212,3,39)"/><text x="45.9969%" y="1151.50"></text></g><g><title>_rjem_sdallocx (18 samples, 0.02%)</title><rect x="45.8194%" y="1125" width="0.0165%" height="15" fill="rgb(226,45,5)"/><text x="46.0694%" y="1135.50"></text></g><g><title>isfree (13 samples, 0.01%)</title><rect x="45.8240%" y="1109" width="0.0119%" height="15" fill="rgb(215,167,45)"/><text x="46.0740%" y="1119.50"></text></g><g><title>isdalloct (13 samples, 0.01%)</title><rect x="45.8240%" y="1093" width="0.0119%" height="15" fill="rgb(250,218,53)"/><text x="46.0740%" y="1103.50"></text></g><g><title>arena_sdalloc (13 samples, 0.01%)</title><rect x="45.8240%" y="1077" width="0.0119%" height="15" fill="rgb(207,140,0)"/><text x="46.0740%" y="1087.50"></text></g><g><title>tcache_dalloc_small (11 samples, 0.01%)</title><rect x="45.8258%" y="1061" width="0.0101%" height="15" fill="rgb(238,133,51)"/><text x="46.0758%" y="1071.50"></text></g><g><title>arena_dalloc_bin_slab (11 samples, 0.01%)</title><rect x="45.8671%" y="901" width="0.0101%" height="15" fill="rgb(218,203,53)"/><text x="46.1171%" y="911.50"></text></g><g><title>arena_slab_dalloc (11 samples, 0.01%)</title><rect x="45.8671%" y="885" width="0.0101%" height="15" fill="rgb(226,184,25)"/><text x="46.1171%" y="895.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (25 samples, 0.02%)</title><rect x="45.8607%" y="933" width="0.0229%" height="15" fill="rgb(231,121,21)"/><text x="46.1107%" y="943.50"></text></g><g><title>arena_dalloc_bin_locked_impl (24 samples, 0.02%)</title><rect x="45.8616%" y="917" width="0.0220%" height="15" fill="rgb(251,14,34)"/><text x="46.1116%" y="927.50"></text></g><g><title>malloc_mutex_lock (15 samples, 0.01%)</title><rect x="45.8928%" y="933" width="0.0138%" height="15" fill="rgb(249,193,11)"/><text x="46.1428%" y="943.50"></text></g><g><title>malloc_mutex_trylock_final (15 samples, 0.01%)</title><rect x="45.8928%" y="917" width="0.0138%" height="15" fill="rgb(220,172,37)"/><text x="46.1428%" y="927.50"></text></g><g><title>__GI___pthread_mutex_trylock (15 samples, 0.01%)</title><rect x="45.8928%" y="901" width="0.0138%" height="15" fill="rgb(231,229,43)"/><text x="46.1428%" y="911.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (61 samples, 0.06%)</title><rect x="45.8561%" y="949" width="0.0560%" height="15" fill="rgb(250,161,5)"/><text x="46.1061%" y="959.50"></text></g><g><title>isfree (71 samples, 0.07%)</title><rect x="45.8488%" y="1013" width="0.0651%" height="15" fill="rgb(218,225,18)"/><text x="46.0988%" y="1023.50"></text></g><g><title>isdalloct (71 samples, 0.07%)</title><rect x="45.8488%" y="997" width="0.0651%" height="15" fill="rgb(245,45,42)"/><text x="46.0988%" y="1007.50"></text></g><g><title>arena_sdalloc (71 samples, 0.07%)</title><rect x="45.8488%" y="981" width="0.0651%" height="15" fill="rgb(211,115,1)"/><text x="46.0988%" y="991.50"></text></g><g><title>tcache_dalloc_small (69 samples, 0.06%)</title><rect x="45.8506%" y="965" width="0.0633%" height="15" fill="rgb(248,133,52)"/><text x="46.1006%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (86 samples, 0.08%)</title><rect x="45.8359%" y="1109" width="0.0789%" height="15" fill="rgb(238,100,21)"/><text x="46.0859%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (84 samples, 0.08%)</title><rect x="45.8378%" y="1093" width="0.0771%" height="15" fill="rgb(247,144,11)"/><text x="46.0878%" y="1103.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (84 samples, 0.08%)</title><rect x="45.8378%" y="1077" width="0.0771%" height="15" fill="rgb(206,164,16)"/><text x="46.0878%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (84 samples, 0.08%)</title><rect x="45.8378%" y="1061" width="0.0771%" height="15" fill="rgb(222,34,3)"/><text x="46.0878%" y="1071.50"></text></g><g><title>alloc::alloc::dealloc (83 samples, 0.08%)</title><rect x="45.8387%" y="1045" width="0.0761%" height="15" fill="rgb(248,82,4)"/><text x="46.0887%" y="1055.50"></text></g><g><title>_rjem_sdallocx (78 samples, 0.07%)</title><rect x="45.8433%" y="1029" width="0.0716%" height="15" fill="rgb(228,81,46)"/><text x="46.0933%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::expr::ExprInstance&gt;&gt; (208 samples, 0.19%)</title><rect x="45.7304%" y="1157" width="0.1908%" height="15" fill="rgb(227,67,47)"/><text x="45.9804%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::expr::ExprInstance&gt; (127 samples, 0.12%)</title><rect x="45.8047%" y="1141" width="0.1165%" height="15" fill="rgb(215,93,53)"/><text x="46.0547%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (93 samples, 0.09%)</title><rect x="45.8359%" y="1125" width="0.0853%" height="15" fill="rgb(248,194,39)"/><text x="46.0859%" y="1135.50"></text></g><g><title>isfree (30 samples, 0.03%)</title><rect x="45.9488%" y="1045" width="0.0275%" height="15" fill="rgb(215,5,19)"/><text x="46.1988%" y="1055.50"></text></g><g><title>isdalloct (29 samples, 0.03%)</title><rect x="45.9497%" y="1029" width="0.0266%" height="15" fill="rgb(226,215,51)"/><text x="46.1997%" y="1039.50"></text></g><g><title>arena_sdalloc (29 samples, 0.03%)</title><rect x="45.9497%" y="1013" width="0.0266%" height="15" fill="rgb(225,56,26)"/><text x="46.1997%" y="1023.50"></text></g><g><title>tcache_dalloc_small (26 samples, 0.02%)</title><rect x="45.9524%" y="997" width="0.0239%" height="15" fill="rgb(222,75,29)"/><text x="46.2024%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (53 samples, 0.05%)</title><rect x="45.9332%" y="1141" width="0.0486%" height="15" fill="rgb(236,139,6)"/><text x="46.1832%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (52 samples, 0.05%)</title><rect x="45.9341%" y="1125" width="0.0477%" height="15" fill="rgb(223,137,36)"/><text x="46.1841%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (52 samples, 0.05%)</title><rect x="45.9341%" y="1109" width="0.0477%" height="15" fill="rgb(226,99,2)"/><text x="46.1841%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (52 samples, 0.05%)</title><rect x="45.9341%" y="1093" width="0.0477%" height="15" fill="rgb(206,133,23)"/><text x="46.1841%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (52 samples, 0.05%)</title><rect x="45.9341%" y="1077" width="0.0477%" height="15" fill="rgb(243,173,15)"/><text x="46.1841%" y="1087.50"></text></g><g><title>_rjem_sdallocx (45 samples, 0.04%)</title><rect x="45.9405%" y="1061" width="0.0413%" height="15" fill="rgb(228,69,28)"/><text x="46.1905%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (92 samples, 0.08%)</title><rect x="45.9213%" y="1157" width="0.0844%" height="15" fill="rgb(212,51,22)"/><text x="46.1713%" y="1167.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (51 samples, 0.05%)</title><rect x="46.0203%" y="1141" width="0.0468%" height="15" fill="rgb(227,113,0)"/><text x="46.2703%" y="1151.50"></text></g><g><title>[libc-2.31.so] (32 samples, 0.03%)</title><rect x="46.0378%" y="1125" width="0.0294%" height="15" fill="rgb(252,84,27)"/><text x="46.2878%" y="1135.50"></text></g><g><title>[libc-2.31.so] (51 samples, 0.05%)</title><rect x="46.0772%" y="1125" width="0.0468%" height="15" fill="rgb(223,145,39)"/><text x="46.3272%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (13 samples, 0.01%)</title><rect x="46.1240%" y="1125" width="0.0119%" height="15" fill="rgb(239,219,30)"/><text x="46.3740%" y="1135.50"></text></g><g><title>[libc-2.31.so] (62 samples, 0.06%)</title><rect x="46.1809%" y="1093" width="0.0569%" height="15" fill="rgb(224,196,39)"/><text x="46.4309%" y="1103.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (187 samples, 0.17%)</title><rect x="46.0671%" y="1141" width="0.1716%" height="15" fill="rgb(205,35,43)"/><text x="46.3171%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (112 samples, 0.10%)</title><rect x="46.1359%" y="1125" width="0.1027%" height="15" fill="rgb(228,201,21)"/><text x="46.3859%" y="1135.50"></text></g><g><title>core::ptr::read (110 samples, 0.10%)</title><rect x="46.1378%" y="1109" width="0.1009%" height="15" fill="rgb(237,118,16)"/><text x="46.3878%" y="1119.50"></text></g><g><title>[libc-2.31.so] (76 samples, 0.07%)</title><rect x="46.2387%" y="1141" width="0.0697%" height="15" fill="rgb(241,17,19)"/><text x="46.4887%" y="1151.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::eval_eplus::&lt;impl rho_runtime::interpreter::reduce::eval_expression::ExprInstanceEvaluator&lt;S&gt; for model::rho_types::EPlus&gt;::evaluate (334 samples, 0.31%)</title><rect x="46.0057%" y="1157" width="0.3064%" height="15" fill="rgb(214,10,25)"/><text x="46.2557%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (20 samples, 0.02%)</title><rect x="46.3799%" y="1109" width="0.0183%" height="15" fill="rgb(238,37,29)"/><text x="46.6299%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.02%)</title><rect x="46.4845%" y="1013" width="0.0156%" height="15" fill="rgb(253,83,25)"/><text x="46.7345%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="46.4845%" y="997" width="0.0156%" height="15" fill="rgb(234,192,12)"/><text x="46.7345%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (19 samples, 0.02%)</title><rect x="46.5001%" y="1013" width="0.0174%" height="15" fill="rgb(241,216,45)"/><text x="46.7501%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (48 samples, 0.04%)</title><rect x="46.4781%" y="1045" width="0.0440%" height="15" fill="rgb(242,22,33)"/><text x="46.7281%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (48 samples, 0.04%)</title><rect x="46.4781%" y="1029" width="0.0440%" height="15" fill="rgb(231,105,49)"/><text x="46.7281%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (160 samples, 0.15%)</title><rect x="46.3763%" y="1125" width="0.1468%" height="15" fill="rgb(218,204,15)"/><text x="46.6263%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (136 samples, 0.12%)</title><rect x="46.3983%" y="1109" width="0.1248%" height="15" fill="rgb(235,138,41)"/><text x="46.6483%" y="1119.50"></text></g><g><title>alloc::slice::hack::to_vec (134 samples, 0.12%)</title><rect x="46.4001%" y="1093" width="0.1229%" height="15" fill="rgb(246,0,9)"/><text x="46.6501%" y="1103.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (134 samples, 0.12%)</title><rect x="46.4001%" y="1077" width="0.1229%" height="15" fill="rgb(210,74,4)"/><text x="46.6501%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (102 samples, 0.09%)</title><rect x="46.4295%" y="1061" width="0.0936%" height="15" fill="rgb(250,60,41)"/><text x="46.6795%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (27 samples, 0.02%)</title><rect x="46.5295%" y="1013" width="0.0248%" height="15" fill="rgb(220,115,12)"/><text x="46.7795%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (27 samples, 0.02%)</title><rect x="46.5295%" y="997" width="0.0248%" height="15" fill="rgb(237,100,13)"/><text x="46.7795%" y="1007.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (45 samples, 0.04%)</title><rect x="46.5231%" y="1125" width="0.0413%" height="15" fill="rgb(213,55,26)"/><text x="46.7731%" y="1135.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (44 samples, 0.04%)</title><rect x="46.5240%" y="1109" width="0.0404%" height="15" fill="rgb(216,17,4)"/><text x="46.7740%" y="1119.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (44 samples, 0.04%)</title><rect x="46.5240%" y="1093" width="0.0404%" height="15" fill="rgb(220,153,47)"/><text x="46.7740%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (41 samples, 0.04%)</title><rect x="46.5267%" y="1077" width="0.0376%" height="15" fill="rgb(215,131,9)"/><text x="46.7767%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (38 samples, 0.03%)</title><rect x="46.5295%" y="1061" width="0.0349%" height="15" fill="rgb(233,46,42)"/><text x="46.7795%" y="1071.50"></text></g><g><title>alloc::slice::hack::to_vec (38 samples, 0.03%)</title><rect x="46.5295%" y="1045" width="0.0349%" height="15" fill="rgb(226,86,7)"/><text x="46.7795%" y="1055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (38 samples, 0.03%)</title><rect x="46.5295%" y="1029" width="0.0349%" height="15" fill="rgb(239,226,21)"/><text x="46.7795%" y="1039.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (11 samples, 0.01%)</title><rect x="46.5543%" y="1013" width="0.0101%" height="15" fill="rgb(244,137,22)"/><text x="46.8043%" y="1023.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.01%)</title><rect x="46.5543%" y="997" width="0.0101%" height="15" fill="rgb(211,139,35)"/><text x="46.8043%" y="1007.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.01%)</title><rect x="46.5543%" y="981" width="0.0101%" height="15" fill="rgb(214,62,50)"/><text x="46.8043%" y="991.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (265 samples, 0.24%)</title><rect x="46.3231%" y="1141" width="0.2431%" height="15" fill="rgb(212,113,44)"/><text x="46.5731%" y="1151.50"></text></g><g><title>[libc-2.31.so] (33 samples, 0.03%)</title><rect x="46.5662%" y="1141" width="0.0303%" height="15" fill="rgb(226,150,43)"/><text x="46.8162%" y="1151.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::eval_eplus::&lt;impl rho_runtime::interpreter::reduce::eval_expression::ExprInstanceEvaluator&lt;S&gt; for model::rho_types::EPlus&gt;::evaluate (1,436 samples, 1.32%)</title><rect x="45.2855%" y="1205" width="1.3174%" height="15" fill="rgb(250,71,37)"/><text x="45.5355%" y="1215.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_single_expression (1,436 samples, 1.32%)</title><rect x="45.2855%" y="1189" width="1.3174%" height="15" fill="rgb(219,76,19)"/><text x="45.5355%" y="1199.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (1,436 samples, 1.32%)</title><rect x="45.2855%" y="1173" width="1.3174%" height="15" fill="rgb(250,39,11)"/><text x="45.5355%" y="1183.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_var::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S,model::rho_types::Par&gt; for model::rho_types::Var&gt;::evaluate (317 samples, 0.29%)</title><rect x="46.3121%" y="1157" width="0.2908%" height="15" fill="rgb(230,64,31)"/><text x="46.5621%" y="1167.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (148 samples, 0.14%)</title><rect x="46.6396%" y="1093" width="0.1358%" height="15" fill="rgb(208,222,23)"/><text x="46.8896%" y="1103.50"></text></g><g><title>[libc-2.31.so] (34 samples, 0.03%)</title><rect x="46.7442%" y="1077" width="0.0312%" height="15" fill="rgb(227,125,18)"/><text x="46.9942%" y="1087.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (256 samples, 0.23%)</title><rect x="46.6139%" y="1109" width="0.2349%" height="15" fill="rgb(234,210,9)"/><text x="46.8639%" y="1119.50"></text></g><g><title>[libc-2.31.so] (80 samples, 0.07%)</title><rect x="46.7753%" y="1093" width="0.0734%" height="15" fill="rgb(217,127,24)"/><text x="47.0253%" y="1103.50"></text></g><g><title>extent_recycle_extract (12 samples, 0.01%)</title><rect x="46.9093%" y="789" width="0.0110%" height="15" fill="rgb(239,141,48)"/><text x="47.1593%" y="799.50"></text></g><g><title>_rjem_je_extents_alloc (16 samples, 0.01%)</title><rect x="46.9075%" y="821" width="0.0147%" height="15" fill="rgb(227,109,8)"/><text x="47.1575%" y="831.50"></text></g><g><title>extent_recycle (15 samples, 0.01%)</title><rect x="46.9084%" y="805" width="0.0138%" height="15" fill="rgb(235,184,23)"/><text x="47.1584%" y="815.50"></text></g><g><title>arena_slab_alloc (19 samples, 0.02%)</title><rect x="46.9065%" y="837" width="0.0174%" height="15" fill="rgb(227,226,48)"/><text x="47.1565%" y="847.50"></text></g><g><title>arena_bin_nonfull_slab_get (26 samples, 0.02%)</title><rect x="46.9019%" y="853" width="0.0239%" height="15" fill="rgb(206,150,11)"/><text x="47.1519%" y="863.50"></text></g><g><title>arena_bin_malloc_hard (29 samples, 0.03%)</title><rect x="46.9010%" y="869" width="0.0266%" height="15" fill="rgb(254,2,33)"/><text x="47.1510%" y="879.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (47 samples, 0.04%)</title><rect x="46.8974%" y="885" width="0.0431%" height="15" fill="rgb(243,160,20)"/><text x="47.1474%" y="895.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (51 samples, 0.05%)</title><rect x="46.8946%" y="901" width="0.0468%" height="15" fill="rgb(218,208,30)"/><text x="47.1446%" y="911.50"></text></g><g><title>iallocztm (82 samples, 0.08%)</title><rect x="46.8873%" y="949" width="0.0752%" height="15" fill="rgb(224,120,49)"/><text x="47.1373%" y="959.50"></text></g><g><title>arena_malloc (82 samples, 0.08%)</title><rect x="46.8873%" y="933" width="0.0752%" height="15" fill="rgb(246,12,2)"/><text x="47.1373%" y="943.50"></text></g><g><title>tcache_alloc_small (79 samples, 0.07%)</title><rect x="46.8900%" y="917" width="0.0725%" height="15" fill="rgb(236,117,3)"/><text x="47.1400%" y="927.50"></text></g><g><title>cache_bin_alloc_easy (22 samples, 0.02%)</title><rect x="46.9423%" y="901" width="0.0202%" height="15" fill="rgb(216,128,52)"/><text x="47.1923%" y="911.50"></text></g><g><title>imalloc_no_sample (86 samples, 0.08%)</title><rect x="46.8845%" y="965" width="0.0789%" height="15" fill="rgb(246,145,19)"/><text x="47.1345%" y="975.50"></text></g><g><title>imalloc_body (99 samples, 0.09%)</title><rect x="46.8845%" y="981" width="0.0908%" height="15" fill="rgb(222,11,46)"/><text x="47.1345%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (138 samples, 0.13%)</title><rect x="46.8542%" y="1061" width="0.1266%" height="15" fill="rgb(245,82,36)"/><text x="47.1042%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (138 samples, 0.13%)</title><rect x="46.8542%" y="1045" width="0.1266%" height="15" fill="rgb(250,73,51)"/><text x="47.1042%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (138 samples, 0.13%)</title><rect x="46.8542%" y="1029" width="0.1266%" height="15" fill="rgb(221,189,23)"/><text x="47.1042%" y="1039.50"></text></g><g><title>_rjem_mallocx (124 samples, 0.11%)</title><rect x="46.8671%" y="1013" width="0.1138%" height="15" fill="rgb(210,33,7)"/><text x="47.1171%" y="1023.50"></text></g><g><title>imalloc (106 samples, 0.10%)</title><rect x="46.8836%" y="997" width="0.0972%" height="15" fill="rgb(210,107,22)"/><text x="47.1336%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (145 samples, 0.13%)</title><rect x="46.8515%" y="1109" width="0.1330%" height="15" fill="rgb(222,116,37)"/><text x="47.1015%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (144 samples, 0.13%)</title><rect x="46.8524%" y="1093" width="0.1321%" height="15" fill="rgb(254,17,48)"/><text x="47.1024%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (144 samples, 0.13%)</title><rect x="46.8524%" y="1077" width="0.1321%" height="15" fill="rgb(224,36,32)"/><text x="47.1024%" y="1087.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (81 samples, 0.07%)</title><rect x="46.9845%" y="1109" width="0.0743%" height="15" fill="rgb(232,90,46)"/><text x="47.2345%" y="1119.50"></text></g><g><title>[libc-2.31.so] (43 samples, 0.04%)</title><rect x="47.0194%" y="1093" width="0.0394%" height="15" fill="rgb(241,66,40)"/><text x="47.2694%" y="1103.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_expression::expr_instance::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Expr&gt;::evaluate (2,341 samples, 2.15%)</title><rect x="44.9149%" y="1221" width="2.1476%" height="15" fill="rgb(249,184,29)"/><text x="45.1649%" y="1231.50">r..</text></g><g><title>rho_runtime::interpreter::reduce::eval_var::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S,model::rho_types::Par&gt; for model::rho_types::Var&gt;::evaluate (501 samples, 0.46%)</title><rect x="46.6029%" y="1205" width="0.4596%" height="15" fill="rgb(231,181,1)"/><text x="46.8529%" y="1215.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (501 samples, 0.46%)</title><rect x="46.6029%" y="1189" width="0.4596%" height="15" fill="rgb(224,94,2)"/><text x="46.8529%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (501 samples, 0.46%)</title><rect x="46.6029%" y="1173" width="0.4596%" height="15" fill="rgb(229,170,15)"/><text x="46.8529%" y="1183.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (501 samples, 0.46%)</title><rect x="46.6029%" y="1157" width="0.4596%" height="15" fill="rgb(240,127,35)"/><text x="46.8529%" y="1167.50"></text></g><g><title>alloc::slice::hack::to_vec (501 samples, 0.46%)</title><rect x="46.6029%" y="1141" width="0.4596%" height="15" fill="rgb(248,196,34)"/><text x="46.8529%" y="1151.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (501 samples, 0.46%)</title><rect x="46.6029%" y="1125" width="0.4596%" height="15" fill="rgb(236,137,7)"/><text x="46.8529%" y="1135.50"></text></g><g><title>[libc-2.31.so] (63 samples, 0.06%)</title><rect x="47.0763%" y="1093" width="0.0578%" height="15" fill="rgb(235,127,16)"/><text x="47.3263%" y="1103.50"></text></g><g><title>tokio::runtime::task::joinable (66 samples, 0.06%)</title><rect x="47.0763%" y="1125" width="0.0605%" height="15" fill="rgb(250,192,54)"/><text x="47.3263%" y="1135.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (66 samples, 0.06%)</title><rect x="47.0763%" y="1109" width="0.0605%" height="15" fill="rgb(218,98,20)"/><text x="47.3263%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (52 samples, 0.05%)</title><rect x="47.2203%" y="1045" width="0.0477%" height="15" fill="rgb(230,176,47)"/><text x="47.4703%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_swap (52 samples, 0.05%)</title><rect x="47.2203%" y="1029" width="0.0477%" height="15" fill="rgb(244,2,33)"/><text x="47.4703%" y="1039.50"></text></g><g><title>core::mem::drop (11 samples, 0.01%)</title><rect x="47.2680%" y="1029" width="0.0101%" height="15" fill="rgb(231,100,17)"/><text x="47.5180%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,()&gt;&gt; (11 samples, 0.01%)</title><rect x="47.2680%" y="1013" width="0.0101%" height="15" fill="rgb(245,23,12)"/><text x="47.5180%" y="1023.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="47.2680%" y="997" width="0.0101%" height="15" fill="rgb(249,55,22)"/><text x="47.5180%" y="1007.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (11 samples, 0.01%)</title><rect x="47.2680%" y="981" width="0.0101%" height="15" fill="rgb(207,134,9)"/><text x="47.5180%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (11 samples, 0.01%)</title><rect x="47.2680%" y="965" width="0.0101%" height="15" fill="rgb(218,134,0)"/><text x="47.5180%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (11 samples, 0.01%)</title><rect x="47.2680%" y="949" width="0.0101%" height="15" fill="rgb(213,212,33)"/><text x="47.5180%" y="959.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (119 samples, 0.11%)</title><rect x="47.1781%" y="1077" width="0.1092%" height="15" fill="rgb(252,106,18)"/><text x="47.4281%" y="1087.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (79 samples, 0.07%)</title><rect x="47.2148%" y="1061" width="0.0725%" height="15" fill="rgb(208,126,42)"/><text x="47.4648%" y="1071.50"></text></g><g><title>tokio::runtime::park::Inner::unpark_condvar (21 samples, 0.02%)</title><rect x="47.2680%" y="1045" width="0.0193%" height="15" fill="rgb(246,175,29)"/><text x="47.5180%" y="1055.50"></text></g><g><title>entry_SYSCALL_64 (13 samples, 0.01%)</title><rect x="47.3258%" y="1013" width="0.0119%" height="15" fill="rgb(215,13,50)"/><text x="47.5758%" y="1023.50"></text></g><g><title>_raw_spin_lock (56 samples, 0.05%)</title><rect x="47.3717%" y="949" width="0.0514%" height="15" fill="rgb(216,172,15)"/><text x="47.6217%" y="959.50"></text></g><g><title>__unqueue_futex (42 samples, 0.04%)</title><rect x="47.5542%" y="917" width="0.0385%" height="15" fill="rgb(212,103,13)"/><text x="47.8042%" y="927.50"></text></g><g><title>mark_wake_futex (90 samples, 0.08%)</title><rect x="47.5157%" y="933" width="0.0826%" height="15" fill="rgb(231,171,36)"/><text x="47.7657%" y="943.50"></text></g><g><title>_raw_spin_lock (15 samples, 0.01%)</title><rect x="47.6322%" y="917" width="0.0138%" height="15" fill="rgb(250,123,20)"/><text x="47.8822%" y="927.50"></text></g><g><title>_raw_spin_lock_irqsave (15 samples, 0.01%)</title><rect x="47.6918%" y="901" width="0.0138%" height="15" fill="rgb(212,53,50)"/><text x="47.9418%" y="911.50"></text></g><g><title>available_idle_cpu (14 samples, 0.01%)</title><rect x="47.7588%" y="885" width="0.0128%" height="15" fill="rgb(243,54,12)"/><text x="48.0088%" y="895.50"></text></g><g><title>select_task_rq_fair (71 samples, 0.07%)</title><rect x="47.7111%" y="901" width="0.0651%" height="15" fill="rgb(234,101,34)"/><text x="47.9611%" y="911.50"></text></g><g><title>place_entity (25 samples, 0.02%)</title><rect x="47.9056%" y="853" width="0.0229%" height="15" fill="rgb(254,67,22)"/><text x="48.1556%" y="863.50"></text></g><g><title>update_cfs_group (32 samples, 0.03%)</title><rect x="47.9313%" y="853" width="0.0294%" height="15" fill="rgb(250,35,47)"/><text x="48.1813%" y="863.50"></text></g><g><title>reweight_entity (30 samples, 0.03%)</title><rect x="47.9331%" y="837" width="0.0275%" height="15" fill="rgb(226,126,38)"/><text x="48.1831%" y="847.50"></text></g><g><title>__update_load_avg_cfs_rq (23 samples, 0.02%)</title><rect x="47.9808%" y="837" width="0.0211%" height="15" fill="rgb(216,138,53)"/><text x="48.2308%" y="847.50"></text></g><g><title>enqueue_entity (191 samples, 0.18%)</title><rect x="47.8313%" y="869" width="0.1752%" height="15" fill="rgb(246,199,43)"/><text x="48.0813%" y="879.50"></text></g><g><title>update_load_avg (41 samples, 0.04%)</title><rect x="47.9689%" y="853" width="0.0376%" height="15" fill="rgb(232,125,11)"/><text x="48.2189%" y="863.50"></text></g><g><title>place_entity (11 samples, 0.01%)</title><rect x="48.0065%" y="869" width="0.0101%" height="15" fill="rgb(218,219,45)"/><text x="48.2565%" y="879.50"></text></g><g><title>enqueue_task_fair (241 samples, 0.22%)</title><rect x="47.8047%" y="885" width="0.2211%" height="15" fill="rgb(216,102,54)"/><text x="48.0547%" y="895.50"></text></g><g><title>psi_group_change (134 samples, 0.12%)</title><rect x="48.1037%" y="869" width="0.1229%" height="15" fill="rgb(250,228,7)"/><text x="48.3537%" y="879.50"></text></g><g><title>record_times (27 samples, 0.02%)</title><rect x="48.2019%" y="853" width="0.0248%" height="15" fill="rgb(226,125,25)"/><text x="48.4519%" y="863.50"></text></g><g><title>sched_clock_cpu (19 samples, 0.02%)</title><rect x="48.2092%" y="837" width="0.0174%" height="15" fill="rgb(224,165,27)"/><text x="48.4592%" y="847.50"></text></g><g><title>native_sched_clock (18 samples, 0.02%)</title><rect x="48.2102%" y="821" width="0.0165%" height="15" fill="rgb(233,86,3)"/><text x="48.4602%" y="831.50"></text></g><g><title>psi_task_change (216 samples, 0.20%)</title><rect x="48.0313%" y="885" width="0.1982%" height="15" fill="rgb(228,116,20)"/><text x="48.2813%" y="895.50"></text></g><g><title>check_preempt_curr (139 samples, 0.13%)</title><rect x="48.2322%" y="869" width="0.1275%" height="15" fill="rgb(209,192,17)"/><text x="48.4822%" y="879.50"></text></g><g><title>resched_curr (124 samples, 0.11%)</title><rect x="48.2459%" y="853" width="0.1138%" height="15" fill="rgb(224,88,34)"/><text x="48.4959%" y="863.50"></text></g><g><title>ttwu_do_activate (645 samples, 0.59%)</title><rect x="47.7762%" y="901" width="0.5917%" height="15" fill="rgb(233,38,6)"/><text x="48.0262%" y="911.50"></text></g><g><title>ttwu_do_wakeup (151 samples, 0.14%)</title><rect x="48.2294%" y="885" width="0.1385%" height="15" fill="rgb(212,59,30)"/><text x="48.4794%" y="895.50"></text></g><g><title>ttwu_queue_wakelist (25 samples, 0.02%)</title><rect x="48.3679%" y="901" width="0.0229%" height="15" fill="rgb(213,80,3)"/><text x="48.6179%" y="911.50"></text></g><g><title>update_cfs_rq_h_load (45 samples, 0.04%)</title><rect x="48.3909%" y="901" width="0.0413%" height="15" fill="rgb(251,178,7)"/><text x="48.6409%" y="911.50"></text></g><g><title>try_to_wake_up (900 samples, 0.83%)</title><rect x="47.6487%" y="917" width="0.8257%" height="15" fill="rgb(213,154,26)"/><text x="47.8987%" y="927.50"></text></g><g><title>update_rq_clock (46 samples, 0.04%)</title><rect x="48.4322%" y="901" width="0.0422%" height="15" fill="rgb(238,165,49)"/><text x="48.6822%" y="911.50"></text></g><g><title>sched_clock_cpu (13 samples, 0.01%)</title><rect x="48.4624%" y="885" width="0.0119%" height="15" fill="rgb(248,91,46)"/><text x="48.7124%" y="895.50"></text></g><g><title>native_sched_clock (12 samples, 0.01%)</title><rect x="48.4634%" y="869" width="0.0110%" height="15" fill="rgb(244,21,52)"/><text x="48.7134%" y="879.50"></text></g><g><title>futex_wake (1,149 samples, 1.05%)</title><rect x="47.4230%" y="949" width="1.0541%" height="15" fill="rgb(247,122,20)"/><text x="47.6730%" y="959.50"></text></g><g><title>wake_up_q (949 samples, 0.87%)</title><rect x="47.6065%" y="933" width="0.8706%" height="15" fill="rgb(218,27,9)"/><text x="47.8565%" y="943.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,253 samples, 1.15%)</title><rect x="47.3377%" y="1013" width="1.1495%" height="15" fill="rgb(246,7,6)"/><text x="47.5877%" y="1023.50"></text></g><g><title>do_syscall_64 (1,246 samples, 1.14%)</title><rect x="47.3441%" y="997" width="1.1431%" height="15" fill="rgb(227,135,54)"/><text x="47.5941%" y="1007.50"></text></g><g><title>__x64_sys_futex (1,227 samples, 1.13%)</title><rect x="47.3616%" y="981" width="1.1256%" height="15" fill="rgb(247,14,11)"/><text x="47.6116%" y="991.50"></text></g><g><title>do_futex (1,220 samples, 1.12%)</title><rect x="47.3680%" y="965" width="1.1192%" height="15" fill="rgb(206,149,34)"/><text x="47.6180%" y="975.50"></text></g><g><title>hash_futex (11 samples, 0.01%)</title><rect x="48.4771%" y="949" width="0.0101%" height="15" fill="rgb(227,228,4)"/><text x="48.7271%" y="959.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (1,295 samples, 1.19%)</title><rect x="47.3029%" y="1045" width="1.1880%" height="15" fill="rgb(238,218,28)"/><text x="47.5529%" y="1055.50"></text></g><g><title>syscall (1,290 samples, 1.18%)</title><rect x="47.3074%" y="1029" width="1.1834%" height="15" fill="rgb(252,86,40)"/><text x="47.5574%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (57 samples, 0.05%)</title><rect x="48.4955%" y="1045" width="0.0523%" height="15" fill="rgb(251,225,11)"/><text x="48.7455%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_load (57 samples, 0.05%)</title><rect x="48.4955%" y="1029" width="0.0523%" height="15" fill="rgb(206,46,49)"/><text x="48.7455%" y="1039.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (1,407 samples, 1.29%)</title><rect x="47.2918%" y="1077" width="1.2908%" height="15" fill="rgb(245,128,24)"/><text x="47.5418%" y="1087.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (1,405 samples, 1.29%)</title><rect x="47.2937%" y="1061" width="1.2889%" height="15" fill="rgb(219,177,34)"/><text x="47.5437%" y="1071.50"></text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (36 samples, 0.03%)</title><rect x="48.5496%" y="1045" width="0.0330%" height="15" fill="rgb(218,60,48)"/><text x="48.7996%" y="1055.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (36 samples, 0.03%)</title><rect x="48.5496%" y="1029" width="0.0330%" height="15" fill="rgb(221,11,5)"/><text x="48.7996%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (36 samples, 0.03%)</title><rect x="48.5496%" y="1013" width="0.0330%" height="15" fill="rgb(220,148,13)"/><text x="48.7996%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_sub (36 samples, 0.03%)</title><rect x="48.5496%" y="997" width="0.0330%" height="15" fill="rgb(210,16,3)"/><text x="48.7996%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (16 samples, 0.01%)</title><rect x="48.6056%" y="1045" width="0.0147%" height="15" fill="rgb(236,80,2)"/><text x="48.8556%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_load (16 samples, 0.01%)</title><rect x="48.6056%" y="1029" width="0.0147%" height="15" fill="rgb(239,129,19)"/><text x="48.8556%" y="1039.50"></text></g><g><title>tokio::runtime::queue::Local&lt;T&gt;::push_back (32 samples, 0.03%)</title><rect x="48.5955%" y="1061" width="0.0294%" height="15" fill="rgb(220,106,35)"/><text x="48.8455%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (37 samples, 0.03%)</title><rect x="48.6257%" y="1029" width="0.0339%" height="15" fill="rgb(252,139,45)"/><text x="48.8757%" y="1039.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (31 samples, 0.03%)</title><rect x="48.6679%" y="1029" width="0.0284%" height="15" fill="rgb(229,8,36)"/><text x="48.9179%" y="1039.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (31 samples, 0.03%)</title><rect x="48.6679%" y="1013" width="0.0284%" height="15" fill="rgb(230,126,33)"/><text x="48.9179%" y="1023.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (31 samples, 0.03%)</title><rect x="48.6679%" y="997" width="0.0284%" height="15" fill="rgb(239,140,21)"/><text x="48.9179%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (31 samples, 0.03%)</title><rect x="48.6679%" y="981" width="0.0284%" height="15" fill="rgb(254,104,9)"/><text x="48.9179%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (31 samples, 0.03%)</title><rect x="48.6679%" y="965" width="0.0284%" height="15" fill="rgb(239,52,14)"/><text x="48.9179%" y="975.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::notify_should_wakeup (126 samples, 0.12%)</title><rect x="48.6964%" y="1029" width="0.1156%" height="15" fill="rgb(208,227,44)"/><text x="48.9464%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (119 samples, 0.11%)</title><rect x="48.7028%" y="1013" width="0.1092%" height="15" fill="rgb(246,18,19)"/><text x="48.9528%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_add (119 samples, 0.11%)</title><rect x="48.7028%" y="997" width="0.1092%" height="15" fill="rgb(235,228,25)"/><text x="48.9528%" y="1007.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_match::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Match&gt;::evaluate (1,915 samples, 1.76%)</title><rect x="47.0625%" y="1221" width="1.7568%" height="15" fill="rgb(240,156,20)"/><text x="47.3125%" y="1231.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate (1,914 samples, 1.76%)</title><rect x="47.0634%" y="1205" width="1.7559%" height="15" fill="rgb(224,8,20)"/><text x="47.3134%" y="1215.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation (1,914 samples, 1.76%)</title><rect x="47.0634%" y="1189" width="1.7559%" height="15" fill="rgb(214,12,52)"/><text x="47.3134%" y="1199.50"></text></g><g><title>tokio::task::spawn::spawn (1,913 samples, 1.75%)</title><rect x="47.0643%" y="1173" width="1.7550%" height="15" fill="rgb(211,220,47)"/><text x="47.3143%" y="1183.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (1,913 samples, 1.75%)</title><rect x="47.0643%" y="1157" width="1.7550%" height="15" fill="rgb(250,173,5)"/><text x="47.3143%" y="1167.50"></text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (1,911 samples, 1.75%)</title><rect x="47.0662%" y="1141" width="1.7531%" height="15" fill="rgb(250,125,52)"/><text x="47.3162%" y="1151.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (1,834 samples, 1.68%)</title><rect x="47.1368%" y="1125" width="1.6825%" height="15" fill="rgb(209,133,18)"/><text x="47.3868%" y="1135.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (1,831 samples, 1.68%)</title><rect x="47.1396%" y="1109" width="1.6798%" height="15" fill="rgb(216,173,22)"/><text x="47.3896%" y="1119.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (1,817 samples, 1.67%)</title><rect x="47.1524%" y="1093" width="1.6669%" height="15" fill="rgb(205,3,22)"/><text x="47.4024%" y="1103.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule_local (258 samples, 0.24%)</title><rect x="48.5826%" y="1077" width="0.2367%" height="15" fill="rgb(248,22,20)"/><text x="48.8326%" y="1087.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (212 samples, 0.19%)</title><rect x="48.6248%" y="1061" width="0.1945%" height="15" fill="rgb(233,6,29)"/><text x="48.8748%" y="1071.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::worker_to_notify (211 samples, 0.19%)</title><rect x="48.6257%" y="1045" width="0.1936%" height="15" fill="rgb(240,22,54)"/><text x="48.8757%" y="1055.50"></text></g><g><title>[libc-2.31.so] (23 samples, 0.02%)</title><rect x="48.9166%" y="917" width="0.0211%" height="15" fill="rgb(231,133,32)"/><text x="49.1666%" y="927.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (96 samples, 0.09%)</title><rect x="48.8505%" y="933" width="0.0881%" height="15" fill="rgb(248,193,4)"/><text x="49.1005%" y="943.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (145 samples, 0.13%)</title><rect x="48.8377%" y="949" width="0.1330%" height="15" fill="rgb(211,178,46)"/><text x="49.0877%" y="959.50"></text></g><g><title>[libc-2.31.so] (35 samples, 0.03%)</title><rect x="48.9386%" y="933" width="0.0321%" height="15" fill="rgb(224,5,42)"/><text x="49.1886%" y="943.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (14 samples, 0.01%)</title><rect x="48.9982%" y="741" width="0.0128%" height="15" fill="rgb(239,176,25)"/><text x="49.2482%" y="751.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (14 samples, 0.01%)</title><rect x="48.9982%" y="725" width="0.0128%" height="15" fill="rgb(245,187,50)"/><text x="49.2482%" y="735.50"></text></g><g><title>imalloc_no_sample (29 samples, 0.03%)</title><rect x="48.9945%" y="805" width="0.0266%" height="15" fill="rgb(248,24,15)"/><text x="49.2445%" y="815.50"></text></g><g><title>iallocztm (29 samples, 0.03%)</title><rect x="48.9945%" y="789" width="0.0266%" height="15" fill="rgb(205,166,13)"/><text x="49.2445%" y="799.50"></text></g><g><title>arena_malloc (29 samples, 0.03%)</title><rect x="48.9945%" y="773" width="0.0266%" height="15" fill="rgb(208,114,23)"/><text x="49.2445%" y="783.50"></text></g><g><title>tcache_alloc_small (26 samples, 0.02%)</title><rect x="48.9973%" y="757" width="0.0239%" height="15" fill="rgb(239,127,18)"/><text x="49.2473%" y="767.50"></text></g><g><title>imalloc_body (40 samples, 0.04%)</title><rect x="48.9927%" y="821" width="0.0367%" height="15" fill="rgb(219,154,28)"/><text x="49.2427%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (60 samples, 0.06%)</title><rect x="48.9780%" y="901" width="0.0550%" height="15" fill="rgb(225,157,23)"/><text x="49.2280%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (60 samples, 0.06%)</title><rect x="48.9780%" y="885" width="0.0550%" height="15" fill="rgb(219,8,6)"/><text x="49.2280%" y="895.50"></text></g><g><title>alloc::alloc::alloc (60 samples, 0.06%)</title><rect x="48.9780%" y="869" width="0.0550%" height="15" fill="rgb(212,47,6)"/><text x="49.2280%" y="879.50"></text></g><g><title>_rjem_mallocx (53 samples, 0.05%)</title><rect x="48.9844%" y="853" width="0.0486%" height="15" fill="rgb(224,190,4)"/><text x="49.2344%" y="863.50"></text></g><g><title>imalloc (44 samples, 0.04%)</title><rect x="48.9927%" y="837" width="0.0404%" height="15" fill="rgb(239,183,29)"/><text x="49.2427%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (74 samples, 0.07%)</title><rect x="48.9725%" y="949" width="0.0679%" height="15" fill="rgb(213,57,7)"/><text x="49.2225%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (72 samples, 0.07%)</title><rect x="48.9743%" y="933" width="0.0661%" height="15" fill="rgb(216,148,1)"/><text x="49.2243%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (72 samples, 0.07%)</title><rect x="48.9743%" y="917" width="0.0661%" height="15" fill="rgb(236,182,29)"/><text x="49.2243%" y="927.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (75 samples, 0.07%)</title><rect x="49.0404%" y="949" width="0.0688%" height="15" fill="rgb(244,120,48)"/><text x="49.2904%" y="959.50"></text></g><g><title>[libc-2.31.so] (34 samples, 0.03%)</title><rect x="49.0780%" y="933" width="0.0312%" height="15" fill="rgb(206,71,34)"/><text x="49.3280%" y="943.50"></text></g><g><title>&lt;rho_runtime::interpreter::reduce::environment::Env&lt;T&gt; as core::clone::Clone&gt;::clone (309 samples, 0.28%)</title><rect x="48.8285%" y="1189" width="0.2835%" height="15" fill="rgb(242,32,6)"/><text x="49.0785%" y="1199.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::clone::Clone&gt;::clone (308 samples, 0.28%)</title><rect x="48.8294%" y="1173" width="0.2826%" height="15" fill="rgb(241,35,3)"/><text x="49.0794%" y="1183.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::convert::From&lt;&amp;[&lt;A as smallvec::Array&gt;::Item]&gt;&gt;::from (308 samples, 0.28%)</title><rect x="48.8294%" y="1157" width="0.2826%" height="15" fill="rgb(222,62,19)"/><text x="49.0794%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (308 samples, 0.28%)</title><rect x="48.8294%" y="1141" width="0.2826%" height="15" fill="rgb(223,110,41)"/><text x="49.0794%" y="1151.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (308 samples, 0.28%)</title><rect x="48.8294%" y="1125" width="0.2826%" height="15" fill="rgb(208,224,4)"/><text x="49.0794%" y="1135.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (308 samples, 0.28%)</title><rect x="48.8294%" y="1109" width="0.2826%" height="15" fill="rgb(241,137,19)"/><text x="49.0794%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (308 samples, 0.28%)</title><rect x="48.8294%" y="1093" width="0.2826%" height="15" fill="rgb(244,24,17)"/><text x="49.0794%" y="1103.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (308 samples, 0.28%)</title><rect x="48.8294%" y="1077" width="0.2826%" height="15" fill="rgb(245,178,49)"/><text x="49.0794%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (308 samples, 0.28%)</title><rect x="48.8294%" y="1061" width="0.2826%" height="15" fill="rgb(219,160,38)"/><text x="49.0794%" y="1071.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (308 samples, 0.28%)</title><rect x="48.8294%" y="1045" width="0.2826%" height="15" fill="rgb(228,137,14)"/><text x="49.0794%" y="1055.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (308 samples, 0.28%)</title><rect x="48.8294%" y="1029" width="0.2826%" height="15" fill="rgb(237,134,11)"/><text x="49.0794%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (308 samples, 0.28%)</title><rect x="48.8294%" y="1013" width="0.2826%" height="15" fill="rgb(211,126,44)"/><text x="49.0794%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (308 samples, 0.28%)</title><rect x="48.8294%" y="997" width="0.2826%" height="15" fill="rgb(226,171,33)"/><text x="49.0794%" y="1007.50"></text></g><g><title>alloc::slice::hack::to_vec (308 samples, 0.28%)</title><rect x="48.8294%" y="981" width="0.2826%" height="15" fill="rgb(253,99,13)"/><text x="49.0794%" y="991.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (308 samples, 0.28%)</title><rect x="48.8294%" y="965" width="0.2826%" height="15" fill="rgb(244,48,7)"/><text x="49.0794%" y="975.50"></text></g><g><title>[libc-2.31.so] (48 samples, 0.04%)</title><rect x="49.1202%" y="1093" width="0.0440%" height="15" fill="rgb(244,217,54)"/><text x="49.3702%" y="1103.50"></text></g><g><title>[libc-2.31.so] (48 samples, 0.04%)</title><rect x="49.1771%" y="1077" width="0.0440%" height="15" fill="rgb(224,15,18)"/><text x="49.4271%" y="1087.50"></text></g><g><title>arena_bin_nonfull_slab_get (13 samples, 0.01%)</title><rect x="49.2349%" y="853" width="0.0119%" height="15" fill="rgb(244,99,12)"/><text x="49.4849%" y="863.50"></text></g><g><title>arena_bin_malloc_hard (15 samples, 0.01%)</title><rect x="49.2340%" y="869" width="0.0138%" height="15" fill="rgb(233,226,8)"/><text x="49.4840%" y="879.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (20 samples, 0.02%)</title><rect x="49.2340%" y="901" width="0.0183%" height="15" fill="rgb(229,211,3)"/><text x="49.4840%" y="911.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (20 samples, 0.02%)</title><rect x="49.2340%" y="885" width="0.0183%" height="15" fill="rgb(216,140,21)"/><text x="49.4840%" y="895.50"></text></g><g><title>cache_bin_alloc_easy (13 samples, 0.01%)</title><rect x="49.2523%" y="901" width="0.0119%" height="15" fill="rgb(234,122,30)"/><text x="49.5023%" y="911.50"></text></g><g><title>imalloc_no_sample (38 samples, 0.03%)</title><rect x="49.2303%" y="965" width="0.0349%" height="15" fill="rgb(236,25,46)"/><text x="49.4803%" y="975.50"></text></g><g><title>iallocztm (38 samples, 0.03%)</title><rect x="49.2303%" y="949" width="0.0349%" height="15" fill="rgb(217,52,54)"/><text x="49.4803%" y="959.50"></text></g><g><title>arena_malloc (38 samples, 0.03%)</title><rect x="49.2303%" y="933" width="0.0349%" height="15" fill="rgb(222,29,26)"/><text x="49.4803%" y="943.50"></text></g><g><title>tcache_alloc_small (36 samples, 0.03%)</title><rect x="49.2321%" y="917" width="0.0330%" height="15" fill="rgb(216,177,29)"/><text x="49.4821%" y="927.50"></text></g><g><title>imalloc_body (41 samples, 0.04%)</title><rect x="49.2303%" y="981" width="0.0376%" height="15" fill="rgb(247,136,51)"/><text x="49.4803%" y="991.50"></text></g><g><title>tokio::runtime::task::joinable (168 samples, 0.15%)</title><rect x="49.1175%" y="1141" width="0.1541%" height="15" fill="rgb(231,47,47)"/><text x="49.3675%" y="1151.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (168 samples, 0.15%)</title><rect x="49.1175%" y="1125" width="0.1541%" height="15" fill="rgb(211,192,36)"/><text x="49.3675%" y="1135.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (168 samples, 0.15%)</title><rect x="49.1175%" y="1109" width="0.1541%" height="15" fill="rgb(229,156,32)"/><text x="49.3675%" y="1119.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (117 samples, 0.11%)</title><rect x="49.1643%" y="1093" width="0.1073%" height="15" fill="rgb(248,213,20)"/><text x="49.4143%" y="1103.50"></text></g><g><title>alloc::alloc::exchange_malloc (55 samples, 0.05%)</title><rect x="49.2211%" y="1077" width="0.0505%" height="15" fill="rgb(217,64,7)"/><text x="49.4711%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (55 samples, 0.05%)</title><rect x="49.2211%" y="1061" width="0.0505%" height="15" fill="rgb(232,142,8)"/><text x="49.4711%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (55 samples, 0.05%)</title><rect x="49.2211%" y="1045" width="0.0505%" height="15" fill="rgb(224,92,44)"/><text x="49.4711%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (55 samples, 0.05%)</title><rect x="49.2211%" y="1029" width="0.0505%" height="15" fill="rgb(214,169,17)"/><text x="49.4711%" y="1039.50"></text></g><g><title>_rjem_mallocx (50 samples, 0.05%)</title><rect x="49.2257%" y="1013" width="0.0459%" height="15" fill="rgb(210,59,37)"/><text x="49.4757%" y="1023.50"></text></g><g><title>imalloc (46 samples, 0.04%)</title><rect x="49.2294%" y="997" width="0.0422%" height="15" fill="rgb(214,116,48)"/><text x="49.4794%" y="1007.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (17 samples, 0.02%)</title><rect x="49.2725%" y="1061" width="0.0156%" height="15" fill="rgb(244,191,6)"/><text x="49.5225%" y="1071.50"></text></g><g><title>std::time::Instant::now (17 samples, 0.02%)</title><rect x="49.2725%" y="1045" width="0.0156%" height="15" fill="rgb(241,50,52)"/><text x="49.5225%" y="1055.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (17 samples, 0.02%)</title><rect x="49.2725%" y="1029" width="0.0156%" height="15" fill="rgb(236,75,39)"/><text x="49.5225%" y="1039.50"></text></g><g><title>std::sys::unix::time::inner::now (17 samples, 0.02%)</title><rect x="49.2725%" y="1013" width="0.0156%" height="15" fill="rgb(236,99,0)"/><text x="49.5225%" y="1023.50"></text></g><g><title>__clock_gettime (17 samples, 0.02%)</title><rect x="49.2725%" y="997" width="0.0156%" height="15" fill="rgb(207,202,15)"/><text x="49.5225%" y="1007.50"></text></g><g><title>__vdso_clock_gettime (16 samples, 0.01%)</title><rect x="49.2734%" y="981" width="0.0147%" height="15" fill="rgb(233,207,14)"/><text x="49.5234%" y="991.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation (541 samples, 0.50%)</title><rect x="48.8266%" y="1205" width="0.4963%" height="15" fill="rgb(226,27,51)"/><text x="49.0766%" y="1215.50"></text></g><g><title>tokio::task::spawn::spawn (224 samples, 0.21%)</title><rect x="49.1175%" y="1189" width="0.2055%" height="15" fill="rgb(206,104,42)"/><text x="49.3675%" y="1199.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (224 samples, 0.21%)</title><rect x="49.1175%" y="1173" width="0.2055%" height="15" fill="rgb(212,225,4)"/><text x="49.3675%" y="1183.50"></text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (224 samples, 0.21%)</title><rect x="49.1175%" y="1157" width="0.2055%" height="15" fill="rgb(233,96,42)"/><text x="49.3675%" y="1167.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (56 samples, 0.05%)</title><rect x="49.2716%" y="1141" width="0.0514%" height="15" fill="rgb(229,21,32)"/><text x="49.5216%" y="1151.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (56 samples, 0.05%)</title><rect x="49.2716%" y="1125" width="0.0514%" height="15" fill="rgb(226,216,24)"/><text x="49.5216%" y="1135.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (56 samples, 0.05%)</title><rect x="49.2716%" y="1109" width="0.0514%" height="15" fill="rgb(221,163,17)"/><text x="49.5216%" y="1119.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (55 samples, 0.05%)</title><rect x="49.2725%" y="1093" width="0.0505%" height="15" fill="rgb(216,216,42)"/><text x="49.5225%" y="1103.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (55 samples, 0.05%)</title><rect x="49.2725%" y="1077" width="0.0505%" height="15" fill="rgb(240,118,7)"/><text x="49.5225%" y="1087.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (38 samples, 0.03%)</title><rect x="49.2881%" y="1061" width="0.0349%" height="15" fill="rgb(221,67,37)"/><text x="49.5381%" y="1071.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (35 samples, 0.03%)</title><rect x="49.2909%" y="1045" width="0.0321%" height="15" fill="rgb(241,32,44)"/><text x="49.5409%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (34 samples, 0.03%)</title><rect x="49.2918%" y="1029" width="0.0312%" height="15" fill="rgb(235,204,43)"/><text x="49.5418%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (34 samples, 0.03%)</title><rect x="49.2918%" y="1013" width="0.0312%" height="15" fill="rgb(213,116,10)"/><text x="49.5418%" y="1023.50"></text></g><g><title>[libc-2.31.so] (17 samples, 0.02%)</title><rect x="49.3321%" y="1173" width="0.0156%" height="15" fill="rgb(239,15,48)"/><text x="49.5821%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (141 samples, 0.13%)</title><rect x="49.3496%" y="1173" width="0.1294%" height="15" fill="rgb(207,123,36)"/><text x="49.5996%" y="1183.50"></text></g><g><title>core::ptr::read (137 samples, 0.13%)</title><rect x="49.3532%" y="1157" width="0.1257%" height="15" fill="rgb(209,103,30)"/><text x="49.6032%" y="1167.50"></text></g><g><title>[libc-2.31.so] (137 samples, 0.13%)</title><rect x="49.3532%" y="1141" width="0.1257%" height="15" fill="rgb(238,100,19)"/><text x="49.6032%" y="1151.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (39 samples, 0.04%)</title><rect x="49.4826%" y="1157" width="0.0358%" height="15" fill="rgb(244,30,14)"/><text x="49.7326%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (37 samples, 0.03%)</title><rect x="49.4844%" y="1141" width="0.0339%" height="15" fill="rgb(249,174,6)"/><text x="49.7344%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_add (37 samples, 0.03%)</title><rect x="49.4844%" y="1125" width="0.0339%" height="15" fill="rgb(235,213,41)"/><text x="49.7344%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (17 samples, 0.02%)</title><rect x="49.6275%" y="965" width="0.0156%" height="15" fill="rgb(213,118,6)"/><text x="49.8775%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.02%)</title><rect x="49.7129%" y="869" width="0.0165%" height="15" fill="rgb(235,44,51)"/><text x="49.9629%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.02%)</title><rect x="49.7129%" y="853" width="0.0165%" height="15" fill="rgb(217,9,53)"/><text x="49.9629%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (19 samples, 0.02%)</title><rect x="49.7294%" y="869" width="0.0174%" height="15" fill="rgb(237,172,34)"/><text x="49.9794%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (151 samples, 0.14%)</title><rect x="49.6156%" y="981" width="0.1385%" height="15" fill="rgb(206,206,11)"/><text x="49.8656%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (121 samples, 0.11%)</title><rect x="49.6431%" y="965" width="0.1110%" height="15" fill="rgb(214,149,29)"/><text x="49.8931%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (118 samples, 0.11%)</title><rect x="49.6459%" y="949" width="0.1083%" height="15" fill="rgb(208,123,3)"/><text x="49.8959%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (118 samples, 0.11%)</title><rect x="49.6459%" y="933" width="0.1083%" height="15" fill="rgb(229,126,4)"/><text x="49.8959%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (94 samples, 0.09%)</title><rect x="49.6679%" y="917" width="0.0862%" height="15" fill="rgb(222,92,36)"/><text x="49.9179%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (45 samples, 0.04%)</title><rect x="49.7129%" y="901" width="0.0413%" height="15" fill="rgb(216,39,41)"/><text x="49.9629%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (45 samples, 0.04%)</title><rect x="49.7129%" y="885" width="0.0413%" height="15" fill="rgb(253,127,28)"/><text x="49.9629%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (18 samples, 0.02%)</title><rect x="49.7606%" y="917" width="0.0165%" height="15" fill="rgb(249,152,51)"/><text x="50.0106%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (18 samples, 0.02%)</title><rect x="49.7771%" y="869" width="0.0165%" height="15" fill="rgb(209,123,42)"/><text x="50.0271%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18 samples, 0.02%)</title><rect x="49.7771%" y="853" width="0.0165%" height="15" fill="rgb(241,118,22)"/><text x="50.0271%" y="863.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (53 samples, 0.05%)</title><rect x="49.7541%" y="981" width="0.0486%" height="15" fill="rgb(208,25,7)"/><text x="50.0041%" y="991.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (52 samples, 0.05%)</title><rect x="49.7551%" y="965" width="0.0477%" height="15" fill="rgb(243,144,39)"/><text x="50.0051%" y="975.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (52 samples, 0.05%)</title><rect x="49.7551%" y="949" width="0.0477%" height="15" fill="rgb(250,50,5)"/><text x="50.0051%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (46 samples, 0.04%)</title><rect x="49.7606%" y="933" width="0.0422%" height="15" fill="rgb(207,67,11)"/><text x="50.0106%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (28 samples, 0.03%)</title><rect x="49.7771%" y="917" width="0.0257%" height="15" fill="rgb(245,204,40)"/><text x="50.0271%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (28 samples, 0.03%)</title><rect x="49.7771%" y="901" width="0.0257%" height="15" fill="rgb(238,228,24)"/><text x="50.0271%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (28 samples, 0.03%)</title><rect x="49.7771%" y="885" width="0.0257%" height="15" fill="rgb(217,116,22)"/><text x="50.0271%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (294 samples, 0.27%)</title><rect x="49.5340%" y="1061" width="0.2697%" height="15" fill="rgb(234,98,12)"/><text x="49.7840%" y="1071.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (294 samples, 0.27%)</title><rect x="49.5340%" y="1045" width="0.2697%" height="15" fill="rgb(242,170,50)"/><text x="49.7840%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (294 samples, 0.27%)</title><rect x="49.5340%" y="1029" width="0.2697%" height="15" fill="rgb(235,7,5)"/><text x="49.7840%" y="1039.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (293 samples, 0.27%)</title><rect x="49.5349%" y="1013" width="0.2688%" height="15" fill="rgb(241,114,28)"/><text x="49.7849%" y="1023.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (293 samples, 0.27%)</title><rect x="49.5349%" y="997" width="0.2688%" height="15" fill="rgb(246,112,42)"/><text x="49.7849%" y="1007.50"></text></g><g><title>core::ptr::write (40 samples, 0.04%)</title><rect x="49.8055%" y="1061" width="0.0367%" height="15" fill="rgb(248,228,14)"/><text x="50.0555%" y="1071.50"></text></g><g><title>[libc-2.31.so] (40 samples, 0.04%)</title><rect x="49.8055%" y="1045" width="0.0367%" height="15" fill="rgb(208,133,18)"/><text x="50.0555%" y="1055.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (355 samples, 0.33%)</title><rect x="49.5220%" y="1077" width="0.3257%" height="15" fill="rgb(207,35,49)"/><text x="49.7720%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (357 samples, 0.33%)</title><rect x="49.5211%" y="1109" width="0.3275%" height="15" fill="rgb(205,68,36)"/><text x="49.7711%" y="1119.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (357 samples, 0.33%)</title><rect x="49.5211%" y="1093" width="0.3275%" height="15" fill="rgb(245,62,40)"/><text x="49.7711%" y="1103.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::convert::From&lt;&amp;[&lt;A as smallvec::Array&gt;::Item]&gt;&gt;::from (358 samples, 0.33%)</title><rect x="49.5211%" y="1125" width="0.3284%" height="15" fill="rgb(228,27,24)"/><text x="49.7711%" y="1135.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::clone::Clone&gt;::clone (360 samples, 0.33%)</title><rect x="49.5211%" y="1141" width="0.3303%" height="15" fill="rgb(253,19,12)"/><text x="49.7711%" y="1151.50"></text></g><g><title>&lt;rho_runtime::interpreter::reduce::environment::Env&lt;T&gt; as core::clone::Clone&gt;::clone (416 samples, 0.38%)</title><rect x="49.5184%" y="1157" width="0.3816%" height="15" fill="rgb(232,28,20)"/><text x="49.7684%" y="1167.50"></text></g><g><title>[libc-2.31.so] (53 samples, 0.05%)</title><rect x="49.8514%" y="1141" width="0.0486%" height="15" fill="rgb(218,35,51)"/><text x="50.1014%" y="1151.50"></text></g><g><title>[libc-2.31.so] (17 samples, 0.02%)</title><rect x="49.9000%" y="1157" width="0.0156%" height="15" fill="rgb(212,90,40)"/><text x="50.1500%" y="1167.50"></text></g><g><title>core::future::from_generator (48 samples, 0.04%)</title><rect x="49.9156%" y="1157" width="0.0440%" height="15" fill="rgb(220,172,12)"/><text x="50.1656%" y="1167.50"></text></g><g><title>[libc-2.31.so] (46 samples, 0.04%)</title><rect x="49.9174%" y="1141" width="0.0422%" height="15" fill="rgb(226,159,20)"/><text x="50.1674%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::join::JoinHandle&lt;()&gt;&gt; (43 samples, 0.04%)</title><rect x="49.9596%" y="1157" width="0.0394%" height="15" fill="rgb(234,205,16)"/><text x="50.2096%" y="1167.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 0.04%)</title><rect x="49.9596%" y="1141" width="0.0394%" height="15" fill="rgb(207,9,39)"/><text x="50.2096%" y="1151.50"></text></g><g><title>tokio::runtime::task::state::State::drop_join_handle_fast (24 samples, 0.02%)</title><rect x="49.9771%" y="1125" width="0.0220%" height="15" fill="rgb(249,143,15)"/><text x="50.2271%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (17 samples, 0.02%)</title><rect x="49.9835%" y="1109" width="0.0156%" height="15" fill="rgb(253,133,29)"/><text x="50.2335%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (17 samples, 0.02%)</title><rect x="49.9835%" y="1093" width="0.0156%" height="15" fill="rgb(221,187,0)"/><text x="50.2335%" y="1103.50"></text></g><g><title>rho_runtime::interpreter::AsynWaitGroup::acquire (48 samples, 0.04%)</title><rect x="49.9991%" y="1157" width="0.0440%" height="15" fill="rgb(205,204,26)"/><text x="50.2491%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicI32::fetch_add (48 samples, 0.04%)</title><rect x="49.9991%" y="1141" width="0.0440%" height="15" fill="rgb(224,68,54)"/><text x="50.2491%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_add (48 samples, 0.04%)</title><rect x="49.9991%" y="1125" width="0.0440%" height="15" fill="rgb(209,67,4)"/><text x="50.2491%" y="1135.50"></text></g><g><title>[libc-2.31.so] (46 samples, 0.04%)</title><rect x="50.0450%" y="1141" width="0.0422%" height="15" fill="rgb(228,229,18)"/><text x="50.2950%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::spawner::Spawner&gt; (42 samples, 0.04%)</title><rect x="50.0872%" y="1141" width="0.0385%" height="15" fill="rgb(231,89,13)"/><text x="50.3372%" y="1151.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate (965 samples, 0.89%)</title><rect x="49.3257%" y="1189" width="0.8853%" height="15" fill="rgb(210,182,18)"/><text x="49.5757%" y="1199.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation (797 samples, 0.73%)</title><rect x="49.4798%" y="1173" width="0.7312%" height="15" fill="rgb(240,105,2)"/><text x="49.7298%" y="1183.50"></text></g><g><title>tokio::task::spawn::spawn (182 samples, 0.17%)</title><rect x="50.0440%" y="1157" width="0.1670%" height="15" fill="rgb(207,170,50)"/><text x="50.2940%" y="1167.50"></text></g><g><title>tokio::runtime::context::spawn_handle (93 samples, 0.09%)</title><rect x="50.1257%" y="1141" width="0.0853%" height="15" fill="rgb(232,133,24)"/><text x="50.3757%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (93 samples, 0.09%)</title><rect x="50.1257%" y="1125" width="0.0853%" height="15" fill="rgb(235,166,27)"/><text x="50.3757%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (93 samples, 0.09%)</title><rect x="50.1257%" y="1109" width="0.0853%" height="15" fill="rgb(209,19,13)"/><text x="50.3757%" y="1119.50"></text></g><g><title>tokio::runtime::context::spawn_handle::{{closure}} (92 samples, 0.08%)</title><rect x="50.1266%" y="1093" width="0.0844%" height="15" fill="rgb(226,79,39)"/><text x="50.3766%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (89 samples, 0.08%)</title><rect x="50.1294%" y="1077" width="0.0816%" height="15" fill="rgb(222,163,10)"/><text x="50.3794%" y="1087.50"></text></g><g><title>tokio::runtime::context::spawn_handle::{{closure}}::{{closure}} (89 samples, 0.08%)</title><rect x="50.1294%" y="1061" width="0.0816%" height="15" fill="rgb(214,44,19)"/><text x="50.3794%" y="1071.50"></text></g><g><title>&lt;tokio::runtime::spawner::Spawner as core::clone::Clone&gt;::clone (89 samples, 0.08%)</title><rect x="50.1294%" y="1045" width="0.0816%" height="15" fill="rgb(210,217,13)"/><text x="50.3794%" y="1055.50"></text></g><g><title>imalloc_no_sample (16 samples, 0.01%)</title><rect x="50.2147%" y="981" width="0.0147%" height="15" fill="rgb(237,61,54)"/><text x="50.4647%" y="991.50"></text></g><g><title>iallocztm (12 samples, 0.01%)</title><rect x="50.2183%" y="965" width="0.0110%" height="15" fill="rgb(226,184,24)"/><text x="50.4683%" y="975.50"></text></g><g><title>arena_malloc (12 samples, 0.01%)</title><rect x="50.2183%" y="949" width="0.0110%" height="15" fill="rgb(223,226,4)"/><text x="50.4683%" y="959.50"></text></g><g><title>imalloc_body (25 samples, 0.02%)</title><rect x="50.2138%" y="997" width="0.0229%" height="15" fill="rgb(210,26,41)"/><text x="50.4638%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (31 samples, 0.03%)</title><rect x="50.2110%" y="1141" width="0.0284%" height="15" fill="rgb(220,221,6)"/><text x="50.4610%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (31 samples, 0.03%)</title><rect x="50.2110%" y="1125" width="0.0284%" height="15" fill="rgb(225,89,49)"/><text x="50.4610%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (31 samples, 0.03%)</title><rect x="50.2110%" y="1109" width="0.0284%" height="15" fill="rgb(218,70,45)"/><text x="50.4610%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (31 samples, 0.03%)</title><rect x="50.2110%" y="1093" width="0.0284%" height="15" fill="rgb(238,166,21)"/><text x="50.4610%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (31 samples, 0.03%)</title><rect x="50.2110%" y="1077" width="0.0284%" height="15" fill="rgb(224,141,44)"/><text x="50.4610%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (31 samples, 0.03%)</title><rect x="50.2110%" y="1061" width="0.0284%" height="15" fill="rgb(230,12,49)"/><text x="50.4610%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (31 samples, 0.03%)</title><rect x="50.2110%" y="1045" width="0.0284%" height="15" fill="rgb(212,174,12)"/><text x="50.4610%" y="1055.50"></text></g><g><title>_rjem_mallocx (31 samples, 0.03%)</title><rect x="50.2110%" y="1029" width="0.0284%" height="15" fill="rgb(246,67,9)"/><text x="50.4610%" y="1039.50"></text></g><g><title>imalloc (29 samples, 0.03%)</title><rect x="50.2128%" y="1013" width="0.0266%" height="15" fill="rgb(239,35,23)"/><text x="50.4628%" y="1023.50"></text></g><g><title>[libc-2.31.so] (27 samples, 0.02%)</title><rect x="50.2514%" y="1125" width="0.0248%" height="15" fill="rgb(211,167,0)"/><text x="50.5014%" y="1135.50"></text></g><g><title>model::rho_types::Par::append_expr (59 samples, 0.05%)</title><rect x="50.2404%" y="1141" width="0.0541%" height="15" fill="rgb(225,119,45)"/><text x="50.4904%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (20 samples, 0.02%)</title><rect x="50.2761%" y="1125" width="0.0183%" height="15" fill="rgb(210,162,6)"/><text x="50.5261%" y="1135.50"></text></g><g><title>core::ptr::write (20 samples, 0.02%)</title><rect x="50.2761%" y="1109" width="0.0183%" height="15" fill="rgb(208,118,35)"/><text x="50.5261%" y="1119.50"></text></g><g><title>[libc-2.31.so] (20 samples, 0.02%)</title><rect x="50.2761%" y="1093" width="0.0183%" height="15" fill="rgb(239,4,53)"/><text x="50.5261%" y="1103.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_par::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Par&gt;::evaluate (1,617 samples, 1.48%)</title><rect x="48.8193%" y="1221" width="1.4834%" height="15" fill="rgb(213,130,21)"/><text x="49.0693%" y="1231.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_match::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Match&gt;::evaluate (1,068 samples, 0.98%)</title><rect x="49.3230%" y="1205" width="0.9798%" height="15" fill="rgb(235,148,0)"/><text x="49.5730%" y="1215.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute (100 samples, 0.09%)</title><rect x="50.2110%" y="1189" width="0.0917%" height="15" fill="rgb(244,224,18)"/><text x="50.4610%" y="1199.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute_no_sort (100 samples, 0.09%)</title><rect x="50.2110%" y="1173" width="0.0917%" height="15" fill="rgb(211,214,4)"/><text x="50.4610%" y="1183.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::substitute_expressions_in_par (100 samples, 0.09%)</title><rect x="50.2110%" y="1157" width="0.0917%" height="15" fill="rgb(206,119,25)"/><text x="50.4610%" y="1167.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (55 samples, 0.05%)</title><rect x="50.3514%" y="869" width="0.0505%" height="15" fill="rgb(243,93,47)"/><text x="50.6014%" y="879.50"></text></g><g><title>[libc-2.31.so] (21 samples, 0.02%)</title><rect x="50.3826%" y="853" width="0.0193%" height="15" fill="rgb(224,194,6)"/><text x="50.6326%" y="863.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (87 samples, 0.08%)</title><rect x="50.3385%" y="885" width="0.0798%" height="15" fill="rgb(243,229,6)"/><text x="50.5885%" y="895.50"></text></g><g><title>[libc-2.31.so] (18 samples, 0.02%)</title><rect x="50.4018%" y="869" width="0.0165%" height="15" fill="rgb(207,23,50)"/><text x="50.6518%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="50.4459%" y="725" width="0.0101%" height="15" fill="rgb(253,192,32)"/><text x="50.6959%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (50 samples, 0.05%)</title><rect x="50.6715%" y="613" width="0.0459%" height="15" fill="rgb(213,21,6)"/><text x="50.9215%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (11 samples, 0.01%)</title><rect x="50.7073%" y="597" width="0.0101%" height="15" fill="rgb(243,151,13)"/><text x="50.9573%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="50.7348%" y="565" width="0.0193%" height="15" fill="rgb(233,165,41)"/><text x="50.9848%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (14 samples, 0.01%)</title><rect x="50.7541%" y="565" width="0.0128%" height="15" fill="rgb(246,176,45)"/><text x="51.0041%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (22 samples, 0.02%)</title><rect x="50.8211%" y="517" width="0.0202%" height="15" fill="rgb(217,170,52)"/><text x="51.0711%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (22 samples, 0.02%)</title><rect x="50.8211%" y="501" width="0.0202%" height="15" fill="rgb(214,203,54)"/><text x="51.0711%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (21 samples, 0.02%)</title><rect x="50.8413%" y="517" width="0.0193%" height="15" fill="rgb(248,215,49)"/><text x="51.0913%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (222 samples, 0.20%)</title><rect x="50.6624%" y="629" width="0.2037%" height="15" fill="rgb(208,46,10)"/><text x="50.9124%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (162 samples, 0.15%)</title><rect x="50.7174%" y="613" width="0.1486%" height="15" fill="rgb(254,5,31)"/><text x="50.9674%" y="623.50"></text></g><g><title>alloc::slice::hack::to_vec (160 samples, 0.15%)</title><rect x="50.7192%" y="597" width="0.1468%" height="15" fill="rgb(222,104,33)"/><text x="50.9692%" y="607.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (160 samples, 0.15%)</title><rect x="50.7192%" y="581" width="0.1468%" height="15" fill="rgb(248,49,16)"/><text x="50.9692%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (108 samples, 0.10%)</title><rect x="50.7669%" y="565" width="0.0991%" height="15" fill="rgb(232,198,41)"/><text x="51.0169%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (53 samples, 0.05%)</title><rect x="50.8174%" y="549" width="0.0486%" height="15" fill="rgb(214,125,3)"/><text x="51.0674%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (53 samples, 0.05%)</title><rect x="50.8174%" y="533" width="0.0486%" height="15" fill="rgb(229,220,28)"/><text x="51.0674%" y="543.50"></text></g><g><title>cache_bin_alloc_easy (13 samples, 0.01%)</title><rect x="50.9201%" y="309" width="0.0119%" height="15" fill="rgb(222,64,37)"/><text x="51.1701%" y="319.50"></text></g><g><title>imalloc_body (28 samples, 0.03%)</title><rect x="50.9073%" y="389" width="0.0257%" height="15" fill="rgb(249,184,13)"/><text x="51.1573%" y="399.50"></text></g><g><title>imalloc_no_sample (27 samples, 0.02%)</title><rect x="50.9082%" y="373" width="0.0248%" height="15" fill="rgb(252,176,6)"/><text x="51.1582%" y="383.50"></text></g><g><title>iallocztm (22 samples, 0.02%)</title><rect x="50.9128%" y="357" width="0.0202%" height="15" fill="rgb(228,153,7)"/><text x="51.1628%" y="367.50"></text></g><g><title>arena_malloc (22 samples, 0.02%)</title><rect x="50.9128%" y="341" width="0.0202%" height="15" fill="rgb(242,193,5)"/><text x="51.1628%" y="351.50"></text></g><g><title>tcache_alloc_small (19 samples, 0.02%)</title><rect x="50.9156%" y="325" width="0.0174%" height="15" fill="rgb(232,140,9)"/><text x="51.1656%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (79 samples, 0.07%)</title><rect x="50.8688%" y="517" width="0.0725%" height="15" fill="rgb(213,222,16)"/><text x="51.1188%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (79 samples, 0.07%)</title><rect x="50.8688%" y="501" width="0.0725%" height="15" fill="rgb(222,75,50)"/><text x="51.1188%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (79 samples, 0.07%)</title><rect x="50.8688%" y="485" width="0.0725%" height="15" fill="rgb(205,180,2)"/><text x="51.1188%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (74 samples, 0.07%)</title><rect x="50.8734%" y="469" width="0.0679%" height="15" fill="rgb(216,34,7)"/><text x="51.1234%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (74 samples, 0.07%)</title><rect x="50.8734%" y="453" width="0.0679%" height="15" fill="rgb(253,16,32)"/><text x="51.1234%" y="463.50"></text></g><g><title>alloc::alloc::alloc (74 samples, 0.07%)</title><rect x="50.8734%" y="437" width="0.0679%" height="15" fill="rgb(208,97,28)"/><text x="51.1234%" y="447.50"></text></g><g><title>_rjem_mallocx (68 samples, 0.06%)</title><rect x="50.8789%" y="421" width="0.0624%" height="15" fill="rgb(225,92,11)"/><text x="51.1289%" y="431.50"></text></g><g><title>imalloc (39 samples, 0.04%)</title><rect x="50.9055%" y="405" width="0.0358%" height="15" fill="rgb(243,38,12)"/><text x="51.1555%" y="415.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (95 samples, 0.09%)</title><rect x="50.8660%" y="629" width="0.0872%" height="15" fill="rgb(208,139,16)"/><text x="51.1160%" y="639.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (92 samples, 0.08%)</title><rect x="50.8688%" y="613" width="0.0844%" height="15" fill="rgb(227,24,9)"/><text x="51.1188%" y="623.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (92 samples, 0.08%)</title><rect x="50.8688%" y="597" width="0.0844%" height="15" fill="rgb(206,62,11)"/><text x="51.1188%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (92 samples, 0.08%)</title><rect x="50.8688%" y="581" width="0.0844%" height="15" fill="rgb(228,134,27)"/><text x="51.1188%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (92 samples, 0.08%)</title><rect x="50.8688%" y="565" width="0.0844%" height="15" fill="rgb(205,55,33)"/><text x="51.1188%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (92 samples, 0.08%)</title><rect x="50.8688%" y="549" width="0.0844%" height="15" fill="rgb(243,75,43)"/><text x="51.1188%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (92 samples, 0.08%)</title><rect x="50.8688%" y="533" width="0.0844%" height="15" fill="rgb(223,27,42)"/><text x="51.1188%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (13 samples, 0.01%)</title><rect x="50.9412%" y="517" width="0.0119%" height="15" fill="rgb(232,189,33)"/><text x="51.1912%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.01%)</title><rect x="50.9412%" y="501" width="0.0119%" height="15" fill="rgb(210,9,39)"/><text x="51.1912%" y="511.50"></text></g><g><title>[libc-2.31.so] (11 samples, 0.01%)</title><rect x="50.9431%" y="485" width="0.0101%" height="15" fill="rgb(242,85,26)"/><text x="51.1931%" y="495.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (403 samples, 0.37%)</title><rect x="50.5844%" y="645" width="0.3697%" height="15" fill="rgb(248,44,4)"/><text x="50.8344%" y="655.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (528 samples, 0.48%)</title><rect x="50.5266%" y="661" width="0.4844%" height="15" fill="rgb(250,96,46)"/><text x="50.7766%" y="671.50"></text></g><g><title>[libc-2.31.so] (62 samples, 0.06%)</title><rect x="50.9541%" y="645" width="0.0569%" height="15" fill="rgb(229,116,26)"/><text x="51.2041%" y="655.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (581 samples, 0.53%)</title><rect x="50.4899%" y="693" width="0.5330%" height="15" fill="rgb(246,94,34)"/><text x="50.7399%" y="703.50"></text></g><g><title>&lt;model::rho_types::EPlus as core::clone::Clone&gt;::clone (546 samples, 0.50%)</title><rect x="50.5220%" y="677" width="0.5009%" height="15" fill="rgb(251,73,21)"/><text x="50.7720%" y="687.50"></text></g><g><title>[libc-2.31.so] (13 samples, 0.01%)</title><rect x="51.0110%" y="661" width="0.0119%" height="15" fill="rgb(254,121,25)"/><text x="51.2610%" y="671.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (673 samples, 0.62%)</title><rect x="50.4624%" y="709" width="0.6174%" height="15" fill="rgb(215,161,49)"/><text x="50.7124%" y="719.50"></text></g><g><title>[libc-2.31.so] (62 samples, 0.06%)</title><rect x="51.0229%" y="693" width="0.0569%" height="15" fill="rgb(221,43,13)"/><text x="51.2729%" y="703.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (697 samples, 0.64%)</title><rect x="50.4559%" y="725" width="0.6394%" height="15" fill="rgb(249,5,37)"/><text x="50.7059%" y="735.50"></text></g><g><title>[libc-2.31.so] (17 samples, 0.02%)</title><rect x="51.0798%" y="709" width="0.0156%" height="15" fill="rgb(226,25,44)"/><text x="51.3298%" y="719.50"></text></g><g><title>arena_bin_slabs_nonfull_tryget (23 samples, 0.02%)</title><rect x="51.1853%" y="453" width="0.0211%" height="15" fill="rgb(238,189,16)"/><text x="51.4353%" y="463.50"></text></g><g><title>_rjem_je_extent_heap_remove_first (23 samples, 0.02%)</title><rect x="51.1853%" y="437" width="0.0211%" height="15" fill="rgb(251,186,8)"/><text x="51.4353%" y="447.50"></text></g><g><title>extent_recycle_extract (19 samples, 0.02%)</title><rect x="51.2082%" y="405" width="0.0174%" height="15" fill="rgb(254,34,31)"/><text x="51.4582%" y="415.50"></text></g><g><title>_rjem_je_extents_alloc (24 samples, 0.02%)</title><rect x="51.2064%" y="437" width="0.0220%" height="15" fill="rgb(225,215,27)"/><text x="51.4564%" y="447.50"></text></g><g><title>extent_recycle (24 samples, 0.02%)</title><rect x="51.2064%" y="421" width="0.0220%" height="15" fill="rgb(221,192,48)"/><text x="51.4564%" y="431.50"></text></g><g><title>arena_slab_alloc (27 samples, 0.02%)</title><rect x="51.2064%" y="453" width="0.0248%" height="15" fill="rgb(219,137,20)"/><text x="51.4564%" y="463.50"></text></g><g><title>arena_bin_nonfull_slab_get (55 samples, 0.05%)</title><rect x="51.1853%" y="469" width="0.0505%" height="15" fill="rgb(219,84,11)"/><text x="51.4353%" y="479.50"></text></g><g><title>arena_bin_malloc_hard (66 samples, 0.06%)</title><rect x="51.1789%" y="485" width="0.0605%" height="15" fill="rgb(224,10,23)"/><text x="51.4289%" y="495.50"></text></g><g><title>arena_slab_reg_alloc (14 samples, 0.01%)</title><rect x="51.2394%" y="485" width="0.0128%" height="15" fill="rgb(248,22,39)"/><text x="51.4894%" y="495.50"></text></g><g><title>bitmap_sfu (11 samples, 0.01%)</title><rect x="51.2422%" y="469" width="0.0101%" height="15" fill="rgb(212,154,20)"/><text x="51.4922%" y="479.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (102 samples, 0.09%)</title><rect x="51.1697%" y="517" width="0.0936%" height="15" fill="rgb(236,199,50)"/><text x="51.4197%" y="527.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (102 samples, 0.09%)</title><rect x="51.1697%" y="501" width="0.0936%" height="15" fill="rgb(211,9,17)"/><text x="51.4197%" y="511.50"></text></g><g><title>cache_bin_alloc_easy (13 samples, 0.01%)</title><rect x="51.2688%" y="517" width="0.0119%" height="15" fill="rgb(243,216,36)"/><text x="51.5188%" y="527.50"></text></g><g><title>imalloc_no_sample (134 samples, 0.12%)</title><rect x="51.1605%" y="581" width="0.1229%" height="15" fill="rgb(250,2,10)"/><text x="51.4105%" y="591.50"></text></g><g><title>iallocztm (128 samples, 0.12%)</title><rect x="51.1660%" y="565" width="0.1174%" height="15" fill="rgb(226,50,48)"/><text x="51.4160%" y="575.50"></text></g><g><title>arena_malloc (128 samples, 0.12%)</title><rect x="51.1660%" y="549" width="0.1174%" height="15" fill="rgb(243,81,16)"/><text x="51.4160%" y="559.50"></text></g><g><title>tcache_alloc_small (127 samples, 0.12%)</title><rect x="51.1669%" y="533" width="0.1165%" height="15" fill="rgb(250,14,2)"/><text x="51.4169%" y="543.50"></text></g><g><title>imalloc_body (138 samples, 0.13%)</title><rect x="51.1596%" y="597" width="0.1266%" height="15" fill="rgb(233,135,29)"/><text x="51.4096%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (172 samples, 0.16%)</title><rect x="51.1339%" y="677" width="0.1578%" height="15" fill="rgb(224,64,43)"/><text x="51.3839%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (172 samples, 0.16%)</title><rect x="51.1339%" y="661" width="0.1578%" height="15" fill="rgb(238,84,13)"/><text x="51.3839%" y="671.50"></text></g><g><title>alloc::alloc::alloc (164 samples, 0.15%)</title><rect x="51.1412%" y="645" width="0.1505%" height="15" fill="rgb(253,48,26)"/><text x="51.3912%" y="655.50"></text></g><g><title>_rjem_mallocx (157 samples, 0.14%)</title><rect x="51.1477%" y="629" width="0.1440%" height="15" fill="rgb(205,223,31)"/><text x="51.3977%" y="639.50"></text></g><g><title>imalloc (144 samples, 0.13%)</title><rect x="51.1596%" y="613" width="0.1321%" height="15" fill="rgb(221,41,32)"/><text x="51.4096%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (18 samples, 0.02%)</title><rect x="51.2917%" y="677" width="0.0165%" height="15" fill="rgb(213,158,31)"/><text x="51.5417%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (234 samples, 0.21%)</title><rect x="51.1009%" y="725" width="0.2147%" height="15" fill="rgb(245,126,43)"/><text x="51.3509%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (202 samples, 0.19%)</title><rect x="51.1302%" y="709" width="0.1853%" height="15" fill="rgb(227,7,22)"/><text x="51.3802%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (202 samples, 0.19%)</title><rect x="51.1302%" y="693" width="0.1853%" height="15" fill="rgb(252,90,44)"/><text x="51.3802%" y="703.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (52 samples, 0.05%)</title><rect x="51.3155%" y="725" width="0.0477%" height="15" fill="rgb(253,91,0)"/><text x="51.5655%" y="735.50"></text></g><g><title>[libc-2.31.so] (14 samples, 0.01%)</title><rect x="51.3504%" y="709" width="0.0128%" height="15" fill="rgb(252,175,49)"/><text x="51.6004%" y="719.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (1,037 samples, 0.95%)</title><rect x="50.4183%" y="805" width="0.9513%" height="15" fill="rgb(246,150,1)"/><text x="50.6683%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,037 samples, 0.95%)</title><rect x="50.4183%" y="789" width="0.9513%" height="15" fill="rgb(241,192,25)"/><text x="50.6683%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,025 samples, 0.94%)</title><rect x="50.4293%" y="773" width="0.9403%" height="15" fill="rgb(239,187,11)"/><text x="50.6793%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (1,023 samples, 0.94%)</title><rect x="50.4312%" y="757" width="0.9385%" height="15" fill="rgb(218,202,51)"/><text x="50.6812%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,023 samples, 0.94%)</title><rect x="50.4312%" y="741" width="0.9385%" height="15" fill="rgb(225,176,8)"/><text x="50.6812%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,043 samples, 0.96%)</title><rect x="50.4183%" y="869" width="0.9568%" height="15" fill="rgb(219,122,41)"/><text x="50.6683%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,043 samples, 0.96%)</title><rect x="50.4183%" y="853" width="0.9568%" height="15" fill="rgb(248,140,20)"/><text x="50.6683%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (1,043 samples, 0.96%)</title><rect x="50.4183%" y="837" width="0.9568%" height="15" fill="rgb(245,41,37)"/><text x="50.6683%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,043 samples, 0.96%)</title><rect x="50.4183%" y="821" width="0.9568%" height="15" fill="rgb(235,82,39)"/><text x="50.6683%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.02%)</title><rect x="51.4146%" y="725" width="0.0156%" height="15" fill="rgb(230,108,42)"/><text x="51.6646%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.02%)</title><rect x="51.4146%" y="709" width="0.0156%" height="15" fill="rgb(215,150,50)"/><text x="51.6646%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (30 samples, 0.03%)</title><rect x="51.4302%" y="725" width="0.0275%" height="15" fill="rgb(233,212,5)"/><text x="51.6802%" y="735.50"></text></g><g><title>&lt;model::rho_types::Send as core::clone::Clone&gt;::clone (1,142 samples, 1.05%)</title><rect x="50.4183%" y="885" width="1.0477%" height="15" fill="rgb(245,80,22)"/><text x="50.6683%" y="895.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (99 samples, 0.09%)</title><rect x="51.3752%" y="869" width="0.0908%" height="15" fill="rgb(238,129,16)"/><text x="51.6252%" y="879.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (99 samples, 0.09%)</title><rect x="51.3752%" y="853" width="0.0908%" height="15" fill="rgb(240,19,0)"/><text x="51.6252%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (99 samples, 0.09%)</title><rect x="51.3752%" y="837" width="0.0908%" height="15" fill="rgb(232,42,35)"/><text x="51.6252%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (91 samples, 0.08%)</title><rect x="51.3825%" y="821" width="0.0835%" height="15" fill="rgb(223,130,24)"/><text x="51.6325%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (91 samples, 0.08%)</title><rect x="51.3825%" y="805" width="0.0835%" height="15" fill="rgb(237,16,22)"/><text x="51.6325%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (91 samples, 0.08%)</title><rect x="51.3825%" y="789" width="0.0835%" height="15" fill="rgb(248,192,20)"/><text x="51.6325%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (78 samples, 0.07%)</title><rect x="51.3944%" y="773" width="0.0716%" height="15" fill="rgb(233,167,2)"/><text x="51.6444%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (60 samples, 0.06%)</title><rect x="51.4110%" y="757" width="0.0550%" height="15" fill="rgb(252,71,44)"/><text x="51.6610%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (60 samples, 0.06%)</title><rect x="51.4110%" y="741" width="0.0550%" height="15" fill="rgb(238,37,47)"/><text x="51.6610%" y="751.50"></text></g><g><title>arena_bin_slabs_nonfull_tryget (11 samples, 0.01%)</title><rect x="51.5146%" y="613" width="0.0101%" height="15" fill="rgb(214,202,54)"/><text x="51.7646%" y="623.50"></text></g><g><title>_rjem_je_extent_heap_remove_first (11 samples, 0.01%)</title><rect x="51.5146%" y="597" width="0.0101%" height="15" fill="rgb(254,165,40)"/><text x="51.7646%" y="607.50"></text></g><g><title>_rjem_je_extents_alloc (16 samples, 0.01%)</title><rect x="51.5256%" y="597" width="0.0147%" height="15" fill="rgb(246,173,38)"/><text x="51.7756%" y="607.50"></text></g><g><title>extent_recycle (16 samples, 0.01%)</title><rect x="51.5256%" y="581" width="0.0147%" height="15" fill="rgb(215,3,27)"/><text x="51.7756%" y="591.50"></text></g><g><title>arena_slab_alloc (19 samples, 0.02%)</title><rect x="51.5247%" y="613" width="0.0174%" height="15" fill="rgb(239,169,51)"/><text x="51.7747%" y="623.50"></text></g><g><title>arena_bin_nonfull_slab_get (34 samples, 0.03%)</title><rect x="51.5146%" y="629" width="0.0312%" height="15" fill="rgb(212,5,25)"/><text x="51.7646%" y="639.50"></text></g><g><title>arena_bin_malloc_hard (39 samples, 0.04%)</title><rect x="51.5137%" y="645" width="0.0358%" height="15" fill="rgb(243,45,17)"/><text x="51.7637%" y="655.50"></text></g><g><title>malloc_mutex_lock (13 samples, 0.01%)</title><rect x="51.5577%" y="645" width="0.0119%" height="15" fill="rgb(242,97,9)"/><text x="51.8077%" y="655.50"></text></g><g><title>malloc_mutex_trylock_final (13 samples, 0.01%)</title><rect x="51.5577%" y="629" width="0.0119%" height="15" fill="rgb(228,71,31)"/><text x="51.8077%" y="639.50"></text></g><g><title>__GI___pthread_mutex_trylock (12 samples, 0.01%)</title><rect x="51.5587%" y="613" width="0.0110%" height="15" fill="rgb(252,184,16)"/><text x="51.8087%" y="623.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (67 samples, 0.06%)</title><rect x="51.5100%" y="677" width="0.0615%" height="15" fill="rgb(236,169,46)"/><text x="51.7600%" y="687.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (67 samples, 0.06%)</title><rect x="51.5100%" y="661" width="0.0615%" height="15" fill="rgb(207,17,47)"/><text x="51.7600%" y="671.50"></text></g><g><title>imalloc_no_sample (82 samples, 0.08%)</title><rect x="51.5054%" y="741" width="0.0752%" height="15" fill="rgb(206,201,28)"/><text x="51.7554%" y="751.50"></text></g><g><title>iallocztm (80 samples, 0.07%)</title><rect x="51.5073%" y="725" width="0.0734%" height="15" fill="rgb(224,184,23)"/><text x="51.7573%" y="735.50"></text></g><g><title>arena_malloc (80 samples, 0.07%)</title><rect x="51.5073%" y="709" width="0.0734%" height="15" fill="rgb(208,139,48)"/><text x="51.7573%" y="719.50"></text></g><g><title>tcache_alloc_small (79 samples, 0.07%)</title><rect x="51.5082%" y="693" width="0.0725%" height="15" fill="rgb(208,130,10)"/><text x="51.7582%" y="703.50"></text></g><g><title>imalloc_body (89 samples, 0.08%)</title><rect x="51.5027%" y="757" width="0.0816%" height="15" fill="rgb(211,213,45)"/><text x="51.7527%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (119 samples, 0.11%)</title><rect x="51.4788%" y="837" width="0.1092%" height="15" fill="rgb(235,100,30)"/><text x="51.7288%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (119 samples, 0.11%)</title><rect x="51.4788%" y="821" width="0.1092%" height="15" fill="rgb(206,144,31)"/><text x="51.7288%" y="831.50"></text></g><g><title>alloc::alloc::alloc (117 samples, 0.11%)</title><rect x="51.4807%" y="805" width="0.1073%" height="15" fill="rgb(224,200,26)"/><text x="51.7307%" y="815.50"></text></g><g><title>_rjem_mallocx (110 samples, 0.10%)</title><rect x="51.4871%" y="789" width="0.1009%" height="15" fill="rgb(247,104,53)"/><text x="51.7371%" y="799.50"></text></g><g><title>imalloc (95 samples, 0.09%)</title><rect x="51.5009%" y="773" width="0.0872%" height="15" fill="rgb(220,14,17)"/><text x="51.7509%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (154 samples, 0.14%)</title><rect x="51.4669%" y="885" width="0.1413%" height="15" fill="rgb(230,140,40)"/><text x="51.7169%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (145 samples, 0.13%)</title><rect x="51.4752%" y="869" width="0.1330%" height="15" fill="rgb(229,2,41)"/><text x="51.7252%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (145 samples, 0.13%)</title><rect x="51.4752%" y="853" width="0.1330%" height="15" fill="rgb(232,89,16)"/><text x="51.7252%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (22 samples, 0.02%)</title><rect x="51.5880%" y="837" width="0.0202%" height="15" fill="rgb(247,59,52)"/><text x="51.8380%" y="847.50"></text></g><g><title>[libc-2.31.so] (21 samples, 0.02%)</title><rect x="51.6366%" y="869" width="0.0193%" height="15" fill="rgb(226,110,21)"/><text x="51.8866%" y="879.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (53 samples, 0.05%)</title><rect x="51.6082%" y="885" width="0.0486%" height="15" fill="rgb(224,176,43)"/><text x="51.8582%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,450 samples, 1.33%)</title><rect x="50.3303%" y="949" width="1.3302%" height="15" fill="rgb(221,73,6)"/><text x="50.5803%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,450 samples, 1.33%)</title><rect x="50.3303%" y="933" width="1.3302%" height="15" fill="rgb(232,78,19)"/><text x="50.5803%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (1,448 samples, 1.33%)</title><rect x="50.3321%" y="917" width="1.3284%" height="15" fill="rgb(233,112,48)"/><text x="50.5821%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,448 samples, 1.33%)</title><rect x="50.3321%" y="901" width="1.3284%" height="15" fill="rgb(243,131,47)"/><text x="50.5821%" y="911.50"></text></g><g><title>&lt;model::rho_types::MatchCase as core::clone::Clone&gt;::clone (1,451 samples, 1.33%)</title><rect x="50.3303%" y="997" width="1.3311%" height="15" fill="rgb(226,51,1)"/><text x="50.5803%" y="1007.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,451 samples, 1.33%)</title><rect x="50.3303%" y="981" width="1.3311%" height="15" fill="rgb(247,58,7)"/><text x="50.5803%" y="991.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (1,451 samples, 1.33%)</title><rect x="50.3303%" y="965" width="1.3311%" height="15" fill="rgb(209,7,32)"/><text x="50.5803%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,452 samples, 1.33%)</title><rect x="50.3303%" y="1061" width="1.3321%" height="15" fill="rgb(209,39,41)"/><text x="50.5803%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,452 samples, 1.33%)</title><rect x="50.3303%" y="1045" width="1.3321%" height="15" fill="rgb(226,182,46)"/><text x="50.5803%" y="1055.50"></text></g><g><title>alloc::slice::hack::to_vec (1,452 samples, 1.33%)</title><rect x="50.3303%" y="1029" width="1.3321%" height="15" fill="rgb(230,219,10)"/><text x="50.5803%" y="1039.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,452 samples, 1.33%)</title><rect x="50.3303%" y="1013" width="1.3321%" height="15" fill="rgb(227,175,30)"/><text x="50.5803%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (24 samples, 0.02%)</title><rect x="51.8064%" y="853" width="0.0220%" height="15" fill="rgb(217,2,50)"/><text x="52.0564%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (15 samples, 0.01%)</title><rect x="51.8889%" y="757" width="0.0138%" height="15" fill="rgb(229,160,0)"/><text x="52.1389%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (15 samples, 0.01%)</title><rect x="51.8889%" y="741" width="0.0138%" height="15" fill="rgb(207,78,37)"/><text x="52.1389%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (13 samples, 0.01%)</title><rect x="51.9027%" y="757" width="0.0119%" height="15" fill="rgb(225,57,0)"/><text x="52.1527%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (131 samples, 0.12%)</title><rect x="51.8009%" y="869" width="0.1202%" height="15" fill="rgb(232,154,2)"/><text x="52.0509%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (101 samples, 0.09%)</title><rect x="51.8284%" y="853" width="0.0927%" height="15" fill="rgb(241,212,25)"/><text x="52.0784%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (101 samples, 0.09%)</title><rect x="51.8284%" y="837" width="0.0927%" height="15" fill="rgb(226,69,20)"/><text x="52.0784%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (101 samples, 0.09%)</title><rect x="51.8284%" y="821" width="0.0927%" height="15" fill="rgb(247,184,54)"/><text x="52.0784%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (67 samples, 0.06%)</title><rect x="51.8596%" y="805" width="0.0615%" height="15" fill="rgb(210,145,0)"/><text x="52.1096%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (39 samples, 0.04%)</title><rect x="51.8853%" y="789" width="0.0358%" height="15" fill="rgb(253,82,12)"/><text x="52.1353%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (39 samples, 0.04%)</title><rect x="51.8853%" y="773" width="0.0358%" height="15" fill="rgb(245,42,11)"/><text x="52.1353%" y="783.50"></text></g><g><title>imalloc_no_sample (16 samples, 0.01%)</title><rect x="51.9513%" y="613" width="0.0147%" height="15" fill="rgb(219,147,32)"/><text x="52.2013%" y="623.50"></text></g><g><title>iallocztm (16 samples, 0.01%)</title><rect x="51.9513%" y="597" width="0.0147%" height="15" fill="rgb(246,12,7)"/><text x="52.2013%" y="607.50"></text></g><g><title>arena_malloc (16 samples, 0.01%)</title><rect x="51.9513%" y="581" width="0.0147%" height="15" fill="rgb(243,50,9)"/><text x="52.2013%" y="591.50"></text></g><g><title>tcache_alloc_small (16 samples, 0.01%)</title><rect x="51.9513%" y="565" width="0.0147%" height="15" fill="rgb(219,149,6)"/><text x="52.2013%" y="575.50"></text></g><g><title>cache_bin_alloc_easy (15 samples, 0.01%)</title><rect x="51.9522%" y="549" width="0.0138%" height="15" fill="rgb(241,51,42)"/><text x="52.2022%" y="559.50"></text></g><g><title>imalloc_body (20 samples, 0.02%)</title><rect x="51.9504%" y="629" width="0.0183%" height="15" fill="rgb(226,128,27)"/><text x="52.2004%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (53 samples, 0.05%)</title><rect x="51.9247%" y="757" width="0.0486%" height="15" fill="rgb(244,144,4)"/><text x="52.1747%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (53 samples, 0.05%)</title><rect x="51.9247%" y="741" width="0.0486%" height="15" fill="rgb(221,4,13)"/><text x="52.1747%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (53 samples, 0.05%)</title><rect x="51.9247%" y="725" width="0.0486%" height="15" fill="rgb(208,170,28)"/><text x="52.1747%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (46 samples, 0.04%)</title><rect x="51.9311%" y="709" width="0.0422%" height="15" fill="rgb(226,131,13)"/><text x="52.1811%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (46 samples, 0.04%)</title><rect x="51.9311%" y="693" width="0.0422%" height="15" fill="rgb(215,72,41)"/><text x="52.1811%" y="703.50"></text></g><g><title>alloc::alloc::alloc (46 samples, 0.04%)</title><rect x="51.9311%" y="677" width="0.0422%" height="15" fill="rgb(243,108,20)"/><text x="52.1811%" y="687.50"></text></g><g><title>_rjem_mallocx (45 samples, 0.04%)</title><rect x="51.9320%" y="661" width="0.0413%" height="15" fill="rgb(230,189,17)"/><text x="52.1820%" y="671.50"></text></g><g><title>imalloc (25 samples, 0.02%)</title><rect x="51.9504%" y="645" width="0.0229%" height="15" fill="rgb(220,50,17)"/><text x="52.2004%" y="655.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (73 samples, 0.07%)</title><rect x="51.9210%" y="869" width="0.0670%" height="15" fill="rgb(248,152,48)"/><text x="52.1710%" y="879.50"></text></g><g><title>&lt;model::bitset::BitSet&lt;B&gt; as core::clone::Clone&gt;::clone (70 samples, 0.06%)</title><rect x="51.9238%" y="853" width="0.0642%" height="15" fill="rgb(244,91,11)"/><text x="52.1738%" y="863.50"></text></g><g><title>&lt;bit_vec::BitVec&lt;B&gt; as core::clone::Clone&gt;::clone (70 samples, 0.06%)</title><rect x="51.9238%" y="837" width="0.0642%" height="15" fill="rgb(220,157,5)"/><text x="52.1738%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (69 samples, 0.06%)</title><rect x="51.9247%" y="821" width="0.0633%" height="15" fill="rgb(253,137,8)"/><text x="52.1747%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (69 samples, 0.06%)</title><rect x="51.9247%" y="805" width="0.0633%" height="15" fill="rgb(217,137,51)"/><text x="52.1747%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (69 samples, 0.06%)</title><rect x="51.9247%" y="789" width="0.0633%" height="15" fill="rgb(218,209,53)"/><text x="52.1747%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (69 samples, 0.06%)</title><rect x="51.9247%" y="773" width="0.0633%" height="15" fill="rgb(249,137,25)"/><text x="52.1747%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (16 samples, 0.01%)</title><rect x="51.9733%" y="757" width="0.0147%" height="15" fill="rgb(239,155,26)"/><text x="52.2233%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16 samples, 0.01%)</title><rect x="51.9733%" y="741" width="0.0147%" height="15" fill="rgb(227,85,46)"/><text x="52.2233%" y="751.50"></text></g><g><title>[libc-2.31.so] (16 samples, 0.01%)</title><rect x="51.9733%" y="725" width="0.0147%" height="15" fill="rgb(251,107,43)"/><text x="52.2233%" y="735.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (251 samples, 0.23%)</title><rect x="51.7596%" y="885" width="0.2303%" height="15" fill="rgb(234,170,33)"/><text x="52.0096%" y="895.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (311 samples, 0.29%)</title><rect x="51.7174%" y="901" width="0.2853%" height="15" fill="rgb(206,29,35)"/><text x="51.9674%" y="911.50"></text></g><g><title>[libc-2.31.so] (14 samples, 0.01%)</title><rect x="51.9898%" y="885" width="0.0128%" height="15" fill="rgb(227,138,25)"/><text x="52.2398%" y="895.50"></text></g><g><title>&lt;model::rho_types::expr::ExprInstance as core::clone::Clone&gt;::clone (345 samples, 0.32%)</title><rect x="51.6935%" y="933" width="0.3165%" height="15" fill="rgb(249,131,35)"/><text x="51.9435%" y="943.50"></text></g><g><title>&lt;model::rho_types::ELt as core::clone::Clone&gt;::clone (333 samples, 0.31%)</title><rect x="51.7045%" y="917" width="0.3055%" height="15" fill="rgb(239,6,40)"/><text x="51.9545%" y="927.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (383 samples, 0.35%)</title><rect x="51.6788%" y="949" width="0.3514%" height="15" fill="rgb(246,136,47)"/><text x="51.9288%" y="959.50"></text></g><g><title>[libc-2.31.so] (22 samples, 0.02%)</title><rect x="52.0100%" y="933" width="0.0202%" height="15" fill="rgb(253,58,26)"/><text x="52.2600%" y="943.50"></text></g><g><title>&lt;model::rho_types::Expr as core::clone::Clone&gt;::clone (411 samples, 0.38%)</title><rect x="51.6678%" y="965" width="0.3771%" height="15" fill="rgb(237,141,10)"/><text x="51.9178%" y="975.50"></text></g><g><title>[libc-2.31.so] (16 samples, 0.01%)</title><rect x="52.0302%" y="949" width="0.0147%" height="15" fill="rgb(234,156,12)"/><text x="52.2802%" y="959.50"></text></g><g><title>arena_bin_malloc_hard (13 samples, 0.01%)</title><rect x="52.0586%" y="725" width="0.0119%" height="15" fill="rgb(243,224,36)"/><text x="52.3086%" y="735.50"></text></g><g><title>arena_bin_nonfull_slab_get (13 samples, 0.01%)</title><rect x="52.0586%" y="709" width="0.0119%" height="15" fill="rgb(205,229,51)"/><text x="52.3086%" y="719.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (27 samples, 0.02%)</title><rect x="52.0559%" y="757" width="0.0248%" height="15" fill="rgb(223,189,4)"/><text x="52.3059%" y="767.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (27 samples, 0.02%)</title><rect x="52.0559%" y="741" width="0.0248%" height="15" fill="rgb(249,167,54)"/><text x="52.3059%" y="751.50"></text></g><g><title>imalloc_no_sample (37 samples, 0.03%)</title><rect x="52.0531%" y="821" width="0.0339%" height="15" fill="rgb(218,34,28)"/><text x="52.3031%" y="831.50"></text></g><g><title>iallocztm (36 samples, 0.03%)</title><rect x="52.0541%" y="805" width="0.0330%" height="15" fill="rgb(232,109,42)"/><text x="52.3041%" y="815.50"></text></g><g><title>arena_malloc (36 samples, 0.03%)</title><rect x="52.0541%" y="789" width="0.0330%" height="15" fill="rgb(248,214,46)"/><text x="52.3041%" y="799.50"></text></g><g><title>tcache_alloc_small (36 samples, 0.03%)</title><rect x="52.0541%" y="773" width="0.0330%" height="15" fill="rgb(244,216,40)"/><text x="52.3041%" y="783.50"></text></g><g><title>imalloc_body (42 samples, 0.04%)</title><rect x="52.0513%" y="837" width="0.0385%" height="15" fill="rgb(231,226,31)"/><text x="52.3013%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (48 samples, 0.04%)</title><rect x="52.0476%" y="917" width="0.0440%" height="15" fill="rgb(238,38,43)"/><text x="52.2976%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (48 samples, 0.04%)</title><rect x="52.0476%" y="901" width="0.0440%" height="15" fill="rgb(208,88,43)"/><text x="52.2976%" y="911.50"></text></g><g><title>alloc::alloc::alloc (47 samples, 0.04%)</title><rect x="52.0485%" y="885" width="0.0431%" height="15" fill="rgb(205,136,37)"/><text x="52.2985%" y="895.50"></text></g><g><title>_rjem_mallocx (47 samples, 0.04%)</title><rect x="52.0485%" y="869" width="0.0431%" height="15" fill="rgb(237,34,14)"/><text x="52.2985%" y="879.50"></text></g><g><title>imalloc (44 samples, 0.04%)</title><rect x="52.0513%" y="853" width="0.0404%" height="15" fill="rgb(236,193,44)"/><text x="52.3013%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (51 samples, 0.05%)</title><rect x="52.0458%" y="965" width="0.0468%" height="15" fill="rgb(231,48,10)"/><text x="52.2958%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (50 samples, 0.05%)</title><rect x="52.0467%" y="949" width="0.0459%" height="15" fill="rgb(213,141,34)"/><text x="52.2967%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (50 samples, 0.05%)</title><rect x="52.0467%" y="933" width="0.0459%" height="15" fill="rgb(249,130,34)"/><text x="52.2967%" y="943.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (24 samples, 0.02%)</title><rect x="52.0926%" y="965" width="0.0220%" height="15" fill="rgb(219,42,41)"/><text x="52.3426%" y="975.50"></text></g><g><title>&lt;model::rho_types::Match as core::clone::Clone&gt;::clone (1,946 samples, 1.79%)</title><rect x="50.3303%" y="1077" width="1.7853%" height="15" fill="rgb(224,100,54)"/><text x="50.5803%" y="1087.50">&lt;..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (494 samples, 0.45%)</title><rect x="51.6623%" y="1061" width="0.4532%" height="15" fill="rgb(229,200,27)"/><text x="51.9123%" y="1071.50"></text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (494 samples, 0.45%)</title><rect x="51.6623%" y="1045" width="0.4532%" height="15" fill="rgb(217,118,10)"/><text x="51.9123%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (494 samples, 0.45%)</title><rect x="51.6623%" y="1029" width="0.4532%" height="15" fill="rgb(206,22,3)"/><text x="51.9123%" y="1039.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (494 samples, 0.45%)</title><rect x="51.6623%" y="1013" width="0.4532%" height="15" fill="rgb(232,163,46)"/><text x="51.9123%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (492 samples, 0.45%)</title><rect x="51.6642%" y="997" width="0.4514%" height="15" fill="rgb(206,95,13)"/><text x="51.9142%" y="1007.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (492 samples, 0.45%)</title><rect x="51.6642%" y="981" width="0.4514%" height="15" fill="rgb(253,154,18)"/><text x="51.9142%" y="991.50"></text></g><g><title>&lt;rho_runtime::storage::TaggedContinuation as core::clone::Clone&gt;::clone (1,960 samples, 1.80%)</title><rect x="50.3238%" y="1205" width="1.7981%" height="15" fill="rgb(219,32,23)"/><text x="50.5738%" y="1215.50">&lt;..</text></g><g><title>&lt;model::rho_types::ParWithRandom as core::clone::Clone&gt;::clone (1,960 samples, 1.80%)</title><rect x="50.3238%" y="1189" width="1.7981%" height="15" fill="rgb(230,191,45)"/><text x="50.5738%" y="1199.50">&lt;..</text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1,954 samples, 1.79%)</title><rect x="50.3293%" y="1173" width="1.7926%" height="15" fill="rgb(229,64,36)"/><text x="50.5793%" y="1183.50">&lt;..</text></g><g><title>&lt;model::rho_types::Par as core::clone::Clone&gt;::clone (1,953 samples, 1.79%)</title><rect x="50.3303%" y="1157" width="1.7917%" height="15" fill="rgb(205,129,25)"/><text x="50.5803%" y="1167.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1,953 samples, 1.79%)</title><rect x="50.3303%" y="1141" width="1.7917%" height="15" fill="rgb(254,112,7)"/><text x="50.5803%" y="1151.50">&lt;..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1,953 samples, 1.79%)</title><rect x="50.3303%" y="1125" width="1.7917%" height="15" fill="rgb(226,53,48)"/><text x="50.5803%" y="1135.50">a..</text></g><g><title>alloc::slice::hack::to_vec (1,953 samples, 1.79%)</title><rect x="50.3303%" y="1109" width="1.7917%" height="15" fill="rgb(214,153,38)"/><text x="50.5803%" y="1119.50">a..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1,953 samples, 1.79%)</title><rect x="50.3303%" y="1093" width="1.7917%" height="15" fill="rgb(243,101,7)"/><text x="50.5803%" y="1103.50">&lt;..</text></g><g><title>rho_runtime::storage::transit::Transit::match_one (11 samples, 0.01%)</title><rect x="52.1256%" y="1205" width="0.0101%" height="15" fill="rgb(240,140,22)"/><text x="52.3756%" y="1215.50"></text></g><g><title>rho_runtime::storage::transit::Transit::join (1,985 samples, 1.82%)</title><rect x="50.3165%" y="1221" width="1.8210%" height="15" fill="rgb(235,114,2)"/><text x="50.5665%" y="1231.50">r..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (155 samples, 0.14%)</title><rect x="52.1623%" y="309" width="0.1422%" height="15" fill="rgb(242,59,12)"/><text x="52.4123%" y="319.50"></text></g><g><title>core::ptr::read (149 samples, 0.14%)</title><rect x="52.1678%" y="293" width="0.1367%" height="15" fill="rgb(252,134,9)"/><text x="52.4178%" y="303.50"></text></g><g><title>[libc-2.31.so] (149 samples, 0.14%)</title><rect x="52.1678%" y="277" width="0.1367%" height="15" fill="rgb(236,4,44)"/><text x="52.4178%" y="287.50"></text></g><g><title>[libc-2.31.so] (112 samples, 0.10%)</title><rect x="52.3054%" y="309" width="0.1027%" height="15" fill="rgb(254,172,41)"/><text x="52.5554%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (51 samples, 0.05%)</title><rect x="52.4137%" y="277" width="0.0468%" height="15" fill="rgb(244,63,20)"/><text x="52.6637%" y="287.50"></text></g><g><title>[libc-2.31.so] (51 samples, 0.05%)</title><rect x="52.4137%" y="261" width="0.0468%" height="15" fill="rgb(250,73,31)"/><text x="52.6637%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (60 samples, 0.06%)</title><rect x="52.4082%" y="293" width="0.0550%" height="15" fill="rgb(241,38,36)"/><text x="52.6582%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (61 samples, 0.06%)</title><rect x="52.4082%" y="309" width="0.0560%" height="15" fill="rgb(245,211,2)"/><text x="52.6582%" y="319.50"></text></g><g><title>iallocztm (13 samples, 0.01%)</title><rect x="52.4907%" y="133" width="0.0119%" height="15" fill="rgb(206,120,28)"/><text x="52.7407%" y="143.50"></text></g><g><title>arena_malloc (13 samples, 0.01%)</title><rect x="52.4907%" y="117" width="0.0119%" height="15" fill="rgb(211,59,34)"/><text x="52.7407%" y="127.50"></text></g><g><title>tcache_alloc_small (12 samples, 0.01%)</title><rect x="52.4917%" y="101" width="0.0110%" height="15" fill="rgb(233,168,5)"/><text x="52.7417%" y="111.50"></text></g><g><title>imalloc_no_sample (16 samples, 0.01%)</title><rect x="52.4889%" y="149" width="0.0147%" height="15" fill="rgb(234,33,13)"/><text x="52.7389%" y="159.50"></text></g><g><title>imalloc_body (23 samples, 0.02%)</title><rect x="52.4871%" y="165" width="0.0211%" height="15" fill="rgb(231,150,26)"/><text x="52.7371%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (48 samples, 0.04%)</title><rect x="52.4660%" y="245" width="0.0440%" height="15" fill="rgb(217,191,4)"/><text x="52.7160%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (48 samples, 0.04%)</title><rect x="52.4660%" y="229" width="0.0440%" height="15" fill="rgb(246,198,38)"/><text x="52.7160%" y="239.50"></text></g><g><title>alloc::alloc::alloc (47 samples, 0.04%)</title><rect x="52.4669%" y="213" width="0.0431%" height="15" fill="rgb(245,64,37)"/><text x="52.7169%" y="223.50"></text></g><g><title>_rjem_mallocx (41 samples, 0.04%)</title><rect x="52.4724%" y="197" width="0.0376%" height="15" fill="rgb(250,30,36)"/><text x="52.7224%" y="207.50"></text></g><g><title>imalloc (27 samples, 0.02%)</title><rect x="52.4852%" y="181" width="0.0248%" height="15" fill="rgb(217,86,53)"/><text x="52.7352%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (58 samples, 0.05%)</title><rect x="52.4641%" y="309" width="0.0532%" height="15" fill="rgb(228,157,16)"/><text x="52.7141%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (58 samples, 0.05%)</title><rect x="52.4641%" y="293" width="0.0532%" height="15" fill="rgb(217,59,31)"/><text x="52.7141%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (57 samples, 0.05%)</title><rect x="52.4650%" y="277" width="0.0523%" height="15" fill="rgb(237,138,41)"/><text x="52.7150%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (57 samples, 0.05%)</title><rect x="52.4650%" y="261" width="0.0523%" height="15" fill="rgb(227,91,49)"/><text x="52.7150%" y="271.50"></text></g><g><title>isfree (22 samples, 0.02%)</title><rect x="52.5311%" y="277" width="0.0202%" height="15" fill="rgb(247,21,44)"/><text x="52.7811%" y="287.50"></text></g><g><title>isdalloct (22 samples, 0.02%)</title><rect x="52.5311%" y="261" width="0.0202%" height="15" fill="rgb(219,210,51)"/><text x="52.7811%" y="271.50"></text></g><g><title>arena_sdalloc (22 samples, 0.02%)</title><rect x="52.5311%" y="245" width="0.0202%" height="15" fill="rgb(209,140,6)"/><text x="52.7811%" y="255.50"></text></g><g><title>tcache_dalloc_small (15 samples, 0.01%)</title><rect x="52.5375%" y="229" width="0.0138%" height="15" fill="rgb(221,188,24)"/><text x="52.7875%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;model::rho_types::Expr&gt;&gt; (40 samples, 0.04%)</title><rect x="52.5173%" y="309" width="0.0367%" height="15" fill="rgb(232,154,20)"/><text x="52.7673%" y="319.50"></text></g><g><title>_rjem_sdallocx (26 samples, 0.02%)</title><rect x="52.5302%" y="293" width="0.0239%" height="15" fill="rgb(244,137,50)"/><text x="52.7802%" y="303.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_expr::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Expr&gt;::substitute_no_sort (13 samples, 0.01%)</title><rect x="52.5540%" y="309" width="0.0119%" height="15" fill="rgb(225,185,43)"/><text x="52.8040%" y="319.50"></text></g><g><title>start_thread (459 samples, 0.42%)</title><rect x="52.1467%" y="1221" width="0.4211%" height="15" fill="rgb(213,205,38)"/><text x="52.3967%" y="1231.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (459 samples, 0.42%)</title><rect x="52.1467%" y="1205" width="0.4211%" height="15" fill="rgb(236,73,12)"/><text x="52.3967%" y="1215.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (459 samples, 0.42%)</title><rect x="52.1467%" y="1189" width="0.4211%" height="15" fill="rgb(235,219,13)"/><text x="52.3967%" y="1199.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (459 samples, 0.42%)</title><rect x="52.1467%" y="1173" width="0.4211%" height="15" fill="rgb(218,59,36)"/><text x="52.3967%" y="1183.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (459 samples, 0.42%)</title><rect x="52.1467%" y="1157" width="0.4211%" height="15" fill="rgb(205,110,39)"/><text x="52.3967%" y="1167.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (459 samples, 0.42%)</title><rect x="52.1467%" y="1141" width="0.4211%" height="15" fill="rgb(218,206,42)"/><text x="52.3967%" y="1151.50"></text></g><g><title>std::panic::catch_unwind (459 samples, 0.42%)</title><rect x="52.1467%" y="1125" width="0.4211%" height="15" fill="rgb(248,125,24)"/><text x="52.3967%" y="1135.50"></text></g><g><title>std::panicking::try (459 samples, 0.42%)</title><rect x="52.1467%" y="1109" width="0.4211%" height="15" fill="rgb(242,28,27)"/><text x="52.3967%" y="1119.50"></text></g><g><title>std::panicking::try::do_call (459 samples, 0.42%)</title><rect x="52.1467%" y="1093" width="0.4211%" height="15" fill="rgb(216,228,15)"/><text x="52.3967%" y="1103.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (459 samples, 0.42%)</title><rect x="52.1467%" y="1077" width="0.4211%" height="15" fill="rgb(235,116,46)"/><text x="52.3967%" y="1087.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (459 samples, 0.42%)</title><rect x="52.1467%" y="1061" width="0.4211%" height="15" fill="rgb(224,18,32)"/><text x="52.3967%" y="1071.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (459 samples, 0.42%)</title><rect x="52.1467%" y="1045" width="0.4211%" height="15" fill="rgb(252,5,12)"/><text x="52.3967%" y="1055.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (459 samples, 0.42%)</title><rect x="52.1467%" y="1029" width="0.4211%" height="15" fill="rgb(251,36,5)"/><text x="52.3967%" y="1039.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (459 samples, 0.42%)</title><rect x="52.1467%" y="1013" width="0.4211%" height="15" fill="rgb(217,53,14)"/><text x="52.3967%" y="1023.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (459 samples, 0.42%)</title><rect x="52.1467%" y="997" width="0.4211%" height="15" fill="rgb(215,86,45)"/><text x="52.3967%" y="1007.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (459 samples, 0.42%)</title><rect x="52.1467%" y="981" width="0.4211%" height="15" fill="rgb(242,169,11)"/><text x="52.3967%" y="991.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (459 samples, 0.42%)</title><rect x="52.1467%" y="965" width="0.4211%" height="15" fill="rgb(211,213,45)"/><text x="52.3967%" y="975.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (459 samples, 0.42%)</title><rect x="52.1467%" y="949" width="0.4211%" height="15" fill="rgb(205,88,11)"/><text x="52.3967%" y="959.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (459 samples, 0.42%)</title><rect x="52.1467%" y="933" width="0.4211%" height="15" fill="rgb(252,69,26)"/><text x="52.3967%" y="943.50"></text></g><g><title>std::panic::catch_unwind (459 samples, 0.42%)</title><rect x="52.1467%" y="917" width="0.4211%" height="15" fill="rgb(246,123,37)"/><text x="52.3967%" y="927.50"></text></g><g><title>std::panicking::try (459 samples, 0.42%)</title><rect x="52.1467%" y="901" width="0.4211%" height="15" fill="rgb(212,205,5)"/><text x="52.3967%" y="911.50"></text></g><g><title>std::panicking::try::do_call (459 samples, 0.42%)</title><rect x="52.1467%" y="885" width="0.4211%" height="15" fill="rgb(253,148,0)"/><text x="52.3967%" y="895.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (459 samples, 0.42%)</title><rect x="52.1467%" y="869" width="0.4211%" height="15" fill="rgb(239,22,4)"/><text x="52.3967%" y="879.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (459 samples, 0.42%)</title><rect x="52.1467%" y="853" width="0.4211%" height="15" fill="rgb(226,26,53)"/><text x="52.3967%" y="863.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (459 samples, 0.42%)</title><rect x="52.1467%" y="837" width="0.4211%" height="15" fill="rgb(225,229,45)"/><text x="52.3967%" y="847.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (459 samples, 0.42%)</title><rect x="52.1467%" y="821" width="0.4211%" height="15" fill="rgb(220,60,37)"/><text x="52.3967%" y="831.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (459 samples, 0.42%)</title><rect x="52.1467%" y="805" width="0.4211%" height="15" fill="rgb(217,180,35)"/><text x="52.3967%" y="815.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (459 samples, 0.42%)</title><rect x="52.1467%" y="789" width="0.4211%" height="15" fill="rgb(229,7,53)"/><text x="52.3967%" y="799.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (459 samples, 0.42%)</title><rect x="52.1467%" y="773" width="0.4211%" height="15" fill="rgb(254,137,3)"/><text x="52.3967%" y="783.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (459 samples, 0.42%)</title><rect x="52.1467%" y="757" width="0.4211%" height="15" fill="rgb(215,140,41)"/><text x="52.3967%" y="767.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (459 samples, 0.42%)</title><rect x="52.1467%" y="741" width="0.4211%" height="15" fill="rgb(250,80,15)"/><text x="52.3967%" y="751.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (459 samples, 0.42%)</title><rect x="52.1467%" y="725" width="0.4211%" height="15" fill="rgb(252,191,6)"/><text x="52.3967%" y="735.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (459 samples, 0.42%)</title><rect x="52.1467%" y="709" width="0.4211%" height="15" fill="rgb(246,217,18)"/><text x="52.3967%" y="719.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (459 samples, 0.42%)</title><rect x="52.1467%" y="693" width="0.4211%" height="15" fill="rgb(223,93,7)"/><text x="52.3967%" y="703.50"></text></g><g><title>tokio::coop::budget (459 samples, 0.42%)</title><rect x="52.1467%" y="677" width="0.4211%" height="15" fill="rgb(225,55,52)"/><text x="52.3967%" y="687.50"></text></g><g><title>tokio::coop::with_budget (459 samples, 0.42%)</title><rect x="52.1467%" y="661" width="0.4211%" height="15" fill="rgb(240,31,24)"/><text x="52.3967%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (459 samples, 0.42%)</title><rect x="52.1467%" y="645" width="0.4211%" height="15" fill="rgb(205,56,52)"/><text x="52.3967%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (459 samples, 0.42%)</title><rect x="52.1467%" y="629" width="0.4211%" height="15" fill="rgb(246,146,12)"/><text x="52.3967%" y="639.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (459 samples, 0.42%)</title><rect x="52.1467%" y="613" width="0.4211%" height="15" fill="rgb(239,84,36)"/><text x="52.3967%" y="623.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (459 samples, 0.42%)</title><rect x="52.1467%" y="597" width="0.4211%" height="15" fill="rgb(207,41,40)"/><text x="52.3967%" y="607.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (459 samples, 0.42%)</title><rect x="52.1467%" y="581" width="0.4211%" height="15" fill="rgb(241,179,25)"/><text x="52.3967%" y="591.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (459 samples, 0.42%)</title><rect x="52.1467%" y="565" width="0.4211%" height="15" fill="rgb(210,0,34)"/><text x="52.3967%" y="575.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (459 samples, 0.42%)</title><rect x="52.1467%" y="549" width="0.4211%" height="15" fill="rgb(225,217,29)"/><text x="52.3967%" y="559.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (459 samples, 0.42%)</title><rect x="52.1467%" y="533" width="0.4211%" height="15" fill="rgb(216,191,38)"/><text x="52.3967%" y="543.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (459 samples, 0.42%)</title><rect x="52.1467%" y="517" width="0.4211%" height="15" fill="rgb(232,140,52)"/><text x="52.3967%" y="527.50"></text></g><g><title>std::panic::catch_unwind (459 samples, 0.42%)</title><rect x="52.1467%" y="501" width="0.4211%" height="15" fill="rgb(223,158,51)"/><text x="52.3967%" y="511.50"></text></g><g><title>std::panicking::try (459 samples, 0.42%)</title><rect x="52.1467%" y="485" width="0.4211%" height="15" fill="rgb(235,29,51)"/><text x="52.3967%" y="495.50"></text></g><g><title>std::panicking::try::do_call (459 samples, 0.42%)</title><rect x="52.1467%" y="469" width="0.4211%" height="15" fill="rgb(215,181,18)"/><text x="52.3967%" y="479.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (459 samples, 0.42%)</title><rect x="52.1467%" y="453" width="0.4211%" height="15" fill="rgb(227,125,34)"/><text x="52.3967%" y="463.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (459 samples, 0.42%)</title><rect x="52.1467%" y="437" width="0.4211%" height="15" fill="rgb(230,197,49)"/><text x="52.3967%" y="447.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (459 samples, 0.42%)</title><rect x="52.1467%" y="421" width="0.4211%" height="15" fill="rgb(239,141,16)"/><text x="52.3967%" y="431.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (459 samples, 0.42%)</title><rect x="52.1467%" y="405" width="0.4211%" height="15" fill="rgb(225,105,43)"/><text x="52.3967%" y="415.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation::{{closure}} (459 samples, 0.42%)</title><rect x="52.1467%" y="389" width="0.4211%" height="15" fill="rgb(214,131,14)"/><text x="52.3967%" y="399.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_send::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Send&gt;::evaluate (459 samples, 0.42%)</title><rect x="52.1467%" y="373" width="0.4211%" height="15" fill="rgb(229,177,11)"/><text x="52.3967%" y="383.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute (459 samples, 0.42%)</title><rect x="52.1467%" y="357" width="0.4211%" height="15" fill="rgb(231,180,14)"/><text x="52.3967%" y="367.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute_no_sort (459 samples, 0.42%)</title><rect x="52.1467%" y="341" width="0.4211%" height="15" fill="rgb(232,88,2)"/><text x="52.3967%" y="351.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::substitute_expressions_in_par (459 samples, 0.42%)</title><rect x="52.1467%" y="325" width="0.4211%" height="15" fill="rgb(205,220,8)"/><text x="52.3967%" y="335.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Worker::eq (18 samples, 0.02%)</title><rect x="52.6008%" y="581" width="0.0165%" height="15" fill="rgb(225,23,53)"/><text x="52.8508%" y="591.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (54 samples, 0.05%)</title><rect x="52.5816%" y="613" width="0.0495%" height="15" fill="rgb(213,62,29)"/><text x="52.8316%" y="623.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::release::{{closure}} (44 samples, 0.04%)</title><rect x="52.5907%" y="597" width="0.0404%" height="15" fill="rgb(227,75,7)"/><text x="52.8407%" y="607.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (15 samples, 0.01%)</title><rect x="52.6173%" y="581" width="0.0138%" height="15" fill="rgb(207,105,14)"/><text x="52.8673%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::queue::Pointers&gt;&gt; (15 samples, 0.01%)</title><rect x="52.6412%" y="597" width="0.0138%" height="15" fill="rgb(245,62,29)"/><text x="52.8912%" y="607.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="52.6412%" y="581" width="0.0138%" height="15" fill="rgb(236,202,4)"/><text x="52.8912%" y="591.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (15 samples, 0.01%)</title><rect x="52.6412%" y="565" width="0.0138%" height="15" fill="rgb(250,67,1)"/><text x="52.8912%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (15 samples, 0.01%)</title><rect x="52.6412%" y="549" width="0.0138%" height="15" fill="rgb(253,115,44)"/><text x="52.8912%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (15 samples, 0.01%)</title><rect x="52.6412%" y="533" width="0.0138%" height="15" fill="rgb(251,139,18)"/><text x="52.8912%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (17 samples, 0.02%)</title><rect x="52.6549%" y="549" width="0.0156%" height="15" fill="rgb(218,22,32)"/><text x="52.9049%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (17 samples, 0.02%)</title><rect x="52.6549%" y="533" width="0.0156%" height="15" fill="rgb(243,53,5)"/><text x="52.9049%" y="543.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::is_closed (47 samples, 0.04%)</title><rect x="52.6311%" y="613" width="0.0431%" height="15" fill="rgb(227,56,16)"/><text x="52.8811%" y="623.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (21 samples, 0.02%)</title><rect x="52.6549%" y="597" width="0.0193%" height="15" fill="rgb(245,53,0)"/><text x="52.9049%" y="607.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (21 samples, 0.02%)</title><rect x="52.6549%" y="581" width="0.0193%" height="15" fill="rgb(216,170,35)"/><text x="52.9049%" y="591.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (21 samples, 0.02%)</title><rect x="52.6549%" y="565" width="0.0193%" height="15" fill="rgb(211,200,8)"/><text x="52.9049%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::compare_exchange (37 samples, 0.03%)</title><rect x="52.6760%" y="597" width="0.0339%" height="15" fill="rgb(228,204,44)"/><text x="52.9260%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (37 samples, 0.03%)</title><rect x="52.6760%" y="581" width="0.0339%" height="15" fill="rgb(214,121,17)"/><text x="52.9260%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (11 samples, 0.01%)</title><rect x="52.7100%" y="597" width="0.0101%" height="15" fill="rgb(233,64,38)"/><text x="52.9600%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.01%)</title><rect x="52.7100%" y="581" width="0.0101%" height="15" fill="rgb(253,54,19)"/><text x="52.9600%" y="591.50"></text></g><g><title>tokio::runtime::task::stack::TransferStack&lt;T&gt;::push (51 samples, 0.05%)</title><rect x="52.6742%" y="613" width="0.0468%" height="15" fill="rgb(253,94,18)"/><text x="52.9242%" y="623.50"></text></g><g><title>tokio::runtime::task::harness::SchedulerView&lt;S&gt;::transition_to_terminal (166 samples, 0.15%)</title><rect x="52.5751%" y="693" width="0.1523%" height="15" fill="rgb(227,57,52)"/><text x="52.8251%" y="703.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::release (166 samples, 0.15%)</title><rect x="52.5751%" y="677" width="0.1523%" height="15" fill="rgb(230,228,50)"/><text x="52.8251%" y="687.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (166 samples, 0.15%)</title><rect x="52.5751%" y="661" width="0.1523%" height="15" fill="rgb(217,205,27)"/><text x="52.8251%" y="671.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::release::{{closure}} (166 samples, 0.15%)</title><rect x="52.5751%" y="645" width="0.1523%" height="15" fill="rgb(252,71,50)"/><text x="52.8251%" y="655.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::release (166 samples, 0.15%)</title><rect x="52.5751%" y="629" width="0.1523%" height="15" fill="rgb(209,86,4)"/><text x="52.8251%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (41 samples, 0.04%)</title><rect x="52.7733%" y="581" width="0.0376%" height="15" fill="rgb(229,94,0)"/><text x="53.0233%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_swap (41 samples, 0.04%)</title><rect x="52.7733%" y="565" width="0.0376%" height="15" fill="rgb(252,223,21)"/><text x="53.0233%" y="575.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (98 samples, 0.09%)</title><rect x="52.7357%" y="613" width="0.0899%" height="15" fill="rgb(230,210,4)"/><text x="52.9857%" y="623.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (65 samples, 0.06%)</title><rect x="52.7660%" y="597" width="0.0596%" height="15" fill="rgb(240,149,38)"/><text x="53.0160%" y="607.50"></text></g><g><title>tokio::runtime::park::Inner::unpark_condvar (16 samples, 0.01%)</title><rect x="52.8109%" y="581" width="0.0147%" height="15" fill="rgb(254,105,20)"/><text x="53.0609%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (23 samples, 0.02%)</title><rect x="52.8687%" y="549" width="0.0211%" height="15" fill="rgb(253,87,46)"/><text x="53.1187%" y="559.50"></text></g><g><title>_raw_spin_lock (48 samples, 0.04%)</title><rect x="52.9448%" y="485" width="0.0440%" height="15" fill="rgb(253,116,33)"/><text x="53.1948%" y="495.50"></text></g><g><title>__unqueue_futex (31 samples, 0.03%)</title><rect x="53.1302%" y="453" width="0.0284%" height="15" fill="rgb(229,198,5)"/><text x="53.3802%" y="463.50"></text></g><g><title>mark_wake_futex (90 samples, 0.08%)</title><rect x="53.0880%" y="469" width="0.0826%" height="15" fill="rgb(242,38,37)"/><text x="53.3380%" y="479.50"></text></g><g><title>plist_del (13 samples, 0.01%)</title><rect x="53.1586%" y="453" width="0.0119%" height="15" fill="rgb(242,69,53)"/><text x="53.4086%" y="463.50"></text></g><g><title>wake_q_add_safe (11 samples, 0.01%)</title><rect x="53.1714%" y="469" width="0.0101%" height="15" fill="rgb(249,80,16)"/><text x="53.4214%" y="479.50"></text></g><g><title>available_idle_cpu (21 samples, 0.02%)</title><rect x="53.2980%" y="421" width="0.0193%" height="15" fill="rgb(206,128,11)"/><text x="53.5480%" y="431.50"></text></g><g><title>select_task_rq_fair (62 samples, 0.06%)</title><rect x="53.2641%" y="437" width="0.0569%" height="15" fill="rgb(212,35,20)"/><text x="53.5141%" y="447.50"></text></g><g><title>update_cfs_group (31 samples, 0.03%)</title><rect x="53.4320%" y="389" width="0.0284%" height="15" fill="rgb(236,79,13)"/><text x="53.6820%" y="399.50"></text></g><g><title>reweight_entity (28 samples, 0.03%)</title><rect x="53.4347%" y="373" width="0.0257%" height="15" fill="rgb(233,123,3)"/><text x="53.6847%" y="383.50"></text></g><g><title>enqueue_entity (153 samples, 0.14%)</title><rect x="53.3577%" y="405" width="0.1404%" height="15" fill="rgb(214,93,52)"/><text x="53.6077%" y="415.50"></text></g><g><title>update_load_avg (38 samples, 0.03%)</title><rect x="53.4632%" y="389" width="0.0349%" height="15" fill="rgb(251,37,40)"/><text x="53.7132%" y="399.50"></text></g><g><title>enqueue_task_fair (193 samples, 0.18%)</title><rect x="53.3320%" y="421" width="0.1771%" height="15" fill="rgb(227,80,54)"/><text x="53.5820%" y="431.50"></text></g><g><title>native_sched_clock (14 samples, 0.01%)</title><rect x="53.6549%" y="357" width="0.0128%" height="15" fill="rgb(254,48,11)"/><text x="53.9049%" y="367.50"></text></g><g><title>record_times (30 samples, 0.03%)</title><rect x="53.6412%" y="389" width="0.0275%" height="15" fill="rgb(235,193,26)"/><text x="53.8912%" y="399.50"></text></g><g><title>sched_clock_cpu (18 samples, 0.02%)</title><rect x="53.6522%" y="373" width="0.0165%" height="15" fill="rgb(229,99,21)"/><text x="53.9022%" y="383.50"></text></g><g><title>psi_group_change (124 samples, 0.11%)</title><rect x="53.5558%" y="405" width="0.1138%" height="15" fill="rgb(211,140,41)"/><text x="53.8058%" y="415.50"></text></g><g><title>psi_task_change (174 samples, 0.16%)</title><rect x="53.5127%" y="421" width="0.1596%" height="15" fill="rgb(240,227,30)"/><text x="53.7627%" y="431.50"></text></g><g><title>check_preempt_curr (126 samples, 0.12%)</title><rect x="53.6769%" y="405" width="0.1156%" height="15" fill="rgb(215,224,45)"/><text x="53.9269%" y="415.50"></text></g><g><title>resched_curr (111 samples, 0.10%)</title><rect x="53.6907%" y="389" width="0.1018%" height="15" fill="rgb(206,123,31)"/><text x="53.9407%" y="399.50"></text></g><g><title>ttwu_do_activate (528 samples, 0.48%)</title><rect x="53.3210%" y="437" width="0.4844%" height="15" fill="rgb(210,138,16)"/><text x="53.5710%" y="447.50"></text></g><g><title>ttwu_do_wakeup (145 samples, 0.13%)</title><rect x="53.6723%" y="421" width="0.1330%" height="15" fill="rgb(228,57,28)"/><text x="53.9223%" y="431.50"></text></g><g><title>resched_curr (14 samples, 0.01%)</title><rect x="53.7925%" y="405" width="0.0128%" height="15" fill="rgb(242,170,10)"/><text x="54.0425%" y="415.50"></text></g><g><title>__smp_call_single_queue (16 samples, 0.01%)</title><rect x="53.8164%" y="421" width="0.0147%" height="15" fill="rgb(228,214,39)"/><text x="54.0664%" y="431.50"></text></g><g><title>send_call_function_single_ipi (15 samples, 0.01%)</title><rect x="53.8173%" y="405" width="0.0138%" height="15" fill="rgb(218,179,33)"/><text x="54.0673%" y="415.50"></text></g><g><title>ttwu_queue_wakelist (37 samples, 0.03%)</title><rect x="53.8054%" y="437" width="0.0339%" height="15" fill="rgb(235,193,39)"/><text x="54.0554%" y="447.50"></text></g><g><title>update_cfs_rq_h_load (36 samples, 0.03%)</title><rect x="53.8393%" y="437" width="0.0330%" height="15" fill="rgb(219,221,36)"/><text x="54.0893%" y="447.50"></text></g><g><title>try_to_wake_up (774 samples, 0.71%)</title><rect x="53.2118%" y="453" width="0.7101%" height="15" fill="rgb(248,218,19)"/><text x="53.4618%" y="463.50"></text></g><g><title>update_rq_clock (54 samples, 0.05%)</title><rect x="53.8723%" y="437" width="0.0495%" height="15" fill="rgb(205,50,9)"/><text x="54.1223%" y="447.50"></text></g><g><title>sched_clock_cpu (17 samples, 0.02%)</title><rect x="53.9063%" y="421" width="0.0156%" height="15" fill="rgb(238,81,28)"/><text x="54.1563%" y="431.50"></text></g><g><title>native_sched_clock (17 samples, 0.02%)</title><rect x="53.9063%" y="405" width="0.0156%" height="15" fill="rgb(235,110,19)"/><text x="54.1563%" y="415.50"></text></g><g><title>futex_wake (1,019 samples, 0.93%)</title><rect x="52.9889%" y="485" width="0.9348%" height="15" fill="rgb(214,7,14)"/><text x="53.2389%" y="495.50"></text></g><g><title>wake_up_q (809 samples, 0.74%)</title><rect x="53.1815%" y="469" width="0.7422%" height="15" fill="rgb(211,77,3)"/><text x="53.4315%" y="479.50"></text></g><g><title>do_futex (1,080 samples, 0.99%)</title><rect x="52.9403%" y="501" width="0.9908%" height="15" fill="rgb(229,5,9)"/><text x="53.1903%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,137 samples, 1.04%)</title><rect x="52.8898%" y="549" width="1.0431%" height="15" fill="rgb(225,90,11)"/><text x="53.1398%" y="559.50"></text></g><g><title>do_syscall_64 (1,121 samples, 1.03%)</title><rect x="52.9045%" y="533" width="1.0284%" height="15" fill="rgb(242,56,8)"/><text x="53.1545%" y="543.50"></text></g><g><title>__x64_sys_futex (1,095 samples, 1.00%)</title><rect x="52.9283%" y="517" width="1.0046%" height="15" fill="rgb(249,212,39)"/><text x="53.1783%" y="527.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (1,196 samples, 1.10%)</title><rect x="52.8375%" y="581" width="1.0972%" height="15" fill="rgb(236,90,9)"/><text x="53.0875%" y="591.50"></text></g><g><title>syscall (1,188 samples, 1.09%)</title><rect x="52.8448%" y="565" width="1.0899%" height="15" fill="rgb(206,88,35)"/><text x="53.0948%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (34 samples, 0.03%)</title><rect x="53.9384%" y="581" width="0.0312%" height="15" fill="rgb(205,126,30)"/><text x="54.1884%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (34 samples, 0.03%)</title><rect x="53.9384%" y="565" width="0.0312%" height="15" fill="rgb(230,176,12)"/><text x="54.1884%" y="575.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (30 samples, 0.03%)</title><rect x="53.9696%" y="581" width="0.0275%" height="15" fill="rgb(243,19,9)"/><text x="54.2196%" y="591.50"></text></g><g><title>std::time::Instant::now (28 samples, 0.03%)</title><rect x="53.9714%" y="565" width="0.0257%" height="15" fill="rgb(245,171,17)"/><text x="54.2214%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (28 samples, 0.03%)</title><rect x="53.9714%" y="549" width="0.0257%" height="15" fill="rgb(227,52,21)"/><text x="54.2214%" y="559.50"></text></g><g><title>std::sys::unix::time::inner::now (28 samples, 0.03%)</title><rect x="53.9714%" y="533" width="0.0257%" height="15" fill="rgb(238,69,14)"/><text x="54.2214%" y="543.50"></text></g><g><title>__clock_gettime (24 samples, 0.02%)</title><rect x="53.9751%" y="517" width="0.0220%" height="15" fill="rgb(241,156,39)"/><text x="54.2251%" y="527.50"></text></g><g><title>__vdso_clock_gettime (20 samples, 0.02%)</title><rect x="53.9788%" y="501" width="0.0183%" height="15" fill="rgb(212,227,28)"/><text x="54.2288%" y="511.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (50 samples, 0.05%)</title><rect x="53.9971%" y="581" width="0.0459%" height="15" fill="rgb(209,118,27)"/><text x="54.2471%" y="591.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (43 samples, 0.04%)</title><rect x="54.0035%" y="565" width="0.0394%" height="15" fill="rgb(226,102,5)"/><text x="54.2535%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (43 samples, 0.04%)</title><rect x="54.0035%" y="549" width="0.0394%" height="15" fill="rgb(223,34,3)"/><text x="54.2535%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (43 samples, 0.04%)</title><rect x="54.0035%" y="533" width="0.0394%" height="15" fill="rgb(221,81,38)"/><text x="54.2535%" y="543.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (1,363 samples, 1.25%)</title><rect x="52.8302%" y="613" width="1.2504%" height="15" fill="rgb(236,219,28)"/><text x="53.0802%" y="623.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (1,363 samples, 1.25%)</title><rect x="52.8302%" y="597" width="1.2504%" height="15" fill="rgb(213,200,14)"/><text x="53.0802%" y="607.50"></text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (41 samples, 0.04%)</title><rect x="54.0430%" y="581" width="0.0376%" height="15" fill="rgb(240,33,19)"/><text x="54.2930%" y="591.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (41 samples, 0.04%)</title><rect x="54.0430%" y="565" width="0.0376%" height="15" fill="rgb(233,113,27)"/><text x="54.2930%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (40 samples, 0.04%)</title><rect x="54.0439%" y="549" width="0.0367%" height="15" fill="rgb(220,221,18)"/><text x="54.2939%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_sub (40 samples, 0.04%)</title><rect x="54.0439%" y="533" width="0.0367%" height="15" fill="rgb(238,92,8)"/><text x="54.2939%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (49 samples, 0.04%)</title><rect x="54.0861%" y="565" width="0.0450%" height="15" fill="rgb(222,164,16)"/><text x="54.3361%" y="575.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (32 samples, 0.03%)</title><rect x="54.1384%" y="565" width="0.0294%" height="15" fill="rgb(241,119,3)"/><text x="54.3884%" y="575.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (32 samples, 0.03%)</title><rect x="54.1384%" y="549" width="0.0294%" height="15" fill="rgb(241,44,8)"/><text x="54.3884%" y="559.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (32 samples, 0.03%)</title><rect x="54.1384%" y="533" width="0.0294%" height="15" fill="rgb(230,36,40)"/><text x="54.3884%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (30 samples, 0.03%)</title><rect x="54.1402%" y="517" width="0.0275%" height="15" fill="rgb(243,16,36)"/><text x="54.3902%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (30 samples, 0.03%)</title><rect x="54.1402%" y="501" width="0.0275%" height="15" fill="rgb(231,4,26)"/><text x="54.3902%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (112 samples, 0.10%)</title><rect x="54.1778%" y="549" width="0.1027%" height="15" fill="rgb(240,9,31)"/><text x="54.4278%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_add (112 samples, 0.10%)</title><rect x="54.1778%" y="533" width="0.1027%" height="15" fill="rgb(207,173,15)"/><text x="54.4278%" y="543.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::notify_should_wakeup (124 samples, 0.11%)</title><rect x="54.1677%" y="565" width="0.1138%" height="15" fill="rgb(224,192,53)"/><text x="54.4177%" y="575.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (1,878 samples, 1.72%)</title><rect x="52.5678%" y="709" width="1.7229%" height="15" fill="rgb(223,67,28)"/><text x="52.8178%" y="719.50"></text></g><g><title>tokio::runtime::task::harness::transition_to_complete (1,704 samples, 1.56%)</title><rect x="52.7274%" y="693" width="1.5632%" height="15" fill="rgb(211,20,47)"/><text x="52.9774%" y="703.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::schedule (1,704 samples, 1.56%)</title><rect x="52.7274%" y="677" width="1.5632%" height="15" fill="rgb(240,228,2)"/><text x="52.9774%" y="687.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (1,702 samples, 1.56%)</title><rect x="52.7293%" y="661" width="1.5614%" height="15" fill="rgb(248,151,12)"/><text x="52.9793%" y="671.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (1,699 samples, 1.56%)</title><rect x="52.7320%" y="645" width="1.5587%" height="15" fill="rgb(244,8,39)"/><text x="52.9820%" y="655.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (1,697 samples, 1.56%)</title><rect x="52.7338%" y="629" width="1.5568%" height="15" fill="rgb(222,26,8)"/><text x="52.9838%" y="639.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule_local (229 samples, 0.21%)</title><rect x="54.0806%" y="613" width="0.2101%" height="15" fill="rgb(213,106,44)"/><text x="54.3306%" y="623.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (224 samples, 0.21%)</title><rect x="54.0852%" y="597" width="0.2055%" height="15" fill="rgb(214,129,20)"/><text x="54.3352%" y="607.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::worker_to_notify (223 samples, 0.20%)</title><rect x="54.0861%" y="581" width="0.2046%" height="15" fill="rgb(212,32,13)"/><text x="54.3361%" y="591.50"></text></g><g><title>[libc-2.31.so] (15 samples, 0.01%)</title><rect x="54.3017%" y="469" width="0.0138%" height="15" fill="rgb(208,168,33)"/><text x="54.5517%" y="479.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,922 samples, 1.76%)</title><rect x="52.5678%" y="1221" width="1.7632%" height="15" fill="rgb(231,207,8)"/><text x="52.8178%" y="1231.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (1,922 samples, 1.76%)</title><rect x="52.5678%" y="1205" width="1.7632%" height="15" fill="rgb(235,219,23)"/><text x="52.8178%" y="1215.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (1,922 samples, 1.76%)</title><rect x="52.5678%" y="1189" width="1.7632%" height="15" fill="rgb(226,216,26)"/><text x="52.8178%" y="1199.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (1,922 samples, 1.76%)</title><rect x="52.5678%" y="1173" width="1.7632%" height="15" fill="rgb(239,137,16)"/><text x="52.8178%" y="1183.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (1,922 samples, 1.76%)</title><rect x="52.5678%" y="1157" width="1.7632%" height="15" fill="rgb(207,12,36)"/><text x="52.8178%" y="1167.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1,922 samples, 1.76%)</title><rect x="52.5678%" y="1141" width="1.7632%" height="15" fill="rgb(210,214,24)"/><text x="52.8178%" y="1151.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1,922 samples, 1.76%)</title><rect x="52.5678%" y="1125" width="1.7632%" height="15" fill="rgb(206,56,30)"/><text x="52.8178%" y="1135.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (1,922 samples, 1.76%)</title><rect x="52.5678%" y="1109" width="1.7632%" height="15" fill="rgb(228,143,26)"/><text x="52.8178%" y="1119.50"></text></g><g><title>std::panic::catch_unwind (1,922 samples, 1.76%)</title><rect x="52.5678%" y="1093" width="1.7632%" height="15" fill="rgb(216,218,46)"/><text x="52.8178%" y="1103.50"></text></g><g><title>std::panicking::try (1,922 samples, 1.76%)</title><rect x="52.5678%" y="1077" width="1.7632%" height="15" fill="rgb(206,6,19)"/><text x="52.8178%" y="1087.50"></text></g><g><title>std::panicking::try::do_call (1,922 samples, 1.76%)</title><rect x="52.5678%" y="1061" width="1.7632%" height="15" fill="rgb(239,177,51)"/><text x="52.8178%" y="1071.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,922 samples, 1.76%)</title><rect x="52.5678%" y="1045" width="1.7632%" height="15" fill="rgb(216,55,25)"/><text x="52.8178%" y="1055.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (1,922 samples, 1.76%)</title><rect x="52.5678%" y="1029" width="1.7632%" height="15" fill="rgb(231,163,29)"/><text x="52.8178%" y="1039.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (1,922 samples, 1.76%)</title><rect x="52.5678%" y="1013" width="1.7632%" height="15" fill="rgb(232,149,50)"/><text x="52.8178%" y="1023.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (1,922 samples, 1.76%)</title><rect x="52.5678%" y="997" width="1.7632%" height="15" fill="rgb(223,142,48)"/><text x="52.8178%" y="1007.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (1,922 samples, 1.76%)</title><rect x="52.5678%" y="981" width="1.7632%" height="15" fill="rgb(245,83,23)"/><text x="52.8178%" y="991.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (1,922 samples, 1.76%)</title><rect x="52.5678%" y="965" width="1.7632%" height="15" fill="rgb(224,63,2)"/><text x="52.8178%" y="975.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (1,922 samples, 1.76%)</title><rect x="52.5678%" y="949" width="1.7632%" height="15" fill="rgb(218,65,53)"/><text x="52.8178%" y="959.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (1,922 samples, 1.76%)</title><rect x="52.5678%" y="933" width="1.7632%" height="15" fill="rgb(221,84,29)"/><text x="52.8178%" y="943.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (1,922 samples, 1.76%)</title><rect x="52.5678%" y="917" width="1.7632%" height="15" fill="rgb(234,0,32)"/><text x="52.8178%" y="927.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (1,922 samples, 1.76%)</title><rect x="52.5678%" y="901" width="1.7632%" height="15" fill="rgb(206,20,16)"/><text x="52.8178%" y="911.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (1,922 samples, 1.76%)</title><rect x="52.5678%" y="885" width="1.7632%" height="15" fill="rgb(244,172,18)"/><text x="52.8178%" y="895.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (1,922 samples, 1.76%)</title><rect x="52.5678%" y="869" width="1.7632%" height="15" fill="rgb(254,133,1)"/><text x="52.8178%" y="879.50"></text></g><g><title>tokio::coop::budget (1,922 samples, 1.76%)</title><rect x="52.5678%" y="853" width="1.7632%" height="15" fill="rgb(222,206,41)"/><text x="52.8178%" y="863.50"></text></g><g><title>tokio::coop::with_budget (1,922 samples, 1.76%)</title><rect x="52.5678%" y="837" width="1.7632%" height="15" fill="rgb(212,3,42)"/><text x="52.8178%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,922 samples, 1.76%)</title><rect x="52.5678%" y="821" width="1.7632%" height="15" fill="rgb(241,11,4)"/><text x="52.8178%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,922 samples, 1.76%)</title><rect x="52.5678%" y="805" width="1.7632%" height="15" fill="rgb(205,19,26)"/><text x="52.8178%" y="815.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (1,922 samples, 1.76%)</title><rect x="52.5678%" y="789" width="1.7632%" height="15" fill="rgb(210,179,32)"/><text x="52.8178%" y="799.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (1,922 samples, 1.76%)</title><rect x="52.5678%" y="773" width="1.7632%" height="15" fill="rgb(227,116,49)"/><text x="52.8178%" y="783.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (1,922 samples, 1.76%)</title><rect x="52.5678%" y="757" width="1.7632%" height="15" fill="rgb(211,146,6)"/><text x="52.8178%" y="767.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (1,922 samples, 1.76%)</title><rect x="52.5678%" y="741" width="1.7632%" height="15" fill="rgb(219,44,39)"/><text x="52.8178%" y="751.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1,922 samples, 1.76%)</title><rect x="52.5678%" y="725" width="1.7632%" height="15" fill="rgb(234,128,11)"/><text x="52.8178%" y="735.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (44 samples, 0.04%)</title><rect x="54.2907%" y="709" width="0.0404%" height="15" fill="rgb(220,183,53)"/><text x="54.5407%" y="719.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (44 samples, 0.04%)</title><rect x="54.2907%" y="693" width="0.0404%" height="15" fill="rgb(213,219,32)"/><text x="54.5407%" y="703.50"></text></g><g><title>std::panic::catch_unwind (44 samples, 0.04%)</title><rect x="54.2907%" y="677" width="0.0404%" height="15" fill="rgb(232,156,16)"/><text x="54.5407%" y="687.50"></text></g><g><title>std::panicking::try (44 samples, 0.04%)</title><rect x="54.2907%" y="661" width="0.0404%" height="15" fill="rgb(246,135,34)"/><text x="54.5407%" y="671.50"></text></g><g><title>std::panicking::try::do_call (44 samples, 0.04%)</title><rect x="54.2907%" y="645" width="0.0404%" height="15" fill="rgb(241,99,0)"/><text x="54.5407%" y="655.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (44 samples, 0.04%)</title><rect x="54.2907%" y="629" width="0.0404%" height="15" fill="rgb(222,103,45)"/><text x="54.5407%" y="639.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (44 samples, 0.04%)</title><rect x="54.2907%" y="613" width="0.0404%" height="15" fill="rgb(212,57,4)"/><text x="54.5407%" y="623.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (44 samples, 0.04%)</title><rect x="54.2907%" y="597" width="0.0404%" height="15" fill="rgb(215,68,47)"/><text x="54.5407%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (44 samples, 0.04%)</title><rect x="54.2907%" y="581" width="0.0404%" height="15" fill="rgb(230,84,2)"/><text x="54.5407%" y="591.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation::{{closure}} (44 samples, 0.04%)</title><rect x="54.2907%" y="565" width="0.0404%" height="15" fill="rgb(220,102,14)"/><text x="54.5407%" y="575.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_send::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Send&gt;::evaluate (44 samples, 0.04%)</title><rect x="54.2907%" y="549" width="0.0404%" height="15" fill="rgb(240,10,32)"/><text x="54.5407%" y="559.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute (44 samples, 0.04%)</title><rect x="54.2907%" y="533" width="0.0404%" height="15" fill="rgb(215,47,27)"/><text x="54.5407%" y="543.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute_no_sort (44 samples, 0.04%)</title><rect x="54.2907%" y="517" width="0.0404%" height="15" fill="rgb(233,188,43)"/><text x="54.5407%" y="527.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::substitute_expressions_in_par (44 samples, 0.04%)</title><rect x="54.2907%" y="501" width="0.0404%" height="15" fill="rgb(253,190,1)"/><text x="54.5407%" y="511.50"></text></g><g><title>model::rho_types::Par::append_expr (43 samples, 0.04%)</title><rect x="54.2916%" y="485" width="0.0394%" height="15" fill="rgb(206,114,52)"/><text x="54.5416%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (17 samples, 0.02%)</title><rect x="54.3154%" y="469" width="0.0156%" height="15" fill="rgb(233,120,37)"/><text x="54.5654%" y="479.50"></text></g><g><title>core::ptr::write (15 samples, 0.01%)</title><rect x="54.3173%" y="453" width="0.0138%" height="15" fill="rgb(214,52,39)"/><text x="54.5673%" y="463.50"></text></g><g><title>[libc-2.31.so] (15 samples, 0.01%)</title><rect x="54.3173%" y="437" width="0.0138%" height="15" fill="rgb(223,80,29)"/><text x="54.5673%" y="447.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (29 samples, 0.03%)</title><rect x="54.3310%" y="805" width="0.0266%" height="15" fill="rgb(230,101,40)"/><text x="54.5810%" y="815.50"></text></g><g><title>std::time::Instant::now (29 samples, 0.03%)</title><rect x="54.3310%" y="789" width="0.0266%" height="15" fill="rgb(219,211,8)"/><text x="54.5810%" y="799.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (29 samples, 0.03%)</title><rect x="54.3310%" y="773" width="0.0266%" height="15" fill="rgb(252,126,28)"/><text x="54.5810%" y="783.50"></text></g><g><title>std::sys::unix::time::inner::now (29 samples, 0.03%)</title><rect x="54.3310%" y="757" width="0.0266%" height="15" fill="rgb(215,56,38)"/><text x="54.5810%" y="767.50"></text></g><g><title>__clock_gettime (28 samples, 0.03%)</title><rect x="54.3320%" y="741" width="0.0257%" height="15" fill="rgb(249,55,44)"/><text x="54.5820%" y="751.50"></text></g><g><title>__vdso_clock_gettime (24 samples, 0.02%)</title><rect x="54.3356%" y="725" width="0.0220%" height="15" fill="rgb(220,221,32)"/><text x="54.5856%" y="735.50"></text></g><g><title>tokio::park::thread::wake (92 samples, 0.08%)</title><rect x="54.3310%" y="901" width="0.0844%" height="15" fill="rgb(212,216,41)"/><text x="54.5810%" y="911.50"></text></g><g><title>tokio::park::thread::Inner::unpark (92 samples, 0.08%)</title><rect x="54.3310%" y="885" width="0.0844%" height="15" fill="rgb(228,213,43)"/><text x="54.5810%" y="895.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::notify_one (92 samples, 0.08%)</title><rect x="54.3310%" y="869" width="0.0844%" height="15" fill="rgb(211,31,26)"/><text x="54.5810%" y="879.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one (92 samples, 0.08%)</title><rect x="54.3310%" y="853" width="0.0844%" height="15" fill="rgb(229,202,19)"/><text x="54.5810%" y="863.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (92 samples, 0.08%)</title><rect x="54.3310%" y="837" width="0.0844%" height="15" fill="rgb(229,105,46)"/><text x="54.5810%" y="847.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (92 samples, 0.08%)</title><rect x="54.3310%" y="821" width="0.0844%" height="15" fill="rgb(235,108,1)"/><text x="54.5810%" y="831.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (63 samples, 0.06%)</title><rect x="54.3576%" y="805" width="0.0578%" height="15" fill="rgb(245,111,35)"/><text x="54.6076%" y="815.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (54 samples, 0.05%)</title><rect x="54.3659%" y="789" width="0.0495%" height="15" fill="rgb(219,185,31)"/><text x="54.6159%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (53 samples, 0.05%)</title><rect x="54.3668%" y="773" width="0.0486%" height="15" fill="rgb(214,4,43)"/><text x="54.6168%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (53 samples, 0.05%)</title><rect x="54.3668%" y="757" width="0.0486%" height="15" fill="rgb(235,227,40)"/><text x="54.6168%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (99 samples, 0.09%)</title><rect x="54.3310%" y="1221" width="0.0908%" height="15" fill="rgb(230,88,30)"/><text x="54.5810%" y="1231.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (99 samples, 0.09%)</title><rect x="54.3310%" y="1205" width="0.0908%" height="15" fill="rgb(216,217,1)"/><text x="54.5810%" y="1215.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (99 samples, 0.09%)</title><rect x="54.3310%" y="1189" width="0.0908%" height="15" fill="rgb(248,139,50)"/><text x="54.5810%" y="1199.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (99 samples, 0.09%)</title><rect x="54.3310%" y="1173" width="0.0908%" height="15" fill="rgb(233,1,21)"/><text x="54.5810%" y="1183.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (99 samples, 0.09%)</title><rect x="54.3310%" y="1157" width="0.0908%" height="15" fill="rgb(215,183,12)"/><text x="54.5810%" y="1167.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (99 samples, 0.09%)</title><rect x="54.3310%" y="1141" width="0.0908%" height="15" fill="rgb(229,104,42)"/><text x="54.5810%" y="1151.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (99 samples, 0.09%)</title><rect x="54.3310%" y="1125" width="0.0908%" height="15" fill="rgb(243,34,48)"/><text x="54.5810%" y="1135.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (99 samples, 0.09%)</title><rect x="54.3310%" y="1109" width="0.0908%" height="15" fill="rgb(239,11,44)"/><text x="54.5810%" y="1119.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (99 samples, 0.09%)</title><rect x="54.3310%" y="1093" width="0.0908%" height="15" fill="rgb(231,98,35)"/><text x="54.5810%" y="1103.50"></text></g><g><title>std::panic::catch_unwind (99 samples, 0.09%)</title><rect x="54.3310%" y="1077" width="0.0908%" height="15" fill="rgb(233,28,25)"/><text x="54.5810%" y="1087.50"></text></g><g><title>std::panicking::try (99 samples, 0.09%)</title><rect x="54.3310%" y="1061" width="0.0908%" height="15" fill="rgb(234,123,11)"/><text x="54.5810%" y="1071.50"></text></g><g><title>std::panicking::try::do_call (99 samples, 0.09%)</title><rect x="54.3310%" y="1045" width="0.0908%" height="15" fill="rgb(220,69,3)"/><text x="54.5810%" y="1055.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (99 samples, 0.09%)</title><rect x="54.3310%" y="1029" width="0.0908%" height="15" fill="rgb(214,64,36)"/><text x="54.5810%" y="1039.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (99 samples, 0.09%)</title><rect x="54.3310%" y="1013" width="0.0908%" height="15" fill="rgb(211,138,32)"/><text x="54.5810%" y="1023.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (99 samples, 0.09%)</title><rect x="54.3310%" y="997" width="0.0908%" height="15" fill="rgb(213,118,47)"/><text x="54.5810%" y="1007.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (99 samples, 0.09%)</title><rect x="54.3310%" y="981" width="0.0908%" height="15" fill="rgb(243,124,49)"/><text x="54.5810%" y="991.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::produce::{{closure}} (99 samples, 0.09%)</title><rect x="54.3310%" y="965" width="0.0908%" height="15" fill="rgb(221,30,28)"/><text x="54.5810%" y="975.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (99 samples, 0.09%)</title><rect x="54.3310%" y="949" width="0.0908%" height="15" fill="rgb(246,37,13)"/><text x="54.5810%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (99 samples, 0.09%)</title><rect x="54.3310%" y="933" width="0.0908%" height="15" fill="rgb(249,66,14)"/><text x="54.5810%" y="943.50"></text></g><g><title>&lt;rho_runtime::storage::coordinator::AsyncStore as rho_runtime::storage::Storage&gt;::produce::{{closure}} (99 samples, 0.09%)</title><rect x="54.3310%" y="917" width="0.0908%" height="15" fill="rgb(213,166,5)"/><text x="54.5810%" y="927.50"></text></g><g><title>entry_SYSCALL_64 (93 samples, 0.09%)</title><rect x="54.4595%" y="1205" width="0.0853%" height="15" fill="rgb(221,66,24)"/><text x="54.7095%" y="1215.50"></text></g><g><title>syscall (133 samples, 0.12%)</title><rect x="54.4237%" y="1221" width="0.1220%" height="15" fill="rgb(210,132,17)"/><text x="54.6737%" y="1231.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (20 samples, 0.02%)</title><rect x="54.5613%" y="1221" width="0.0183%" height="15" fill="rgb(243,202,5)"/><text x="54.8113%" y="1231.50"></text></g><g><title>&lt;model::rho_types::Par as rho_runtime::interpreter::reduce::eval_expression::ParExpressionEvaluator&lt;S&gt;&gt;::evaluate_nested_expressions (18 samples, 0.02%)</title><rect x="54.5870%" y="565" width="0.0165%" height="15" fill="rgb(233,70,48)"/><text x="54.8370%" y="575.50"></text></g><g><title>__rust_probestack (18 samples, 0.02%)</title><rect x="54.5870%" y="549" width="0.0165%" height="15" fill="rgb(238,41,26)"/><text x="54.8370%" y="559.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (26 samples, 0.02%)</title><rect x="54.5806%" y="1221" width="0.0239%" height="15" fill="rgb(241,19,31)"/><text x="54.8306%" y="1231.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (26 samples, 0.02%)</title><rect x="54.5806%" y="1205" width="0.0239%" height="15" fill="rgb(214,76,10)"/><text x="54.8306%" y="1215.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (26 samples, 0.02%)</title><rect x="54.5806%" y="1189" width="0.0239%" height="15" fill="rgb(254,202,22)"/><text x="54.8306%" y="1199.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (26 samples, 0.02%)</title><rect x="54.5806%" y="1173" width="0.0239%" height="15" fill="rgb(214,72,24)"/><text x="54.8306%" y="1183.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (26 samples, 0.02%)</title><rect x="54.5806%" y="1157" width="0.0239%" height="15" fill="rgb(221,92,46)"/><text x="54.8306%" y="1167.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (26 samples, 0.02%)</title><rect x="54.5806%" y="1141" width="0.0239%" height="15" fill="rgb(246,13,50)"/><text x="54.8306%" y="1151.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 0.02%)</title><rect x="54.5806%" y="1125" width="0.0239%" height="15" fill="rgb(240,165,38)"/><text x="54.8306%" y="1135.50"></text></g><g><title>std::panicking::try (26 samples, 0.02%)</title><rect x="54.5806%" y="1109" width="0.0239%" height="15" fill="rgb(241,24,51)"/><text x="54.8306%" y="1119.50"></text></g><g><title>std::panicking::try::do_call (26 samples, 0.02%)</title><rect x="54.5806%" y="1093" width="0.0239%" height="15" fill="rgb(227,51,44)"/><text x="54.8306%" y="1103.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26 samples, 0.02%)</title><rect x="54.5806%" y="1077" width="0.0239%" height="15" fill="rgb(231,121,3)"/><text x="54.8306%" y="1087.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (26 samples, 0.02%)</title><rect x="54.5806%" y="1061" width="0.0239%" height="15" fill="rgb(245,3,41)"/><text x="54.8306%" y="1071.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (26 samples, 0.02%)</title><rect x="54.5806%" y="1045" width="0.0239%" height="15" fill="rgb(214,13,26)"/><text x="54.8306%" y="1055.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (26 samples, 0.02%)</title><rect x="54.5806%" y="1029" width="0.0239%" height="15" fill="rgb(252,75,11)"/><text x="54.8306%" y="1039.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (26 samples, 0.02%)</title><rect x="54.5806%" y="1013" width="0.0239%" height="15" fill="rgb(218,226,17)"/><text x="54.8306%" y="1023.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (26 samples, 0.02%)</title><rect x="54.5806%" y="997" width="0.0239%" height="15" fill="rgb(248,89,38)"/><text x="54.8306%" y="1007.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (26 samples, 0.02%)</title><rect x="54.5806%" y="981" width="0.0239%" height="15" fill="rgb(237,73,46)"/><text x="54.8306%" y="991.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run (26 samples, 0.02%)</title><rect x="54.5806%" y="965" width="0.0239%" height="15" fill="rgb(242,78,33)"/><text x="54.8306%" y="975.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (26 samples, 0.02%)</title><rect x="54.5806%" y="949" width="0.0239%" height="15" fill="rgb(235,60,3)"/><text x="54.8306%" y="959.50"></text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (26 samples, 0.02%)</title><rect x="54.5806%" y="933" width="0.0239%" height="15" fill="rgb(216,172,19)"/><text x="54.8306%" y="943.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (26 samples, 0.02%)</title><rect x="54.5806%" y="917" width="0.0239%" height="15" fill="rgb(227,6,42)"/><text x="54.8306%" y="927.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (26 samples, 0.02%)</title><rect x="54.5806%" y="901" width="0.0239%" height="15" fill="rgb(223,207,42)"/><text x="54.8306%" y="911.50"></text></g><g><title>tokio::coop::budget (26 samples, 0.02%)</title><rect x="54.5806%" y="885" width="0.0239%" height="15" fill="rgb(246,138,30)"/><text x="54.8306%" y="895.50"></text></g><g><title>tokio::coop::with_budget (26 samples, 0.02%)</title><rect x="54.5806%" y="869" width="0.0239%" height="15" fill="rgb(251,199,47)"/><text x="54.8306%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (26 samples, 0.02%)</title><rect x="54.5806%" y="853" width="0.0239%" height="15" fill="rgb(228,218,44)"/><text x="54.8306%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (26 samples, 0.02%)</title><rect x="54.5806%" y="837" width="0.0239%" height="15" fill="rgb(220,68,6)"/><text x="54.8306%" y="847.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (26 samples, 0.02%)</title><rect x="54.5806%" y="821" width="0.0239%" height="15" fill="rgb(240,60,26)"/><text x="54.8306%" y="831.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (26 samples, 0.02%)</title><rect x="54.5806%" y="805" width="0.0239%" height="15" fill="rgb(211,200,19)"/><text x="54.8306%" y="815.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (26 samples, 0.02%)</title><rect x="54.5806%" y="789" width="0.0239%" height="15" fill="rgb(242,145,30)"/><text x="54.8306%" y="799.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (26 samples, 0.02%)</title><rect x="54.5806%" y="773" width="0.0239%" height="15" fill="rgb(225,64,13)"/><text x="54.8306%" y="783.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (26 samples, 0.02%)</title><rect x="54.5806%" y="757" width="0.0239%" height="15" fill="rgb(218,103,35)"/><text x="54.8306%" y="767.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (25 samples, 0.02%)</title><rect x="54.5815%" y="741" width="0.0229%" height="15" fill="rgb(216,93,46)"/><text x="54.8315%" y="751.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (25 samples, 0.02%)</title><rect x="54.5815%" y="725" width="0.0229%" height="15" fill="rgb(225,159,27)"/><text x="54.8315%" y="735.50"></text></g><g><title>std::panic::catch_unwind (25 samples, 0.02%)</title><rect x="54.5815%" y="709" width="0.0229%" height="15" fill="rgb(225,204,11)"/><text x="54.8315%" y="719.50"></text></g><g><title>std::panicking::try (25 samples, 0.02%)</title><rect x="54.5815%" y="693" width="0.0229%" height="15" fill="rgb(205,56,4)"/><text x="54.8315%" y="703.50"></text></g><g><title>std::panicking::try::do_call (25 samples, 0.02%)</title><rect x="54.5815%" y="677" width="0.0229%" height="15" fill="rgb(206,6,35)"/><text x="54.8315%" y="687.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (25 samples, 0.02%)</title><rect x="54.5815%" y="661" width="0.0229%" height="15" fill="rgb(247,73,52)"/><text x="54.8315%" y="671.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (25 samples, 0.02%)</title><rect x="54.5815%" y="645" width="0.0229%" height="15" fill="rgb(246,97,4)"/><text x="54.8315%" y="655.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (25 samples, 0.02%)</title><rect x="54.5815%" y="629" width="0.0229%" height="15" fill="rgb(212,37,15)"/><text x="54.8315%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (25 samples, 0.02%)</title><rect x="54.5815%" y="613" width="0.0229%" height="15" fill="rgb(208,130,40)"/><text x="54.8315%" y="623.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation::{{closure}} (19 samples, 0.02%)</title><rect x="54.5870%" y="597" width="0.0174%" height="15" fill="rgb(236,55,29)"/><text x="54.8370%" y="607.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_send::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Send&gt;::evaluate (19 samples, 0.02%)</title><rect x="54.5870%" y="581" width="0.0174%" height="15" fill="rgb(209,156,45)"/><text x="54.8370%" y="591.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::steal_into (60 samples, 0.06%)</title><rect x="54.6200%" y="1221" width="0.0550%" height="15" fill="rgb(249,107,4)"/><text x="54.8700%" y="1231.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (25 samples, 0.02%)</title><rect x="54.6751%" y="1221" width="0.0229%" height="15" fill="rgb(227,7,13)"/><text x="54.9251%" y="1231.50"></text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (17 samples, 0.02%)</title><rect x="54.6824%" y="1205" width="0.0156%" height="15" fill="rgb(250,129,14)"/><text x="54.9324%" y="1215.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (17 samples, 0.02%)</title><rect x="54.6824%" y="1189" width="0.0156%" height="15" fill="rgb(229,92,13)"/><text x="54.9324%" y="1199.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (17 samples, 0.02%)</title><rect x="54.6824%" y="1173" width="0.0156%" height="15" fill="rgb(245,98,39)"/><text x="54.9324%" y="1183.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (17 samples, 0.02%)</title><rect x="54.6824%" y="1157" width="0.0156%" height="15" fill="rgb(234,135,48)"/><text x="54.9324%" y="1167.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (17 samples, 0.02%)</title><rect x="54.6824%" y="1141" width="0.0156%" height="15" fill="rgb(230,98,28)"/><text x="54.9324%" y="1151.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (17 samples, 0.02%)</title><rect x="54.6824%" y="1125" width="0.0156%" height="15" fill="rgb(223,121,0)"/><text x="54.9324%" y="1135.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (17 samples, 0.02%)</title><rect x="54.6824%" y="1109" width="0.0156%" height="15" fill="rgb(234,173,33)"/><text x="54.9324%" y="1119.50"></text></g><g><title>syscall (17 samples, 0.02%)</title><rect x="54.6824%" y="1093" width="0.0156%" height="15" fill="rgb(245,47,8)"/><text x="54.9324%" y="1103.50"></text></g><g><title>entry_SYSCALL_64 (17 samples, 0.02%)</title><rect x="54.6824%" y="1077" width="0.0156%" height="15" fill="rgb(205,17,20)"/><text x="54.9324%" y="1087.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (14 samples, 0.01%)</title><rect x="54.7053%" y="1221" width="0.0128%" height="15" fill="rgb(232,151,16)"/><text x="54.9553%" y="1231.50"></text></g><g><title>[libc-2.31.so] (283 samples, 0.26%)</title><rect x="54.7457%" y="1173" width="0.2596%" height="15" fill="rgb(208,30,32)"/><text x="54.9957%" y="1183.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (30 samples, 0.03%)</title><rect x="55.0640%" y="1077" width="0.0275%" height="15" fill="rgb(254,26,3)"/><text x="55.3140%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Stage&lt;core::future::from_generator::GenFuture&lt;rho_runtime::storage::coordinator::Coordinator::handle_join_double::{{closure}}&gt;&gt;&gt; (48 samples, 0.04%)</title><rect x="55.0943%" y="1013" width="0.0440%" height="15" fill="rgb(240,177,30)"/><text x="55.3443%" y="1023.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (137 samples, 0.13%)</title><rect x="55.0182%" y="1125" width="0.1257%" height="15" fill="rgb(248,76,44)"/><text x="55.2682%" y="1135.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (137 samples, 0.13%)</title><rect x="55.0182%" y="1109" width="0.1257%" height="15" fill="rgb(241,186,54)"/><text x="55.2682%" y="1119.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (137 samples, 0.13%)</title><rect x="55.0182%" y="1093" width="0.1257%" height="15" fill="rgb(249,171,29)"/><text x="55.2682%" y="1103.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::drop_future_or_output (57 samples, 0.05%)</title><rect x="55.0916%" y="1077" width="0.0523%" height="15" fill="rgb(237,151,44)"/><text x="55.3416%" y="1087.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::set_stage (57 samples, 0.05%)</title><rect x="55.0916%" y="1061" width="0.0523%" height="15" fill="rgb(228,174,30)"/><text x="55.3416%" y="1071.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (57 samples, 0.05%)</title><rect x="55.0916%" y="1045" width="0.0523%" height="15" fill="rgb(252,14,37)"/><text x="55.3416%" y="1055.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::set_stage::{{closure}} (57 samples, 0.05%)</title><rect x="55.0916%" y="1029" width="0.0523%" height="15" fill="rgb(207,111,40)"/><text x="55.3416%" y="1039.50"></text></g><g><title>std::panic::catch_unwind (455 samples, 0.42%)</title><rect x="55.0108%" y="1173" width="0.4174%" height="15" fill="rgb(248,171,54)"/><text x="55.2608%" y="1183.50"></text></g><g><title>std::panicking::try (455 samples, 0.42%)</title><rect x="55.0108%" y="1157" width="0.4174%" height="15" fill="rgb(211,127,2)"/><text x="55.2608%" y="1167.50"></text></g><g><title>std::panicking::try::do_call (455 samples, 0.42%)</title><rect x="55.0108%" y="1141" width="0.4174%" height="15" fill="rgb(236,87,47)"/><text x="55.2608%" y="1151.50"></text></g><g><title>[libc-2.31.so] (310 samples, 0.28%)</title><rect x="55.1438%" y="1125" width="0.2844%" height="15" fill="rgb(223,190,45)"/><text x="55.3938%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (27 samples, 0.02%)</title><rect x="55.4319%" y="1141" width="0.0248%" height="15" fill="rgb(215,5,16)"/><text x="55.6819%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (27 samples, 0.02%)</title><rect x="55.4319%" y="1125" width="0.0248%" height="15" fill="rgb(252,82,33)"/><text x="55.6819%" y="1135.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (30 samples, 0.03%)</title><rect x="55.4301%" y="1173" width="0.0275%" height="15" fill="rgb(247,213,44)"/><text x="55.6801%" y="1183.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update (30 samples, 0.03%)</title><rect x="55.4301%" y="1157" width="0.0275%" height="15" fill="rgb(205,196,44)"/><text x="55.6801%" y="1167.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (810 samples, 0.74%)</title><rect x="54.7191%" y="1221" width="0.7431%" height="15" fill="rgb(237,96,54)"/><text x="54.9691%" y="1231.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (804 samples, 0.74%)</title><rect x="54.7246%" y="1205" width="0.7376%" height="15" fill="rgb(230,113,34)"/><text x="54.9746%" y="1215.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (804 samples, 0.74%)</title><rect x="54.7246%" y="1189" width="0.7376%" height="15" fill="rgb(221,224,12)"/><text x="54.9746%" y="1199.50"></text></g><g><title>tokio::runtime::task::harness::can_read_output (14 samples, 0.01%)</title><rect x="55.4659%" y="1221" width="0.0128%" height="15" fill="rgb(219,112,44)"/><text x="55.7159%" y="1231.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (14 samples, 0.01%)</title><rect x="55.5411%" y="1109" width="0.0128%" height="15" fill="rgb(210,31,13)"/><text x="55.7911%" y="1119.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (14 samples, 0.01%)</title><rect x="55.5411%" y="1093" width="0.0128%" height="15" fill="rgb(230,25,16)"/><text x="55.7911%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="55.5411%" y="1077" width="0.0128%" height="15" fill="rgb(246,108,53)"/><text x="55.7911%" y="1087.50"></text></g><g><title>__rust_probestack (14 samples, 0.01%)</title><rect x="55.5411%" y="1061" width="0.0128%" height="15" fill="rgb(241,172,50)"/><text x="55.7911%" y="1071.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (88 samples, 0.08%)</title><rect x="55.4787%" y="1221" width="0.0807%" height="15" fill="rgb(235,141,10)"/><text x="55.7287%" y="1231.50"></text></g><g><title>std::panic::catch_unwind (33 samples, 0.03%)</title><rect x="55.5292%" y="1205" width="0.0303%" height="15" fill="rgb(220,174,43)"/><text x="55.7792%" y="1215.50"></text></g><g><title>std::panicking::try (33 samples, 0.03%)</title><rect x="55.5292%" y="1189" width="0.0303%" height="15" fill="rgb(215,181,40)"/><text x="55.7792%" y="1199.50"></text></g><g><title>std::panicking::try::do_call (33 samples, 0.03%)</title><rect x="55.5292%" y="1173" width="0.0303%" height="15" fill="rgb(230,97,2)"/><text x="55.7792%" y="1183.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (28 samples, 0.03%)</title><rect x="55.5337%" y="1157" width="0.0257%" height="15" fill="rgb(211,25,27)"/><text x="55.7837%" y="1167.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (28 samples, 0.03%)</title><rect x="55.5337%" y="1141" width="0.0257%" height="15" fill="rgb(230,87,26)"/><text x="55.7837%" y="1151.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (28 samples, 0.03%)</title><rect x="55.5337%" y="1125" width="0.0257%" height="15" fill="rgb(227,160,17)"/><text x="55.7837%" y="1135.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (13 samples, 0.01%)</title><rect x="55.5833%" y="1221" width="0.0119%" height="15" fill="rgb(244,85,34)"/><text x="55.8333%" y="1231.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::release (17 samples, 0.02%)</title><rect x="55.6053%" y="1221" width="0.0156%" height="15" fill="rgb(207,70,0)"/><text x="55.8553%" y="1231.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park (11 samples, 0.01%)</title><rect x="55.6521%" y="1205" width="0.0101%" height="15" fill="rgb(223,129,7)"/><text x="55.9021%" y="1215.50"></text></g><g><title>[libc-2.31.so] (441 samples, 0.40%)</title><rect x="55.7649%" y="837" width="0.4046%" height="15" fill="rgb(246,105,7)"/><text x="56.0149%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (30 samples, 0.03%)</title><rect x="56.1805%" y="821" width="0.0275%" height="15" fill="rgb(215,154,42)"/><text x="56.4305%" y="831.50"></text></g><g><title>core::ptr::write (30 samples, 0.03%)</title><rect x="56.1805%" y="805" width="0.0275%" height="15" fill="rgb(220,215,30)"/><text x="56.4305%" y="815.50"></text></g><g><title>[libc-2.31.so] (28 samples, 0.03%)</title><rect x="56.1823%" y="789" width="0.0257%" height="15" fill="rgb(228,81,51)"/><text x="56.4323%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (57 samples, 0.05%)</title><rect x="56.2080%" y="821" width="0.0523%" height="15" fill="rgb(247,71,54)"/><text x="56.4580%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (57 samples, 0.05%)</title><rect x="56.2080%" y="805" width="0.0523%" height="15" fill="rgb(234,176,34)"/><text x="56.4580%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (136 samples, 0.12%)</title><rect x="56.2603%" y="821" width="0.1248%" height="15" fill="rgb(241,103,54)"/><text x="56.5103%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_load (136 samples, 0.12%)</title><rect x="56.2603%" y="805" width="0.1248%" height="15" fill="rgb(228,22,34)"/><text x="56.5103%" y="815.50"></text></g><g><title>crossbeam_queue::array_queue::ArrayQueue&lt;T&gt;::push (233 samples, 0.21%)</title><rect x="56.1723%" y="837" width="0.2138%" height="15" fill="rgb(241,179,48)"/><text x="56.4223%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::park::thread::Inner&gt;&gt; (24 samples, 0.02%)</title><rect x="56.3860%" y="821" width="0.0220%" height="15" fill="rgb(235,167,37)"/><text x="56.6360%" y="831.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="56.3860%" y="805" width="0.0220%" height="15" fill="rgb(213,109,30)"/><text x="56.6360%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (20 samples, 0.02%)</title><rect x="56.3897%" y="789" width="0.0183%" height="15" fill="rgb(222,172,16)"/><text x="56.6397%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_sub (20 samples, 0.02%)</title><rect x="56.3897%" y="773" width="0.0183%" height="15" fill="rgb(233,192,5)"/><text x="56.6397%" y="783.50"></text></g><g><title>core::mem::drop (12 samples, 0.01%)</title><rect x="56.4099%" y="805" width="0.0110%" height="15" fill="rgb(247,189,41)"/><text x="56.6599%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,()&gt;&gt; (12 samples, 0.01%)</title><rect x="56.4099%" y="789" width="0.0110%" height="15" fill="rgb(218,134,47)"/><text x="56.6599%" y="799.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="56.4099%" y="773" width="0.0110%" height="15" fill="rgb(216,29,3)"/><text x="56.6599%" y="783.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (12 samples, 0.01%)</title><rect x="56.4099%" y="757" width="0.0110%" height="15" fill="rgb(246,140,12)"/><text x="56.6599%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (33 samples, 0.03%)</title><rect x="56.4209%" y="805" width="0.0303%" height="15" fill="rgb(230,136,11)"/><text x="56.6709%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_swap (33 samples, 0.03%)</title><rect x="56.4209%" y="789" width="0.0303%" height="15" fill="rgb(247,22,47)"/><text x="56.6709%" y="799.50"></text></g><g><title>tokio::park::thread::wake (82 samples, 0.08%)</title><rect x="56.3860%" y="837" width="0.0752%" height="15" fill="rgb(218,84,22)"/><text x="56.6360%" y="847.50"></text></g><g><title>tokio::park::thread::Inner::unpark (57 samples, 0.05%)</title><rect x="56.4089%" y="821" width="0.0523%" height="15" fill="rgb(216,87,39)"/><text x="56.6589%" y="831.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (11 samples, 0.01%)</title><rect x="56.4511%" y="805" width="0.0101%" height="15" fill="rgb(221,178,8)"/><text x="56.7011%" y="815.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (11 samples, 0.01%)</title><rect x="56.4511%" y="789" width="0.0101%" height="15" fill="rgb(230,42,11)"/><text x="56.7011%" y="799.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (11 samples, 0.01%)</title><rect x="56.4511%" y="773" width="0.0101%" height="15" fill="rgb(237,229,4)"/><text x="56.7011%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (115 samples, 0.11%)</title><rect x="56.4713%" y="821" width="0.1055%" height="15" fill="rgb(222,31,33)"/><text x="56.7213%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (115 samples, 0.11%)</title><rect x="56.4713%" y="805" width="0.1055%" height="15" fill="rgb(210,17,39)"/><text x="56.7213%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (34 samples, 0.03%)</title><rect x="56.5768%" y="821" width="0.0312%" height="15" fill="rgb(244,93,20)"/><text x="56.8268%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_load (34 samples, 0.03%)</title><rect x="56.5768%" y="805" width="0.0312%" height="15" fill="rgb(210,40,47)"/><text x="56.8268%" y="815.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (149 samples, 0.14%)</title><rect x="56.6080%" y="821" width="0.1367%" height="15" fill="rgb(239,211,47)"/><text x="56.8580%" y="831.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (149 samples, 0.14%)</title><rect x="56.6080%" y="805" width="0.1367%" height="15" fill="rgb(251,223,49)"/><text x="56.8580%" y="815.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (149 samples, 0.14%)</title><rect x="56.6080%" y="789" width="0.1367%" height="15" fill="rgb(221,149,5)"/><text x="56.8580%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (147 samples, 0.13%)</title><rect x="56.6098%" y="773" width="0.1349%" height="15" fill="rgb(219,224,51)"/><text x="56.8598%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (147 samples, 0.13%)</title><rect x="56.6098%" y="757" width="0.1349%" height="15" fill="rgb(223,7,8)"/><text x="56.8598%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (55 samples, 0.05%)</title><rect x="56.7539%" y="805" width="0.0505%" height="15" fill="rgb(241,217,22)"/><text x="57.0039%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_store (55 samples, 0.05%)</title><rect x="56.7539%" y="789" width="0.0505%" height="15" fill="rgb(248,209,0)"/><text x="57.0039%" y="799.50"></text></g><g><title>tokio::sync::notify::Notify::notify_one (410 samples, 0.38%)</title><rect x="56.4612%" y="837" width="0.3761%" height="15" fill="rgb(217,205,4)"/><text x="56.7112%" y="847.50"></text></g><g><title>tokio::sync::notify::notify_locked (99 samples, 0.09%)</title><rect x="56.7465%" y="821" width="0.0908%" height="15" fill="rgb(228,124,39)"/><text x="56.9965%" y="831.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::pop_back (26 samples, 0.02%)</title><rect x="56.8135%" y="805" width="0.0239%" height="15" fill="rgb(250,116,42)"/><text x="57.0635%" y="815.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (123 samples, 0.11%)</title><rect x="56.8401%" y="821" width="0.1128%" height="15" fill="rgb(223,202,9)"/><text x="57.0901%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (122 samples, 0.11%)</title><rect x="56.8410%" y="805" width="0.1119%" height="15" fill="rgb(242,222,40)"/><text x="57.0910%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_add (122 samples, 0.11%)</title><rect x="56.8410%" y="789" width="0.1119%" height="15" fill="rgb(229,99,46)"/><text x="57.0910%" y="799.50"></text></g><g><title>[libc-2.31.so] (80 samples, 0.07%)</title><rect x="56.9575%" y="805" width="0.0734%" height="15" fill="rgb(225,56,46)"/><text x="57.2075%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (93 samples, 0.09%)</title><rect x="56.9530%" y="821" width="0.0853%" height="15" fill="rgb(227,94,5)"/><text x="57.2030%" y="831.50"></text></g><g><title>&lt;rho_runtime::storage::coordinator::AsyncStore as rho_runtime::storage::Storage&gt;::produce::{{closure}} (1,515 samples, 1.39%)</title><rect x="55.6658%" y="853" width="1.3899%" height="15" fill="rgb(205,112,38)"/><text x="55.9158%" y="863.50"></text></g><g><title>tokio::sync::oneshot::channel (238 samples, 0.22%)</title><rect x="56.8374%" y="837" width="0.2183%" height="15" fill="rgb(231,133,46)"/><text x="57.0874%" y="847.50"></text></g><g><title>[libc-2.31.so] (72 samples, 0.07%)</title><rect x="57.0557%" y="853" width="0.0661%" height="15" fill="rgb(217,16,9)"/><text x="57.3057%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,592 samples, 1.46%)</title><rect x="55.6622%" y="869" width="1.4605%" height="15" fill="rgb(249,173,9)"/><text x="55.9122%" y="879.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (1,598 samples, 1.47%)</title><rect x="55.6622%" y="1205" width="1.4660%" height="15" fill="rgb(205,163,53)"/><text x="55.9122%" y="1215.50"></text></g><g><title>tokio::coop::budget (1,598 samples, 1.47%)</title><rect x="55.6622%" y="1189" width="1.4660%" height="15" fill="rgb(217,54,41)"/><text x="55.9122%" y="1199.50"></text></g><g><title>tokio::coop::with_budget (1,598 samples, 1.47%)</title><rect x="55.6622%" y="1173" width="1.4660%" height="15" fill="rgb(228,216,12)"/><text x="55.9122%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,598 samples, 1.47%)</title><rect x="55.6622%" y="1157" width="1.4660%" height="15" fill="rgb(244,228,15)"/><text x="55.9122%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,598 samples, 1.47%)</title><rect x="55.6622%" y="1141" width="1.4660%" height="15" fill="rgb(221,176,53)"/><text x="55.9122%" y="1151.50"></text></g><g><title>tokio::coop::with_budget::{{closure}} (1,598 samples, 1.47%)</title><rect x="55.6622%" y="1125" width="1.4660%" height="15" fill="rgb(205,94,34)"/><text x="55.9122%" y="1135.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (1,598 samples, 1.47%)</title><rect x="55.6622%" y="1109" width="1.4660%" height="15" fill="rgb(213,110,48)"/><text x="55.9122%" y="1119.50"></text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (1,598 samples, 1.47%)</title><rect x="55.6622%" y="1093" width="1.4660%" height="15" fill="rgb(236,142,28)"/><text x="55.9122%" y="1103.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (1,598 samples, 1.47%)</title><rect x="55.6622%" y="1077" width="1.4660%" height="15" fill="rgb(225,135,29)"/><text x="55.9122%" y="1087.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (1,598 samples, 1.47%)</title><rect x="55.6622%" y="1061" width="1.4660%" height="15" fill="rgb(252,45,31)"/><text x="55.9122%" y="1071.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (1,598 samples, 1.47%)</title><rect x="55.6622%" y="1045" width="1.4660%" height="15" fill="rgb(211,187,50)"/><text x="55.9122%" y="1055.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (1,598 samples, 1.47%)</title><rect x="55.6622%" y="1029" width="1.4660%" height="15" fill="rgb(229,109,7)"/><text x="55.9122%" y="1039.50"></text></g><g><title>std::panic::catch_unwind (1,598 samples, 1.47%)</title><rect x="55.6622%" y="1013" width="1.4660%" height="15" fill="rgb(251,131,51)"/><text x="55.9122%" y="1023.50"></text></g><g><title>std::panicking::try (1,598 samples, 1.47%)</title><rect x="55.6622%" y="997" width="1.4660%" height="15" fill="rgb(251,180,35)"/><text x="55.9122%" y="1007.50"></text></g><g><title>std::panicking::try::do_call (1,598 samples, 1.47%)</title><rect x="55.6622%" y="981" width="1.4660%" height="15" fill="rgb(211,46,32)"/><text x="55.9122%" y="991.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,598 samples, 1.47%)</title><rect x="55.6622%" y="965" width="1.4660%" height="15" fill="rgb(248,123,17)"/><text x="55.9122%" y="975.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (1,598 samples, 1.47%)</title><rect x="55.6622%" y="949" width="1.4660%" height="15" fill="rgb(227,141,18)"/><text x="55.9122%" y="959.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (1,598 samples, 1.47%)</title><rect x="55.6622%" y="933" width="1.4660%" height="15" fill="rgb(216,102,9)"/><text x="55.9122%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,598 samples, 1.47%)</title><rect x="55.6622%" y="917" width="1.4660%" height="15" fill="rgb(253,47,13)"/><text x="55.9122%" y="927.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::produce::{{closure}} (1,598 samples, 1.47%)</title><rect x="55.6622%" y="901" width="1.4660%" height="15" fill="rgb(226,93,23)"/><text x="55.9122%" y="911.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1,598 samples, 1.47%)</title><rect x="55.6622%" y="885" width="1.4660%" height="15" fill="rgb(247,104,17)"/><text x="55.9122%" y="895.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (1,686 samples, 1.55%)</title><rect x="55.6438%" y="1221" width="1.5467%" height="15" fill="rgb(233,203,26)"/><text x="55.8938%" y="1231.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::steal_work (61 samples, 0.06%)</title><rect x="57.1346%" y="1205" width="0.0560%" height="15" fill="rgb(244,98,49)"/><text x="57.3846%" y="1215.50"></text></g><g><title>entry_SYSCALL_64 (21 samples, 0.02%)</title><rect x="57.3080%" y="725" width="0.0193%" height="15" fill="rgb(235,134,22)"/><text x="57.5580%" y="735.50"></text></g><g><title>__syscall_return_slowpath (14 samples, 0.01%)</title><rect x="57.3584%" y="693" width="0.0128%" height="15" fill="rgb(221,70,32)"/><text x="57.6084%" y="703.50"></text></g><g><title>_raw_spin_lock (95 samples, 0.09%)</title><rect x="57.3906%" y="661" width="0.0872%" height="15" fill="rgb(238,15,50)"/><text x="57.6406%" y="671.50"></text></g><g><title>__unqueue_futex (66 samples, 0.06%)</title><rect x="57.8603%" y="629" width="0.0605%" height="15" fill="rgb(215,221,48)"/><text x="58.1103%" y="639.50"></text></g><g><title>mark_wake_futex (254 samples, 0.23%)</title><rect x="57.6951%" y="645" width="0.2330%" height="15" fill="rgb(236,73,3)"/><text x="57.9451%" y="655.50"></text></g><g><title>wake_q_add_safe (23 samples, 0.02%)</title><rect x="57.9281%" y="645" width="0.0211%" height="15" fill="rgb(250,107,11)"/><text x="58.1781%" y="655.50"></text></g><g><title>_raw_spin_lock (16 samples, 0.01%)</title><rect x="57.9850%" y="629" width="0.0147%" height="15" fill="rgb(242,39,14)"/><text x="58.2350%" y="639.50"></text></g><g><title>_raw_spin_lock_irqsave (11 samples, 0.01%)</title><rect x="58.1603%" y="613" width="0.0101%" height="15" fill="rgb(248,164,37)"/><text x="58.4103%" y="623.50"></text></g><g><title>available_idle_cpu (84 samples, 0.08%)</title><rect x="58.2933%" y="597" width="0.0771%" height="15" fill="rgb(217,60,12)"/><text x="58.5433%" y="607.50"></text></g><g><title>select_idle_sibling (12 samples, 0.01%)</title><rect x="58.3722%" y="597" width="0.0110%" height="15" fill="rgb(240,125,29)"/><text x="58.6222%" y="607.50"></text></g><g><title>select_task_rq_fair (225 samples, 0.21%)</title><rect x="58.1795%" y="613" width="0.2064%" height="15" fill="rgb(208,207,28)"/><text x="58.4295%" y="623.50"></text></g><g><title>place_entity (30 samples, 0.03%)</title><rect x="58.8777%" y="565" width="0.0275%" height="15" fill="rgb(209,159,27)"/><text x="59.1277%" y="575.50"></text></g><g><title>update_cfs_group (47 samples, 0.04%)</title><rect x="58.9079%" y="565" width="0.0431%" height="15" fill="rgb(251,176,53)"/><text x="59.1579%" y="575.50"></text></g><g><title>reweight_entity (34 samples, 0.03%)</title><rect x="58.9199%" y="549" width="0.0312%" height="15" fill="rgb(211,85,7)"/><text x="59.1699%" y="559.50"></text></g><g><title>update_curr (11 samples, 0.01%)</title><rect x="58.9510%" y="565" width="0.0101%" height="15" fill="rgb(216,64,54)"/><text x="59.2010%" y="575.50"></text></g><g><title>__update_load_avg_cfs_rq (78 samples, 0.07%)</title><rect x="59.0033%" y="549" width="0.0716%" height="15" fill="rgb(217,54,24)"/><text x="59.2533%" y="559.50"></text></g><g><title>__update_load_avg_se (19 samples, 0.02%)</title><rect x="59.0749%" y="549" width="0.0174%" height="15" fill="rgb(208,206,53)"/><text x="59.3249%" y="559.50"></text></g><g><title>enqueue_entity (480 samples, 0.44%)</title><rect x="58.6529%" y="581" width="0.4404%" height="15" fill="rgb(251,74,39)"/><text x="58.9029%" y="591.50"></text></g><g><title>update_load_avg (144 samples, 0.13%)</title><rect x="58.9611%" y="565" width="0.1321%" height="15" fill="rgb(226,47,5)"/><text x="59.2111%" y="575.50"></text></g><g><title>enqueue_task_fair (658 samples, 0.60%)</title><rect x="58.5098%" y="597" width="0.6036%" height="15" fill="rgb(234,111,33)"/><text x="58.7598%" y="607.50"></text></g><g><title>psi_flags_change (34 samples, 0.03%)</title><rect x="59.2510%" y="581" width="0.0312%" height="15" fill="rgb(251,14,10)"/><text x="59.5010%" y="591.50"></text></g><g><title>native_sched_clock (26 samples, 0.02%)</title><rect x="59.5877%" y="533" width="0.0239%" height="15" fill="rgb(232,43,0)"/><text x="59.8377%" y="543.50"></text></g><g><title>record_times (57 samples, 0.05%)</title><rect x="59.5602%" y="565" width="0.0523%" height="15" fill="rgb(222,68,43)"/><text x="59.8102%" y="575.50"></text></g><g><title>sched_clock_cpu (31 samples, 0.03%)</title><rect x="59.5841%" y="549" width="0.0284%" height="15" fill="rgb(217,24,23)"/><text x="59.8341%" y="559.50"></text></g><g><title>psi_group_change (365 samples, 0.33%)</title><rect x="59.2822%" y="581" width="0.3349%" height="15" fill="rgb(229,209,14)"/><text x="59.5322%" y="591.50"></text></g><g><title>psi_task_change (547 samples, 0.50%)</title><rect x="59.1180%" y="597" width="0.5018%" height="15" fill="rgb(250,149,48)"/><text x="59.3680%" y="607.50"></text></g><g><title>check_preempt_curr (222 samples, 0.20%)</title><rect x="59.6272%" y="581" width="0.2037%" height="15" fill="rgb(210,120,37)"/><text x="59.8772%" y="591.50"></text></g><g><title>resched_curr (195 samples, 0.18%)</title><rect x="59.6519%" y="565" width="0.1789%" height="15" fill="rgb(210,21,8)"/><text x="59.9019%" y="575.50"></text></g><g><title>ttwu_do_activate (1,581 samples, 1.45%)</title><rect x="58.3905%" y="613" width="1.4504%" height="15" fill="rgb(243,145,7)"/><text x="58.6405%" y="623.50"></text></g><g><title>ttwu_do_wakeup (241 samples, 0.22%)</title><rect x="59.6198%" y="597" width="0.2211%" height="15" fill="rgb(238,178,32)"/><text x="59.8698%" y="607.50"></text></g><g><title>resched_curr (11 samples, 0.01%)</title><rect x="59.8308%" y="581" width="0.0101%" height="15" fill="rgb(222,4,10)"/><text x="60.0808%" y="591.50"></text></g><g><title>ttwu_queue_wakelist (33 samples, 0.03%)</title><rect x="59.8409%" y="613" width="0.0303%" height="15" fill="rgb(239,7,37)"/><text x="60.0909%" y="623.50"></text></g><g><title>update_cfs_rq_h_load (205 samples, 0.19%)</title><rect x="59.8712%" y="613" width="0.1881%" height="15" fill="rgb(215,31,37)"/><text x="60.1212%" y="623.50"></text></g><g><title>try_to_wake_up (2,320 samples, 2.13%)</title><rect x="58.0061%" y="629" width="2.1284%" height="15" fill="rgb(224,83,33)"/><text x="58.2561%" y="639.50">t..</text></g><g><title>update_rq_clock (82 samples, 0.08%)</title><rect x="60.0593%" y="613" width="0.0752%" height="15" fill="rgb(239,55,3)"/><text x="60.3093%" y="623.50"></text></g><g><title>sched_clock_cpu (17 samples, 0.02%)</title><rect x="60.1189%" y="597" width="0.0156%" height="15" fill="rgb(247,92,11)"/><text x="60.3689%" y="607.50"></text></g><g><title>native_sched_clock (15 samples, 0.01%)</title><rect x="60.1207%" y="581" width="0.0138%" height="15" fill="rgb(239,200,7)"/><text x="60.3707%" y="591.50"></text></g><g><title>futex_wake (2,899 samples, 2.66%)</title><rect x="57.4777%" y="661" width="2.6595%" height="15" fill="rgb(227,115,8)"/><text x="57.7277%" y="671.50">fu..</text></g><g><title>wake_up_q (2,385 samples, 2.19%)</title><rect x="57.9492%" y="645" width="2.1880%" height="15" fill="rgb(215,189,27)"/><text x="58.1992%" y="655.50">w..</text></g><g><title>hash_futex (16 samples, 0.01%)</title><rect x="60.1391%" y="661" width="0.0147%" height="15" fill="rgb(251,216,39)"/><text x="60.3891%" y="671.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3,084 samples, 2.83%)</title><rect x="57.3273%" y="725" width="2.8293%" height="15" fill="rgb(207,29,47)"/><text x="57.5773%" y="735.50">en..</text></g><g><title>do_syscall_64 (3,063 samples, 2.81%)</title><rect x="57.3465%" y="709" width="2.8100%" height="15" fill="rgb(210,71,34)"/><text x="57.5965%" y="719.50">do..</text></g><g><title>__x64_sys_futex (3,036 samples, 2.79%)</title><rect x="57.3713%" y="693" width="2.7852%" height="15" fill="rgb(253,217,51)"/><text x="57.6213%" y="703.50">__..</text></g><g><title>do_futex (3,026 samples, 2.78%)</title><rect x="57.3805%" y="677" width="2.7760%" height="15" fill="rgb(222,117,46)"/><text x="57.6305%" y="687.50">do..</text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (3,173 samples, 2.91%)</title><rect x="57.2566%" y="757" width="2.9109%" height="15" fill="rgb(226,132,6)"/><text x="57.5066%" y="767.50">&lt;p..</text></g><g><title>syscall (3,157 samples, 2.90%)</title><rect x="57.2713%" y="741" width="2.8962%" height="15" fill="rgb(254,145,51)"/><text x="57.5213%" y="751.50">sy..</text></g><g><title>syscall_return_via_sysret (12 samples, 0.01%)</title><rect x="60.1565%" y="725" width="0.0110%" height="15" fill="rgb(231,199,27)"/><text x="60.4065%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (52 samples, 0.05%)</title><rect x="60.1675%" y="757" width="0.0477%" height="15" fill="rgb(245,158,14)"/><text x="60.4175%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (52 samples, 0.05%)</title><rect x="60.1675%" y="741" width="0.0477%" height="15" fill="rgb(240,113,14)"/><text x="60.4175%" y="751.50"></text></g><g><title>tokio::park::thread::wake (3,296 samples, 3.02%)</title><rect x="57.2520%" y="853" width="3.0237%" height="15" fill="rgb(210,20,13)"/><text x="57.5020%" y="863.50">tok..</text></g><g><title>tokio::park::thread::Inner::unpark (3,296 samples, 3.02%)</title><rect x="57.2520%" y="837" width="3.0237%" height="15" fill="rgb(241,144,13)"/><text x="57.5020%" y="847.50">tok..</text></g><g><title>tokio::loom::std::parking_lot::Condvar::notify_one (3,296 samples, 3.02%)</title><rect x="57.2520%" y="821" width="3.0237%" height="15" fill="rgb(235,43,34)"/><text x="57.5020%" y="831.50">tok..</text></g><g><title>parking_lot::condvar::Condvar::notify_one (3,296 samples, 3.02%)</title><rect x="57.2520%" y="805" width="3.0237%" height="15" fill="rgb(208,36,20)"/><text x="57.5020%" y="815.50">par..</text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (3,296 samples, 3.02%)</title><rect x="57.2520%" y="789" width="3.0237%" height="15" fill="rgb(239,204,10)"/><text x="57.5020%" y="799.50">par..</text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (3,295 samples, 3.02%)</title><rect x="57.2529%" y="773" width="3.0228%" height="15" fill="rgb(217,84,43)"/><text x="57.5029%" y="783.50">par..</text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (63 samples, 0.06%)</title><rect x="60.2180%" y="757" width="0.0578%" height="15" fill="rgb(241,170,50)"/><text x="60.4680%" y="767.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (63 samples, 0.06%)</title><rect x="60.2180%" y="741" width="0.0578%" height="15" fill="rgb(226,205,29)"/><text x="60.4680%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (62 samples, 0.06%)</title><rect x="60.2189%" y="725" width="0.0569%" height="15" fill="rgb(233,113,1)"/><text x="60.4689%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_sub (62 samples, 0.06%)</title><rect x="60.2189%" y="709" width="0.0569%" height="15" fill="rgb(253,98,13)"/><text x="60.4689%" y="719.50"></text></g><g><title>imalloc_no_sample (28 samples, 0.03%)</title><rect x="60.2831%" y="709" width="0.0257%" height="15" fill="rgb(211,115,12)"/><text x="60.5331%" y="719.50"></text></g><g><title>iallocztm (26 samples, 0.02%)</title><rect x="60.2849%" y="693" width="0.0239%" height="15" fill="rgb(208,12,16)"/><text x="60.5349%" y="703.50"></text></g><g><title>arena_malloc (26 samples, 0.02%)</title><rect x="60.2849%" y="677" width="0.0239%" height="15" fill="rgb(237,193,54)"/><text x="60.5349%" y="687.50"></text></g><g><title>tcache_alloc_small (26 samples, 0.02%)</title><rect x="60.2849%" y="661" width="0.0239%" height="15" fill="rgb(243,22,42)"/><text x="60.5349%" y="671.50"></text></g><g><title>cache_bin_alloc_easy (22 samples, 0.02%)</title><rect x="60.2886%" y="645" width="0.0202%" height="15" fill="rgb(233,151,36)"/><text x="60.5386%" y="655.50"></text></g><g><title>imalloc_body (36 samples, 0.03%)</title><rect x="60.2813%" y="725" width="0.0330%" height="15" fill="rgb(237,57,45)"/><text x="60.5313%" y="735.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (3,407 samples, 3.13%)</title><rect x="57.1906%" y="1221" width="3.1256%" height="15" fill="rgb(221,88,17)"/><text x="57.4406%" y="1231.50">tok..</text></g><g><title>tokio::coop::budget (3,340 samples, 3.06%)</title><rect x="57.2520%" y="1205" width="3.0641%" height="15" fill="rgb(230,79,15)"/><text x="57.5020%" y="1215.50">tok..</text></g><g><title>tokio::coop::with_budget (3,340 samples, 3.06%)</title><rect x="57.2520%" y="1189" width="3.0641%" height="15" fill="rgb(213,57,13)"/><text x="57.5020%" y="1199.50">tok..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,340 samples, 3.06%)</title><rect x="57.2520%" y="1173" width="3.0641%" height="15" fill="rgb(222,116,39)"/><text x="57.5020%" y="1183.50">std..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,340 samples, 3.06%)</title><rect x="57.2520%" y="1157" width="3.0641%" height="15" fill="rgb(245,107,2)"/><text x="57.5020%" y="1167.50">std..</text></g><g><title>tokio::coop::with_budget::{{closure}} (3,340 samples, 3.06%)</title><rect x="57.2520%" y="1141" width="3.0641%" height="15" fill="rgb(238,1,10)"/><text x="57.5020%" y="1151.50">tok..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (3,340 samples, 3.06%)</title><rect x="57.2520%" y="1125" width="3.0641%" height="15" fill="rgb(249,4,48)"/><text x="57.5020%" y="1135.50">tok..</text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (3,340 samples, 3.06%)</title><rect x="57.2520%" y="1109" width="3.0641%" height="15" fill="rgb(223,151,18)"/><text x="57.5020%" y="1119.50">tok..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (3,340 samples, 3.06%)</title><rect x="57.2520%" y="1093" width="3.0641%" height="15" fill="rgb(227,65,43)"/><text x="57.5020%" y="1103.50">tok..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (3,340 samples, 3.06%)</title><rect x="57.2520%" y="1077" width="3.0641%" height="15" fill="rgb(218,40,45)"/><text x="57.5020%" y="1087.50">tok..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (3,340 samples, 3.06%)</title><rect x="57.2520%" y="1061" width="3.0641%" height="15" fill="rgb(252,121,31)"/><text x="57.5020%" y="1071.50">tok..</text></g><g><title>tokio::runtime::task::harness::poll_future (3,340 samples, 3.06%)</title><rect x="57.2520%" y="1045" width="3.0641%" height="15" fill="rgb(219,158,43)"/><text x="57.5020%" y="1055.50">tok..</text></g><g><title>std::panic::catch_unwind (3,340 samples, 3.06%)</title><rect x="57.2520%" y="1029" width="3.0641%" height="15" fill="rgb(231,162,42)"/><text x="57.5020%" y="1039.50">std..</text></g><g><title>std::panicking::try (3,340 samples, 3.06%)</title><rect x="57.2520%" y="1013" width="3.0641%" height="15" fill="rgb(217,179,25)"/><text x="57.5020%" y="1023.50">std..</text></g><g><title>std::panicking::try::do_call (3,340 samples, 3.06%)</title><rect x="57.2520%" y="997" width="3.0641%" height="15" fill="rgb(206,212,31)"/><text x="57.5020%" y="1007.50">std..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3,340 samples, 3.06%)</title><rect x="57.2520%" y="981" width="3.0641%" height="15" fill="rgb(235,144,12)"/><text x="57.5020%" y="991.50">&lt;st..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (3,340 samples, 3.06%)</title><rect x="57.2520%" y="965" width="3.0641%" height="15" fill="rgb(213,51,10)"/><text x="57.5020%" y="975.50">tok..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (3,340 samples, 3.06%)</title><rect x="57.2520%" y="949" width="3.0641%" height="15" fill="rgb(231,145,14)"/><text x="57.5020%" y="959.50">tok..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,340 samples, 3.06%)</title><rect x="57.2520%" y="933" width="3.0641%" height="15" fill="rgb(235,15,28)"/><text x="57.5020%" y="943.50">&lt;co..</text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::produce::{{closure}} (3,340 samples, 3.06%)</title><rect x="57.2520%" y="917" width="3.0641%" height="15" fill="rgb(237,206,10)"/><text x="57.5020%" y="927.50">rho..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (3,340 samples, 3.06%)</title><rect x="57.2520%" y="901" width="3.0641%" height="15" fill="rgb(236,227,27)"/><text x="57.5020%" y="911.50">&lt;co..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,340 samples, 3.06%)</title><rect x="57.2520%" y="885" width="3.0641%" height="15" fill="rgb(246,83,35)"/><text x="57.5020%" y="895.50">&lt;co..</text></g><g><title>&lt;rho_runtime::storage::coordinator::AsyncStore as rho_runtime::storage::Storage&gt;::produce::{{closure}} (3,340 samples, 3.06%)</title><rect x="57.2520%" y="869" width="3.0641%" height="15" fill="rgb(220,136,24)"/><text x="57.5020%" y="879.50">&lt;rh..</text></g><g><title>tokio::sync::oneshot::channel (44 samples, 0.04%)</title><rect x="60.2758%" y="853" width="0.0404%" height="15" fill="rgb(217,3,25)"/><text x="60.5258%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (44 samples, 0.04%)</title><rect x="60.2758%" y="837" width="0.0404%" height="15" fill="rgb(239,24,14)"/><text x="60.5258%" y="847.50"></text></g><g><title>alloc::alloc::exchange_malloc (44 samples, 0.04%)</title><rect x="60.2758%" y="821" width="0.0404%" height="15" fill="rgb(244,16,53)"/><text x="60.5258%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (44 samples, 0.04%)</title><rect x="60.2758%" y="805" width="0.0404%" height="15" fill="rgb(208,175,44)"/><text x="60.5258%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (44 samples, 0.04%)</title><rect x="60.2758%" y="789" width="0.0404%" height="15" fill="rgb(252,18,48)"/><text x="60.5258%" y="799.50"></text></g><g><title>alloc::alloc::alloc (44 samples, 0.04%)</title><rect x="60.2758%" y="773" width="0.0404%" height="15" fill="rgb(234,199,32)"/><text x="60.5258%" y="783.50"></text></g><g><title>_rjem_mallocx (44 samples, 0.04%)</title><rect x="60.2758%" y="757" width="0.0404%" height="15" fill="rgb(225,77,54)"/><text x="60.5258%" y="767.50"></text></g><g><title>imalloc (39 samples, 0.04%)</title><rect x="60.2804%" y="741" width="0.0358%" height="15" fill="rgb(225,42,25)"/><text x="60.5304%" y="751.50"></text></g><g><title>tokio::sync::oneshot::Sender&lt;T&gt;::send (11 samples, 0.01%)</title><rect x="60.3281%" y="1221" width="0.0101%" height="15" fill="rgb(242,227,46)"/><text x="60.5781%" y="1231.50"></text></g><g><title>[unknown] (46,940 samples, 43.06%)</title><rect x="17.3049%" y="1237" width="43.0626%" height="15" fill="rgb(246,197,35)"/><text x="17.5549%" y="1247.50">[unknown]</text></g><g><title>alloc::slice::merge_sort (14 samples, 0.01%)</title><rect x="60.3932%" y="1237" width="0.0128%" height="15" fill="rgb(215,159,26)"/><text x="60.6432%" y="1247.50"></text></g><g><title>anon.3355f6e2f41558cba95d2319ccf12f61.17.llvm.11307747483629077921 (13 samples, 0.01%)</title><rect x="60.4115%" y="1237" width="0.0119%" height="15" fill="rgb(212,194,50)"/><text x="60.6615%" y="1247.50"></text></g><g><title>anon.42eba6adfe01c63b206f6e2d83bc91a2.3.llvm.13918211242089597225 (13 samples, 0.01%)</title><rect x="60.4418%" y="1237" width="0.0119%" height="15" fill="rgb(246,132,1)"/><text x="60.6918%" y="1247.50"></text></g><g><title>blake3::ChunkState::update (11 samples, 0.01%)</title><rect x="60.4666%" y="1237" width="0.0101%" height="15" fill="rgb(217,71,7)"/><text x="60.7166%" y="1247.50"></text></g><g><title>blake3_compress_in_place_avx512 (183 samples, 0.17%)</title><rect x="60.4776%" y="1237" width="0.1679%" height="15" fill="rgb(252,59,32)"/><text x="60.7276%" y="1247.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park_timeout (11 samples, 0.01%)</title><rect x="60.7400%" y="661" width="0.0101%" height="15" fill="rgb(253,204,25)"/><text x="60.9900%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (16 samples, 0.01%)</title><rect x="60.7381%" y="677" width="0.0147%" height="15" fill="rgb(232,21,16)"/><text x="60.9881%" y="687.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::is_closed (12 samples, 0.01%)</title><rect x="60.7528%" y="661" width="0.0110%" height="15" fill="rgb(248,90,29)"/><text x="61.0028%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::maintenance (49 samples, 0.04%)</title><rect x="60.7280%" y="693" width="0.0450%" height="15" fill="rgb(249,223,7)"/><text x="60.9780%" y="703.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::maintenance (22 samples, 0.02%)</title><rect x="60.7528%" y="677" width="0.0202%" height="15" fill="rgb(231,119,42)"/><text x="61.0028%" y="687.50"></text></g><g><title>__switch_to (14 samples, 0.01%)</title><rect x="61.5234%" y="613" width="0.0128%" height="15" fill="rgb(215,41,35)"/><text x="61.7734%" y="623.50"></text></g><g><title>do_syscall_64 (30 samples, 0.03%)</title><rect x="61.5409%" y="613" width="0.0275%" height="15" fill="rgb(220,44,45)"/><text x="61.7909%" y="623.50"></text></g><g><title>entry_SYSCALL_64 (507 samples, 0.47%)</title><rect x="61.5684%" y="613" width="0.4651%" height="15" fill="rgb(253,197,36)"/><text x="61.8184%" y="623.50"></text></g><g><title>__x64_sys_sched_yield (39 samples, 0.04%)</title><rect x="62.1363%" y="597" width="0.0358%" height="15" fill="rgb(245,225,54)"/><text x="62.3863%" y="607.50"></text></g><g><title>__prepare_exit_to_usermode (17 samples, 0.02%)</title><rect x="62.3500%" y="581" width="0.0156%" height="15" fill="rgb(239,94,37)"/><text x="62.6000%" y="591.50"></text></g><g><title>fpregs_assert_state_consistent (47 samples, 0.04%)</title><rect x="62.5234%" y="549" width="0.0431%" height="15" fill="rgb(242,217,10)"/><text x="62.7734%" y="559.50"></text></g><g><title>__prepare_exit_to_usermode (139 samples, 0.13%)</title><rect x="62.4491%" y="565" width="0.1275%" height="15" fill="rgb(250,193,7)"/><text x="62.6991%" y="575.50"></text></g><g><title>switch_fpu_return (11 samples, 0.01%)</title><rect x="62.5665%" y="549" width="0.0101%" height="15" fill="rgb(230,104,19)"/><text x="62.8165%" y="559.50"></text></g><g><title>__syscall_return_slowpath (256 samples, 0.23%)</title><rect x="62.3656%" y="581" width="0.2349%" height="15" fill="rgb(230,181,4)"/><text x="62.6156%" y="591.50"></text></g><g><title>fpregs_assert_state_consistent (26 samples, 0.02%)</title><rect x="62.5766%" y="565" width="0.0239%" height="15" fill="rgb(216,219,49)"/><text x="62.8266%" y="575.50"></text></g><g><title>__x86_indirect_thunk_rax (21 samples, 0.02%)</title><rect x="62.6142%" y="565" width="0.0193%" height="15" fill="rgb(254,144,0)"/><text x="62.8642%" y="575.50"></text></g><g><title>_raw_spin_lock (303 samples, 0.28%)</title><rect x="62.6335%" y="565" width="0.2780%" height="15" fill="rgb(205,209,38)"/><text x="62.8835%" y="575.50"></text></g><g><title>check_cfs_rq_runtime (28 samples, 0.03%)</title><rect x="63.9389%" y="517" width="0.0257%" height="15" fill="rgb(240,21,42)"/><text x="64.1889%" y="527.50"></text></g><g><title>pick_next_entity (26 samples, 0.02%)</title><rect x="63.9738%" y="517" width="0.0239%" height="15" fill="rgb(241,132,3)"/><text x="64.2238%" y="527.50"></text></g><g><title>__calc_delta (56 samples, 0.05%)</title><rect x="64.3875%" y="501" width="0.0514%" height="15" fill="rgb(225,14,2)"/><text x="64.6375%" y="511.50"></text></g><g><title>__cgroup_account_cputime (16 samples, 0.01%)</title><rect x="64.4389%" y="501" width="0.0147%" height="15" fill="rgb(210,141,35)"/><text x="64.6889%" y="511.50"></text></g><g><title>clear_buddies (59 samples, 0.05%)</title><rect x="64.4536%" y="501" width="0.0541%" height="15" fill="rgb(251,14,44)"/><text x="64.7036%" y="511.50"></text></g><g><title>cpuacct_charge (27 samples, 0.02%)</title><rect x="64.5077%" y="501" width="0.0248%" height="15" fill="rgb(247,48,18)"/><text x="64.7577%" y="511.50"></text></g><g><title>pick_next_entity (266 samples, 0.24%)</title><rect x="64.5325%" y="501" width="0.2440%" height="15" fill="rgb(225,0,40)"/><text x="64.7825%" y="511.50"></text></g><g><title>clear_buddies (35 samples, 0.03%)</title><rect x="64.7444%" y="485" width="0.0321%" height="15" fill="rgb(221,31,33)"/><text x="64.9944%" y="495.50"></text></g><g><title>__calc_delta (157 samples, 0.14%)</title><rect x="65.1838%" y="485" width="0.1440%" height="15" fill="rgb(237,42,40)"/><text x="65.4338%" y="495.50"></text></g><g><title>__cgroup_account_cputime (124 samples, 0.11%)</title><rect x="65.3279%" y="485" width="0.1138%" height="15" fill="rgb(233,51,29)"/><text x="65.5779%" y="495.50"></text></g><g><title>cgroup_rstat_updated (59 samples, 0.05%)</title><rect x="65.3875%" y="469" width="0.0541%" height="15" fill="rgb(226,58,20)"/><text x="65.6375%" y="479.50"></text></g><g><title>cgroup_rstat_updated (15 samples, 0.01%)</title><rect x="65.4416%" y="485" width="0.0138%" height="15" fill="rgb(208,98,7)"/><text x="65.6916%" y="495.50"></text></g><g><title>cpuacct_charge (418 samples, 0.38%)</title><rect x="65.4554%" y="485" width="0.3835%" height="15" fill="rgb(228,143,44)"/><text x="65.7054%" y="495.50"></text></g><g><title>update_curr (1,321 samples, 1.21%)</title><rect x="64.7912%" y="501" width="1.2119%" height="15" fill="rgb(246,55,38)"/><text x="65.0412%" y="511.50"></text></g><g><title>update_min_vruntime (179 samples, 0.16%)</title><rect x="65.8389%" y="485" width="0.1642%" height="15" fill="rgb(247,87,16)"/><text x="66.0889%" y="495.50"></text></g><g><title>pick_next_task_fair (2,274 samples, 2.09%)</title><rect x="63.9977%" y="517" width="2.0862%" height="15" fill="rgb(234,129,42)"/><text x="64.2477%" y="527.50">p..</text></g><g><title>update_min_vruntime (88 samples, 0.08%)</title><rect x="66.0031%" y="501" width="0.0807%" height="15" fill="rgb(220,82,16)"/><text x="66.2531%" y="511.50"></text></g><g><title>rcu_note_context_switch (65 samples, 0.06%)</title><rect x="66.0884%" y="517" width="0.0596%" height="15" fill="rgb(211,88,4)"/><text x="66.3384%" y="527.50"></text></g><g><title>rcu_qs (23 samples, 0.02%)</title><rect x="66.1480%" y="517" width="0.0211%" height="15" fill="rgb(248,151,21)"/><text x="66.3980%" y="527.50"></text></g><g><title>update_curr (27 samples, 0.02%)</title><rect x="66.1783%" y="517" width="0.0248%" height="15" fill="rgb(238,163,6)"/><text x="66.4283%" y="527.50"></text></g><g><title>sched_clock (15 samples, 0.01%)</title><rect x="66.3324%" y="501" width="0.0138%" height="15" fill="rgb(209,183,11)"/><text x="66.5824%" y="511.50"></text></g><g><title>native_sched_clock (402 samples, 0.37%)</title><rect x="66.3765%" y="485" width="0.3688%" height="15" fill="rgb(219,37,20)"/><text x="66.6265%" y="495.50"></text></g><g><title>update_rq_clock (604 samples, 0.55%)</title><rect x="66.2031%" y="517" width="0.5541%" height="15" fill="rgb(210,158,4)"/><text x="66.4531%" y="527.50"></text></g><g><title>sched_clock_cpu (448 samples, 0.41%)</title><rect x="66.3462%" y="501" width="0.4110%" height="15" fill="rgb(221,167,53)"/><text x="66.5962%" y="511.50"></text></g><g><title>sched_clock (13 samples, 0.01%)</title><rect x="66.7453%" y="485" width="0.0119%" height="15" fill="rgb(237,151,45)"/><text x="66.9953%" y="495.50"></text></g><g><title>__sched_text_start (3,874 samples, 3.55%)</title><rect x="63.2041%" y="533" width="3.5540%" height="15" fill="rgb(231,39,3)"/><text x="63.4541%" y="543.50">__sc..</text></g><g><title>_raw_spin_lock (296 samples, 0.27%)</title><rect x="66.7581%" y="533" width="0.2715%" height="15" fill="rgb(212,167,28)"/><text x="67.0081%" y="543.50"></text></g><g><title>pick_next_task_fair (21 samples, 0.02%)</title><rect x="67.0306%" y="533" width="0.0193%" height="15" fill="rgb(232,178,8)"/><text x="67.2806%" y="543.50"></text></g><g><title>rcu_note_context_switch (15 samples, 0.01%)</title><rect x="67.0498%" y="533" width="0.0138%" height="15" fill="rgb(225,151,20)"/><text x="67.2998%" y="543.50"></text></g><g><title>schedule (4,367 samples, 4.01%)</title><rect x="63.0775%" y="549" width="4.0063%" height="15" fill="rgb(238,3,37)"/><text x="63.3275%" y="559.50">sche..</text></g><g><title>update_rq_clock (22 samples, 0.02%)</title><rect x="67.0636%" y="533" width="0.0202%" height="15" fill="rgb(251,147,42)"/><text x="67.3136%" y="543.50"></text></g><g><title>update_curr (17 samples, 0.02%)</title><rect x="67.1526%" y="533" width="0.0156%" height="15" fill="rgb(208,173,10)"/><text x="67.4026%" y="543.50"></text></g><g><title>do_sched_yield (4,647 samples, 4.26%)</title><rect x="62.9115%" y="565" width="4.2631%" height="15" fill="rgb(246,225,4)"/><text x="63.1615%" y="575.50">do_sc..</text></g><g><title>yield_task_fair (99 samples, 0.09%)</title><rect x="67.0838%" y="549" width="0.0908%" height="15" fill="rgb(248,102,6)"/><text x="67.3338%" y="559.50"></text></g><g><title>schedule (14 samples, 0.01%)</title><rect x="67.1746%" y="565" width="0.0128%" height="15" fill="rgb(232,6,21)"/><text x="67.4246%" y="575.50"></text></g><g><title>__x64_sys_sched_yield (5,017 samples, 4.60%)</title><rect x="62.6005%" y="581" width="4.6026%" height="15" fill="rgb(221,179,22)"/><text x="62.8505%" y="591.50">__x64..</text></g><g><title>yield_task_fair (17 samples, 0.02%)</title><rect x="67.1874%" y="565" width="0.0156%" height="15" fill="rgb(252,50,20)"/><text x="67.4374%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5,660 samples, 5.19%)</title><rect x="62.0335%" y="613" width="5.1925%" height="15" fill="rgb(222,56,38)"/><text x="62.2835%" y="623.50">entry_..</text></g><g><title>do_syscall_64 (5,503 samples, 5.05%)</title><rect x="62.1775%" y="597" width="5.0484%" height="15" fill="rgb(206,193,29)"/><text x="62.4275%" y="607.50">do_sys..</text></g><g><title>do_sched_yield (23 samples, 0.02%)</title><rect x="67.2049%" y="581" width="0.0211%" height="15" fill="rgb(239,192,45)"/><text x="67.4549%" y="591.50"></text></g><g><title>native_write_msr (11 samples, 0.01%)</title><rect x="67.2269%" y="613" width="0.0101%" height="15" fill="rgb(254,18,36)"/><text x="67.4769%" y="623.50"></text></g><g><title>__sched_yield (6,851 samples, 6.29%)</title><rect x="61.0666%" y="629" width="6.2851%" height="15" fill="rgb(221,127,11)"/><text x="61.3166%" y="639.50">__sched_..</text></g><g><title>syscall_return_via_sysret (124 samples, 0.11%)</title><rect x="67.2379%" y="613" width="0.1138%" height="15" fill="rgb(234,146,35)"/><text x="67.4879%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (340 samples, 0.31%)</title><rect x="67.3526%" y="629" width="0.3119%" height="15" fill="rgb(254,201,37)"/><text x="67.6026%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (340 samples, 0.31%)</title><rect x="67.3526%" y="613" width="0.3119%" height="15" fill="rgb(211,202,23)"/><text x="67.6026%" y="623.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (43 samples, 0.04%)</title><rect x="67.6645%" y="629" width="0.0394%" height="15" fill="rgb(237,91,2)"/><text x="67.9145%" y="639.50"></text></g><g><title>parking_lot_core::parking_lot::park (43 samples, 0.04%)</title><rect x="67.6645%" y="613" width="0.0394%" height="15" fill="rgb(226,228,36)"/><text x="67.9145%" y="623.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (43 samples, 0.04%)</title><rect x="67.6645%" y="597" width="0.0394%" height="15" fill="rgb(213,63,50)"/><text x="67.9145%" y="607.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (43 samples, 0.04%)</title><rect x="67.6645%" y="581" width="0.0394%" height="15" fill="rgb(235,194,19)"/><text x="67.9145%" y="591.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (43 samples, 0.04%)</title><rect x="67.6645%" y="565" width="0.0394%" height="15" fill="rgb(207,204,18)"/><text x="67.9145%" y="575.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (43 samples, 0.04%)</title><rect x="67.6645%" y="549" width="0.0394%" height="15" fill="rgb(248,8,7)"/><text x="67.9145%" y="559.50"></text></g><g><title>syscall (43 samples, 0.04%)</title><rect x="67.6645%" y="533" width="0.0394%" height="15" fill="rgb(223,145,47)"/><text x="67.9145%" y="543.50"></text></g><g><title>entry_SYSCALL_64 (43 samples, 0.04%)</title><rect x="67.6645%" y="517" width="0.0394%" height="15" fill="rgb(228,84,11)"/><text x="67.9145%" y="527.50"></text></g><g><title>std::thread::yield_now (17 samples, 0.02%)</title><rect x="67.7039%" y="629" width="0.0156%" height="15" fill="rgb(218,76,45)"/><text x="67.9539%" y="639.50"></text></g><g><title>std::sys::unix::thread::Thread::yield_now (17 samples, 0.02%)</title><rect x="67.7039%" y="613" width="0.0156%" height="15" fill="rgb(223,80,15)"/><text x="67.9539%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,()&gt;&gt; (91 samples, 0.08%)</title><rect x="67.7260%" y="613" width="0.0835%" height="15" fill="rgb(219,218,33)"/><text x="67.9760%" y="623.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (91 samples, 0.08%)</title><rect x="67.7260%" y="597" width="0.0835%" height="15" fill="rgb(208,51,11)"/><text x="67.9760%" y="607.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (91 samples, 0.08%)</title><rect x="67.7260%" y="581" width="0.0835%" height="15" fill="rgb(229,165,39)"/><text x="67.9760%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (84 samples, 0.08%)</title><rect x="67.7324%" y="565" width="0.0771%" height="15" fill="rgb(241,100,24)"/><text x="67.9824%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (84 samples, 0.08%)</title><rect x="67.7324%" y="549" width="0.0771%" height="15" fill="rgb(228,14,23)"/><text x="67.9824%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (294 samples, 0.27%)</title><rect x="67.8094%" y="613" width="0.2697%" height="15" fill="rgb(247,116,52)"/><text x="68.0594%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (294 samples, 0.27%)</title><rect x="67.8094%" y="597" width="0.2697%" height="15" fill="rgb(216,149,33)"/><text x="68.0594%" y="607.50"></text></g><g><title>__sched_yield (50 samples, 0.05%)</title><rect x="68.0828%" y="581" width="0.0459%" height="15" fill="rgb(238,142,29)"/><text x="68.3328%" y="591.50"></text></g><g><title>entry_SYSCALL_64 (50 samples, 0.05%)</title><rect x="68.0828%" y="565" width="0.0459%" height="15" fill="rgb(224,83,40)"/><text x="68.3328%" y="575.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (126 samples, 0.12%)</title><rect x="68.1425%" y="565" width="0.1156%" height="15" fill="rgb(234,165,11)"/><text x="68.3925%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (116 samples, 0.11%)</title><rect x="68.1516%" y="549" width="0.1064%" height="15" fill="rgb(215,96,23)"/><text x="68.4016%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (116 samples, 0.11%)</title><rect x="68.1516%" y="533" width="0.1064%" height="15" fill="rgb(233,179,26)"/><text x="68.4016%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (663 samples, 0.61%)</title><rect x="68.2911%" y="501" width="0.6082%" height="15" fill="rgb(225,129,33)"/><text x="68.5411%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (663 samples, 0.61%)</title><rect x="68.2911%" y="485" width="0.6082%" height="15" fill="rgb(237,49,13)"/><text x="68.5411%" y="495.50"></text></g><g><title>entry_SYSCALL_64 (160 samples, 0.15%)</title><rect x="69.1296%" y="469" width="0.1468%" height="15" fill="rgb(211,3,31)"/><text x="69.3796%" y="479.50"></text></g><g><title>__syscall_return_slowpath (23 samples, 0.02%)</title><rect x="69.5406%" y="453" width="0.0211%" height="15" fill="rgb(216,152,19)"/><text x="69.7906%" y="463.50"></text></g><g><title>__prepare_exit_to_usermode (407 samples, 0.37%)</title><rect x="69.7929%" y="421" width="0.3734%" height="15" fill="rgb(251,121,35)"/><text x="70.0429%" y="431.50"></text></g><g><title>switch_fpu_return (352 samples, 0.32%)</title><rect x="69.8433%" y="405" width="0.3229%" height="15" fill="rgb(210,217,47)"/><text x="70.0933%" y="415.50"></text></g><g><title>fpregs_assert_state_consistent (11 samples, 0.01%)</title><rect x="70.1662%" y="421" width="0.0101%" height="15" fill="rgb(244,116,22)"/><text x="70.4162%" y="431.50"></text></g><g><title>__syscall_return_slowpath (458 samples, 0.42%)</title><rect x="69.7626%" y="437" width="0.4202%" height="15" fill="rgb(228,17,21)"/><text x="70.0126%" y="447.50"></text></g><g><title>_raw_spin_lock (80 samples, 0.07%)</title><rect x="70.8928%" y="389" width="0.0734%" height="15" fill="rgb(240,149,34)"/><text x="71.1428%" y="399.50"></text></g><g><title>__perf_event_task_sched_out (25 samples, 0.02%)</title><rect x="71.5689%" y="357" width="0.0229%" height="15" fill="rgb(208,125,47)"/><text x="71.8189%" y="367.50"></text></g><g><title>intel_pmu_disable_all (11 samples, 0.01%)</title><rect x="72.2340%" y="277" width="0.0101%" height="15" fill="rgb(249,186,39)"/><text x="72.4840%" y="287.50"></text></g><g><title>perf_pmu_disable.part.0 (51 samples, 0.05%)</title><rect x="72.2258%" y="293" width="0.0468%" height="15" fill="rgb(240,220,33)"/><text x="72.4758%" y="303.50"></text></g><g><title>x86_pmu_disable (31 samples, 0.03%)</title><rect x="72.2441%" y="277" width="0.0284%" height="15" fill="rgb(243,110,23)"/><text x="72.4941%" y="287.50"></text></g><g><title>intel_pmu_disable_all (20 samples, 0.02%)</title><rect x="72.2542%" y="261" width="0.0183%" height="15" fill="rgb(219,163,46)"/><text x="72.5042%" y="271.50"></text></g><g><title>native_sched_clock (113 samples, 0.10%)</title><rect x="72.2891%" y="277" width="0.1037%" height="15" fill="rgb(216,126,30)"/><text x="72.5391%" y="287.50"></text></g><g><title>sched_clock_cpu (128 samples, 0.12%)</title><rect x="72.2772%" y="293" width="0.1174%" height="15" fill="rgb(208,139,11)"/><text x="72.5272%" y="303.50"></text></g><g><title>ctx_sched_out (282 samples, 0.26%)</title><rect x="72.1634%" y="309" width="0.2587%" height="15" fill="rgb(213,118,36)"/><text x="72.4134%" y="319.50"></text></g><g><title>x86_pmu_disable (30 samples, 0.03%)</title><rect x="72.3946%" y="293" width="0.0275%" height="15" fill="rgb(226,43,17)"/><text x="72.6446%" y="303.50"></text></g><g><title>__perf_event_task_sched_out (400 samples, 0.37%)</title><rect x="72.0625%" y="341" width="0.3670%" height="15" fill="rgb(254,217,4)"/><text x="72.3125%" y="351.50"></text></g><g><title>task_ctx_sched_out (295 samples, 0.27%)</title><rect x="72.1588%" y="325" width="0.2706%" height="15" fill="rgb(210,134,47)"/><text x="72.4088%" y="335.50"></text></g><g><title>_raw_spin_lock (135 samples, 0.12%)</title><rect x="72.4304%" y="341" width="0.1238%" height="15" fill="rgb(237,24,49)"/><text x="72.6804%" y="351.50"></text></g><g><title>dequeue_entity (17 samples, 0.02%)</title><rect x="72.5542%" y="341" width="0.0156%" height="15" fill="rgb(251,39,46)"/><text x="72.8042%" y="351.50"></text></g><g><title>account_entity_dequeue (40 samples, 0.04%)</title><rect x="72.7294%" y="325" width="0.0367%" height="15" fill="rgb(251,220,3)"/><text x="72.9794%" y="335.50"></text></g><g><title>clear_buddies (23 samples, 0.02%)</title><rect x="72.7661%" y="325" width="0.0211%" height="15" fill="rgb(228,105,12)"/><text x="73.0161%" y="335.50"></text></g><g><title>__calc_delta (20 samples, 0.02%)</title><rect x="72.9065%" y="309" width="0.0183%" height="15" fill="rgb(215,196,1)"/><text x="73.1565%" y="319.50"></text></g><g><title>__update_load_avg_cfs_rq (18 samples, 0.02%)</title><rect x="72.9285%" y="309" width="0.0165%" height="15" fill="rgb(214,33,39)"/><text x="73.1785%" y="319.50"></text></g><g><title>__update_load_avg_se (35 samples, 0.03%)</title><rect x="72.9450%" y="309" width="0.0321%" height="15" fill="rgb(220,19,52)"/><text x="73.1950%" y="319.50"></text></g><g><title>account_entity_dequeue (84 samples, 0.08%)</title><rect x="72.9781%" y="309" width="0.0771%" height="15" fill="rgb(221,78,38)"/><text x="73.2281%" y="319.50"></text></g><g><title>update_cfs_group (288 samples, 0.26%)</title><rect x="73.0716%" y="309" width="0.2642%" height="15" fill="rgb(253,30,16)"/><text x="73.3216%" y="319.50"></text></g><g><title>reweight_entity (175 samples, 0.16%)</title><rect x="73.1753%" y="293" width="0.1605%" height="15" fill="rgb(242,65,0)"/><text x="73.4253%" y="303.50"></text></g><g><title>__calc_delta (47 samples, 0.04%)</title><rect x="73.4918%" y="293" width="0.0431%" height="15" fill="rgb(235,201,12)"/><text x="73.7418%" y="303.50"></text></g><g><title>__cgroup_account_cputime (40 samples, 0.04%)</title><rect x="73.5349%" y="293" width="0.0367%" height="15" fill="rgb(233,161,9)"/><text x="73.7849%" y="303.50"></text></g><g><title>cgroup_rstat_updated (23 samples, 0.02%)</title><rect x="73.5505%" y="277" width="0.0211%" height="15" fill="rgb(241,207,41)"/><text x="73.8005%" y="287.50"></text></g><g><title>cpuacct_charge (109 samples, 0.10%)</title><rect x="73.5744%" y="293" width="0.1000%" height="15" fill="rgb(212,69,46)"/><text x="73.8244%" y="303.50"></text></g><g><title>update_curr (404 samples, 0.37%)</title><rect x="73.3358%" y="309" width="0.3706%" height="15" fill="rgb(239,69,45)"/><text x="73.5858%" y="319.50"></text></g><g><title>update_min_vruntime (35 samples, 0.03%)</title><rect x="73.6744%" y="293" width="0.0321%" height="15" fill="rgb(242,117,48)"/><text x="73.9244%" y="303.50"></text></g><g><title>__update_load_avg_cfs_rq (202 samples, 0.19%)</title><rect x="73.8624%" y="293" width="0.1853%" height="15" fill="rgb(228,41,36)"/><text x="74.1124%" y="303.50"></text></g><g><title>update_load_avg (553 samples, 0.51%)</title><rect x="73.7065%" y="309" width="0.5073%" height="15" fill="rgb(212,3,32)"/><text x="73.9565%" y="319.50"></text></g><g><title>__update_load_avg_se (181 samples, 0.17%)</title><rect x="74.0477%" y="293" width="0.1660%" height="15" fill="rgb(233,41,49)"/><text x="74.2977%" y="303.50"></text></g><g><title>dequeue_entity (1,593 samples, 1.46%)</title><rect x="72.7872%" y="325" width="1.4614%" height="15" fill="rgb(252,170,49)"/><text x="73.0372%" y="335.50"></text></g><g><title>update_min_vruntime (38 samples, 0.03%)</title><rect x="74.2138%" y="309" width="0.0349%" height="15" fill="rgb(229,53,26)"/><text x="74.4638%" y="319.50"></text></g><g><title>update_cfs_group (34 samples, 0.03%)</title><rect x="74.2487%" y="325" width="0.0312%" height="15" fill="rgb(217,157,12)"/><text x="74.4987%" y="335.50"></text></g><g><title>update_curr (11 samples, 0.01%)</title><rect x="74.2798%" y="325" width="0.0101%" height="15" fill="rgb(227,17,9)"/><text x="74.5298%" y="335.50"></text></g><g><title>update_load_avg (18 samples, 0.02%)</title><rect x="74.2899%" y="325" width="0.0165%" height="15" fill="rgb(218,84,12)"/><text x="74.5399%" y="335.50"></text></g><g><title>dequeue_task_fair (1,916 samples, 1.76%)</title><rect x="72.5698%" y="341" width="1.7577%" height="15" fill="rgb(212,79,24)"/><text x="72.8198%" y="351.50"></text></g><g><title>update_min_vruntime (23 samples, 0.02%)</title><rect x="74.3064%" y="325" width="0.0211%" height="15" fill="rgb(217,222,37)"/><text x="74.5564%" y="335.50"></text></g><g><title>__intel_pmu_enable_all.constprop.0 (47 samples, 0.04%)</title><rect x="74.9954%" y="261" width="0.0431%" height="15" fill="rgb(246,208,8)"/><text x="75.2454%" y="271.50"></text></g><g><title>__perf_event_task_sched_in (769 samples, 0.71%)</title><rect x="74.9257%" y="325" width="0.7055%" height="15" fill="rgb(244,133,10)"/><text x="75.1757%" y="335.50"></text></g><g><title>perf_pmu_enable.part.0 (730 samples, 0.67%)</title><rect x="74.9615%" y="309" width="0.6697%" height="15" fill="rgb(209,219,41)"/><text x="75.2115%" y="319.50"></text></g><g><title>x86_pmu_enable (719 samples, 0.66%)</title><rect x="74.9716%" y="293" width="0.6596%" height="15" fill="rgb(253,175,45)"/><text x="75.2216%" y="303.50"></text></g><g><title>intel_pmu_enable_all (699 samples, 0.64%)</title><rect x="74.9899%" y="277" width="0.6413%" height="15" fill="rgb(235,100,37)"/><text x="75.2399%" y="287.50"></text></g><g><title>native_write_msr (646 samples, 0.59%)</title><rect x="75.0385%" y="261" width="0.5926%" height="15" fill="rgb(225,87,19)"/><text x="75.2885%" y="271.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (12 samples, 0.01%)</title><rect x="75.6321%" y="325" width="0.0110%" height="15" fill="rgb(217,152,17)"/><text x="75.8821%" y="335.50"></text></g><g><title>sysvec_apic_timer_interrupt (12 samples, 0.01%)</title><rect x="75.6321%" y="309" width="0.0110%" height="15" fill="rgb(235,72,13)"/><text x="75.8821%" y="319.50"></text></g><g><title>finish_task_switch (1,437 samples, 1.32%)</title><rect x="74.3275%" y="341" width="1.3183%" height="15" fill="rgb(233,140,18)"/><text x="74.5775%" y="351.50"></text></g><g><title>newidle_balance (259 samples, 0.24%)</title><rect x="75.7192%" y="325" width="0.2376%" height="15" fill="rgb(207,212,28)"/><text x="75.9692%" y="335.50"></text></g><g><title>pick_next_task_fair (328 samples, 0.30%)</title><rect x="75.6578%" y="341" width="0.3009%" height="15" fill="rgb(220,130,25)"/><text x="75.9078%" y="351.50"></text></g><g><title>pick_next_task_idle (135 samples, 0.12%)</title><rect x="75.9587%" y="341" width="0.1238%" height="15" fill="rgb(205,55,34)"/><text x="76.2087%" y="351.50"></text></g><g><title>set_next_task_idle (118 samples, 0.11%)</title><rect x="75.9743%" y="325" width="0.1083%" height="15" fill="rgb(237,54,35)"/><text x="76.2243%" y="335.50"></text></g><g><title>__update_idle_core (89 samples, 0.08%)</title><rect x="76.0009%" y="309" width="0.0816%" height="15" fill="rgb(208,67,23)"/><text x="76.2509%" y="319.50"></text></g><g><title>psi_group_change (23 samples, 0.02%)</title><rect x="76.0899%" y="341" width="0.0211%" height="15" fill="rgb(206,207,50)"/><text x="76.3399%" y="351.50"></text></g><g><title>psi_flags_change (15 samples, 0.01%)</title><rect x="76.4504%" y="325" width="0.0138%" height="15" fill="rgb(213,211,42)"/><text x="76.7004%" y="335.50"></text></g><g><title>sched_clock (19 samples, 0.02%)</title><rect x="77.3981%" y="293" width="0.0174%" height="15" fill="rgb(252,197,50)"/><text x="77.6481%" y="303.50"></text></g><g><title>native_sched_clock (298 samples, 0.27%)</title><rect x="77.4586%" y="277" width="0.2734%" height="15" fill="rgb(251,211,41)"/><text x="77.7086%" y="287.50"></text></g><g><title>record_times (497 samples, 0.46%)</title><rect x="77.2862%" y="309" width="0.4559%" height="15" fill="rgb(229,211,5)"/><text x="77.5362%" y="319.50"></text></g><g><title>sched_clock_cpu (356 samples, 0.33%)</title><rect x="77.4155%" y="293" width="0.3266%" height="15" fill="rgb(239,36,31)"/><text x="77.6655%" y="303.50"></text></g><g><title>sched_clock (11 samples, 0.01%)</title><rect x="77.7320%" y="277" width="0.0101%" height="15" fill="rgb(248,67,31)"/><text x="77.9820%" y="287.50"></text></g><g><title>psi_group_change (1,402 samples, 1.29%)</title><rect x="76.4642%" y="325" width="1.2862%" height="15" fill="rgb(249,55,44)"/><text x="76.7142%" y="335.50"></text></g><g><title>psi_task_change (1,803 samples, 1.65%)</title><rect x="76.1110%" y="341" width="1.6541%" height="15" fill="rgb(216,82,12)"/><text x="76.3610%" y="351.50"></text></g><g><title>record_times (16 samples, 0.01%)</title><rect x="77.7504%" y="325" width="0.0147%" height="15" fill="rgb(242,174,1)"/><text x="78.0004%" y="335.50"></text></g><g><title>psi_task_switch (35 samples, 0.03%)</title><rect x="77.7650%" y="341" width="0.0321%" height="15" fill="rgb(208,120,29)"/><text x="78.0150%" y="351.50"></text></g><g><title>put_prev_task_fair (106 samples, 0.10%)</title><rect x="77.8036%" y="341" width="0.0972%" height="15" fill="rgb(221,105,43)"/><text x="78.0536%" y="351.50"></text></g><g><title>put_prev_entity (71 samples, 0.07%)</title><rect x="77.8357%" y="325" width="0.0651%" height="15" fill="rgb(234,124,22)"/><text x="78.0857%" y="335.50"></text></g><g><title>rcu_note_context_switch (19 samples, 0.02%)</title><rect x="77.9008%" y="341" width="0.0174%" height="15" fill="rgb(212,23,30)"/><text x="78.1508%" y="351.50"></text></g><g><title>native_sched_clock (120 samples, 0.11%)</title><rect x="78.0036%" y="309" width="0.1101%" height="15" fill="rgb(219,122,53)"/><text x="78.2536%" y="319.50"></text></g><g><title>__sched_text_start (7,112 samples, 6.52%)</title><rect x="71.5919%" y="357" width="6.5245%" height="15" fill="rgb(248,84,24)"/><text x="71.8419%" y="367.50">__sched_t..</text></g><g><title>update_rq_clock (189 samples, 0.17%)</title><rect x="77.9430%" y="341" width="0.1734%" height="15" fill="rgb(245,115,18)"/><text x="78.1930%" y="351.50"></text></g><g><title>sched_clock_cpu (135 samples, 0.12%)</title><rect x="77.9926%" y="325" width="0.1238%" height="15" fill="rgb(227,176,51)"/><text x="78.2426%" y="335.50"></text></g><g><title>__x86_indirect_thunk_rax (12 samples, 0.01%)</title><rect x="78.1164%" y="357" width="0.0110%" height="15" fill="rgb(229,63,42)"/><text x="78.3664%" y="367.50"></text></g><g><title>_raw_spin_lock (104 samples, 0.10%)</title><rect x="78.1274%" y="357" width="0.0954%" height="15" fill="rgb(247,202,24)"/><text x="78.3774%" y="367.50"></text></g><g><title>dequeue_task_fair (16 samples, 0.01%)</title><rect x="78.2228%" y="357" width="0.0147%" height="15" fill="rgb(244,173,20)"/><text x="78.4728%" y="367.50"></text></g><g><title>put_prev_task_fair (13 samples, 0.01%)</title><rect x="78.2558%" y="357" width="0.0119%" height="15" fill="rgb(242,81,47)"/><text x="78.5058%" y="367.50"></text></g><g><title>futex_wait_queue_me (7,971 samples, 7.31%)</title><rect x="70.9662%" y="389" width="7.3126%" height="15" fill="rgb(231,185,54)"/><text x="71.2162%" y="399.50">futex_wait..</text></g><g><title>schedule (7,686 samples, 7.05%)</title><rect x="71.2277%" y="373" width="7.0511%" height="15" fill="rgb(243,55,32)"/><text x="71.4777%" y="383.50">schedule</text></g><g><title>get_futex_key (75 samples, 0.07%)</title><rect x="78.8063%" y="373" width="0.0688%" height="15" fill="rgb(208,167,19)"/><text x="79.0563%" y="383.50"></text></g><g><title>get_futex_value_locked (232 samples, 0.21%)</title><rect x="78.8751%" y="373" width="0.2128%" height="15" fill="rgb(231,72,35)"/><text x="79.1251%" y="383.50"></text></g><g><title>futex_wait_setup (883 samples, 0.81%)</title><rect x="78.2788%" y="389" width="0.8101%" height="15" fill="rgb(250,173,51)"/><text x="78.5288%" y="399.50"></text></g><g><title>get_futex_value_locked (15 samples, 0.01%)</title><rect x="79.0934%" y="389" width="0.0138%" height="15" fill="rgb(209,5,22)"/><text x="79.3434%" y="399.50"></text></g><g><title>hash_futex (165 samples, 0.15%)</title><rect x="79.1072%" y="389" width="0.1514%" height="15" fill="rgb(250,174,19)"/><text x="79.3572%" y="399.50"></text></g><g><title>plist_add (63 samples, 0.06%)</title><rect x="79.2586%" y="389" width="0.0578%" height="15" fill="rgb(217,3,49)"/><text x="79.5086%" y="399.50"></text></g><g><title>futex_wait (9,592 samples, 8.80%)</title><rect x="70.5277%" y="405" width="8.7997%" height="15" fill="rgb(218,225,5)"/><text x="70.7777%" y="415.50">futex_wait</text></g><g><title>schedule (12 samples, 0.01%)</title><rect x="79.3164%" y="389" width="0.0110%" height="15" fill="rgb(236,89,11)"/><text x="79.5664%" y="399.50"></text></g><g><title>do_futex (9,755 samples, 8.95%)</title><rect x="70.3956%" y="421" width="8.9492%" height="15" fill="rgb(206,33,28)"/><text x="70.6456%" y="431.50">do_futex</text></g><g><title>__x64_sys_futex (10,023 samples, 9.20%)</title><rect x="70.1827%" y="437" width="9.1951%" height="15" fill="rgb(241,56,42)"/><text x="70.4327%" y="447.50">__x64_sys_fut..</text></g><g><title>futex_wait (36 samples, 0.03%)</title><rect x="79.3448%" y="421" width="0.0330%" height="15" fill="rgb(222,44,11)"/><text x="79.5948%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (11,016 samples, 10.11%)</title><rect x="69.2764%" y="469" width="10.1061%" height="15" fill="rgb(234,111,20)"/><text x="69.5264%" y="479.50">entry_SYSCALL_6..</text></g><g><title>do_syscall_64 (10,696 samples, 9.81%)</title><rect x="69.5699%" y="453" width="9.8125%" height="15" fill="rgb(237,77,6)"/><text x="69.8199%" y="463.50">do_syscall_64</text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (12,176 samples, 11.17%)</title><rect x="68.2865%" y="517" width="11.1702%" height="15" fill="rgb(235,111,23)"/><text x="68.5365%" y="527.50">&lt;parking_lot_cor..</text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (11,508 samples, 10.56%)</title><rect x="68.8993%" y="501" width="10.5574%" height="15" fill="rgb(251,135,29)"/><text x="69.1493%" y="511.50">parking_lot_cor..</text></g><g><title>syscall (11,502 samples, 10.55%)</title><rect x="68.9048%" y="485" width="10.5519%" height="15" fill="rgb(217,57,1)"/><text x="69.1548%" y="495.50">syscall</text></g><g><title>syscall_return_via_sysret (81 samples, 0.07%)</title><rect x="79.3824%" y="469" width="0.0743%" height="15" fill="rgb(249,119,31)"/><text x="79.6324%" y="479.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (80 samples, 0.07%)</title><rect x="79.4650%" y="485" width="0.0734%" height="15" fill="rgb(233,164,33)"/><text x="79.7150%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (73 samples, 0.07%)</title><rect x="79.4714%" y="469" width="0.0670%" height="15" fill="rgb(250,217,43)"/><text x="79.7214%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (73 samples, 0.07%)</title><rect x="79.4714%" y="453" width="0.0670%" height="15" fill="rgb(232,154,50)"/><text x="79.7214%" y="463.50"></text></g><g><title>core::ops::function::FnOnce::call_once (94 samples, 0.09%)</title><rect x="79.4613%" y="517" width="0.0862%" height="15" fill="rgb(227,190,8)"/><text x="79.7113%" y="527.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal::{{closure}} (94 samples, 0.09%)</title><rect x="79.4613%" y="501" width="0.0862%" height="15" fill="rgb(209,217,32)"/><text x="79.7113%" y="511.50"></text></g><g><title>parking_lot_core::parking_lot::hash (18 samples, 0.02%)</title><rect x="79.5815%" y="501" width="0.0165%" height="15" fill="rgb(243,203,50)"/><text x="79.8315%" y="511.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket (266 samples, 0.24%)</title><rect x="79.5540%" y="517" width="0.2440%" height="15" fill="rgb(232,152,27)"/><text x="79.8040%" y="527.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (218 samples, 0.20%)</title><rect x="79.5980%" y="501" width="0.2000%" height="15" fill="rgb(240,34,29)"/><text x="79.8480%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (213 samples, 0.20%)</title><rect x="79.6026%" y="485" width="0.1954%" height="15" fill="rgb(215,185,52)"/><text x="79.8526%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (213 samples, 0.20%)</title><rect x="79.6026%" y="469" width="0.1954%" height="15" fill="rgb(240,89,49)"/><text x="79.8526%" y="479.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (12,902 samples, 11.84%)</title><rect x="68.2681%" y="533" width="11.8363%" height="15" fill="rgb(225,12,52)"/><text x="68.5181%" y="543.50">parking_lot_core::..</text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (334 samples, 0.31%)</title><rect x="79.7980%" y="517" width="0.3064%" height="15" fill="rgb(239,128,45)"/><text x="80.0480%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (331 samples, 0.30%)</title><rect x="79.8007%" y="501" width="0.3037%" height="15" fill="rgb(211,78,47)"/><text x="80.0507%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_sub (331 samples, 0.30%)</title><rect x="79.8007%" y="485" width="0.3037%" height="15" fill="rgb(232,31,21)"/><text x="80.0507%" y="495.50"></text></g><g><title>tokio::loom::std::parking_lot::Condvar::wait (13,123 samples, 12.04%)</title><rect x="68.0801%" y="613" width="12.0390%" height="15" fill="rgb(222,168,14)"/><text x="68.3301%" y="623.50">tokio::loom::std::..</text></g><g><title>parking_lot::condvar::Condvar::wait (13,123 samples, 12.04%)</title><rect x="68.0801%" y="597" width="12.0390%" height="15" fill="rgb(209,128,24)"/><text x="68.3301%" y="607.50">parking_lot::condv..</text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (13,070 samples, 11.99%)</title><rect x="68.1287%" y="581" width="11.9904%" height="15" fill="rgb(249,35,13)"/><text x="68.3787%" y="591.50">parking_lot::condv..</text></g><g><title>parking_lot_core::parking_lot::park (12,929 samples, 11.86%)</title><rect x="68.2580%" y="565" width="11.8610%" height="15" fill="rgb(218,7,2)"/><text x="68.5080%" y="575.50">parking_lot_core::..</text></g><g><title>parking_lot_core::parking_lot::with_thread_data (12,929 samples, 11.86%)</title><rect x="68.2580%" y="549" width="11.8610%" height="15" fill="rgb(238,107,27)"/><text x="68.5080%" y="559.50">parking_lot_core::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (16 samples, 0.01%)</title><rect x="80.1044%" y="533" width="0.0147%" height="15" fill="rgb(217,88,38)"/><text x="80.3544%" y="543.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data::THREAD_DATA::__getit (12 samples, 0.01%)</title><rect x="80.1081%" y="517" width="0.0110%" height="15" fill="rgb(230,207,0)"/><text x="80.3581%" y="527.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (12 samples, 0.01%)</title><rect x="80.1081%" y="501" width="0.0110%" height="15" fill="rgb(249,64,54)"/><text x="80.3581%" y="511.50"></text></g><g><title>tokio::runtime::park::Inner::park_condvar (13,613 samples, 12.49%)</title><rect x="67.7195%" y="629" width="12.4885%" height="15" fill="rgb(231,7,11)"/><text x="67.9695%" y="639.50">tokio::runtime::par..</text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (97 samples, 0.09%)</title><rect x="80.1191%" y="613" width="0.0890%" height="15" fill="rgb(205,149,21)"/><text x="80.3691%" y="623.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (97 samples, 0.09%)</title><rect x="80.1191%" y="597" width="0.0890%" height="15" fill="rgb(215,126,34)"/><text x="80.3691%" y="607.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (97 samples, 0.09%)</title><rect x="80.1191%" y="581" width="0.0890%" height="15" fill="rgb(241,132,45)"/><text x="80.3691%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (92 samples, 0.08%)</title><rect x="80.1237%" y="565" width="0.0844%" height="15" fill="rgb(252,69,32)"/><text x="80.3737%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (92 samples, 0.08%)</title><rect x="80.1237%" y="549" width="0.0844%" height="15" fill="rgb(232,204,19)"/><text x="80.3737%" y="559.50"></text></g><g><title>&lt;tokio::runtime::park::Parker as tokio::park::Park&gt;::park (21,397 samples, 19.63%)</title><rect x="61.0106%" y="661" width="19.6296%" height="15" fill="rgb(249,15,47)"/><text x="61.2606%" y="671.50">&lt;tokio::runtime::park::Parker a..</text></g><g><title>tokio::runtime::park::Inner::park (21,395 samples, 19.63%)</title><rect x="61.0124%" y="645" width="19.6277%" height="15" fill="rgb(209,227,23)"/><text x="61.2624%" y="655.50">tokio::runtime::park::Inner::pa..</text></g><g><title>tokio::util::try_lock::TryLock&lt;T&gt;::try_lock (466 samples, 0.43%)</title><rect x="80.2127%" y="629" width="0.4275%" height="15" fill="rgb(248,92,24)"/><text x="80.4627%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (466 samples, 0.43%)</title><rect x="80.2127%" y="613" width="0.4275%" height="15" fill="rgb(247,59,2)"/><text x="80.4627%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (466 samples, 0.43%)</title><rect x="80.2127%" y="597" width="0.4275%" height="15" fill="rgb(221,30,5)"/><text x="80.4627%" y="607.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (73 samples, 0.07%)</title><rect x="80.6411%" y="661" width="0.0670%" height="15" fill="rgb(208,108,53)"/><text x="80.8911%" y="671.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (73 samples, 0.07%)</title><rect x="80.6411%" y="645" width="0.0670%" height="15" fill="rgb(211,183,26)"/><text x="80.8911%" y="655.50"></text></g><g><title>core::cell::BorrowRefMut::new (73 samples, 0.07%)</title><rect x="80.6411%" y="629" width="0.0670%" height="15" fill="rgb(232,132,4)"/><text x="80.8911%" y="639.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (35 samples, 0.03%)</title><rect x="80.6759%" y="613" width="0.0321%" height="15" fill="rgb(253,128,37)"/><text x="80.9259%" y="623.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (35 samples, 0.03%)</title><rect x="80.6759%" y="597" width="0.0321%" height="15" fill="rgb(221,58,24)"/><text x="80.9259%" y="607.50"></text></g><g><title>core::mem::replace (35 samples, 0.03%)</title><rect x="80.6759%" y="581" width="0.0321%" height="15" fill="rgb(230,54,45)"/><text x="80.9259%" y="591.50"></text></g><g><title>core::mem::swap (35 samples, 0.03%)</title><rect x="80.6759%" y="565" width="0.0321%" height="15" fill="rgb(254,21,18)"/><text x="80.9259%" y="575.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (35 samples, 0.03%)</title><rect x="80.6759%" y="549" width="0.0321%" height="15" fill="rgb(221,108,0)"/><text x="80.9259%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (35 samples, 0.03%)</title><rect x="80.6759%" y="533" width="0.0321%" height="15" fill="rgb(206,95,1)"/><text x="80.9259%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::park::Parker&gt;&gt; (36 samples, 0.03%)</title><rect x="80.7172%" y="661" width="0.0330%" height="15" fill="rgb(237,52,5)"/><text x="80.9672%" y="671.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (212 samples, 0.19%)</title><rect x="80.7502%" y="661" width="0.1945%" height="15" fill="rgb(218,150,34)"/><text x="81.0002%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park_timeout (21,792 samples, 19.99%)</title><rect x="60.9840%" y="677" width="19.9919%" height="15" fill="rgb(235,194,28)"/><text x="61.2340%" y="687.50">tokio::runtime::thread_pool::wo..</text></g><g><title>tokio::runtime::queue::Local&lt;T&gt;::is_stealable (34 samples, 0.03%)</title><rect x="80.9447%" y="661" width="0.0312%" height="15" fill="rgb(245,92,18)"/><text x="81.1947%" y="671.50"></text></g><g><title>tokio::runtime::queue::Inner&lt;T&gt;::is_empty (31 samples, 0.03%)</title><rect x="80.9475%" y="645" width="0.0284%" height="15" fill="rgb(253,203,53)"/><text x="81.1975%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (28 samples, 0.03%)</title><rect x="80.9502%" y="629" width="0.0257%" height="15" fill="rgb(249,185,47)"/><text x="81.2002%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_load (28 samples, 0.03%)</title><rect x="80.9502%" y="613" width="0.0257%" height="15" fill="rgb(252,194,52)"/><text x="81.2002%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::queue::Pointers&gt;&gt; (97 samples, 0.09%)</title><rect x="80.9888%" y="645" width="0.0890%" height="15" fill="rgb(210,53,36)"/><text x="81.2388%" y="655.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (97 samples, 0.09%)</title><rect x="80.9888%" y="629" width="0.0890%" height="15" fill="rgb(237,37,25)"/><text x="81.2388%" y="639.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (97 samples, 0.09%)</title><rect x="80.9888%" y="613" width="0.0890%" height="15" fill="rgb(242,116,27)"/><text x="81.2388%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (90 samples, 0.08%)</title><rect x="80.9952%" y="597" width="0.0826%" height="15" fill="rgb(213,185,26)"/><text x="81.2452%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (90 samples, 0.08%)</title><rect x="80.9952%" y="581" width="0.0826%" height="15" fill="rgb(225,204,8)"/><text x="81.2452%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (113 samples, 0.10%)</title><rect x="81.0823%" y="597" width="0.1037%" height="15" fill="rgb(254,111,37)"/><text x="81.3323%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (113 samples, 0.10%)</title><rect x="81.0823%" y="581" width="0.1037%" height="15" fill="rgb(242,35,9)"/><text x="81.3323%" y="591.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::is_closed (242 samples, 0.22%)</title><rect x="80.9814%" y="661" width="0.2220%" height="15" fill="rgb(232,138,49)"/><text x="81.2314%" y="671.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (137 samples, 0.13%)</title><rect x="81.0778%" y="645" width="0.1257%" height="15" fill="rgb(247,56,4)"/><text x="81.3278%" y="655.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (137 samples, 0.13%)</title><rect x="81.0778%" y="629" width="0.1257%" height="15" fill="rgb(226,179,17)"/><text x="81.3278%" y="639.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (137 samples, 0.13%)</title><rect x="81.0778%" y="613" width="0.1257%" height="15" fill="rgb(216,163,45)"/><text x="81.3278%" y="623.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (19 samples, 0.02%)</title><rect x="81.1860%" y="597" width="0.0174%" height="15" fill="rgb(211,157,3)"/><text x="81.4360%" y="607.50"></text></g><g><title>&lt;tokio::runtime::task::stack::TransferStack&lt;T&gt;::drain::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="81.2796%" y="645" width="0.0211%" height="15" fill="rgb(234,44,20)"/><text x="81.5296%" y="655.50"></text></g><g><title>isfree (22 samples, 0.02%)</title><rect x="81.3209%" y="565" width="0.0202%" height="15" fill="rgb(254,138,23)"/><text x="81.5709%" y="575.50"></text></g><g><title>isdalloct (21 samples, 0.02%)</title><rect x="81.3218%" y="549" width="0.0193%" height="15" fill="rgb(206,119,39)"/><text x="81.5718%" y="559.50"></text></g><g><title>arena_sdalloc (21 samples, 0.02%)</title><rect x="81.3218%" y="533" width="0.0193%" height="15" fill="rgb(231,105,52)"/><text x="81.5718%" y="543.50"></text></g><g><title>tcache_dalloc_small (20 samples, 0.02%)</title><rect x="81.3227%" y="517" width="0.0183%" height="15" fill="rgb(250,20,5)"/><text x="81.5727%" y="527.50"></text></g><g><title>_rjem_sdallocx (34 samples, 0.03%)</title><rect x="81.3117%" y="581" width="0.0312%" height="15" fill="rgb(215,198,30)"/><text x="81.5617%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Core&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::produce::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (46 samples, 0.04%)</title><rect x="81.3456%" y="501" width="0.0422%" height="15" fill="rgb(246,142,8)"/><text x="81.5956%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Scheduler&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (45 samples, 0.04%)</title><rect x="81.3466%" y="485" width="0.0413%" height="15" fill="rgb(243,26,38)"/><text x="81.5966%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (45 samples, 0.04%)</title><rect x="81.3466%" y="469" width="0.0413%" height="15" fill="rgb(205,133,28)"/><text x="81.5966%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (45 samples, 0.04%)</title><rect x="81.3466%" y="453" width="0.0413%" height="15" fill="rgb(212,34,0)"/><text x="81.5966%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (45 samples, 0.04%)</title><rect x="81.3466%" y="437" width="0.0413%" height="15" fill="rgb(251,226,22)"/><text x="81.5966%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt; (45 samples, 0.04%)</title><rect x="81.3466%" y="421" width="0.0413%" height="15" fill="rgb(252,119,9)"/><text x="81.5966%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.04%)</title><rect x="81.3466%" y="405" width="0.0413%" height="15" fill="rgb(213,150,50)"/><text x="81.5966%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (44 samples, 0.04%)</title><rect x="81.3475%" y="389" width="0.0404%" height="15" fill="rgb(212,24,39)"/><text x="81.5975%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (44 samples, 0.04%)</title><rect x="81.3475%" y="373" width="0.0404%" height="15" fill="rgb(213,46,39)"/><text x="81.5975%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::produce::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (51 samples, 0.05%)</title><rect x="81.3456%" y="533" width="0.0468%" height="15" fill="rgb(239,106,12)"/><text x="81.5956%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::produce::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (51 samples, 0.05%)</title><rect x="81.3456%" y="517" width="0.0468%" height="15" fill="rgb(249,229,21)"/><text x="81.5956%" y="527.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::dealloc (102 samples, 0.09%)</title><rect x="81.3016%" y="597" width="0.0936%" height="15" fill="rgb(212,158,3)"/><text x="81.5516%" y="607.50"></text></g><g><title>tokio::runtime::task::raw::dealloc (57 samples, 0.05%)</title><rect x="81.3429%" y="581" width="0.0523%" height="15" fill="rgb(253,26,48)"/><text x="81.5929%" y="591.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (54 samples, 0.05%)</title><rect x="81.3456%" y="565" width="0.0495%" height="15" fill="rgb(238,178,20)"/><text x="81.5956%" y="575.50"></text></g><g><title>core::mem::drop (54 samples, 0.05%)</title><rect x="81.3456%" y="549" width="0.0495%" height="15" fill="rgb(208,86,15)"/><text x="81.5956%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (219 samples, 0.20%)</title><rect x="81.3007%" y="645" width="0.2009%" height="15" fill="rgb(239,42,53)"/><text x="81.5507%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::Task&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (219 samples, 0.20%)</title><rect x="81.3007%" y="629" width="0.2009%" height="15" fill="rgb(245,226,8)"/><text x="81.5507%" y="639.50"></text></g><g><title>&lt;tokio::runtime::task::Task&lt;S&gt; as core::ops::drop::Drop&gt;::drop (219 samples, 0.20%)</title><rect x="81.3007%" y="613" width="0.2009%" height="15" fill="rgb(216,176,32)"/><text x="81.5507%" y="623.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (116 samples, 0.11%)</title><rect x="81.3952%" y="597" width="0.1064%" height="15" fill="rgb(231,186,21)"/><text x="81.6452%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (113 samples, 0.10%)</title><rect x="81.3979%" y="581" width="0.1037%" height="15" fill="rgb(205,95,49)"/><text x="81.6479%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_sub (113 samples, 0.10%)</title><rect x="81.3979%" y="565" width="0.1037%" height="15" fill="rgb(217,145,8)"/><text x="81.6479%" y="575.50"></text></g><g><title>tokio::runtime::task::stack::TransferStack&lt;T&gt;::drain (470 samples, 0.43%)</title><rect x="81.5016%" y="645" width="0.4312%" height="15" fill="rgb(239,144,48)"/><text x="81.7516%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::swap (470 samples, 0.43%)</title><rect x="81.5016%" y="629" width="0.4312%" height="15" fill="rgb(214,189,23)"/><text x="81.7516%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_swap (470 samples, 0.43%)</title><rect x="81.5016%" y="613" width="0.4312%" height="15" fill="rgb(229,157,17)"/><text x="81.7516%" y="623.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Worker::remote (510 samples, 0.47%)</title><rect x="81.9328%" y="645" width="0.4679%" height="15" fill="rgb(230,5,48)"/><text x="82.1828%" y="655.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::drain_pending_drop (1,332 samples, 1.22%)</title><rect x="81.2034%" y="661" width="1.2220%" height="15" fill="rgb(224,156,48)"/><text x="81.4534%" y="671.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (27 samples, 0.02%)</title><rect x="82.4006%" y="645" width="0.0248%" height="15" fill="rgb(223,14,29)"/><text x="82.6506%" y="655.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::maintenance (1,586 samples, 1.45%)</title><rect x="80.9759%" y="677" width="1.4550%" height="15" fill="rgb(229,96,36)"/><text x="81.2259%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (15 samples, 0.01%)</title><rect x="82.5447%" y="645" width="0.0138%" height="15" fill="rgb(231,102,53)"/><text x="82.7947%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;usize&gt;&gt;&gt; (78 samples, 0.07%)</title><rect x="82.5584%" y="645" width="0.0716%" height="15" fill="rgb(210,77,38)"/><text x="82.8084%" y="655.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (78 samples, 0.07%)</title><rect x="82.5584%" y="629" width="0.0716%" height="15" fill="rgb(235,131,6)"/><text x="82.8084%" y="639.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (78 samples, 0.07%)</title><rect x="82.5584%" y="613" width="0.0716%" height="15" fill="rgb(252,55,38)"/><text x="82.8084%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (72 samples, 0.07%)</title><rect x="82.5639%" y="597" width="0.0661%" height="15" fill="rgb(246,38,14)"/><text x="82.8139%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (72 samples, 0.07%)</title><rect x="82.5639%" y="581" width="0.0661%" height="15" fill="rgb(242,27,5)"/><text x="82.8139%" y="591.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (38 samples, 0.03%)</title><rect x="82.6529%" y="597" width="0.0349%" height="15" fill="rgb(228,65,35)"/><text x="82.9029%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for usize&gt;::eq (38 samples, 0.03%)</title><rect x="82.6529%" y="581" width="0.0349%" height="15" fill="rgb(245,93,11)"/><text x="82.9029%" y="591.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (65 samples, 0.06%)</title><rect x="82.6300%" y="645" width="0.0596%" height="15" fill="rgb(213,1,31)"/><text x="82.8800%" y="655.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (65 samples, 0.06%)</title><rect x="82.6300%" y="629" width="0.0596%" height="15" fill="rgb(237,205,14)"/><text x="82.8800%" y="639.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (65 samples, 0.06%)</title><rect x="82.6300%" y="613" width="0.0596%" height="15" fill="rgb(232,118,45)"/><text x="82.8800%" y="623.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_from_parked (309 samples, 0.28%)</title><rect x="82.4309%" y="677" width="0.2835%" height="15" fill="rgb(218,5,6)"/><text x="82.6809%" y="687.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::is_parked (185 samples, 0.17%)</title><rect x="82.5447%" y="661" width="0.1697%" height="15" fill="rgb(251,87,51)"/><text x="82.7947%" y="671.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (27 samples, 0.02%)</title><rect x="82.6896%" y="645" width="0.0248%" height="15" fill="rgb(207,225,20)"/><text x="82.9396%" y="655.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (27 samples, 0.02%)</title><rect x="82.6896%" y="629" width="0.0248%" height="15" fill="rgb(222,78,54)"/><text x="82.9396%" y="639.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (27 samples, 0.02%)</title><rect x="82.6896%" y="613" width="0.0248%" height="15" fill="rgb(232,85,16)"/><text x="82.9396%" y="623.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (24 samples, 0.02%)</title><rect x="82.6924%" y="597" width="0.0220%" height="15" fill="rgb(244,25,33)"/><text x="82.9424%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (17 samples, 0.02%)</title><rect x="82.7639%" y="629" width="0.0156%" height="15" fill="rgb(233,24,36)"/><text x="83.0139%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (54 samples, 0.05%)</title><rect x="82.7318%" y="645" width="0.0495%" height="15" fill="rgb(253,49,54)"/><text x="82.9818%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;usize&gt;&gt;&gt; (310 samples, 0.28%)</title><rect x="82.7814%" y="645" width="0.2844%" height="15" fill="rgb(245,12,22)"/><text x="83.0314%" y="655.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (310 samples, 0.28%)</title><rect x="82.7814%" y="629" width="0.2844%" height="15" fill="rgb(253,141,28)"/><text x="83.0314%" y="639.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (310 samples, 0.28%)</title><rect x="82.7814%" y="613" width="0.2844%" height="15" fill="rgb(225,207,27)"/><text x="83.0314%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (302 samples, 0.28%)</title><rect x="82.7887%" y="597" width="0.2771%" height="15" fill="rgb(220,84,2)"/><text x="83.0387%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (302 samples, 0.28%)</title><rect x="82.7887%" y="581" width="0.2771%" height="15" fill="rgb(224,37,37)"/><text x="83.0387%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (104 samples, 0.10%)</title><rect x="83.0768%" y="597" width="0.0954%" height="15" fill="rgb(220,143,18)"/><text x="83.3268%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (104 samples, 0.10%)</title><rect x="83.0768%" y="581" width="0.0954%" height="15" fill="rgb(210,88,33)"/><text x="83.3268%" y="591.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (163 samples, 0.15%)</title><rect x="83.0658%" y="645" width="0.1495%" height="15" fill="rgb(219,87,51)"/><text x="83.3158%" y="655.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (163 samples, 0.15%)</title><rect x="83.0658%" y="629" width="0.1495%" height="15" fill="rgb(211,7,35)"/><text x="83.3158%" y="639.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (163 samples, 0.15%)</title><rect x="83.0658%" y="613" width="0.1495%" height="15" fill="rgb(232,77,2)"/><text x="83.3158%" y="623.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (47 samples, 0.04%)</title><rect x="83.1722%" y="597" width="0.0431%" height="15" fill="rgb(249,94,25)"/><text x="83.4222%" y="607.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (14 samples, 0.01%)</title><rect x="83.2025%" y="581" width="0.0128%" height="15" fill="rgb(215,112,2)"/><text x="83.4525%" y="591.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (14 samples, 0.01%)</title><rect x="83.2025%" y="565" width="0.0128%" height="15" fill="rgb(226,115,48)"/><text x="83.4525%" y="575.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (12 samples, 0.01%)</title><rect x="83.2043%" y="549" width="0.0110%" height="15" fill="rgb(249,196,10)"/><text x="83.4543%" y="559.50"></text></g><g><title>core::hint::spin_loop (12 samples, 0.01%)</title><rect x="83.2043%" y="533" width="0.0110%" height="15" fill="rgb(237,109,14)"/><text x="83.4543%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (12 samples, 0.01%)</title><rect x="83.2043%" y="517" width="0.0110%" height="15" fill="rgb(217,103,53)"/><text x="83.4543%" y="527.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::transition_worker_to_parked (616 samples, 0.57%)</title><rect x="82.7199%" y="661" width="0.5651%" height="15" fill="rgb(244,137,9)"/><text x="82.9699%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::idle::State::dec_num_unparked (76 samples, 0.07%)</title><rect x="83.2153%" y="645" width="0.0697%" height="15" fill="rgb(227,201,3)"/><text x="83.4653%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (73 samples, 0.07%)</title><rect x="83.2180%" y="629" width="0.0670%" height="15" fill="rgb(243,94,6)"/><text x="83.4680%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_sub (73 samples, 0.07%)</title><rect x="83.2180%" y="613" width="0.0670%" height="15" fill="rgb(235,118,5)"/><text x="83.4680%" y="623.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (15 samples, 0.01%)</title><rect x="83.3245%" y="645" width="0.0138%" height="15" fill="rgb(247,10,30)"/><text x="83.5745%" y="655.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::is_empty (12 samples, 0.01%)</title><rect x="83.3382%" y="645" width="0.0110%" height="15" fill="rgb(205,26,28)"/><text x="83.5882%" y="655.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::len (12 samples, 0.01%)</title><rect x="83.3382%" y="629" width="0.0110%" height="15" fill="rgb(206,99,35)"/><text x="83.5882%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (12 samples, 0.01%)</title><rect x="83.3382%" y="613" width="0.0110%" height="15" fill="rgb(238,130,40)"/><text x="83.5882%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_load (12 samples, 0.01%)</title><rect x="83.3382%" y="597" width="0.0110%" height="15" fill="rgb(224,126,31)"/><text x="83.5882%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicU16::load (23 samples, 0.02%)</title><rect x="83.3520%" y="613" width="0.0211%" height="15" fill="rgb(254,105,17)"/><text x="83.6020%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_load (23 samples, 0.02%)</title><rect x="83.3520%" y="597" width="0.0211%" height="15" fill="rgb(216,87,36)"/><text x="83.6020%" y="607.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::is_empty (37 samples, 0.03%)</title><rect x="83.3492%" y="645" width="0.0339%" height="15" fill="rgb(240,21,12)"/><text x="83.5992%" y="655.50"></text></g><g><title>tokio::runtime::queue::Inner&lt;T&gt;::is_empty (34 samples, 0.03%)</title><rect x="83.3520%" y="629" width="0.0312%" height="15" fill="rgb(245,192,34)"/><text x="83.6020%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (11 samples, 0.01%)</title><rect x="83.3731%" y="613" width="0.0101%" height="15" fill="rgb(226,100,49)"/><text x="83.6231%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.01%)</title><rect x="83.3731%" y="597" width="0.0101%" height="15" fill="rgb(245,188,27)"/><text x="83.6231%" y="607.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::park (24,652 samples, 22.62%)</title><rect x="60.7730%" y="693" width="22.6157%" height="15" fill="rgb(212,170,8)"/><text x="61.0230%" y="703.50">tokio::runtime::thread_pool::worker:..</text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_to_parked (735 samples, 0.67%)</title><rect x="82.7144%" y="677" width="0.6743%" height="15" fill="rgb(217,113,29)"/><text x="82.9644%" y="687.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_if_work_pending (113 samples, 0.10%)</title><rect x="83.2850%" y="661" width="0.1037%" height="15" fill="rgb(237,30,3)"/><text x="83.5350%" y="671.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (24 samples, 0.02%)</title><rect x="83.3960%" y="677" width="0.0220%" height="15" fill="rgb(227,19,28)"/><text x="83.6460%" y="687.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (24 samples, 0.02%)</title><rect x="83.3960%" y="661" width="0.0220%" height="15" fill="rgb(239,172,45)"/><text x="83.6460%" y="671.50"></text></g><g><title>core::cell::BorrowRefMut::new (24 samples, 0.02%)</title><rect x="83.3960%" y="645" width="0.0220%" height="15" fill="rgb(254,55,39)"/><text x="83.6460%" y="655.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (11 samples, 0.01%)</title><rect x="83.4079%" y="629" width="0.0101%" height="15" fill="rgb(249,208,12)"/><text x="83.6579%" y="639.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (11 samples, 0.01%)</title><rect x="83.4079%" y="613" width="0.0101%" height="15" fill="rgb(240,52,13)"/><text x="83.6579%" y="623.50"></text></g><g><title>core::mem::replace (11 samples, 0.01%)</title><rect x="83.4079%" y="597" width="0.0101%" height="15" fill="rgb(252,149,13)"/><text x="83.6579%" y="607.50"></text></g><g><title>core::mem::swap (11 samples, 0.01%)</title><rect x="83.4079%" y="581" width="0.0101%" height="15" fill="rgb(232,81,48)"/><text x="83.6579%" y="591.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (11 samples, 0.01%)</title><rect x="83.4079%" y="565" width="0.0101%" height="15" fill="rgb(222,144,2)"/><text x="83.6579%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.01%)</title><rect x="83.4079%" y="549" width="0.0101%" height="15" fill="rgb(216,81,32)"/><text x="83.6579%" y="559.50"></text></g><g><title>tokio::coop::CURRENT::__getit (20 samples, 0.02%)</title><rect x="83.4768%" y="613" width="0.0183%" height="15" fill="rgb(244,78,51)"/><text x="83.7268%" y="623.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (20 samples, 0.02%)</title><rect x="83.4768%" y="597" width="0.0183%" height="15" fill="rgb(217,66,21)"/><text x="83.7268%" y="607.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (18 samples, 0.02%)</title><rect x="83.4786%" y="581" width="0.0165%" height="15" fill="rgb(247,101,42)"/><text x="83.7286%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (18 samples, 0.02%)</title><rect x="83.4786%" y="565" width="0.0165%" height="15" fill="rgb(227,81,39)"/><text x="83.7286%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::coop::with_budget::ResetGuard&gt; (11 samples, 0.01%)</title><rect x="83.5061%" y="597" width="0.0101%" height="15" fill="rgb(220,223,44)"/><text x="83.7561%" y="607.50"></text></g><g><title>&lt;tokio::coop::with_budget::ResetGuard as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="83.5061%" y="581" width="0.0101%" height="15" fill="rgb(205,218,2)"/><text x="83.7561%" y="591.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (11 samples, 0.01%)</title><rect x="83.5061%" y="565" width="0.0101%" height="15" fill="rgb(212,207,28)"/><text x="83.7561%" y="575.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (11 samples, 0.01%)</title><rect x="83.5061%" y="549" width="0.0101%" height="15" fill="rgb(224,12,41)"/><text x="83.7561%" y="559.50"></text></g><g><title>core::mem::replace (11 samples, 0.01%)</title><rect x="83.5061%" y="533" width="0.0101%" height="15" fill="rgb(216,118,12)"/><text x="83.7561%" y="543.50"></text></g><g><title>core::mem::swap (11 samples, 0.01%)</title><rect x="83.5061%" y="517" width="0.0101%" height="15" fill="rgb(252,97,46)"/><text x="83.7561%" y="527.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (11 samples, 0.01%)</title><rect x="83.5061%" y="501" width="0.0101%" height="15" fill="rgb(244,206,19)"/><text x="83.7561%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.01%)</title><rect x="83.5061%" y="485" width="0.0101%" height="15" fill="rgb(231,84,31)"/><text x="83.7561%" y="495.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (32 samples, 0.03%)</title><rect x="83.5318%" y="581" width="0.0294%" height="15" fill="rgb(244,133,0)"/><text x="83.7818%" y="591.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (32 samples, 0.03%)</title><rect x="83.5318%" y="565" width="0.0294%" height="15" fill="rgb(223,15,50)"/><text x="83.7818%" y="575.50"></text></g><g><title>core::cell::BorrowRefMut::new (32 samples, 0.03%)</title><rect x="83.5318%" y="549" width="0.0294%" height="15" fill="rgb(250,118,49)"/><text x="83.7818%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (16 samples, 0.01%)</title><rect x="83.5612%" y="581" width="0.0147%" height="15" fill="rgb(248,25,38)"/><text x="83.8112%" y="591.50"></text></g><g><title>core::mem::take (16 samples, 0.01%)</title><rect x="83.5612%" y="565" width="0.0147%" height="15" fill="rgb(215,70,14)"/><text x="83.8112%" y="575.50"></text></g><g><title>core::mem::replace (16 samples, 0.01%)</title><rect x="83.5612%" y="549" width="0.0147%" height="15" fill="rgb(215,28,15)"/><text x="83.8112%" y="559.50"></text></g><g><title>core::mem::swap (16 samples, 0.01%)</title><rect x="83.5612%" y="533" width="0.0147%" height="15" fill="rgb(243,6,28)"/><text x="83.8112%" y="543.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (16 samples, 0.01%)</title><rect x="83.5612%" y="517" width="0.0147%" height="15" fill="rgb(222,130,1)"/><text x="83.8112%" y="527.50"></text></g><g><title>[libc-2.31.so] (250 samples, 0.23%)</title><rect x="83.9309%" y="533" width="0.2293%" height="15" fill="rgb(236,166,44)"/><text x="84.1809%" y="543.50"></text></g><g><title>__rust_probestack (36 samples, 0.03%)</title><rect x="84.1602%" y="533" width="0.0330%" height="15" fill="rgb(221,108,14)"/><text x="84.4102%" y="543.50"></text></g><g><title>alloc::alloc::box_free (11 samples, 0.01%)</title><rect x="84.1997%" y="469" width="0.0101%" height="15" fill="rgb(252,3,45)"/><text x="84.4497%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="84.1997%" y="453" width="0.0101%" height="15" fill="rgb(237,68,30)"/><text x="84.4497%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="84.1997%" y="437" width="0.0101%" height="15" fill="rgb(211,79,22)"/><text x="84.4497%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::produce::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (29 samples, 0.03%)</title><rect x="84.1997%" y="485" width="0.0266%" height="15" fill="rgb(252,185,21)"/><text x="84.4497%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::produce::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (18 samples, 0.02%)</title><rect x="84.2098%" y="469" width="0.0165%" height="15" fill="rgb(225,189,26)"/><text x="84.4598%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Core&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::produce::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (18 samples, 0.02%)</title><rect x="84.2098%" y="453" width="0.0165%" height="15" fill="rgb(241,30,40)"/><text x="84.4598%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Scheduler&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (18 samples, 0.02%)</title><rect x="84.2098%" y="437" width="0.0165%" height="15" fill="rgb(235,215,44)"/><text x="84.4598%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (18 samples, 0.02%)</title><rect x="84.2098%" y="421" width="0.0165%" height="15" fill="rgb(205,8,29)"/><text x="84.4598%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (18 samples, 0.02%)</title><rect x="84.2098%" y="405" width="0.0165%" height="15" fill="rgb(241,137,42)"/><text x="84.4598%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (18 samples, 0.02%)</title><rect x="84.2098%" y="389" width="0.0165%" height="15" fill="rgb(237,155,2)"/><text x="84.4598%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt; (18 samples, 0.02%)</title><rect x="84.2098%" y="373" width="0.0165%" height="15" fill="rgb(245,29,42)"/><text x="84.4598%" y="383.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="84.2098%" y="357" width="0.0165%" height="15" fill="rgb(234,101,35)"/><text x="84.4598%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (17 samples, 0.02%)</title><rect x="84.2107%" y="341" width="0.0156%" height="15" fill="rgb(228,64,37)"/><text x="84.4607%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_sub (17 samples, 0.02%)</title><rect x="84.2107%" y="325" width="0.0156%" height="15" fill="rgb(217,214,36)"/><text x="84.4607%" y="335.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (14 samples, 0.01%)</title><rect x="84.2630%" y="325" width="0.0128%" height="15" fill="rgb(243,70,3)"/><text x="84.5130%" y="335.50"></text></g><g><title>arena_dalloc_bin_locked_impl (14 samples, 0.01%)</title><rect x="84.2630%" y="309" width="0.0128%" height="15" fill="rgb(253,158,52)"/><text x="84.5130%" y="319.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (20 samples, 0.02%)</title><rect x="84.2620%" y="341" width="0.0183%" height="15" fill="rgb(234,111,54)"/><text x="84.5120%" y="351.50"></text></g><g><title>isfree (42 samples, 0.04%)</title><rect x="84.2437%" y="405" width="0.0385%" height="15" fill="rgb(217,70,32)"/><text x="84.4937%" y="415.50"></text></g><g><title>isdalloct (41 samples, 0.04%)</title><rect x="84.2446%" y="389" width="0.0376%" height="15" fill="rgb(234,18,33)"/><text x="84.4946%" y="399.50"></text></g><g><title>arena_sdalloc (41 samples, 0.04%)</title><rect x="84.2446%" y="373" width="0.0376%" height="15" fill="rgb(234,12,49)"/><text x="84.4946%" y="383.50"></text></g><g><title>tcache_dalloc_small (38 samples, 0.03%)</title><rect x="84.2474%" y="357" width="0.0349%" height="15" fill="rgb(236,10,21)"/><text x="84.4974%" y="367.50"></text></g><g><title>alloc::alloc::box_free (65 samples, 0.06%)</title><rect x="84.2263%" y="469" width="0.0596%" height="15" fill="rgb(248,182,45)"/><text x="84.4763%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (65 samples, 0.06%)</title><rect x="84.2263%" y="453" width="0.0596%" height="15" fill="rgb(217,95,36)"/><text x="84.4763%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (65 samples, 0.06%)</title><rect x="84.2263%" y="437" width="0.0596%" height="15" fill="rgb(212,110,31)"/><text x="84.4763%" y="447.50"></text></g><g><title>_rjem_sdallocx (61 samples, 0.06%)</title><rect x="84.2299%" y="421" width="0.0560%" height="15" fill="rgb(206,32,53)"/><text x="84.4799%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Core&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Send&gt;::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (52 samples, 0.05%)</title><rect x="84.2859%" y="453" width="0.0477%" height="15" fill="rgb(246,141,37)"/><text x="84.5359%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Scheduler&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (49 samples, 0.04%)</title><rect x="84.2886%" y="437" width="0.0450%" height="15" fill="rgb(219,16,7)"/><text x="84.5386%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::loom::std::unsafe_cell::UnsafeCell&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (49 samples, 0.04%)</title><rect x="84.2886%" y="421" width="0.0450%" height="15" fill="rgb(230,205,45)"/><text x="84.5386%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (49 samples, 0.04%)</title><rect x="84.2886%" y="405" width="0.0450%" height="15" fill="rgb(231,43,49)"/><text x="84.5386%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (49 samples, 0.04%)</title><rect x="84.2886%" y="389" width="0.0450%" height="15" fill="rgb(212,106,34)"/><text x="84.5386%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt; (49 samples, 0.04%)</title><rect x="84.2886%" y="373" width="0.0450%" height="15" fill="rgb(206,83,17)"/><text x="84.5386%" y="383.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 0.04%)</title><rect x="84.2886%" y="357" width="0.0450%" height="15" fill="rgb(244,154,49)"/><text x="84.5386%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (49 samples, 0.04%)</title><rect x="84.2886%" y="341" width="0.0450%" height="15" fill="rgb(244,149,49)"/><text x="84.5386%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_sub (49 samples, 0.04%)</title><rect x="84.2886%" y="325" width="0.0450%" height="15" fill="rgb(227,134,18)"/><text x="84.5386%" y="335.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::dealloc (147 samples, 0.13%)</title><rect x="84.1997%" y="517" width="0.1349%" height="15" fill="rgb(237,116,36)"/><text x="84.4497%" y="527.50"></text></g><g><title>core::mem::drop (147 samples, 0.13%)</title><rect x="84.1997%" y="501" width="0.1349%" height="15" fill="rgb(205,129,40)"/><text x="84.4497%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Send&gt;::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt;&gt; (118 samples, 0.11%)</title><rect x="84.2263%" y="485" width="0.1083%" height="15" fill="rgb(236,178,4)"/><text x="84.4763%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::core::Cell&lt;core::future::from_generator::GenFuture&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;::spawn_evaluation&lt;model::rho_types::Send&gt;::{{closure}}&gt;,alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;&gt; (53 samples, 0.05%)</title><rect x="84.2859%" y="469" width="0.0486%" height="15" fill="rgb(251,76,53)"/><text x="84.5359%" y="479.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (14 samples, 0.01%)</title><rect x="84.3547%" y="421" width="0.0128%" height="15" fill="rgb(242,92,40)"/><text x="84.6047%" y="431.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14 samples, 0.01%)</title><rect x="84.3547%" y="405" width="0.0128%" height="15" fill="rgb(209,45,30)"/><text x="84.6047%" y="415.50"></text></g><g><title>tokio::runtime::thread_pool::worker::CURRENT::FOO::__getit (14 samples, 0.01%)</title><rect x="84.3547%" y="389" width="0.0128%" height="15" fill="rgb(218,157,36)"/><text x="84.6047%" y="399.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (14 samples, 0.01%)</title><rect x="84.3547%" y="373" width="0.0128%" height="15" fill="rgb(222,186,16)"/><text x="84.6047%" y="383.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (13 samples, 0.01%)</title><rect x="84.3556%" y="357" width="0.0119%" height="15" fill="rgb(254,72,35)"/><text x="84.6056%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (13 samples, 0.01%)</title><rect x="84.3556%" y="341" width="0.0119%" height="15" fill="rgb(224,25,35)"/><text x="84.6056%" y="351.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Worker::eq (40 samples, 0.04%)</title><rect x="84.3841%" y="405" width="0.0367%" height="15" fill="rgb(206,135,52)"/><text x="84.6341%" y="415.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (99 samples, 0.09%)</title><rect x="84.3501%" y="437" width="0.0908%" height="15" fill="rgb(229,174,47)"/><text x="84.6001%" y="447.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::release::{{closure}} (80 samples, 0.07%)</title><rect x="84.3675%" y="421" width="0.0734%" height="15" fill="rgb(242,184,21)"/><text x="84.6175%" y="431.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::remove (22 samples, 0.02%)</title><rect x="84.4208%" y="405" width="0.0202%" height="15" fill="rgb(213,22,45)"/><text x="84.6708%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,tokio::runtime::queue::Pointers&gt;&gt; (20 samples, 0.02%)</title><rect x="84.4455%" y="421" width="0.0183%" height="15" fill="rgb(237,81,54)"/><text x="84.6955%" y="431.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="84.4455%" y="405" width="0.0183%" height="15" fill="rgb(248,177,18)"/><text x="84.6955%" y="415.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (20 samples, 0.02%)</title><rect x="84.4455%" y="389" width="0.0183%" height="15" fill="rgb(254,31,16)"/><text x="84.6955%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (19 samples, 0.02%)</title><rect x="84.4464%" y="373" width="0.0174%" height="15" fill="rgb(235,20,31)"/><text x="84.6964%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (19 samples, 0.02%)</title><rect x="84.4464%" y="357" width="0.0174%" height="15" fill="rgb(240,56,43)"/><text x="84.6964%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (14 samples, 0.01%)</title><rect x="84.4648%" y="373" width="0.0128%" height="15" fill="rgb(237,197,51)"/><text x="84.7148%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (14 samples, 0.01%)</title><rect x="84.4648%" y="357" width="0.0128%" height="15" fill="rgb(241,162,44)"/><text x="84.7148%" y="367.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::is_closed (42 samples, 0.04%)</title><rect x="84.4409%" y="437" width="0.0385%" height="15" fill="rgb(224,23,20)"/><text x="84.6909%" y="447.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (17 samples, 0.02%)</title><rect x="84.4639%" y="421" width="0.0156%" height="15" fill="rgb(250,109,34)"/><text x="84.7139%" y="431.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (17 samples, 0.02%)</title><rect x="84.4639%" y="405" width="0.0156%" height="15" fill="rgb(214,175,50)"/><text x="84.7139%" y="415.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (17 samples, 0.02%)</title><rect x="84.4639%" y="389" width="0.0156%" height="15" fill="rgb(213,182,5)"/><text x="84.7139%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::compare_exchange (76 samples, 0.07%)</title><rect x="84.4822%" y="421" width="0.0697%" height="15" fill="rgb(209,199,19)"/><text x="84.7322%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (76 samples, 0.07%)</title><rect x="84.4822%" y="405" width="0.0697%" height="15" fill="rgb(236,224,42)"/><text x="84.7322%" y="415.50"></text></g><g><title>tokio::runtime::task::stack::TransferStack&lt;T&gt;::push (96 samples, 0.09%)</title><rect x="84.4795%" y="437" width="0.0881%" height="15" fill="rgb(246,226,29)"/><text x="84.7295%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (17 samples, 0.02%)</title><rect x="84.5519%" y="421" width="0.0156%" height="15" fill="rgb(227,223,11)"/><text x="84.8019%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_load (17 samples, 0.02%)</title><rect x="84.5519%" y="405" width="0.0156%" height="15" fill="rgb(219,7,51)"/><text x="84.8019%" y="415.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::release (254 samples, 0.23%)</title><rect x="84.3409%" y="501" width="0.2330%" height="15" fill="rgb(245,167,10)"/><text x="84.5909%" y="511.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (254 samples, 0.23%)</title><rect x="84.3409%" y="485" width="0.2330%" height="15" fill="rgb(237,224,16)"/><text x="84.5909%" y="495.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::release::{{closure}} (254 samples, 0.23%)</title><rect x="84.3409%" y="469" width="0.2330%" height="15" fill="rgb(226,132,13)"/><text x="84.5909%" y="479.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::release (253 samples, 0.23%)</title><rect x="84.3419%" y="453" width="0.2321%" height="15" fill="rgb(214,140,3)"/><text x="84.5919%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (69 samples, 0.06%)</title><rect x="84.5886%" y="469" width="0.0633%" height="15" fill="rgb(221,177,4)"/><text x="84.8386%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (69 samples, 0.06%)</title><rect x="84.5886%" y="453" width="0.0633%" height="15" fill="rgb(238,139,3)"/><text x="84.8386%" y="463.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (505 samples, 0.46%)</title><rect x="84.1951%" y="533" width="0.4633%" height="15" fill="rgb(216,17,39)"/><text x="84.4451%" y="543.50"></text></g><g><title>tokio::runtime::task::harness::SchedulerView&lt;S&gt;::transition_to_terminal (353 samples, 0.32%)</title><rect x="84.3345%" y="517" width="0.3238%" height="15" fill="rgb(238,120,9)"/><text x="84.5845%" y="527.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_terminal (85 samples, 0.08%)</title><rect x="84.5804%" y="501" width="0.0780%" height="15" fill="rgb(244,92,53)"/><text x="84.8304%" y="511.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update (85 samples, 0.08%)</title><rect x="84.5804%" y="485" width="0.0780%" height="15" fill="rgb(224,148,33)"/><text x="84.8304%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (175 samples, 0.16%)</title><rect x="84.7042%" y="453" width="0.1605%" height="15" fill="rgb(243,6,36)"/><text x="84.9542%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (164 samples, 0.15%)</title><rect x="84.7143%" y="437" width="0.1505%" height="15" fill="rgb(230,102,11)"/><text x="84.9643%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_add (164 samples, 0.15%)</title><rect x="84.7143%" y="421" width="0.1505%" height="15" fill="rgb(234,148,36)"/><text x="84.9643%" y="431.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (12 samples, 0.01%)</title><rect x="84.8648%" y="453" width="0.0110%" height="15" fill="rgb(251,153,25)"/><text x="85.1148%" y="463.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (12 samples, 0.01%)</title><rect x="84.8648%" y="437" width="0.0110%" height="15" fill="rgb(215,129,8)"/><text x="85.1148%" y="447.50"></text></g><g><title>core::cell::BorrowRefMut::new (12 samples, 0.01%)</title><rect x="84.8648%" y="421" width="0.0110%" height="15" fill="rgb(224,128,35)"/><text x="85.1148%" y="431.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (13 samples, 0.01%)</title><rect x="84.8914%" y="437" width="0.0119%" height="15" fill="rgb(237,56,52)"/><text x="85.1414%" y="447.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (254 samples, 0.23%)</title><rect x="84.6877%" y="485" width="0.2330%" height="15" fill="rgb(234,213,19)"/><text x="84.9377%" y="495.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::bind::{{closure}} (237 samples, 0.22%)</title><rect x="84.7033%" y="469" width="0.2174%" height="15" fill="rgb(252,82,23)"/><text x="84.9533%" y="479.50"></text></g><g><title>tokio::util::linked_list::LinkedList&lt;L,&lt;L as tokio::util::linked_list::Link&gt;::Target&gt;::push_front (43 samples, 0.04%)</title><rect x="84.8813%" y="453" width="0.0394%" height="15" fill="rgb(254,201,21)"/><text x="85.1313%" y="463.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::bind_scheduler (269 samples, 0.25%)</title><rect x="84.6850%" y="501" width="0.2468%" height="15" fill="rgb(250,186,11)"/><text x="84.9350%" y="511.50"></text></g><g><title>tokio::runtime::thread_pool::worker::&lt;impl tokio::runtime::task::Schedule for alloc::sync::Arc&lt;tokio::runtime::thread_pool::worker::Worker&gt;&gt;::bind (12 samples, 0.01%)</title><rect x="84.9207%" y="485" width="0.0110%" height="15" fill="rgb(211,174,5)"/><text x="85.1707%" y="495.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::is_bound (21 samples, 0.02%)</title><rect x="84.9317%" y="501" width="0.0193%" height="15" fill="rgb(214,121,10)"/><text x="85.1817%" y="511.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (21 samples, 0.02%)</title><rect x="84.9317%" y="485" width="0.0193%" height="15" fill="rgb(241,66,2)"/><text x="85.1817%" y="495.50"></text></g><g><title>tokio::runtime::task::core::Scheduler&lt;S&gt;::is_bound::{{closure}} (21 samples, 0.02%)</title><rect x="84.9317%" y="469" width="0.0193%" height="15" fill="rgb(220,167,19)"/><text x="85.1817%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (21 samples, 0.02%)</title><rect x="84.9317%" y="453" width="0.0193%" height="15" fill="rgb(231,54,50)"/><text x="85.1817%" y="463.50"></text></g><g><title>tokio::runtime::task::harness::SchedulerView&lt;S&gt;::to_task (15 samples, 0.01%)</title><rect x="84.9510%" y="501" width="0.0138%" height="15" fill="rgb(239,217,53)"/><text x="85.2010%" y="511.50"></text></g><g><title>tokio::runtime::task::Task&lt;S&gt;::from_raw (15 samples, 0.01%)</title><rect x="84.9510%" y="485" width="0.0138%" height="15" fill="rgb(248,8,0)"/><text x="85.2010%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (152 samples, 0.14%)</title><rect x="84.9785%" y="469" width="0.1394%" height="15" fill="rgb(229,118,37)"/><text x="85.2285%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (152 samples, 0.14%)</title><rect x="84.9785%" y="453" width="0.1394%" height="15" fill="rgb(253,223,43)"/><text x="85.2285%" y="463.50"></text></g><g><title>tokio::runtime::task::harness::SchedulerView&lt;S&gt;::transition_to_running (486 samples, 0.45%)</title><rect x="84.6822%" y="517" width="0.4459%" height="15" fill="rgb(211,77,36)"/><text x="84.9322%" y="527.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_running (178 samples, 0.16%)</title><rect x="84.9648%" y="501" width="0.1633%" height="15" fill="rgb(219,3,53)"/><text x="85.2148%" y="511.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update (178 samples, 0.16%)</title><rect x="84.9648%" y="485" width="0.1633%" height="15" fill="rgb(244,45,42)"/><text x="85.2148%" y="495.50"></text></g><g><title>[libc-2.31.so] (12 samples, 0.01%)</title><rect x="85.2363%" y="357" width="0.0110%" height="15" fill="rgb(225,95,27)"/><text x="85.4863%" y="367.50"></text></g><g><title>[libc-2.31.so] (44 samples, 0.04%)</title><rect x="85.2602%" y="341" width="0.0404%" height="15" fill="rgb(207,74,8)"/><text x="85.5102%" y="351.50"></text></g><g><title>imalloc_no_sample (15 samples, 0.01%)</title><rect x="85.3125%" y="229" width="0.0138%" height="15" fill="rgb(243,63,36)"/><text x="85.5625%" y="239.50"></text></g><g><title>iallocztm (14 samples, 0.01%)</title><rect x="85.3134%" y="213" width="0.0128%" height="15" fill="rgb(211,180,12)"/><text x="85.5634%" y="223.50"></text></g><g><title>arena_malloc (14 samples, 0.01%)</title><rect x="85.3134%" y="197" width="0.0128%" height="15" fill="rgb(254,166,49)"/><text x="85.5634%" y="207.50"></text></g><g><title>tcache_alloc_small (13 samples, 0.01%)</title><rect x="85.3143%" y="181" width="0.0119%" height="15" fill="rgb(205,19,0)"/><text x="85.5643%" y="191.50"></text></g><g><title>imalloc_body (21 samples, 0.02%)</title><rect x="85.3125%" y="245" width="0.0193%" height="15" fill="rgb(224,172,32)"/><text x="85.5625%" y="255.50"></text></g><g><title>&lt;rho_runtime::storage::coordinator::AsyncStore as rho_runtime::storage::Storage&gt;::produce (111 samples, 0.10%)</title><rect x="85.2345%" y="373" width="0.1018%" height="15" fill="rgb(254,136,30)"/><text x="85.4845%" y="383.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::pin (97 samples, 0.09%)</title><rect x="85.2473%" y="357" width="0.0890%" height="15" fill="rgb(246,19,35)"/><text x="85.4973%" y="367.50"></text></g><g><title>alloc::alloc::exchange_malloc (39 samples, 0.04%)</title><rect x="85.3005%" y="341" width="0.0358%" height="15" fill="rgb(219,24,36)"/><text x="85.5505%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (39 samples, 0.04%)</title><rect x="85.3005%" y="325" width="0.0358%" height="15" fill="rgb(251,55,1)"/><text x="85.5505%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (39 samples, 0.04%)</title><rect x="85.3005%" y="309" width="0.0358%" height="15" fill="rgb(218,117,39)"/><text x="85.5505%" y="319.50"></text></g><g><title>alloc::alloc::alloc (39 samples, 0.04%)</title><rect x="85.3005%" y="293" width="0.0358%" height="15" fill="rgb(248,169,11)"/><text x="85.5505%" y="303.50"></text></g><g><title>_rjem_mallocx (34 samples, 0.03%)</title><rect x="85.3051%" y="277" width="0.0312%" height="15" fill="rgb(244,40,44)"/><text x="85.5551%" y="287.50"></text></g><g><title>imalloc (26 samples, 0.02%)</title><rect x="85.3125%" y="261" width="0.0239%" height="15" fill="rgb(234,62,37)"/><text x="85.5625%" y="271.50"></text></g><g><title>[libc-2.31.so] (123 samples, 0.11%)</title><rect x="85.3363%" y="373" width="0.1128%" height="15" fill="rgb(207,117,42)"/><text x="85.5863%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;&gt;&gt; (32 samples, 0.03%)</title><rect x="85.4492%" y="373" width="0.0294%" height="15" fill="rgb(213,43,2)"/><text x="85.6992%" y="383.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.03%)</title><rect x="85.4492%" y="357" width="0.0294%" height="15" fill="rgb(244,202,51)"/><text x="85.6992%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (27 samples, 0.02%)</title><rect x="85.4537%" y="341" width="0.0248%" height="15" fill="rgb(253,174,46)"/><text x="85.7037%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_sub (27 samples, 0.02%)</title><rect x="85.4537%" y="325" width="0.0248%" height="15" fill="rgb(251,23,1)"/><text x="85.7037%" y="335.50"></text></g><g><title>isfree (20 samples, 0.02%)</title><rect x="85.4941%" y="277" width="0.0183%" height="15" fill="rgb(253,26,1)"/><text x="85.7441%" y="287.50"></text></g><g><title>isdalloct (19 samples, 0.02%)</title><rect x="85.4950%" y="261" width="0.0174%" height="15" fill="rgb(216,89,31)"/><text x="85.7450%" y="271.50"></text></g><g><title>arena_sdalloc (19 samples, 0.02%)</title><rect x="85.4950%" y="245" width="0.0174%" height="15" fill="rgb(209,109,5)"/><text x="85.7450%" y="255.50"></text></g><g><title>tcache_dalloc_small (17 samples, 0.02%)</title><rect x="85.4969%" y="229" width="0.0156%" height="15" fill="rgb(229,63,13)"/><text x="85.7469%" y="239.50"></text></g><g><title>alloc::alloc::box_free (35 samples, 0.03%)</title><rect x="85.4813%" y="341" width="0.0321%" height="15" fill="rgb(238,137,54)"/><text x="85.7313%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (33 samples, 0.03%)</title><rect x="85.4831%" y="325" width="0.0303%" height="15" fill="rgb(228,1,9)"/><text x="85.7331%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (33 samples, 0.03%)</title><rect x="85.4831%" y="309" width="0.0303%" height="15" fill="rgb(249,120,48)"/><text x="85.7331%" y="319.50"></text></g><g><title>_rjem_sdallocx (31 samples, 0.03%)</title><rect x="85.4849%" y="293" width="0.0284%" height="15" fill="rgb(209,72,36)"/><text x="85.7349%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::pin::Pin&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;+core::marker::Send&gt;&gt;&gt; (40 samples, 0.04%)</title><rect x="85.4785%" y="373" width="0.0367%" height="15" fill="rgb(247,98,49)"/><text x="85.7285%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::future::future::Future+Output = core::option::Option&lt;smallvec::SmallVec&lt;[(rho_runtime::storage::TaggedContinuation,smallvec::SmallVec&lt;[model::rho_types::ListParWithRandom: 3]&gt;): 3]&gt;&gt;+core::marker::Send&gt;&gt; (40 samples, 0.04%)</title><rect x="85.4785%" y="357" width="0.0367%" height="15" fill="rgb(233,75,36)"/><text x="85.7285%" y="367.50"></text></g><g><title>rho_runtime::interpreter::AsynWaitGroup::release (82 samples, 0.08%)</title><rect x="85.5152%" y="373" width="0.0752%" height="15" fill="rgb(225,14,24)"/><text x="85.7652%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicI32::fetch_sub (81 samples, 0.07%)</title><rect x="85.5161%" y="357" width="0.0743%" height="15" fill="rgb(237,193,20)"/><text x="85.7661%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_sub (81 samples, 0.07%)</title><rect x="85.5161%" y="341" width="0.0743%" height="15" fill="rgb(239,122,19)"/><text x="85.7661%" y="351.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::produce::{{closure}} (461 samples, 0.42%)</title><rect x="85.1684%" y="389" width="0.4229%" height="15" fill="rgb(231,220,10)"/><text x="85.4184%" y="399.50"></text></g><g><title>[libc-2.31.so] (30 samples, 0.03%)</title><rect x="85.6262%" y="373" width="0.0275%" height="15" fill="rgb(220,66,15)"/><text x="85.8762%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;rho_runtime::interpreter::InterpreterContext&lt;rho_runtime::storage::coordinator::AsyncStore&gt;&gt;&gt; (24 samples, 0.02%)</title><rect x="85.6537%" y="373" width="0.0220%" height="15" fill="rgb(215,171,52)"/><text x="85.9037%" y="383.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="85.6537%" y="357" width="0.0220%" height="15" fill="rgb(241,169,50)"/><text x="85.9037%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (22 samples, 0.02%)</title><rect x="85.6556%" y="341" width="0.0202%" height="15" fill="rgb(236,189,0)"/><text x="85.9056%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_sub (22 samples, 0.02%)</title><rect x="85.6556%" y="325" width="0.0202%" height="15" fill="rgb(217,147,20)"/><text x="85.9056%" y="335.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (16 samples, 0.01%)</title><rect x="85.7069%" y="197" width="0.0147%" height="15" fill="rgb(206,188,39)"/><text x="85.9569%" y="207.50"></text></g><g><title>isfree (33 samples, 0.03%)</title><rect x="85.6932%" y="261" width="0.0303%" height="15" fill="rgb(227,118,25)"/><text x="85.9432%" y="271.50"></text></g><g><title>isdalloct (33 samples, 0.03%)</title><rect x="85.6932%" y="245" width="0.0303%" height="15" fill="rgb(248,171,40)"/><text x="85.9432%" y="255.50"></text></g><g><title>arena_sdalloc (33 samples, 0.03%)</title><rect x="85.6932%" y="229" width="0.0303%" height="15" fill="rgb(251,90,54)"/><text x="85.9432%" y="239.50"></text></g><g><title>tcache_dalloc_small (30 samples, 0.03%)</title><rect x="85.6959%" y="213" width="0.0275%" height="15" fill="rgb(234,11,46)"/><text x="85.9459%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Par&gt;&gt; (53 samples, 0.05%)</title><rect x="85.6758%" y="357" width="0.0486%" height="15" fill="rgb(229,134,13)"/><text x="85.9258%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Par&gt;&gt; (51 samples, 0.05%)</title><rect x="85.6776%" y="341" width="0.0468%" height="15" fill="rgb(223,129,3)"/><text x="85.9276%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.05%)</title><rect x="85.6776%" y="325" width="0.0468%" height="15" fill="rgb(221,124,13)"/><text x="85.9276%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (51 samples, 0.05%)</title><rect x="85.6776%" y="309" width="0.0468%" height="15" fill="rgb(234,3,18)"/><text x="85.9276%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (49 samples, 0.04%)</title><rect x="85.6794%" y="293" width="0.0450%" height="15" fill="rgb(249,199,20)"/><text x="85.9294%" y="303.50"></text></g><g><title>_rjem_sdallocx (44 samples, 0.04%)</title><rect x="85.6840%" y="277" width="0.0404%" height="15" fill="rgb(224,134,6)"/><text x="85.9340%" y="287.50"></text></g><g><title>isfree (17 samples, 0.02%)</title><rect x="85.7400%" y="213" width="0.0156%" height="15" fill="rgb(254,83,26)"/><text x="85.9900%" y="223.50"></text></g><g><title>isdalloct (17 samples, 0.02%)</title><rect x="85.7400%" y="197" width="0.0156%" height="15" fill="rgb(217,88,9)"/><text x="85.9900%" y="207.50"></text></g><g><title>arena_sdalloc (17 samples, 0.02%)</title><rect x="85.7400%" y="181" width="0.0156%" height="15" fill="rgb(225,73,2)"/><text x="85.9900%" y="191.50"></text></g><g><title>tcache_dalloc_small (14 samples, 0.01%)</title><rect x="85.7427%" y="165" width="0.0128%" height="15" fill="rgb(226,44,39)"/><text x="85.9927%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Send&gt; (89 samples, 0.08%)</title><rect x="85.6758%" y="373" width="0.0816%" height="15" fill="rgb(228,53,17)"/><text x="85.9258%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::bitset::BitSet&gt;&gt; (36 samples, 0.03%)</title><rect x="85.7244%" y="357" width="0.0330%" height="15" fill="rgb(212,27,27)"/><text x="85.9744%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::bitset::BitSet&gt; (36 samples, 0.03%)</title><rect x="85.7244%" y="341" width="0.0330%" height="15" fill="rgb(241,50,6)"/><text x="85.9744%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;bit_vec::BitVec&gt; (36 samples, 0.03%)</title><rect x="85.7244%" y="325" width="0.0330%" height="15" fill="rgb(225,28,51)"/><text x="85.9744%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u32&gt;&gt; (36 samples, 0.03%)</title><rect x="85.7244%" y="309" width="0.0330%" height="15" fill="rgb(215,33,16)"/><text x="85.9744%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u32&gt;&gt; (36 samples, 0.03%)</title><rect x="85.7244%" y="293" width="0.0330%" height="15" fill="rgb(243,40,39)"/><text x="85.9744%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.03%)</title><rect x="85.7244%" y="277" width="0.0330%" height="15" fill="rgb(225,11,42)"/><text x="85.9744%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (35 samples, 0.03%)</title><rect x="85.7253%" y="261" width="0.0321%" height="15" fill="rgb(241,220,38)"/><text x="85.9753%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (35 samples, 0.03%)</title><rect x="85.7253%" y="245" width="0.0321%" height="15" fill="rgb(244,52,35)"/><text x="85.9753%" y="255.50"></text></g><g><title>_rjem_sdallocx (27 samples, 0.02%)</title><rect x="85.7326%" y="229" width="0.0248%" height="15" fill="rgb(246,42,46)"/><text x="85.9826%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (60 samples, 0.06%)</title><rect x="85.7776%" y="277" width="0.0550%" height="15" fill="rgb(205,184,13)"/><text x="86.0276%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Expr]&gt; (60 samples, 0.06%)</title><rect x="85.7776%" y="261" width="0.0550%" height="15" fill="rgb(209,48,36)"/><text x="86.0276%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Expr&gt; (48 samples, 0.04%)</title><rect x="85.7886%" y="245" width="0.0440%" height="15" fill="rgb(244,34,51)"/><text x="86.0386%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;model::rho_types::expr::ExprInstance&gt;&gt; (48 samples, 0.04%)</title><rect x="85.7886%" y="229" width="0.0440%" height="15" fill="rgb(221,107,33)"/><text x="86.0386%" y="239.50"></text></g><g><title>arena_bin_lower_slab (11 samples, 0.01%)</title><rect x="85.9207%" y="85" width="0.0101%" height="15" fill="rgb(224,203,12)"/><text x="86.1707%" y="95.50"></text></g><g><title>_rjem_je_arena_extents_dirty_dalloc (26 samples, 0.02%)</title><rect x="85.9354%" y="53" width="0.0239%" height="15" fill="rgb(230,215,18)"/><text x="86.1854%" y="63.50"></text></g><g><title>extent_record (26 samples, 0.02%)</title><rect x="85.9354%" y="37" width="0.0239%" height="15" fill="rgb(206,185,35)"/><text x="86.1854%" y="47.50"></text></g><g><title>arena_slab_dalloc (32 samples, 0.03%)</title><rect x="85.9345%" y="69" width="0.0294%" height="15" fill="rgb(228,140,34)"/><text x="86.1845%" y="79.50"></text></g><g><title>arena_dalloc_bin_slab (42 samples, 0.04%)</title><rect x="85.9345%" y="85" width="0.0385%" height="15" fill="rgb(208,93,13)"/><text x="86.1845%" y="95.50"></text></g><g><title>bitmap_unset (11 samples, 0.01%)</title><rect x="85.9840%" y="69" width="0.0101%" height="15" fill="rgb(221,193,39)"/><text x="86.2340%" y="79.50"></text></g><g><title>arena_slab_reg_dalloc (19 samples, 0.02%)</title><rect x="85.9776%" y="85" width="0.0174%" height="15" fill="rgb(241,132,34)"/><text x="86.2276%" y="95.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (98 samples, 0.09%)</title><rect x="85.9060%" y="117" width="0.0899%" height="15" fill="rgb(221,141,10)"/><text x="86.1560%" y="127.50"></text></g><g><title>arena_dalloc_bin_locked_impl (92 samples, 0.08%)</title><rect x="85.9115%" y="101" width="0.0844%" height="15" fill="rgb(226,90,31)"/><text x="86.1615%" y="111.50"></text></g><g><title>extent_arena_get (23 samples, 0.02%)</title><rect x="85.9996%" y="117" width="0.0211%" height="15" fill="rgb(243,75,5)"/><text x="86.2496%" y="127.50"></text></g><g><title>atomic_load_p (21 samples, 0.02%)</title><rect x="86.0014%" y="101" width="0.0193%" height="15" fill="rgb(227,156,21)"/><text x="86.2514%" y="111.50"></text></g><g><title>iealloc (15 samples, 0.01%)</title><rect x="86.0207%" y="117" width="0.0138%" height="15" fill="rgb(250,195,8)"/><text x="86.2707%" y="127.50"></text></g><g><title>rtree_extent_read (15 samples, 0.01%)</title><rect x="86.0207%" y="101" width="0.0138%" height="15" fill="rgb(220,134,5)"/><text x="86.2707%" y="111.50"></text></g><g><title>malloc_mutex_trylock_final (44 samples, 0.04%)</title><rect x="86.0345%" y="101" width="0.0404%" height="15" fill="rgb(246,106,34)"/><text x="86.2845%" y="111.50"></text></g><g><title>__GI___pthread_mutex_trylock (42 samples, 0.04%)</title><rect x="86.0363%" y="85" width="0.0385%" height="15" fill="rgb(205,1,4)"/><text x="86.2863%" y="95.50"></text></g><g><title>malloc_mutex_lock (47 samples, 0.04%)</title><rect x="86.0345%" y="117" width="0.0431%" height="15" fill="rgb(224,151,29)"/><text x="86.2845%" y="127.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (242 samples, 0.22%)</title><rect x="85.8712%" y="133" width="0.2220%" height="15" fill="rgb(251,196,0)"/><text x="86.1212%" y="143.50"></text></g><g><title>malloc_mutex_unlock (17 samples, 0.02%)</title><rect x="86.0776%" y="117" width="0.0156%" height="15" fill="rgb(212,127,0)"/><text x="86.3276%" y="127.50"></text></g><g><title>__GI___pthread_mutex_unlock (15 samples, 0.01%)</title><rect x="86.0794%" y="101" width="0.0138%" height="15" fill="rgb(236,71,53)"/><text x="86.3294%" y="111.50"></text></g><g><title>isfree (257 samples, 0.24%)</title><rect x="85.8602%" y="197" width="0.2358%" height="15" fill="rgb(227,99,0)"/><text x="86.1102%" y="207.50"></text></g><g><title>isdalloct (257 samples, 0.24%)</title><rect x="85.8602%" y="181" width="0.2358%" height="15" fill="rgb(239,89,21)"/><text x="86.1102%" y="191.50"></text></g><g><title>arena_sdalloc (257 samples, 0.24%)</title><rect x="85.8602%" y="165" width="0.2358%" height="15" fill="rgb(243,122,19)"/><text x="86.1102%" y="175.50"></text></g><g><title>tcache_dalloc_small (256 samples, 0.23%)</title><rect x="85.8611%" y="149" width="0.2349%" height="15" fill="rgb(229,192,45)"/><text x="86.1111%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (289 samples, 0.27%)</title><rect x="85.8326%" y="245" width="0.2651%" height="15" fill="rgb(235,165,35)"/><text x="86.0826%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (287 samples, 0.26%)</title><rect x="85.8345%" y="229" width="0.2633%" height="15" fill="rgb(253,202,0)"/><text x="86.0845%" y="239.50"></text></g><g><title>_rjem_sdallocx (279 samples, 0.26%)</title><rect x="85.8418%" y="213" width="0.2560%" height="15" fill="rgb(235,51,20)"/><text x="86.0918%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;model::rho_types::Expr&gt;&gt; (350 samples, 0.32%)</title><rect x="85.7776%" y="293" width="0.3211%" height="15" fill="rgb(218,95,46)"/><text x="86.0276%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;model::rho_types::Expr&gt;&gt; (290 samples, 0.27%)</title><rect x="85.8326%" y="277" width="0.2660%" height="15" fill="rgb(212,81,10)"/><text x="86.0826%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (290 samples, 0.27%)</title><rect x="85.8326%" y="261" width="0.2660%" height="15" fill="rgb(240,59,0)"/><text x="86.0826%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;rho_runtime::interpreter::reduce::environment::Env&gt; (411 samples, 0.38%)</title><rect x="85.7574%" y="373" width="0.3771%" height="15" fill="rgb(212,191,42)"/><text x="86.0074%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[model::rho_types::Par: 6]&gt;&gt; (411 samples, 0.38%)</title><rect x="85.7574%" y="357" width="0.3771%" height="15" fill="rgb(233,140,3)"/><text x="86.0074%" y="367.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (411 samples, 0.38%)</title><rect x="85.7574%" y="341" width="0.3771%" height="15" fill="rgb(215,69,23)"/><text x="86.0074%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;[model::rho_types::Par]&gt; (409 samples, 0.38%)</title><rect x="85.7592%" y="325" width="0.3752%" height="15" fill="rgb(240,202,20)"/><text x="86.0092%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;model::rho_types::Par&gt; (403 samples, 0.37%)</title><rect x="85.7647%" y="309" width="0.3697%" height="15" fill="rgb(209,146,50)"/><text x="86.0147%" y="319.50"></text></g><g><title>rho_runtime::interpreter::AsynWaitGroup::release (14 samples, 0.01%)</title><rect x="86.1345%" y="373" width="0.0128%" height="15" fill="rgb(253,102,54)"/><text x="86.3845%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicI32::fetch_sub (14 samples, 0.01%)</title><rect x="86.1345%" y="357" width="0.0128%" height="15" fill="rgb(250,173,47)"/><text x="86.3845%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_sub (14 samples, 0.01%)</title><rect x="86.1345%" y="341" width="0.0128%" height="15" fill="rgb(232,142,7)"/><text x="86.3845%" y="351.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (15 samples, 0.01%)</title><rect x="86.2519%" y="357" width="0.0138%" height="15" fill="rgb(230,157,47)"/><text x="86.5019%" y="367.50"></text></g><g><title>[libc-2.31.so] (40 samples, 0.04%)</title><rect x="86.2748%" y="357" width="0.0367%" height="15" fill="rgb(214,177,35)"/><text x="86.5248%" y="367.50"></text></g><g><title>arena_slab_alloc (11 samples, 0.01%)</title><rect x="86.3537%" y="69" width="0.0101%" height="15" fill="rgb(234,119,46)"/><text x="86.6037%" y="79.50"></text></g><g><title>arena_bin_nonfull_slab_get (15 samples, 0.01%)</title><rect x="86.3519%" y="85" width="0.0138%" height="15" fill="rgb(241,180,50)"/><text x="86.6019%" y="95.50"></text></g><g><title>arena_bin_malloc_hard (17 samples, 0.02%)</title><rect x="86.3519%" y="101" width="0.0156%" height="15" fill="rgb(221,54,25)"/><text x="86.6019%" y="111.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (25 samples, 0.02%)</title><rect x="86.3510%" y="133" width="0.0229%" height="15" fill="rgb(209,157,44)"/><text x="86.6010%" y="143.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (25 samples, 0.02%)</title><rect x="86.3510%" y="117" width="0.0229%" height="15" fill="rgb(246,115,41)"/><text x="86.6010%" y="127.50"></text></g><g><title>imalloc_no_sample (47 samples, 0.04%)</title><rect x="86.3436%" y="197" width="0.0431%" height="15" fill="rgb(229,86,1)"/><text x="86.5936%" y="207.50"></text></g><g><title>iallocztm (44 samples, 0.04%)</title><rect x="86.3464%" y="181" width="0.0404%" height="15" fill="rgb(240,108,53)"/><text x="86.5964%" y="191.50"></text></g><g><title>arena_malloc (44 samples, 0.04%)</title><rect x="86.3464%" y="165" width="0.0404%" height="15" fill="rgb(227,134,2)"/><text x="86.5964%" y="175.50"></text></g><g><title>tcache_alloc_small (41 samples, 0.04%)</title><rect x="86.3491%" y="149" width="0.0376%" height="15" fill="rgb(213,129,25)"/><text x="86.5991%" y="159.50"></text></g><g><title>cache_bin_alloc_easy (13 samples, 0.01%)</title><rect x="86.3748%" y="133" width="0.0119%" height="15" fill="rgb(226,35,21)"/><text x="86.6248%" y="143.50"></text></g><g><title>imalloc_body (53 samples, 0.05%)</title><rect x="86.3418%" y="213" width="0.0486%" height="15" fill="rgb(208,129,26)"/><text x="86.5918%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (80 samples, 0.07%)</title><rect x="86.3216%" y="261" width="0.0734%" height="15" fill="rgb(224,83,6)"/><text x="86.5716%" y="271.50"></text></g><g><title>_rjem_mallocx (63 samples, 0.06%)</title><rect x="86.3372%" y="245" width="0.0578%" height="15" fill="rgb(227,52,39)"/><text x="86.5872%" y="255.50"></text></g><g><title>imalloc (58 samples, 0.05%)</title><rect x="86.3418%" y="229" width="0.0532%" height="15" fill="rgb(241,30,17)"/><text x="86.5918%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (96 samples, 0.09%)</title><rect x="86.3115%" y="277" width="0.0881%" height="15" fill="rgb(246,186,42)"/><text x="86.5615%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (97 samples, 0.09%)</title><rect x="86.3115%" y="325" width="0.0890%" height="15" fill="rgb(221,169,15)"/><text x="86.5615%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (97 samples, 0.09%)</title><rect x="86.3115%" y="309" width="0.0890%" height="15" fill="rgb(235,108,21)"/><text x="86.5615%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve (97 samples, 0.09%)</title><rect x="86.3115%" y="293" width="0.0890%" height="15" fill="rgb(219,148,30)"/><text x="86.5615%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (32 samples, 0.03%)</title><rect x="86.4005%" y="325" width="0.0294%" height="15" fill="rgb(220,109,5)"/><text x="86.6505%" y="335.50"></text></g><g><title>[libc-2.31.so] (30 samples, 0.03%)</title><rect x="86.4023%" y="309" width="0.0275%" height="15" fill="rgb(213,203,48)"/><text x="86.6523%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (130 samples, 0.12%)</title><rect x="86.3115%" y="341" width="0.1193%" height="15" fill="rgb(244,71,33)"/><text x="86.5615%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (131 samples, 0.12%)</title><rect x="86.3115%" y="357" width="0.1202%" height="15" fill="rgb(209,23,2)"/><text x="86.5615%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (13 samples, 0.01%)</title><rect x="86.4317%" y="357" width="0.0119%" height="15" fill="rgb(219,97,7)"/><text x="86.6817%" y="367.50"></text></g><g><title>core::mem::take (13 samples, 0.01%)</title><rect x="86.4317%" y="341" width="0.0119%" height="15" fill="rgb(216,161,23)"/><text x="86.6817%" y="351.50"></text></g><g><title>core::mem::replace (13 samples, 0.01%)</title><rect x="86.4317%" y="325" width="0.0119%" height="15" fill="rgb(207,45,42)"/><text x="86.6817%" y="335.50"></text></g><g><title>core::mem::swap (13 samples, 0.01%)</title><rect x="86.4317%" y="309" width="0.0119%" height="15" fill="rgb(241,61,4)"/><text x="86.6817%" y="319.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (13 samples, 0.01%)</title><rect x="86.4317%" y="293" width="0.0119%" height="15" fill="rgb(236,170,1)"/><text x="86.6817%" y="303.50"></text></g><g><title>core::ptr::swap_nonoverlapping (13 samples, 0.01%)</title><rect x="86.4317%" y="277" width="0.0119%" height="15" fill="rgb(239,72,5)"/><text x="86.6817%" y="287.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (13 samples, 0.01%)</title><rect x="86.4317%" y="261" width="0.0119%" height="15" fill="rgb(214,13,50)"/><text x="86.6817%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.01%)</title><rect x="86.4317%" y="245" width="0.0119%" height="15" fill="rgb(224,88,9)"/><text x="86.6817%" y="255.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (42 samples, 0.04%)</title><rect x="86.4519%" y="341" width="0.0385%" height="15" fill="rgb(238,192,34)"/><text x="86.7019%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (40 samples, 0.04%)</title><rect x="86.4537%" y="325" width="0.0367%" height="15" fill="rgb(217,203,50)"/><text x="86.7037%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_add (40 samples, 0.04%)</title><rect x="86.4537%" y="309" width="0.0367%" height="15" fill="rgb(241,123,32)"/><text x="86.7037%" y="319.50"></text></g><g><title>core::future::from_generator (12 samples, 0.01%)</title><rect x="86.4904%" y="341" width="0.0110%" height="15" fill="rgb(248,151,39)"/><text x="86.7404%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::task::join::JoinHandle&lt;()&gt;&gt; (26 samples, 0.02%)</title><rect x="86.5014%" y="341" width="0.0239%" height="15" fill="rgb(208,89,6)"/><text x="86.7514%" y="351.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.02%)</title><rect x="86.5014%" y="325" width="0.0239%" height="15" fill="rgb(254,43,26)"/><text x="86.7514%" y="335.50"></text></g><g><title>tokio::runtime::task::state::State::drop_join_handle_fast (23 samples, 0.02%)</title><rect x="86.5042%" y="309" width="0.0211%" height="15" fill="rgb(216,158,13)"/><text x="86.7542%" y="319.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (19 samples, 0.02%)</title><rect x="86.5078%" y="293" width="0.0174%" height="15" fill="rgb(212,47,37)"/><text x="86.7578%" y="303.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (19 samples, 0.02%)</title><rect x="86.5078%" y="277" width="0.0174%" height="15" fill="rgb(254,16,10)"/><text x="86.7578%" y="287.50"></text></g><g><title>rho_runtime::interpreter::AsynWaitGroup::acquire (26 samples, 0.02%)</title><rect x="86.5253%" y="341" width="0.0239%" height="15" fill="rgb(223,228,16)"/><text x="86.7753%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicI32::fetch_add (26 samples, 0.02%)</title><rect x="86.5253%" y="325" width="0.0239%" height="15" fill="rgb(249,108,50)"/><text x="86.7753%" y="335.50"></text></g><g><title>core::sync::atomic::atomic_add (26 samples, 0.02%)</title><rect x="86.5253%" y="309" width="0.0239%" height="15" fill="rgb(208,220,5)"/><text x="86.7753%" y="319.50"></text></g><g><title>[libc-2.31.so] (12 samples, 0.01%)</title><rect x="86.5574%" y="325" width="0.0110%" height="15" fill="rgb(217,89,48)"/><text x="86.8074%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::runtime::spawner::Spawner&gt; (71 samples, 0.07%)</title><rect x="86.5684%" y="325" width="0.0651%" height="15" fill="rgb(212,113,41)"/><text x="86.8184%" y="335.50"></text></g><g><title>tokio::runtime::context::spawn_handle (65 samples, 0.06%)</title><rect x="86.6335%" y="325" width="0.0596%" height="15" fill="rgb(231,127,5)"/><text x="86.8835%" y="335.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (65 samples, 0.06%)</title><rect x="86.6335%" y="309" width="0.0596%" height="15" fill="rgb(217,141,17)"/><text x="86.8835%" y="319.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (65 samples, 0.06%)</title><rect x="86.6335%" y="293" width="0.0596%" height="15" fill="rgb(245,125,54)"/><text x="86.8835%" y="303.50"></text></g><g><title>tokio::runtime::context::spawn_handle::{{closure}} (63 samples, 0.06%)</title><rect x="86.6354%" y="277" width="0.0578%" height="15" fill="rgb(248,125,3)"/><text x="86.8854%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (57 samples, 0.05%)</title><rect x="86.6409%" y="261" width="0.0523%" height="15" fill="rgb(236,119,51)"/><text x="86.8909%" y="271.50"></text></g><g><title>tokio::runtime::context::spawn_handle::{{closure}}::{{closure}} (56 samples, 0.05%)</title><rect x="86.6418%" y="245" width="0.0514%" height="15" fill="rgb(239,99,8)"/><text x="86.8918%" y="255.50"></text></g><g><title>&lt;tokio::runtime::spawner::Spawner as core::clone::Clone&gt;::clone (56 samples, 0.05%)</title><rect x="86.6418%" y="229" width="0.0514%" height="15" fill="rgb(224,228,4)"/><text x="86.8918%" y="239.50"></text></g><g><title>[libc-2.31.so] (56 samples, 0.05%)</title><rect x="86.6996%" y="261" width="0.0514%" height="15" fill="rgb(220,131,45)"/><text x="86.9496%" y="271.50"></text></g><g><title>[libc-2.31.so] (29 samples, 0.03%)</title><rect x="86.7509%" y="245" width="0.0266%" height="15" fill="rgb(215,62,5)"/><text x="87.0009%" y="255.50"></text></g><g><title>[libc-2.31.so] (22 samples, 0.02%)</title><rect x="86.7858%" y="229" width="0.0202%" height="15" fill="rgb(253,12,24)"/><text x="87.0358%" y="239.50"></text></g><g><title>imalloc_no_sample (15 samples, 0.01%)</title><rect x="86.8115%" y="117" width="0.0138%" height="15" fill="rgb(248,120,50)"/><text x="87.0615%" y="127.50"></text></g><g><title>iallocztm (14 samples, 0.01%)</title><rect x="86.8124%" y="101" width="0.0128%" height="15" fill="rgb(245,194,10)"/><text x="87.0624%" y="111.50"></text></g><g><title>arena_malloc (14 samples, 0.01%)</title><rect x="86.8124%" y="85" width="0.0128%" height="15" fill="rgb(241,149,38)"/><text x="87.0624%" y="95.50"></text></g><g><title>tcache_alloc_small (12 samples, 0.01%)</title><rect x="86.8142%" y="69" width="0.0110%" height="15" fill="rgb(219,215,7)"/><text x="87.0642%" y="79.50"></text></g><g><title>imalloc_body (21 samples, 0.02%)</title><rect x="86.8097%" y="133" width="0.0193%" height="15" fill="rgb(208,120,31)"/><text x="87.0597%" y="143.50"></text></g><g><title>tokio::runtime::task::joinable (143 samples, 0.13%)</title><rect x="86.6996%" y="293" width="0.1312%" height="15" fill="rgb(244,30,8)"/><text x="86.9496%" y="303.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::new (143 samples, 0.13%)</title><rect x="86.6996%" y="277" width="0.1312%" height="15" fill="rgb(238,35,44)"/><text x="86.9496%" y="287.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (87 samples, 0.08%)</title><rect x="86.7509%" y="261" width="0.0798%" height="15" fill="rgb(243,218,37)"/><text x="87.0009%" y="271.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (58 samples, 0.05%)</title><rect x="86.7775%" y="245" width="0.0532%" height="15" fill="rgb(218,169,10)"/><text x="87.0275%" y="255.50"></text></g><g><title>alloc::alloc::exchange_malloc (27 samples, 0.02%)</title><rect x="86.8060%" y="229" width="0.0248%" height="15" fill="rgb(221,144,10)"/><text x="87.0560%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (27 samples, 0.02%)</title><rect x="86.8060%" y="213" width="0.0248%" height="15" fill="rgb(226,41,38)"/><text x="87.0560%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (27 samples, 0.02%)</title><rect x="86.8060%" y="197" width="0.0248%" height="15" fill="rgb(228,3,1)"/><text x="87.0560%" y="207.50"></text></g><g><title>alloc::alloc::alloc (27 samples, 0.02%)</title><rect x="86.8060%" y="181" width="0.0248%" height="15" fill="rgb(209,129,12)"/><text x="87.0560%" y="191.50"></text></g><g><title>_rjem_mallocx (27 samples, 0.02%)</title><rect x="86.8060%" y="165" width="0.0248%" height="15" fill="rgb(213,136,33)"/><text x="87.0560%" y="175.50"></text></g><g><title>imalloc (23 samples, 0.02%)</title><rect x="86.8097%" y="149" width="0.0211%" height="15" fill="rgb(209,181,29)"/><text x="87.0597%" y="159.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::produce (456 samples, 0.42%)</title><rect x="86.4510%" y="357" width="0.4183%" height="15" fill="rgb(234,173,18)"/><text x="86.7010%" y="367.50"></text></g><g><title>tokio::task::spawn::spawn (349 samples, 0.32%)</title><rect x="86.5491%" y="341" width="0.3202%" height="15" fill="rgb(227,73,47)"/><text x="86.7991%" y="351.50"></text></g><g><title>tokio::runtime::spawner::Spawner::spawn (192 samples, 0.18%)</title><rect x="86.6931%" y="325" width="0.1761%" height="15" fill="rgb(234,9,34)"/><text x="86.9431%" y="335.50"></text></g><g><title>tokio::runtime::thread_pool::Spawner::spawn (189 samples, 0.17%)</title><rect x="86.6959%" y="309" width="0.1734%" height="15" fill="rgb(235,172,15)"/><text x="86.9459%" y="319.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule (42 samples, 0.04%)</title><rect x="86.8308%" y="293" width="0.0385%" height="15" fill="rgb(245,61,2)"/><text x="87.0808%" y="303.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::with (39 samples, 0.04%)</title><rect x="86.8335%" y="277" width="0.0358%" height="15" fill="rgb(238,39,47)"/><text x="87.0835%" y="287.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Shared::schedule::{{closure}} (32 samples, 0.03%)</title><rect x="86.8399%" y="261" width="0.0294%" height="15" fill="rgb(234,37,24)"/><text x="87.0899%" y="271.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (16 samples, 0.01%)</title><rect x="86.8757%" y="341" width="0.0147%" height="15" fill="rgb(248,223,24)"/><text x="87.1257%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (13 samples, 0.01%)</title><rect x="86.8950%" y="325" width="0.0119%" height="15" fill="rgb(223,12,15)"/><text x="87.1450%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (13 samples, 0.01%)</title><rect x="86.8950%" y="309" width="0.0119%" height="15" fill="rgb(249,6,3)"/><text x="87.1450%" y="319.50"></text></g><g><title>model::ordering::sort_par::&lt;impl model::ordering::Sortable for model::rho_types::Par&gt;::sort (45 samples, 0.04%)</title><rect x="86.8904%" y="341" width="0.0413%" height="15" fill="rgb(237,105,33)"/><text x="87.1404%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by (18 samples, 0.02%)</title><rect x="86.9152%" y="325" width="0.0165%" height="15" fill="rgb(252,208,35)"/><text x="87.1652%" y="335.50"></text></g><g><title>alloc::slice::merge_sort (18 samples, 0.02%)</title><rect x="86.9152%" y="309" width="0.0165%" height="15" fill="rgb(215,181,35)"/><text x="87.1652%" y="319.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (84 samples, 0.08%)</title><rect x="86.9583%" y="325" width="0.0771%" height="15" fill="rgb(246,212,3)"/><text x="87.2083%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (84 samples, 0.08%)</title><rect x="86.9583%" y="309" width="0.0771%" height="15" fill="rgb(247,156,24)"/><text x="87.2083%" y="319.50"></text></g><g><title>rho_runtime::interpreter::InterpreterContext&lt;S&gt;::spawn_evaluation::{{closure}} (1,592 samples, 1.46%)</title><rect x="85.5914%" y="389" width="1.4605%" height="15" fill="rgb(248,9,31)"/><text x="85.8414%" y="399.50"></text></g><g><title>rho_runtime::interpreter::reduce::eval_send::&lt;impl rho_runtime::interpreter::reduce::Evaluator&lt;S&gt; for model::rho_types::Send&gt;::evaluate (986 samples, 0.90%)</title><rect x="86.1473%" y="373" width="0.9046%" height="15" fill="rgb(234,26,45)"/><text x="86.3973%" y="383.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute (199 samples, 0.18%)</title><rect x="86.8693%" y="357" width="0.1826%" height="15" fill="rgb(249,11,32)"/><text x="87.1193%" y="367.50"></text></g><g><title>rho_runtime::interpreter::reduce::substitute::sub_par::&lt;impl rho_runtime::interpreter::reduce::substitute::Substitutable&lt;S&gt; for model::rho_types::Par&gt;::substitute_no_sort (131 samples, 0.12%)</title><rect x="86.9317%" y="341" width="0.1202%" height="15" fill="rgb(249,162,33)"/><text x="87.1817%" y="351.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,056 samples, 1.89%)</title><rect x="85.1666%" y="405" width="1.8862%" height="15" fill="rgb(232,4,32)"/><text x="85.4166%" y="415.50">&lt;..</text></g><g><title>[libc-2.31.so] (190 samples, 0.17%)</title><rect x="87.0674%" y="341" width="0.1743%" height="15" fill="rgb(212,5,45)"/><text x="87.3174%" y="351.50"></text></g><g><title>std::panic::catch_unwind (2,304 samples, 2.11%)</title><rect x="85.1418%" y="501" width="2.1137%" height="15" fill="rgb(227,95,13)"/><text x="85.3918%" y="511.50">s..</text></g><g><title>std::panicking::try (2,304 samples, 2.11%)</title><rect x="85.1418%" y="485" width="2.1137%" height="15" fill="rgb(223,205,10)"/><text x="85.3918%" y="495.50">s..</text></g><g><title>std::panicking::try::do_call (2,304 samples, 2.11%)</title><rect x="85.1418%" y="469" width="2.1137%" height="15" fill="rgb(222,178,8)"/><text x="85.3918%" y="479.50">s..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2,304 samples, 2.11%)</title><rect x="85.1418%" y="453" width="2.1137%" height="15" fill="rgb(216,13,22)"/><text x="85.3918%" y="463.50">&lt;..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (2,304 samples, 2.11%)</title><rect x="85.1418%" y="437" width="2.1137%" height="15" fill="rgb(240,167,12)"/><text x="85.3918%" y="447.50">t..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (2,304 samples, 2.11%)</title><rect x="85.1418%" y="421" width="2.1137%" height="15" fill="rgb(235,68,35)"/><text x="85.3918%" y="431.50">t..</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::drop_future_or_output (212 samples, 0.19%)</title><rect x="87.0610%" y="405" width="0.1945%" height="15" fill="rgb(253,40,27)"/><text x="87.3110%" y="415.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::set_stage (212 samples, 0.19%)</title><rect x="87.0610%" y="389" width="0.1945%" height="15" fill="rgb(214,19,28)"/><text x="87.3110%" y="399.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (206 samples, 0.19%)</title><rect x="87.0665%" y="373" width="0.1890%" height="15" fill="rgb(210,167,45)"/><text x="87.3165%" y="383.50"></text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::set_stage::{{closure}} (206 samples, 0.19%)</title><rect x="87.0665%" y="357" width="0.1890%" height="15" fill="rgb(232,97,40)"/><text x="87.3165%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (17 samples, 0.02%)</title><rect x="87.2619%" y="469" width="0.0156%" height="15" fill="rgb(250,35,23)"/><text x="87.5119%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (17 samples, 0.02%)</title><rect x="87.2619%" y="453" width="0.0156%" height="15" fill="rgb(248,47,53)"/><text x="87.5119%" y="463.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (27 samples, 0.02%)</title><rect x="87.2610%" y="501" width="0.0248%" height="15" fill="rgb(226,58,50)"/><text x="87.5110%" y="511.50"></text></g><g><title>tokio::runtime::task::state::State::fetch_update (27 samples, 0.02%)</title><rect x="87.2610%" y="485" width="0.0248%" height="15" fill="rgb(217,105,26)"/><text x="87.5110%" y="495.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (3,876 samples, 3.56%)</title><rect x="83.7391%" y="549" width="3.5558%" height="15" fill="rgb(208,64,1)"/><text x="83.9891%" y="559.50">toki..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (2,874 samples, 2.64%)</title><rect x="84.6584%" y="533" width="2.6366%" height="15" fill="rgb(214,80,1)"/><text x="84.9084%" y="543.50">to..</text></g><g><title>tokio::runtime::task::harness::poll_future (2,362 samples, 2.17%)</title><rect x="85.1281%" y="517" width="2.1669%" height="15" fill="rgb(206,175,26)"/><text x="85.3781%" y="527.50">t..</text></g><g><title>tokio::coop::budget (4,298 samples, 3.94%)</title><rect x="83.4226%" y="677" width="3.9430%" height="15" fill="rgb(235,156,37)"/><text x="83.6726%" y="687.50">toki..</text></g><g><title>tokio::coop::with_budget (4,298 samples, 3.94%)</title><rect x="83.4226%" y="661" width="3.9430%" height="15" fill="rgb(213,100,9)"/><text x="83.6726%" y="671.50">toki..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,285 samples, 3.93%)</title><rect x="83.4346%" y="645" width="3.9310%" height="15" fill="rgb(241,15,13)"/><text x="83.6846%" y="655.50">std:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4,244 samples, 3.89%)</title><rect x="83.4722%" y="629" width="3.8934%" height="15" fill="rgb(205,97,43)"/><text x="83.7222%" y="639.50">std:..</text></g><g><title>tokio::coop::with_budget::{{closure}} (4,219 samples, 3.87%)</title><rect x="83.4951%" y="613" width="3.8705%" height="15" fill="rgb(216,106,32)"/><text x="83.7451%" y="623.50">toki..</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task::{{closure}} (4,196 samples, 3.85%)</title><rect x="83.5162%" y="597" width="3.8494%" height="15" fill="rgb(226,200,8)"/><text x="83.7662%" y="607.50">toki..</text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (4,116 samples, 3.78%)</title><rect x="83.5896%" y="581" width="3.7760%" height="15" fill="rgb(244,54,29)"/><text x="83.8396%" y="591.50">toki..</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (4,116 samples, 3.78%)</title><rect x="83.5896%" y="565" width="3.7760%" height="15" fill="rgb(252,169,12)"/><text x="83.8396%" y="575.50">toki..</text></g><g><title>tokio::runtime::task::raw::poll (77 samples, 0.07%)</title><rect x="87.2950%" y="549" width="0.0706%" height="15" fill="rgb(231,199,11)"/><text x="87.5450%" y="559.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::transition_worker_from_searching (57 samples, 0.05%)</title><rect x="87.3748%" y="645" width="0.0523%" height="15" fill="rgb(233,191,18)"/><text x="87.6248%" y="655.50"></text></g><g><title>tokio::runtime::thread_pool::idle::State::dec_num_searching (57 samples, 0.05%)</title><rect x="87.3748%" y="629" width="0.0523%" height="15" fill="rgb(215,83,47)"/><text x="87.6248%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (54 samples, 0.05%)</title><rect x="87.3775%" y="613" width="0.0495%" height="15" fill="rgb(251,67,19)"/><text x="87.6275%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_sub (54 samples, 0.05%)</title><rect x="87.3775%" y="597" width="0.0495%" height="15" fill="rgb(240,7,20)"/><text x="87.6275%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (173 samples, 0.16%)</title><rect x="87.4830%" y="597" width="0.1587%" height="15" fill="rgb(210,150,26)"/><text x="87.7330%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_swap (173 samples, 0.16%)</title><rect x="87.4830%" y="581" width="0.1587%" height="15" fill="rgb(228,75,42)"/><text x="87.7330%" y="591.50"></text></g><g><title>core::mem::drop (44 samples, 0.04%)</title><rect x="87.6417%" y="581" width="0.0404%" height="15" fill="rgb(237,134,48)"/><text x="87.8917%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,()&gt;&gt; (44 samples, 0.04%)</title><rect x="87.6417%" y="565" width="0.0404%" height="15" fill="rgb(205,80,50)"/><text x="87.8917%" y="575.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.04%)</title><rect x="87.6417%" y="549" width="0.0404%" height="15" fill="rgb(217,74,48)"/><text x="87.8917%" y="559.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (44 samples, 0.04%)</title><rect x="87.6417%" y="533" width="0.0404%" height="15" fill="rgb(205,82,50)"/><text x="87.8917%" y="543.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (43 samples, 0.04%)</title><rect x="87.6427%" y="517" width="0.0394%" height="15" fill="rgb(228,1,33)"/><text x="87.8927%" y="527.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (43 samples, 0.04%)</title><rect x="87.6427%" y="501" width="0.0394%" height="15" fill="rgb(214,50,23)"/><text x="87.8927%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (57 samples, 0.05%)</title><rect x="87.6922%" y="533" width="0.0523%" height="15" fill="rgb(210,62,9)"/><text x="87.9422%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (57 samples, 0.05%)</title><rect x="87.6922%" y="517" width="0.0523%" height="15" fill="rgb(210,104,37)"/><text x="87.9422%" y="527.50"></text></g><g><title>&lt;tokio::runtime::park::Unparker as tokio::park::Unpark&gt;::unpark (335 samples, 0.31%)</title><rect x="87.4417%" y="629" width="0.3073%" height="15" fill="rgb(232,104,43)"/><text x="87.6917%" y="639.50"></text></g><g><title>tokio::runtime::park::Inner::unpark (329 samples, 0.30%)</title><rect x="87.4472%" y="613" width="0.3018%" height="15" fill="rgb(244,52,6)"/><text x="87.6972%" y="623.50"></text></g><g><title>tokio::runtime::park::Inner::unpark_condvar (117 samples, 0.11%)</title><rect x="87.6417%" y="597" width="0.1073%" height="15" fill="rgb(211,174,52)"/><text x="87.8917%" y="607.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (64 samples, 0.06%)</title><rect x="87.6904%" y="581" width="0.0587%" height="15" fill="rgb(229,48,4)"/><text x="87.9404%" y="591.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (64 samples, 0.06%)</title><rect x="87.6904%" y="565" width="0.0587%" height="15" fill="rgb(205,155,16)"/><text x="87.9404%" y="575.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (64 samples, 0.06%)</title><rect x="87.6904%" y="549" width="0.0587%" height="15" fill="rgb(211,141,53)"/><text x="87.9404%" y="559.50"></text></g><g><title>std::time::Instant::now (61 samples, 0.06%)</title><rect x="87.8069%" y="581" width="0.0560%" height="15" fill="rgb(240,148,11)"/><text x="88.0569%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (61 samples, 0.06%)</title><rect x="87.8069%" y="565" width="0.0560%" height="15" fill="rgb(214,45,23)"/><text x="88.0569%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::now (61 samples, 0.06%)</title><rect x="87.8069%" y="549" width="0.0560%" height="15" fill="rgb(248,74,26)"/><text x="88.0569%" y="559.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (57 samples, 0.05%)</title><rect x="87.8105%" y="533" width="0.0523%" height="15" fill="rgb(218,121,16)"/><text x="88.0605%" y="543.50"></text></g><g><title>parking_lot_core::parking_lot::park (57 samples, 0.05%)</title><rect x="87.8105%" y="517" width="0.0523%" height="15" fill="rgb(218,10,47)"/><text x="88.0605%" y="527.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (57 samples, 0.05%)</title><rect x="87.8105%" y="501" width="0.0523%" height="15" fill="rgb(227,99,14)"/><text x="88.0605%" y="511.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (57 samples, 0.05%)</title><rect x="87.8105%" y="485" width="0.0523%" height="15" fill="rgb(229,83,46)"/><text x="88.0605%" y="495.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (57 samples, 0.05%)</title><rect x="87.8105%" y="469" width="0.0523%" height="15" fill="rgb(228,25,1)"/><text x="88.0605%" y="479.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (57 samples, 0.05%)</title><rect x="87.8105%" y="453" width="0.0523%" height="15" fill="rgb(252,190,15)"/><text x="88.0605%" y="463.50"></text></g><g><title>syscall (57 samples, 0.05%)</title><rect x="87.8105%" y="437" width="0.0523%" height="15" fill="rgb(213,103,51)"/><text x="88.0605%" y="447.50"></text></g><g><title>entry_SYSCALL_64 (57 samples, 0.05%)</title><rect x="87.8105%" y="421" width="0.0523%" height="15" fill="rgb(220,38,44)"/><text x="88.0605%" y="431.50"></text></g><g><title>entry_SYSCALL_64 (81 samples, 0.07%)</title><rect x="87.9812%" y="565" width="0.0743%" height="15" fill="rgb(210,45,26)"/><text x="88.2312%" y="575.50"></text></g><g><title>__x64_sys_futex (14 samples, 0.01%)</title><rect x="88.1041%" y="549" width="0.0128%" height="15" fill="rgb(205,95,48)"/><text x="88.3541%" y="559.50"></text></g><g><title>__prepare_exit_to_usermode (35 samples, 0.03%)</title><rect x="88.1958%" y="517" width="0.0321%" height="15" fill="rgb(225,179,37)"/><text x="88.4458%" y="527.50"></text></g><g><title>__syscall_return_slowpath (71 samples, 0.07%)</title><rect x="88.1683%" y="533" width="0.0651%" height="15" fill="rgb(230,209,3)"/><text x="88.4183%" y="543.50"></text></g><g><title>_raw_spin_lock (173 samples, 0.16%)</title><rect x="88.3124%" y="501" width="0.1587%" height="15" fill="rgb(248,12,46)"/><text x="88.5624%" y="511.50"></text></g><g><title>get_futex_key (51 samples, 0.05%)</title><rect x="89.3334%" y="485" width="0.0468%" height="15" fill="rgb(234,18,0)"/><text x="89.5834%" y="495.50"></text></g><g><title>__unqueue_futex (230 samples, 0.21%)</title><rect x="89.6674%" y="469" width="0.2110%" height="15" fill="rgb(238,197,14)"/><text x="89.9174%" y="479.50"></text></g><g><title>mark_wake_futex (565 samples, 0.52%)</title><rect x="89.3811%" y="485" width="0.5183%" height="15" fill="rgb(251,162,48)"/><text x="89.6311%" y="495.50"></text></g><g><title>plist_del (23 samples, 0.02%)</title><rect x="89.8784%" y="469" width="0.0211%" height="15" fill="rgb(237,73,42)"/><text x="90.1284%" y="479.50"></text></g><g><title>wake_q_add_safe (67 samples, 0.06%)</title><rect x="89.9031%" y="485" width="0.0615%" height="15" fill="rgb(211,108,8)"/><text x="90.1531%" y="495.50"></text></g><g><title>_raw_spin_lock (68 samples, 0.06%)</title><rect x="90.1160%" y="469" width="0.0624%" height="15" fill="rgb(213,45,22)"/><text x="90.3660%" y="479.50"></text></g><g><title>__lock_text_start (39 samples, 0.04%)</title><rect x="90.4985%" y="453" width="0.0358%" height="15" fill="rgb(252,154,5)"/><text x="90.7485%" y="463.50"></text></g><g><title>_raw_spin_lock (12 samples, 0.01%)</title><rect x="90.5389%" y="453" width="0.0110%" height="15" fill="rgb(221,79,52)"/><text x="90.7889%" y="463.50"></text></g><g><title>native_queued_spin_lock_slowpath (12 samples, 0.01%)</title><rect x="90.5389%" y="437" width="0.0110%" height="15" fill="rgb(229,220,36)"/><text x="90.7889%" y="447.50"></text></g><g><title>_raw_spin_lock_irqsave (52 samples, 0.05%)</title><rect x="90.5499%" y="453" width="0.0477%" height="15" fill="rgb(211,17,16)"/><text x="90.7999%" y="463.50"></text></g><g><title>available_idle_cpu (127 samples, 0.12%)</title><rect x="90.8829%" y="437" width="0.1165%" height="15" fill="rgb(222,55,31)"/><text x="91.1329%" y="447.50"></text></g><g><title>select_idle_sibling (25 samples, 0.02%)</title><rect x="91.0012%" y="437" width="0.0229%" height="15" fill="rgb(221,221,31)"/><text x="91.2512%" y="447.50"></text></g><g><title>select_task_rq_fair (451 samples, 0.41%)</title><rect x="90.6214%" y="453" width="0.4137%" height="15" fill="rgb(227,168,26)"/><text x="90.8714%" y="463.50"></text></g><g><title>update_cfs_rq_h_load (12 samples, 0.01%)</title><rect x="91.0242%" y="437" width="0.0110%" height="15" fill="rgb(224,139,9)"/><text x="91.2742%" y="447.50"></text></g><g><title>set_task_cpu (11 samples, 0.01%)</title><rect x="91.0352%" y="453" width="0.0101%" height="15" fill="rgb(254,172,0)"/><text x="91.2852%" y="463.50"></text></g><g><title>enqueue_entity (17 samples, 0.02%)</title><rect x="91.2067%" y="437" width="0.0156%" height="15" fill="rgb(235,203,1)"/><text x="91.4567%" y="447.50"></text></g><g><title>__enqueue_entity (13 samples, 0.01%)</title><rect x="91.4645%" y="421" width="0.0119%" height="15" fill="rgb(216,205,24)"/><text x="91.7145%" y="431.50"></text></g><g><title>account_entity_enqueue (27 samples, 0.02%)</title><rect x="91.4765%" y="421" width="0.0248%" height="15" fill="rgb(233,24,6)"/><text x="91.7265%" y="431.50"></text></g><g><title>__update_load_avg_se (11 samples, 0.01%)</title><rect x="92.0223%" y="405" width="0.0101%" height="15" fill="rgb(244,110,9)"/><text x="92.2723%" y="415.50"></text></g><g><title>account_entity_enqueue (47 samples, 0.04%)</title><rect x="92.0324%" y="405" width="0.0431%" height="15" fill="rgb(239,222,42)"/><text x="92.2824%" y="415.50"></text></g><g><title>place_entity (93 samples, 0.09%)</title><rect x="92.0755%" y="405" width="0.0853%" height="15" fill="rgb(218,145,13)"/><text x="92.3255%" y="415.50"></text></g><g><title>rb_insert_color (13 samples, 0.01%)</title><rect x="92.1608%" y="405" width="0.0119%" height="15" fill="rgb(207,69,11)"/><text x="92.4108%" y="415.50"></text></g><g><title>update_cfs_group (243 samples, 0.22%)</title><rect x="92.1755%" y="405" width="0.2229%" height="15" fill="rgb(220,223,22)"/><text x="92.4255%" y="415.50"></text></g><g><title>reweight_entity (215 samples, 0.20%)</title><rect x="92.2012%" y="389" width="0.1972%" height="15" fill="rgb(245,102,5)"/><text x="92.4512%" y="399.50"></text></g><g><title>update_curr (37 samples, 0.03%)</title><rect x="92.3984%" y="405" width="0.0339%" height="15" fill="rgb(211,148,2)"/><text x="92.6484%" y="415.50"></text></g><g><title>__update_load_avg_cfs_rq (175 samples, 0.16%)</title><rect x="92.5902%" y="389" width="0.1605%" height="15" fill="rgb(241,13,44)"/><text x="92.8402%" y="399.50"></text></g><g><title>__update_load_avg_se (94 samples, 0.09%)</title><rect x="92.7507%" y="389" width="0.0862%" height="15" fill="rgb(219,137,21)"/><text x="93.0007%" y="399.50"></text></g><g><title>enqueue_entity (1,457 samples, 1.34%)</title><rect x="91.5012%" y="421" width="1.3366%" height="15" fill="rgb(242,206,5)"/><text x="91.7512%" y="431.50"></text></g><g><title>update_load_avg (442 samples, 0.41%)</title><rect x="92.4324%" y="405" width="0.4055%" height="15" fill="rgb(217,114,22)"/><text x="92.6824%" y="415.50"></text></g><g><title>place_entity (37 samples, 0.03%)</title><rect x="92.8379%" y="421" width="0.0339%" height="15" fill="rgb(253,206,42)"/><text x="93.0879%" y="431.50"></text></g><g><title>update_cfs_group (43 samples, 0.04%)</title><rect x="92.8718%" y="421" width="0.0394%" height="15" fill="rgb(236,102,18)"/><text x="93.1218%" y="431.50"></text></g><g><title>enqueue_task_fair (1,857 samples, 1.70%)</title><rect x="91.2223%" y="437" width="1.7036%" height="15" fill="rgb(208,59,49)"/><text x="91.4723%" y="447.50"></text></g><g><title>update_load_avg (13 samples, 0.01%)</title><rect x="92.9140%" y="421" width="0.0119%" height="15" fill="rgb(215,194,28)"/><text x="93.1640%" y="431.50"></text></g><g><title>psi_group_change (20 samples, 0.02%)</title><rect x="92.9360%" y="437" width="0.0183%" height="15" fill="rgb(243,207,11)"/><text x="93.1860%" y="447.50"></text></g><g><title>psi_flags_change (37 samples, 0.03%)</title><rect x="93.3269%" y="421" width="0.0339%" height="15" fill="rgb(254,179,35)"/><text x="93.5769%" y="431.50"></text></g><g><title>native_sched_clock (115 samples, 0.11%)</title><rect x="94.1865%" y="373" width="0.1055%" height="15" fill="rgb(235,97,3)"/><text x="94.4365%" y="383.50"></text></g><g><title>record_times (241 samples, 0.22%)</title><rect x="94.0791%" y="405" width="0.2211%" height="15" fill="rgb(215,155,33)"/><text x="94.3291%" y="415.50"></text></g><g><title>sched_clock_cpu (152 samples, 0.14%)</title><rect x="94.1608%" y="389" width="0.1394%" height="15" fill="rgb(223,128,12)"/><text x="94.4108%" y="399.50"></text></g><g><title>psi_group_change (1,031 samples, 0.95%)</title><rect x="93.3608%" y="421" width="0.9458%" height="15" fill="rgb(208,157,18)"/><text x="93.6108%" y="431.50"></text></g><g><title>psi_task_change (1,491 samples, 1.37%)</title><rect x="92.9544%" y="437" width="1.3678%" height="15" fill="rgb(249,70,54)"/><text x="93.2044%" y="447.50"></text></g><g><title>record_times (17 samples, 0.02%)</title><rect x="94.3066%" y="421" width="0.0156%" height="15" fill="rgb(244,118,24)"/><text x="94.5566%" y="431.50"></text></g><g><title>check_preempt_curr (874 samples, 0.80%)</title><rect x="94.3406%" y="421" width="0.8018%" height="15" fill="rgb(211,54,0)"/><text x="94.5906%" y="431.50"></text></g><g><title>resched_curr (768 samples, 0.70%)</title><rect x="94.4378%" y="405" width="0.7046%" height="15" fill="rgb(245,137,45)"/><text x="94.6878%" y="415.50"></text></g><g><title>ttwu_do_activate (4,521 samples, 4.15%)</title><rect x="91.0453%" y="453" width="4.1476%" height="15" fill="rgb(232,154,31)"/><text x="91.2953%" y="463.50">ttwu_..</text></g><g><title>ttwu_do_wakeup (949 samples, 0.87%)</title><rect x="94.3222%" y="437" width="0.8706%" height="15" fill="rgb(253,6,39)"/><text x="94.5722%" y="447.50"></text></g><g><title>resched_curr (55 samples, 0.05%)</title><rect x="95.1424%" y="421" width="0.0505%" height="15" fill="rgb(234,183,24)"/><text x="95.3924%" y="431.50"></text></g><g><title>__smp_call_single_queue (25 samples, 0.02%)</title><rect x="95.2442%" y="437" width="0.0229%" height="15" fill="rgb(252,84,40)"/><text x="95.4942%" y="447.50"></text></g><g><title>send_call_function_single_ipi (25 samples, 0.02%)</title><rect x="95.2442%" y="421" width="0.0229%" height="15" fill="rgb(224,65,2)"/><text x="95.4942%" y="431.50"></text></g><g><title>native_send_call_func_single_ipi (21 samples, 0.02%)</title><rect x="95.2479%" y="405" width="0.0193%" height="15" fill="rgb(229,38,24)"/><text x="95.4979%" y="415.50"></text></g><g><title>x2apic_send_IPI (18 samples, 0.02%)</title><rect x="95.2506%" y="389" width="0.0165%" height="15" fill="rgb(218,131,50)"/><text x="95.5006%" y="399.50"></text></g><g><title>native_write_msr (11 samples, 0.01%)</title><rect x="95.2571%" y="373" width="0.0101%" height="15" fill="rgb(233,106,18)"/><text x="95.5071%" y="383.50"></text></g><g><title>llist_add_batch (16 samples, 0.01%)</title><rect x="95.2671%" y="437" width="0.0147%" height="15" fill="rgb(220,216,11)"/><text x="95.5171%" y="447.50"></text></g><g><title>ttwu_queue_wakelist (98 samples, 0.09%)</title><rect x="95.1947%" y="453" width="0.0899%" height="15" fill="rgb(251,100,45)"/><text x="95.4447%" y="463.50"></text></g><g><title>update_cfs_rq_h_load (417 samples, 0.38%)</title><rect x="95.2846%" y="453" width="0.3826%" height="15" fill="rgb(235,143,32)"/><text x="95.5346%" y="463.50"></text></g><g><title>native_sched_clock (75 samples, 0.07%)</title><rect x="95.9066%" y="421" width="0.0688%" height="15" fill="rgb(248,124,34)"/><text x="96.1566%" y="431.50"></text></g><g><title>try_to_wake_up (6,313 samples, 5.79%)</title><rect x="90.1866%" y="469" width="5.7915%" height="15" fill="rgb(225,221,4)"/><text x="90.4366%" y="479.50">try_to_..</text></g><g><title>update_rq_clock (339 samples, 0.31%)</title><rect x="95.6671%" y="453" width="0.3110%" height="15" fill="rgb(242,27,43)"/><text x="95.9171%" y="463.50"></text></g><g><title>sched_clock_cpu (86 samples, 0.08%)</title><rect x="95.8992%" y="437" width="0.0789%" height="15" fill="rgb(227,54,8)"/><text x="96.1492%" y="447.50"></text></g><g><title>futex_wake (8,202 samples, 7.52%)</title><rect x="88.4711%" y="501" width="7.5245%" height="15" fill="rgb(253,139,49)"/><text x="88.7211%" y="511.50">futex_wake</text></g><g><title>wake_up_q (6,574 samples, 6.03%)</title><rect x="89.9646%" y="485" width="6.0310%" height="15" fill="rgb(231,26,43)"/><text x="90.2146%" y="495.50">wake_up_q</text></g><g><title>hash_futex (93 samples, 0.09%)</title><rect x="95.9992%" y="501" width="0.0853%" height="15" fill="rgb(207,121,39)"/><text x="96.2492%" y="511.50"></text></g><g><title>do_futex (8,524 samples, 7.82%)</title><rect x="88.2747%" y="517" width="7.8199%" height="15" fill="rgb(223,101,35)"/><text x="88.5247%" y="527.50">do_futex</text></g><g><title>__x64_sys_futex (8,579 samples, 7.87%)</title><rect x="88.2335%" y="533" width="7.8704%" height="15" fill="rgb(232,87,23)"/><text x="88.4835%" y="543.50">__x64_sys_f..</text></g><g><title>entry_SYSCALL_64_after_hwframe (8,780 samples, 8.05%)</title><rect x="88.0555%" y="565" width="8.0548%" height="15" fill="rgb(225,180,29)"/><text x="88.3055%" y="575.50">entry_SYSCA..</text></g><g><title>do_syscall_64 (8,711 samples, 7.99%)</title><rect x="88.1188%" y="549" width="7.9914%" height="15" fill="rgb(225,25,17)"/><text x="88.3688%" y="559.50">do_syscall_..</text></g><g><title>&lt;parking_lot_core::thread_parker::imp::UnparkHandle as parking_lot_core::thread_parker::UnparkHandleT&gt;::unpark (9,120 samples, 8.37%)</title><rect x="87.7830%" y="597" width="8.3667%" height="15" fill="rgb(223,8,52)"/><text x="88.0330%" y="607.50">&lt;parking_lot..</text></g><g><title>syscall (9,033 samples, 8.29%)</title><rect x="87.8628%" y="581" width="8.2869%" height="15" fill="rgb(246,42,21)"/><text x="88.1128%" y="591.50">syscall</text></g><g><title>syscall_return_via_sysret (43 samples, 0.04%)</title><rect x="96.1102%" y="565" width="0.0394%" height="15" fill="rgb(205,64,43)"/><text x="96.3602%" y="575.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (13 samples, 0.01%)</title><rect x="96.1506%" y="597" width="0.0119%" height="15" fill="rgb(221,160,13)"/><text x="96.4006%" y="607.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (13 samples, 0.01%)</title><rect x="96.1625%" y="597" width="0.0119%" height="15" fill="rgb(239,58,35)"/><text x="96.4125%" y="607.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (13 samples, 0.01%)</title><rect x="96.1625%" y="581" width="0.0119%" height="15" fill="rgb(251,26,40)"/><text x="96.4125%" y="591.50"></text></g><g><title>core::mem::replace (13 samples, 0.01%)</title><rect x="96.1625%" y="565" width="0.0119%" height="15" fill="rgb(247,0,4)"/><text x="96.4125%" y="575.50"></text></g><g><title>core::mem::swap (13 samples, 0.01%)</title><rect x="96.1625%" y="549" width="0.0119%" height="15" fill="rgb(218,130,10)"/><text x="96.4125%" y="559.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (13 samples, 0.01%)</title><rect x="96.1625%" y="533" width="0.0119%" height="15" fill="rgb(239,32,7)"/><text x="96.4125%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.01%)</title><rect x="96.1625%" y="517" width="0.0119%" height="15" fill="rgb(210,192,24)"/><text x="96.4125%" y="527.50"></text></g><g><title>core::ops::function::FnOnce::call_once (15 samples, 0.01%)</title><rect x="96.1745%" y="597" width="0.0138%" height="15" fill="rgb(226,212,17)"/><text x="96.4245%" y="607.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow::{{closure}} (15 samples, 0.01%)</title><rect x="96.1745%" y="581" width="0.0138%" height="15" fill="rgb(219,201,28)"/><text x="96.4245%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (340 samples, 0.31%)</title><rect x="96.1928%" y="597" width="0.3119%" height="15" fill="rgb(235,207,41)"/><text x="96.4428%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (340 samples, 0.31%)</title><rect x="96.1928%" y="581" width="0.3119%" height="15" fill="rgb(241,95,54)"/><text x="96.4428%" y="591.50"></text></g><g><title>&lt;std::time::Instant as core::cmp::PartialOrd&gt;::gt (13 samples, 0.01%)</title><rect x="96.5111%" y="581" width="0.0119%" height="15" fill="rgb(248,12,23)"/><text x="96.7611%" y="591.50"></text></g><g><title>&lt;std::sys::unix::time::inner::Instant as core::cmp::PartialOrd&gt;::partial_cmp (13 samples, 0.01%)</title><rect x="96.5111%" y="565" width="0.0119%" height="15" fill="rgb(228,173,4)"/><text x="96.7611%" y="575.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (13 samples, 0.01%)</title><rect x="96.5111%" y="549" width="0.0119%" height="15" fill="rgb(254,99,5)"/><text x="96.7611%" y="559.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (13 samples, 0.01%)</title><rect x="96.5111%" y="533" width="0.0119%" height="15" fill="rgb(212,184,17)"/><text x="96.7611%" y="543.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::Ord for (A,B)&gt;::cmp (12 samples, 0.01%)</title><rect x="96.5121%" y="517" width="0.0110%" height="15" fill="rgb(252,174,1)"/><text x="96.7621%" y="527.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (158 samples, 0.14%)</title><rect x="96.5047%" y="597" width="0.1449%" height="15" fill="rgb(241,118,51)"/><text x="96.7547%" y="607.50"></text></g><g><title>std::time::Instant::now (135 samples, 0.12%)</title><rect x="96.5258%" y="581" width="0.1238%" height="15" fill="rgb(227,94,47)"/><text x="96.7758%" y="591.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (135 samples, 0.12%)</title><rect x="96.5258%" y="565" width="0.1238%" height="15" fill="rgb(229,104,2)"/><text x="96.7758%" y="575.50"></text></g><g><title>std::sys::unix::time::inner::now (135 samples, 0.12%)</title><rect x="96.5258%" y="549" width="0.1238%" height="15" fill="rgb(219,28,31)"/><text x="96.7758%" y="559.50"></text></g><g><title>__clock_gettime (127 samples, 0.12%)</title><rect x="96.5332%" y="533" width="0.1165%" height="15" fill="rgb(233,109,36)"/><text x="96.7832%" y="543.50"></text></g><g><title>__vdso_clock_gettime (123 samples, 0.11%)</title><rect x="96.5368%" y="517" width="0.1128%" height="15" fill="rgb(246,88,11)"/><text x="96.7868%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (227 samples, 0.21%)</title><rect x="96.6854%" y="565" width="0.2082%" height="15" fill="rgb(209,212,17)"/><text x="96.9354%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (227 samples, 0.21%)</title><rect x="96.6854%" y="549" width="0.2082%" height="15" fill="rgb(243,59,29)"/><text x="96.9354%" y="559.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (269 samples, 0.25%)</title><rect x="96.6497%" y="597" width="0.2468%" height="15" fill="rgb(244,205,48)"/><text x="96.8997%" y="607.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock (234 samples, 0.21%)</title><rect x="96.6818%" y="581" width="0.2147%" height="15" fill="rgb(227,30,6)"/><text x="96.9318%" y="591.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (10,283 samples, 9.43%)</title><rect x="87.7491%" y="629" width="9.4336%" height="15" fill="rgb(220,205,48)"/><text x="87.9991%" y="639.50">parking_lot::..</text></g><g><title>parking_lot_core::parking_lot::unpark_requeue (10,278 samples, 9.43%)</title><rect x="87.7537%" y="613" width="9.4290%" height="15" fill="rgb(250,94,14)"/><text x="88.0037%" y="623.50">parking_lot_c..</text></g><g><title>parking_lot_core::parking_lot::unlock_bucket_pair (312 samples, 0.29%)</title><rect x="96.8964%" y="597" width="0.2862%" height="15" fill="rgb(216,119,42)"/><text x="97.1464%" y="607.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::unlock (312 samples, 0.29%)</title><rect x="96.8964%" y="581" width="0.2862%" height="15" fill="rgb(232,155,0)"/><text x="97.1464%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (307 samples, 0.28%)</title><rect x="96.9010%" y="565" width="0.2816%" height="15" fill="rgb(212,24,32)"/><text x="97.1510%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_sub (307 samples, 0.28%)</title><rect x="96.9010%" y="549" width="0.2816%" height="15" fill="rgb(216,69,20)"/><text x="97.1510%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;usize&gt;&gt;&gt; (192 samples, 0.18%)</title><rect x="97.1891%" y="613" width="0.1761%" height="15" fill="rgb(229,73,31)"/><text x="97.4391%" y="623.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (192 samples, 0.18%)</title><rect x="97.1891%" y="597" width="0.1761%" height="15" fill="rgb(224,219,20)"/><text x="97.4391%" y="607.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (192 samples, 0.18%)</title><rect x="97.1891%" y="581" width="0.1761%" height="15" fill="rgb(215,146,41)"/><text x="97.4391%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (189 samples, 0.17%)</title><rect x="97.1918%" y="565" width="0.1734%" height="15" fill="rgb(244,71,31)"/><text x="97.4418%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (189 samples, 0.17%)</title><rect x="97.1918%" y="549" width="0.1734%" height="15" fill="rgb(224,24,11)"/><text x="97.4418%" y="559.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (57 samples, 0.05%)</title><rect x="97.3652%" y="613" width="0.0523%" height="15" fill="rgb(229,76,15)"/><text x="97.6152%" y="623.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (57 samples, 0.05%)</title><rect x="97.3652%" y="597" width="0.0523%" height="15" fill="rgb(209,93,2)"/><text x="97.6152%" y="607.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (57 samples, 0.05%)</title><rect x="97.3652%" y="581" width="0.0523%" height="15" fill="rgb(216,200,50)"/><text x="97.6152%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (53 samples, 0.05%)</title><rect x="97.3689%" y="565" width="0.0486%" height="15" fill="rgb(211,67,34)"/><text x="97.6189%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (53 samples, 0.05%)</title><rect x="97.3689%" y="549" width="0.0486%" height="15" fill="rgb(225,87,47)"/><text x="97.6189%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (196 samples, 0.18%)</title><rect x="97.4258%" y="597" width="0.1798%" height="15" fill="rgb(217,185,16)"/><text x="97.6758%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_add (196 samples, 0.18%)</title><rect x="97.4258%" y="581" width="0.1798%" height="15" fill="rgb(205,0,0)"/><text x="97.6758%" y="591.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::notify_should_wakeup (211 samples, 0.19%)</title><rect x="97.4175%" y="613" width="0.1936%" height="15" fill="rgb(207,116,45)"/><text x="97.6675%" y="623.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Context::run_task (15,552 samples, 14.27%)</title><rect x="83.3887%" y="693" width="14.2674%" height="15" fill="rgb(221,156,26)"/><text x="83.6387%" y="703.50">tokio::runtime::thread..</text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_from_searching (11,217 samples, 10.29%)</title><rect x="87.3656%" y="677" width="10.2904%" height="15" fill="rgb(213,140,4)"/><text x="87.6156%" y="687.50">tokio::runtime:..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::transition_worker_from_searching (11,207 samples, 10.28%)</title><rect x="87.3748%" y="661" width="10.2813%" height="15" fill="rgb(231,224,15)"/><text x="87.6248%" y="671.50">tokio::runtime:..</text></g><g><title>tokio::runtime::thread_pool::worker::Shared::notify_parked (11,150 samples, 10.23%)</title><rect x="87.4271%" y="645" width="10.2290%" height="15" fill="rgb(244,76,20)"/><text x="87.6771%" y="655.50">tokio::runtime:..</text></g><g><title>tokio::runtime::thread_pool::idle::Idle::worker_to_notify (516 samples, 0.47%)</title><rect x="97.1827%" y="629" width="0.4734%" height="15" fill="rgb(238,117,7)"/><text x="97.4327%" y="639.50"></text></g><g><title>tokio::runtime::thread_pool::idle::State::unpark_one (49 samples, 0.04%)</title><rect x="97.6111%" y="613" width="0.0450%" height="15" fill="rgb(235,1,10)"/><text x="97.8611%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (49 samples, 0.04%)</title><rect x="97.6111%" y="597" width="0.0450%" height="15" fill="rgb(216,165,6)"/><text x="97.8611%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_add (49 samples, 0.04%)</title><rect x="97.6111%" y="581" width="0.0450%" height="15" fill="rgb(246,91,35)"/><text x="97.8611%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (56 samples, 0.05%)</title><rect x="98.0377%" y="581" width="0.0514%" height="15" fill="rgb(228,96,24)"/><text x="98.2877%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (56 samples, 0.05%)</title><rect x="98.0377%" y="565" width="0.0514%" height="15" fill="rgb(254,217,53)"/><text x="98.2877%" y="575.50"></text></g><g><title>tokio::loom::std::parking_lot::Mutex&lt;T&gt;::lock (76 samples, 0.07%)</title><rect x="98.0322%" y="629" width="0.0697%" height="15" fill="rgb(209,60,0)"/><text x="98.2822%" y="639.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (76 samples, 0.07%)</title><rect x="98.0322%" y="613" width="0.0697%" height="15" fill="rgb(250,93,26)"/><text x="98.2822%" y="623.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (76 samples, 0.07%)</title><rect x="98.0322%" y="597" width="0.0697%" height="15" fill="rgb(211,9,40)"/><text x="98.2822%" y="607.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (14 samples, 0.01%)</title><rect x="98.0891%" y="581" width="0.0128%" height="15" fill="rgb(242,57,20)"/><text x="98.3391%" y="591.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::pop (198 samples, 0.18%)</title><rect x="98.0203%" y="645" width="0.1816%" height="15" fill="rgb(248,85,48)"/><text x="98.2703%" y="655.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::is_empty (109 samples, 0.10%)</title><rect x="98.1019%" y="629" width="0.1000%" height="15" fill="rgb(212,117,2)"/><text x="98.3519%" y="639.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::len (109 samples, 0.10%)</title><rect x="98.1019%" y="613" width="0.1000%" height="15" fill="rgb(243,19,3)"/><text x="98.3519%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (109 samples, 0.10%)</title><rect x="98.1019%" y="597" width="0.1000%" height="15" fill="rgb(232,217,24)"/><text x="98.3519%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_load (109 samples, 0.10%)</title><rect x="98.1019%" y="581" width="0.1000%" height="15" fill="rgb(224,175,40)"/><text x="98.3519%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (208 samples, 0.19%)</title><rect x="98.0203%" y="677" width="0.1908%" height="15" fill="rgb(212,162,32)"/><text x="98.2703%" y="687.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_task::{{closure}} (208 samples, 0.19%)</title><rect x="98.0203%" y="661" width="0.1908%" height="15" fill="rgb(215,9,4)"/><text x="98.2703%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_task (691 samples, 0.63%)</title><rect x="97.6560%" y="693" width="0.6339%" height="15" fill="rgb(242,42,7)"/><text x="97.9060%" y="703.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_local_task (83 samples, 0.08%)</title><rect x="98.2138%" y="677" width="0.0761%" height="15" fill="rgb(242,184,45)"/><text x="98.4638%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (83 samples, 0.08%)</title><rect x="98.2138%" y="661" width="0.0761%" height="15" fill="rgb(228,111,51)"/><text x="98.4638%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::next_local_task::{{closure}} (83 samples, 0.08%)</title><rect x="98.2138%" y="645" width="0.0761%" height="15" fill="rgb(236,147,17)"/><text x="98.4638%" y="655.50"></text></g><g><title>tokio::runtime::queue::Local&lt;T&gt;::pop (79 samples, 0.07%)</title><rect x="98.2175%" y="629" width="0.0725%" height="15" fill="rgb(210,75,22)"/><text x="98.4675%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (61 samples, 0.06%)</title><rect x="98.2340%" y="613" width="0.0560%" height="15" fill="rgb(217,159,45)"/><text x="98.4840%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_load (61 samples, 0.06%)</title><rect x="98.2340%" y="597" width="0.0560%" height="15" fill="rgb(245,165,53)"/><text x="98.4840%" y="607.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (11 samples, 0.01%)</title><rect x="98.5413%" y="677" width="0.0101%" height="15" fill="rgb(251,190,50)"/><text x="98.7913%" y="687.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::is_empty (32 samples, 0.03%)</title><rect x="98.5707%" y="661" width="0.0294%" height="15" fill="rgb(208,203,29)"/><text x="98.8207%" y="671.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::len (24 samples, 0.02%)</title><rect x="98.5780%" y="645" width="0.0220%" height="15" fill="rgb(207,209,35)"/><text x="98.8280%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (24 samples, 0.02%)</title><rect x="98.5780%" y="629" width="0.0220%" height="15" fill="rgb(230,144,49)"/><text x="98.8280%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_load (24 samples, 0.02%)</title><rect x="98.5780%" y="613" width="0.0220%" height="15" fill="rgb(229,31,6)"/><text x="98.8280%" y="623.50"></text></g><g><title>tokio::runtime::queue::Inject&lt;T&gt;::pop (57 samples, 0.05%)</title><rect x="98.5514%" y="677" width="0.0523%" height="15" fill="rgb(251,129,24)"/><text x="98.8014%" y="687.50"></text></g><g><title>core::num::&lt;impl u16&gt;::wrapping_sub (32 samples, 0.03%)</title><rect x="98.6560%" y="661" width="0.0294%" height="15" fill="rgb(235,105,15)"/><text x="98.9060%" y="671.50"></text></g><g><title>core::num::&lt;impl u16&gt;::wrapping_add (13 samples, 0.01%)</title><rect x="98.8147%" y="645" width="0.0119%" height="15" fill="rgb(216,52,43)"/><text x="99.0647%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (122 samples, 0.11%)</title><rect x="98.8358%" y="645" width="0.1119%" height="15" fill="rgb(238,144,41)"/><text x="99.0858%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (122 samples, 0.11%)</title><rect x="98.8358%" y="629" width="0.1119%" height="15" fill="rgb(243,63,9)"/><text x="99.0858%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (183 samples, 0.17%)</title><rect x="98.9477%" y="645" width="0.1679%" height="15" fill="rgb(246,208,1)"/><text x="99.1977%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_load (183 samples, 0.17%)</title><rect x="98.9477%" y="629" width="0.1679%" height="15" fill="rgb(233,182,18)"/><text x="99.1977%" y="639.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with (47 samples, 0.04%)</title><rect x="99.1156%" y="645" width="0.0431%" height="15" fill="rgb(242,224,8)"/><text x="99.3656%" y="655.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::steal_into2::{{closure}} (47 samples, 0.04%)</title><rect x="99.1156%" y="629" width="0.0431%" height="15" fill="rgb(243,54,37)"/><text x="99.3656%" y="639.50"></text></g><g><title>core::ptr::read (47 samples, 0.04%)</title><rect x="99.1156%" y="613" width="0.0431%" height="15" fill="rgb(233,192,12)"/><text x="99.3656%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (47 samples, 0.04%)</title><rect x="99.1156%" y="597" width="0.0431%" height="15" fill="rgb(251,192,53)"/><text x="99.3656%" y="607.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::steal_into (643 samples, 0.59%)</title><rect x="98.6037%" y="677" width="0.5899%" height="15" fill="rgb(246,141,26)"/><text x="98.8537%" y="687.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::steal_into2 (547 samples, 0.50%)</title><rect x="98.6918%" y="661" width="0.5018%" height="15" fill="rgb(239,195,19)"/><text x="98.9418%" y="671.50"></text></g><g><title>tokio::runtime::queue::unpack (34 samples, 0.03%)</title><rect x="99.1624%" y="645" width="0.0312%" height="15" fill="rgb(241,16,39)"/><text x="99.4124%" y="655.50"></text></g><g><title>tokio::runtime::thread_pool::idle::State::inc_num_searching (150 samples, 0.14%)</title><rect x="99.2220%" y="645" width="0.1376%" height="15" fill="rgb(223,13,53)"/><text x="99.4720%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (150 samples, 0.14%)</title><rect x="99.2220%" y="629" width="0.1376%" height="15" fill="rgb(214,227,0)"/><text x="99.4720%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_add (150 samples, 0.14%)</title><rect x="99.2220%" y="613" width="0.1376%" height="15" fill="rgb(228,103,26)"/><text x="99.4720%" y="623.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::transition_to_searching (185 samples, 0.17%)</title><rect x="99.1945%" y="677" width="0.1697%" height="15" fill="rgb(254,177,53)"/><text x="99.4445%" y="687.50"></text></g><g><title>tokio::runtime::thread_pool::idle::Idle::transition_worker_to_searching (178 samples, 0.16%)</title><rect x="99.2009%" y="661" width="0.1633%" height="15" fill="rgb(208,201,34)"/><text x="99.4509%" y="671.50"></text></g><g><title>tokio::runtime::thread_pool::worker::Core::steal_work (1,186 samples, 1.09%)</title><rect x="98.2900%" y="693" width="1.0880%" height="15" fill="rgb(212,39,5)"/><text x="98.5400%" y="703.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand_n (15 samples, 0.01%)</title><rect x="99.3642%" y="677" width="0.0138%" height="15" fill="rgb(246,117,3)"/><text x="99.6142%" y="687.50"></text></g><g><title>tokio::util::rand::FastRand::fastrand (15 samples, 0.01%)</title><rect x="99.3642%" y="661" width="0.0138%" height="15" fill="rgb(244,118,39)"/><text x="99.6142%" y="671.50"></text></g><g><title>std::panic::catch_unwind (42,228 samples, 38.74%)</title><rect x="60.6528%" y="1125" width="38.7399%" height="15" fill="rgb(241,64,10)"/><text x="60.9028%" y="1135.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (42,228 samples, 38.74%)</title><rect x="60.6528%" y="1109" width="38.7399%" height="15" fill="rgb(229,39,44)"/><text x="60.9028%" y="1119.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (42,228 samples, 38.74%)</title><rect x="60.6528%" y="1093" width="38.7399%" height="15" fill="rgb(230,226,3)"/><text x="60.9028%" y="1103.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (42,228 samples, 38.74%)</title><rect x="60.6528%" y="1077" width="38.7399%" height="15" fill="rgb(222,13,42)"/><text x="60.9028%" y="1087.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (42,228 samples, 38.74%)</title><rect x="60.6528%" y="1061" width="38.7399%" height="15" fill="rgb(247,180,54)"/><text x="60.9028%" y="1071.50">std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (42,228 samples, 38.74%)</title><rect x="60.6528%" y="1045" width="38.7399%" height="15" fill="rgb(205,96,16)"/><text x="60.9028%" y="1055.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (42,228 samples, 38.74%)</title><rect x="60.6528%" y="1029" width="38.7399%" height="15" fill="rgb(205,100,21)"/><text x="60.9028%" y="1039.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closur..</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (42,227 samples, 38.74%)</title><rect x="60.6537%" y="1013" width="38.7389%" height="15" fill="rgb(248,51,4)"/><text x="60.9037%" y="1023.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::task::Notified&lt;S&gt;::run (42,220 samples, 38.73%)</title><rect x="60.6602%" y="997" width="38.7325%" height="15" fill="rgb(217,197,30)"/><text x="60.9102%" y="1007.50">tokio::runtime::task::Notified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (42,220 samples, 38.73%)</title><rect x="60.6602%" y="981" width="38.7325%" height="15" fill="rgb(240,179,40)"/><text x="60.9102%" y="991.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (42,220 samples, 38.73%)</title><rect x="60.6602%" y="965" width="38.7325%" height="15" fill="rgb(212,185,35)"/><text x="60.9102%" y="975.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (42,220 samples, 38.73%)</title><rect x="60.6602%" y="949" width="38.7325%" height="15" fill="rgb(251,222,31)"/><text x="60.9102%" y="959.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (42,220 samples, 38.73%)</title><rect x="60.6602%" y="933" width="38.7325%" height="15" fill="rgb(208,140,36)"/><text x="60.9102%" y="943.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (42,220 samples, 38.73%)</title><rect x="60.6602%" y="917" width="38.7325%" height="15" fill="rgb(220,148,1)"/><text x="60.9102%" y="927.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (42,220 samples, 38.73%)</title><rect x="60.6602%" y="901" width="38.7325%" height="15" fill="rgb(254,4,28)"/><text x="60.9102%" y="911.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (42,220 samples, 38.73%)</title><rect x="60.6602%" y="885" width="38.7325%" height="15" fill="rgb(222,185,44)"/><text x="60.9102%" y="895.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (42,220 samples, 38.73%)</title><rect x="60.6602%" y="869" width="38.7325%" height="15" fill="rgb(215,74,39)"/><text x="60.9102%" y="879.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce..</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (42,220 samples, 38.73%)</title><rect x="60.6602%" y="853" width="38.7325%" height="15" fill="rgb(247,86,4)"/><text x="60.9102%" y="863.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll (42,220 samples, 38.73%)</title><rect x="60.6602%" y="837" width="38.7325%" height="15" fill="rgb(231,105,32)"/><text x="60.9102%" y="847.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (42,220 samples, 38.73%)</title><rect x="60.6602%" y="821" width="38.7325%" height="15" fill="rgb(222,65,35)"/><text x="60.9102%" y="831.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}} (42,220 samples, 38.73%)</title><rect x="60.6602%" y="805" width="38.7325%" height="15" fill="rgb(218,145,35)"/><text x="60.9102%" y="815.50">tokio::runtime::task::core::CoreStage&lt;T&gt;::poll::{{closure}}</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (42,220 samples, 38.73%)</title><rect x="60.6602%" y="789" width="38.7325%" height="15" fill="rgb(208,7,15)"/><text x="60.9102%" y="799.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::futur..</text></g><g><title>tokio::runtime::thread_pool::worker::Launch::launch::{{closure}} (42,220 samples, 38.73%)</title><rect x="60.6602%" y="773" width="38.7325%" height="15" fill="rgb(209,83,13)"/><text x="60.9102%" y="783.50">tokio::runtime::thread_pool::worker::Launch::launch::{{closure}}</text></g><g><title>tokio::runtime::thread_pool::worker::run (42,220 samples, 38.73%)</title><rect x="60.6602%" y="757" width="38.7325%" height="15" fill="rgb(218,3,10)"/><text x="60.9102%" y="767.50">tokio::runtime::thread_pool::worker::run</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (42,220 samples, 38.73%)</title><rect x="60.6602%" y="741" width="38.7325%" height="15" fill="rgb(211,219,4)"/><text x="60.9102%" y="751.50">tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>tokio::runtime::thread_pool::worker::run::{{closure}} (42,220 samples, 38.73%)</title><rect x="60.6602%" y="725" width="38.7325%" height="15" fill="rgb(228,194,12)"/><text x="60.9102%" y="735.50">tokio::runtime::thread_pool::worker::run::{{closure}}</text></g><g><title>tokio::runtime::thread_pool::worker::Context::run (42,220 samples, 38.73%)</title><rect x="60.6602%" y="709" width="38.7325%" height="15" fill="rgb(210,175,7)"/><text x="60.9102%" y="719.50">tokio::runtime::thread_pool::worker::Context::run</text></g><g><title>tokio::runtime::thread_pool::worker::Core::tick (16 samples, 0.01%)</title><rect x="99.3780%" y="693" width="0.0147%" height="15" fill="rgb(243,132,6)"/><text x="99.6280%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (42,229 samples, 38.74%)</title><rect x="60.6528%" y="1189" width="38.7408%" height="15" fill="rgb(207,72,18)"/><text x="60.9028%" y="1199.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (42,229 samples, 38.74%)</title><rect x="60.6528%" y="1173" width="38.7408%" height="15" fill="rgb(236,1,18)"/><text x="60.9028%" y="1183.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (42,229 samples, 38.74%)</title><rect x="60.6528%" y="1157" width="38.7408%" height="15" fill="rgb(227,0,18)"/><text x="60.9028%" y="1167.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (42,229 samples, 38.74%)</title><rect x="60.6528%" y="1141" width="38.7408%" height="15" fill="rgb(247,37,5)"/><text x="60.9028%" y="1151.50">std::thread::Builder::spawn_unchecked::{{closure}}</text></g><g><title>clone (42,236 samples, 38.75%)</title><rect x="60.6473%" y="1237" width="38.7472%" height="15" fill="rgb(237,179,24)"/><text x="60.8973%" y="1247.50">clone</text></g><g><title>start_thread (42,236 samples, 38.75%)</title><rect x="60.6473%" y="1221" width="38.7472%" height="15" fill="rgb(226,53,20)"/><text x="60.8973%" y="1231.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (42,230 samples, 38.74%)</title><rect x="60.6528%" y="1205" width="38.7417%" height="15" fill="rgb(247,75,7)"/><text x="60.9028%" y="1215.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>entry_SYSCALL_64 (173 samples, 0.16%)</title><rect x="99.3991%" y="1237" width="0.1587%" height="15" fill="rgb(233,96,12)"/><text x="99.6491%" y="1247.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (86 samples, 0.08%)</title><rect x="99.5578%" y="1237" width="0.0789%" height="15" fill="rgb(224,125,0)"/><text x="99.8078%" y="1247.50"></text></g><g><title>jemallocator::layout_to_flags (191 samples, 0.18%)</title><rect x="99.6367%" y="1237" width="0.1752%" height="15" fill="rgb(224,92,25)"/><text x="99.8867%" y="1247.50"></text></g><g><title>syscall_return_via_sysret (52 samples, 0.05%)</title><rect x="99.8321%" y="1237" width="0.0477%" height="15" fill="rgb(224,42,24)"/><text x="100.0821%" y="1247.50"></text></g><g><title>tokio::runtime::queue::Steal&lt;T&gt;::steal_into (17 samples, 0.02%)</title><rect x="99.8872%" y="1237" width="0.0156%" height="15" fill="rgb(234,132,49)"/><text x="100.1372%" y="1247.50"></text></g><g><title>tokio::runtime::task::harness::SchedulerView&lt;S&gt;::transition_to_terminal (17 samples, 0.02%)</title><rect x="99.9202%" y="1221" width="0.0156%" height="15" fill="rgb(248,100,35)"/><text x="100.1702%" y="1231.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::complete (61 samples, 0.06%)</title><rect x="99.9092%" y="1237" width="0.0560%" height="15" fill="rgb(239,94,40)"/><text x="100.1592%" y="1247.50"></text></g><g><title>tokio::runtime::task::harness::transition_to_complete (32 samples, 0.03%)</title><rect x="99.9358%" y="1221" width="0.0294%" height="15" fill="rgb(235,139,28)"/><text x="100.1858%" y="1231.50"></text></g><g><title>all (109,004 samples, 100%)</title><rect x="0.0000%" y="1269" width="100.0000%" height="15" fill="rgb(217,144,7)"/><text x="0.2500%" y="1279.50"></text></g><g><title>tokio-runtime-w (93,949 samples, 86.19%)</title><rect x="13.8114%" y="1253" width="86.1886%" height="15" fill="rgb(227,55,4)"/><text x="14.0614%" y="1263.50">tokio-runtime-w</text></g></svg></svg>